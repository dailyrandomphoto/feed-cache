<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Amazing Button Hover Using HTML &amp; CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Sun, 30 May 2021 13:46:44 +0000</pubDate>
      <link>https://dev.to/nikhil27b/amazing-button-hover-using-html-css-4a7f</link>
      <guid>https://dev.to/nikhil27b/amazing-button-hover-using-html-css-4a7f</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;Today I created a Amazing Button Hover Effect Using HTML &amp;amp; CSS. this hover effect is simple but it looks amazing. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/MWpOvKy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create an electron-app using svelte build script included</title>
      <author>Abdallah Mohammed</author>
      <pubDate>Sun, 30 May 2021 13:32:11 +0000</pubDate>
      <link>https://dev.to/abdallahmoh/create-an-electron-app-using-svelte-build-script-included-3kbg</link>
      <guid>https://dev.to/abdallahmoh/create-an-electron-app-using-svelte-build-script-included-3kbg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#first-generate-the-svelte-app"&gt;
  &lt;/a&gt;
  First generate the svelte app
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;install &lt;code&gt;degit&lt;/code&gt; if not installed&lt;code&gt;npm install -g degit&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Setup svelte app using &lt;code&gt;degit sveltejs/template app-name&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cd app-name&lt;/code&gt; and run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;now your svelte app is ready&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#add-electron"&gt;
  &lt;/a&gt;
  Add electron
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;npm install -D electron&lt;/code&gt;&lt;br&gt;
create an &lt;code&gt;index.js&lt;/code&gt; file in the project root&lt;br&gt;
paste code below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { app, BrowserWindow } = require('electron')
const path = require("path");
function createWindow () {
  const win = new BrowserWindow({
    width: 800,
    height: 600
  })

  win.loadFile(path.join(__dirname, 'public/index.html')
}
app.on("ready", createWindow)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now add &lt;code&gt;"main": "index.js"&lt;/code&gt; in your &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
then replace &lt;code&gt;scripts&lt;/code&gt; in package.json with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "build": "rollup -c &amp;amp;&amp;amp; electron-builder",
    "dev": "rollup -c -w",
    "start": "electron .",
    "validate": "svelte-check"
},
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now open terminal and run &lt;code&gt;npm run dev&lt;/code&gt; a window will popup like this &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CA-MpQyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3szftz70riw4lpj02ibh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CA-MpQyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3szftz70riw4lpj02ibh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;to fix this go to &lt;code&gt;public/index.html&lt;/code&gt; file and replace it with this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width,initial-scale=1" /&amp;gt;

    &amp;lt;title&amp;gt;App Name&amp;lt;/title&amp;gt;

    &amp;lt;link rel="stylesheet" href="global.css" /&amp;gt;
    &amp;lt;link rel="stylesheet" href="build/bundle.css" /&amp;gt;

    &amp;lt;script defer src="build/bundle.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;run &lt;code&gt;npm run dev&lt;/code&gt; again and you will get &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wm17NnhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bt4jhgz1r8lsyloc8i4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wm17NnhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bt4jhgz1r8lsyloc8i4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#now-for-building-install-electron-builder"&gt;
  &lt;/a&gt;
  Now for building install electron builder
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;npm i -D electron-builder&lt;/code&gt; &lt;br&gt;
now run &lt;code&gt;npm run build&lt;/code&gt;&lt;br&gt;
wait till command ends and you should get a &lt;code&gt;dist&lt;/code&gt; folder&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CS17B90b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxbrbczrzi3mkbe15x4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CS17B90b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxbrbczrzi3mkbe15x4u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>electron</category>
      <category>svelte</category>
      <category>electronbuilder</category>
    </item>
    <item>
      <title>Lazy-loading React components‚Äîno rocket science</title>
      <author>Amandeep Singh</author>
      <pubDate>Sun, 30 May 2021 13:24:20 +0000</pubDate>
      <link>https://dev.to/aman_singh/lazy-loading-react-components-no-rocket-science-ejn</link>
      <guid>https://dev.to/aman_singh/lazy-loading-react-components-no-rocket-science-ejn</guid>
      <description>&lt;p&gt;Imagine you've been to a caf√© and order a cup of coffee ‚òï. Once the bill üßæ arrives, it isn't only for the coffee you ordered, but all the menu items available in the caf√©. How would you feel? Shocking right!!. It would be unfair to pay for all the items you haven't even ordered. Without arguing, you paid the bill, and never returned to this caf√©.&lt;/p&gt;

&lt;p&gt;Well, that was just an analogy. Let's relate it with our web platform, build with an enormous JavaScript bundle. &lt;/p&gt;

&lt;p&gt;Here, our user is the customer, and we(developers) are the caf√© owners. If our user has only requested the &lt;code&gt;registration/signup&lt;/code&gt; form, would you also send down the rest of the JavaScript bundle(the bill) responsible for the rest of the pages, carrying huge map or date libraries? How would your user feel? Most likely upset or might not come to your website again, right?. The obvious reason is that their first-page load experience would be slow, and the page might take more time to be interactive (&lt;a href="https://web.dev/tti/"&gt;TTI&lt;/a&gt; &amp;amp; &lt;a href="https://web.dev/fid/"&gt;FID&lt;/a&gt;). The browser will keep itself busy parsing the JavaScript, while our users stare at a blank screen with a sad face ‚òπÔ∏è.&lt;/p&gt;

&lt;p&gt;And the sad thing is that our poor user has no clue that it was us, the developers, who could have been more responsible while sending the full JavaScript bundle down to them in one go. &lt;/p&gt;

&lt;p&gt;Welcome to the world of code-splitting where you can lazy-load (dynamically) your JavaScript bundle dynamically, only when the user requested it. The bill you hand over to your user is exactly what they have eaten üòÑ.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#routebased-splitting"&gt;
  &lt;/a&gt;
  Route-based splitting
&lt;/h2&gt;

&lt;p&gt;All modern JavaScript bundlers, like &lt;a href="https://webpack.js.org/guides/code-splitting/"&gt;Webpack&lt;/a&gt;. &lt;a href="https://rollupjs.org/guide/en/#code-splitting"&gt;Rollup&lt;/a&gt;, and &lt;a href=""&gt;parcel&lt;/a&gt;, supports code-splitting feature out of the box. These bundlers can create multiple bundles that can be dynamically loaded at run time, thus improving the web performance for your users. &lt;/p&gt;

&lt;p&gt;Splitting your JavaScript bundle based on the &lt;code&gt;routes/pages&lt;/code&gt; in your app is called route-based code splitting. For example, if you have &lt;code&gt;login&lt;/code&gt; and a home page, you would more likely be splitting the bundle based on these routes. And only send &lt;code&gt;login&lt;/code&gt; page JavaScript when the page loads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;NextJS&lt;/a&gt; provides this route-based splitting feature out of the box. And if you're using &lt;a href="https://reactrouter.com/"&gt;React Router&lt;/a&gt;, &lt;a href="https://reactjs.org/docs/code-splitting.html#route-based-code-splitting"&gt;React-lazy&lt;/a&gt; is your best bet. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#componentbased-splitting"&gt;
  &lt;/a&gt;
  Component-based splitting
&lt;/h2&gt;

&lt;p&gt;With route-based splitting, we've made our users happy. It's time we take an extra step and implement &lt;strong&gt;component-based splitting&lt;/strong&gt;. Let's understand this with an example, followed by a coding exercise to strengthen our concepts. Before you realize it,  it will become a piece of cake for you üç∞. &lt;/p&gt;

&lt;p&gt;Imagine you're building a page to show a rental property. There's a button on this page that opens up a full-page map to show its address. This map component carries a complex functionality and has contributed to a large amount of JavaScript bundle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;JSHeavyMapComponent&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./js-heavy-map-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="c1"&gt;// Property page component&lt;/span&gt;
 &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;showMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShowMap&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Rental&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;showMap&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSHeavyMapComponent&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setShowMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Show&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Would you make this map &lt;em&gt;component&lt;/em&gt; part of your initial property page (route-based) bundle? What if the user never clicks the button, and only views the property metadata? Wouldn't that be a waste of resources to parse all that extra JavaScript causing the slow page load time? &lt;/p&gt;

&lt;p&gt;Yes, it would be unnecessary to send along all this heavy JavaScript bundle in this case. It might cause a heavy toll on mobile users where resources are limited compared to Desktop users. &lt;/p&gt;

&lt;p&gt;This is where the component-based loading comes into the picture and mitigates these issues. With this approach, you can &lt;strong&gt;lazy-load&lt;/strong&gt; the map component, and dynamically serve it when the user actually asks for it (click the button). This will make your &lt;em&gt;property page&lt;/em&gt; lean, improving the overall page-load performance. You can put more effort, and download the component when the user is about to hover the button, saving you an extra microsecond there.&lt;/p&gt;

&lt;p&gt;With the theory aside, we'll see how could you easily implement it in code using the dynamic import feature. We'll see two examples starting with &lt;a href="https://reactjs.org/docs/code-splitting.html#reactlazy"&gt;React.lazy&lt;/a&gt; approach, and then approach to do the same in NextJS projects using &lt;a href="https://nextjs.org/docs/advanced-features/dynamic-import#basic-usage"&gt;dynamic import&lt;/a&gt; feature. &lt;/p&gt;

&lt;p&gt;So, let's get started. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lazyloading-via-reactlazy"&gt;
  &lt;/a&gt;
  Lazy-loading via React.lazy
&lt;/h3&gt;

&lt;p&gt;We need to use React.lazy along with &lt;a href="https://reactjs.org/docs/react-api.html#reactsuspense"&gt;Suspense&lt;/a&gt; to lazy-load our Map component dynamically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Change the old import to use React.lazy&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;JSHeavyMapComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./js-heavy-map-component&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Property page component&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;showMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShowMap&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Rental&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Wrap you dynamic component with Suspense */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showMap&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Suspense&lt;/span&gt; &lt;span class="nx"&gt;fallback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;}&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSHeavyMapComponent&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Suspense&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setShowMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Show&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, with this change, when your property page loads, the browser will not load extra JavaScript for the map component. The loading will only happen when the user hits the &lt;code&gt;Show map&lt;/code&gt; button‚Äîgreat saving with just a couple of lines. Didn't I say that it would your piece of cake üòâ? Here's the &lt;a href="https://codesandbox.io/s/reactlazy-wv8m6"&gt;codesandbox demo&lt;/a&gt;. Download and run the app locally on your computer. Keep an eye on your &lt;code&gt;network&lt;/code&gt; tab when you hit the &lt;code&gt;Show map&lt;/code&gt; button. Here's your &lt;code&gt;lazy-loading&lt;/code&gt; in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t3qfyx0y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd0sirtyxisvm1qxclzq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3qfyx0y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd0sirtyxisvm1qxclzq.gif" alt="Component based code-splitting using React lazy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lazyloading-in-nextjs"&gt;
  &lt;/a&gt;
  Lazy-loading in NextJS
&lt;/h3&gt;

&lt;p&gt;With &lt;a href="https://nextjs.org/docs/advanced-features/dynamic-import"&gt;NextJS&lt;/a&gt;, implementing the dynamic loading is as easy as ABC. Similar to React.lazy API, NextJS has an equivalent &lt;a href="https://nextjs.org/docs/advanced-features/dynamic-import#basic-usage"&gt;dynamic&lt;/a&gt; module, which also let you pass &lt;a href="https://nextjs.org/docs/advanced-features/dynamic-import#with-custom-loading-component"&gt;additional options for loading component&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dynamic&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/dynamic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Change the old import to use NextJS dynamic import&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;JSHeavyMapComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dynamic&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./js-heavy-map-component&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Property page component&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;showMap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShowMap&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Rental&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;showMap&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSHeavyMapComponent&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setShowMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Show&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's the &lt;a href="https://codesandbox.io/s/nextjs-lazy-load-tk5y0"&gt;codesandbox demo&lt;/a&gt; for it if you want to play along.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;My main goal through this article was not only to tell you how to implement the code-splitting (the official docs are great resources for this) but to help you think about why do we need it in the first place. Remember that your beautiful app is of no good use if it takes minutes to load. User is the focus, and we should be mindful of what we send across the wire to the clients. Don't make your users pay the cost for the additional JavaScript. And with such a great set of tooling at our disposal, there's no excuse to &lt;strong&gt;not&lt;/strong&gt; do code-splitting. Your uses will thank you for this. &lt;/p&gt;

&lt;p&gt;Think inclusive, think accessible.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>performance</category>
    </item>
    <item>
      <title>The 5 Community Mantras : Benefits joining a community. </title>
      <author>Loveneesh Dhir</author>
      <pubDate>Sun, 30 May 2021 13:20:15 +0000</pubDate>
      <link>https://dev.to/loveneeshdhir/the-5-community-mantras-things-we-can-learn-from-communities-jf3</link>
      <guid>https://dev.to/loveneeshdhir/the-5-community-mantras-things-we-can-learn-from-communities-jf3</guid>
      <description>&lt;p&gt;Before getting reasons to join a community let's talk about what a community is!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For me community is a group of like minded people who share a common vision/goal. Like a group of developers working on a similar language/OS/platform. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Each and everyone of us is surrounded by many communities. They provide us lots of opportunities but it totally depends on us to how to get the most out of them. In this blog we will be discussing 5 things (Mantras) that you can learn from communities to get the most out of them.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#mantra-1-pushing-limits"&gt;
  &lt;/a&gt;
  Mantra 1 - Pushing Limits üí™üè¢
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PuHxTRbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5ifgel6ikvfi1peszli.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PuHxTRbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5ifgel6ikvfi1peszli.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The most important thing we can learn while being a part of a community is pushing our limits. When we work alone, it‚Äôs often too easy to give up when things get hard or we get stuck at some problem. Being a part of a community we surround ourselves with other people who are also working toward a similar goal or objective, we get motivation, support, and friendly competition to push ourselves a bit further than we would have done on our own. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mantra-2-collective-intelligence"&gt;
  &lt;/a&gt;
  Mantra 2 - Collective Intelligence üß†
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IGriJLvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwa6vohdn70d8l0m4u0f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IGriJLvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwa6vohdn70d8l0m4u0f.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I truly believe that when we work in a community of like-minded people then the collective wisdom of all the community members is way more greater than one person working alone. As we all have heard the bundle of sticks story from our ancestors which teaches us that we can easily break a single stick into pieces, but we can't break the bundle! So, if we work together as a community, our divergent views and lenses mean that we all can approach the exact same problem in a different way and can figure out the best solution for it. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mantra-3-borrow-motivation"&gt;
  &lt;/a&gt;
  Mantra 3 - Borrow Motivation ü§ù
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ms1rr2a0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxju5d546pjki9e84v63.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ms1rr2a0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxju5d546pjki9e84v63.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are some days when our belief in ourselves is dwindling, at that point of time even small things can sound huge. It is the time when we need to lean on our community the most, we can look around and borrow some motivation from the folks and be inspired! I literally had times when my community members believed in me probably more than myself.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mantra-4-be-accountable"&gt;
  &lt;/a&gt;
  Mantra 4- Be Accountable üôã‚Äç‚ôÄÔ∏è
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qf4K0gv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hev4up8ruxvg8rhk0pxt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qf4K0gv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hev4up8ruxvg8rhk0pxt.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think that there are things we would never do if we didn't have people holding us accountable for. Going to the gym, getting some work done, and even getting a bus at time is easier when there's someone waiting for us. Having a community to be accountable for some task is a great thing.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mantra-5-make-connections"&gt;
  &lt;/a&gt;
  Mantra 5 - Make Connections üë¨
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YG6ixi-p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uov3ttirxj4clrupso0.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YG6ixi-p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uov3ttirxj4clrupso0.JPG" alt="Devfest 19 New Delhi"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last but not the least, being a part of community we have an opportunity to meet and interact with a lot of people, make new friends and get to know mentors who can help/guide us with the things that no one taught us in our colleges. The above picture that I attached is from Devfest 2019 where I met a lot  of people made some really good friends and found some amazing mentors (huge shoutout to Arpan Bhaiya if you are reading this) who guided me a lot regarding my careers with their experience in the dev ecosystem. &lt;/p&gt;

&lt;p&gt;This was all from my end. Would love to hear you learnings while being a part of some community in the comments.&lt;/p&gt;



&lt;center&gt;&lt;b&gt;If you liked this article you can support it by Liking ‚ù§Ô∏èand Sharingüîñ&lt;b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/center&gt;

</description>
      <category>leadership</category>
      <category>devrel</category>
      <category>community</category>
      <category>entrepreneurship</category>
    </item>
    <item>
      <title>Efficiency as a Developer - Big O Notation</title>
      <author>Dany Tulumidis</author>
      <pubDate>Sun, 30 May 2021 13:03:46 +0000</pubDate>
      <link>https://dev.to/danytulumidis/efficiency-as-a-developer-big-o-notation-4ffb</link>
      <guid>https://dev.to/danytulumidis/efficiency-as-a-developer-big-o-notation-4ffb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;As developers, we write new algorithms or work on existing ones. And whenever we code something we should ask ourselves multiple questions. One of these questions is:&lt;/p&gt;

&lt;p&gt;How efficient is my code?&lt;/p&gt;

&lt;p&gt;One key element when writing algorithms are data structures and each data structure has its own pros and cons. In this blog article, my goal is to give you an introduction to Big O Notation, why it's very important even when it's not that crucial for your daily job.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-big-o-notation"&gt;
  &lt;/a&gt;
  What is Big O Notation?
&lt;/h1&gt;

&lt;p&gt;Big O Notation in a nutshell: &lt;strong&gt;How the algorithm is performing and how well it scales&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can divide this into 2 forms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Time:&lt;br&gt;
How much time is needed until my algorithm is finished.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Space:&lt;br&gt;
How much space it needs in the RAM.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This really matters when you want to scale your application. Imagine the massive data Google has to process &lt;strong&gt;every day&lt;/strong&gt;.&lt;br&gt;
If you are a Google Engineer Big O should sound very familiar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-notation"&gt;
  &lt;/a&gt;
  The Notation
&lt;/h2&gt;

&lt;p&gt;The notation is the way we can define a algorithm.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;O(1)&lt;/li&gt;
&lt;li&gt;O(n)&lt;/li&gt;
&lt;li&gt;O(n^2)&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are much more but just to give you some examples. These simple terms define  the efficiency of an algorithm. O(1) for examples means that the code always needs the same time. Its constant. &lt;/p&gt;

&lt;p&gt;O(n) is different. n is a variable and defines the input. Imagine you have a for loop and iterate n times where n is for example a user input. The user can always change his/her input. Its &lt;strong&gt;not&lt;/strong&gt; constant.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bigocheatsheet.com/"&gt;Here&lt;/a&gt; is a nice cheat sheet for Big O Notation. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#take-it-easy"&gt;
  &lt;/a&gt;
  Take it easy
&lt;/h1&gt;

&lt;p&gt;Let's be honest. Many of you don't know or don't care about Big O Notation that much. And most of you don't have to. Even i don't give it that much value when writing code most of the time.&lt;/p&gt;

&lt;p&gt;First of all, we have to focus to find a solution to a certain problem before we work on efficiency. &lt;br&gt;
But there are use cases where this is a huge factor. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#more-data-more-problems"&gt;
  &lt;/a&gt;
  More Data, More Problems
&lt;/h1&gt;

&lt;p&gt;As mentioned above if you or your company have to deal with massive amounts of data Big O Notation is crucial. The exact same problem can be solved in 100 ways. 1 of these ways is efficient in terms of Big O and needs 3 seconds. The 99 others need longer, sometimes 1000x more. And the difference between 3 seconds and 3000 seconds is a game-changer.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-learn-big-o"&gt;
  &lt;/a&gt;
  How to learn Big O
&lt;/h1&gt;

&lt;p&gt;If you don't work with a lot of data you don't have to worry about efficiency that much. I really enjoy thinking about different ways to solve one problem and always try to be as efficient as possible. And with that mindset, you can work on your Big O skills without being forced to do it. Who knows, maybe one day you will need it and then you are happy you can do it. &lt;/p&gt;

&lt;p&gt;Also, the &lt;strong&gt;best benefit&lt;/strong&gt; is that you can improve as a developer as you learn more algorithms and data structures and how to use them in your day job.&lt;/p&gt;

&lt;p&gt;I also wrote about these things like Linked Lists and Merge Sort. You can check it out on my blog posts if you are interested.&lt;/p&gt;

&lt;p&gt;Also you can work on your Big O and problem solving skills at the same time at these platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.codewars.com/"&gt;Codewars&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/"&gt;Hackerrank&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I really hope that i explained it in an easy way and that you learned something new!&lt;/p&gt;

&lt;p&gt;Stay connected to me and my content on &lt;a href="https://twitter.com/danytulumidis"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I love to improve myself every single day even if it's just a tiny bit!&lt;/p&gt;

&lt;p&gt;Stay safe and healthy guys!&lt;/p&gt;

&lt;p&gt;And as always: develop yourself!&lt;/p&gt;

</description>
      <category>developers</category>
      <category>datastructures</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Headless-UI "Fully Accessible" - it's not your fault you believe the üí© BS üí©  [accessibility rants]</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 30 May 2021 12:35:11 +0000</pubDate>
      <link>https://dev.to/inhuofficial/headless-ui-fully-accessible-it-s-not-your-fault-you-believe-the-bs-accessibility-rants-582j</link>
      <guid>https://dev.to/inhuofficial/headless-ui-fully-accessible-it-s-not-your-fault-you-believe-the-bs-accessibility-rants-582j</guid>
      <description>&lt;p&gt;In case you haven't read one of these posts before, the anger is just for fun, the message is really important, I am not actually angry! üòÅ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On a side note:&lt;/strong&gt; There is something wrong with you all! üòâ You all seem to like me being angry and ranting at you, people are going to think I am a monster if this carries on! ü§£ Oh and for the 55 people who saw this post yesterday - sorry I mis clicked and posted before it was ready ü§¶‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fully-accessible-what-a-crock-of-sht"&gt;
  &lt;/a&gt;
  "Fully Accessible" - what a crock of sh*t
&lt;/h2&gt;

&lt;p&gt;I have seen loads of people praising headless-UI for accessibility, mentioning it in comments or even writing articles about how accessible it is, just regurgitating the crap they have been fed (you know, like the articles where "React virtual DOM is faster than vanilla JS DOM manipulation"...that sort of crap / poor understanding).&lt;/p&gt;

&lt;p&gt;I mean I don't even blame them for believing it, they say it right on the home page!:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"fully accessible UI components"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and when someone makes a claim with a popular library, of course they aren't full of crap!&lt;/p&gt;

&lt;p&gt;I mean, it isn't like people can just write what they want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-quick-word-from-our-sponsor-magigrow"&gt;
  &lt;/a&gt;
  A quick word from our sponsor, MagiGrow!
&lt;/h3&gt;

&lt;p&gt;So before we continue, let me just tell you about today's sponsor...MagiGrow!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you want bigger boobs?&lt;/strong&gt;&lt;br&gt;
Just apply MagiGrow ointment 3 times a day and you will soon be sooooo front heavy, you might just topple over! &lt;/p&gt;

&lt;p&gt;Nobody will ever talk to your face again!  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you want an ass that just won't quit?&lt;/strong&gt;&lt;br&gt;
Use MagiGrow on your butt and you will cause earthquakes when you twerk!&lt;/p&gt;

&lt;p&gt;You will be that Thicc after using MagiGrow that people will call you "bowl of oatmeal"!!&lt;/p&gt;

&lt;p&gt;Oh and guys, we haven't forgotten you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want a bigger dick?&lt;/strong&gt;&lt;br&gt;
MagiGrow for Men, has got you covered too.&lt;/p&gt;

&lt;p&gt;Apply liberally and you will soon have horses jealous of you! &lt;/p&gt;

&lt;p&gt;Tripod won't even be an accurate name for you as one "leg" will be longer than the other two.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Order today! Only $69.69&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(I mean, I wouldn't just write some random, made up crap to make a point...you do believe me that I am sponsored by MagiGrow and it works don't you!?)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ok-we-get-it-dont-believe-everything-you-read"&gt;
  &lt;/a&gt;
  Ok we get it, don't believe everything you read.
&lt;/h2&gt;

&lt;p&gt;Yeah sorry, the ointment isn't real...and neither are headless-UI's claims.&lt;/p&gt;

&lt;p&gt;Don't believe me? Let me break down the first example they give.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#menudrop-down"&gt;
  &lt;/a&gt;
  Menu-drop down.
&lt;/h3&gt;

&lt;p&gt;Right, first one they showcase, there shouldn't be too many problems with this one surely as they are leading with it?&lt;/p&gt;

&lt;p&gt;They start with a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; (A great start, it is semantically correct...you did read &lt;a href="https://dev.to/inhuofficial/they-just-won-t-learn-a-button-is-a-lt-button-gt-accessibility-rants-k1b"&gt;my rant on buttons&lt;/a&gt; didn't you?).&lt;/p&gt;

&lt;p&gt;They also apply &lt;code&gt;aria-haspopup="true"&lt;/code&gt; (so screen readers can let people know that this opens something up) - looking good so far. &lt;/p&gt;

&lt;p&gt;They even remembered to apply &lt;code&gt;aria-expanded="true"&lt;/code&gt; when the menu is open (so screen readers can let people know that the menu is open). &lt;/p&gt;

&lt;p&gt;And they add &lt;code&gt;aria-controls="idOfTheMenu"&lt;/code&gt; (so screen readers can let people know what this button controls and make associations).&lt;/p&gt;

&lt;p&gt;It looks pretty accessible so far doesn't it! 10 / 10!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-list-is-where-it-all-goes-to"&gt;
  &lt;/a&gt;
  The list is where it all goes to üí©
&lt;/h4&gt;

&lt;p&gt;I mean, first thing is first &lt;strong&gt;why&lt;/strong&gt; if you have a list of buttons would you not use...a LIST.&lt;/p&gt;

&lt;p&gt;It is just a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a load of &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s with buttons in them.&lt;/p&gt;

&lt;p&gt;The list should be a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; containing the buttons. &lt;strong&gt;SE-fucking-MANTICS people&lt;/strong&gt;. We are going to have to remove the semantic information later using &lt;code&gt;role&lt;/code&gt; but we need to start from the right place!&lt;/p&gt;

&lt;p&gt;Instead it is a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with other &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s inside it. (yeah they added some WAI-ARIA, but seriously &lt;strong&gt;why not start with the right elements in the first place!&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;Why does it matter? Because an &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; has a secret super power. It allows screen readers to announce how many options there are ("list with 6 items").  This is really useful information if you can't see and your screen reader doesn't support the WAI-ARIA properties used - graceful degradation!&lt;/p&gt;

&lt;p&gt;Anyway, if the relevant WAI-ARIA is supported it works ok, so a minor point I suppose.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#they-cant-even-use-raw-role-endraw-properly"&gt;
  &lt;/a&gt;
  They can't even use &lt;code&gt;role&lt;/code&gt; properly
&lt;/h5&gt;

&lt;p&gt;Next thing - on the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s (that should be &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;) they apply &lt;code&gt;role="none"&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;They obviously haven't even read the &lt;a href="https://www.w3.org/TR/wai-aria-1.1/#none"&gt;WAI-ARIA spec as the editor note says &lt;strong&gt;not to use &lt;code&gt;role="none"&lt;/code&gt; yet&lt;/strong&gt; (use &lt;code&gt;role="presentation"&lt;/code&gt; or `role="none presentation")&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I can't blame them too much for this one though - &lt;a href="https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html"&gt;even WCAG guidance can't get this right&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I mean, you didn't think you can just copy and paste official WCAG recommendations did you? Of course not, loads of their examples don't follow their own best practices.&lt;/p&gt;

&lt;p&gt;A lot of them show how to take semantically incorrect elements and apply the correct semantics to them (instead of using semantically correct elements and &lt;strong&gt;enhancing them&lt;/strong&gt; or better yet having a big warning that says "you don't need to use &lt;code&gt;aria&lt;/code&gt; for this anymore, HTML5 has you covered"), loads of them are outdated and some of them are just plain wrong - don't worry &lt;a href="https://dev.to/inhuofficial/w1y-d2s-a11y-h2e-to-be-so-b4y-c9d-a1d-i10e-38no"&gt;I have included WCAG in my rants before&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Anyway, I am not docking any points for this one, in a few years it will be usable for everybody, they technically followed the spec and they probably just looked at some examples which misguided them.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#why-are-they-interfering-in-keyboard-controls-they-shouldnt"&gt;
  &lt;/a&gt;
  Why are they interfering in keyboard controls they shouldn't?
&lt;/h5&gt;

&lt;p&gt;Next issue (and now we are getting to ones that do matter): you can't Tab out of the menu...this isn't a bloody modal. Once the menu is open you can't Tab to the next control. &lt;/p&gt;

&lt;p&gt;What the hell are they thinking? &lt;/p&gt;

&lt;p&gt;Was it too difficult for their little brains to work out how to close the menu if it didn't have focus anymore? &lt;/p&gt;

&lt;p&gt;It isn't like they made it so you can Tab to the next item in the menu itself, so they effectively just removed functionality for no reason.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#and-why-cant-they-follow-simple-patterns-for-keyboard-controls"&gt;
  &lt;/a&gt;
  And why can't they follow simple patterns for keyboard controls?
&lt;/h5&gt;

&lt;p&gt;Then there is the cycling of items in the menu. &lt;/p&gt;

&lt;p&gt;If I press the up arrow when the menu opens (or when I have the first item in the list highlighted) it should go to the last item in the list. &lt;strong&gt;It doesn't.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Same with if you are on the last item in the list and press the down arrow, it should cycle to the first item. &lt;strong&gt;It doesn't&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Or what about the fact that you should be able to jump to items based on their first letter. &lt;/p&gt;

&lt;p&gt;I press d it jumps to "duplicate"...as expected. I press d again and - it does nothing. It should jump to "delete". &lt;strong&gt;It doesn't&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That last one is even more painful as they "half arsed" the solution. You don't &lt;strong&gt;have&lt;/strong&gt; to have this feature but they decided to implement it as it is recommended. But their incorrect implementation can cause massive confusion if the menu is dynamic. &lt;/p&gt;

&lt;p&gt;For example: if "delete" is sometimes disabled (as it isn't applicable at that time) I might press d a couple of times, find it doesn't cycle to delete as expected and think "oh, I obviously can't delete this item". &lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#waiaria-is-not-a-fix-for-everything-in-fact-it-is-a-last-resort"&gt;
  &lt;/a&gt;
  WAI-ARIA is not a fix for everything, in fact it is a last resort!
&lt;/h5&gt;

&lt;p&gt;Finally, because of their massive over-reliance on WAI-ARIA to correct their crappy HTML this is likely to not be particularly &lt;strong&gt;Robust&lt;/strong&gt;, which is what R stands for in the &lt;a href="https://uiowa.instructure.com/courses/40/pages/accessibility-principles-pour"&gt;WCAG principles known as POUR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.powermapper.com/tests/screen-readers/aria/"&gt;WAI-ARIA is like CSS - it isn't universally supported&lt;/a&gt;, and &lt;a href="https://a11ysupport.io/"&gt;there are loads of compatibility issues&lt;/a&gt;, so you need to use it with graceful degradation in mind. &lt;/p&gt;

&lt;p&gt;But hey, that is just one component, maybe we can do better with some of the others.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#listbox-select"&gt;
  &lt;/a&gt;
  Listbox (select)
&lt;/h3&gt;

&lt;p&gt;Ah they can't possibly get this one wrong.&lt;/p&gt;

&lt;p&gt;I mean, other than the fact that you can press Space to select an item, which is really weird (because they used &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements that accept both space and enter to activate them) I can't spot many new issues we hadn't seen previously.&lt;/p&gt;

&lt;p&gt;Obviously they treat it like a modal again, disabling Tab for no reason.&lt;/p&gt;

&lt;p&gt;Oh and I can't just change options using the arrow keys like I should be able to, pressing up or down opens the list (which is fine if you can tab out of the list and it remembers what item you had used the arrows to get to) but they have that annoying Tab issue, so I have to press Enter or Space to close the list before I can move on.&lt;/p&gt;

&lt;p&gt;You know what - it is passable, I will put the angry man away for a minute as I have seen far worse attempts.&lt;/p&gt;

&lt;p&gt;However - if you can, for one second, imagine coping with your design not being pixel perfect do you know what is &lt;em&gt;even&lt;/em&gt; better than their implementation...a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element. It...just...works. &lt;/p&gt;

&lt;p&gt;Hell I blame browser vendors for this one, if they just added the option to style the drop-down part hardly anybody would be trying to build their own!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#other-components"&gt;
  &lt;/a&gt;
  Other components
&lt;/h3&gt;

&lt;p&gt;Look I am already exhausted, I have already made my point. &lt;/p&gt;

&lt;p&gt;But because I know the Tailwind zealots are going to want to defend their precious cult, let me just list a few more issues in short hand to drive the message home:&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#switch-toggle"&gt;
  &lt;/a&gt;
  Switch (toggle)
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/#affects_on_sr"&gt;&lt;code&gt;role="switch"&lt;/code&gt; only has about 80% support&lt;/a&gt; - which would be fine but they start building the component from a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; (why, WHY! I tell you why - &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Switch_role"&gt;even MDN uses a fucking button as the base for a switch&lt;/a&gt;). Using a &lt;code&gt;checkbox&lt;/code&gt; would be a better base.&lt;/p&gt;

&lt;p&gt;Also - by using a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; as the base how do they expect you to add an associated &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; that is visible? If the switch &lt;code&gt;role&lt;/code&gt; is supported you can use &lt;code&gt;for="idofswitch"&lt;/code&gt; but if it isn't supported, this association doesn't work. &lt;/p&gt;

&lt;p&gt;Screen readers might handle this quite well but Dragon Naturally Speaking (which a lot of people rely on) &lt;a href="https://a11ysupport.io/tech/html/label_element"&gt;can't even handle correctly marked up semantic &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements&lt;/a&gt; - it really won't stand a chance with this pattern.&lt;/p&gt;

&lt;p&gt;Anyway, we could always add some visually hidden (screen reader only) text to the button I suppose.&lt;/p&gt;

&lt;p&gt;Obviously you still need a visible label, but you could just add text above the switch to solve that couldn't you?&lt;/p&gt;

&lt;p&gt;Well you could, but then what happens when someone who needs a larger tap target (i.e. someone with Cerebral Palsy or Parkinson's disease who may have accuracy issues) tries to click on the "label" to activate the control. &lt;/p&gt;

&lt;p&gt;In case you were wondering, that is expected behaviour, clicking a label checks a checkbox and a switch is essentially just a fancy checkbox...ah who cares, there are only a few &lt;strong&gt;million&lt;/strong&gt; people with conditions that cause accuracy issues who rely on good design in the world, we can ignore them.&lt;/p&gt;

&lt;p&gt;But it also helps with WCAG compliance. The headless-UI toggle example does not comply with &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/target-size.html"&gt;tap target size requirements of 44 css pixels&lt;/a&gt; (it is close though at 38px tall) - but as that is a styling issue I also can't dock any points. &lt;/p&gt;

&lt;p&gt;However if it had a properly associated label, that can be included in the tap target area and their example would be fine. &lt;/p&gt;

&lt;p&gt;But they used a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, so it won't work properly without WAI-ARIA..it is a shame, they were so close to not fucking this one up!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#disclosure-component"&gt;
  &lt;/a&gt;
  Disclosure component
&lt;/h4&gt;

&lt;p&gt;I mean, most would call this an accordion but hey, who am I to judge on naming components, let's call it "magic expandy thingy" from now on. I don't want things to be clear for anyone.&lt;/p&gt;

&lt;p&gt;So with the "Magic Expandy Thingy (MET)" they have used buttons and all sorts of crap...I haven't even looked if they have done that correctly...I really can't be arsed.&lt;/p&gt;

&lt;p&gt;Why? &lt;/p&gt;

&lt;p&gt;Well because we have this fantastic, super modern technology called HTML5. Don't worry if you haven't come across HTML5 before, it only came out in 2008, it is still quite new!&lt;/p&gt;

&lt;p&gt;In the HTML 5 spec are a super secret pair of elements. &lt;/p&gt;

&lt;p&gt;So secret that they cleverly hid them as the &lt;a href="https://www.w3.org/TR/html52/interactive-elements.html#interactive-elements"&gt;first item mentioned under Interactive Elements section&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Nobody could possibly find them!&lt;/p&gt;

&lt;p&gt;These secret elements are &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary"&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/a&gt;. I mean, to be fair to headless-UI, MDN call the summary element the "HTML Disclosure Summary element" - so perhaps their naming of the pattern was based on that? But then that would mean they know about the elements...and chose to ignore them...ah forget it, I can't work out what they are thinking!&lt;/p&gt;

&lt;p&gt;Here - try it for yourself, I am sick of explaining things to you, no CSS, no JS and it just works (unlike the liquid tag for this fiddle it seems, can somebody see what is wrong with it, it was working before I made a minor edit &lt;strong&gt;see the comment after the article for the fiddle&lt;/strong&gt;):&lt;/p&gt;

&lt;p&gt;{% jsfiddle &lt;a href="https://jsfiddle.net/8pt23eLy"&gt;https://jsfiddle.net/8pt23eLy&lt;/a&gt; result html %}&lt;/p&gt;

&lt;p&gt;Now if you want to go and add your 47 utility classes to that - you can, &lt;a href="https://caniuse.com/details"&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; will work in 96.6% of browsers&lt;/a&gt; and even degrade gracefully in IE (not that it matters, if you think headless-UI is accessible you won't support IE anyway, probably saying things like: "it's End Of Life (EOL) bro"...so who gives a shit?)&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#dialog-modal"&gt;
  &lt;/a&gt;
  Dialog (modal)
&lt;/h4&gt;

&lt;p&gt;Oh I am excited to see this one. I mean just read the blurb on the site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A fully-managed, renderless dialog component &lt;strong&gt;jam-packed with accessibility and keyboard features&lt;/strong&gt;, perfect for building completely custom modal and dialog windows for your next application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is "Jam-packed" with accessibility and keyboard features, exciting!&lt;/p&gt;

&lt;p&gt;Ok so when the modal is open it applies &lt;code&gt;aria-hidden="true"&lt;/code&gt; to all other content on the page right? It adds &lt;code&gt;tabindex="-1"&lt;/code&gt; to all other interactive elements on the page so they are inactive right?&lt;/p&gt;

&lt;p&gt;Does it fuck.&lt;/p&gt;

&lt;p&gt;You see they think that keyboard users only use Tab. &lt;/p&gt;

&lt;p&gt;They haven't even laid eyes on a screen reader, never mind used one.&lt;/p&gt;

&lt;p&gt;In a screen reader you don't navigate with Tab, you navigate with arrow keys, the numbers 1-6 (to jump to headings), k (to cycle through links) etc. etc. &lt;/p&gt;

&lt;p&gt;Their modal traps focus to the same level of success as the rest of their "accessible" library - it doesn't, it isn't, they failed. I can get to everything on the page with a screen reader and not even know that there is a modal. &lt;/p&gt;

&lt;p&gt;I didn't even take the time to see if this returns focus to the button that activated it when it is closed, someone please tell me they at least implemented that?&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#radio-group"&gt;
  &lt;/a&gt;
  Radio Group
&lt;/h4&gt;

&lt;p&gt;Yeah I know, I skipped "popover" - couldn't even be bothered as it is essentially the same as a modal so all the same problems will be there. So I moved onto radio group.&lt;/p&gt;

&lt;p&gt;I can't even be bothered here either to be fair as the first thing I saw was &lt;code&gt;&amp;lt;div role="radio"&lt;/code&gt;. Honestly what is wrong with using a &lt;strong&gt;fucking &lt;code&gt;&amp;lt;input type="radio"&lt;/code&gt; for a fucking radio group&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That is it, I am done, fanito, finished...headless-UI is obviously written by a load of fucking amateurs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Yet again, the anger is for fun. &lt;/p&gt;

&lt;p&gt;In reality the headless-UI library does a better job than a lot of libraries when it comes to accessibility, and I applaud any company who is at least &lt;em&gt;trying&lt;/em&gt; to make things accessible. &lt;/p&gt;

&lt;p&gt;And to further defend them half of the issues they have are because guidance is just a mess.&lt;/p&gt;

&lt;p&gt;I just get annoyed with the "fully accessible" crap they keep saying. &lt;/p&gt;

&lt;p&gt;I understand that in marketing "bigging yourself up" is essential, but this is too far and is misleading people.&lt;/p&gt;

&lt;p&gt;If they just said "accessibility focused" library I would think "Yeah, not a bad job, few issues, but on the right track at least".&lt;/p&gt;

&lt;p&gt;But no, they are leading developers into thinking that they can just drag and drop their components into their application and they will be WCAG compliant. That people with disabilities will be able to use their website without any issues. &lt;strong&gt;They won't&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you take anything away from this article, don't believe the crap that companies feed you.&lt;/p&gt;

&lt;p&gt;Research it yourself, question everything (including questioning me, a couple of issues in this article are really minor, that is the problem with angry rants, it is hard to judge where the big problems are rather than minor ones). &lt;/p&gt;

&lt;p&gt;And that isn't just headless-UI, there are a lot of these "accessible" libraries and templates that...aren't!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#would-you-use-headlessui-though-after-all-that-putting-your-nonangry-head-on"&gt;
  &lt;/a&gt;
  Would you use headless-ui though after all that, putting your "non-angry head" on?
&lt;/h3&gt;

&lt;p&gt;No, I wouldn't use it personally (at time of writing) and no that isn't because I am on the "not a TailWind fan" side of the fence. &lt;/p&gt;

&lt;p&gt;They don't use semantically correct HTML as the base and if you want an accessible library - you gotta start with the basics (using the right native elements for the job) and progressively enhance them.&lt;/p&gt;

&lt;p&gt;With that being said, the real question is:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#if-i-know-nothing-about-accessibility-should-i-use-it"&gt;
  &lt;/a&gt;
  "If &lt;strong&gt;I&lt;/strong&gt; know nothing about accessibility, should &lt;strong&gt;I&lt;/strong&gt; use it".
&lt;/h3&gt;

&lt;p&gt;I would actually say yes üò≤, it will be more accessible than something you try and build yourself (for everything other than the "disclosure" item, just use &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; as I said - they dropped the ball with that one!).&lt;/p&gt;

&lt;p&gt;Just don't go advocating for it's use like it is perfect! &lt;/p&gt;

&lt;p&gt;And if you aren't looking for a quick fix and actually want to make your site "a great experience for people who rely on assistive technology" rather than "compliant with WCAG" then there are much better options.&lt;/p&gt;

&lt;p&gt;Don't worry, there are plenty more rants left in me that will cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;little known libraries that do a much better job on accessibility. &lt;/li&gt;
&lt;li&gt;a rant or two on the difference between a compliance mindset and a great experience mindset when thinking about accessibility. &lt;/li&gt;
&lt;li&gt;rants on individual components such as custom select, checkbox and radio, menus etc. wherever I see terrible examples getting lots of upvotes, a rant will emerge I have no doubt ü§£.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Give me a follow for that (and some more serious tutorial style posts and proper discussions on things....all coming soon!)&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__551686"&gt;
  
    .ltag__user__id__551686 .follow-action-button {
      background-color: #c62aa4 !important;
      color: #131111 !important;
      border-color: #c62aa4 !important;
    }
  
    &lt;a href="/inhuofficial" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/inhuofficial"&gt;InHuOfficial&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/inhuofficial"&gt;Specialising in accessibility and website load speed / performance. If you have a question about [accessibility] or [page-speed-insights] ask away and I will help any way I can!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And finally, I will happily return to this article if they improve things and change my opinion!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-the-algo"&gt;
  &lt;/a&gt;
  For the Algo!
&lt;/h2&gt;

&lt;p&gt;My new sign off experiment! &lt;/p&gt;

&lt;p&gt;If you enjoyed this article, give it a ‚ù§, if you thought it was special give it a ü¶Ñ and above all, don't forget:&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Leave a comment for the algorithm! Even if it is just to tell me to stop being so angry üòâ! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh and if you are a Tailwind evangelist...sorry that I attacked your religion, you will be OK don't worry! Leave a comment defending it by all means!&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Solution: Maximum Gap</title>
      <author>seanpgallivan</author>
      <pubDate>Sun, 30 May 2021 12:28:50 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-maximum-gap-212k</link>
      <guid>https://dev.to/seanpgallivan/solution-maximum-gap-212k</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/maximum-gap/discuss/1240838"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-164-hard-maximum-gap"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/maximum-gap/"&gt;Leetcode Problem #164 (&lt;em&gt;Hard&lt;/em&gt;): Maximum Gap&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt;, return &lt;em&gt;the maximum difference between two successive elements in its sorted form&lt;/em&gt;. If the array contains less than two elements, return &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You must write an algorithm that runs in linear time and uses linear extra space.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [3,6,9,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [10]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The array contains less than 2 elements, therefore return 0.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt;= 10^9&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;For this problem, we don't need to actually sort every element, which would take longer than &lt;strong&gt;O(N) time&lt;/strong&gt;. What we need to do is to find a way to group together numbers in such a way as to allow us to check the larger gaps between consecutive numbers. For this, we can turn to a &lt;strong&gt;bucket sort&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A bucket sort involves creating an array (&lt;strong&gt;buckets&lt;/strong&gt;) in which the elements represent buckets that cover the spread of the numbers to be sorted. Imagine trying to sort a deck of cards; it would only take once through the deck to sort it entirely into &lt;strong&gt;13&lt;/strong&gt; "buckets", one for each value. Then we could go through the individual buckets and perform another, smaller sort before joining the entire deck together.&lt;/p&gt;

&lt;p&gt;In this situation, however, we only need to perform the first part of the bucket sort. The idea is to define the size of our buckets such that the maximum gap will necessarily be larger than a single bucket. That would mean that our answer could then be found by comparing the highest value in each bucket with the lowest value in the next occupied bucket.&lt;/p&gt;

&lt;p&gt;To achieve the right bucket size (&lt;strong&gt;bsize&lt;/strong&gt;) for this to work, we'll need to iterate through &lt;strong&gt;nums&lt;/strong&gt; once to find the total range (&lt;strong&gt;hi - lo&lt;/strong&gt;), then use that to figure out the absolute smallest possible maximum gap value (&lt;strong&gt;(hi - lo) / (nums.length - 1)&lt;/strong&gt;). If we make sure to define the bucket size &lt;em&gt;smaller&lt;/em&gt; than this value, then as stated earlier, the two numbers that form the maximum gap will have to be found in separate buckets.&lt;/p&gt;

&lt;p&gt;Since there are exactly &lt;strong&gt;N&lt;/strong&gt; numbers spread throughout the buckets, and since it only requires a single iteration of each number in a bucket to observe the local high and lo values (&lt;strong&gt;currhi, currlo&lt;/strong&gt;), then it will take a total of &lt;strong&gt;O(N) time&lt;/strong&gt; to perform this process for the entire &lt;strong&gt;buckets&lt;/strong&gt; array. And since we only need to make one comparison per pair of buckets with consecutive numbers, and as there are only a maximum of &lt;strong&gt;2 * N&lt;/strong&gt; buckets, the comparisons will only take &lt;strong&gt;O(N) time&lt;/strong&gt;, as well.&lt;/p&gt;

&lt;p&gt;We'll just need to make sure that we remember the previous occupied bucket's high value (&lt;strong&gt;prevhi&lt;/strong&gt;) for the next comparison, as well as keeping track of the best result found so far (&lt;strong&gt;ans&lt;/strong&gt;). Then, once we reach the end of our &lt;strong&gt;buckets&lt;/strong&gt; array, we can simply &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;nums&lt;/strong&gt;&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;finding &lt;strong&gt;hi&lt;/strong&gt; and &lt;strong&gt;lo&lt;/strong&gt; in &lt;strong&gt;nums&lt;/strong&gt;: &lt;strong&gt;O(N)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;fill &lt;strong&gt;buckets&lt;/strong&gt;: &lt;strong&gt;O(N)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;finding all bucket &lt;strong&gt;hi&lt;/strong&gt;'s and &lt;strong&gt;lo&lt;/strong&gt;'s: &lt;strong&gt;O(N)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;comparing all bucket gaps: &lt;strong&gt;O(N)&lt;/strong&gt; for up to &lt;strong&gt;2 * N&lt;/strong&gt; buckets&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for &lt;strong&gt;N&lt;/strong&gt; numbers spread among at most &lt;strong&gt;2 * N&lt;/strong&gt; buckets&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maximumGap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;e9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;lo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;buckets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;bsize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;bsize&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prevhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="nx"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currhi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currlo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;prevhi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maximumGap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;bsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;buckets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="n"&gt;prevhi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="n"&gt;currhi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currhi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currlo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;prevhi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;maximumGap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MAX_VALUE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;buckets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--)&lt;/span&gt;
            &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;());&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isEmpty&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;prevhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currhi&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currlo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;prevhi&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maximumGap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;bsize&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;prevhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;currhi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currhi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currlo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currlo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;prevhi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>TCP, UDP or QUIC? Read this before you choose.</title>
      <author>Pieter D</author>
      <pubDate>Sun, 30 May 2021 12:28:48 +0000</pubDate>
      <link>https://dev.to/pieter/tcp-udp-or-quic-read-this-before-you-choose-432e</link>
      <guid>https://dev.to/pieter/tcp-udp-or-quic-read-this-before-you-choose-432e</guid>
      <description>&lt;p&gt;If you're writing an application that sends data over a network, you have an important choice to make. How will it communicate? In some cases you can - and probably should! - reuse an existing application-layer protocol like HTTP. But maybe you need something specialized to your needs.&lt;/p&gt;

&lt;p&gt;In this case you'll be writing your own application-layer protocol. Your new protocol will build on either TCP, UDP or QUIC. Which one should you pick and why?&lt;/p&gt;

&lt;p&gt;For some animations to help you grasp the differences between the three protocols, you might want to watch this:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/y8xHJJWwJt4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;What your best choice is depends on the nature of your application. Here are some important considerations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TCP and UDP are well-established protocols that are pretty mature. QUIC is a relatively new alternative to TCP that may outperform it, but its development is still &lt;a href="https://datatracker.ietf.org/doc/html/rfc9000"&gt;ongoing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;TCP and QUIC provide reliable data transfer. This means you can be reasonably sure that what you send comes out correctly on the receiver's end. UDP provides no such guarantees. Data may be delivered in a different order, parts of your message may get lost, or data may be delivered to your application in a corrupted state.&lt;/li&gt;
&lt;li&gt;UDP provides the lowest possible lag because it doesn't have to provide any reliability guarantees. TCP and QUIC negotiate a connection before sending data, and may delay sending new data as they await delivery confirmations from the receiver.&lt;/li&gt;
&lt;li&gt;Unlike TCP, UDP is able to support multicast and broadcast transmissions.&lt;/li&gt;
&lt;li&gt;QUIC provides encryption out of the box. For TCP connections you can use TLS 1.3 with some additional setup. UDP transmissions can use DTLS.&lt;/li&gt;
&lt;li&gt;If your application maintains open connections over a longer period, they may get disrupted when your users switch between WiFi, Ethernet and cell towers. QUIC has an edge here: its connection migration feature can handle those network switches.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>networking</category>
      <category>tcp</category>
      <category>udp</category>
      <category>quic</category>
    </item>
    <item>
      <title>A headache named default style in¬†CSS</title>
      <author>Alireza Hamid</author>
      <pubDate>Sun, 30 May 2021 12:15:48 +0000</pubDate>
      <link>https://dev.to/alirezahamid/a-headache-named-default-style-element-in-css-179j</link>
      <guid>https://dev.to/alirezahamid/a-headache-named-default-style-element-in-css-179j</guid>
      <description>&lt;p&gt;At least once, Front-end developers tackled default style in their projects and professional life. And also, swearing at CSS creator or Google Chrome and so on as well. So how we can get rid of this nightmare? Is any easy peasy lemon squeezy way to solve the problem?&lt;br&gt;
Yes, this Is the short answer to this question. But how? In this short article or whatever you named, I will introduce how you can reset all the user agent and default styles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-the-default-style-comes-from"&gt;
  &lt;/a&gt;
  Where the default style comes from?
&lt;/h2&gt;

&lt;p&gt;Before understanding the solution, it's important to understand where we get our basic styles in our browser.&lt;br&gt;
All the properties in CSS come with &lt;code&gt;initial&lt;/code&gt; value to load the default style of each property. And this is NOT related to HTML.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-useragent-browser-styles"&gt;
  &lt;/a&gt;
  The User-Agent Browser Styles
&lt;/h2&gt;

&lt;p&gt;After applying the initial styles of all the CSS properties, the browser finally loads its default styles which are known as &lt;code&gt;user-agent&lt;/code&gt;. These styles have nothing to do with the base initial values of the CSS properties.&lt;/p&gt;

&lt;p&gt;Also, you can see them in the Chrome developer tools.&lt;/p&gt;

&lt;p&gt;For Example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Q-E0r9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlnhpzj706yhv8vs395q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Q-E0r9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlnhpzj706yhv8vs395q.png" alt="1_user-agent"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML elements do not have initial style values! The basic styles of an HTML element, such as the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag, for example, comes from the browser user agent stylesheet and not from the &lt;code&gt;initial&lt;/code&gt; value of the properties of CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-now-lets-to-talk-about-the-solution"&gt;
  &lt;/a&gt;
  And now lets to talk about the solution
&lt;/h2&gt;

&lt;p&gt;To reset all the &lt;code&gt;user-agent&lt;/code&gt; styles, you can easily use &lt;code&gt;all:unset&lt;/code&gt; property for each element in the CSS.&lt;br&gt;
For example: &lt;code&gt;h1{all:unset}&lt;/code&gt;&lt;br&gt;
There are different values for &lt;code&gt;all&lt;/code&gt; like &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;inherit&lt;/code&gt; which you can read about them more in the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/all"&gt;developer.mozilla.org&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#browser-support"&gt;
  &lt;/a&gt;
  Browser Support
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;inherit&lt;/code&gt;‚Ää-‚Ääworks in all browsers, including Internet Explorer 11&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;initial&lt;/code&gt; &amp;amp; &lt;code&gt;unset&lt;/code&gt; &amp;amp; &lt;code&gt;revert&lt;/code&gt;- work in all browsers except for Internet Explorer 11&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;That's all.&lt;br&gt;
I hope you've enjoyed this article and learned from my experience.&lt;br&gt;
If you like this post, I would appreciate applause and sharing¬†:-)&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
      <category>web</category>
    </item>
    <item>
      <title>Day 11/30 : Custom Radio Buttons using HTML and CSS</title>
      <author>Somanath Goudar</author>
      <pubDate>Sun, 30 May 2021 12:14:43 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/day-11-30-custom-radio-buttons-using-html-and-css-2ff</link>
      <guid>https://dev.to/somanathgoudar/day-11-30-custom-radio-buttons-using-html-and-css-2ff</guid>
      <description>&lt;p&gt;Welcome to Day 11 of this &lt;a href="https://dev.to/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1"&gt;Challenge&lt;/a&gt;. This is what I created today. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚ûú Here is the Demo :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FHWj6YUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-YaD0CjeewSQ/YKSz9Vj-vkI/AAAAAAAAAEY/V1JouxUYK7MsBfdOXPxiShfid2UNX2hFwCLcBGAsYHQ/s600/11.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHWj6YUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-YaD0CjeewSQ/YKSz9Vj-vkI/AAAAAAAAAEY/V1JouxUYK7MsBfdOXPxiShfid2UNX2hFwCLcBGAsYHQ/s600/11.gif" alt="Custom Radio Buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚ûú Video Tutorial :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ixx5hctmhFU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;strong&gt;‚ûú Source Code :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.mrwebwolf.com/2021/05/how-to-create-custom-radio-buttons-with.html"&gt;https://www.mrwebwolf.com/2021/05/how-to-create-custom-radio-buttons-with.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚ûú Instagram Post and Reel for Day 11 :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/future_coderss/"&gt;See Post and Reel&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Hey, If You don't know what is happening here. Don't Worry, I am doing a crazy challenge üòÖ. Read More about it from the post below.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;ü§Ø 30DaysChallenge - 30 Days Extreme HTML &amp;amp; CSS CHALLENGE ü§Ø&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar „Éª May 19 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#30daysofcode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Support Me :&lt;/strong&gt;&lt;br&gt;
üëâ Buy me a Coffee: &lt;a href="https://www.buymeacoffee.com/somanathgoudar"&gt;https://www.buymeacoffee.com/somanathgoudar&lt;/a&gt;&lt;br&gt;
üëâ &lt;a href="https://www.instagram.com/somanath_goudar/"&gt;Follow Me on Instagram&lt;/a&gt;&lt;br&gt;
üëâ &lt;a href="https://www.instagram.com/future_coderss/"&gt;Follow Future Coders on Instagram&lt;/a&gt;&lt;br&gt;
üëâ &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;Subscribe to My Main Channel&lt;/a&gt;&lt;br&gt;
üëâ &lt;a href="https://www.youtube.com/channel/UCzGSyMOf2jPt1MkNBB3SJ3g"&gt;Subscribe to Channel Created for this Challenge&lt;/a&gt;&lt;/p&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Marketing Your Mobile App, The Steps For Continued Success</title>
      <author>Krowser Web Services </author>
      <pubDate>Sun, 30 May 2021 11:51:50 +0000</pubDate>
      <link>https://dev.to/krowser/marketing-your-mobile-app-the-steps-for-continued-success-4bk3</link>
      <guid>https://dev.to/krowser/marketing-your-mobile-app-the-steps-for-continued-success-4bk3</guid>
      <description>&lt;p&gt;Here are some tips for continued success in marketing your app to new users and maintaining your existing userbase. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ask Users For Feedback&lt;/strong&gt;&lt;br&gt;
If people are using your app constantly, it is a sign that have made a connection with the product. Give them the opportunity to express their opinions with a popup invitation to leave a review, but remember that user experience should not be sacrificed by this tactic. Think about when and how you want to ask for a review and make sure it flows well with the user experience so it won‚Äôt frustrate users. The more strategically the popup is placed, the better the chances are for a positive review.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consider A Burst Campaign&lt;/strong&gt;&lt;br&gt;
A ‚Äúburst campaign‚Äù is one of the most popular techniques used by mobile app marketers who want to climb the app store ranks. The idea of a burst campaign is to provide a ‚Äúburst‚Äù of exposure for your app in which you aggressively purchase paid media exposure over a short period of time ‚Äì usually between 24 and 72 hours, depending on budget.&lt;br&gt;
The goal is to get as many paid installs as possible, boosting your ranking. All this with the hope of increasing the volume of quality organic installs ‚Äì that should follow when the app is finally ranked high enough to be discovered. While you should attract more organic downloads from a successful burst campaign, continued paid advertising will maintain steady downloads. You need to keep the momentum going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Offer A Referral Bonus&lt;/strong&gt;&lt;br&gt;
Offering your users a bonus or benefit when they promote your app online is a surefire way to get them to spread the word. With a staggering 3900% growth rate, Dropbox is an excellent example of how powerful referrals can be. The company had just 1,00,000 registered users in 2008, which climbed to a staggering 4,000,000 registered users within a mere 15 month period as a result of their referral program. This post from Localytics explains how Dropbox used referrals to exponentially increase their user base&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>webdev</category>
      <category>marketing</category>
    </item>
    <item>
      <title>Understanding Kubernetes in a visual way (in üé• video): part 15 ‚Äì Deployment Rolling Update</title>
      <author>Aur√©lie Vache</author>
      <pubDate>Sun, 30 May 2021 11:51:10 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-kubernetes-in-a-visual-way-in-video-part-15-deployment-rolling-update-i19</link>
      <guid>https://dev.to/aurelievache/understanding-kubernetes-in-a-visual-way-in-video-part-15-deployment-rolling-update-i19</guid>
      <description>&lt;p&gt;Understanding Kubernetes can be difficult or time-consuming. In order to spread knowledges about Cloud technologies I started to create sketchnotes about Kubernetes, then I've auto-published a book and since now I've started a new serie of video! :-)&lt;/p&gt;

&lt;p&gt;I imagined a serie of short videos with a mix of sketchnotes and speech.&lt;/p&gt;

&lt;p&gt;I think it could be a good way, more visual, with audio &amp;amp; video to explain Kubernetes (and others technologies).&lt;/p&gt;

&lt;p&gt;This episode is focused on Deployment Rolling Update.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/w2_-Q4QuDY8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The video is in French BUT I done the subtitles in english (and french too).&lt;/p&gt;

&lt;p&gt;If you liked the video and are interested to watch another ones, please give me some feedbacks (and you can also subscribe to &lt;a href="https://www.youtube.com/channel/UCrRk0kOP58lBMl9B8ZS8Vlg"&gt;my Youtube channel&lt;/a&gt;, if you want to ‚ù§Ô∏è).&lt;/p&gt;

&lt;p&gt;If you are interested, I published all the sketchnotes on Kubernetes (and new ones!) to make a "book" of 165 pages: &lt;a href="https://gumroad.com/aurelievache#uCxcr"&gt;"Understanding Kubernetes in a visual way"&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like theses sketchnotes, you can follow me, I will publish others sketchs shortly :-).&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>docker</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
