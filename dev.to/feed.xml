<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>SPACE INVADERS GAME</title>
      <author>Arwaz Khan </author>
      <pubDate>Sun, 02 May 2021 15:38:06 +0000</pubDate>
      <link>https://dev.to/arwazkhan189/space-invaders-game-2hi7</link>
      <guid>https://dev.to/arwazkhan189/space-invaders-game-2hi7</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello Dev's&lt;/strong&gt;&lt;br&gt;
Finally Completed the SPACE INVADERS Game ...&lt;br&gt;
Download the game from this link: &lt;a href="https://arwazkhan189.github.io/SPACE-INVADERS/"&gt;https://arwazkhan189.github.io/SPACE-INVADERS/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQjxFv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bbo3rajqyhl1tbhh6d2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQjxFv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bbo3rajqyhl1tbhh6d2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please give your feedback to improve the game.&lt;/p&gt;

</description>
      <category>python</category>
      <category>pygame</category>
      <category>spaceinvaders</category>
    </item>
    <item>
      <title>Cloud Computing, an Introduction…
</title>
      <author>Marita Thushari</author>
      <pubDate>Sun, 02 May 2021 15:29:38 +0000</pubDate>
      <link>https://dev.to/ucscmozilla/cloud-computing-an-introduction-27ik</link>
      <guid>https://dev.to/ucscmozilla/cloud-computing-an-introduction-27ik</guid>
      <description>&lt;p&gt;In this era of technology everyone tends to search for the best solution or resource for an affordable cost. The concept of Cloud Computing paves the way for this search easily and it has been a great solution for many during this pandemic as well. In this article a brief introduction will be discussed on the concept of Cloud Computing and how it becomes an easy &amp;amp; affordable solution in many situations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cloud-computing"&gt;
  &lt;/a&gt;
  What is Cloud Computing?
&lt;/h2&gt;

&lt;p&gt;Cloud Computing is the concept that delivers computing services over the Internet using the ‘Pay-as-you-go’ pricing model, which means payment is done only for the usage of the services provided. Therefore, this is also called ‘Consumption-based model’. Due to this model it becomes typically cheaper when compared to purchasing the required hardware components for computing.&lt;/p&gt;

&lt;p&gt;The main services provided by Cloud computing are Computing power and Storage. There are other services provided such as Networking, Database management, etc. These cloud services are provided by various Cloud Service providers and the users who are called the Cloud tenants pay for the services they use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features…
&lt;/h2&gt;

&lt;p&gt;Cloud Computing holds various advantages such as Reliability &amp;amp; High availability as it is accessible from multiple devices across the globe, Scalability as resources can be increased to cater the demand accordingly, Elasticity as resources can be allocated and deallocated for users, Agility, Geo distribution as devices that are distributed across the globe are connected with each other which also provides Fault Tolerance and Disaster recovery.&lt;/p&gt;

&lt;p&gt;Cost savings is one of the major advantage due to the ability of paying only for the service used which also means that there is no Capital cost needed. High speed and Ability to deploy more new services easily than when using them on-premises are also some other available advantages.&lt;/p&gt;

&lt;p&gt;The disadvantages are that complexity may be increased when migrating the data &amp;amp; apps that are already existing to cloud platforms and Internet connectivity is required to use &amp;amp; access the cloud services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-service-models"&gt;
  &lt;/a&gt;
  Cloud Service Models…
&lt;/h2&gt;

&lt;p&gt;The main Cloud Service models are Infrastructure as a Service (IaaS), Platform as a Service (PaaS) and Software as a Service (SaaS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IaaS&lt;/strong&gt; - Produces the computer infrastructure (hardware components) as the cloud service, Cloud tenant should be responsible for OS maintenance and Network configurations. Eg: Virtual Machines&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PaaS&lt;/strong&gt; - Produces the platforms required for applications as the cloud service by managing the hosting environment, Cloud tenant is only required to deploy their applications. Eg: Azure App Services&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS&lt;/strong&gt; - Manages all aspects of the application environment therefore Cloud tenant only needs to provide the required data that is to be processed or stored. Eg: Office 365 from Microsoft, Google Drive&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-deployment-models"&gt;
  &lt;/a&gt;
  Cloud Deployment Models…
&lt;/h2&gt;

&lt;p&gt;The main Cloud deployment models are Public cloud, Private cloud and Hybrid cloud. The describe on how the cloud services are provided and used by the users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public cloud&lt;/strong&gt; – Cloud services are provided to anyone over the public Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Private cloud&lt;/strong&gt; – Cloud services are exclusively used by users of a business or an organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hybrid cloud&lt;/strong&gt; – Builds a connectivity between the Public and Private clouds allowing the data to be shared between them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--93gzZLoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.24slides.com/templates/upload/templates-previews/QDznvaI0e4zdUjeG0xAaIBZmvxn6P2Rm1n58jMM6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--93gzZLoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.24slides.com/templates/upload/templates-previews/QDznvaI0e4zdUjeG0xAaIBZmvxn6P2Rm1n58jMM6.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-the-cloud-services-can-be-accessed"&gt;
  &lt;/a&gt;
  How can the Cloud Services can be accessed?
&lt;/h2&gt;

&lt;p&gt;There are many Cloud Service providers at present and there can be more in the near future as well. These Cloud Service Providers provide many services that can be used by anyone through internet. Some of the main Cloud Service providers are AWS from Amazon, Microsoft Azure from Microsoft, Google Cloud from Google and many more. Each of these solutions have their own unique and common characteristics in their available cloud services. And the costs related to each service can also differ among the various service providers. Therefore, it would be easy for anyone to practice these solutions first and then select the most suitable one for their implementation purposes. Most of these Cloud Service providers provide a free trial for this purpose.&lt;/p&gt;

&lt;p&gt;For more details about Microsoft Azure click on &lt;br&gt;
&lt;a href="https://azure.microsoft.com/en-us/"&gt;https://azure.microsoft.com/en-us/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details about AWS click on &lt;br&gt;
&lt;a href="https://aws.amazon.com/"&gt;https://aws.amazon.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details about Google Cloud click on&lt;br&gt;
&lt;a href="https://cloud.google.com/"&gt;https://cloud.google.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--esAjjThn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://csharpcorner.azureedge.net/article/top-10-cloud-service-providers/Images/Top%2520cloud%2520providers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--esAjjThn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://csharpcorner.azureedge.net/article/top-10-cloud-service-providers/Images/Top%2520cloud%2520providers.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Due to the above existing features of Cloud computing, it is obvious to consider that most of the next-gen businesses will be built on this platform.&lt;/p&gt;

</description>
      <category>cloudcomputing</category>
      <category>technology</category>
      <category>article</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Contactless Attendance System based on Face Recognition</title>
      <author>Dhruv Panchal</author>
      <pubDate>Sun, 02 May 2021 15:14:23 +0000</pubDate>
      <link>https://dev.to/dhhruv/contactless-attendance-system-based-on-face-recognition-hah</link>
      <guid>https://dev.to/dhhruv/contactless-attendance-system-based-on-face-recognition-hah</guid>
      <description>&lt;p&gt;&lt;strong&gt;A Contactless Attendance System where your face is identified for Attendance.&lt;/strong&gt; ✨&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#motivation-astonished"&gt;
  &lt;/a&gt;
  Motivation 😲
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This Repository was created as a part of MINeD Hackathon, a national level hackathon organized by Centre of Excellence in Data Science at the CSE Department of Nirma University.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We seek to provide a valuable attendance service for employees. Reduce manual process errors by provide automated and a reliable attendance system uses facial recognition technology.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#features-clipboard"&gt;
  &lt;/a&gt;
  Features 📋
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check Camera&lt;/li&gt;
&lt;li&gt;Capture Faces&lt;/li&gt;
&lt;li&gt;Train Faces&lt;/li&gt;
&lt;li&gt;Recognize Faces &amp;amp; Attendance&lt;/li&gt;
&lt;li&gt;Automatic Email


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#screenshots-camera"&gt;
  &lt;/a&gt;
  Screenshots 📷
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#1-gui"&gt;
  &lt;/a&gt;
  1. GUI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fUCyVPp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ckdgl54fep049z00p21.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fUCyVPp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ckdgl54fep049z00p21.PNG" alt="GUI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-command-line-interface"&gt;
  &lt;/a&gt;
  2. Command Line Interface
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CaIdtTWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b39w5v9gmngxkm2nvamh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CaIdtTWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b39w5v9gmngxkm2nvamh.PNG" alt="Command Line Interface"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-checking-camera"&gt;
  &lt;/a&gt;
  3. Checking Camera
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qTlGG9UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnvt5fzwovwo0us1fjz6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTlGG9UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnvt5fzwovwo0us1fjz6.jpg" alt="Checking Camera"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-recognize-image"&gt;
  &lt;/a&gt;
  4. Recognize Image
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nTEfbWY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2tjf7bhz0y7ayb3w3f7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTEfbWY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2tjf7bhz0y7ayb3w3f7.jpg" alt="Recognize Image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-automail"&gt;
  &lt;/a&gt;
  5. Automail
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMKyyeQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uabe7cx3joih0g3e50pe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMKyyeQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uabe7cx3joih0g3e50pe.jpeg" alt="Automail"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#tech-stack-used-computer"&gt;
  &lt;/a&gt;
  Tech Stack Used 💻
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Build With -&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python 3.8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Modules Used -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenCV Contrib&lt;/li&gt;
&lt;li&gt;Pillow&lt;/li&gt;
&lt;li&gt;Numpy&lt;/li&gt;
&lt;li&gt;Pandas&lt;/li&gt;
&lt;li&gt;Shutil&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;li&gt;yagmail&lt;/li&gt;
&lt;li&gt;Tkinter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Facial Recognition Algorithms -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Haar Cascade&lt;/li&gt;
&lt;li&gt;LBPH (Local Binary Pattern Histogram)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Softwares Used -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pycharm 2019.2&lt;/li&gt;
&lt;li&gt;VS CODE &lt;/li&gt;
&lt;li&gt;Jupyter Notebook&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installation-key"&gt;
  &lt;/a&gt;
  Installation 🔑
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#create-environment"&gt;
  &lt;/a&gt;
  Create Environment
&lt;/h3&gt;

&lt;p&gt;First open the terminal or command line in the IDE and copy the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m venv venv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then activate the virtual enviroment using the code below for windows.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.\venv\Scripts\activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note: If your pc don't have virtual enviroment or pip install the follow this link. &lt;a href="https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/"&gt;How to create Virtual Enviroment&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#installing-the-packages"&gt;
  &lt;/a&gt;
  Installing the Packages
&lt;/h3&gt;

&lt;p&gt;After creating the enviroment on your project, let's install the necessary packages. &lt;/p&gt;

&lt;p&gt;To install those package open the terminal or command line and paste the code from below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note: During the package installation, sometimes it shows errors due to package dependencies and to avoid those error you can install those packages as admin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#test-run-bicyclist"&gt;
  &lt;/a&gt;
  Test Run 🚴
&lt;/h2&gt;

&lt;p&gt;After creating the virtual environment and installing the packages, open the IDE terminal to run the program.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To use Command Line Version Use:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;py main.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;To use GUI Version Use:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;py main_gui.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Test Run for CAS as shown below:-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4OUS7lT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60m9wd8dj0ggrc998vfc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4OUS7lT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60m9wd8dj0ggrc998vfc.gif" alt="Test Run"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use-pencil"&gt;
  &lt;/a&gt;
  How To Use? 📝
&lt;/h2&gt;

&lt;p&gt;If you want to use it then follow the steps below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First download or clone the repository.&lt;/li&gt;
&lt;li&gt;Import the project to your preferable IDE.
Recommended : PyCharm&lt;/li&gt;
&lt;li&gt;Create a python virtual environment.&lt;/li&gt;
&lt;li&gt;Install all the packages from &lt;a href="https://github.com/dhhruv/Contactless-Attendance-System/blob/master/requirements.txt"&gt;requirements.txt&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Change the mail information in the &lt;a href="https://github.com/dhhruv/Contactless-Attendance-System/blob/master/Info.py"&gt;Info.py&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Run the project using the Command Prompt or PowerShell or your IDE Terminal Button.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#for-more-updates-check-the-github-repository"&gt;
  &lt;/a&gt;
  For more Updates check the GitHub Repository:
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Contactless-Attendance-System"&gt;
        Contactless-Attendance-System
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✨ A Contactless Attendance System where your face is identified for Attendance. 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#team-"&gt;
  &lt;/a&gt;
  Team :
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/Neelshah997"&gt;Neel Shah&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dhhruv"&gt;Dhruv Panchal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/urvesh254"&gt;Urvesh Patel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nirami98"&gt;Nirja Desai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msCurious28"&gt;Payal Devalia&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>python</category>
    </item>
    <item>
      <title>Should DevTools teach the CSS cascade?</title>
      <author>Stefan Judis</author>
      <pubDate>Sun, 02 May 2021 14:49:37 +0000</pubDate>
      <link>https://dev.to/stefanjudis/should-devtools-teach-the-css-cascade-5bhi</link>
      <guid>https://dev.to/stefanjudis/should-devtools-teach-the-css-cascade-5bhi</guid>
      <description>&lt;p&gt;The CSS cascade and the closely related topic of CSS selector specificity are often misunderstood in the web development community. Unfortunately, my impression is that many developers never learned how CSS really works. &lt;/p&gt;

&lt;p&gt;Trending solutions such as "CSS-in-JS" and Tailwind are definitely not helping with the overall understanding of this core web technology. The missing knowledge brings up the following questions: &lt;/p&gt;

&lt;p&gt;Will it become less critical to know CSS in the future? I don't know, maybe one day... probably not... &lt;/p&gt;

&lt;p&gt;Do I think that it's essential to understand how browsers apply styles today? Absolutely!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note: I'm not favoring or am advising to use any CSS solution out there. &lt;a href="https://www.stefanjudis.com/talks/did-we-b-development-lose-the-right-direction/"&gt;I prefer less complex frontends these days&lt;/a&gt;, but you do you!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I was thinking about developer education over the last few days and couldn't get the idea of teaching the cascade in the developer tools out of my head. This post proposes a small developer tools addition that I believe could help more developers understanding CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-specificity-in-a-nutshell-super-quick"&gt;
  &lt;/a&gt;
  CSS specificity in a nutshell (super quick)
&lt;/h2&gt;

&lt;p&gt;Let's have a very quick and not complete CSS specificity refresher. &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance"&gt;If you want to learn more on the topic, read this MDN article about the CSS cascade&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;If multiple CSS selectors and rules match the same HTML element, what styles should be applied? What should happen in a codebase when there a five different &lt;code&gt;color&lt;/code&gt; declarations for the &lt;code&gt;h1&lt;/code&gt; element? &lt;/p&gt;

&lt;p&gt;This problem is where CSS specificity comes into play. CSS declarations are applied depending on where they are defined. Are inline styles specifying the red color? Is the blue color set in a highly complex selector in the main stylesheet? Various factors play a role in figuring out what styles to apply. Generally speaking, the most specific declaration wins.&lt;/p&gt;

&lt;p&gt;CSS specificity is defined by four different values (it's an abstract concept, but bear with me...). The four values are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Thousands&lt;/strong&gt;: every declaration in the style attribute (inline styles)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hundreds&lt;/strong&gt;: ids in a CSS selector&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tens&lt;/strong&gt;: classes, attributes and pseudo-classes in a CSS selector&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ones&lt;/strong&gt;: elements or pseudo-elements in a CSS selector&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're dealing with multiple selectors that define the same property on the same element, the one with the highest specificity wins and is applied.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* 
  Consider this element:
  &amp;lt;div class="class-selector" id="id-selector"&amp;gt;
    Hello world!
  &amp;lt;/div&amp;gt;
*/&lt;/span&gt; 

&lt;span class="c"&gt;/* 
  Specificity: 0001
  (because there's an element in the selector)
*/&lt;/span&gt;
&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* 
  Specificity: 0010 
  (because there's a class in the selector)
*/&lt;/span&gt;
&lt;span class="nc"&gt;.class-selector&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* 
  Specificity: 0100
  (because there's an id in the selector)
*/&lt;/span&gt;
&lt;span class="nf"&gt;#id-selector&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No matter the order of these three CSS selectors, the &lt;code&gt;div&lt;/code&gt;'s text color will be yellow because the &lt;code&gt;#id-selector&lt;/code&gt; has the highest specificity (&lt;code&gt;0100&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But how do people learn how this works, then?&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-importance-of-education-in-developer-tools"&gt;
  &lt;/a&gt;
  The importance of education in developer tools
&lt;/h2&gt;

&lt;p&gt;I wrote about &lt;a href="https://www.stefanjudis.com/blog/missing-accessibility-warnings-in-browser-developer-tools-why-cant-we-have/"&gt;the importance of DevTool warnings two years ago&lt;/a&gt;, and I still believe that browser developer tools play an essential role in developer education. Web development includes many different areas, so it's tough to learn what's necessary to build websites with an outstanding user experience. At the end of the day, you can't know what you don't know.&lt;/p&gt;

&lt;p&gt;Developer tools improved significantly over the last few years. Google Chrome's Lighthouse monitoring tool became a defacto standard in measuring a website's quality. It shows areas of improvement and consistently links to additional resources.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/3K0Ofpzz5xsjkcCpi4ZNEM/e16810a85e73cc4dfd6e0d8db7b020fb/Screenshot_2021-05-01_at_18.08.51.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/3K0Ofpzz5xsjkcCpi4ZNEM/e16810a85e73cc4dfd6e0d8db7b020fb/Screenshot_2021-05-01_at_18.08.51.png" alt="Lighthouse report providing URLs to further reading material"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firefox started to give valuable hints in the CSS tools explaining when and why CSS declarations aren't working. &lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/24JdP2lihAJXfyxA01AwXc/59f3ec9d6f60282042930b0a5693dfe5/Screenshot_2021-05-01_at_18.03.07.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/24JdP2lihAJXfyxA01AwXc/59f3ec9d6f60282042930b0a5693dfe5/Screenshot_2021-05-01_at_18.03.07.png" alt="Firefox devtools telling that the CSS property doesn't make sense."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you see, developer tools take on the task of educating developers today. Wouldn't it be great to explain about the cascade, too?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#can-we-have-learn-more-resources-for-the-css-cascade"&gt;
  &lt;/a&gt;
  Can we have "Learn more" resources for the CSS cascade?
&lt;/h3&gt;

&lt;p&gt;When you're working on a large codebase and are dealing with a non-trivial amount of CSS, you often find many competing CSS declarations. Multiple selectors overwrite each other. When you inspect the applied element styles in the developer tools, they show you which styles are applied and which ones are overwritten.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/57olOaLiCXBd5bjZpCz7Q5/f9b14e79f1ed1331ef63124eeee67892/Screenshot_2021-05-01_at_17.55.50.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/57olOaLiCXBd5bjZpCz7Q5/f9b14e79f1ed1331ef63124eeee67892/Screenshot_2021-05-01_at_17.55.50.png" alt="CSS Developer Tools showing crossed values when they're overruled by another selector."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Overwritten styles are crossed out, and this is great, but that's almost all you get. There's no additional information on why one property is applied while another one isn't. &lt;/p&gt;

&lt;p&gt;Today I learned that there is another view in the DevTools that shows the ranking of the selectors and matching properties inside the "computed" panel. That is a great first step!&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/5ZxL1UOWrtOsRyFQprTTcZ/89dea31d5f1d7e93cba05cb2549c037f/Screenshot_2021-05-02_at_14.21.18.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/5ZxL1UOWrtOsRyFQprTTcZ/89dea31d5f1d7e93cba05cb2549c037f/Screenshot_2021-05-02_at_14.21.18.png" alt="Developer tools computed panel that shows the applied declarations ordered by specificity."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The computed property details list all the matching styles. The list is ordered by the specificity of their selectors. Unfortunately, this view isn't explaining the list's order and I think that's a missed opportunity. &lt;/p&gt;

&lt;p&gt;Wouldn't it be nice if this view shows the selector specificity and provides additional resources on the CSS cascade?&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/2b6qOrmnfdovib508GE8Rt/3875581911945887cf154fb763f7aaed/Screenshot_2021-05-02_at_14.32.22.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/2b6qOrmnfdovib508GE8Rt/3875581911945887cf154fb763f7aaed/Screenshot_2021-05-02_at_14.32.22.png" alt="Proposal for devtools explaining the Cascade and showing selector specificity."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think that the above additions could help to educate developers about CSS tremendously. The only downside I can think of is that additional information might overwhelm developers, but I would take that risk in favor of more people learning CSS properly.&lt;/p&gt;

&lt;p&gt;What do you think about this proposal? Is there something like that in the making from a browser vendor side? I'd love to have a conversation on the topic. Feel free to &lt;a href="//mailto:stefanjudis@gmail.com"&gt;drop me an email&lt;/a&gt; or &lt;a href="https://twitter.com/stefanjudis/"&gt;reach out on Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Write a text with a color gradient</title>
      <author>Clément Gaudinière</author>
      <pubDate>Sun, 02 May 2021 14:48:10 +0000</pubDate>
      <link>https://dev.to/clementgaudiniere/write-a-text-with-a-color-gradient-53h4</link>
      <guid>https://dev.to/clementgaudiniere/write-a-text-with-a-color-gradient-53h4</guid>
      <description>&lt;p&gt;Today I offer you a CSS tip. In CSS, gradients are very popular, they allow a clean and pretty design. It also happens that we want to use the "color" property to apply a gradient to a text, unfortunately at the moment this feature is not supported by web browsers. That's why I propose you a simple tutorial to apply a linear gradient to a text.&lt;/p&gt;

&lt;p&gt;You can see below the final result:&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/clement-gaudiniere/embed/RwKXWMg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
default-tab&lt;/p&gt;

&lt;p&gt;To do this, we will use "webkit" extensions. First of all we will add "&lt;code&gt;-webkit-background-clip&lt;/code&gt;" which will allow to apply a gradient to the text. &lt;br&gt;
&lt;a href="https://developer.mozilla.org/fr/docs/Web/CSS/background-clip"&gt;Learn more... &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we will add this property: "&lt;code&gt;-webkit-text-fill-color&lt;/code&gt;" which allows to define the color used to draw the content of the letters. &lt;br&gt;
&lt;a href="https://developer.mozilla.org/fr/docs/Web/CSS/-webkit-text-fill-color"&gt;Learn more... &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Finally, we will apply the gradient with the property: "&lt;code&gt;background&lt;/code&gt;", which is a fundamental property of CSS.&lt;/p&gt;

&lt;p&gt;The complete code :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;72px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-webkit-linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;350deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#22c1c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#fd2df5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nl"&gt;-webkit-background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="nl"&gt;-webkit-text-fill-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Text Gradient &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;  

  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>css</category>
      <category>tutorial</category>
      <category>tip</category>
    </item>
    <item>
      <title>8 Amazing Library For Your Next Project</title>
      <author>Nikhil Bobade </author>
      <pubDate>Sun, 02 May 2021 14:18:27 +0000</pubDate>
      <link>https://dev.to/nikhil27b/8-amazing-library-for-your-next-project-3pjd</link>
      <guid>https://dev.to/nikhil27b/8-amazing-library-for-your-next-project-3pjd</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;How are you all Today I have written this post about the 8 amazing Library every developer know there are many new &amp;amp; easy use Libraries. I hope you like this also comments about your thoughts. also For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;1.three.js for animation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://threejs.org/"&gt;Three.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---KHcLqEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2cdwtrop83l5z4yuqhy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KHcLqEI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2cdwtrop83l5z4yuqhy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.Awesome Notifications For Amazing Notification&lt;/p&gt;

&lt;p&gt;&lt;a href="https://f3oall.github.io/awesome-notifications/"&gt;Awesome Notifications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkAZwv7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7f2ln6dbpekwz1a2y5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkAZwv7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7f2ln6dbpekwz1a2y5k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.Scroll Reveal - Animation &lt;/p&gt;

&lt;p&gt;&lt;a href="https://scrollrevealjs.org/"&gt;Scroll Reveal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EGtRlpx9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k4swyxfj8mtre9dckyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EGtRlpx9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k4swyxfj8mtre9dckyk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.Vivus For SVG Animation&lt;/p&gt;

&lt;p&gt;&lt;a href="http://maxwellito.github.io/vivus/"&gt;Vivus&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LQaUY4Ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmf3tckotqwzbq8ojepw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LQaUY4Ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmf3tckotqwzbq8ojepw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.Anime Js - Animation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://animejs.com/"&gt;Anime JS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9dvUfY3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/np75esim0szxxu8kyyow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9dvUfY3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/np75esim0szxxu8kyyow.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6.CSS Camera - For Fun&lt;/p&gt;

&lt;p&gt;&lt;a href="https://woodneck.github.io/css-camera/"&gt;CSS Camera&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IEKUNmlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5grxic0rfpxld04o3r4i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IEKUNmlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5grxic0rfpxld04o3r4i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7.AOS - Animate On Scroll Library&lt;/p&gt;

&lt;p&gt;&lt;a href="http://michalsnik.github.io/aos/"&gt;AOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f1uBvybP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zi0kw0r00h3lbb19nsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1uBvybP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9zi0kw0r00h3lbb19nsz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8.Chart.js - JavaScript charting&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.chartjs.org/"&gt;Chart Js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cTqKroP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i4t3x9ymmcke8a3f77q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cTqKroP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i4t3x9ymmcke8a3f77q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to more support me then buy me a &lt;a href="https://www.buymeacoffee.com/nikhilbobade27"&gt;coffee&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Javascript — Lexical and Dynamic Scoping?</title>
      <author>Osman Akar</author>
      <pubDate>Sun, 02 May 2021 13:33:15 +0000</pubDate>
      <link>https://dev.to/oakar/javascript-lexical-and-dynamic-scoping-32el</link>
      <guid>https://dev.to/oakar/javascript-lexical-and-dynamic-scoping-32el</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-scope"&gt;
  &lt;/a&gt;
  What is Scope?
&lt;/h2&gt;

&lt;p&gt;Scoping itself is how you search for a variable with a given name. A variable has a scope which is the whole area in which that variable can be accessed by name.&lt;/p&gt;

&lt;p&gt;In Javascript, we can call Scope as the set of rules that govern how the Engine can look up a variable by its identifier name and find it.&lt;/p&gt;

&lt;p&gt;There are two types of Scope models that are widely used. By far the most commonly used Scope model by vast majority of programming languages is Lexical Scope, also Javascript uses this Lexical Scope model. The other model which is still used by some languages like Bash scripting is called Dynamic Scope. Now, we will discuss what are these Scope models? Then we will understand the differences between them.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#dynamic-scope"&gt;
  &lt;/a&gt;
  Dynamic Scope
&lt;/h3&gt;

&lt;p&gt;In dynamic scoping, you search in the local function first, then you search in the function that called the local function, then you search in the function that called that function, and so on, up the call-stack.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What is call-stack?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Call-stack is a mechanism for an interpreter to keep track of its place in a script that calls multiple functions — what function is currently being run and what functions are called from within that function, etc. Stack data structure is LIFO that means, last in first out. Let’s understand with an example from MDN:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function greeting() {
   // [1] Some codes here
   sayHi();
   // [2] Some codes here
}

function sayHi() {
   return "Hi!";
}

// Invoke the `greeting` function
greeting();

// [3] Some codes here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Ignore all functions, until it reaches the greeting() function invocation.&lt;/li&gt;
&lt;li&gt;Add the greeting() function to the call stack list.&lt;/li&gt;
&lt;li&gt;Execute all lines of code inside greeting() function.&lt;/li&gt;
&lt;li&gt;Get to the sayHi() function invocation.&lt;/li&gt;
&lt;li&gt;Add the sayHi() function to the call-stack list.&lt;/li&gt;
&lt;li&gt;Execute all lines of code inside the sayHi() function, until reaches its end.&lt;/li&gt;
&lt;li&gt;Return execution to the line that invoked sayHi() and continue executing the rest of the greeting() function.&lt;/li&gt;
&lt;li&gt;Delete the sayHi() function from our call-stack list.&lt;/li&gt;
&lt;li&gt;When everything inside the greeting() function has been executed, return to its invoking line to continue executing the rest of the Javascript code.&lt;/li&gt;
&lt;li&gt;Delete the greeting() function from call-stack list.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;That’s all summary of how the call-stack behaves and what it does.&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;I should mention that dynamic scope actually is a near cousin to another mechanism called &lt;strong&gt;this&lt;/strong&gt; in Javascript. We can understand by the name of the dynamic scope is that scope can be determined dynamically at run-time, rather than statically at author-time.&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What is author-time?&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;This is the time that when developer writes the code. This can be taken to mean, perception of program as you see it before compilation.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;Dynamic scope does not concern itself with how and where functions and scopes are declared, &lt;strong&gt;but rather where they are called from.&lt;/strong&gt; That means that, the scope chain is based on call-stack, not the nesting of scopes in code.&lt;/p&gt;

&lt;p&gt;Let’s understand dynamic scope by an example from Kyle Simpson’s book — You don’t know JS, Scope&amp;amp;Closure:&lt;/p&gt;

&lt;p&gt;Assume that, if Javascript had dynamic scope, when foo() is executed, theoretically the code below would result 3 as the output, but how?&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function foo() {
    console.log( a ); // 3  (not 2!)
}

function bar() {
    var a = 3;
    foo();
}

var a = 2;

bar();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When foo() cannot resolve the variable reference for a, instead of stepping up the nested (lexical scope — we will mention soon) scope chain, it walks up the call-stack, to find where foo() was called from. Since foo() was called from bar() it checks the variables in scope for bar(), and finds an a there with value 3.&lt;/p&gt;

&lt;p&gt;To be clear, Javascript &lt;strong&gt;does not have dynamic scope.&lt;/strong&gt; It &lt;strong&gt;has lexical scope.&lt;/strong&gt; But note that &lt;em&gt;this&lt;/em&gt; mechanism is kind of like dynamic scope.&lt;/p&gt;

&lt;p&gt;Let’s dive into lexical scope.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#lexical-scope"&gt;
  &lt;/a&gt;
  Lexical Scope
&lt;/h3&gt;

&lt;p&gt;Lexical scope is a scope that is defined at lexing time. In other words, lexical scope is based on where variables and blocks of scope are authored, by you, at write-time, and thus is set in stone by the time the lexer processes your code.&lt;/p&gt;

&lt;p&gt;It is also called as &lt;em&gt;Static Scope.&lt;/em&gt; In a lexically scoped language, the scope of an identifier is fixed to some region in the source code containing the identifier’s declaration. This means that an identifier is only accessible within that region.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; There is a couple of ways to cheat lexical scope like with ‘with’ and ‘eval()’. But these are not suggested and should not be used in your code anymore. This part will be skipped here and will not be mentioned. You can find more information about this with Kyle Simpson’s book — You don’t know JS, Scope&amp;amp;Closures.&lt;/p&gt;

&lt;p&gt;Let’s explain how the lexical scope works with an example from Kyle Simpson’s book:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function foo(a) {

    var b = a * 2;

    function bar(c) {
        console.log( a, b, c );
    }

    bar(b * 3);
}

foo( 2 ); // 2 4 12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;There are three nested scopes inherent in this code example. It may be helpful to think about these scopes as bubbles inside of each other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0WMWkK2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Al3o2TvDSiEgcpvF9vJIVcQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0WMWkK2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Al3o2TvDSiEgcpvF9vJIVcQ.png" alt="Kyle Simpson’s book — You don’t know JS, Scope&amp;amp;Closures&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Bubble 1&lt;/strong&gt; encompasses the global scope, and has just one identifier in it: foo.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bubble 2&lt;/strong&gt; encompasses the scope of foo, which includes the three identifiers: a, bar, b.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bubble 3&lt;/strong&gt; encompasses the scope of bar, and it includes just one identifier: c.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Scope bubbles are defined by where the blocks of scope are written, which one is nested inside of the other etc. Notice that these nested bubbles are strictly nested.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-the-engine-lookups"&gt;
  &lt;/a&gt;
  How the Engine Look-ups?
&lt;/h3&gt;

&lt;p&gt;In the above code snippet, the Engine executes the console.log(…) statement and goes looking for the three referenced variables a, b, and c. It starts with innermost scope bubble, Bubble 3. It won’t find a there, so it goes up one level, out to the next nearest scope bubble, Bubble 2. It finds a there, and so it uses that a. Same thing for b. But c, it does find inside of bar(…), Bubble 3.&lt;/p&gt;

&lt;p&gt;The variable c is inside of bar(…) and inside of foo(…), the console.log(…) statement would have found and used the one in bar(…), never getting to the one in foo(…).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scope look-up stops once it finds the first match.&lt;/strong&gt; The same identifier name can be specified at multiple layers of nested scope, which is called &lt;strong&gt;shadowing (the inner identifier shadows the outer identifier).&lt;/strong&gt; Scope look-up always start at the innermost scope being executed at the time, and works its way outward/upward until first match and stops.&lt;/p&gt;

&lt;p&gt;No matter where a function is invoked from, or even how it is invoked, its lexical scope is only defined by where the function was declared.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;The Key Contrast Between Lexical and Dynamic Scoping:&lt;/strong&gt; Lexical scope is write-time, whereas dynamic scope is run-time. Lexical scope care where a function was declared, but dynamic scope cares where a function was called from.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Dynamic scoping and Lexical scoping, &lt;a href="http://wiki.c2.com/?DynamicScoping"&gt;http://wiki.c2.com/?DynamicScoping&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Call-stack, &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;https://developer.mozilla.org/en-US/docs/Glossary/Call_stack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You don’t know JS, Scope&amp;amp;Closures by Kyle Simpson&lt;/li&gt;
&lt;/ul&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="https://medium.com/@osmanakar_65575/javascript-lexical-and-dynamic-scoping-72c17e4476dd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bFzI6Dd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/56/56/0%2AHRJEW9WVYqCuGmYX" alt="Osman Akar"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/@osmanakar_65575/javascript-lexical-and-dynamic-scoping-72c17e4476dd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Javascript — Lexical and Dynamic Scoping? | by Osman Akar | Medium&lt;/h2&gt;
      &lt;h3&gt;Osman Akar ・ &lt;time&gt;Feb 12, 2019&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Qu'est-ce que vous aimeriez lire en français sur dev.to ?</title>
      <author> </author>
      <pubDate>Sun, 02 May 2021 13:27:35 +0000</pubDate>
      <link>https://dev.to/ericcodeur/qu-est-ce-que-vous-aimeriez-lire-en-francais-sur-dev-to-5b13</link>
      <guid>https://dev.to/ericcodeur/qu-est-ce-que-vous-aimeriez-lire-en-francais-sur-dev-to-5b13</guid>
      <description>&lt;p&gt;Bonjour,&lt;/p&gt;

&lt;p&gt;J'aimerais ajouter du contenu francophone sur dev.to&lt;/p&gt;

&lt;p&gt;Je me demande donc qu'est-ce que vous aimeriez le plus lire.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tuto Javascript?&lt;/li&gt;
&lt;li&gt;Tuto PHP?&lt;/li&gt;
&lt;li&gt;Tuto Python?&lt;/li&gt;
&lt;li&gt;Tuto Ruby on Rails?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aussi, que niveau ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Des tuto de base ?&lt;/li&gt;
&lt;li&gt;Des tuto intermédiaire ?&lt;/li&gt;
&lt;li&gt;Des tuto avancé ?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voter svp en laissant un commentaire.&lt;/p&gt;

&lt;p&gt;J'attend votre feedback.&lt;/p&gt;

&lt;p&gt;Au plaisir,&lt;/p&gt;

&lt;p&gt;Eric, Le Codeur&lt;/p&gt;

&lt;p&gt;PS: N'oubliez pas de cliquer 'follow' si vous ne voulez rien manqué de mes futures post!&lt;/p&gt;

</description>
      <category>french</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Setting Up a Fresh Ubuntu 21.04 Desktop as Personal Computer</title>
      <author>Erika Heidi</author>
      <pubDate>Sun, 02 May 2021 13:11:17 +0000</pubDate>
      <link>https://dev.to/erikaheidi/setting-up-a-fresh-ubuntu-21-04-desktop-as-personal-computer-41i3</link>
      <guid>https://dev.to/erikaheidi/setting-up-a-fresh-ubuntu-21-04-desktop-as-personal-computer-41i3</guid>
      <description>&lt;p&gt;I recently got a &lt;a href="https://twitter.com/erikaheidi/status/1387454418224828416"&gt;brand new personal laptop&lt;/a&gt; (hooray bonus!) and got a suggestion for a blog post about setting up my Ubuntu for personal use. It's been a while since I shared these types of posts, so I thought it would be fun to write about my new setup.&lt;/p&gt;

&lt;p&gt;I've been an Ubuntu user for a long time, it is a system where I feel very comfortable so that means it also makes me more productive. I decided to try the newest release, the brand new 21.04 a.k.a &lt;em&gt;Hirsute Hippo&lt;/em&gt;. In this post, I share all my setup process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rav_9imM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iunpe6c9pz9df30ztpy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rav_9imM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iunpe6c9pz9df30ztpy6.png" alt="Hirsute Hippo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Well, the first step is to get the system all installed and set up. &lt;/p&gt;

&lt;p&gt;As I mentioned previously, I chose &lt;a href="https://discourse.ubuntu.com/t/hirsute-hippo-release-notes/19221?_ga=2.160269758.2020671091.1619944592-790858347.1619944592"&gt;the newest 21.04 release of Ubuntu&lt;/a&gt;, also known as Hirsute Hippo. You might want to go with the LTS (20.04) version if you don't plan on upgrading / reinstalling your system before 22.04 is out (the next LTS). The advantage of the 21.04 version is because it's already one year newer than the LTS, so the software that it comes with and the default apt packages for the distro are already bleeding edge, so you can install most things via &lt;code&gt;apt&lt;/code&gt; without worrying that it's all outdated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation-remarks"&gt;
  &lt;/a&gt;
  Installation Remarks
&lt;/h3&gt;

&lt;p&gt;Because this is a new laptop, I didn't need to do any backup, but if you are going to do this on your existing system please don't forget about it :)&lt;/p&gt;

&lt;p&gt;I always choose &lt;a href="https://ubuntu.com/core/docs/uc20/full-disk-encryption"&gt;full disk encryption&lt;/a&gt; when installing Ubuntu, this is an option that will show up when choosing installation type and partitions. This adds extra security to your system, just be sure you keep your decryption key safe otherwise you will lose access to your entire system!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#priority-installs"&gt;
  &lt;/a&gt;
  Priority Installs
&lt;/h2&gt;

&lt;p&gt;Depending on which Ubuntu version you're installing, you may need to update the system right after installation to make sure you have the most updated version of the software you're going to use. You will get a notification from Ubuntu if updates are available for your system as soon as you log in.&lt;/p&gt;

&lt;p&gt;Now it's time open the terminal to install a few basic packages right away:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;vim git unzip curl ffmpeg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, onto more interesting things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#terminator-and-ohmyzsh"&gt;
  &lt;/a&gt;
  Terminator and Oh-My-Zsh
&lt;/h3&gt;

&lt;p&gt;Next, I like to set up my terminal and shell. I've been using &lt;a href="https://terminator-gtk3.readthedocs.io/en/latest/"&gt;Terminator&lt;/a&gt; for years, I really like to be able to split the screen in multiple ways and Terminator is a lot easier to use than tmux &lt;strong&gt;for me&lt;/strong&gt;. I'm also a big fan of &lt;a href="https://ohmyz.sh/"&gt;oh-my-zsh&lt;/a&gt; and have been using it for many years.&lt;/p&gt;

&lt;p&gt;So the first thing is to install &lt;code&gt;zsh&lt;/code&gt; and &lt;code&gt;terminator&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;zsh terminator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you can run the Oh-my-Zsh installation script, which will also set &lt;code&gt;zsh&lt;/code&gt; as your default shell:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The theme I like is called &lt;code&gt;agnoster&lt;/code&gt;, and to use that theme you'll need to install &lt;a href="https://github.com/powerline/fonts"&gt;Powerline fonts&lt;/a&gt;. To install these, you'll need to clone their repo and run the install script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
git clone https://github.com/powerline/fonts.git
&lt;span class="nb"&gt;cd &lt;/span&gt;fonts/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you can edit your &lt;code&gt;.zshrc&lt;/code&gt; to change to the agnoster theme:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vim ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Set name of the theme to load --- if set to "random", it will&lt;/span&gt;
&lt;span class="c"&gt;# load a random theme each time oh-my-zsh is loaded, in which case,&lt;/span&gt;
&lt;span class="c"&gt;# to know which specific one was loaded, run: echo $RANDOM_THEME&lt;/span&gt;
&lt;span class="c"&gt;# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&lt;/span&gt;
&lt;span class="nv"&gt;ZSH_THEME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"agnoster"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to save the file (with &lt;code&gt;vim&lt;/code&gt;,  type &lt;code&gt;ESC&lt;/code&gt; then &lt;code&gt;:wq&lt;/code&gt; to save).&lt;/p&gt;

&lt;p&gt;You can now close the old terminal and open &lt;code&gt;terminator&lt;/code&gt;! You'll need to change the font to one of the Powerline patched fonts you just installed, otherwise the prompt won't show up correctly. &lt;/p&gt;

&lt;p&gt;To customize your Terminator appearance, right-click and go to &lt;code&gt;Preferences&lt;/code&gt; -&amp;gt; &lt;code&gt;Profiles&lt;/code&gt; and unmark the checkbox that says &lt;code&gt;Use the system fixed width font&lt;/code&gt;.  Then choose the font (tip: search for "powerline" to show only the powerline-compatible fonts).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pt918ONa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly9netcg9jt4334b47om.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pt918ONa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly9netcg9jt4334b47om.png" alt="Screenshot of Terminator settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While you're at it, you can also adjust background (I like to set up transparency to 85%).&lt;/p&gt;

&lt;p&gt;This is the final result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79I4MX9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsz1mk2v8tt2t2f5sc3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79I4MX9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsz1mk2v8tt2t2f5sc3r.png" alt="Terminator + Oh-my-zsh agnoster theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssh-setup"&gt;
  &lt;/a&gt;
  SSH Setup
&lt;/h2&gt;

&lt;p&gt;It is a good idea to set up a new SSH key if you are setting up a fresh new system. &lt;a href="https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"&gt;This GitHub Doc Page&lt;/a&gt; contains detailed instructions on how to set a new SSH key with the Ed25519 algorithm and add it to the SSH-agent.&lt;/p&gt;

&lt;p&gt;If you are using GitHub, it's also a good moment to add the new key to your account (go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;SSH and GPG Keys&lt;/code&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-setup"&gt;
  &lt;/a&gt;
  Git Setup
&lt;/h2&gt;

&lt;p&gt;To use Git from the command line, you'll need to configure your Git name and email address in order to do commits and pushes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Your Name"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"email@example.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#development-setup"&gt;
  &lt;/a&gt;
  Development Setup
&lt;/h2&gt;

&lt;p&gt;Nowadays I typically  have only a basic &lt;code&gt;php-cli&lt;/code&gt; installed on my system, and I use Docker + Docker Compose to run my full development environments. &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04"&gt;This tutorial from my friend Brian explains in detail how to get Docker installed on Ubuntu 20.04&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With Docker installed you can follow &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-20-04"&gt;my tutorial on How to Install Docker Compose&lt;/a&gt; to get Docker Compose also set up.&lt;/p&gt;

&lt;p&gt;If you'd like a basic PHP env for the command-line as well, you can install &lt;code&gt;php-cli&lt;/code&gt; and a few basic extensions from your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;php-cli php-mbstring php-gd php-curl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-up-jetbrains-phpstorm-ide"&gt;
  &lt;/a&gt;
  Setting Up Jetbrains PhpStorm (IDE)
&lt;/h3&gt;

&lt;p&gt;I've been using &lt;a href="https://www.jetbrains.com/phpstorm/"&gt;Jetbrains PhpStorm&lt;/a&gt; for many years, it is my favorite IDE (all from Jetbrains actually, since I've used RubyMine in the past too). Downloads are available in AppImage format, which is really helpful.&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://www.jetbrains.com/phpstorm/download/#section=linux"&gt;download PhpStorm&lt;/a&gt; as a trial too, if you'd like to try it out before buying a license. Once you've downloaded the package, just unpack it to somewhere in your home dir and run it with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./PhpStorm-211.7142.44/bin/phpstorm.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now install a desktop entry to PhpStorm by going to &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;Create Desktop Entry&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Now the fun starts, with theme choosing etc. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CGeN8myN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oacovdugy055gl6xqaqe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CGeN8myN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oacovdugy055gl6xqaqe.png" alt="Installing plugins on PHPStorm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The editor font size is always too small for me, so I like to adjust it to a bigger size. I've been using JetBrains mono size &lt;code&gt;20&lt;/code&gt;, and I also like to enable ligatures, I think it gives a nice look to some portions of code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k_12-dbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuqxroo7s5w5rz08hp4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k_12-dbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuqxroo7s5w5rz08hp4e.png" alt="Adjusting font size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#other-software-installs"&gt;
  &lt;/a&gt;
  Other Software Installs
&lt;/h2&gt;

&lt;p&gt;Because this is a personal laptop and I am a person of many hobbies, I will have a great mix of software here including video editing, graphics design, 3D design, and development (IDEs) software.&lt;/p&gt;

&lt;p&gt;Nowadays, most desktop applications for Ubuntu/Debian are being distributed as AppImage files, which are quite easy to work with. I usually create an &lt;code&gt;Apps&lt;/code&gt; folder in my home dir to save these applications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; ~/Apps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some of them still use more traditional distribution methods, like Gimp which can be installed via &lt;code&gt;apt&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;So here is a list of other applications that I got installed right away, organized by category:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphic-design"&gt;
  &lt;/a&gt;
  Graphic Design
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://inkscape.org/release/1.0.2/platforms/"&gt;Inkscape&lt;/a&gt; - Vector Graphics. Available as AppImage.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://mypaint.org/downloads/"&gt;MyPaint&lt;/a&gt; - Drawing and Painting. Available as AppImage.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.gimp.org/"&gt;Gimp&lt;/a&gt; - Graphic Design, photo manipulation. Installed via &lt;code&gt;apt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#video-and-streaming"&gt;
  &lt;/a&gt;
  Video and Streaming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/phw/peek"&gt;Peek&lt;/a&gt; - Simple screen recording, records in gif or mp4. Installed via &lt;code&gt;apt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://obsproject.com/download"&gt;OBS Studio&lt;/a&gt; - Screen recording and streaming. Installed via &lt;code&gt;apt&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.openshot.org/download/"&gt;OpenShot&lt;/a&gt; - Video Edition. Available as AppImage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#audio"&gt;
  &lt;/a&gt;
  Audio
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.audacityteam.org/download/"&gt;Audacity&lt;/a&gt; - Audio recording. Installed via &lt;code&gt;apt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.spotify.com/us/download/linux/"&gt;Spotify&lt;/a&gt; - On-demand music, installed via &lt;code&gt;snap&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://lmms.io/download#linux"&gt;LMMS&lt;/a&gt; - Music making (loops / midi etc). Available as AppImage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3d-design-amp-printing"&gt;
  &lt;/a&gt;
  3D Design &amp;amp; Printing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.freecadweb.org/downloads.php"&gt;FreeCAD&lt;/a&gt; - 3D Design. Available as AppImage.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://openscad.org/downloads.html"&gt;OpenScad&lt;/a&gt; - Programatic 3D Design. Installed via &lt;code&gt;apt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.blender.org/download/"&gt;Blender&lt;/a&gt; - 3D Design and modeling. Available as tar file that you just need to unpack to your home folder.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.prusa3d.com/prusaslicer/"&gt;Prusa Slicer&lt;/a&gt; - 3D Printing Software for Slicing Models. Available as AppImage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download all the AppImages and then do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv&lt;/span&gt; ~/Downloads/&lt;span class="k"&gt;*&lt;/span&gt;.AppImage ~/Apps
&lt;span class="nb"&gt;chmod&lt;/span&gt; +x ~/Apps/&lt;span class="k"&gt;*&lt;/span&gt;.AppImage
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting up a new system is a neverending task, but I am pretty happy now with the current state of my new laptop :) Can't wait to try out some of this software with this machine, since it's a big upgrade from my previous one.&lt;/p&gt;

&lt;p&gt;Anything important I missed? Tell me in the comments (:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wk17VdY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sdhhyi6uvpcl0lzr99t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wk17VdY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sdhhyi6uvpcl0lzr99t.png" alt="Current State"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why Laravel requires `ramsey/uuid` package?</title>
      <author>Zubair Mohsin </author>
      <pubDate>Sun, 02 May 2021 12:58:52 +0000</pubDate>
      <link>https://dev.to/zubairmohsin33/why-laravel-requires-ramsey-uuid-package-3ed8</link>
      <guid>https://dev.to/zubairmohsin33/why-laravel-requires-ramsey-uuid-package-3ed8</guid>
      <description>&lt;p&gt;From the About section on GitHub of ramsey/uuid package:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A PHP library for generating universally unique identifiers (UUIDs).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First thing we notice that its not a Laravel package, instead a PHP library and it can be used in any PHP project. Secondly, &lt;strong&gt;universally unique identifiers (UUIDs)&lt;/strong&gt;, let's talk a bit about what are UUIDs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-uuid"&gt;
  &lt;/a&gt;
  What is a UUID?
&lt;/h2&gt;

&lt;p&gt;UUID stands for &lt;strong&gt;Universally Unique Identifier&lt;/strong&gt;. When it says Universally, it truly means Universally. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you generate a UUID, its uniqueness can be guaranteed across space and time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A UUID is 128 bits long and is usually represented as a hexadecimal string split into five groups with dashes, like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="mi"&gt;998&lt;/span&gt;&lt;span class="n"&gt;fd066&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c786&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4064&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="n"&gt;c98&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e378e450cd4a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use these &lt;strong&gt;unique&lt;/strong&gt; values and assign them to our database records and later &lt;strong&gt;identify&lt;/strong&gt; the records by these hexadecimal strings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uuids-in-laravel"&gt;
  &lt;/a&gt;
  UUIDs in Laravel
&lt;/h2&gt;

&lt;p&gt;Laravel framework is famous for best Developer Experience (DX), therefore, Laravel makes it a cinch to work with UUIDs. If you open the &lt;strong&gt;tinker&lt;/strong&gt; in Laravel project and write below code snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nc"&gt;Str&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll get an output like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="s2"&gt;"220b94fc-04f9-48eb-a14a-ba868ff43919"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's just that simple to create UUIDs  in Laravel. Now let's take a look at how it works and where &lt;code&gt;ramsey/uuid&lt;/code&gt; package comes into play.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-dive"&gt;
  &lt;/a&gt;
  Code Dive
&lt;/h3&gt;

&lt;p&gt;If we dive into the definition of &lt;code&gt;Str::uuid()&lt;/code&gt; method, we see the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Illuminate\Support&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Str&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * The callback that should be used to generate UUIDs.
     *
     * @var callable
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$uuidFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


    &lt;span class="cd"&gt;/**
     * Generate a UUID (version 4).
     *
     * @return \Ramsey\Uuid\UuidInterface
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$uuidFactory&lt;/span&gt;
                    &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$uuidFactory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Uuid&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;uuid4&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Set the callable that will be used to generate UUIDs.
     *
     * @param  callable|null  $factory
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;createUuidsUsing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;callable&lt;/span&gt; &lt;span class="nv"&gt;$factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$uuidFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$factory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we first call &lt;code&gt;createUuidsUsing()&lt;/code&gt; method and provide a &lt;code&gt;callback&lt;/code&gt; that will create UUIDs, then &lt;code&gt;uuid()&lt;/code&gt; method will execute that &lt;code&gt;callback&lt;/code&gt; to generate a UUID. But if that's not the case, it will use &lt;code&gt;Uuid::uuid4()&lt;/code&gt; from &lt;code&gt;ramsey/uuid&lt;/code&gt; to generate the UUID for us. This is how Laravel is able to generate UUIDs by leveraging &lt;code&gt;ramsey/uuid&lt;/code&gt; package.&lt;/p&gt;

&lt;p&gt;You might be wondering about why this method is named as &lt;code&gt;uuid4()&lt;/code&gt; ? What does &lt;code&gt;4&lt;/code&gt; mean here?&lt;/p&gt;

&lt;p&gt;There are five versions of UUIDs. Each version has different algorithm to generate it. Read more about all versions in &lt;a href="https://uuid.ramsey.dev/en/latest/rfc4122.html"&gt;ramsey/uuid package docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uuids-in-laravel-migrations"&gt;
  &lt;/a&gt;
  UUIDs in Laravel migrations
&lt;/h2&gt;

&lt;p&gt;Laravel provides a handy method on &lt;code&gt;Illuminate\Database\Schema\Blueprint&lt;/code&gt; class named &lt;code&gt;uuid&lt;/code&gt; to specify in migrations that this column will be used to store a UUID.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might wonder if there's a &lt;strong&gt;column type&lt;/strong&gt; in database which stores UUIDs, but that's not the case. If we look inside the &lt;code&gt;Illuminate\Database\Schema\Grammars\MySqlGrammar&lt;/code&gt; class and find the &lt;code&gt;typeUuid()&lt;/code&gt; method, we can see the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="cd"&gt;/**
     * Create the column definition for a uuid type.
     *
     * @param  \Illuminate\Support\Fluent  $column
     * @return string
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;typeUuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Fluent&lt;/span&gt; &lt;span class="nv"&gt;$column&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'char(36)'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which means that &lt;code&gt;$table-&amp;gt;uuid()&lt;/code&gt; will be translated to a column wich &lt;code&gt;char&lt;/code&gt; data type and its length would be &lt;code&gt;36&lt;/code&gt; characters, always.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Laravel does not generate UUIDs automatically for &lt;code&gt;uuid&lt;/code&gt; columns. Developer must provide the logic to generate UUIDs when inserting records in the database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#interesting-facts-about-raw-ramseyuuid-endraw-in-laravel-context"&gt;
  &lt;/a&gt;
  Interesting facts about &lt;code&gt;ramsey/uuid&lt;/code&gt; in Laravel context
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This package was first required on &lt;strong&gt;08 Aug, 2016&lt;/strong&gt; by &lt;strong&gt;Taylor Otwell&lt;/strong&gt; when he worked on &lt;strong&gt;channel specific notifications.&lt;/strong&gt; UUIDs were used to identify the database notifications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/laravel/framework/commit/dce28b4d0b171f1da1193e45296e809438b35ed3#diff-d2ab9925cad7eac58e0ff4cc0d251a937ecf49e4b6bf57f8b95aab76648a9d34"&gt;Link to commit&lt;/a&gt; by &lt;strong&gt;Taylor Otwell&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Version &lt;code&gt;~3.0&lt;/code&gt; was used initially in Laravel &lt;strong&gt;v5.3&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;UUID helper methods were introduced in Laravel &lt;strong&gt;v5.6.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/laravel/framework/commit/3d39604bba72d45dab5b53951af42bbb21110cad"&gt;Link to commit&lt;/a&gt; by &lt;strong&gt;Taylor Otwell&lt;/strong&gt; which added the helper methods&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope you enjoyed this post. Next, we will see why Laravel requires &lt;code&gt;swiftmailer/swiftmailer&lt;/code&gt; package. You can follow me on &lt;a href="https://twitter.com/Zubairmohsin33"&gt;Twitter&lt;/a&gt; or join my &lt;a href="https://letter.zubairmohsin.dev"&gt;newsletter&lt;/a&gt; for more content.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>How I Built Spotify Alternative for Google Home</title>
      <author>Azimjon Pulatov</author>
      <pubDate>Sun, 02 May 2021 12:49:11 +0000</pubDate>
      <link>https://dev.to/azimjohn/how-i-built-spotify-alternative-for-google-home-2ilf</link>
      <guid>https://dev.to/azimjohn/how-i-built-spotify-alternative-for-google-home-2ilf</guid>
      <description>&lt;p&gt;It was Sunday night. Hackathon results were about to be announced and when I heard my team's name, I jumped out of my chair, I was thrilled. To add more excitement, I asked my Google Home to play &lt;em&gt;"We Are The Champions"&lt;/em&gt; and to my surprise, it played totally different song. I could be disappointed but instead, I was inspired to know what I was building next.&lt;/p&gt;

&lt;p&gt;Why did it play a different song? Because choosing songs is only available to Spotify Premium subscribers. Instead of subscribing, I decided to build an alternative myself.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjfSd6wS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1178631635606151168/yIlrcg4o_normal.jpg" alt="I Am Devloper profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        I Am Devloper
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @iamdevloper
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      “You want *me* to pay *money* for something I could build *myself*” - every developer
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:52 PM - 16 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1328395582252183553" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1328395582252183553" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1328395582252183553" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;From the day I got my Google Home, I was wondering how to program it to do things I want. The first and easiest option was &lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt;. After connecting my Google Account, I was able to make simple applets that allowed to make Google Assistant say things back when certain questions were asked and bind it to actions like making a web request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LprJRDb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dqn4fly5bdkldgshuhf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LprJRDb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dqn4fly5bdkldgshuhf.png" alt="IFTTT Simple Phrase Applet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IFTTT wasn't quite what I was looking for, because it couldn't perform tasks like playing audio or programmatically generate a response. Then I discovered &lt;a href="http://actions.google.com/"&gt;Google Actions&lt;/a&gt;. When I saw its capabilities, I realized - this is the way. &lt;/p&gt;

&lt;p&gt;The first thing I needed to set up for the application was a webhook. So whenever the application gets invoked, Google Action makes a request to the webhook. One way to provide a publicly available URL for the webhook would be to deploy the application somewhere. Instead, for the development, I used JPRQ, a Ngrok Alternative for exposing a local webserver. You can read about how I built it. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/azimjohn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLe3B-Xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--OL3QJh-B--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/427606/afbff2b3-962f-4379-a7e4-efcac3f08614.jpeg" alt="azimjohn image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/azimjohn/how-i-built-ngrok-alternative-3n0g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I built Ngrok Alternative&lt;/h2&gt;
      &lt;h3&gt;Azimjon Pulatov ・ Jul  9 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#go&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sideprojects&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TGVuQHJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa3mfocxvbo7cux61pad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TGVuQHJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa3mfocxvbo7cux61pad.png" alt="Setting Up WebHook in Google Actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After setting up the webhook, my local server was receiving anything I say to Google Assistant after the application was invoked. I could easily send a media response - a playable URL, and the assistant would play it. Great!&lt;/p&gt;

&lt;p&gt;The best tutorial I could find on Google Actions is &lt;a href="https://www.youtube.com/watch?v=Z1hxvniJ18s"&gt;Behind the Actions&lt;/a&gt;, it helped me to understand basic building blocks like &lt;em&gt;Scenes, Types, and Intents&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;The next part is searching for songs. I first looked into available APIs provided by Deezer, Sound Cloud, and Apple Music. But none of them provided the full song, only the partial content. Then I decided to write a simple crawler to search songs from z1.fm. I thought about copyright issues, so I decided to keep MusicSpider to myself and not publish it for others.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6fVuZLaj9WI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Source code for MusicSpider is available on &lt;a href="https://github.com/azimjohn/musicspider"&gt;Github&lt;/a&gt;, both the web application built using Flask and the crawler for searching for songs.&lt;/p&gt;

&lt;p&gt;To share my learnings, I gave a talk about "&lt;em&gt;Programmable Google Assistant&lt;/em&gt;" where I also shared some of my other applications I built for Google Assistant.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G1EigCSIsIs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Happy building,&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

</description>
      <category>python</category>
      <category>node</category>
      <category>webdev</category>
      <category>jprq</category>
    </item>
    <item>
      <title>7 uncomfortable truths about being a developer.</title>
      <author>Ankur Tyagi</author>
      <pubDate>Sun, 02 May 2021 12:38:50 +0000</pubDate>
      <link>https://dev.to/tyaga001/7-uncomfortable-truths-about-being-a-developer-1gec</link>
      <guid>https://dev.to/tyaga001/7-uncomfortable-truths-about-being-a-developer-1gec</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;7 uncomfortable truths about being a developer.&lt;br&gt;&lt;br&gt;A Thread... &lt;a href="https://t.co/VD2s9tlnKm"&gt;pic.twitter.com/VD2s9tlnKm&lt;/a&gt;&lt;/p&gt;— Ankur💻🎧💪 (@TheAnkurTyagi) &lt;a href="https://twitter.com/TheAnkurTyagi/status/1388775200234213376?ref_src=twsrc%5Etfw"&gt;May 2, 2021&lt;/a&gt;
&lt;/blockquote&gt;  
&lt;h1&gt;
  &lt;a href="#7-uncomfortable-truths-about-being-a-developer"&gt;
  &lt;/a&gt;
  7 uncomfortable truths about being a developer.
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#1-we-have-an-identity-crisis"&gt;
  &lt;/a&gt;
  1. We have an identity crisis.
&lt;/h2&gt;

&lt;p&gt;I used to be confused about whether I should introduce myself as a developer, software engineer, front-end engineer, back-end engineer, full-stack engineer, a software engineer in a test, or just a freelancer.&lt;/p&gt;

&lt;p&gt;The tech market is the market.&lt;br&gt;
It doesn't care about who you are, as a developer.&lt;/p&gt;

&lt;p&gt;-Which degree you hold&lt;br&gt;
-What boot camp you completed&lt;br&gt;
-Which Udemy course you did&lt;/p&gt;

&lt;p&gt;It's hard-hitting for some devs initially.&lt;/p&gt;

&lt;p&gt;Your emotional &amp;amp; mental state as a dev has a direct impact on your work&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-most-of-us-are-in-debt"&gt;
  &lt;/a&gt;
  2. Most of us are in debt.
&lt;/h2&gt;

&lt;p&gt;Newcomer's things all financial worries could just go out the window, Unfortunately, that isn’t the case&lt;/p&gt;

&lt;p&gt;Be it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;home loan&lt;/li&gt;
&lt;li&gt;car loan &lt;/li&gt;
&lt;li&gt;education loan&lt;/li&gt;
&lt;li&gt;personal loans&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You must gain control over your money or the lack of it will forever control you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-we-all-have-imposter-syndrome"&gt;
  &lt;/a&gt;
  3. We all have imposter syndrome
&lt;/h2&gt;

&lt;p&gt;Absolutely everybody wants to win as a dev&lt;/p&gt;

&lt;p&gt;All developer feels different inside (less confident, less able, etc.) from how they infer other people to feel.&lt;/p&gt;

&lt;p&gt;Most of us who struggle with imposter syndrome worry a lot about what others think of us.&lt;/p&gt;

&lt;p&gt;For all the newbies or who want to enter the tech world, I would say:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#begin-by-dreaming"&gt;
  &lt;/a&gt;
  "Begin by dreaming"
&lt;/h3&gt;

&lt;p&gt;"If another developer has done it, there’s a good chance you can do it too".&lt;/p&gt;

&lt;p&gt;You get what you focus on. &lt;/p&gt;

&lt;p&gt;If you are continually thinking of all the things that can go wrong, they will.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-as-a-senior-developer-you-are-a-celebrity-whether-you-like-it-or-not"&gt;
  &lt;/a&gt;
  4. As a senior developer, you are a celebrity, whether you like it or not.
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Every word you share will be analyzed,&lt;br&gt;
Your every action will be reproduced,&lt;br&gt;
You'll set a new standard,&lt;br&gt;
What you'll say on social media.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Think of how you speak, how you act and behave &amp;amp; share next time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-being-a-developer-is-fucking-hard"&gt;
  &lt;/a&gt;
  5. Being a developer is fucking hard
&lt;/h2&gt;

&lt;p&gt;After days of early excitement of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First job&lt;/li&gt;
&lt;li&gt;First boot camp&lt;/li&gt;
&lt;li&gt;First Github PR merge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's showtime, hell lot of frameworks that tech has will chase you.&lt;br&gt;
At that point, there are only two things that will help.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Patience &amp;amp; Your dreams.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#6-fellow-developer-success-will-generate-massive-selfdoubt-whether-you-like-it-or-not"&gt;
  &lt;/a&gt;
  6. Fellow developer success will generate massive self-doubt, whether you like it or not.
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"The worst enemy for a developer is self-doubt."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt; TheAnkurTyagi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Doubt kills more dreams of developers than failure ever will.&lt;/p&gt;

&lt;p&gt;You are so much stronger than you realize.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-people-might-mock-you-for-going-on-an-unconventional-path"&gt;
  &lt;/a&gt;
  7. People might mock you for going on an unconventional path.
&lt;/h2&gt;

&lt;p&gt;Everyone will tell you, take the safe decision, walk down the safe path, choose the safe side but. &lt;/p&gt;

&lt;p&gt;Developer's progress has always been driven by unconventional thinking.&lt;/p&gt;

&lt;p&gt;Better to be wrong than be boring.&lt;/p&gt;

&lt;p&gt;That's it for today &amp;amp; Thanks for reading. &lt;/p&gt;

&lt;p&gt;I have recently written a book for developer growth &amp;amp; shared my 11+ years of experience.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are serious to grow as a developer. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Grab the book now for a weekend offer for just $15 &lt;a href="https://gumroad.com/l/nextgendev/grow"&gt;The Prime Guide&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QSnKm7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619958998661/st8Eq0o8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QSnKm7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619958998661/st8Eq0o8b.png" alt="book.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Join 100+ developers who already bought &amp;amp; growing better. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WyPdahmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8zn4qryo5nv0hrbt5zq.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WyPdahmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8zn4qryo5nv0hrbt5zq.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-write-more-about-code-life-and-fitness-in-my-211-newsletter"&gt;
  &lt;/a&gt;
  I write more about code life and fitness in my 2-1-1 newsletter.
&lt;/h3&gt;

&lt;p&gt;I encourage you to sign up for my weekly:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“2-1-1” Friday newsletter:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the latest edition: 👇&lt;/p&gt;

&lt;p&gt;It's free.  &lt;a href="https://codelifefitness.com/2-1-1/"&gt;CLF&lt;/a&gt; &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>career</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
