<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Chatterpay</title>
      <author>Megha Paul</author>
      <pubDate>Fri, 07 Jan 2022 19:02:42 +0000</pubDate>
      <link>https://dev.to/megh2507/chatterpay-4bde</link>
      <guid>https://dev.to/megh2507/chatterpay-4bde</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-problem-chatterpay-solves"&gt;
  &lt;/a&gt;
  The problem Chatterpay solves
&lt;/h3&gt;

&lt;p&gt;Communities are forming in social chat apps like Discord and Slack. When these communities become a form of marketplace, it needs a payment medium. People have to leave the current app and that causes inconvenience. Many are also not willing to share their payment medium details with strangers. Tracking payments across different communities is also a hassle that requires the installation of other apps and setting them up separately.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;A platform has been built using which people can initiate payments to their peers through chatbots.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The payment process is accessible through simple chat bot commands.&lt;/li&gt;
&lt;li&gt;The bot will then automate the whole payment process.&lt;/li&gt;
&lt;li&gt;Users will get access to their transaction histories through the dashboard.&lt;/li&gt;
&lt;li&gt;The process is totally p2p and secure. Our platform uses Razorpay payment systems and it doesn't store any sensitive user data at any stage of the payment process.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#choose-your-own-adventure"&gt;
  &lt;/a&gt;
  Choose Your Own Adventure
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/Megh2507/chatter_pay"&gt;GitHub repo link&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://chatterpay-discord-bot.vercel.app/"&gt;App link&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejx22TVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmmnhxbegk6t1qw3exv7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejx22TVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmmnhxbegk6t1qw3exv7.jpeg" alt="Landing Page" width="880" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rkQ4ZiKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsoqzhzl6h1s56wb104u.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rkQ4ZiKa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsoqzhzl6h1s56wb104u.jpeg" alt="Dashboard" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--taJTaWGo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6hbhy1mb800yjt52pik.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--taJTaWGo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6hbhy1mb800yjt52pik.jpeg" alt="Discord Bot Command" width="684" height="213"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SA5rk4tZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fzptjje6u97lkalhhk6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SA5rk4tZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fzptjje6u97lkalhhk6.jpeg" alt="Slack Bot Command" width="684" height="213"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8BJrsTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pj0m2g07wq14eq1dqnoh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8BJrsTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pj0m2g07wq14eq1dqnoh.jpeg" alt="Discord Bot Workflow" width="880" height="604"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jn3r0V1T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3qh4gjuxtnkn7bz9438.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jn3r0V1T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3qh4gjuxtnkn7bz9438.jpeg" alt="Slack Bot Workflow" width="880" height="604"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>SVG graphics can make your websites NOT look like 
üóë garbage üóë</title>
      <author>IroncladDev</author>
      <pubDate>Fri, 07 Jan 2022 18:41:40 +0000</pubDate>
      <link>https://dev.to/ironcladdev/svg-graphics-can-make-your-websites-not-look-like-garbage-3232</link>
      <guid>https://dev.to/ironcladdev/svg-graphics-can-make-your-websites-not-look-like-garbage-3232</guid>
      <description>&lt;p&gt;Something that really satisfies me is seeing a vector graphic in a website.  Your css skills might be amazing, but without putting some sort graphics in your website, your website can look really compacted and unprofessional at times.  &lt;/p&gt;

&lt;p&gt;In this article, I'm going to show you the benefits of using SVG and how it can make your websites appear to be absolutely amazing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-svgs"&gt;
  &lt;/a&gt;
  What are SVGs?
&lt;/h3&gt;

&lt;p&gt;SVG stands for Scalable Vector Graphics.  They are made from pure XML and never lose quality no matter how large they are scaled up to.&lt;/p&gt;

&lt;p&gt;Most of the time, logos, illustration graphics, and icons are made of SVG.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;If you are using pngs as icons, I will happily write an article regarding your site that will make you burst out in tears&lt;/del&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefits"&gt;
  &lt;/a&gt;
  The benefits
&lt;/h3&gt;

&lt;p&gt;Let's take a look why you should use them in your sites.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-performance"&gt;
  &lt;/a&gt;
  1. Performance
&lt;/h4&gt;

&lt;p&gt;SVGs take up very little memory relative to PNGs.  Yes, someone's bandwidth might be fast, but your lighthouse score will drop by a large amount.&lt;/p&gt;

&lt;p&gt;I'm not saying to turn photos and other non-vector graphics to SVG, but if you are having logos, icons, and some other not-so-complex images, use SVGs for the sake of your website's performance and the beautiful 100 on your lighthouse score.&lt;/p&gt;

&lt;p&gt;If you need to convert a PNG image to SVG, here's the best tool I've found so far:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pngtosvg.com/"&gt;https://www.pngtosvg.com/&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-quality"&gt;
  &lt;/a&gt;
  2. Quality
&lt;/h4&gt;

&lt;p&gt;Guess what annoys me to the point of pulling my hair out?  Low-quality images scaled up to a massive size.  Can you imagine how terrible a site will look if its overall design is clean and a non-vector graphic &lt;strong&gt;absolutely ruins&lt;/strong&gt; the sweet design of your website?&lt;/p&gt;

&lt;p&gt;It makes your website look like it's from the '90s when SVGs weren't invented yet.  If you have the best tech, &lt;strong&gt;use it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I was able to take a screenshot of an absolute abomination of a loader.  Please folks, don't do this üôè&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QSNGVU5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/245jblmifi9yy4z3j87c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSNGVU5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/245jblmifi9yy4z3j87c.png" alt="The low-quality abomination" width="342" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-spacing"&gt;
  &lt;/a&gt;
  3. Spacing
&lt;/h4&gt;

&lt;p&gt;If you've done some work with the frontend before, you know what it's like when you don't have enough content to fill up enough space.&lt;/p&gt;

&lt;p&gt;The solution to this?  Use some icons and graphics in your site.  If you have the graphics, developing should be a breeze.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-visual-comes-first"&gt;
  &lt;/a&gt;
  4. Visual Comes First
&lt;/h4&gt;

&lt;p&gt;Usually, when a user visits a site, the first thing they see is graphics, not words.  If you really want to get them to read more, put something that will catch their attention (if you're a good artist).&lt;/p&gt;

&lt;p&gt;If you greet them with just some text or a &lt;em&gt;massive&lt;/em&gt; amount of text, their first reaction would be "yikes, I don't want to read that!"&lt;/p&gt;

&lt;p&gt;Just remember, give your website a good impression by putting something a user will see.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-appear-more-professional"&gt;
  &lt;/a&gt;
  5. Appear more professional
&lt;/h4&gt;

&lt;p&gt;Not only will the website feel more professional, but also, the artist will appear that way as well.  Be sure to put some graphics on your personal developer website.  If you can do graphics, people will be more likely to hire you for a project if they can see you are artistic as well.&lt;/p&gt;

&lt;p&gt;Even just having a little bit of artsiness will help you out.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#some-tips-on-manipulating-svgs"&gt;
  &lt;/a&gt;
  Some tips on manipulating SVGs
&lt;/h3&gt;

&lt;p&gt;Svgs can be set as background images, used in &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; html tags, and also embedded as raw svg in html with &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#remove-ratio-scaling"&gt;
  &lt;/a&gt;
  Remove ratio scaling
&lt;/h4&gt;

&lt;p&gt;If you don't remove ratio aspect preservation from an svg, it will always maintain the same width and height ratio and not allow you to stretch it.  This comes in useful at times, but in some situations, you might want to stretch them if you are using percent-based web development.&lt;/p&gt;

&lt;p&gt;This cannot be done on an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element.  It can only be done on an actual svg tag.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;svg preserveaspectratio="none"&amp;gt;&lt;br&gt;
...&lt;br&gt;
&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Of course, there are many more ways to manipulate the aspect ratio of svg images.  If you want, be sure to check out the official &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio"&gt;MDN documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#converting-svg-raw-xml-version-to-an-image"&gt;
  &lt;/a&gt;
  Converting SVG (raw xml version) to an image
&lt;/h4&gt;

&lt;p&gt;You can embed an svg in html with &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; tags as well as &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags as I've mentioned before.  &lt;/p&gt;

&lt;p&gt;The question is, you have the xml, but how can you convert it to be an svg file?&lt;/p&gt;

&lt;p&gt;It's simpler than ever.  Put the xml in a &lt;code&gt;.txt&lt;/code&gt; file and then change it to &lt;code&gt;.svg&lt;/code&gt;.  That's literally it.  If you want to edit it, just change it back to txt again and reconvert it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#animating-svgs"&gt;
  &lt;/a&gt;
  Animating SVGs
&lt;/h4&gt;

&lt;p&gt;To animate SVGs, you'll have to use raw xml in your html code instead of embedding it in an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.  Add your selectors and hook it up to an animation.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#drawing-your-graphics"&gt;
  &lt;/a&gt;
  Drawing your graphics
&lt;/h3&gt;

&lt;p&gt;I think that's enough facts for you.  Let's actually do something.&lt;/p&gt;

&lt;p&gt;Download the app at &lt;a href="https://boxy-svg.com/"&gt;https://boxy-svg.com/&lt;/a&gt; or just use it in your browser.  It is the best SVG editor I've been able to find so far.&lt;/p&gt;

&lt;p&gt;You don't have to worry about the free trial and the paid plans, etc.  You can still get a lot out of it even if your free trial ends.  Literally just open the Elements tab and copy the outer svg.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uEbKyKOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgcbc4v12lx78qq547ce.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uEbKyKOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgcbc4v12lx78qq547ce.png" alt="Copying the Outer SVG" width="880" height="609"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Well, I guess that's all I have to say on this topic.  Be sure to share your svg drawings with me in the Comments below.&lt;/p&gt;

&lt;p&gt;Liked this post, be sure to join my &lt;a href="https://discord.gg/TZCc8P2cyH"&gt;discord&lt;/a&gt; and support this post with a couple of reactions!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 07 Jan 2022 18:22:27 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-50km</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-50km</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Reaching a milestone in your career ... or whatever else might spark joy ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your accomplishments this week! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xUPGcMzwkOY01nj6hi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xUPGcMzwkOY01nj6hi/giphy.gif" alt='Balloons that read "yay"' width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Upgrading from Rails 6.x Webpacker to Rails 7 Importmaps</title>
      <author>Steve Alex</author>
      <pubDate>Fri, 07 Jan 2022 18:13:57 +0000</pubDate>
      <link>https://dev.to/salex/upgrading-from-rails-6x-webpacker-to-rails-7-importmaps-59jo</link>
      <guid>https://dev.to/salex/upgrading-from-rails-6x-webpacker-to-rails-7-importmaps-59jo</guid>
      <description>&lt;p&gt;I've spend a good part of the last few months trying to figure out how I was going to convert my three semi-private Rails 6.1.x apps to Rails 7. I created a bunch of Rails 7 test apps using ESbuild, Importmaps and even Webpacker. While ESbuild may of been an eaiser path (basically node modeles without webpacker stuff), I leaned towards Importmaps. Other than a few node package I used, almost all of my JS was using Stimulus in some form.&lt;/p&gt;

&lt;p&gt;So I marched on with my journey to Rails 7.  Along the way I did do a lot of refactoring. I've been moving slowly from W3css to Tailwind.css. I already had the mixed css with some of my own scss. I don't think I'll remember all the steps I took, but I try to decribe the steps I took in some kind of order. It may not be the best way, but I did it my way and it worked&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rail7-branch"&gt;
  &lt;/a&gt;
  Rail7 Branch
&lt;/h3&gt;

&lt;p&gt;I created and checked out a new &lt;code&gt;rails7&lt;/code&gt; branch. Fortunally I didn't have to make any changes to my deployed master, but merging branches was always in the back of my mind.&lt;/p&gt;

&lt;p&gt;I then did &lt;code&gt;bin/rails app:update&lt;/code&gt; and it did its thing. I hate to admint this, but I have &lt;strong&gt;No&lt;/strong&gt; tests. I've tried many times to get into the test mode, but failed! So I continued to test how I've tested for the last 40 years! &lt;a href="https://codeslaw.com/blog/10-jokes-only-programmers-will-find-funny-1110518#manager"&gt;Change something then push the car back up the hill and see if the brakes fail again!&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I can't remember if development worked after the update, but I think it did. The &lt;code&gt;gem 'sass-rails'&lt;/code&gt; was still in the Gemfile &lt;br&gt;
so I think it worked.&lt;/p&gt;

&lt;p&gt;I did have a problem with the update adding ActiveStorage migrations. Apperently I never installed ActiveStorge and really didn't want to.  I set &lt;code&gt;config.active_record.migration_error = false&lt;/code&gt; to avoid the error and later on changed &lt;code&gt;require "rails/all"&lt;/code&gt; to the documentation way to not require ActiveStorage.&lt;/p&gt;

&lt;p&gt;Onward to the next step, Rip out Webpacker and convert Gemfile to a fresh Rails 7 Importmaps version.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rip-out-webpacker"&gt;
  &lt;/a&gt;
  Rip out Webpacker.
&lt;/h3&gt;

&lt;p&gt;Seemed scary but pretty simple. I removed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; app/javascript/application.css&lt;/li&gt;
&lt;li&gt; app/javascript/channels/consumer.js&lt;/li&gt;
&lt;li&gt; app/javascript/channels/index.js&lt;/li&gt;
&lt;li&gt; app/javascript/packs/application.js&lt;/li&gt;
&lt;li&gt; babel.config.js&lt;/li&gt;
&lt;li&gt; bin/spring&lt;/li&gt;
&lt;li&gt; bin/webpack&lt;/li&gt;
&lt;li&gt; bin/webpack-dev-server&lt;/li&gt;
&lt;li&gt; bin/yarn&lt;/li&gt;
&lt;li&gt; config/webpack/development.js&lt;/li&gt;
&lt;li&gt; config/webpack/environment.js&lt;/li&gt;
&lt;li&gt; config/webpack/production.js&lt;/li&gt;
&lt;li&gt; config/webpack/test.js&lt;/li&gt;
&lt;li&gt; config/webpacker.yml&lt;/li&gt;
&lt;li&gt; package-lock.json&lt;/li&gt;
&lt;li&gt; postcss.config.js&lt;/li&gt;
&lt;li&gt; yarn.lock&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I then basically merged my orginal Gemfile with the Test App Gemfile.  The main stuff being (without my specifics):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"rails"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 7.0.0"&lt;/span&gt;

&lt;span class="c1"&gt;# The original asset pipeline for Rails [https://github.com/rails/sprockets-rails]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"sprockets-rails"&lt;/span&gt;

&lt;span class="c1"&gt;# Use postgresql as the database for Active Record&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"pg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 1.1"&lt;/span&gt;

&lt;span class="c1"&gt;# Use the Puma web server [https://github.com/puma/puma]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"puma"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 5.0"&lt;/span&gt;

&lt;span class="c1"&gt;# Use JavaScript with ESM import maps [https://github.com/rails/importmap-rails]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"importmap-rails"&lt;/span&gt;

&lt;span class="c1"&gt;# Hotwire's SPA-like page accelerator [https://turbo.hotwired.dev]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"turbo-rails"&lt;/span&gt;

&lt;span class="c1"&gt;# Hotwire's modest JavaScript framework [https://stimulus.hotwired.dev]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"stimulus-rails"&lt;/span&gt;

&lt;span class="c1"&gt;# Use Tailwind CSS [https://github.com/rails/tailwindcss-rails]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"tailwindcss-rails"&lt;/span&gt;

&lt;span class="c1"&gt;# Build JSON APIs with ease [https://github.com/rails/jbuilder]&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jbuilder"&lt;/span&gt;

&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"redis"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 4.0"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think at this point development worked, but maybe a few errors/problems with css.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sass-css-etc"&gt;
  &lt;/a&gt;
  SASS CSS, etc
&lt;/h3&gt;

&lt;p&gt;I had a bunch of crap scss. Some problably hadn't been used in years and never found a good way of identifing what wasn't used.  I knew the main things I used were colors, buttons, tables and a few almost components. I converted that scss to css with one of the many scss_to_css sites found on the web and added that css to my branch.&lt;/p&gt;

&lt;p&gt;Stimulus Controller needed to be converted to the @hotware version. &lt;code&gt;import { Controller } from "@hotwired/stimulus"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I added to &lt;code&gt;config/importmap.rb&lt;/code&gt; my unique CDNs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"application"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;preload: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"@hotwired/turbo-rails"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s2"&gt;"turbo.min.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;preload: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"@hotwired/stimulus-loading"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s2"&gt;"stimulus-loading.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;preload: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;pin_all_from&lt;/span&gt; &lt;span class="s2"&gt;"app/javascript/controllers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;under: &lt;/span&gt;&lt;span class="s2"&gt;"controllers"&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"stimulus-flatpickr"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s2"&gt;"https://ga.jspm.io/npm:stimulus-flatpickr@3.0.0-0/dist/index.m.js"&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"flatpickr"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s2"&gt;"https://ga.jspm.io/npm:flatpickr@4.6.9/dist/flatpickr.js"&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"stimulus-autocomplete"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s2"&gt;"https://ga.jspm.io/npm:stimulus-autocomplete@3.0.0-rc.5/src/autocomplete.js"&lt;/span&gt;
&lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="s2"&gt;"@hotwired/stimulus"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s2"&gt;"https://ga.jspm.io/npm:@hotwired/stimulus@3.0.1/dist/stimulus.js"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I also had to add a link to my layout for flatpickr &lt;code&gt;link rel="stylesheet" href="https://ga.jspm.io/npm:flatpickr@4.6.9/dist/flatpickr.min.css"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CSS bundling starting working with some problems. Many of them related to the &lt;code&gt;config/tailwind.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;I merged my old tailwing config file with the new verssion&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tailwindcss/defaultTheme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/helpers/**/*.rb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/javascript/**/*.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/views/**/*.html.*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app/components/**/*.html.*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;sans&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Inter var&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#ffa500&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;malt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#991A1E&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#A79055&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark-blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#0F3E61&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#63ed7a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;secondary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#9db3b8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;w3green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#4CAF50&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;w3red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#f44336&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue-link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#00c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;lime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;lightest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f1fff1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lighter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#e2ffe2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#c9ffc9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#b8ffb8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#96ff96&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;darker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#7cff7c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;darkest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#49ff49&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="c1"&gt;// gray: colors.trueGray,&lt;/span&gt;

        &lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;lighter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hsla(122, 59%, 64%, 1)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hsla(122, 49%, 54%, 1)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hsla(122, 39%, 49%, 1)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hsla(122, 39%, 39%, 1)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;darker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hsla(122, 39%, 29%, 1)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/aspect-ratio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/typography&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have a few Web Components and needed to add that folder to the &lt;code&gt;content:&lt;/code&gt; array&lt;/p&gt;

&lt;p&gt;I also had some tailwind webpack components the used &lt;code&gt;@apply&lt;/code&gt; and converted them to rails helpers. Something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;ComponentsHelper&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;greenBox&lt;/span&gt;
    &lt;span class="s2"&gt;"box-border box-content m-3 p-4 bg-green-300 border-green-100 border-2 text-black"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;blueBox&lt;/span&gt;
    &lt;span class="s2"&gt;"box-border box-content m-3 p-4 bg-blue-400 border-blue-200 border-2 text-black"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btn&lt;/span&gt;
    &lt;span class="s2"&gt;"py-1 px-2 text-black hover:text-white rounded font-lg font-bold "&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btnInfo&lt;/span&gt;
    &lt;span class="n"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"bg-blue-400 text-blue-link hover:text-blue-100"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btnWarn&lt;/span&gt;
    &lt;span class="n"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"bg-orange hover:text-yellow-200"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btnGreen&lt;/span&gt;
    &lt;span class="n"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"bg-green-500 hover:text-green-100"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btnDanger&lt;/span&gt;
    &lt;span class="n"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"bg-red-500 hover:text-red-200"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btnSuccess&lt;/span&gt;
    &lt;span class="n"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"bg-success hover:bg-green-700"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;btnSecondary&lt;/span&gt;
    &lt;span class="n"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"bg-secondary"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;flashAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'danger'&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"bg-red-200 text-red-600"&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'info'&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"bg-blue-200 text-blue-600"&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'success'&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"bg-green-200 text-green-600"&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'warning'&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"bg-yellow-400 text-yellow-800"&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"bg-gray-200 text-gray-600"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;destroyConfirmTag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;confirm_msg&lt;/span&gt;&lt;span class="ss"&gt;:""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="ss"&gt;:""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="ss"&gt;:""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;btnDanger&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; inline-block"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="n"&gt;confirm_msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Are You Sure?"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;confirm_msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="n"&gt;prompt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Delete &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:div&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
        &lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="ss"&gt;:"destroyConfirm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="ss"&gt;:"click-&amp;gt;destroyConfirm#confirm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;destroyConfirm_cmsg_value&lt;/span&gt;&lt;span class="ss"&gt;:confirm_msg&lt;/span&gt;
      &lt;span class="p"&gt;}){&lt;/span&gt;
      &lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;button_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;method: :delete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="ss"&gt;:"hidden"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="n"&gt;destroyConfirm_target&lt;/span&gt;&lt;span class="ss"&gt;:"submit"&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;node&lt;/span&gt; 
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last helper &lt;code&gt;destroyConfirmTag&lt;/code&gt; tackled the problem with Rails removing the &lt;code&gt;method::get&lt;/code&gt; from delete scaffold. The default change is to change &lt;code&gt;link_to&lt;/code&gt; to &lt;code&gt;button_to&lt;/code&gt;. But it didn't have a confirm tag. So I just call this on delete links and add back the confirm message. I have a couple delete links that I need to sure they didn't click the wrong link. There is a simple stimulus controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Controller&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@hotwired/stimulus&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Controller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;targets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;cmsg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// console.log("destroy confirm")&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasCmsgValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm_msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cmsgValue&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm_msg&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Are you sure?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="c1"&gt;// console.log(this.submitTarget.closest('form'))&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm_msg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;submitTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I even toyed with simple Ruby class to generate css from tailwind config file - never finished or used it though. Think I saw some post the the rails_tailwind gem site bitching about colors and components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TwColors&lt;/span&gt;

  &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:colors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:css&lt;/span&gt;

  &lt;span class="no"&gt;Colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:colors&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;                                                  
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:orange&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#ffa500"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                      
   &lt;span class="ss"&gt;:malt&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#991A1E"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                        
   &lt;span class="ss"&gt;:gold&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#A79055"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                        
   &lt;span class="ss"&gt;:"dark-blue"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#0F3E61"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
   &lt;span class="ss"&gt;:lime&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;                                                  
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:lightest&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#f1fff1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                  
     &lt;span class="ss"&gt;:lighter&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#e2ffe2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                   
     &lt;span class="ss"&gt;:light&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#c9ffc9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                     
     &lt;span class="ss"&gt;:DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#b8ffb8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                   
     &lt;span class="ss"&gt;:dark&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#96ff96"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                      
     &lt;span class="ss"&gt;:darker&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#7cff7c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                    
     &lt;span class="ss"&gt;:darkest&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"#49ff49"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="ss"&gt;:green&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:lighter&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hsla(122, 59%, 64%, 1)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;:light&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hsla(122, 49%, 54%, 1)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;:DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hsla(122, 39%, 49%, 1)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;:dark&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hsla(122, 39%, 39%, 1)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="ss"&gt;:darker&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hsla(122, 39%, 29%, 1)"&lt;/span&gt;&lt;span class="p"&gt;}}}&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="vi"&gt;@colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Colors&lt;/span&gt;
    &lt;span class="vi"&gt;@css&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"not parsed yet &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="vi"&gt;@colors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:colors&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;is_a?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;add_color_classes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;add_nested_color_classes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="vi"&gt;@css&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_color_classes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@css&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;".text-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; {&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s2"&gt;color: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;}"&lt;/span&gt;
    &lt;span class="vi"&gt;@css&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;".bg-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; {&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s2"&gt; background-color: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_nested_color_classes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;kk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;vv&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;kk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"DEFAULT"&lt;/span&gt;
        &lt;span class="n"&gt;add_color_classes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;vv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;add_color_classes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;kk&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;vv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#merging-rails7-branch-with-master"&gt;
  &lt;/a&gt;
  Merging rails7 branch with master
&lt;/h3&gt;

&lt;p&gt;One of my major fears was -&amp;gt; &lt;code&gt;What if I merged and Capistrono would not deploy&lt;/code&gt;. I spent way too much time trying to figure out how to deploy a branch to my staging server. I found posts on how to do it (old) and nothing worked.&lt;/p&gt;

&lt;p&gt;I then just faked it and ran staging locally.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;set staging DB to point to develoment&lt;/li&gt;
&lt;li&gt;bin/rails assets:precompile&lt;/li&gt;
&lt;li&gt;bin/rails s -e staging&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was where I found I had the bundling issues with css classes in components not being picked up. After a little tuning things were working fine. &lt;/p&gt;

&lt;p&gt;Had to remember to &lt;code&gt;bin/rails assets:clobber&lt;/code&gt; when I moved back to development.&lt;/p&gt;

&lt;p&gt;Everything seemed to be working fine, especially after a bunch of refactoring. It was time to merge. Made sure I had a backup clone of my repo and did a merge after I figured out how to do it (I've been using the OSX version of &lt;a href="//www.fork.dev"&gt;Fork&lt;/a&gt; and am not proficient with git or Fork.&lt;/p&gt;

&lt;p&gt;Devepment worked fine, as expected.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cap staging deploy&lt;/code&gt; also worked without any changes to the Capistrono config file.&lt;/p&gt;

&lt;p&gt;Played with it with a few more refactoring tweeks and the deployed to production!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;and I'm fine and&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-on-rails-7-without-any-webpacker-crap"&gt;
  &lt;/a&gt;
  I'm on Rails 7 without any Webpacker crap!!!
&lt;/h2&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Remix, SQLite, and Prisma, Oh my!</title>
      <author>Jon Crowell</author>
      <pubDate>Fri, 07 Jan 2022 18:05:04 +0000</pubDate>
      <link>https://dev.to/jonrcrowell/remix-sqlite-and-prisma-oh-my-17p1</link>
      <guid>https://dev.to/jonrcrowell/remix-sqlite-and-prisma-oh-my-17p1</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Previously published at &lt;a href="//www.fullstackfish.com"&gt;fullstackfish.com&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's create a Remix app and connect it to SQLite with Prisma.&lt;/p&gt;

&lt;p&gt;Open up a terminal and create a new Remix app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-remix@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll go through a short interview of how you want to set up your app. Pick these options to follow along or modify if you're in the mood for a little adventure.&lt;/p&gt;

&lt;p&gt;Call the app whatever you like. I'm calling mine "run-rsp".&lt;/p&gt;

&lt;p&gt;Pick the option to deploy to the Remix App Server for now. This is easy to change later.&lt;/p&gt;

&lt;p&gt;Pick JavaScript.&lt;/p&gt;

&lt;p&gt;Decline the offer to run &lt;code&gt;npm install&lt;/code&gt; as we will be using Yarn today.&lt;/p&gt;

&lt;p&gt;Once the setup process is complete, cd into the project folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;run-rsp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GDq44ZdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/138yqrxw3lb0nesazikf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GDq44ZdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/138yqrxw3lb0nesazikf.png" alt="Project Init" width="880" height="207"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open the project in VS Code, or whatever editor you want to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;code &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify that everything his set up correctly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now see the template Remix app running in your browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J9VmoA_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kskzxvsah5dbubseaam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J9VmoA_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2kskzxvsah5dbubseaam.png" alt="Remix is working" width="620" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's replace the default code with our own. We're going to be working primarily in the &lt;strong&gt;app&lt;/strong&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xu4mkVch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koifjldtk7v3kicug3i2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xu4mkVch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koifjldtk7v3kicug3i2.png" alt="App Folder" width="262" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's open up the &lt;strong&gt;root.jsx&lt;/strong&gt; file and examine its contents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Links&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;LiveReload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Outlet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Scripts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;ScrollRestoration&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New Remix App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;charSet&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;viewport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width=device-width,initial-scale=1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Meta&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Links&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/head&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Outlet&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ScrollRestoration&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Scripts&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LiveReload&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/html&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The content we are seeing on the home page is coming from the &lt;code&gt;&amp;lt;Outlet /&amp;gt;&lt;/code&gt; component. We'll edit that in  a second.&lt;/p&gt;

&lt;p&gt;Let's make a small change so we can see LiveReload in action.&lt;/p&gt;

&lt;p&gt;Change the title of the app in the &lt;code&gt;meta()&lt;/code&gt; function to whatever you want. Save the file and notice that the title of your app in the browser changes almost instantly. (Check the browser tab of the app or right-click and view page source)&lt;/p&gt;

&lt;p&gt;The home page content is &lt;code&gt;routes\index.jsx&lt;/code&gt;. Open the file up and delete everything. Save the file. You'll now see an error in the browser.&lt;/p&gt;

&lt;p&gt;Add the following function to fix the error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ll soon be connected to SQLite&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to refresh your browser to get LiveReload working again. Once you've done that, you'll see your heading rendered with the browser's default styling. Let's add a CSS reset and some global styles to our app so that it looks a little better.&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;root.jsx&lt;/code&gt; file, add a &lt;code&gt;links()&lt;/code&gt; function. We are already importing the &lt;code&gt;Links&lt;/code&gt; component and using it in the head of our document, so whatever we export from our &lt;code&gt;links()&lt;/code&gt; function will be used in the &lt;code&gt;Links&lt;/code&gt; component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// root.jsx&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stylesheet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://unpkg.com/modern-css-reset@1.4.0/dist/reset.min.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add a &lt;code&gt;styles&lt;/code&gt; folder in &lt;code&gt;app&lt;/code&gt; and add a file called &lt;code&gt;global.css&lt;/code&gt; with a rule or two.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OOXhYZ0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgv5mx9z1j849m4u2v92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OOXhYZ0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgv5mx9z1j849m4u2v92.png" alt="Global Styles" width="635" height="218"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save the file. Whatever styles you've added won't be applied yet ‚Äî we haven't linked the stylesheet to the app.&lt;/p&gt;

&lt;p&gt;Go back to &lt;code&gt;root.jsx&lt;/code&gt;. Import your styles and then add another link to the array in &lt;code&gt;links()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;globalStyles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/styles/global.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// root.jsx&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stylesheet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://unpkg.com/modern-css-reset@1.4.0/dist/reset.min.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stylesheet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;globalStyles&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;];&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save your changes and you should now see your styles applied in the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prisma-and-sqlite-setup"&gt;
  &lt;/a&gt;
  Prisma and SQLite setup
&lt;/h2&gt;

&lt;p&gt;Stop the app and let's add some dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @prisma/client
yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; prisma
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After they finish installing, initialize prisma with the sqlite provider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma init &lt;span class="nt"&gt;--datasource-provider&lt;/span&gt; sqlite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add a prisma folder with a schema.prisma file. It also adds a .env file if you don't already have one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HL1pOK2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efkgng72rs77buk1mk5z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HL1pOK2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efkgng72rs77buk1mk5z.png" alt="Prisma Folder" width="245" height="171"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By including the datasource provider, we don't need to edit the schema.prisma file to change the default provider to sqlite, and the .env file is populated for us with a connection string to a sqlite file. Nice touch, Prisma.&lt;/p&gt;

&lt;p&gt;Add a model to your &lt;code&gt;schema.prisma&lt;/code&gt; file for Soccer Teams. Install the Prisma extension if you haven't already to format your Prisma files. Prettier may try to override Prisma's formatting, so if that's the case, right-click the file, select format document, and indicate that Prisma should format the file. Now you don't need to worry about getting your models formatted. We are going to keep things simple here just to show how everything is wired up together. Our database will be a list of soccer teams, or whatever kind of teams you like.&lt;/p&gt;

&lt;p&gt;Add the Team model to your &lt;code&gt;schema.prisma&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;generator&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prisma-client-js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;datasource&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sqlite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;url&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="nx"&gt;Team&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;id&lt;/span&gt;        &lt;span class="nb"&gt;String&lt;/span&gt;   &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;id&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="nx"&gt;team&lt;/span&gt;      &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="nx"&gt;country&lt;/span&gt;   &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="nx"&gt;createdAt&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="nx"&gt;updatedAt&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;updatedAt&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploy the model to your database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma db push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should now have a dev.db file in the prisma folder next to our schema.prisma file.&lt;/p&gt;

&lt;p&gt;Launch prisma studio to see the results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma studio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SX4fwf-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnat6yf81m6mduzif6s1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SX4fwf-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnat6yf81m6mduzif6s1.png" alt="Prisma Studio" width="517" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can add a few teams directly in Prisma Studio. Click the &lt;strong&gt;Add record&lt;/strong&gt; button to do so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QgsEbFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhee4oukw8ldc7n3gtnd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QgsEbFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhee4oukw8ldc7n3gtnd.png" alt="Prisma Studio Records" width="635" height="239"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Add a file (&lt;code&gt;app/lib/db.server.js&lt;/code&gt;) to configure our connections to the database. Note that the "server" in the file tells Remix to run this on the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@prisma/client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's get the teams from the database and display them in our app. We'll use a loader function (this code runs on the server), which will feed our component with the &lt;code&gt;useLoaderData()&lt;/code&gt; hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// routes/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useLoaderData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;remix&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;  &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/lib/db.server&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;teams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findMany&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;teams&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useLoaderData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Soccer&lt;/span&gt; &lt;span class="nx"&gt;Teams&lt;/span&gt; &lt;span class="nx"&gt;around&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;world&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;teams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;team&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are using the Prisma &lt;code&gt;findMany()&lt;/code&gt; function to get all the teams in our database.&lt;/p&gt;

&lt;p&gt;That's it for now. The app we've built isn't particularly useful as is, but you now have the building blocks to build anything you want and style it however you like.&lt;/p&gt;

&lt;p&gt;It's been said many times but remains true: there has never been a better time to be a developer. There are so many wonderful tools to choose from. The biggest challenge can be deciding what to include in your toolbelt. Remix and Prisma should be on your short list. The developer experience with both is top notch.&lt;/p&gt;

&lt;p&gt;Enjoy, and Happy New Year!&lt;/p&gt;

</description>
      <category>remix</category>
      <category>react</category>
      <category>prisma</category>
      <category>sqlite</category>
    </item>
    <item>
      <title>What computer do you use for software develpment?</title>
      <author>Ben Halpern</author>
      <pubDate>Fri, 07 Jan 2022 17:52:10 +0000</pubDate>
      <link>https://dev.to/ben/what-computer-do-you-use-for-software-develpment-4jnp</link>
      <guid>https://dev.to/ben/what-computer-do-you-use-for-software-develpment-4jnp</guid>
      <description>&lt;p&gt;What make/model do you use? Are you satisfied with it? Are you going to stay in the same operating system ecosystem when you upgrade?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Can Appwrite handle 25 Million documents?</title>
      <author>Torsten Dittmann</author>
      <pubDate>Fri, 07 Jan 2022 17:06:33 +0000</pubDate>
      <link>https://dev.to/appwrite/appwrite-012-database-improvements-3kmh</link>
      <guid>https://dev.to/appwrite/appwrite-012-database-improvements-3kmh</guid>
      <description>&lt;p&gt;With the release of &lt;a href="https://appwrite.io"&gt;Appwrite&lt;/a&gt; 0.12 come many new features, most notable being a completely overhauled database service.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/appwrite" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4bSIRV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7eMrR0VE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2225/eb541cf9-84f4-4101-987c-c219cd4b34fc.png" alt="Appwrite" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--__8JLnEh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zFTwyWy_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/224437/24510e1e-2d7b-414f-9b5c-f6566845bf04.jpeg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/appwrite/its-here-announcing-the-release-of-appwrite-012-5c8b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;It's Here! Announcing the Release of Appwrite 0.12!&lt;/h2&gt;
      &lt;h3&gt;Eldad A. Fux for Appwrite „Éª Jan 5 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;The database didn't scale well with many documents in previous Appwrite versions. This was noticeable in collections containing upwards of ten thousand documents.&lt;/p&gt;

&lt;p&gt;Since Appwrite uses the same database for internal resources like &lt;strong&gt;Users&lt;/strong&gt; and &lt;strong&gt;Files&lt;/strong&gt;, this limitation impacted every other service indirectly. The more the data, the slower the requests.&lt;/p&gt;

&lt;p&gt;With 0.12, the database API introduces &lt;a href="https://appwrite.io/docs/database#indexes"&gt;Indexes&lt;/a&gt;, which allow you to improve queries for specific documents by a lot. Complimentary, we also added a new and more powerful way of filtering with &lt;a href="https://appwrite.io/docs/database#querying-documents"&gt;different query operators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These improvements along with a complete rewrite of the database service enhanced Appwrite in a way that we were able to effortlessly query a collection of &lt;strong&gt;25 Million documents&lt;/strong&gt; with excellent response times. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benchmark"&gt;
  &lt;/a&gt;
  üèÅ Benchmark
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://k6.io/"&gt;k6&lt;/a&gt; was used with 500 &lt;strong&gt;Virtual Users (VUs)&lt;/strong&gt; over 30 seconds, with each request performing an &lt;code&gt;EQUALS&lt;/code&gt; query against an attribute that is indexed with a &lt;strong&gt;Key index&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;k6/http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Rate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;k6/metrics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X-Appwrite-Key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[API_KEY]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X-Appwrite-Project&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[PROJECT_ID]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFailRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;failed requests&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;vus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;discardResponseBodies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;30s&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;thresholds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;failed requests&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rate&amp;lt;0.05&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`http://[APPWRITE_URL]/v1/database/collections/[COLLECTION_ID]/documents?queries[]=number.equal(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;25000000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;config&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;myFailRate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#collection"&gt;
  &lt;/a&gt;
  üìù Collection
&lt;/h2&gt;

&lt;p&gt;Here is a representation of what the collection looks like used for the benchmark, the &lt;code&gt;$id&lt;/code&gt; is automatically generated, and &lt;code&gt;number&lt;/code&gt; is a unique random value up to 25 million.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;$id&lt;/th&gt;
&lt;th&gt;number&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;61d7fe9f91d6fed26fc0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61d7fe73eb0142ab50ec&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61d7fe73eb5142c4b5e5&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61d86657b6179ea91483&lt;/td&gt;
&lt;td&gt;25000000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#request"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Request
&lt;/h2&gt;

&lt;p&gt;Requests were performed against the &lt;a href="https://appwrite.io/docs/client/database?sdk=web-default#databaseListDocuments"&gt;list documents endpoint&lt;/a&gt; with an &lt;code&gt;EQUALS&lt;/code&gt; query against the &lt;code&gt;number&lt;/code&gt; attribute and a random number from 1 - 25,000,000. On top of the query itself, each request goes through authentication, authorization, and permissions validation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;/v1/database/[COLLECTION]/documents?queries[]=number.equal([RANDOM_NUMBER])&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  üî¨ Results
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V5opXJtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9l6xfnfly9sgxwdt0hg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V5opXJtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9l6xfnfly9sgxwdt0hg.png" alt="Benchmark Result 0.12.0" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The results speak for themselves. With &lt;strong&gt;40k successful requests&lt;/strong&gt; and &lt;strong&gt;1,334 per second&lt;/strong&gt;, we reached numbers that were very difficult to achieve with previous versions.&lt;/p&gt;

&lt;p&gt;Not only is the new Database better at scale with simple Queries - but it also improves overall performance with more complex queries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lLMYmvfh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tk49ptzk5bywl1dusy11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLMYmvfh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tk49ptzk5bywl1dusy11.png" alt="htop" width="880" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Server were Appwrite was hosted had 8-Cores with 16GB memory and it's CPU usage during the benchmark peaked around 80%. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;k6 was run on a Mac Mini M1 with 16 GB memory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This performance boost is part of a series of steps we take to ensure developers can take full advantage of their Appwrite servers. We plan to share more data and insights from both the development process and Appwrite benchmarks with upcoming new versions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  üìö Learn more
&lt;/h2&gt;

&lt;p&gt;You can use following resources to learn more and get help:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io"&gt;üöÄ Appwrite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/appwrite"&gt;üöÄ Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;üìú Appwrite Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;üí¨ Discord Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>performance</category>
      <category>opensource</category>
      <category>programming</category>
      <category>database</category>
    </item>
    <item>
      <title>Migrating Your Open Source Builds Off Of Travis CI</title>
      <author>Adam Gordon Bell</author>
      <pubDate>Fri, 07 Jan 2022 16:53:01 +0000</pubDate>
      <link>https://dev.to/adamgordonbell/migrating-your-open-source-builds-off-of-travis-ci-24i6</link>
      <guid>https://dev.to/adamgordonbell/migrating-your-open-source-builds-off-of-travis-ci-24i6</guid>
      <description>&lt;p&gt;Starting in early 2021 and continuing to this day, a movement has been underway to migrate open-source projects off of Travis CI. So what happened, and where should you move your project to?&lt;/p&gt;

&lt;p&gt;I bet you can't guess where I recommend?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JD0_1nCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/assets/images/migrating-from-travis/quote1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JD0_1nCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/assets/images/migrating-from-travis/quote1.png" alt="Travis not providing CI" width="587" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're not familiar with Travis CI, it's a build company that has been powering the continuous integration (CI) of many open source projects since it launched in 2011. It was the first build solution that was free for open source use and that easily integrated into GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-happened"&gt;
  &lt;/a&gt;
  What Happened?
&lt;/h2&gt;

&lt;p&gt;In 2019 Travis was acquired by a private equity group and many engineers were let go.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So apparently Travis CI is being strip-mined immediately after their acquisition by Idera. Sorry, I mean after "joining the Idera family" üôÑ &lt;a href="https://t.co/CE5ERp1RsY"&gt;https://t.co/CE5ERp1RsY&lt;/a&gt; A bunch of talented people are waking up to termination letters. Absolutely shameful. &lt;a href="https://t.co/BbBRPdnswe"&gt;https://t.co/BbBRPdnswe&lt;/a&gt;&lt;/p&gt;‚Äî Senior Oops Engineer (&lt;a class="mentioned-user" href="https://dev.to/reinh"&gt;@reinh&lt;/a&gt;) &lt;a href="https://twitter.com/ReinH/status/1098663375985229825?ref_src=twsrc%5Etfw"&gt;February 21, 2019&lt;/a&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then, on Nov 2, 2020, Travis CI announced the end of its unlimited support for open-source projects:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For those of you who have been building on public repositories (on travis-ci.com, with no paid subscription), we will upgrade you to our trial (free) plan with a 10K credit allotment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When your credit allotment runs out - we'd love for you to consider which of our plans will meet your needs.&lt;/strong&gt; - &lt;a href="https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing"&gt;Travis CI blog post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The reason behind the change is stated to be abuse by crypto-miners:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;However, in recent months we have encountered significant abuse of the intention of this offering (increased activity of cryptocurrency miners, TOR nodes operators etc.).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, many feel the real reason is that the acquirer is aiming for profitability at all costs and supporting the open-source community represents a significant cost.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My previous company was on Travis, and as soon as I saw that Travis was purchased by private equity, I knew the downward spiral had begun and I recommended we move to something else. Not surprised that this is happening a couple of years later...my understanding is that private equity will tend towards slowing/stopping development after acquisition to cut costs/headcount, and then squeeze the remaining value from what's left, so this is in-line with that playbook. ¬†- &lt;a href="https://news.ycombinator.com/item?id=25340486"&gt;rpdillion on hacker news&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-it-matters"&gt;
  &lt;/a&gt;
  Why It Matters
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The open source movement runs on the heroic efforts of not enough people doing too much work. They need help. - &lt;a href="https://www.wired.com/author/clive-thompson"&gt;CLIVE THOMPSON&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many open-source projects are still using Travis and open-source maintainers are notoriously overworked. ¬†Time spent migrating builds is time not spent on other things. ¬†Large well-maintained projects will likely quickly transition but for many smaller projects, an abrupt change in a service they depend on is a huge challenge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-move-to"&gt;
  &lt;/a&gt;
  Where to Move To
&lt;/h2&gt;

&lt;p&gt;If you maintain an open-source project that uses TravisCI and are hoping to get off it, then assuming you have the time to migrate, there are actually many viable options.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-run-your-own-builds"&gt;
  &lt;/a&gt;
  Option: Run Your Own Builds
&lt;/h3&gt;

&lt;p&gt;You can find some &lt;a href="https://medium.com/google-developers/how-to-run-travisci-locally-on-docker-822fc6b2db2e"&gt;scattered&lt;/a&gt; &lt;a href="https://stackoverflow.com/a/35972902"&gt;instructions&lt;/a&gt; &lt;a href="https://stackoverflow.com/a/35972902"&gt;online&lt;/a&gt; for running Travis builds yourself. There are mixed reports on the stability and feasibility of this approach, but if your adventurous, you could try to set up your own Travis CI build executor on your own hardware.&lt;/p&gt;

&lt;p&gt;A better option, if you want to run the builds on your own hardware is to look at something like &lt;a href="https://buildkite.com/"&gt;Buildkite&lt;/a&gt; or &lt;a href="https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/"&gt;GitLab CI&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-circle-ci"&gt;
  &lt;/a&gt;
  Option: Circle CI
&lt;/h3&gt;

&lt;p&gt;A better option is &lt;a href="https://dev.to/blog/continuous-integration#circleci"&gt;Circle CI&lt;/a&gt; , a Travis CI competitor which still offers a free plan. ¬†&lt;/p&gt;

&lt;p&gt;Circle CI offers 400,000 build credits per month to any open-source public repository. ¬†This is their free plan and limits concurrency to 1 job at a time. They also have an easy GitHub integration and no application process. ¬†&lt;/p&gt;

&lt;p&gt;They also allow use of the &lt;a href="https://circleci.com/open-source/"&gt;free plan&lt;/a&gt; with private repositories. This makes it a great choice if your project is not actually open-source.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-option-github-actions"&gt;
  &lt;/a&gt;
  Best Option: GitHub Actions
&lt;/h3&gt;

&lt;p&gt;An even better option is &lt;a href="https://dev.to/blog/continuous-integration#github-actions"&gt;GitHub Actions&lt;/a&gt;, a cloud CI system directly from GitHub. ¬†GitHub is at the center of many open source projects and this makes it a natural choice for CI. ¬†&lt;/p&gt;

&lt;p&gt;GitHub Actions (GHA) is newer than either TravisCI or Circle CI, having launched in late 2018.&lt;/p&gt;

&lt;p&gt;GHA offers very generous build credits, 20 concurrent build jobs per project and no limit on build time used. ¬† If your pipeline can be run in parallel this concurrency can really be a great enabler. ¬†The only limitation I was able to find is that the build may last no longer than 6 hours in total.&lt;/p&gt;

&lt;p&gt;If your project is hosted on GitHub and is open source then the &lt;a href="https://docs.github.com/en/free-pro-team@latest/actions/reference/usage-limits-billing-and-administration"&gt;GHA open source plan&lt;/a&gt; seems like the best bet right now.&lt;/p&gt;

&lt;p&gt;But wait, there is an even better solution: being vendor neutral. Before I explain how you become vendor neutral lets review.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary-of-open-source-plans"&gt;
  &lt;/a&gt;
  Summary of Open Source Plans
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;Open Source Offering&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Travis CI&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing"&gt;1000 minutes total with application process for more&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Circle CI&lt;/td&gt;
&lt;td&gt;&lt;a href="https://circleci.com/open-source/"&gt;1 concurrent build at a time&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitHub Actions&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.github.com/en/free-pro-team@latest/actions/reference/usage-limits-billing-and-administration"&gt;20 concurrent build jobs per project&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#dont-let-this-happen-again"&gt;
  &lt;/a&gt;
  Don't Let This Happen Again
&lt;/h2&gt;

&lt;p&gt;So GitHub has a generous build plan, but moving your CI process is not easy or free. ¬†The more complex your build, the harder porting from one cloud CI to another is going to be. ¬†If you move to GHA and then GHA stops being a viable option in the future then this whole effort will have to be repeated. ¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#neutral-build-specifications"&gt;
  &lt;/a&gt;
  Neutral Build Specifications
&lt;/h2&gt;

&lt;p&gt;How can you minimize the effort of moving from build platform to another?&lt;/p&gt;

&lt;p&gt;My suggestion is to keep as much logic as possible out of the proprietary build definition. Instead, define it in an open-source format that you can execute anywhere.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#makefiles-and-dockerfiles"&gt;
  &lt;/a&gt;
  Makefiles and Dockerfiles
&lt;/h3&gt;

&lt;p&gt;One way to build a CI neutral build definition is to use a Makefile and a dockerfile. ¬†The Makefile contains the various steps of your build pipeline and you run it inside a docker container which installs any needed dependencies. ¬†&lt;a href="https://github.com/qmk/qmk_firmware"&gt;QMK&lt;/a&gt; is a popular open-source project that uses this approach.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; qmkfm/base_container&lt;/span&gt;

&lt;span class="k"&gt;VOLUME&lt;/span&gt;&lt;span class="s"&gt; /qmk_firmware&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /qmk_firmware&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; make all:default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/qmk/qmk_firmware/blob/master/Dockerfile"&gt;QMK&lt;/a&gt; Docker File for executing the full build&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#earthly"&gt;
  &lt;/a&gt;
  Earthly
&lt;/h3&gt;

&lt;p&gt;I am an Earthly contributor and this is the Earthly blog, but in my totally biased opinion, it deserves a mention as an neutral format for defining a build. The Elixir web framework &lt;a href="https://github.com/phoenixframework/phoenix/blob/master/Earthfile"&gt;Phoenix is a great example to take a look at&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Earthly is like a Makefile where each step is containerized and dependencies are explicitly declared. ¬†&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:1.13-alpine3.11&lt;/span&gt;

build:
 COPY main.go .
 RUN go build main.go
 SAVE ARTIFACT main AS LOCAL main

lint: 
 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example build steps for a &lt;a href="https://github.com/earthly/earthly/blob/main/examples/go/Earthfile"&gt;go application&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-interesting-options"&gt;
  &lt;/a&gt;
  Other Interesting Options
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#easier-migration-from-travis-to-gha"&gt;
  &lt;/a&gt;
  Easier Migration from Travis to GHA
&lt;/h3&gt;

&lt;p&gt;Migrating your build out of Travis will take a little work. ¬†If you aren't interested in a neutral format, &lt;a href="https://github.com/marketplace/actions/run-travis-yml"&gt;this GHA action&lt;/a&gt; might make it easier. ¬†&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This action setups environment variables specified in the &lt;code&gt;.travis.yml&lt;/code&gt; file and then runs &lt;em&gt;one&lt;/em&gt; of the (potentially) many build jobs within the test build stage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#serverless-builds"&gt;
  &lt;/a&gt;
  Serverless Builds
&lt;/h3&gt;

&lt;p&gt;Another interesting option if you are feeling adventurous is using AWS lambda as your build executor. ¬†I have no idea how feasible this is, however, &lt;a href="https://github.com/StanfordSNR/gg"&gt;the gg project&lt;/a&gt; from Stanford looks interesting. ¬†It attempts to use AWS lambdas for running builds at the maximum possible parallelism. ¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#takeaways"&gt;
  &lt;/a&gt;
  Take-Aways
&lt;/h2&gt;

&lt;p&gt;You probably need to move your open-source project's builds off of Travis CI. If you host it on GitHub, GitHub Actions is probably a good choice. There is a risk that the GHA offer will disappear as well. ¬†You can protect yourself from that by defining your build in an open format that is easy to move around. ¬†All build problems can be solved by another layer of abstraction.&lt;/p&gt;

&lt;p&gt;If you are going that route, I think &lt;a href="https://earthly.dev/"&gt;Earthly&lt;/a&gt; is a great option, but as I said, I am biased.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to avoid burnout as a Developer</title>
      <author>Dylan Oh</author>
      <pubDate>Fri, 07 Jan 2022 16:48:48 +0000</pubDate>
      <link>https://dev.to/ohdylan/how-to-avoid-burnout-as-a-developer-f2c</link>
      <guid>https://dev.to/ohdylan/how-to-avoid-burnout-as-a-developer-f2c</guid>
      <description>&lt;p&gt;Let's pause the technical stuff for a week and talk about how should we maintain our mental health as a developer (as a human).&lt;/p&gt;

&lt;p&gt;I have always been a self-motivated person and wanting to push myself to do more and learn more in life. Besides, I had a bad habit where I tend to blame myself so much and felt guilty when I failed to make good use of time. My friends told me that I should get some chill and it's ok to be relax sometimes. However, I did not listen to that and felt that I should not waste any little piece of my time in my 20's. In turn, I slept lesser, kept on forcing myself to sit in front of the computer even though I did not feel like in on that day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-was-just-a-random-night-that-i-suddenly-had-breathlessness"&gt;
  &lt;/a&gt;
  It was just a random night that I suddenly had breathlessness.
&lt;/h3&gt;

&lt;p&gt;I was kinda panic and almost wanted to call the ambulance. As one of my best friends, I reached out to Mr.Google to seek for some self-help methods (bad example, please get help from medical experts) and luckily it did reduce my symptom. Started from that day, I kept having a chest distress and feeling difficult in breathing. I started being suspicious on every part of my body where I felt like none of them is working well. I had seek countless medical help (even a full body checkup). However, all the doctors came out with the same diagnosis: You do not have any issue with your physical health, but it seems like your are experiencing some &lt;strong&gt;ANXIETY&lt;/strong&gt; issues.&lt;/p&gt;

&lt;p&gt;I started to think where did this anxiety come from. I did not have too much stress at work as the projects were still manageable, and all my colleagues are awesome. By then, I realized that the source of stress is me, from myself. I had been in the loop of forcing myself to make use of every single second of my life, then I failed and blamed myself for being such an indiscipline person. I believed that I am not the only one having this issue. As a developer, most of us have &lt;strong&gt;IMPOSTER SYNDROME&lt;/strong&gt;, where we always feel like we know nothing and we must be on the lowest end of the curve. This feeling of self-abasement has caused us to wanting to improve and exhaust ourselves. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-all-forget-this-one-thing-no-one-is-perfect"&gt;
  &lt;/a&gt;
  We all forget this one thing: No one is PERFECT.
&lt;/h2&gt;

&lt;p&gt;When having this imaginery self of being the best programmer in the world, we also have that sense of disappointment to ourselves for not reaching to that level. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#one-thing-that-i-do-to-overcome-this-is-to-write-down-reflections"&gt;
  &lt;/a&gt;
  One thing that I do to overcome this, is to &lt;em&gt;write down reflections&lt;/em&gt;.
&lt;/h4&gt;

&lt;p&gt;Look back at yourself a few years / months ago, just how much have you improved? We don't compare ourselves to others as everyone has a different set of situations and starting point. Who we should compare to is the yesterday self. As long as we are 1% better than that, it is something worth celebrating. By doing this, there is no way that you could not become a better person in the &lt;em&gt;LONG RUN&lt;/em&gt;. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#another-thing-that-helps-me-a-lot-is-to-get-rid-of-my-social-media-apps-on-phone"&gt;
  &lt;/a&gt;
  Another thing that helps me a lot is to &lt;em&gt;get rid of my social media apps on phone&lt;/em&gt;.
&lt;/h4&gt;

&lt;p&gt;People tend to show us the better side of their life and we might start doing comparison subconciously. "Look at these people, they are all living fulfilling and productive lives ... I am such a loser." If you are able to turn all these into motivation to go forward, I think that is good for you. However, most of us will just feel the frustration. Thus, I would suggest that you may uninstall those applications from your phone, but access them through the phone browser if you have to do some catchups with friends. With this, you can increase the resistance of turning them on and get your own life back. It works for me and highly recommended that you try it out.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lastly-take-a-break-if-you-have-to"&gt;
  &lt;/a&gt;
  Lastly, &lt;em&gt;take a break if you have to&lt;/em&gt;.
&lt;/h4&gt;

&lt;p&gt;The activities that I would suggest would be having a casual walk (it would be even better to walk in the nature), just flex your brain a little bit. It is totally fine to grab a cup of coffee with friends, to watch a great movie or take a short nap. Exercising is also a great way to reduce the anxiety.&lt;/p&gt;

&lt;p&gt;Fortunately, I have been feeling much better nowadays and I am able to share these with all of you. I treat myself much better and I have learnt how to slot resting time into my time blocks. Hope this article could helps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do follow me for more future articles on web design, programming and self-improvement üòä&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>beginners</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Web Development 2022</title>
      <author>Ganesh Patil</author>
      <pubDate>Fri, 07 Jan 2022 16:48:10 +0000</pubDate>
      <link>https://dev.to/ganeshpatil386386/web-development-2022-5h4m</link>
      <guid>https://dev.to/ganeshpatil386386/web-development-2022-5h4m</guid>
      <description>&lt;p&gt;Web development is demanding skill in market and you can start with web development by following roadmap in 2022.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h4&gt;

&lt;p&gt;Hypertext Markup language (HTML) is basic of web development shortly it is overall structure of website.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h4&gt;

&lt;p&gt;Cascading Style Sheet (CSS) is interactive section of website and creative work with website.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css-frameworks"&gt;
  &lt;/a&gt;
  CSS frameworks
&lt;/h4&gt;

&lt;p&gt;CSS frameworks has huge growth in market you need learn one of following&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#js"&gt;
  &lt;/a&gt;
  JS
&lt;/h4&gt;

&lt;p&gt;JavaScript is essential part of web development &lt;br&gt;
js add functioning to your website.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#dom"&gt;
  &lt;/a&gt;
  DOM
&lt;/h4&gt;

&lt;p&gt;Document Object Model is connection between HTML and js with id and classes its important to learn DOM.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#git-and-github"&gt;
  &lt;/a&gt;
  Git and Github
&lt;/h4&gt;

&lt;p&gt;Its is version control system which is used to Collab to others developers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reactangularvue"&gt;
  &lt;/a&gt;
  React/Angular/Vue
&lt;/h4&gt;

&lt;p&gt;React is demanding skill in market for web development it is JavaScript frontend framework which is used to add more functionality and interactive part of websites. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Symfony Station Communique - 7 January 2021. A look at Symfony and PHP news.</title>
      <author>Reuben Walker, Jr.</author>
      <pubDate>Fri, 07 Jan 2022 16:37:38 +0000</pubDate>
      <link>https://dev.to/reubenwalker64/symfony-station-communique-7-january-2021-a-look-at-symfony-and-php-news-1b0h</link>
      <guid>https://dev.to/reubenwalker64/symfony-station-communique-7-january-2021-a-look-at-symfony-and-php-news-1b0h</guid>
      <description>&lt;p&gt;This post originally appeared on &lt;a href="https://symfonystation.com/Symfony-Station-Communique-31-December-2021"&gt;Symfony Station&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Welcome to this week's Symfony Station Communique. It's your weekly review of the most valuable and essential news in the Symfony and PHP development communities. Take your time and enjoy the items most valuable for you.&lt;/p&gt;

&lt;p&gt;Thanks once again to Javier Eguiluz and Symfony for sharing &lt;a href="https://symfonystation.com/Symfony-Station-Communique-31-December-2021"&gt;our last communique&lt;/a&gt; in their &lt;a href="https://symfony.com/blog/a-week-of-symfony-783-27-december-2021-2-january-2022"&gt;Week of Symfony&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;*Please note that links will open in a new browser window. My opinions, if I present any, will be in bold.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;p&gt;As always, we will start with the official news from Symfony.&lt;/p&gt;

&lt;p&gt;Highlight -&amp;gt; "This week, Symfony 4.4.36, 5.3.13, 5.4.2 and 6.0.2 maintenance versions were released. In addition, Symfony announced the open sourcing of Symfony CLI, and we published the traditional Symfony 2021 Year in Review summary."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/a-week-of-symfony-783-27-december-2021-2-january-2022"&gt;A Week of Symfony #783 (27 December 2021 - 2 January 2022)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There's a week left to enjoy the early bird registration for SymfonyLive Paris 2022 conference organized on April 7-8 2022. Join the team for a week of Symfony in French: 2-day workshops and 2-day conference!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/symfonylive-paris-2022-l-inscription-early-bird-se-termine-le-10-janvier-2022"&gt;SymfonyLive Paris 2022 : l'inscription early bird se termine le 10 janvier 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They have announced the workshops as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/les-formations-du-symfonylive-paris-2022-sont-en-ligne"&gt;Les formations du SymfonyLive Paris 2022 sont en ligne&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Early bird registration for SymfonyWorld Online 22 Summer edition ends January 14. Calls for presentations are open for it and SymfonyLive Paris.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfony.com/blog/cfp-and-early-bird-registrations-are-open-for-symfonylive-paris-2022-and-symfonyworld-online-2022-summer-edition"&gt;CFP and Early Bird registrations are open for SymfonyLive Paris 2022 and SymfonyWorld Online 2022 Summer Edition&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SymfonyCasts picks back up on their security series and writes "We added an ‚Äúemail verification‚Äù step to our registration by leveraging the symfonycasts/verify-email-bundle (hey! I know them!). Then we looked at actually validating the signed URL that we sent to the user to show &lt;em&gt;why&lt;/em&gt; it failed when it does, and mark our user as ‚Äúverified‚Äù.&lt;/p&gt;

&lt;p&gt;And apart from being more powerful and less complex, the new Symfony security system comes with new stuff! Like ‚Äúlogin throttling‚Äù. We enable this &amp;amp; open up its source code to see how it works. Hint: it works via events!"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://5hy9x.r.ag.d.sendibm3.com/mk/mr/wTZed2qQQ-8vQTfxEq-ZyeOQvtHBeGPVBlWIal-qrGww4RG-YznULPJvTjD9jXTjUuPDjz5Bw-I6RPaop8F2nFFZUUNVVxDeH-5STEb4yiMJ3e8eOooa1d_RRlJCW7-T2iqO-fxV0w"&gt;This week on SymfonyCasts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTJH3MnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Featured-Item_1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTJH3MnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Featured-Item_1.png" alt="Featured Item graphic" width="660" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#featured-item"&gt;
  &lt;/a&gt;
  Featured Item
&lt;/h2&gt;

&lt;p&gt;We continue to highlight a post of the week. This one was an obvious and easy decision.&lt;/p&gt;

&lt;p&gt;This week I am choosing one of the most useful posts I've found in a long time. It's primarily about the frontend and self-explanatory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yigitsr/10-resources-for-web-developers-46g7"&gt;10 Resources for Web Developers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-week"&gt;
  &lt;/a&gt;
  This Week
&lt;/h3&gt;

&lt;p&gt;API Platform creator K√©vin Dunglas writes: "I‚Äôm very excited to announce that after 6 years of teamwork, Symfony and API Platform now include an industry-first set of tools designed to automatically create, manage and run the Docker containers needed for your applications."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dunglas.fr/2021/12/symfonys-new-native-docker-support-symfony-world/"&gt;Symfony‚Äôs New Native Docker Support (Symfony World) Presentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dariusz Gafka explores "pushing the refactoring of our Symfony Applications to their boundaries. We will focus on dropping boilerplate completely so we can write only the code that matters, allowing us for easy modifications, maintenance and future extensions." &lt;/p&gt;

&lt;p&gt;We will focus on dropping boilerplate completely so we can write only the code that matters, allowing us for easy modifications, maintenance and future extensions."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/nerd-for-tech/build-your-symfony-applications-with-ease-using-ecotone-f7bcaa11b5c4"&gt;Build Your Symfony and Doctrine ORM Applications with ease using Ecotone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fabio Hiroki has another excellent article for us. This one covers using Symfony with the RabbitMQ message broker.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fabiohiroki.medium.com/introduction-to-rabbitmq-and-symfony-a1e782a820d5"&gt;Introduction to RabbitMQ and Symfony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In previous communiques I shared Anders Bj√∂rkland's articles on the SilverStripe CMS. Here's the latest one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/andersbjorkland/query-me-some-google-books-api-1lic"&gt;Query me some Google Books API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regarding CMSs our next original article will cover those built with Symfony Components. Check back next Wednesday to read it.&lt;/p&gt;

&lt;p&gt;Mike Zukowski follows up on an article he wrote how to improve your application‚Äôs response time with lazy Twig extensions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@dotcom.software/testing-twig-extensions-the-right-way-10178cb1c8"&gt;Testing Twig Extensions The Right Way&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There was an explosion of Drupal news this week. So, here we go.&lt;/p&gt;

&lt;p&gt;Speaking of Twig, Drupal 10 will update its implementation of Twig from version 2 to 3. Here are the details so you can prepare.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.drupal.org/node/3256890"&gt;Twig Updated from 2.x to 3.x&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Drupal uses the EventDispatcher component from Symfony, which implements the Mediator and Observer design patterns. This allows for business logic to be extensible without making systems entirely coupled. The originating system dispatches an event and allows any other system to react to that event or modify data associated with that event. The originating system can then perform other interactions after its observers have processed the event.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mglaman.dev/blog/registering-your-phpunit-test-event-subscriber-testing-events"&gt;Registering your PHPUnit test as an event subscriber for testing events&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;While the Drupal Content Management (CMS) system is a popular solution for all-in-one websites, it also works well as a ‚Äúcontent warehouse‚Äù that other systems can pull from. In this tutorial, we will use Drupal Views to create two API endpoints that an app or website can use to request content from a Drupal CMS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/geekculture/how-to-create-a-rest-api-endpoint-with-drupal-views-a6c70019e5bc"&gt;How to Create REST API Endpoints with Drupal Views&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And finally on the Drupal front, here is a useful cheat sheet for developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.hojtsy.hu/blog/2021-dec-22/major-drupal-configuration-schema-cheat-sheet-update-7-years-later"&gt;Major Drupal configuration schema cheat sheet update&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tanvir Ahmad shows us how to create PHP CLI application with the Symfony console component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tanvir-ahmad.medium.com/easy-way-to-create-a-symfony-console-application-d173852c01cb"&gt;Easy Way to Create a Symfony Console Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He also has this post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tanvir-ahmad.medium.com/how-to-run-symfony-console-command-in-aws-lambda-347d535e97da"&gt;How to Run Symfony Console Command in AWS Lambda&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RyZq8FHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Horizontal-Inspector-Tagline-Logo_0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RyZq8FHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://symfonystation.com/sites/default/files/inline-images/Horizontal-Inspector-Tagline-Logo_0.png" alt="Inspector logo" width="880" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sponsored Article&lt;/p&gt;

&lt;p&gt;All sponsored articles are for products we have vetted and stand behind. We either use them or would do so if they were applicable to the Symfony Station site.&lt;/p&gt;

&lt;p&gt;We published our first sponsored article on Symfony Station exploring how Code Execution Monitoring helps you identify bugs and bottlenecks in your Symfony app before your customers do. Like all our articles it is now available via audio.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://symfonystation.com/why-code-execution-monitoring-symfony"&gt;Why You Should Use Code Execution Monitoring with Symfony&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bCVuFRpf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/052ayktpks8r8q0nr2fy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bCVuFRpf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/052ayktpks8r8q0nr2fy.png" alt="PHP logo" width="880" height="645"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#thisweek"&gt;
  &lt;/a&gt;
  ThisWeek
&lt;/h3&gt;

&lt;p&gt;K√©vin Dunglas also writes: "In modern web applications, it‚Äôs a common pattern to serve the web API and the frontend app from different subdomains. This was the pattern implemented by API Platform until last year. But we changed that for 2 main reasons: performance and REST principles."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dunglas.fr/2022/01/preventing-cors-preflight-requests-using-content-negotiation/"&gt;Preventing CORS Preflight Requests Using Content Negotiation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alex Hernandez writes: "Over the years, I‚Äôve learned how to set up Docker in a way it‚Äôs easy to use without needing to know every detail. Today I want to give you an easy-to-use template in order to use Docker with PHP, explained, so you can understand how it works in just 10 minutes."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/codex/docker-template-for-php-explained-d674018e7cef"&gt;Docker Template For PHP Explained&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vishwa Chikate asks: "how can we better implement the callback Class/Methods a.k.a the resource handlers associated with an REST HTTP API. The idea which will be covered will help #developers in having a Reusable, Extendable and an easily Maintainable code.&lt;/p&gt;

&lt;p&gt;The approach outlined here can be applied to any PHP framework of choice or it can be considered as implementation practice in other languages / framework‚Äôs."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@vishwa.chikate/php-restful-api-resource-handlers-c2d8376e1e6c"&gt;PHP: RESTful API resource handlers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel like building a PHP site from scratch? Jens Kuerschner has the article for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jenskuerschner.medium.com/build-a-kick-ass-php-microsite-in-under-4h-f21b27b904d2"&gt;Build a kick-ass PHP Microsite in under 4 hours&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I found the following to be an interesting case study from Matt Kingshott.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://itnext.io/how-i-designed-and-built-lumenos-recruitment-search-engine-d8918b3500"&gt;How I designed and built Lumeno‚Äôs recruitment search engine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have shared work from Eelco Verbrugge, before. Here he explains PHP interfaces.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/eelcoverbrugge/php-interfaces-explained-35g"&gt;PHP Interfaces Explained&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Christophe Avonture mentions that "As a loyal reader of several forums for years, I frequently find unreadable PHP code posted by beginners asking for help. Before we can try to help them, it is sometimes useful to reformat the code and rewrite it partially." He shows us how here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/cavo789/docker-runrefactor-php-code-from-a-web-interface-1ffn"&gt;Docker - Run/Refactor PHP code from a web interface&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a short but very interesting post from Mike Zukowski.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@dotcom.software/adding-a-watermark-to-a-video-in-php-81ee7fabd0c"&gt;Adding a watermark to a video in PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Stripe API turns the agonizing task of collecting credit card payments into a matter of copy &amp;amp; paste. It‚Äôs basically a JavaScript library that interfaces your web page to Stripe‚Äôs web servers. The information is never sent to your servers making it so effective. You don‚Äôt have to stress over the server-side settings of your application.&lt;/p&gt;

&lt;p&gt;The Stripe PHP library gives access to the Stripe API from applications composed within the PHP language. It incorporates a pre-defined set of classes for API that initialize themselves from the API which makes it compatible with a wide run of versions of the Stripe API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cloudways.com/blog/php-stripe-integration/"&gt;Streamline Your Online Payments With PHP Stripe Payment Gateway Integration&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-week"&gt;
  &lt;/a&gt;
  Last Week
&lt;/h3&gt;

&lt;p&gt;Based on the most recent Stack Overflow survey in 2020, Python was the most used language according to 70% of its respondents, while PHP was chosen by 25%. However, market reports from w3techs.com tell a different story, showing that nearly 78% of all websites today run PHP. Much of PHP‚Äôs mainstay can be attributed to Wordpress and Shopify, which constitute around 45% of all websites today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@aristeksystems/8-reasons-why-php-development-is-not-dead-82b07ae2acd6"&gt;8 Reasons Why PHP Development Is Not Dead&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeless"&gt;
  &lt;/a&gt;
  Timeless
&lt;/h3&gt;

&lt;p&gt;Tips are always welcome, and Damian Brdej has these for PhPStorm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/quentindamianino/8-most-useful-phpstorm-keyboard-shortcuts-4476"&gt;8 most useful PhpStorm keyboard shortcuts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJ6mcfeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh4enyuqbl5ibnddk3yq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJ6mcfeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh4enyuqbl5ibnddk3yq.jpeg" alt="Code logo" width="626" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h2&gt;

&lt;p&gt;The State of the Octoverse from GitHub explores a year of change in programming. Its research tells you how to improve your performance and well-being by developing code, creating documentation, and supporting communities in smarter, more sustainable ways.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://octoverse.github.com/"&gt;The State of the Octoverse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Next Web looks at why shrinkflation is not a solution for inflation in the programming industry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thenextweb.com/news/shrinkflation-software-development"&gt;Don‚Äôt let ‚Äòshrinkflation‚Äô affect your software development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kesk gives us "eight little tips that can save you time in your day-to-day as a programmer. Some are basic while others could be a little complex."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://betterprogramming.pub/8-super-useful-sql-snippets-youll-want-to-have-on-hand-5b01fd7c87de"&gt;8 Super-useful SQL Snippets You‚Äôll Want to Have on Hand&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you published or seen something related to Symfony or PHP that we missed? If so, please &lt;a href="https://symfonystation.com/contact"&gt;contact us&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's it for this week. Thanks for making it to the end of another extended edition. I look forward to sharing next week's Symfony and PHP news with you on Friday.&lt;/p&gt;

&lt;p&gt;Please share this post. :) Be sure to &lt;a href="https://symfonystation.com/contact"&gt;join our newsletter list&lt;/a&gt; at the bottom of any of our site‚Äôs pages. Joining gets you each week's communique in your inbox (a day early). And follow us on Twitter at &lt;a href="https://twitter.com/symfonystation"&gt;@symfonfystation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy Coding Symfonistas!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K7t8cugj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx8p5n2zj9q2wi64tnon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K7t8cugj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx8p5n2zj9q2wi64tnon.png" alt="Photo of Reuben Walker" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reuben Walker&lt;/p&gt;

&lt;p&gt;Founder &lt;a href="https://symfonystation.com/"&gt;Symfony Station&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reuben is also Ringmaster of &lt;a href="https://media.mobileatom.net/about-us/"&gt;Mobile Atom Media&lt;/a&gt; and its division &lt;a href="https://www.mobileatom.net/"&gt;Mobile Atom Code&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>symfony</category>
      <category>php</category>
      <category>docker</category>
      <category>drupal</category>
    </item>
    <item>
      <title>Simple code is different from simplistic code: Elm vs JavaScript</title>
      <author>Marcio Frayze</author>
      <pubDate>Fri, 07 Jan 2022 16:34:37 +0000</pubDate>
      <link>https://dev.to/marciofrayze/simple-code-is-different-from-simplistic-code-elm-vs-javascript-1pp</link>
      <guid>https://dev.to/marciofrayze/simple-code-is-different-from-simplistic-code-elm-vs-javascript-1pp</guid>
      <description>&lt;p&gt;There are languages, frameworks, and libraries that strive to enable you to accomplish relatively complex tasks by writing a few lines of code. &lt;em&gt;JavaScript&lt;/em&gt; is a good example. To make an &lt;em&gt;http&lt;/em&gt; call to a page of my site using this language, you just have to write a single line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://segunda.tech/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most people probably don't consider this code to be difficult or complex, but there may be hidden error scenarios that are not trivial to handle. To analyze this, I'll show you a small-page implementation using pure &lt;em&gt;JavaScript&lt;/em&gt; and discuss potential issues. Next I will show you how to implement the same solution using the &lt;a href="https://elm-lang.org"&gt;&lt;em&gt;Elm&lt;/em&gt; programming language&lt;/a&gt; and analyze the same points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exercise-retrieving-a-list-of-pok%C3%A9mon-names"&gt;
  &lt;/a&gt;
  Exercise: Retrieving a list of Pok√©mon names
&lt;/h2&gt;

&lt;p&gt;To exemplify the problem I want to discuss in this article, I implemented in &lt;em&gt;html&lt;/em&gt; and pure &lt;em&gt;JavaScript&lt;/em&gt; (using &lt;em&gt;Ajax&lt;/em&gt;) the minimum necessary to display a list with Pok√©mon names. I used a service from &lt;a href="https://pokeapi.co"&gt;Pok√©API&lt;/a&gt; for this. The endpoint for retrieving the list of the first 5 Pok√©mon is quite simple: just call the URL &lt;code&gt;https://pokeapi.co/api/v2/pokemon?limit=5&lt;/code&gt; and the return will be a &lt;em&gt;json&lt;/em&gt; containing the result below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"count"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1118&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"next"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://pokeapi.co/api/v2/pokemon?offset=5&amp;amp;limit=5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"previous"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"results"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"bulbasaur"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://pokeapi.co/api/v2/pokemon/1/"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ivysaur"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://pokeapi.co/api/v2/pokemon/2/"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"venusaur"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://pokeapi.co/api/v2/pokemon/3/"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"charmander"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://pokeapi.co/api/v2/pokemon/4/"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"charmeleon"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://pokeapi.co/api/v2/pokemon/5/"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this exercise the goal is to retrieve this data asynchronously and list on the &lt;em&gt;html&lt;/em&gt; page only the contents of the &lt;em&gt;name&lt;/em&gt; field (which is within &lt;em&gt;result&lt;/em&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-a-solution-using-pure-html-and-javascript"&gt;
  &lt;/a&gt;
  Implementing a solution using pure &lt;em&gt;html&lt;/em&gt; and &lt;em&gt;JavaScript&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;There are several ways to solve this problem using these technologies. Below I present my implementation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;List of Pok√©mons using HTML and JavaScript&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Marcio Frayze David"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"loading-message"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Loading Pok√©mons names, please wait...
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"pokemon-names-list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://pokeapi.co/api/v2/pokemon?limit=5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataJson&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dataJson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pokemon&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;pokemon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;addNamesToDOM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

      &lt;span class="nx"&gt;hideLoadingMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="p"&gt;})();&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addNamesToDOM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pokemonNamesListElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pokemon-names-list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;addNameToDOM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pokemonNamesListElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addNameToDOM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pokemonNamesListElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newListElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;newListElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
      &lt;span class="nx"&gt;pokemonNamesListElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newListElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hideLoadingMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loading-message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visibility&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The idea is that at the end of the &lt;em&gt;Ajax&lt;/em&gt; call, the loading message no longer appears and the list containing the Pok√©mon names is loaded within the &lt;em&gt;tag&lt;/em&gt; with the &lt;em&gt;id&lt;/em&gt; &lt;em&gt;pokemons-names-list&lt;/em&gt;. I published &lt;a href="https://jsfiddle.net/f1gty3ux"&gt;this page &lt;em&gt;on-line&lt;/em&gt; with &lt;em&gt;JSFiddle&lt;/em&gt;&lt;/a&gt; so you can see the expected behavior.&lt;/p&gt;

&lt;p&gt;I know hardly anyone would write a code like that. I didn't use any &lt;em&gt;framework&lt;/em&gt; or external library and did some things that many would consider bad practices (such as putting &lt;em&gt;JavaScript&lt;/em&gt; code right in &lt;em&gt;html&lt;/em&gt;). But even if i had implemented this solution with popular technologies like &lt;em&gt;&lt;a href="https://pt-br.reactjs.org"&gt;React&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/JSX_(JavaScript)"&gt;JSX&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href="https://axios-http.com"&gt;Axios&lt;/a&gt;&lt;/em&gt;, the potential problems I want to discuss here would probably still exist.&lt;/p&gt;

&lt;p&gt;Looking at the code above, the questions I'd like you to try to answer are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What will happen if a &lt;em&gt;timeout&lt;/em&gt; occurs in the &lt;em&gt;Ajax&lt;/em&gt; call?&lt;/li&gt;
&lt;li&gt;If the server returns a &lt;em&gt;status http&lt;/em&gt; of failure, what will happen? &lt;/li&gt;
&lt;li&gt;If the server returns a valid &lt;em&gt;status http&lt;/em&gt; but the format of the returned content is different than expected, what will happen?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above code does not answer any of these questions clearly. It is easy to visualize the "happy path", but any unexpected situation is not being treated explicitly. And while we should never put code into production that doesn't treat these scenarios, the &lt;em&gt;JavaScript&lt;/em&gt; language doesn't force us to deal with them. If someone on your team forgets to do the right treatment for one of these potential problems, the result will be a &lt;strong&gt;runtime error&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If your team is unlucky, these scenarios may appear when the code is already in production. And when that inevitably happens, it's likely to blame the developer who implemented that part of the system.&lt;/p&gt;

&lt;p&gt;But if we know that this type of situation must be addressed, &lt;strong&gt;why do languages, &lt;em&gt;frameworks&lt;/em&gt; and libraries allow this type of code to be written?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-simple-solution"&gt;
  &lt;/a&gt;
  What is a &lt;strong&gt;simple&lt;/strong&gt; solution?
&lt;/h2&gt;

&lt;p&gt;There is a big difference between a solution being &lt;strong&gt;simple&lt;/strong&gt; and being &lt;strong&gt;simplistic&lt;/strong&gt;. This solution I wrote in &lt;em&gt;JavaScript&lt;/em&gt; is not simple. It's simplistic, as it ignores fundamental aspects of the problem in question.&lt;/p&gt;

&lt;p&gt;Languages such as &lt;em&gt;&lt;a href="https://elm-lang.org"&gt;Elm&lt;/a&gt;&lt;/em&gt; tend to force us to think and implement the solution for all potential problems. The final code will probably be larger, but it will provide assurance that &lt;strong&gt;we will have no errors at runtime&lt;/strong&gt;, as the compiler checks and enforces the developer to handle all possible paths, leaving no room for predictable failures.&lt;/p&gt;

&lt;p&gt;Another advantage of this approach is that we have a &lt;strong&gt;self-documented code&lt;/strong&gt;. It should be very clear, for example, what format of the expected return, which fields are required and which are optional, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-the-same-solution-in-elm"&gt;
  &lt;/a&gt;
  Implementing the same solution in &lt;em&gt;Elm&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now let's look at a solution written in &lt;em&gt;&lt;a href="https://elm-lang.org"&gt;Elm&lt;/a&gt;&lt;/em&gt; for this same problem. If you don't know this language (or some similar language, such as &lt;em&gt;&lt;a href="https://haskell.org"&gt;Haskell&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href="https://purescript.org"&gt;PureScript&lt;/a&gt;&lt;/em&gt;), you'll probably find its syntax a little strange. But don't worry, you don't need to fully understand this code to understand the proposal of this article.&lt;/p&gt;

&lt;p&gt;First we need a simple &lt;em&gt;html&lt;/em&gt; file, which will host our page. This approach is quite similar to what is done when we use tools such as &lt;em&gt;&lt;a href="https://pt-br.reactjs.org"&gt;React&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href="https://br.vuejs.org"&gt;Vue&lt;/a&gt;&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;List of Pok√©mons using HTML and JavaScript&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Marcio Frayze David"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;main&amp;gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;Elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time our &lt;em&gt;html&lt;/em&gt; is just a shell. It will only load the application written in &lt;em&gt;Elm&lt;/em&gt; (previously compiled) and place its contents within the &lt;em&gt;tag&lt;/em&gt; &lt;em&gt;main&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And finaly the interesting part: the code written in &lt;em&gt;Elm&lt;/em&gt;. I will first list the code completely and then highlight and comment on some more relevant parts to the topic of this article.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elm"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="kt"&gt;Main&lt;/span&gt; &lt;span class="k"&gt;exposing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Browser&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Html&lt;/span&gt; &lt;span class="k"&gt;exposing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Http&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt; &lt;span class="k"&gt;exposing&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Decoder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;-- MAIN&lt;/span&gt;


&lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;
    &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
    &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subscriptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subscriptions&lt;/span&gt;
    &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;-- MODEL&lt;/span&gt;


&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="k"&gt;alias&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Model&lt;/span&gt;
  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Failure&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kt"&gt;Loading&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kt"&gt;Success&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;List&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Loading&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fetchPokemonNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;-- UPDATE&lt;/span&gt;


&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;FetchedPokemonNames&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Result&lt;/span&gt; &lt;span class="kt"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Error&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;List&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Model&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;

    &lt;span class="kt"&gt;FetchedPokemonNames&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
        &lt;span class="kt"&gt;Ok&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Success&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="kt"&gt;Err&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Failure&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;-- SUBSCRIPTIONS&lt;/span&gt;


&lt;span class="n"&gt;subscriptions&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Model&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Sub&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;subscriptions&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Sub&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;


&lt;span class="c1"&gt;-- VIEW&lt;/span&gt;


&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Model&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Html&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
    &lt;span class="kt"&gt;Failure&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;For some reason, the Pok√©mon name list could not be loaded. üòß"&lt;/span&gt;

    &lt;span class="kt"&gt;Loading&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Loading Pok√©mons names, please wait..."&lt;/span&gt;

    &lt;span class="kt"&gt;Success&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;List&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="n"&gt;viewPokemonInfo&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 


&lt;span class="n"&gt;viewPokemonInfo&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Html&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;viewPokemonInfo&lt;/span&gt; &lt;span class="n"&gt;pokemonInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;pokemonInfo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="c1"&gt;-- HTTP&lt;/span&gt;


&lt;span class="n"&gt;fetchPokemonNames&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;fetchPokemonNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://pokeapi.co/api/v2/pokemon?limit=5"&lt;/span&gt;
    &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expectJson&lt;/span&gt; &lt;span class="kt"&gt;FetchedPokemonNames&lt;/span&gt; &lt;span class="n"&gt;decoder&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="n"&gt;pokemonInfoDecoder&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Decoder&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;
&lt;span class="n"&gt;pokemonInfoDecoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name"&lt;/span&gt; &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Decoder&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;List&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;results"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;pokemonInfoDecoder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I've published &lt;a href="https://ellie-app.com/gkQczpWk8X3a1"&gt;this page in the online editor &lt;em&gt;Ellie&lt;/em&gt;&lt;/a&gt; so you can see this &lt;em&gt;webapp&lt;/em&gt; up and running. I recommend you try to change the code and see what happens. It's a great way to start experimenting with the &lt;em&gt;Elm&lt;/em&gt; language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analyzing-the-implementation-in-elm"&gt;
  &lt;/a&gt;
  Analyzing the implementation in &lt;em&gt;Elm&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;I will not explain in this article all this code and the architecture behind the &lt;em&gt;Elm&lt;/em&gt; language. But I wanted to highlight some important parts for the context of the discussion of this article, starting with the definition of our &lt;em&gt;types&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-definitions"&gt;
  &lt;/a&gt;
  Type definitions
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elm"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="k"&gt;alias&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;Model&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt;
  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Loading&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kt"&gt;Failure&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kt"&gt;Success&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;PokemonInfo&lt;/span&gt; &lt;span class="kt"&gt;List&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above is set a &lt;em&gt;type alias&lt;/em&gt;, making it clearer to the person reading the code what is a &lt;em&gt;PokemonInfo&lt;/em&gt; (in this case, a structure with a field called &lt;em&gt;name&lt;/em&gt; of type &lt;em&gt;String&lt;/em&gt;). This will also make life easier for our compiler by allowing you to handle the appropriate error when necessary and, during the build phase, be able to send more informative error messages.&lt;/p&gt;

&lt;p&gt;Next, we define a &lt;em&gt;type&lt;/em&gt; named &lt;em&gt;Model&lt;/em&gt; that will be used to represent the current state of our application. In this example, our &lt;em&gt;webapp&lt;/em&gt; can be in one (and only one) of the 3 possible states:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Loading&lt;/em&gt;: initial application state, indicating that the &lt;em&gt;http&lt;/em&gt; request is still being processed.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Failure&lt;/em&gt;: represents a state of failure, indicating that there was a problem making the &lt;em&gt;http&lt;/em&gt; call to the server (which may be timeout, a parsing failure of the return message, etc.).&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Success&lt;/em&gt;: indicates that the request was performed and its return successfully converted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of the three defined states, only &lt;em&gt;Success&lt;/em&gt; has extra information associated with it: a list containing elements of type &lt;em&gt;PokemonInfo&lt;/em&gt;. Note that this leaves no room for ambiguity. If we have a state of success, it's &lt;strong&gt;mandatory&lt;/strong&gt; we have a list of &lt;em&gt;PokemonInfo&lt;/em&gt; defined and with a valid structure. And the opposite is also true: in case of failure, the list with the names of Pok√©mon will not be defined.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-construction-of-the-html-page"&gt;
  &lt;/a&gt;
  The construction of the &lt;em&gt;html&lt;/em&gt; page
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Elm&lt;/em&gt; was one of the pioneers in using the concept of virtual &lt;em&gt;DOM&lt;/em&gt; and declarative programming in the development of &lt;em&gt;webapps&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://guide.elm-lang.org/architecture"&gt;architecture of &lt;em&gt;Elm&lt;/em&gt;&lt;/a&gt;, there is a very clear separation between the &lt;strong&gt;state&lt;/strong&gt; of our application and what should be displayed on the screen. It is the responsibility of the &lt;em&gt;view&lt;/em&gt; function to mount, from the current state of our application, a representation of our virtual &lt;em&gt;DOM&lt;/em&gt;. And every time the state changes (when, for example, you finish loading the data with Pok√©mon names) this function will be reevaluated and a new virtual &lt;em&gt;DOM&lt;/em&gt; created. &lt;/p&gt;

&lt;p&gt;In our example, this occurs in the following code snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elm"&gt;&lt;code&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Model&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Html&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
    &lt;span class="kt"&gt;Failure&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;For some reason, the Pok√©mon name list could not be loaded. üòß"&lt;/span&gt;

    &lt;span class="kt"&gt;Loading&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Loading Pok√©mons names, please wait..."&lt;/span&gt;

    &lt;span class="kt"&gt;Success&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;List&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="n"&gt;viewPokemonInfo&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 


&lt;span class="n"&gt;viewPokemonInfo&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Html&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;viewPokemonInfo&lt;/span&gt; &lt;span class="n"&gt;pokemonInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="n"&gt;li&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;pokemonInfo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have the declaration of 2 functions: the &lt;em&gt;view&lt;/em&gt; and a helper function called &lt;em&gt;viewPokemonInfo&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;One advantage of using &lt;em&gt;types&lt;/em&gt; to represent the state of our application is that &lt;strong&gt;always&lt;/strong&gt; that a piece of code is to use this &lt;em&gt;type&lt;/em&gt;, the compiler will &lt;strong&gt;compel&lt;/strong&gt; the developer to handle all possible states. In this case: &lt;em&gt;Loading&lt;/em&gt;, &lt;em&gt;Failure&lt;/em&gt; and &lt;em&gt;Success&lt;/em&gt;. If you remove the &lt;em&gt;Loading&lt;/em&gt; treatment from the &lt;em&gt;view&lt;/em&gt; function of our example, you will receive an error message similar to this when you try to compile the application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Line 70, Column 3
This `case` does not have branches for all possibilities:

70|&amp;gt;  case model of
71|&amp;gt;    Failure -&amp;gt;
72|&amp;gt;        text "For some reason, the Pok√©mon name list could not be loaded. üòß"
73|&amp;gt;
74|&amp;gt;    Success pokemonsInfo -&amp;gt;
75|&amp;gt;      ul []
76|&amp;gt;        (List.map viewPokemonInfo pokemonsInfo) 

Missing possibilities include:

    Loading

I would have to crash if I saw one of those. Add branches for them!

Hint: If you want to write the code for each branch later, use `Debug.todo` as a
placeholder. Read &amp;lt;https://elm-lang.org/0.19.1/missing-patterns&amp;gt; for more
guidance on this workflow.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This brings more protection for the developer person to refactor the code and include or remove states from the application, making sure it won't fail to address some obscure case.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-a-http-call"&gt;
  &lt;/a&gt;
  Making a &lt;em&gt;http&lt;/em&gt; call
&lt;/h3&gt;

&lt;p&gt;The code snippet below is responsible for making the &lt;em&gt;http&lt;/em&gt; call asynchronously and performing the parse of the return, turning it into a list of &lt;em&gt;PokemonInfo&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elm"&gt;&lt;code&gt;&lt;span class="n"&gt;fetchPokemonNames&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;
&lt;span class="n"&gt;fetchPokemonNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://pokeapi.co/api/v2/pokemon?limit=5"&lt;/span&gt;
    &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expectJson&lt;/span&gt; &lt;span class="kt"&gt;FetchedPokemonNames&lt;/span&gt; &lt;span class="n"&gt;decoder&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="n"&gt;pokemonInfoDecoder&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Decoder&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;
&lt;span class="n"&gt;pokemonInfoDecoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name"&lt;/span&gt; &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Decoder&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;List&lt;/span&gt; &lt;span class="kt"&gt;PokemonInfo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;results"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;Decode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;pokemonInfoDecoder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's impossible to deny that this code is longer than a call to a &lt;em&gt;fetch&lt;/em&gt; function. But note that, in addition to making the call asynchronously, also validates and transforms the return into a &lt;em&gt;List PokemonInfo&lt;/em&gt;, eliminating the need for any validation on our part.&lt;/p&gt;

&lt;p&gt;At the end of the execution, a &lt;em&gt;FetchedPokemonNames&lt;/em&gt; message will be issued along with the result of the operation: either a list with names of Pok√©mon already decoded or a result representing that an error occurred.&lt;/p&gt;

&lt;p&gt;It will be the responsibility of the &lt;em&gt;update&lt;/em&gt; function to receive this message and create a new state for the application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elm"&gt;&lt;code&gt;&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Model&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt; &lt;span class="kt"&gt;Msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;

    &lt;span class="kt"&gt;FetchedPokemonNames&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
        &lt;span class="kt"&gt;Ok&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Success&lt;/span&gt; &lt;span class="n"&gt;pokemonsInfo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="kt"&gt;Err&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Failure&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once again, we must deal with all possible scenarios. In this example, there are two: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if &lt;em&gt;result&lt;/em&gt; is &lt;em&gt;Ok&lt;/em&gt;, it means that our request has been successfully processed. A new state is then returned to our application, changing to &lt;em&gt;Success&lt;/em&gt;, along with the list containing the Pok√©mon names.&lt;/li&gt;
&lt;li&gt;if the &lt;em&gt;result&lt;/em&gt; is &lt;em&gt;Err&lt;/em&gt;, then we know that there was a problem during the request or when performing the &lt;em&gt;json&lt;/em&gt; parsing. A new application state is returned, changing it to &lt;em&gt;Failure&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever the return of the &lt;em&gt;update&lt;/em&gt; function is different from the previous state, the &lt;em&gt;view&lt;/em&gt; function will automatically be triggered again, then a new virtual &lt;em&gt;DOM&lt;/em&gt; is created and any changes will be applied to the screen. To better understand this process, you can read about &lt;em&gt;The Elm Architecture&lt;/em&gt; &lt;a href="https://guide.elm-lang.org/architecture"&gt;on this page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;Although this article focused exclusively on &lt;em&gt;http&lt;/em&gt; requests and &lt;em&gt;JavaScript&lt;/em&gt;, the same concepts are applied in many other scenarios, libraries, &lt;em&gt;frameworks&lt;/em&gt; and languages.&lt;/p&gt;

&lt;p&gt;My intention is not to discourage the use of &lt;em&gt;JavaScript&lt;/em&gt;. &lt;em&gt;&lt;a href="https://elm-lang.org"&gt;Elm&lt;/a&gt;&lt;/em&gt; is a wonderful language, but I still use &lt;em&gt;JavaScript&lt;/em&gt; and &lt;em&gt;TypeScript&lt;/em&gt; in some &lt;em&gt;webapps&lt;/em&gt; and this is not the focal point of the problem. What I would like is that when you are consuming a function of your preferred language (regardless if it is a native function or from third-party libraries), that you always reflect: is there any scenario that this code is ignoring? Or, in other words, is this a &lt;strong&gt;simple&lt;/strong&gt; or a &lt;strong&gt;simplistic&lt;/strong&gt; solution?&lt;/p&gt;

&lt;p&gt;Most importantly, when writing a new function, use a communication interface that encourages the person who consumes it to follow best practices. Even if she is following the path of minimal effort, she should be able to take care of all possible scenarios. Or, in other words, always follow the &lt;a href="https://en.wikipedia.org/wiki/Principle_of_least_astonishment"&gt;Principle of least astonishment&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Did you like this text? Checkout my other articles at: &lt;a href="https://segunda.tech/tags/english"&gt;https://segunda.tech/tags/english&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>elm</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
