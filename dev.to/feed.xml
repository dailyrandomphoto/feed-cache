<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Heimdallr TERMINAL for manjaro, ubnutu, arch, fedora !</title>
      <author>Amzy 0 |  محمد امین عظیمی</author>
      <pubDate>Sat, 08 May 2021 22:30:43 +0000</pubDate>
      <link>https://dev.to/amzy0/heimdallr-terminal-for-manjaro-ubnutu-arch-fedora-1mep</link>
      <guid>https://dev.to/amzy0/heimdallr-terminal-for-manjaro-ubnutu-arch-fedora-1mep</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/amzy-0/heimdallr"&gt;HEIMDALLR TERMINAL&lt;/a&gt;&lt;/p&gt;

</description>
      <category>fedora</category>
      <category>ubuntu</category>
      <category>arch</category>
      <category>python</category>
    </item>
    <item>
      <title>SQL Joins</title>
      <author>Danyson</author>
      <pubDate>Sat, 08 May 2021 22:28:45 +0000</pubDate>
      <link>https://dev.to/danyson/sql-joins-o3m</link>
      <guid>https://dev.to/danyson/sql-joins-o3m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#inner-join"&gt;
  &lt;/a&gt;
  Inner Join
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7o5VtIGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdtwiofcfor43bpsub7l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7o5VtIGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdtwiofcfor43bpsub7l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SQL Query :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A INNER JOIN B ON A.KEY = B.KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Definition :&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Select tables A &amp;amp; B and compare key values of table A and table B and return records which only have the identical key values in both tables of A &amp;amp; B. This is similar to the Set theory operation &lt;strong&gt;&lt;code&gt;Intersection&lt;/code&gt;&lt;/strong&gt; which is denoted by A ∩ B, the set containing all elements of A that also belong to B.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#left-join"&gt;
  &lt;/a&gt;
  Left Join
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5equ4g3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh6lg2ps6kxlsbwu2r1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5equ4g3X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh6lg2ps6kxlsbwu2r1l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SQL Query :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A LEFT JOIN B ON A.KEY = B.KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Definition :&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Select tables A &amp;amp; B and compare key values of table A and table B and return all records of A which is in the left side of the sql query but in case of B which is in right side of sql query, only returns records that have the same key values of table A.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#right-join"&gt;
  &lt;/a&gt;
  Right Join
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oqXDCiVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27s6kaq3y84zilo959cx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oqXDCiVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27s6kaq3y84zilo959cx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SQL Query :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A RIGHT JOIN B ON A.KEY = B.KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Definition :&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Select tables A &amp;amp; B and compare key values of table A and table B and return all records of B which is in the right side of the sql query but in case of A which is in left side of sql query, only returns records that have the same key values of table B.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; &lt;br&gt;
&lt;em&gt;1. &lt;strong&gt;&lt;code&gt;ON&lt;/code&gt;&lt;/strong&gt; clause is the more general than &lt;strong&gt;&lt;code&gt;USING&lt;/code&gt;&lt;/strong&gt; clause. One can join tables on a column, a set of columns and even a condition. For example:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM city JOIN country ON city.country_code = country.country_code
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;2. &lt;strong&gt;&lt;code&gt;USING&lt;/code&gt;&lt;/strong&gt; is useful when both tables share a column of the exact same name on which they join. For example:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT city.name, city_id FROM city JOIN country USING city_id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#full-outer-join"&gt;
  &lt;/a&gt;
  Full Outer Join
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvOKcN2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vq4b9zot1bu8fgawecqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvOKcN2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vq4b9zot1bu8fgawecqg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SQL Query :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A FULL OUTER JOIN B ON A.KEY = B.KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Definition :&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Select tables A &amp;amp; B and compare key values of table A and table B and return all records of both A &amp;amp; B and fill in NULL for missing matches on either side. This is similar to the set theory operation &lt;strong&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/strong&gt; of the sets A and B, where A ∪ B, is the set of distinct elements that belong to set A or set B, or both.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#left-outer-join"&gt;
  &lt;/a&gt;
  Left Outer Join
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K1OZYd07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bz6x0gxm6cts3bsa2kv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K1OZYd07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bz6x0gxm6cts3bsa2kv.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
&lt;strong&gt;SQL Query :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A LEFT OUTER JOIN B ON A.KEY = B.KEY WHERE B.KEY IS NULL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Definition :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Left outer join returns set of records from A, with the matching records in B (which are available). If there is no match, the right side will have null. This is similar to the set theory operation &lt;strong&gt;&lt;code&gt;Set Difference&lt;/code&gt;&lt;/strong&gt; ‘A – B’, which is the set containing elements that are in A but not in B. For example : all elements of A except the elements of B.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#right-outer-join"&gt;
  &lt;/a&gt;
  Right Outer Join
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wi3o-Ixu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyhnh7pgapjgcin2ghl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wi3o-Ixu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vyhnh7pgapjgcin2ghl6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;SQL Query :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A RIGHT OUTER JOIN B ON A.KEY = B.KEY WHERE A.KEY IS NULL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Definition :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Right outer join returns set of records from B, with the matching records in A (which are available). If there is no match, the left side will have null. This is similar to the set theory operation &lt;strong&gt;&lt;code&gt;Set Difference&lt;/code&gt;&lt;/strong&gt; ‘B – A’, which is the set containing elements that are in B but not in A. For example : all elements of B except the elements of A.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#full-outer-join-without-intersection"&gt;
  &lt;/a&gt;
  Full Outer Join without Intersection
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--apma3k58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvybx6nn3zo5ax2gbpsj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--apma3k58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvybx6nn3zo5ax2gbpsj.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM A FULL OUTER JOIN B ON A.KEY = B.KEY WHERE A.KEY IS NULL OR B.KEY IS NULL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Definition :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Full outer join without intersection returns the set of records only in table A, but not in table B or the set of records only in table B, but not in table A, we perform the same left outer join or right outer join, then exclude the records we don't want from the right side or left side via a where clause. Which is similar to the set operation &lt;code&gt;A – B ∪ B – A&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;My Personal Blog :&lt;/strong&gt; &lt;a href="https://danyson.github.io/"&gt;https://danyson.github.io/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>20 JavaScript One-Liners That Will Help You Code Like a Pro</title>
      <author>Muhammad Ovi</author>
      <pubDate>Sat, 08 May 2021 21:02:29 +0000</pubDate>
      <link>https://dev.to/ovi/20-javascript-one-liners-that-will-help-you-code-like-a-pro-4ddc</link>
      <guid>https://dev.to/ovi/20-javascript-one-liners-that-will-help-you-code-like-a-pro-4ddc</guid>
      <description>&lt;p&gt;JavaScript keeps growing and growing, opening doors for new&lt;br&gt;
"to be tech geeks" in the market as it's one of the easiest languages to start. (is it really?)&lt;/p&gt;

&lt;p&gt;It's true that JavaScript can do a lot of blazing things! and there is just so much to learn.&lt;/p&gt;

&lt;p&gt;And whether you’re new to JavaScript or more of a professional developer it’s always good to learn something new.&lt;/p&gt;

&lt;p&gt;I'm gonna go over some really helpful one-liners (20 + Bonus) that can help you boost your productivity and can help in debugging code.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#what-is-a-oneliner-actually"&gt;
  &lt;/a&gt;
  What is a one-liner actually?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A one-liner is a code practice in which we perform some function in just one line of code.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#01-get-a-random-boolean"&gt;
  &lt;/a&gt;
  01 - Get a random boolean
&lt;/h3&gt;

&lt;p&gt;This function will return a boolean (true or false) using Math.random() method.&lt;br&gt;
Math.random creates a random number between 0 and 1, after which we check if it is higher or lower than 0.5.&lt;br&gt;
That means it's a 50/50 chance to get either true or false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getRandomBoolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getRandomBoolean&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// a 50/50 chance of returning true or false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#02-check-if-the-date-is-weekend"&gt;
  &lt;/a&gt;
  02 - Check if the date is Weekend
&lt;/h3&gt;

&lt;p&gt;By this function, you'll be able to check if the date that is provided is either a weekday or weekend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isWeekend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isWeekend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="c1"&gt;// false (Friday)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isWeekend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="c1"&gt;// true (Saturday)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#03-check-if-a-number-is-even-or-odd"&gt;
  &lt;/a&gt;
  03 - Check if a number is even or odd
&lt;/h3&gt;

&lt;p&gt;Simple utility function to check if a number is even or odd.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#04-get-the-unique-values-in-an-array"&gt;
  &lt;/a&gt;
  04 - Get the unique values in an array
&lt;/h3&gt;

&lt;p&gt;A very simple method to remove all duplicate values from an array. This function converts our array to a Set and then back to an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueArr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uniqueArr&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
&lt;span class="c1"&gt;// [1, 2, 3, 4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#05-check-if-a-variable-is-an-array"&gt;
  &lt;/a&gt;
  05 - Check if a variable is an array
&lt;/h3&gt;

&lt;p&gt;A clean and easy way to check if a variable is an array. &lt;br&gt;&lt;br&gt;
Well, there can be other ways too 😉&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;
&lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ovi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#06-generate-a-random-number-between-two-numbers"&gt;
  &lt;/a&gt;
  06 - Generate a random number between two numbers
&lt;/h3&gt;

&lt;p&gt;This will take two numbers as params and will generate a random number between those two numbers!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// could be anything from 1 - 50&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#07-generate-a-random-string-unique-id"&gt;
  &lt;/a&gt;
  07 - Generate a random string (unique id?)
&lt;/h3&gt;

&lt;p&gt;Maybe you need to create a temporary unique id for something, here's a trick you can use to generate a random string on the go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;randomString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// could be anything!!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#08-scroll-to-the-top-of-the-page"&gt;
  &lt;/a&gt;
  08 - Scroll to the top of the page
&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;window.scrollTo()&lt;/em&gt; method takes an &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinate to scroll to.&lt;br&gt;
If we set these to zero and zero, we’ll scroll to the top of the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scrollToTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;scrollToTop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#09-toggle-boolean"&gt;
  &lt;/a&gt;
  09 - Toggle boolean
&lt;/h3&gt;

&lt;p&gt;Toggling a boolean value is one of the very basic programming problems, that can be solved in a lot of different ways.&lt;br&gt;
Instead of using if-statements to determine what value to set the boolean to, you could instead use the function to flip the current value using the &lt;em&gt;!&lt;/em&gt; "not" operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggleBool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#10-swapping-two-variables"&gt;
  &lt;/a&gt;
  10 - Swapping Two Variables
&lt;/h3&gt;

&lt;p&gt;The below code is one of the simpler ways to swap two variables without using a third variable and with just one line of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#11-calculate-number-of-days-between-two-dates"&gt;
  &lt;/a&gt;
  11 - Calculate number of days between two dates
&lt;/h3&gt;

&lt;p&gt;To calculate the days between two dates,&lt;br&gt;
we first find the absolute between two dates and then divide it with 86400000 which is equal to milliseconds in a single day, and at the end, we round the result and return it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;daysDiff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;date2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;86400000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;daysDiff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-11-25&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="c1"&gt;// 199&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#12-copy-text-to-clipboard"&gt;
  &lt;/a&gt;
  12 - Copy text to clipboard
&lt;/h3&gt;

&lt;p&gt;PS: You might need to add a check to see if &lt;em&gt;navigator.clipboard.writeText&lt;/em&gt; exists&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;copyTextToClipboard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#13-different-ways-of-merging-multiple-arrays"&gt;
  &lt;/a&gt;
  13 - Different ways of merging multiple arrays
&lt;/h3&gt;

&lt;p&gt;There are a couple of ways to merge arrays. One of them is using the "concat" method. Another one is using the spread operator ("…").&lt;/p&gt;

&lt;p&gt;PS: We can also any duplicates from the final array using the "Set" object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Merge but don't remove the duplications&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Or&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Merge and remove the duplications&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;
&lt;span class="c1"&gt;// Or&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;])];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#14-get-the-actual-type-of-javascript-primitives"&gt;
  &lt;/a&gt;
  14 - Get the actual type of javascript primitives
&lt;/h3&gt;

&lt;p&gt;People sometimes use libraries to find the actual type of something in JavaScript, this small trick can save your time (and code size).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trueTypeOf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// string&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// number&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// null&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;({}));&lt;/span&gt;
&lt;span class="c1"&gt;// object&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;([]));&lt;/span&gt;
&lt;span class="c1"&gt;// array&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// number&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trueTypeOf&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}));&lt;/span&gt;
&lt;span class="c1"&gt;// function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#15-truncate-string-at-the-end"&gt;
  &lt;/a&gt;
  15 - Truncate string at the end
&lt;/h3&gt;

&lt;p&gt;Need to truncate string from the end, not a problem!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;truncateString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;truncateString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi, I should be truncated because I am too loooong!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Hi, I should be truncated because...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#16-truncate-string-from-the-middle"&gt;
  &lt;/a&gt;
  16 - Truncate string from the middle
&lt;/h3&gt;

&lt;p&gt;How about truncating the string from the middle? &lt;br&gt;&lt;br&gt;
This function will take a string as the first param, then the size of string we need as 2nd argument, then how many chars we need from the start and end in 3rd and 4th param.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;truncateStringMiddle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;truncateStringMiddle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A long store goes here but then eventually ends!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// string&lt;/span&gt;
    &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// total size needed&lt;/span&gt;
    &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// chars to keep from start&lt;/span&gt;
    &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// chars to keep from end&lt;/span&gt;
  &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// A long store ... eventually ends!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#17-capitalizing-a-string"&gt;
  &lt;/a&gt;
  17 - Capitalizing a string
&lt;/h3&gt;

&lt;p&gt;Well, unfortunately, JavaScript does not have a built-in function to capitalize string, but this workaround can help you obtain the goal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;capitalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// Hello world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#18-check-if-the-current-tab-is-in-viewfocus"&gt;
  &lt;/a&gt;
  18 - Check if the current tab is in view/focus
&lt;/h3&gt;

&lt;p&gt;This simple helper method returns true or false depending on if a tab is in view/focus&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isTabInView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;isTabInView&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// true/false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#19-check-if-the-user-is-on-an-apple-device"&gt;
  &lt;/a&gt;
  19 - Check if the user is on an Apple device
&lt;/h3&gt;

&lt;p&gt;This will return true if the user is on an Apple device&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isAppleDevice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/Mac|iPod|iPhone|iPad/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;platform&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isAppleDevice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// true/false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#20-the-ternary-operator"&gt;
  &lt;/a&gt;
  20 - The Ternary Operator
&lt;/h3&gt;

&lt;p&gt;This is a great code saver when you want to write an &lt;em&gt;if..else&lt;/em&gt; statement in just one line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are not old enough&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are young!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are not old enough&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are young!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#bonus-shortcircuit-evaluation-shorthand"&gt;
  &lt;/a&gt;
  Bonus - Short-circuit Evaluation Shorthand
&lt;/h3&gt;

&lt;p&gt;When assigning a variable value to another variable, you may want to ensure that the source variable is not null, undefined, or empty.&lt;br&gt;
You can either write a long &lt;em&gt;if&lt;/em&gt; statement with multiple conditionals, or use a short-circuit evaluation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Longhand&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Shorthand&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;buddy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;That's all folks! Hope you found this helpful, do not forget to add your email to the mailing list on my &lt;a href="https://muhammadovi.com"&gt;website&lt;/a&gt; 😉&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Scheduling API Roadblocks</title>
      <author>Spurwing</author>
      <pubDate>Sat, 08 May 2021 20:53:57 +0000</pubDate>
      <link>https://dev.to/spurwing/scheduling-api-roadblocks-4mc0</link>
      <guid>https://dev.to/spurwing/scheduling-api-roadblocks-4mc0</guid>
      <description>&lt;p&gt;At first blush, implementing scheduling functionality in your application or website looks like it would be the simplest thing in the world to pull off. After all, the actual process for using most &lt;strong&gt;scheduling solutions&lt;/strong&gt; is pretty much as “point and click” as it gets – with new appointments and events scheduled in about 15 seconds or less.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-scheduling-api-roadblocks-developers-need-to-overcome"&gt;
  &lt;/a&gt;
  Common Scheduling API Roadblocks Developers Need to Overcome
&lt;/h3&gt;

&lt;p&gt;Beneath the surface of that super &lt;strong&gt;user-friendly&lt;/strong&gt; experience, however, is something far more complex.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--koxogtSg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gnk4vodghzgu7aoprqr9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--koxogtSg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gnk4vodghzgu7aoprqr9.png" alt="scheduling api roadblocks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So complex, in fact, that a lot of developers learn (relatively early on in the development process) that it makes a lot more sense to use &lt;strong&gt;scheduling API&lt;/strong&gt; services to overcome common obstacles than trying to build something from scratch – reinventing the wheel along the way.&lt;/p&gt;

&lt;p&gt;Below we highlight some of the biggest obstacles developers come across when working with scheduling systems and why it makes so much sense to lean on scheduling API services to shortcut &lt;strong&gt;development time&lt;/strong&gt; and improve results.&lt;/p&gt;

&lt;p&gt;Let’s take right in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#incorporating-multiple-scheduling-apis"&gt;
  &lt;/a&gt;
  Incorporating Multiple Scheduling APIs
&lt;/h3&gt;

&lt;p&gt;While almost all popular calendar platforms operate similarly as far as functionality is concerned, the code, API, and “hooks” running under the hood couldn’t be more unique.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdDOzdmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dmlv3odpah6ak85dohc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdDOzdmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dmlv3odpah6ak85dohc.png" alt="multiple scheduling api systems"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Google, Outlook, Exchange, and the Office 365 calendar systems all have their own unique API that makes integration possible. But integrating all of those APIs together with outside APIs as well can become a real spaghetti situation in a hurry.&lt;/p&gt;

&lt;p&gt;Everything starts to “tangle” pretty quickly and before you know it it’s almost impossible to keep your scheduling solution tight, organized, and well optimized.&lt;/p&gt;

&lt;p&gt;By using API scheduling services that act as a single point of contact for multiple calendar APIs, however, you’re able to smooth things out and streamline your app or service significantly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scheduling-across-multiple-calendars"&gt;
  &lt;/a&gt;
  Scheduling Across Multiple Calendars
&lt;/h3&gt;

&lt;p&gt;If you combine the unique complexity of multiple calendar applications with the fact that they treat event/appointment creation directives as second-class objects it’s not hard to see how things can spiral out of control when you have unified scheduling across multiple calendars.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0-F9XMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uyh39a3wzqyx9cdwg5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0-F9XMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8uyh39a3wzqyx9cdwg5k.png" alt="multi scheduling api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By using a single API service to manage all second-class objects (even transforming them into first-class objects) across multiple calendar platforms everything smooths out significantly.&lt;/p&gt;

&lt;p&gt;Less resources are used, event creation requests are handled much faster, and at the end of the day managing events across multiple different calendar platforms becomes almost effortless.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scheduling-across-multiple-timezones"&gt;
  &lt;/a&gt;
  Scheduling Across Multiple Timezones
&lt;/h3&gt;

&lt;p&gt;Dealing with scheduling across multiple time zones is one of those things that often goes overlooked by new developers working with calendar and scheduling APIs for the first time – at least until everything breaks under real-world testing, anyway!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yJH94g0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txsio69uwo2c8qp5f0cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJH94g0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txsio69uwo2c8qp5f0cc.png" alt="timezone api scheduling"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Any applications that are going to be responsible for managing events that span across multiple regions and multiple time zones need to be engineered to “normalize” time.&lt;/p&gt;

&lt;p&gt;With scheduling API services, time isn’t just normalized on the user end of things – always displaying the right time for each user depending on their specific time zone while keeping things &lt;strong&gt;synchronized&lt;/strong&gt;. But they also make it easy to manage, update, and instance the timing of events across multiple time zones on the backend, too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synchronized-scheduling-with-multiuser-availabilities"&gt;
  &lt;/a&gt;
  Synchronized Scheduling with Multi-User Availabilities
&lt;/h3&gt;

&lt;p&gt;One of the core functionalities that a scheduling solution needs to include is the ability to find schedule availability across multiple users, allowing end-users to schedule appointments and events in “open space” shared by everyone using that calendar specifically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SDQLCULW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/svziepxlrw9r1pl36y4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SDQLCULW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/svziepxlrw9r1pl36y4k.png" alt="multi user scheduling api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Standard calendar API solutions take advantage of “free/busy resources” to handle this on their own. And while that does a solid job for single users on one calendar application, things break down pretty quickly when you’re trying to manage multiple calendars and multiple users at once – all with their own unique schedules.&lt;/p&gt;

&lt;p&gt;Top-of-the-line scheduling API services eliminate this obstacle by synchronizing schedules in real time across multiple user and multiple calendar instances. This keeps everyone on the exact same page with limited potential for &lt;strong&gt;overbooking&lt;/strong&gt; or mismatched schedules to pop up later down the line.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;At the end of the day, scheduling API services &lt;strong&gt;shortcut development time&lt;/strong&gt; significantly, overcome the obstacles highlighted above (and more) and should be leveraged at every opportunity rather than trying to &lt;strong&gt;reinvent the wheel&lt;/strong&gt; and building this functionality from scratch.&lt;/p&gt;

&lt;p&gt;Learn how Spurwing's API can help your project or business succeed:&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://www.spurwing.io/"&gt;https://www.spurwing.io/&lt;/a&gt;&lt;br&gt;
Blog: &lt;a href="https://dev.to/spurwing"&gt;https://dev.to/spurwing&lt;/a&gt;&lt;br&gt;
Marketplace: &lt;a href="https://github.com/Spurwing"&gt;https://github.com/Spurwing&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>productivity</category>
      <category>programming</category>
      <category>startup</category>
    </item>
    <item>
      <title>No Need Postman, Your VSCode is Enough for Testing Your API 😎⚡</title>
      <author>Dzun N</author>
      <pubDate>Sat, 08 May 2021 20:12:56 +0000</pubDate>
      <link>https://dev.to/dzun_n/no-need-postman-your-vscode-is-enough-for-testing-your-api-2khg</link>
      <guid>https://dev.to/dzun_n/no-need-postman-your-vscode-is-enough-for-testing-your-api-2khg</guid>
      <description>&lt;p&gt;hey you all👋&lt;/p&gt;

&lt;p&gt;A couple week ago I've found Lightweight ⚡ and simple 😋 tools for testing my API. That's Thunder Client.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thunder-client"&gt;
  &lt;/a&gt;
  Thunder Client
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TZqdTxw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tizuy1k1jeez7uzogpym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TZqdTxw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tizuy1k1jeez7uzogpym.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AATBq_jZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/rangav/thunder-client-support/blob/master/images/thunder-client.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AATBq_jZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/rangav/thunder-client-support/blob/master/images/thunder-client.gif%3Fraw%3Dtrue" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thunder Client is Rest API Client Extension for Visual Studio Code, with simple and clean design. The extension makes api testing very easy with Scriptless GUI based testing. and created by &lt;a href="https://twitter.com/ranga_vadhineni"&gt;Ranga Vadhineni&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thunder Client has many Main Features such as :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;List item&lt;/li&gt;
&lt;li&gt;Lightweight API Client&lt;/li&gt;
&lt;li&gt;Simple &amp;amp; Clean UI&lt;/li&gt;
&lt;li&gt;Collection &amp;amp; Environment Variables&lt;/li&gt;
&lt;li&gt;Scriptless Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-install-it-"&gt;
  &lt;/a&gt;
  💻 How to install it ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It'a easy, just go to Extension menu in sidebar VSCode, and install it:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-tlUku6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9fzrrb32wzisc17ptjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-tlUku6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9fzrrb32wzisc17ptjv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And you'll see the thunder client icon in sidebar&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wiYlDons--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v383nyhy1xaahlhixbrn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wiYlDons--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v383nyhy1xaahlhixbrn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lets-try-test-thunder-client"&gt;
  &lt;/a&gt;
  Let's try test Thunder Client
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;For testing API, I use a dummy api that's &lt;a href="https://swapi.dev/"&gt;SWAPI&lt;/a&gt;(The Star Wars API).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://swapi.dev/"&gt;https://swapi.dev/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#get-request"&gt;
  &lt;/a&gt;
  Get request
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DFKecTaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbim7792zhhwk57w4w42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DFKecTaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbim7792zhhwk57w4w42.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#set-environment"&gt;
  &lt;/a&gt;
  Set Environment
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RhThPJHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mqoexo2ptuujjkqford.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RhThPJHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mqoexo2ptuujjkqford.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you can try more by your self 🙌🙌, have nice try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thunder Client is Rest API Client Extension for Visual Studio Code, with simple and clean design. The extension makes api testing very easy with Scriptless GUI based testing. and created by &lt;a href="https://twitter.com/ranga_vadhineni"&gt;Ranga Vadhineni&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: It does'nt means Thunder Client is better then postman, not. Postman still has more feature than Thunder client. Thunder Client made for own use and simple API testing&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>postman</category>
      <category>api</category>
      <category>extensions</category>
    </item>
    <item>
      <title>Tailwind CSS might not be for you</title>
      <author>Benoît Rouleau</author>
      <pubDate>Sat, 08 May 2021 20:03:20 +0000</pubDate>
      <link>https://dev.to/benface/tailwind-css-might-not-be-for-you-jk0</link>
      <guid>https://dev.to/benface/tailwind-css-might-not-be-for-you-jk0</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclaimer: This article is my version of &lt;a href="https://dev.to/brianboyko/tailwindcss-adds-complexity-does-nothing-3hpn"&gt;Tailwind CSS: Adds complexity, does nothing&lt;/a&gt;. I respect the original author’s opinions, but I think there’s a better way to criticize Tailwind CSS. Here goes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you work in the front-end, you’ve probably heard a lot about Tailwind CSS, a CSS framework, much like Bootstrap. Much unlike Bootstrap, however, Tailwind takes a different approach – it is almost exclusively “utility classes”.&lt;/p&gt;

&lt;p&gt;And it might not be for everyone.&lt;/p&gt;

&lt;p&gt;Before we start, let me try to explain what a utility class is. Let’s say that you have many components, and many of them need to have the CSS declaration &lt;code&gt;display: flex;&lt;/code&gt;. Instead of writing that over and over in your CSS, you create a class called &lt;code&gt;flex&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.flex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, in every component that needs to be flexed, you add that &lt;code&gt;flex&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;This is not a bad thing. I have written and used utility classes a great deal myself, especially when I’m writing CSS without the aid of CSS-in-JS solutions or a preprocessor like Sass/SCSS.&lt;/p&gt;

&lt;p&gt;What Tailwind does is take that concept to the extreme, with the idea being that you almost never have to write CSS, you just add different classes to your HTML based on what styles you need to apply.&lt;/p&gt;

&lt;p&gt;Which is an interesting choice, because...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-embracing-inline-styles"&gt;
  &lt;/a&gt;
  This is embracing inline styles
&lt;/h2&gt;

&lt;p&gt;Back before stylesheets were a thing, HTML had elements such as &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;center&amp;gt;&lt;/code&gt; to apply some basic styles directly in the markup, much like the &lt;code&gt;style&lt;/code&gt; attribute that came along with CSS. But while inline styles are still a thing nowadays, we know better than to use them since we have stylesheets now, which let us “separate concerns”: HTML is for content and structure, CSS is for presentation.&lt;/p&gt;

&lt;p&gt;However, Tailwind doesn’t adhere to that idea, and goes back to the 90’s way of mixing content and presentation in the same file. So why not just use inline styles then? Writing &lt;code&gt;&amp;lt;div class="flex"&amp;gt;foo&amp;lt;/div&amp;gt;&lt;/code&gt; has the same exact effect as writing &lt;code&gt;&amp;lt;div style="display: flex;"&amp;gt;foo&amp;lt;/div&amp;gt;&lt;/code&gt;. Well, turns out there are a couple reasons, &lt;a href="https://tailwindcss.com/docs/utility-first#why-not-just-use-inline-styles"&gt;as outlined in the Tailwind documentation&lt;/a&gt;. Notably, inline styles don’t support media queries or pseudo-class selectors such as &lt;code&gt;:hover&lt;/code&gt; or &lt;code&gt;:focus&lt;/code&gt;, so you can’t have responsive or dynamic styles with them. Building a whole app or website with inline styles would be impossible for that reason alone, unless you decide to pretend that mobile devices don’t exist. If that’s not reason enough, Tailwind makes a strong argument for “designing with constraints”:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Using inline styles, every value is a magic number. With utilities, you're choosing styles from a predefined design system, which makes it much easier to build visually consistent UIs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Indeed, Tailwind’s &lt;a href="https://tailwindcss.com/docs/theme"&gt;theme configuration&lt;/a&gt; is one of its greatest strengths. It prevents your stylesheet from containing &lt;a href="https://cssstats.com/stats/?url=https://www.publicissapient.com"&gt;69 unique font sizes and some background colors that are different but so similar that they should clearly be the same (e.g. &lt;code&gt;#ffe42e&lt;/code&gt; and &lt;code&gt;#ffe322&lt;/code&gt;)&lt;/a&gt;. It also helps developers design faster and be more confident that they’re not introducing visual inconsistencies.&lt;/p&gt;

&lt;p&gt;But even though Tailwind improves a lot on inline styles, it still embraces their philosophy and suggests that it’s totally fine – even desirable – to mingle presentation with content. Consequently, some of the arguments that you could make against using inline styles are also arguments against using Tailwind. I know it seems a bit lazy to rehash other users’ criticisms of inline styles to explain why Tailwind might not be for you, but let’s do it anyway:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-wet-not-dry"&gt;
  &lt;/a&gt;
  It’s WET, not DRY
&lt;/h2&gt;

&lt;p&gt;When you want to change your site’s styling in a major way, if you’ve used utility classes, you need to go through each use of those utility classes – that is, every component – and visually determine what needs to be updated. For example, let’s say that your company’s primary color is blue. You’ll have lots of blue stuff in your website, marked with classes like &lt;code&gt;text-blue-700&lt;/code&gt; or &lt;code&gt;bg-blue-500&lt;/code&gt;, which represent different shades of blue. And that’s fine until your company decides to rebrand, and all of the buttons on the site – but only the buttons – need to be red.&lt;/p&gt;

&lt;p&gt;If you were using regular old CSS, you would probably have a class called &lt;code&gt;button&lt;/code&gt;. You would just go into that class in your CSS and change a single line: &lt;code&gt;background-color: red;&lt;/code&gt;. Any element that uses that class definition would now be red.&lt;/p&gt;

&lt;p&gt;Instead, with Tailwind, you have to go through each component and manually change &lt;code&gt;bg-blue-500&lt;/code&gt; to &lt;code&gt;bg-red-500&lt;/code&gt;. And with 1000 edits comes 1000 opportunities to introduce a bug. It is almost a textbook definition of why the DRY principle is in place.&lt;/p&gt;

&lt;p&gt;That is, unless you bring back the abstraction that you lost by replacing &lt;code&gt;button&lt;/code&gt; with a bunch of utility classes in your HTML. In my experience, Tailwind works best if anything that used to be a “CSS component” (like the &lt;code&gt;button&lt;/code&gt; class) is made a “template component” (a reusable file that includes both the markup and the styling). That makes sense when you think about it, and you end up removing even more duplication: not just the Tailwind classes which now live in a single file instead of 1000, but any attribute (think ARIA) or child element of the component (think &lt;code&gt;button__icon&lt;/code&gt;). Turns out your code’s DRYness is up to you, not up to Tailwind!&lt;/p&gt;

&lt;p&gt;The above assumes that you’re using some kind of component library (e.g. React, Vue, Svelte, etc.) or templating language that supports partials (Twig, Blade, PHP, etc.). If you’re not, or if you find that it would be cumbersome to create a component or partial for a simple button, that’s totally fine. You don’t have to change your abstraction model, you can still use CSS itself as your “component layer”. That’s where Tailwind’s &lt;code&gt;@apply&lt;/code&gt; feature comes in handy: you keep your &lt;code&gt;button&lt;/code&gt; class, but instead of writing &lt;code&gt;background-color: red;&lt;/code&gt;, you write &lt;code&gt;@apply bg-red;&lt;/code&gt;. That way, you’re still using the theme configuration instead of a hard-coded (magic) value. This is similar to what you can do with preprocessors or CSS variables, but using the Tailwind API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-is-traditionally-concerned-with-structure-not-styling"&gt;
  &lt;/a&gt;
  HTML is traditionally concerned with &lt;em&gt;structure&lt;/em&gt;, not &lt;em&gt;styling&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;People talk about separation of concerns a lot in development. CSS Modules (and especially &lt;code&gt;.vue&lt;/code&gt; files) have done a lot to dispel the notion that you need to segregate structure, behavior, and style of each building block of your site in separate folders, but there is something to be said for separating concerns. That is, each part of your code should be “loosely coupled and highly cohesive.”&lt;/p&gt;

&lt;p&gt;In other words, your HTML (structure syntax) shouldn’t have information about what the styles should be; it should only contain information about the structure of the page. Indeed, the ultimate reason for the invention of CSS, the whole point of the entire enterprise of CSS... was specifically so that you could separate content from presentation.&lt;/p&gt;

&lt;p&gt;And yet, Tailwind embraces the idea of inline styles, which goes against that whole concept. Why is that? Adam Wathan, the author of Tailwind, has written &lt;a href="https://adamwathan.me/css-utility-classes-and-separation-of-concerns/"&gt;an article&lt;/a&gt; about how separation of concerns is “a straw man” and we should instead think of it in terms of “dependency direction”. It’s a long read, but it’s worth it to understand where Tailwind comes from.&lt;/p&gt;

&lt;p&gt;Tailwind, like most CSS frameworks, is targeted towards developers who prefer writing HTML that depends on CSS, over CSS that depends on HTML. Adam mentions that both approaches are perfectly valid, and it comes down to “what’s more important to you in a specific context”. Tailwind takes the first approach, and goes as far as it can with it. As a result, developers can build custom UIs right in the HTML because the CSS provides all the necessary building blocks.&lt;/p&gt;

&lt;p&gt;When we write code, we write it for two audiences: the first is the computer itself, which doesn’t care how the code looks so long as it runs, and the other is our fellow programmers. The easier it is for them to quickly identify what parts of your program are and how they interrelate, the more quickly they can fix bugs, add features, and bring value to the organization. Tailwind makes it easy not only to build UIs without switching context, but also to &lt;em&gt;understand&lt;/em&gt; what each element looks like at a glance, since the styles are right there in the same file.&lt;/p&gt;

&lt;p&gt;The flip side of losing “semantic” class names in favor of utility classes is that it becomes not as obvious what a given piece of HTML represents in terms of content. Thankfully, that is easily mitigated by using well-named components, or adding comments or even classes that do nothing but describe what an element is (as the first class, so it’s not lost in the sea of utilities, obviously).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-hard-to-read-at-first"&gt;
  &lt;/a&gt;
  It’s hard to read at first
&lt;/h2&gt;

&lt;p&gt;If you look at some HTML with Tailwind in it, you might say to yourself that the HTML looks “busy” or even “ugly.” That's true, but some say you get used to it.&lt;/p&gt;

&lt;p&gt;The real catch is that you have to learn all these classes before you can be productive with it, even if you know CSS really well. Tailwind is full of semantically obscure abbreviations such as &lt;code&gt;w&lt;/code&gt; for &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;h&lt;/code&gt; for &lt;code&gt;height&lt;/code&gt;. The framework tries to find a balance between terseness and expressiveness, but it can definitely feel cryptic at first.&lt;/p&gt;

&lt;p&gt;Here's an example from Aleksandr Hovhannisyan.&lt;/p&gt;

&lt;p&gt;This Tailwind code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-4 h-4 rounded text-white bg-black py-1 px-2 m-1 text-sm md:w-8 md:h-8 md:rounded-md md:text-base lg:w-12 lg:h-12 lg:rounded-lg lg:text-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Yikes.
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;could be expressed as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.thing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;768px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.thing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.375rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1024px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.thing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.125rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"thing"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Yikes.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, there are pros and cons to each approach. The second example is much more expressive (especially if you don’t know Tailwind), but it’s a lot more code, and the styles are separate from the element they are affecting. The Tailwind code, on the other hand, is short and you don’t need to open another file to understand how it’s styled. You may find it cryptic, but after just a couple days of using it, you should be able to decipher it pretty easily.&lt;/p&gt;

&lt;p&gt;It’s worth noting that Tailwind classes are arranged horizontally, while the CSS is written vertically. The wider text is, the harder it is for a reader’s eyes to jump to the next line, and the harder it is to find the one particular word you’re looking for in a wall of horizontal text. That’s part of the reason why Tailwind classes are terse (in addition to typing speed and file size). Note that there are different ways to mitigate lines getting too long (enabling wrapping in your IDE, adding line breaks, using &lt;code&gt;@apply&lt;/code&gt; selectively, etc.), but it is a potential issue to be aware of.&lt;/p&gt;

&lt;p&gt;Again, this is a matter of preference. Tailwind might be for you, or it might not, but it’s hard to know without giving it a real try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-lose-a-lot-of-the-features-built-into-standard-css"&gt;
  &lt;/a&gt;
  You lose a lot of the features built into standard CSS
&lt;/h2&gt;

&lt;p&gt;...if you insist on not using &lt;em&gt;any&lt;/em&gt; custom CSS. But realistically, most Tailwind projects have &lt;em&gt;some&lt;/em&gt; custom CSS, which is totally fine – Tailwind itself is a PostCSS plugin, meaning it runs on CSS source files, not instead of.&lt;/p&gt;

&lt;p&gt;So if you want some specific styling rules, for instance to add some margin between &lt;code&gt;p&lt;/code&gt; tags inside a &lt;code&gt;description&lt;/code&gt; class, you’ll have to write custom CSS, though nothing prevents you from using &lt;code&gt;@apply&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.description&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;mt-4;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that there are also lots of &lt;a href="https://tailwindcss.com/docs/plugins"&gt;plugins&lt;/a&gt;, including some official ones such as &lt;a href="https://tailwindcss.com/docs/plugins#typography"&gt;Typography&lt;/a&gt; and &lt;a href="https://tailwindcss.com/docs/plugins#forms"&gt;Forms&lt;/a&gt;, for extending Tailwind’s core functionality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-solves-a-problem-that-you-may-not-have-encountered"&gt;
  &lt;/a&gt;
  It solves a problem that you may not have encountered
&lt;/h2&gt;

&lt;p&gt;We’re all different. We work on different projects, have different methodologies, use different tools. One tool cannot claim to solve a problem that &lt;em&gt;everyone&lt;/em&gt; is having. The best it can do is exist for the people who are experiencing the specific problem it was built to solve, and provide great documentation and other resources to learn about how it can make your work, or your life, easier.&lt;/p&gt;

&lt;p&gt;Tailwind does just that. It’s not for everyone. If you’ve read Adam Wathan’s &lt;em&gt;CSS Utility Classes and "Separation of Concerns"&lt;/em&gt; article and couldn’t relate, I’m happy to tell you that Tailwind is probably not for you. If you love writing custom CSS, or need to apply different stylesheets to the same HTML to radically change how it looks, Tailwind is not for you. That’s OK! Go build great things with your favorite tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nothing-is-perfect"&gt;
  &lt;/a&gt;
  Nothing is perfect
&lt;/h2&gt;

&lt;p&gt;Something else will come along eventually, solving some of Tailwind’s problems, and maybe it will introduce new problems that we can’t even imagine. Maybe it will be a core web technology, who knows. But in the meantime, if you decide that Tailwind is for you or your team, it’s going to provide a great developer experience with some of the best documentation I’ve ever seen in an open source project, your CSS is going to be as small as ever, and after a while, you might just wonder how you ever did CSS any other way.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Responsive Admin Panel or Dashboard - Flutter UI</title>
      <author>Meow404</author>
      <pubDate>Sat, 08 May 2021 19:55:04 +0000</pubDate>
      <link>https://dev.to/penucuricode/responsive-admin-panel-or-dashboard-flutter-ui-2pl9</link>
      <guid>https://dev.to/penucuricode/responsive-admin-panel-or-dashboard-flutter-ui-2pl9</guid>
      <description>&lt;p&gt;Live Preview : &lt;a href="https://abuanwar072.github.io/Flutter-Responsive-Admin-Panel-or-Dashboard/#/"&gt;https://abuanwar072.github.io/Flutter-Responsive-Admin-Panel-or-Dashboard/#/&lt;/a&gt;&lt;br&gt;
Packages we are using:&lt;/p&gt;

&lt;p&gt;flutter_svg: &lt;a href="https://pub.dev/packages/flutter_svg"&gt;https://pub.dev/packages/flutter_svg&lt;/a&gt;&lt;br&gt;
google_fonts: &lt;a href="https://pub.dev/packages/google_fonts"&gt;https://pub.dev/packages/google_fonts&lt;/a&gt;&lt;br&gt;
provider: &lt;a href="https://pub.dev/packages/provider"&gt;https://pub.dev/packages/provider&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fonts&lt;br&gt;
Poppins: &lt;a href="https://fonts.google.com/specimen/Poppins"&gt;https://fonts.google.com/specimen/Poppins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Flutter V2.* web officially supported on a stable branch. Today I share an Admin panel or you can call it dashboard UI build with flutter. Now you can build your app dashboard using flutter. This dashboard contains almost everything that you need like a chart, table, nice small card for showing info. It works perfectly on the Web, macOS app, Tablet also on both Android and iOS phones. It's time to code once run everywhere. Yeah, Flutter web is not SEO friendly but we don't need SEO for the admin panel.&lt;/p&gt;

</description>
      <category>html</category>
      <category>ruby</category>
      <category>dart</category>
      <category>swift</category>
    </item>
    <item>
      <title>Zero to Kubernetes in 5 Mins</title>
      <author>Ahmed Nader Mohamed</author>
      <pubDate>Sat, 08 May 2021 19:43:44 +0000</pubDate>
      <link>https://dev.to/ahmednader10/zero-to-kubernetes-in-5-mins-2hbp</link>
      <guid>https://dev.to/ahmednader10/zero-to-kubernetes-in-5-mins-2hbp</guid>
      <description>&lt;p&gt;Kubernetes(k8s) has become the de facto standard for not only container orchestration but also for cloud-native development. Being the flagship product for CNCF (Cloud Native Computing Foundation), Kubernetes has managed to establish an ecosystem of opensource projects around it, from service mesh to monitoring, observability, storage, policy driven controls and many more. It is remarkable how fast k8s matured and became enterprise ready with impressive &lt;a href="https://kubernetes.io/case-studies/"&gt;success stories&lt;/a&gt;.&lt;br&gt;
VMware &lt;a href="https://medium.com/better-programming/kubernetes-in-layman-terms-d9c307d2ef1d"&gt;calls&lt;/a&gt; Kubernetes “the new Java”, after the programming language invented in 1996 and used in just about everything today. That is how big and pervasive they think this technology will become.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l07bMT-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89z8zk5gny7w7gza2cel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l07bMT-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89z8zk5gny7w7gza2cel.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everyone-is-talking-about-kubernetes-but-what-the-heck-it-really-is"&gt;
  &lt;/a&gt;
  Everyone is talking about Kubernetes, but what the heck it really is?
&lt;/h2&gt;

&lt;p&gt;Kubernetes is a containers deployment and orchestration platform. It helps you deploy, monitor, scale, upgrade, rollback containers and many more seamlessly.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#but-why-would-i-need-an-extra-software-to-manage-my-containers"&gt;
  &lt;/a&gt;
  But why would I need an extra software to manage my containers?
&lt;/h4&gt;

&lt;p&gt;With the rise of microservices architecture, more and more organizations move to adopt it heavily, ending in many cases with hundreds and in some cases thousands of microservices in a single project. Each microservice of these would most probably be wrapped in a container on its own. Imagine having to manage hundred containers manually. Imagine having to deploy, upgrade, monitor and scale all of these containers. You probably got a sense by now how difficult/impossible it is to handle these operations using only a containerization platform like docker. A layer on top of docker is indeed needed to orchestrate and manage the containers, this layer is Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://enterprisersproject.com/article/2017/10/how-explain-kubernetes-plain-english"&gt;Here&lt;/a&gt; is an analogy to help you have a better understanding: You can think of a container orchestrator (like Kubernetes ) as a conductor for an orchestra, says Dave Egts, chief technologist, North America Public Sector, &lt;a href="https://www.redhat.com/en?intcmp=701f2000000tjyaAAA"&gt;Red Hat&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“In the same way a conductor would say how many trumpets are needed, which ones play first trumpet, and how loud each should play, a container orchestrator would say how many web server front end containers are needed, what they serve, and how many resources are to be dedicated to each one.” Egts explains&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJQAFgj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjlm9jwe4e6ul0et6ayd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJQAFgj5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjlm9jwe4e6ul0et6ayd.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#k8s-in-practice"&gt;
  &lt;/a&gt;
  K8s in practice
&lt;/h2&gt;

&lt;p&gt;Now that we have a good understanding of what Kubernetes is, let’s see it in practice.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#in-this-tutorial-we-will"&gt;
  &lt;/a&gt;
  In this tutorial, we will:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple http server with &lt;a href="https://golang.org/"&gt;golang&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Deploy a k8s cluster, we will use &lt;a href="https://k3s.io/"&gt;K3s&lt;/a&gt; (a lightweight Kubernetes distribution)&lt;/li&gt;
&lt;li&gt;Deploy the golang server on top of K8s&lt;/li&gt;
&lt;li&gt;Expose the server to the outer world to be able to access it over the internet.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Linux based machine (Ubuntu or Centos)- For Windows you can use &lt;a href="https://minikube.sigs.k8s.io/docs/start/"&gt;MiniKube&lt;/a&gt; or &lt;a href="https://kind.sigs.k8s.io/docs/user/quick-start/"&gt;Kind&lt;/a&gt; instead of K3s and almost everything else should remain the same.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Golang (this tutorial assumes version 1.15.3 but older versions should work as well)&lt;/li&gt;
&lt;li&gt;A docker registry account (you can create an account for free on &lt;a href="https://hub.docker.com/"&gt;dockerhub&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let’s get our hands dirty!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install golang following the steps mentioned &lt;a href="https://golang.org/doc/install"&gt;here&lt;/a&gt;. Then create a folder in any location of your choice. In this tutorial I will be using the following path as the root folder to my project &lt;code&gt;/root/tutorial/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a simple http go server. Use the following code block and save it in &lt;code&gt;/root/tutorial&lt;/code&gt; under any name. I will refer to it as &lt;code&gt;server.go&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
"fmt"
"log"
"net/http"
)

func helloHandler(w http.ResponseWriter, r *http.Request) {
    if r.URL.Path != "/hello" {
        http.Error(w, "404 not found.", http.StatusNotFound)
        return
    }
    if r.Method != "GET" {
        http.Error(w, "Method is not supported.", http.StatusNotFound)
        return
    }
    fmt.Fprintf(w, "Hello!")
}

func main() {
    http.HandleFunc("/hello", helloHandler) // Update this line of code
    fmt.Printf("Starting server at port 8080\n")
    if err := http.ListenAndServe(":8080", nil); err != nil {
        log.Fatal(err)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Make sure everything is setup correctly and the files runs correctly by running the following command &lt;code&gt;$ go run server.go&lt;/code&gt; You should be able to see &lt;strong&gt;“Starting server at port 8080”&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Next step is to build our go project into an executable. Run the following command at the root directory of the project(where server.go occurs)
&lt;code&gt;$ GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build .&lt;/code&gt; You should be able to see a newly created file with no extension.&lt;/li&gt;
&lt;li&gt;To complete the next steps we’ll need to create a &lt;a href="http://dockerhub.com/"&gt;dockerhub&lt;/a&gt; account. You can signup on it for free. We will need an account on dockerhub on any registry to push the docker image that we will create.&lt;/li&gt;
&lt;li&gt;Then we need to containerize our server to run it inside a container. First we will need to install docker. After installing docker successfully, we can then build a docker image for our server. To do that, copy the following code block into a file named &lt;code&gt;Dockerfile&lt;/code&gt; inside &lt;code&gt;/root/tutorial&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM alpine

WORKDIR /home/

ADD tutorial /home/

CMD ./tutorial
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Afterwards run the following command&lt;br&gt;
&lt;code&gt;$ docker build . -t &amp;lt;dockerhub-username&amp;gt;/tutorial&lt;/code&gt; where you should replace &lt;code&gt;&amp;lt;dockerhub-username&amp;gt;&lt;/code&gt; with your username on dockerhub.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login using docker cli command &lt;code&gt;$ docker login -u &amp;lt;dockerhub-username&amp;gt;&lt;/code&gt; Then push the created image to dockerhub &lt;code&gt;$ docker push &amp;lt;dockerhub-username&amp;gt;/tutorial&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Now that our docker image is ready, we can use K8s to deploy and manage for us container(s) from that image. To do that, let’s install &lt;a href="https://k3s.io/"&gt;K3s&lt;/a&gt; first. I am using K3s for this tutorial as I find it a great reliable and lightweight distribution for K8s, perfect for development and edge (environments with limited resources) deployments. To install it you just need to run &lt;code&gt;$ curl -sfL https://get.k3s.io | sh -&lt;/code&gt; That’s it! That is all what you need to do in order to have a functional Kubernetes cluster.&lt;/li&gt;
&lt;li&gt;Next we want to create a k8s deployment file for our image. Copy and paste the following code block on your machine.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-server-deployment
  labels:
    app: go-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-server
  template:
    metadata:
      labels:
        app: go-server
    spec:
      containers: 
      - name: go-server
        image: &amp;lt;dockerhub-username&amp;gt;/tutorial #replace the variable with your username on dockerhub
        ports:
        - containerPort: 8080 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now we want to instruct k8s to create that deployment for us. To do that we need to run &lt;code&gt;$ kubectl create -f tutorial-deployment.yaml&lt;/code&gt; To validate the deployment was created successfully, we should run &lt;code&gt;$ kubectl get pods&lt;/code&gt; and we should be able to see something similar to
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME                        READY   STATUS    RESTARTS   AGE
go-server-deployment-xxxx   1/1     Running   0          65m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We are almost there, we have everything set by now and K8s is currently managing our container for us. The only missing step is to expose our pod to the outer world in order to be able to access it over the internet. To achieve that we just need to run the following command
&lt;code&gt;$ kubectl expose deployment go-server-deployment --type=NodePort&lt;/code&gt;
This command will expose our deployment to the outer world on a random port. To identify that random port, we need to run &lt;code&gt;$ kubectl get svc&lt;/code&gt; we should be able to see a service that got created for us
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)     AGE
kubernetes  ClusterIP     x.x.x.x       &amp;lt;none&amp;gt;      443/TCP      87m
go-xxx       NodePort     x.x.x.x       &amp;lt;none&amp;gt;    8080:31628/TCP 37m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Under PORT(s) column we should be able to find &lt;code&gt;8080:&amp;lt;external-random-port&amp;gt;&lt;/code&gt; We can then use our machine IP and that external port that k8s assigned for our service in order to access our server. This can be tested from any browser by visiting &lt;code&gt;http://&amp;lt;machine-ip&amp;gt;:&amp;lt;external-port&amp;gt;/hello&lt;/code&gt; We should be able to see &lt;code&gt;Hello!&lt;/code&gt; in the browser.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IVQPcRhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/515dbi4qufk5lyc8z5pz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IVQPcRhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/515dbi4qufk5lyc8z5pz.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s all folks 🎉&lt;/p&gt;

&lt;p&gt;A quick recap of what we have accomplished here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implemented a simple http server using golang&lt;/li&gt;
&lt;li&gt;Dockerized our server and pushed the image on Dockerhub&lt;/li&gt;
&lt;li&gt;Installed and Deployed a functional single node k8s cluster&lt;/li&gt;
&lt;li&gt;Used k8s to deploy and manage the http server container for us&lt;/li&gt;
&lt;li&gt;Exposed our server to the outer world through k8s&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Disclaimer: all code files used are not meant for production use, they just show the functionality. You will need to introduce some changes to make them production ready&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>kubernetes</category>
      <category>cloudnative</category>
      <category>go</category>
      <category>docker</category>
    </item>
    <item>
      <title>How To Use Web Worker</title>
      <author>Bibek</author>
      <pubDate>Sat, 08 May 2021 19:41:58 +0000</pubDate>
      <link>https://dev.to/bibekkakati/how-to-use-web-worker-27gi</link>
      <guid>https://dev.to/bibekkakati/how-to-use-web-worker-27gi</guid>
      <description>&lt;p&gt;Hello everyone👋&lt;/p&gt;

&lt;p&gt;In this article, we will see how can we use Web Worker API on our website to avoid blocking thread while doing CPU intensive task.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-worker"&gt;
  &lt;/a&gt;
  Web Worker
&lt;/h3&gt;

&lt;p&gt;A web worker is a JavaScript that runs in the background, independently of other scripts, without affecting the performance of the page.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-does-that-mean"&gt;
  &lt;/a&gt;
  What does that mean?
&lt;/h4&gt;

&lt;p&gt;As we all know, JavaScript is a single-threaded language so when executing scripts the site becomes unresponsive until the scripts are finished. &lt;/p&gt;

&lt;p&gt;To avoid blocking the interaction of the site we can spawn a worker that will execute the scripts in the background. Thus, we can improve the performance of our website.&lt;/p&gt;

&lt;p&gt;Web Workers uses a background thread separate from the main execution thread of a web application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;Let's explore the Web Worker API.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#check-for-browser-support"&gt;
  &lt;/a&gt;
  Check For Browser Support
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// It support&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will understand the implementation with a basic example. The parent script will pass a number to the worker script and it will calculate the square root of that number and return to the parent script.&lt;/p&gt;

&lt;p&gt;Worker object and worker script have some event listeners with the help of which we can communicate and handle errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6JEqVkR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0cs1dlgfoisdlx6znjk1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6JEqVkR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0cs1dlgfoisdlx6znjk1.jpg" alt="web-workers.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parent-script"&gt;
  &lt;/a&gt;
  Parent Script
&lt;/h3&gt;

&lt;p&gt;This javascript file will be running in the main thread.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-worker"&gt;
  &lt;/a&gt;
  Create Worker
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Creates a new worker object&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#receive-data"&gt;
  &lt;/a&gt;
  Receive Data
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Listen for data from the worker script&lt;/span&gt;
&lt;span class="nx"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Access the data from event object&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#on-error"&gt;
  &lt;/a&gt;
  On Error
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Listen for error&lt;/span&gt;
&lt;span class="nx"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onerror&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Access the message from error object&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#send-data"&gt;
  &lt;/a&gt;
  Send Data
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Send data to the worker script&lt;/span&gt;
&lt;span class="nx"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#terminate-worker"&gt;
  &lt;/a&gt;
  Terminate Worker
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Immediately terminates the worker&lt;/span&gt;
&lt;span class="nx"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;terminate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#worker-script"&gt;
  &lt;/a&gt;
  Worker Script
&lt;/h3&gt;

&lt;p&gt;Now we will create the javascript file &lt;code&gt;worker.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Listen for data from the parent script&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Access the data from event object&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Sending data to the parent script&lt;/span&gt;
  &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// It fires when message can't be deserialized&lt;/span&gt;
&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessageerror&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#web-worker-access"&gt;
  &lt;/a&gt;
  Web Worker Access
&lt;/h3&gt;

&lt;p&gt;Web Workers do not have access to the following JavaScript objects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;window&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Web Workers are used for more CPU intensive or heavy task like encryption, compression, long-polling etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example✨
&lt;/h3&gt;

&lt;p&gt;Check out the &lt;a href="https://github.com/bibekkakati/blogs-projects/tree/main/web/web-worker-api"&gt;GitHub repo&lt;/a&gt; for sample code.&lt;/p&gt;

&lt;p&gt;Try it out &lt;a href="https://bibekkakati.github.io/blogs-projects/web/web-worker-api/index.html"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Enjoyed? Give it a thumbs-up 👍&lt;/p&gt;

&lt;p&gt;Thank you for reading | Feel free to &lt;a href="https://bibekkakati.me"&gt;connect&lt;/a&gt; 👋&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://blog.bibekkakati.me/how-to-use-web-worker"&gt;blog.bibekkakati.me&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pOmeWpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbibekkakati%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>webperf</category>
    </item>
    <item>
      <title>How to think in Next.js - Learn the Mental Model</title>
      <author>Poovamraj T T</author>
      <pubDate>Sat, 08 May 2021 19:10:48 +0000</pubDate>
      <link>https://dev.to/poovamraj/how-to-think-in-next-js-learn-the-mental-model-15gg</link>
      <guid>https://dev.to/poovamraj/how-to-think-in-next-js-learn-the-mental-model-15gg</guid>
      <description>&lt;p&gt;The most important thing when learning a new framework, especially ones which have a new way of doing things is to understand how to think (or design) solutions to a problem. &lt;/p&gt;

&lt;p&gt;Next.js claims the major issue it fixes on top of React.js is "Pre Rendering"&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Pre Rendering&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Historically frameworks like JSP used to render the HTML content of the page on the server-side and send the rendered HTML page to the browser. This is in contrast to the approach used in modern frameworks like React.js where the web page first loads the JS and then it renders all the required HTML elements on the client (read it as the browser) side&lt;/p&gt;

&lt;p&gt;The concept of Client-side rendering works well as it completely separates the backend and frontend. But there are certain issues that can arise from client-side rendering.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Search Engines tend to parse the HTML file and index it. This scraping process is not optimized for sites that do client-side rendering.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you are rendering on the client end, whenever an API call is made, the request has to travel all the way from the client who can be in the US to the server which can reside in JAPAN. This can severely slow down the performance. Instead, if we are rendering on the server end, most of the data can be fetched easily as the rendering can happen at the same place as the server.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you do not have the above 2 use-cases, you can simply use the traditional client-side rendering application. At least, that's what I am doing.&lt;/p&gt;

&lt;p&gt;This concept is generally called &lt;strong&gt;Server-Side Rendering (SSR)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But Next.js tends to use the word "Pre Rendering". This is to distinguish the two major use cases the framework is used for&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Static Rendering&lt;/li&gt;
&lt;li&gt;Server-Side Rendering&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Static Rendering&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When the HTML code is generated as soon as we run the build, This is called static rendering.&lt;/p&gt;

&lt;p&gt;Static rendering is useful for Homepages or Blogs where the content of the page doesn't change often (For example - each reload won't have different data like a stock market site).&lt;/p&gt;

&lt;p&gt;We can write a "Page" by exporting a JSX component under the pages folder.&lt;/p&gt;

&lt;p&gt;For example - writing a js file named 'hello.js' that exports a JSX component under the pages folder will give us a &lt;/p&gt;

&lt;p&gt;&lt;code&gt;localhost:3000/hello&lt;/code&gt; page &lt;/p&gt;

&lt;p&gt;Creating a new folder will add it as a path.&lt;/p&gt;

&lt;p&gt;For example - creating a folder named 'blog' under pages folder with a js file named hello that returns a JSX component provides us with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;localhost:3000/blog/hello&lt;/code&gt; page&lt;/p&gt;

&lt;p&gt;It is as simple as writing an HTML file under a webserver and accessing it using its path.&lt;/p&gt;

&lt;p&gt;Next.js also provides a feature where the static pages can be rendered dynamically. Let me explain a use case&lt;/p&gt;

&lt;p&gt;Let's say you write blogs that are maintained in a Database (actually they are usually maintained in a component called Headless CMS, but for simplicity, let's say a database)&lt;/p&gt;

&lt;p&gt;If you want to fetch the content from that database instead of writing the content of the blog directly on the JS file. You can use the method &lt;code&gt;getStaticProps&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will fetch us the content of the blog "WHILE BUILDING THE PROJECT" and pre-render the HTML pages for us&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server-Side Rendering&lt;/strong&gt;&lt;br&gt;
The HTML code is generated only when the request hits our server for Server-Side Rendering. &lt;/p&gt;

&lt;p&gt;This is useful for use cases like Forum or Saas applications That has the potential to change for each request.&lt;/p&gt;

&lt;p&gt;The pages (or routing) concept is similar to static rendering. Any js file returning a JSX component inside the pages folder is a separate page (or route)&lt;/p&gt;

&lt;p&gt;Each time this route is called on the browser, the Next.js framework tends to render the page and provide a full HTML page as a response.&lt;/p&gt;

&lt;p&gt;Any data that needs to be fetched from the backend for rendering this page can be returned using getServerSideProps.&lt;/p&gt;

&lt;p&gt;For example - A table with all the stock prices can be rendered each time when a request is made. The required data to fill the stock price can be fetched inside getServerSideProps. Since the rendering can happen at the same location as the backend, the round trip time to make this request will be very very less.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Routing&lt;/strong&gt;&lt;br&gt;
There can be a use case where all the routes will not be known to us. For example - In the previous blog example I mentioned where the content can be fetched from the DB, Imagine what will happen when a new blog is added to the DB.&lt;/p&gt;

&lt;p&gt;We cannot be writing a new page each time a new blog is written right? (i.e) The routes that can be reached can change dynamically based on a different source of data rather than the JS files we created.&lt;/p&gt;

&lt;p&gt;For this, we have the concept of Dynamic Rendering. Any file under the pages folder with the name wrapped with brackets like [].js can have a method called &lt;code&gt;getStaticPaths&lt;/code&gt; which can be used to return all the possible paths. These paths can also be rendered for each request using an option called &lt;code&gt;blocking&lt;/code&gt; which needs to be set in the return value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Understanding the mental model of a framework easily helps us solve problems using that framework. While first learning React we all would have faced the issue of understanding the uses of a "state" and a "prop" while now it can be written without a second thought. In a similar way, to learn Next.js, the first thing to learn would be the uses of &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;getStaticProps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getServerSideProps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getStaticPaths&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next.js provides a lot more great features like &lt;code&gt;&amp;lt;Link/&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;Image/&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;Head/&amp;gt;&lt;/code&gt;. But once the above differences and uses are understood, the rest should be a walk in the park!&lt;/p&gt;

&lt;p&gt;I would love to discuss this topic and learn more if you have something to share! &lt;/p&gt;

&lt;p&gt;You can find me on Twitter at - &lt;a href="https://twitter.com/poovamraj"&gt;https://twitter.com/poovamraj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tools and Skills to be the Bug Bounty Hunting.</title>
      <author>vishwasnarayanre</author>
      <pubDate>Sat, 08 May 2021 19:09:16 +0000</pubDate>
      <link>https://dev.to/vishwasnarayan5/tools-and-skills-to-be-the-bug-bounty-hunting-55e9</link>
      <guid>https://dev.to/vishwasnarayan5/tools-and-skills-to-be-the-bug-bounty-hunting-55e9</guid>
      <description>&lt;p&gt;Bug bounties are a perfect way to obtain cybersecurity expertise while still earning some extra cash. I strongly believe that engaging in bug bounties is an excellent way to get into the cybersecurity industry.&lt;br&gt;
People have been wondering about the next move since I published “How to Get Into Bug Bounties”: how do I find the first bug? What are some of the qualities I'll need to do that?&lt;/p&gt;

&lt;p&gt;The bug bounty scheme, commonly known as the vulnerability rewards programme (VRP), is a crowd-sourced platform that helps businesses to compensate individual hackers for their efforts in finding bugs in their applications.The bug bounty policy should be integrated into an organization's processes to help with compliance audits and risk reviews, complementing the overall information security approach.Nowadays, a range of tech and device providers have developed their own bug bounty schemes, in which hackers who discover bugs in their programmes are rewarded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Commands to keep your Linux Environment Secure:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To install the updates automatically you can use the command &lt;br&gt;
&lt;code&gt;apt install unattended-upgrades&lt;/code&gt; and then when we want to install the updates on to the linux kernel you need to run a command that is &lt;/p&gt;

&lt;p&gt;&lt;code&gt;dpkg-reconfigure --priority=low unattended-upgrades&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;then afterwards a old game like window will be made available thus you have to just go and enter the yes command and you are ready to get the new updates. This is just some basic guide for you to become a bug bounty hunter that is you should be up to date when are working, then complete this article with all the tools that I have mentioned here and also read some about the techniques as you will get an idea about what is really required for the industry.&lt;/p&gt;

&lt;p&gt;Never set a time or a date to study cybersecure if you delay it even by some days you might lag thus what you have to do is you need to learn to learn when you have decided to learn.&lt;strong&gt;SELF STUDY IS THE BEST OPTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So as you are starting just start by reading about &lt;a href="https://owasp.org/www-project-top-ten/"&gt;OWASP10&lt;/a&gt; and then about OWASP dvwa,dvsa and many more this will give you a basic idea about the tools that you need to study and this article becomes even more clear to learn about and also you will learn a lot about the Bug bounty hunting.&lt;/p&gt;

&lt;p&gt;Let's take a look at the qualities you'll need to excel at bug bounties and what you'll need to do to get started as a hacker!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#choosing-the-platform-that-you-want-to-evolve-as-hunter-are-you-a-web-hacker-or-a-mobile-hacker"&gt;
  &lt;/a&gt;
  Choosing the platform that you want to evolve as hunter. Are you a web hacker or a mobile hacker?
&lt;/h1&gt;

&lt;p&gt;Other types of bug bounty programmes exist, but smartphone and network hacking capabilities are the most useful for most bug bounty programmes.&lt;br&gt;
Are you a mobile hacker or a web hacker? There are other kinds of bug bounty programs, but mobile and web hacking skills would be the most useful for most bug bounty programs.&lt;/p&gt;

&lt;p&gt;Learning about online hacking is perhaps the most straightforward way to get started with bug bounties.&lt;br&gt;
The vast majority of bug bounty services on websites are web-based. And the majority of organizations that host bug bounty services have a website that they want checked. - &lt;code&gt;which makes you good for web hacking&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As a result, learning about online hacking will be the fastest way to get started hacking and will have a decent return on investment for your time.&lt;/p&gt;

&lt;p&gt;Hacking of mobile devices ,Mobile hacking, on the other hand, has a few more requirements and takes longer to get started.&lt;br&gt;
However, because of the higher barrier to entry, smartphone programmes are less crowded and pay more. And, although mobile programmes are not as popular as web programmes, they are becoming more common as more businesses introduce complicated mobile devices! -&lt;code&gt;this makes you a mobile hacker&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Must know Skills&lt;/strong&gt;- Prerequisite Qualifications &lt;/p&gt;

&lt;p&gt;First, regardless of whether you go the web or tablet path, you would need the following skills.&lt;br&gt;
Learn how to use a proxy server.&lt;br&gt;
One of the most valuable skills to learn before you begin hacking is how to use a proxy. A proxy is a server programme that serves as a go-between for your browser and the server of the target application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-a-proxy-is-critical-since-proxies-allow-you-to"&gt;
  &lt;/a&gt;
  Using a proxy is critical since proxies allow you to:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Perform recon by inspecting and analyzing traffic to and from the server.&lt;/li&gt;
&lt;li&gt;Examine interesting requests for potential bugs.&lt;/li&gt;
&lt;li&gt;Exploit them by tampering with requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Burp Suite, Zed Attack Proxy (ZAP), and Tamper Data are three proxies that are especially common with bug bounty hunters. Burp Suite has the most features, while ZAP is a free option to Burp. Tamper data is a plugin extension that only allows you to edit HTTP headers and POST request parameters.&lt;/p&gt;

&lt;p&gt;Each proxy's website contains instructions about how to use it. Keep in mind that before you can decrypt any traffic, you must first follow the guidelines for configuring your browser to work with the proxy.&lt;/p&gt;

&lt;p&gt;The fundamentals of web technology&lt;br&gt;
Understanding how network technology work is also important. Here are few terms to familiarize yourself with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The HTTP protocols &lt;/li&gt;
&lt;li&gt;HTTP status codes, headers and network security fundamentals, various encoding methods such as hex, base64, and ASCII&lt;/li&gt;
&lt;li&gt;Cryptography fundamentals&lt;/li&gt;
&lt;li&gt;Same-Origin Policy (SOP), and Cross-Origin Resource Sharing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reading up on these topics will provide you with a broad understanding of how the Internet operates and how it is protected. This will provide you with a stable basis upon which to develop.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#problems-with-session-scheduling"&gt;
  &lt;/a&gt;
  Problems with session scheduling
&lt;/h4&gt;

&lt;p&gt;It is also important to understand how current web systems handle session control. For eg, what are the various methods of defining a user? What exactly are cookies, and how do they function? Authentication headers are what they sound like. How are session IDs created, reused, and destroyed?&lt;/p&gt;

&lt;p&gt;Now that you have a firm grasp on web technologies and how they work, it's time to learn about different vulnerability forms and how to detect them!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cross-Site Scripting (XSS)&lt;/strong&gt; is the most popular and simplest to detect bug type.XSS can be classified into three types: stored XSS, mirrored XSS, and DOM XSS.&lt;br&gt;
XSS helps attackers to insert custom scripts (Javascript, VBScript, and others) into pages that other users see. These scripts are used to intercept data and circumvent access restrictions.&lt;/p&gt;

&lt;p&gt;While new XSS vectors are often found by hand, fuzzing is a good way to test a site for already existing XSS vectors:&lt;/p&gt;

&lt;p&gt;Open redirects are often ignored as minor flaws, but they are a component of many error chains that have a greater effect.&lt;br&gt;
Open redirects occur when an HTTP parameter or URL parameter contains a URL value and the web application redirects the request to the required URL.&lt;/p&gt;

&lt;p&gt;Open redirects, on their own, contribute to phishing. They will, however, be used to circumvent URL blacklists and whitelists. As a result, open redirects are often used to escalate an SSRF or to smuggle session tokens off-site.&lt;/p&gt;

&lt;p&gt;Direct Object References That Aren't Protected (IDOR)&lt;br&gt;
IDORs are yet another kind of bug that can be found in virtually every web application.&lt;br&gt;
When access control is not correctly enforced and references to data structures (such as a file or a database entry) are predictable, IDORs occur. Because of the possibility for sensitive data leakage, they also contribute to extremely critical vulnerabilities.&lt;/p&gt;

&lt;p&gt;Cross-Site Request Forgery, or CSRF, is a tactic that enables hackers to do unauthorised acts on behalf of a victim. When sites do not enforce random CSRF tokens for any state-changing request, they cause CSRFs to occur.&lt;br&gt;
The effect of CSRF is highly dependent on the intervention that the request initiates. CSRFs will also lead to crucial bugs and even account takeover.Other times, CSRFs are insignificant flaws that need not be reported. As in every other flaw analysis, please weigh the market effect of the bug before drafting the report!&lt;/p&gt;

&lt;p&gt;SSRF is a flaw that occurs when an attacker is able to submit requests on a server's behalf. It enables attackers to "forge" the insecure server's request signatures, granting them privileged access to a network, bypassing firewall locks, and obtaining access to internal resources.&lt;br&gt;
The effect of SSRFs may also vary. However, if you know how to chain it, it has a lot of promise.However, if you know how to chain it and intensify it, it has a lot of promise! Minor SSRFs can result in data leakage and internal network scanning. However, when combined with other flaws such as poor access control and open redirects, SSRF will result in the leak of sensitive data and even code execution on reachable machines!&lt;/p&gt;

&lt;p&gt;SQL injection is a type of attack in which malicious SQL commands are injected into an executed SQL expression. When user feedback is wrongly filtered and escaped, this occurs. They will result in the leak of confidential data and the execution of commands.SQL injections are less popular nowadays since most web interfaces have built-in mechanisms to guard against them. However, if you do find one, they are usually critical flaws with large payouts.&lt;/p&gt;

&lt;p&gt;Insecure deserialization is a vulnerability that occurs when an attacker may exploit the serialised object and trigger unexpected effects in the program's flow. This can result in denial of service, authentication bypass, or even RCE.&lt;br&gt;
When web applications grow more sophisticated, deserialization problems become more popular.&lt;/p&gt;

&lt;p&gt;Clickjacking, also known as UI redressing, is an attack that deceives a user into clicking on something other than what the user expects. It is accomplished by concealing the victim programme behind another page using HTML page overlay techniques. It is used to get around CSRF security.&lt;/p&gt;

&lt;p&gt;When an attacker is able to run arbitrary code on a target computer, this is referred to as remote code execution. There is no particular method for accomplishing this, although it is commonly accomplished by leveraging vulnerabilities such as unstable file upload, remote file inclusion, server-side template injection (SSTI), or unsafe deserialization.&lt;/p&gt;

&lt;p&gt;Creating vulnerabilities that lead to RCE often necessitates a more in-depth technological understanding of an application. So, after you've mastered discovering the simplest vulnerabilities, there is something to strive for.&lt;/p&gt;

&lt;p&gt;When developing a proof of concept for RCEs, exercise caution since it is possible to overstep the limits of the bounty policies and inflict unintentional harm to the targeted platform. Reading a non-sensitive file or generating your own file under a random direction is often sufficient to demonstrate your results!&lt;/p&gt;

&lt;p&gt;A race condition attack, also known as a Time of Check/Time of Use attack, occurs when a server is required to execute commands that are meant to be executed sequentially at the same time.&lt;br&gt;
This attack takes advantage of the fact that security checks must be performed prior to performing the critical activity in order for them to be successful. For example, suppose you want to withdraw $2000 from your bank account but only have $1000 saved. Normally, the bank will not allow you to borrow funds that you did not have.&lt;/p&gt;

&lt;p&gt;However, if you can get the bank to lend you money before checking to see if you have enough cash, you can withdraw money that you don't have.&lt;/p&gt;

&lt;p&gt;Race environments have the greatest effect on financial, trading, and e-commerce websites.&lt;/p&gt;

&lt;p&gt;You should also be aware of other failed access control problems that are typical in mobile applications. For instance, how do attackers manipulate cookies? What are the most popular locations for information leaks? What are the URLs and directions that always lead to secret developer panels?&lt;/p&gt;

&lt;p&gt;The more you learn about web application design and creation, the better you will be at finding these flaws.&lt;/p&gt;

&lt;p&gt;Mobile phone hacking is somewhat close to desktop application hacking. However, there are few additional skills you can master before hacking smartphone devices.&lt;/p&gt;

&lt;p&gt;First, you'll need to find out how to configure your mobile computer to use a proxy. This usually entails downloading the proxy's certificate on your computer and changing your proxy's settings.&lt;/p&gt;

&lt;p&gt;In order to intercept the traffic of better-protected users, it is often important to circumvent certificate pinning. If you have successfully configured your mobile computer to use a proxy but are still unable to see the traffic of your target programme, it is likely that the app has introduced certificate pinning.&lt;/p&gt;

&lt;p&gt;Certificate pinning, also known as SSL pinning or cert pinning, restricts an applicant to trusting only a pre-defined certificate. It is seen as an extra layer of defence against Man-in-the-Middle (MITM) attacks. If you wish to decrypt and decode an application's traffic that uses cert pinning, you must first bypass the cert pinning.&lt;/p&gt;

&lt;p&gt;The method for bypassing cert pinning can differ depending on the system you are using. There are three primary methods for accomplishing this in Android applications:&lt;br&gt;
Make use of a Frida Hook.&lt;br&gt;
Replace the pre-installed certificate with your custom certificate.&lt;br&gt;
Change or disable the certificate validation code for the programme.&lt;/p&gt;

&lt;p&gt;Mobile apps are an ideal way to look at additional web bugs that aren't present in their web framework counterpart. This is due to the fact that smartphone applications often use special API endpoints that might not be as well checked as web API endpoints. Look for IDORs, SQL injections, file upload flaws, and other common network security flaws.&lt;/p&gt;

&lt;p&gt;Using Burp Suite to intercept traffic coming out of the mobile app during sensitive actions is a good way to detect these vulnerabilities.&lt;/p&gt;

&lt;p&gt;In addition to standard web vulnerabilities, there are a few types of bugs unique to mobile apps that you should be aware of.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#hardcoded-credentials"&gt;
  &lt;/a&gt;
  Hardcoded credentials
&lt;/h1&gt;

&lt;p&gt;Mobile applications may contain hardcoded secrets or API keys for the application to access certain web services.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Insecure data storage: *&lt;/em&gt;&lt;br&gt;
Some applications will store sensitive data insecurely within the application’s source code. Look for things like session data, financial information, and personal information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Session administration&lt;/strong&gt;&lt;br&gt;
In mobile devices, session control is often achieved by the use of a session token transmitted by a header. As a result, an open redirect to a foreign server could lead to account takeover.&lt;br&gt;
Session management issues that plague web applications, such as insufficient session expiration and reusing session tokens, which also plague mobile apps.&lt;/p&gt;

&lt;p&gt;Some systems use custom implementations for encryption or hashing. Look for unstable algorithms, bad implementation of well-known algorithms, and hardcoded encryption keys.&lt;/p&gt;

&lt;p&gt;One of the most important bug bounty abilities is recon: the ability to discover new properties and attack surfaces. Good recon skills will help you stay ahead of the game and spot bugs before others.&lt;/p&gt;

&lt;p&gt;It is also beneficial to learn how to read JavaScript. Reading JavaScript can tell you a lot about how the programme works and can help you find bugs quickly. Many top hackers have said that their secret sauce is reading JavaScript in order to find hidden endpoints, insecure front-end logic, and hardcoded passwords. I've also discovered a huge amount of information leaks in JS source code.&lt;/p&gt;

&lt;p&gt;It's also a good idea to learn how to script and automate tasks. There are several routine activities that must be completed in bug bounties that can be quickly automated. You can simplify these functions and save a lot of time by learning a programming language like Python or Shell Scripting.&lt;/p&gt;

&lt;p&gt;Finally, after you've learned the fundamentals, never stop practicing! New types of exploits are continually being found, and keeping up to date with the latest methods would mean that you are not discovering new glitches.&lt;/p&gt;

&lt;p&gt;Marcus Hutchins, a computer security researcher, found an unintentional kill switch by registering a domain that the ransomware was coded to scan.The WannaCry ransomware attack was a global cyberattack in May 2017 carried out by the WannaCry ransomware cryptoworm, which encrypted data and demanded Bitcoin ransom payments from computers running the Microsoft Windows operating system. It spread through EternalBlue, an exploit created by the US National Security Agency (NSA) for older Windows systems.&lt;/p&gt;

&lt;p&gt;A community called The Shadow Brokers stole and leaked EternalBlue at least a year before the attack. Although Microsoft had recently released patches to close the exploit, much of WannaCry's spread came from companies who had not implemented these patches or were using outdated Windows programmes that had reached the end of their useful life.&lt;/p&gt;

&lt;p&gt;These fixes are critical to an organization's cyber-security, but often were not implemented due to the need for 24/7 service, the possibility of programmes that used to operate breaking, discomfort, or other factors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seyfarth Shaw Malware Attack&lt;/strong&gt; this is one of the largest attacks when consider. Seyfarth Shaw LLP, a major multinational law firm headquartered in Chicago, was the target of a “aggressive malware” assault. The company later announced that this was a ransomware attack. According to a corporate release, the malware attack occurred on October 10, 2020, and fully shut down the firm's email infrastructure.&lt;/p&gt;

&lt;p&gt;According to the firm's statement, there was no indication of improper entry or removal of client or firm records. However, all of the devices were discovered to be encrypted, prompting the company to shut down all of them as a precautionary step.&lt;/p&gt;

&lt;p&gt;This is a kind of attack that you need to case study. The multinational law firm alerted authorities, and the FBI has also begun an investigation. Aside from that, little detail was provided on how the attack happened or what kind of ransomware was used to attack the company.&lt;/p&gt;

&lt;p&gt;The ImageTragick flaw, for example, was discovered in 2016. ImageTragick is a critical flaw that could result in RCE. Bug bounty hunters were continuously finding insecure instances in the wild a few months to years after the detection. (As well as requiring banks to announce it to businesses!) So, as a hacker, it certainly helps to stay up to date on the latest security headlines!&lt;/p&gt;

&lt;p&gt;Eavesdropping happens when a hacker intercepts, deletes, or modifies data sent between two computers. To access data in transit between devices, eavesdropping, also known as sniffing or snooping, depends on unsecured network communications.&lt;/p&gt;

&lt;p&gt;These are some of the tragic attacks to consider when we are &lt;/p&gt;

&lt;p&gt;When you first start out, it is common to receive a large number of duplicates and informative. So don't be disheartened by them!&lt;br&gt;
Keep in mind the dupes and informative just say one thing: you were scientifically right! It's either that someone else discovered the flaw before you, or that the organization is unable to take the gamble at this moment.&lt;br&gt;
They are not dismissive of the caliber of your work. Even if you don't make money or have a job, and if you don't make money or a good name, you would have learned experience from the learning experience.&lt;br&gt;
Just keep walking, and you'll establish your own distinct technique and begin discovering rare, useful bugs!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#just-at-the-end-let-me-conclude-by-saying-what-you-need-to-study-and-learn"&gt;
  &lt;/a&gt;
  Just at the end let me conclude by saying what you need to study and learn.
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/DanMcInerney/xsscrapy"&gt;&lt;strong&gt;XSSScrappy&lt;/strong&gt;:&lt;/a&gt;
XSS/SQLi spider that is fast and detailed. If you give it a URL, it will check any connection it finds for cross-site scripting and SQL injection vulnerabilities. For further information on SQLi identification, see the FAQ.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maurosoria/dirsearch"&gt;&lt;strong&gt;dirsearch&lt;/strong&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF"&gt;&lt;strong&gt;MobiSRF&lt;/strong&gt;:&lt;/a&gt;Mobile Appliation testing)Mobile Security System (MobSF) is an integrated, all-in-one mobile device pen-testing, malware analysis, and vulnerability evaluation system capable of conducting static and dynamic analysis (Android/iOS/Windows). MobSF accepts mobile app binaries (APK, XAPK, IPA, and APPX) as well as zipped source code and offers REST APIs for seamless integration with your CI/CD or DevSecOps pipeline.You may use the Dynamic Analyzer to conduct runtime security assessments and immersive instrumented monitoring.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And some more list of the core tools like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FoxyProxy : FoxyProxy is a sophisticated proxy management application that entirely removes Firefox's meagre proxying capability. Please use FoxyProxy Basic for a simplified tool with less sophisticated configuration options.&lt;/li&gt;
&lt;li&gt;OWASP Zap Proxy: The OWASP ZAP scanner is a free and open-source web application security scanner. It is intended for use by both newcomers to device security and experienced penetration testers. It has been designated as a Flagship project and is one of the most active Open Web Application Security Project initiatives.&lt;/li&gt;
&lt;li&gt;PortSwigger Burp Suite : Disclaimer: Only use Burp on domains that you have permission to scan and attack. Using Burp Suite on domains you do not own can be illegal. Stay safe and use intentionally vulnerable applications for practice. This is also a kind fo proxy and you can learn about it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Builtwith or Wappalyzer&lt;/strong&gt; is a Firefox and/or Google Chrome plugin extension that reveals the technology used on websites. It recognizes &lt;code&gt;80&lt;/code&gt; common content management systems, site shops, web servers, JavaScript frameworks, analytics tools, and other applications. Restart the tab after installing the Addon. This is a very handy tool when you start and still is used by some of the advanced professional.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these tools are the default tools that we use when we are doing bug bounty and in the bounty forums you can also find in the description what your limitations are thus you have to stay within the rules and test and run it, if you find even some beyond it report it immediately and you will find the reward you will be given if not you will learn something new. &lt;/p&gt;

&lt;p&gt;And there many more but it's all that you need folks to start with the bug bounty hunting and later if you get well versed you can design your won tools and work with it.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>cybersecurity</category>
      <category>computerscience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>MOTIVATION DOESN'T MATTER</title>
      <author>Bode</author>
      <pubDate>Sat, 08 May 2021 18:57:15 +0000</pubDate>
      <link>https://dev.to/thewebguyy/motivation-doesn-t-matter-1ji0</link>
      <guid>https://dev.to/thewebguyy/motivation-doesn-t-matter-1ji0</guid>
      <description>&lt;p&gt;Have you ever said:&lt;br&gt;
"I don't have the time to code today"&lt;/p&gt;

&lt;p&gt;Let me tell you the truth, If you rely on motivation.. You will FAIL!!&lt;/p&gt;

&lt;p&gt;If you're relying on motivation to succeed as a developer you're not going to succeed at all.&lt;/p&gt;

&lt;p&gt;In order  to become a better programmer you need to implement coding into your lifestyle. That may require sacrificing those lounging breaks on the weekend.&lt;/p&gt;

&lt;p&gt;Those days where you lack motivation become wasted days that put you one step behind.&lt;/p&gt;

&lt;p&gt;If you truly want to learn how to code, you don't need motivation, You need a lifestyle change.&lt;/p&gt;

&lt;p&gt;Set a time during the day that you can dedicate towards coding.&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
