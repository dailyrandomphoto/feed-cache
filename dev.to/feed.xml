<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS Tutorial - Styling a CSS Form &amp; Adding a Shine üåü Effect [video]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 18 May 2021 12:47:03 +0000</pubDate>
      <link>https://dev.to/thenerdydev/css-tutorial-styling-a-css-form-adding-a-shine-effect-video-3jh0</link>
      <guid>https://dev.to/thenerdydev/css-tutorial-styling-a-css-form-adding-a-shine-effect-video-3jh0</guid>
      <description>&lt;p&gt;In this video, we will see how we can style a CSS form and then we will understand How to add Shine Effect to our form button using CSS Transitions&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HRuqCEZRV7c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you want to play with the code, check this out : &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/9q9j1"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - Make sure to subscribe to my YouTube Channel for FREE content on Web Development and loads of other technologies. &lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
üëâ Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>html</category>
    </item>
    <item>
      <title>Why I made my open source React component private by default: an Open Source story</title>
      <author>Ibrahim Cesar</author>
      <pubDate>Tue, 18 May 2021 12:22:44 +0000</pubDate>
      <link>https://dev.to/ibrahimcesar/why-i-made-my-open-source-react-component-private-by-default-an-open-source-story-1jja</link>
      <guid>https://dev.to/ibrahimcesar/why-i-made-my-open-source-react-component-private-by-default-an-open-source-story-1jja</guid>
      <description>&lt;p&gt;I‚Äôm a big fan of open source. Because, well, we all owe to this vast collection of code, libraries, frameworks and knowledge. Just like with arts and science, we stand on the shoulders of Giants. Inspired and iterations upon previous works, adding one more chain, keeping us together. And not just in the &lt;em&gt;figurative&lt;/em&gt; sense, but &lt;em&gt;literally&lt;/em&gt;, as xkcd pointed in the ‚ÄúIt‚Äôs funny cause is truth‚Äù, &lt;a href="https://xkcd.com/2347/"&gt;Dependency&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HlHkDKDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efwtn5lt8k8krxhcaz02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HlHkDKDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efwtn5lt8k8krxhcaz02.png" alt="Dependency"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ibrahimcesar.cloud/blog/10-livros-de-2020/"&gt;Last year, one of books&lt;/a&gt; I loved was &lt;a href="https://amzn.to/2JY2S1s"&gt;Working in Public&lt;/a&gt; from &lt;a href="https://twitter.com/nayafia"&gt;Nadia Eghbal&lt;/a&gt; whose subtitle, ‚ÄúThe Making and Maintenance of Open Source Software‚Äù makes clear about the themes in the book: the para-social relationship between maintainers and community, the different kinds of projects in a very helpful framework and the economics of produce and maintain high quality work &lt;em&gt;for free&lt;/em&gt; for almost all projects. If you scan for reviews quickly, you‚Äôll see someone ‚Äúcomplaining‚Äù is not technical or doesn‚Äôt help as a maintainer... I think they just misread the book and its purposes: explore a vast topic, where each actor has its own interest, that much of our infrastructure at production today depended on, and ... &lt;em&gt;works&lt;/em&gt;. These &lt;a href="https://squidarth.com/books/2020/08/18/working-in-public.html"&gt;notes from Sid Shanker helps to summarize it&lt;/a&gt; or a more &lt;a href="https://www.techbookofthemonth.com/books/oct20"&gt;in-depth guide here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KkZ41r4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9r6mnu31usfw39occof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KkZ41r4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9r6mnu31usfw39occof.png" alt="Ehgbal‚Äôs framework"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nadia Ehgbal‚Äôs framework has four classifications: &lt;em&gt;Federations&lt;/em&gt;, &lt;em&gt;Clubs&lt;/em&gt;, &lt;em&gt;Stadiums&lt;/em&gt; and &lt;em&gt;Toys&lt;/em&gt;. My story comes from the ranks of the &lt;em&gt;toys&lt;/em&gt; ‚Äì another world from those in the big categories, like the &lt;a href="https://babeljs.io/blog/2021/05/10/funding-update"&gt;post from the the Babel project, used by millions but running out of funds&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I was fortunate enough to take part of the &lt;a href="https://www.youtube.com/playlist?list=PLNYkxOF6rcIDA1uGhqy45bqlul0VcvKMr"&gt;Chrome Developer Summit 2019&lt;/a&gt; in San Francisco (on a personal note, I propose to my wife there, in the Cupid‚Äôs Span). At the time I was finishing a project in the works in the last 6 months: a complete rewrite of our frontend. We used a Bootstrap 3.0 in a backed-in framework on our CMS, that we had basically to ‚Äúshadow‚Äù properties we don‚Äôt wanted in the JSPs. It was madness. With the new offering of a headless CMS we rewrote everything in React SSR. I work at a digital only news site in Brazil. I was doing what I called ‚ÄúLighthouse-Driven Development‚Äù to achieve better performance.&lt;/p&gt;

&lt;p&gt;I notice two things right away: YouTube iframe looked to load not so fast like the rest. And we don‚Äôt run ads in our sites. Of any kind. But as soon as our iframe load with our videos, every ad-blocker would point that there was an ad in the page, and traced back to the YouTube embed. Also, our embeds sometimes loaded with several little ‚Äúrecommendations‚Äù that don‚Äôt matched our themes exactly. But who I was to blame YouTube embed?&lt;/p&gt;

&lt;p&gt;But in one of the talks, &lt;a href="https://twitter.com/paul_irish"&gt;Paul Irish&lt;/a&gt; presented &lt;a href="https://github.com/paulirish/lite-youtube-embed"&gt;Lite YouTube Embed&lt;/a&gt;, a custom element renders just like the real thing but approximately &lt;a href="https://paulirish.github.io/lite-youtube-embed/"&gt;224√ó faster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yNx0nrmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etw31n0xk5cet7gzmhx0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yNx0nrmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etw31n0xk5cet7gzmhx0.png" alt="Ads network"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there, in the code, I found that I was loading at least two sources of ad for one iframe. But I was more interested in the ‚Äú224x‚Äù. The project at work could not ‚Äúwait‚Äù. for me work on this. But I used my free time and weekends and built &lt;a href="https://github.com/ibrahimcesar/react-lite-youtube-embed"&gt;üì∫ React Lite YouTube Embed&lt;/a&gt; that later became part of my project. My benchmarks never got close, but I could do a faster and cleaner way of loading iframes for our project since we would wait for user interaction, applying &lt;a href="https://www.youtube.com/watch?v=puUPpVrIRkc"&gt;Adaptive Loading&lt;/a&gt; as presented by &lt;a href="https://twitter.com/addyosmani"&gt;Addy Osmani&lt;/a&gt;‚Äîwhich, many of the ideas were a lot about my &lt;em&gt;every day work&lt;/em&gt; since I was dealing with very poor performance mobiles and low-quality networks that we have here in Brazil and not exception. My motivation was part solve a problem for me and part apply those ideas of respect users‚Äôs hardware and network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CIfF0BQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1zqig24h3zhu3k5prgs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIfF0BQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1zqig24h3zhu3k5prgs.jpeg" alt="Addy presenting the adaptive loading"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-alive"&gt;
  &lt;/a&gt;
  It‚Äôs alive!
&lt;/h2&gt;

&lt;p&gt;The first release I was so afraid. Of criticism. Of put my code out there. I had to do some tweaks because when integrating with my own work I faced problems. I receive feedback, &lt;em&gt;pull requests&lt;/em&gt; and then, on the &lt;a href="https://github.com/ibrahimcesar/react-lite-youtube-embed/pull/6"&gt;6th PR&lt;/a&gt; a collaborator, &lt;a href="https://github.com/elbotho"&gt;Botho&lt;/a&gt; added a nice option &lt;code&gt;noCookie&lt;/code&gt;, when &lt;code&gt;true&lt;/code&gt;, connected to YouTube via the Privacy-Enhanced Mode using &lt;code&gt;https://www.youtube-nocookie.com&lt;/code&gt;. I already had in place &lt;code&gt;adNetwork&lt;/code&gt; to preconnect or not to the ad networks and it delighted me to get this kind of not only validation for these kind of concerns but active ideas and work towards the goal. But these privacy enhancements were all by opt-in.&lt;/p&gt;

&lt;p&gt;I was getting feedback that the component was not playing nice with &lt;code&gt;Next.JS&lt;/code&gt;. I was making a hard-coded import of the css and this would make the app not render at all. Since I was taking more and a more close look to Next.JS‚Äîand loving it! I did not want to my first open sourced my little project doesn‚Äôt give access to this framework and potentially others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#privacy-by-default"&gt;
  &lt;/a&gt;
  Privacy by default
&lt;/h2&gt;

&lt;p&gt;At the same time in Brazil we got a new law, our own home-baked GDPR, called LGPD (Lei Geral de Prote√ß√£o de dados or General Law of Data Protection) and all concerns with the massive misuse of our data. I made a course in the area to better prepare our systems (since we deal with billing for subscriptions and other kind of PII). And I was a ‚ÄúTypeScript newborn‚Äù, a recent converted and got the challenge to rewrite from the zero (well, is a small lib, it was not a tremendous feat!). And got me thinking about privacy, how sensitive defaults could become the norm in an invisible, but fundamental way and, I as designer of this component, decided I would make a private by default component. I would make the developer responsible for the choices or even better, be possible to give to the user these choices.&lt;/p&gt;

&lt;p&gt;How will evolve our society trusting on advertising corporations to be neutral purveyors of information when their profit depends on manipulating that information misunderstands our capitalist marketplace and the value and nature of unbiased information? I as a developer in a news media outlet was thinking on things like that and I know everyone has an approach to this, even if is ‚ÄúI don‚Äôt care‚Äù. So, I choose privacy by default.&lt;/p&gt;

&lt;p&gt;And this will be my choice from now on. And that PR, of a person I never meet or spoke, but that we collaborate in the same piece of code, gave me confidence in my choices.&lt;/p&gt;




&lt;p&gt;And this is my first open source project, on &lt;code&gt;2.0&lt;/code&gt; since the TypeScript migration.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ibrahimcesar"&gt;
        ibrahimcesar
      &lt;/a&gt; / &lt;a href="https://github.com/ibrahimcesar/react-lite-youtube-embed"&gt;
        react-lite-youtube-embed
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üì∫ &amp;lt; A private by default, faster and cleaner YouTube embed component for React applications /&amp;gt;
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt; &lt;div&gt;
  &lt;h1&gt;
üì∫  React Lite YouTube Embed&lt;/h1&gt;
  &lt;blockquote&gt;A private by default, faster and cleaner YouTube embed component for React applications&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/ellerbrock/typescript-badges/"&gt;&lt;img src="https://camo.githubusercontent.com/1d1f56c37cf5dfd1b9c3782a8d1d6fe07f8764e8c35f53ec90460e5b38cd8f7d/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f747970657363726970742f636f64652f747970657363726970742e7376673f763d313031" alt="TypeScript"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-lite-youtube-embed" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/485749f3898fb2288e39ffcd1a6b871f2b93b965a10c251cf2e9700ac97a42bb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d6c6974652d796f75747562652d656d6265643f6c6162656c3d6c617465737425323076657273696f6e" alt="Version"&gt;&lt;/a&gt;¬† ¬†&lt;a href="https://raw.githubusercontent.com/ibrahimcesar/react-lite-youtube-embed/main/./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/cc2d64e6af0f51a7ca1d15e065b021d5ca9216405e96fe2efc3103a9bc564be4/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6963656e73652f6962726168696d63657361722f72656163742d6c6974652d796f75747562652d656d626564" alt="License"&gt;&lt;/a&gt;¬† ¬†&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a28aa39ed91c6ce054986970bccc61bc0a0e6d46630d30d6c1efe050afdfd3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6962726168696d63657361722f72656163742d6c6974652d796f75747562652d656d6265642f627567"&gt;&lt;img src="https://camo.githubusercontent.com/1a28aa39ed91c6ce054986970bccc61bc0a0e6d46630d30d6c1efe050afdfd3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6962726168696d63657361722f72656163742d6c6974652d796f75747562652d656d6265642f627567" alt="GitHub issues by-label"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Developed in üáßüá∑ &lt;span&gt;Brazil&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Port of Paul Irish's &lt;a href="https://github.com/paulirish/lite-youtube-embed"&gt;Lite YouTube Embed&lt;/a&gt; to a React Component. Provide videos with a supercharged focus on visual performance. The gain is not the same as the web component of the original implementation but saves some requests and gives you more control of the embed visual. An &lt;a href="https://www.youtube.com/watch?v=puUPpVrIRkc" rel="nofollow"&gt;"Adaptive Loading"&lt;/a&gt; way to handle iframes for YouTube.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d1ba5220a61cd6f4bf923a7f7689572c4eebff02f5fa16c29ea48536963b205/68747470733a2f2f72656163742d6c6974652d796f75747562652d656d6265642e73332d73612d656173742d312e616d617a6f6e6177732e636f6d2f6c6974652e676966"&gt;&lt;img src="https://camo.githubusercontent.com/1d1ba5220a61cd6f4bf923a7f7689572c4eebff02f5fa16c29ea48536963b205/68747470733a2f2f72656163742d6c6974652d796f75747562652d656d6265642e73332d73612d656173742d312e616d617a6f6e6177732e636f6d2f6c6974652e676966" alt="iFrame example"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a href="https://react-lite-youtube-embed.ibrahimcesar.cloud/" rel="nofollow"&gt;View Demo&lt;/a&gt;
&lt;/h2&gt;
&lt;/div&gt;
&lt;h2&gt;
üîí 2.0.0 Privacy by Default&lt;/h2&gt;
&lt;p&gt;The biggest change is, from 2.0.0 this component is private by default. Meaning that will not preconnect with the ad network from Google and connect to YouTube via the Privacy-Enhanced Mode using &lt;a href="https://www.youtube-nocookie.com" rel="nofollow"&gt;https://www.youtube-nocookie.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
üöÄ Install&lt;/h2&gt;
&lt;p&gt;Use your favorite package manager:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add react-lite-youtube-embed&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install react-lite-youtube-embed -S&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
üïπÔ∏è Basic Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"react"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;render&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"react-dom"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;LiteYouTubeEmbed&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ibrahimcesar/react-lite-youtube-embed"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Please leave your thoughts, takes and insights in the comments!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@christianw?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Christian Wiediger&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/youtube?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>typescript</category>
      <category>privacy</category>
    </item>
    <item>
      <title>4 ways to Compare Strings in JavaScript</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Tue, 18 May 2021 12:02:57 +0000</pubDate>
      <link>https://dev.to/coderslang/4-ways-to-compare-strings-in-javascript-2ej9</link>
      <guid>https://dev.to/coderslang/4-ways-to-compare-strings-in-javascript-2ej9</guid>
      <description>&lt;p&gt;In this short JS tutorial, you‚Äôll learn how to compare strings and see code examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strict-equality"&gt;
  &lt;/a&gt;
  Strict equality
&lt;/h2&gt;

&lt;p&gt;To determine whether the strings are equal, you can use the strict equality operator &lt;code&gt;===&lt;/code&gt;. It returns &lt;code&gt;false&lt;/code&gt; if the strings are different and &lt;code&gt;true&lt;/code&gt;, if they‚Äôre the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;learn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;today&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;learn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comparing the strings using strict equality &lt;code&gt;===&lt;/code&gt; always analyzes the case of the letters, meaning that capital letters are different from the small ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#caseinsensitive-string-comparison"&gt;
  &lt;/a&gt;
  Case-insensitive string comparison
&lt;/h2&gt;

&lt;p&gt;If you want to do a case insensitive comparison of the strings in JavaScript, you can turn both strings to lowercase and compare them using a strict equality operator afterward.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#comparing-the-length-of-javascript-strings"&gt;
  &lt;/a&gt;
  Comparing the length of JavaScript strings
&lt;/h2&gt;

&lt;p&gt;If you need to find which of two strings is longer, then the operators "greater than" and "lower than" won‚Äôt suit you well. They compare the characters of a string in alphanumeric order one by one and consider the length of the strings at the very end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In JS, every string has the &lt;code&gt;length&lt;/code&gt; property. By comparing the value of this property in different strings, we‚Äôll get to know which of them is longer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#check-if-a-string-contains-another-string"&gt;
  &lt;/a&gt;
  Check if a string contains another string
&lt;/h2&gt;

&lt;p&gt;To check if one string is a substring of another in JavaScript, there‚Äôs a built-in function &lt;code&gt;includes&lt;/code&gt;. Remember, the function &lt;code&gt;contains&lt;/code&gt; exists in Java, but it‚Äôs deprecated and replaced by &lt;code&gt;includes&lt;/code&gt; in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;python&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;java&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="c1"&gt;// ERROR! .contains is not a function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read more &lt;a href="https://learn.coderslang.com/tags/javascript/"&gt;JavaScript tutorials&lt;/a&gt; or &lt;a href="https://js.coderslang.com"&gt;Learn Full-Stack JS&lt;/a&gt; from scratch!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Roblox Developing</title>
      <author>littlePitMit_Dev</author>
      <pubDate>Tue, 18 May 2021 11:29:52 +0000</pubDate>
      <link>https://dev.to/mit_pit/roblox-developing-1da9</link>
      <guid>https://dev.to/mit_pit/roblox-developing-1da9</guid>
      <description>&lt;p&gt;Roblox developing is now one of the easiest ways to earn money by putting in effort but with low risk! All that really needs to happen is imagination. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reasons why roblox developing is low risk&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Roblox is an online platform where there is no reason to spend money at all&lt;/li&gt;
&lt;li&gt;The code of conduct is easy to follow and there are some great websites to help you &lt;/li&gt;
&lt;li&gt;DevEx or cashing out with money is easy and very efficient &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What to watch out for in roblox developing&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Many of the users online will scam you so always take payment before you submit the build or code. (I send screenshots then ask for pay)&lt;/li&gt;
&lt;li&gt;I think 360 robux=$1 which is quite manageable&lt;/li&gt;
&lt;li&gt;You might want to have other platforms with your user so you can get an audience, this is a great way to form a fanbase and make money with youTube&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What skills do I need?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You need to be able to 3D model. Roblox Studio (where you make the games) has a great interface design that can help you. Another way is to make a file in blender and export it to Roblox Studio. &lt;/li&gt;
&lt;li&gt;Basic coding, Roblox coding is different from other coding but it's easier to understand a new code when you can code a little&lt;/li&gt;
&lt;li&gt;Time, Roblox is a platform where developers spend up to a year creating 1 game. You will have to provide updates regularly.&lt;/li&gt;
&lt;li&gt;Communications skills, If you wish to develop you should probably get a team together of expert 3D modelers, Scripters, GFX creators. If you can do them all then go solo! &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Many of the developers on Roblox have made millions of $$$ join today at roblox.com, make an account, click create, download the studio and boom you can create games. The interface is easy to figure out but you might want to watch some videos to get started! &lt;/p&gt;

&lt;p&gt;I have my own, "Roblox Devs" orginazation that you can be sure to reach out on&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a class="mentioned-user" href="https://dev.to/mit_pit"&gt;@mit_pit&lt;/a&gt;
 &lt;br&gt;
Roblox: @littlePitMit_Dev&lt;br&gt;
DevTo &lt;a class="mentioned-user" href="https://dev.to/mit_pit"&gt;@mit_pit&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;Message me with any questions, concerns, comments, or other&lt;/p&gt;

&lt;p&gt;You can also write a reply below. &lt;/p&gt;

&lt;p&gt;Have a great day DEV.To community I know that was a lot to read! &lt;/p&gt;

</description>
      <category>design</category>
      <category>architecture</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Various methods for Python String Comparison</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 18 May 2021 11:19:09 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/various-methods-for-python-string-comparison-41fj</link>
      <guid>https://dev.to/hrishikesh1990/various-methods-for-python-string-comparison-41fj</guid>
      <description>&lt;p&gt;In this short tutorial, let us look at the various string comparison methods in python. We also look at the various edge cases, limitations and caveats.  &lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-string-comparison"&gt;Python String Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#string-comparison-operators"&gt;String Comparison Operators&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-and-"&gt;"==" and "!="&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#is-and-not-is"&gt;"is" and "not is"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-and-caveats"&gt;Limitations and Caveats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python-string-comparison"&gt;
  &lt;/a&gt;
  Python String Comparison
&lt;/h2&gt;

&lt;p&gt;Python string comparison is very common and is often used as a condition for loops. Python also comes with a few handy inbuilt operators to facilitate this. However before we dive into the methods, we have one important concept to touch upon.  &lt;/p&gt;

&lt;p&gt;All the data in your program are represented as objects, and every object has the following 3 properties. &lt;strong&gt;Identity&lt;/strong&gt; &lt;strong&gt;(Id)&lt;/strong&gt; - One may think of identity as the address of the memory in with the data is stored. The other two properties are &lt;strong&gt;Type&lt;/strong&gt; and &lt;strong&gt;Value.&lt;/strong&gt; Type is the data type of the object and Value is the value that the object stores. Python tries to save memory by re-using Id for objects with the same value, I have added an example below, this makes python string comparison much faster and easier.  Also, please be vary of these terms as each operator uses a different comparison method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-comparison-operators"&gt;
  &lt;/a&gt;
  String Comparison Operators
&lt;/h2&gt;

&lt;p&gt;Out of the multiple methods that could be used to compare strings in python, I've explained two of the most commonly used, methods below. Note that all these methods return a boolean &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-and-"&gt;
  &lt;/a&gt;
  "==" and "!="
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; are commonly used relation operation in python string comparison. Both these operators compare the Unicode values of all the characters in the string one by one and then return a value. In case you aren't familiar with Unicode values, it essentially means that strings get converted into a Unicode, this helps maintain a uniform code irrespective of the language the programmer uses. You can read more about this &lt;a href="https://docs.python.org/3/howto/unicode.html"&gt;here&lt;/a&gt;. So based on these values you each character of a string is compared. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using "=="&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The "==" is a python string comparison method that is used to check if the value of both the operands is equal. And this is the most common method used to check equality.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 140735453670112
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The operator returns &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; respectively. Also notice how the &lt;code&gt;Id&lt;/code&gt; of &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; is identical, however, bear in mind that the &lt;code&gt;Id&lt;/code&gt; function will return a different number for you.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using "!="&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;!=&lt;/code&gt; is another python string comparison operator that is used to check if the values of the operands are not equal. Basically, the inverse of &lt;code&gt;==&lt;/code&gt; and the code makes it pretty straightforward to understand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#is-and-not-is"&gt;
  &lt;/a&gt;
  "is" and "not is"
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;not is&lt;/code&gt; operators are also quite similar to &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; respectively. However, &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt; compares to the Identity (id) of the objects and returns &lt;code&gt;true&lt;/code&gt; only if they share the same identity. One could argue that the identity of the object remains the same, but this is not the case when working with immutables. When the object is given another value the memory allocated changes giving it a new id. This is something you need to keep in mind while using &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using "is":&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Using "is not":&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's look at how the Identity (id) changes when the value is changing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;
&lt;span class="c1"&gt;#Now let us update s1
&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexi'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 2621680032944
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as soon as the value in &lt;code&gt;s1&lt;/code&gt; changes, &lt;code&gt;s2&lt;/code&gt; stops referring to &lt;code&gt;s1&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-and-caveats"&gt;
  &lt;/a&gt;
  Limitations and Caveats
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python string comparison operators can only be used to compare objects of a similar type.&lt;/li&gt;
&lt;li&gt;A best practice is to use &lt;code&gt;==&lt;/code&gt; when working with immutables&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>
10 Things You Need To Know About Automation In Marketing
</title>
      <author>Harshith</author>
      <pubDate>Tue, 18 May 2021 11:02:46 +0000</pubDate>
      <link>https://dev.to/harshith/10-things-you-need-to-know-about-automation-in-marketing-nfk</link>
      <guid>https://dev.to/harshith/10-things-you-need-to-know-about-automation-in-marketing-nfk</guid>
      <description>&lt;p&gt;Automation is a word that gets thrown around quite a bit in the marketing world. But what does it actually mean? And how can you implement automation in your own business? For ten things you need to know about automation, see this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YI5VWcmu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vku5064r0hwtcudsjb3c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YI5VWcmu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vku5064r0hwtcudsjb3c.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
 Automation is a word that gets thrown around quite a bit in the marketing world. But what does it actually mean? And how can you implement automation in your own business? For ten things you need to know about automation, see this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-is-automation"&gt;
  &lt;/a&gt;
  1. What is automation?
&lt;/h2&gt;

&lt;p&gt;Automation is the process of removing human beings from a repetitive or mundane task, which is then completed by a computer or robot. Often referred to as ‚Äúlights out‚Äù production, automation is used in manufacturing, but it can be used in virtually any field. &lt;br&gt;
The impact of automation on the global, traditional retail, and online eCommerce sectors is undeniable. There are numerous ways that companies are utilizing technology to make their businesses more efficient, with vision tracking, inventory control, and online services as the prime examples. It isn‚Äôt uncommon for a small online retailer to generate tens of millions of dollars a year.&lt;br&gt;
As we move forward into the future of the ‚Äúrobot economy,‚Äù and the adoption of these technologies by consumers becomes more and more common, companies need to be asking the question of how they can best place their businesses in the technological age. Simply put, how can companies automate their operations?&lt;br&gt;
Silicon Valley has long been criticized for its role in perpetuating what is referred to as the ‚Äúman vs. machine‚Äù dichotomy. This view is held by many in society, who share the belief that the machines will always out-work the human work force ‚Äî which is a disastrous idea for those of us who seek to operate in a more humane manner.&lt;br&gt;
While it‚Äôs true that many advancements in technology have lowered the bar for what humans can achieve, the automation of manufacturing, in particular, has created tremendous value. Today, these technologies provide more jobs for humans, improve productivity, save lives, and lower costs for companies. It makes economic sense, and companies have started integrating them into their business models.&lt;br&gt;
Simply put, knowing how to put your products in the warehouse or how to deliver them to the customer at the end of the day depends on a thriving robotics sector. Without this, logistics, food distribution, retail, and many other manufacturing sectors will be unable to function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-how-can-you-use-automation"&gt;
  &lt;/a&gt;
  2. How can you use automation?
&lt;/h2&gt;

&lt;p&gt;I love automation because it saves me from so much hassle. I love it so much I even wrote a book about it called The Power of Automation . Automation has been a huge part of my success as a blogger. Automation has also been a huge part of my business.I like to think about business using the 80/20 rule as a way of understanding what has worked in the past, and what similar campaigns can be made to work in the future.&lt;/p&gt;

&lt;p&gt;Here are ten simple but important things automation does for me.&lt;br&gt;
 10 Benefits of Automation in Your Business&lt;br&gt;
 Here are some of the benefits automation has brought me:&lt;br&gt;
 More time to focus on other important things in my business&lt;br&gt;
 Extra time to manage other parts of the business such as social media posting, email etc.&lt;br&gt;
 Faster development on new projects and marketing efforts&lt;br&gt;
 greater creativity in all of my marketing efforts (both in terms of content and layout)&lt;br&gt;
 More budget for more projects&lt;/p&gt;

&lt;p&gt;More time to focus on other important things in my business&lt;br&gt;
 It's the little things that make a difference. If your minutes per task piece of paper has changed quite a bit, you may find time to dedicate to more important items in your business. Likewise, if your daily rate has changed quite a bit, then you might want to reassess where automation can make a big difference in how you do business.&lt;br&gt;
 Extra time to focus on other parts of the business such as social media posting, email etc.&lt;br&gt;
 As the old clich√© goes, the difference between doing and making is the difference between making something valuable and not. Of course there will always be a need to manage social media, and email etc, but taking time on a regular basis to focus on them will only make a difference for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-what-are-the-benefits-of-automation"&gt;
  &lt;/a&gt;
  3. What are the benefits of automation?
&lt;/h2&gt;

&lt;p&gt;We live in a world where automation is becoming the norm. It‚Äôs no longer a luxury, it is the norm. Everything is becoming automated, from cars to coffee machines. Automation is the future of the workforce. Automation, for the most part, is a good thing.Under automation, we can use resources more efficiently, discover new areas to expand into, and take on new roles due to the roles changing.&lt;br&gt;
However, let's talk a little more about what it means to automate a process. With automation, we are talking about elements of a process that no human can do on their own. Things like software maintenance, software updates, repetitive tasks are things that can be automated. So automation then could mean anything from automating a coffee machine to automating a customer support call.&lt;br&gt;
Now, I‚Äôm not going to try and convince you that software is going to replace you. In fact, you likely have a work ethic that is greater than mine. I just think the automation of certain processes can help reduce your workload, especially now that more people expect us to do things like identify a virus or fix an email. Without automation, humans still take up those roles and, therefore, jobs will need to be created to help take care of those repetitive tasks. That creates a whole host of new roles like customer support, sales, and support for customer support.&lt;br&gt;
Another benefit of automation is the more efficient use of the resources you have. Generally, if you can automate something the cost is split between the human user and the machine. If there is a process that is covered by automation, then an almost 50/50 split can take place. All of the resources, time, and costs of setting up and running an automation tool are then being taken care of by the machine.&lt;br&gt;
Want more? Check out the article I wrote on How to get started on automation in your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-are-there-any-drawbacks-to-automation"&gt;
  &lt;/a&gt;
  4. Are there any drawbacks to automation?
&lt;/h2&gt;

&lt;p&gt;There are some drawbacks to automation. For example, the more automated your business becomes, the less human interaction you‚Äôre going to have with your audience. The more automated your business becomes, the less human interaction you‚Äôre going to have with your audience. It‚Äôs all about balance.Another drawback to automation is that some aspects of customer service, like the human touch, depend on consistency. That tells you something. If you make your automated parts fail sometimes, then your business is going to have echo chambers where repetitive automation will help it get bad feedback from customers again and again. If your automation relies on a lot of approval processes constantly, then every customer interaction is going to require the approval of a human, and that becomes harder and harder as the business becomes more automated.&lt;br&gt;
The good news is that to get your automation right, you need to know two things: size of your audience and social proof. These are factors that help a lot when automating your marketing. Here are some things that you can use to validate that an automation is going to work for your target audience.&lt;br&gt;
One of the very first steps of your automation is picking out measurement tools. This is something you should probably start thinking about before anything else because if you automate something without any measurement, you‚Äôre just going to have a big pile of money sitting in the bank instead of actual profits to be made or conversions to be had.&lt;br&gt;
There are a handful of choices out there, the strategy that splits the difference for a wide audience of businesses is the Hubspot journey map. This gives a pretty clear overview of your current industry, competition, and the major driving factors for your business to make changes. They provide analytics on the accounts that are generating the most data and where you can optimize your marketing, content, and advertising to reach as many prospects as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-how-can-you-overcome-the-drawbacks-of-automation"&gt;
  &lt;/a&gt;
  5. How can you overcome the drawbacks of automation?
&lt;/h2&gt;

&lt;p&gt;Automation can make your life easier, but it can also take away some of the joy of the creative process. For example, instead of playing around with different colour schemes for a website header, you could just have an app that does it for you. The drawbacks of automation include: &lt;br&gt;
In other words, automation is very convenient, but it also has its limits.&lt;br&gt;
The question then is: What do you actually do with automation in your business?&lt;br&gt;
We see it all the time in the marketing world. We have streamers like Adam Taggart on Fullscreen. What are their hard skills? Both are quite impressive. Adam shines when he has his own things to talk about or is leading a conversation about some topic. He also has a habit of bringing up what he has on his mind without filter. It pulls the information into focus and turns dull meetings into something entertaining. Technically, he might be a robot at heart ‚Äî a disembodied spirit channeling his thoughts. Nonetheless, he does an amazing job of keeping his audience engaged and interested.&lt;br&gt;
Adam is a wizard at driving sales. To show just how good he is at this, I recorded a video about SEO and sent it out to my students. Adam reviewed it, commented, and then emailed me back with the link. I copied the video into an email and sent it to one of his clients. Two hours later, he wrote back and said that he thought it was brilliant!&lt;br&gt;
Did you know that there are promo codes in Facebook Messenger right now worth 40% of your first order! That‚Äôs just one of many promo codes in the Messenger app! How did these promo codes get into your brand? Maybe you have a Messenger account, and if you sign in and need to solve a problem, you can use the app to ask for help. And when someone answers you, you can click a button to share that it‚Äôs you that the person is messaging and point them to your own messenger.&lt;/p&gt;

&lt;p&gt;Automation makes Everything simple &lt;br&gt;
Example- A Robot Cleans your house ,Dont have it? &lt;br&gt;
         link if you want one - &lt;/p&gt;

&lt;p&gt;Irobot Amazon India - &lt;a href="https://amzn.to/3bCNRwu"&gt;https://amzn.to/3bCNRwu&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EIkDqfIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv0q6epy422v7a1lsh0b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EIkDqfIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv0q6epy422v7a1lsh0b.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have provided my Followers a free Ebook in my last Post , do check it out and claim you copy &lt;/p&gt;

</description>
      <category>automation</category>
      <category>beginners</category>
      <category>marketing</category>
      <category>bots</category>
    </item>
    <item>
      <title>Top c√°c ph·∫ßn m·ªÅm di·ªát virus t·ªët nh·∫•t cho Windows 2022</title>
      <author>Joney</author>
      <pubDate>Tue, 18 May 2021 10:56:26 +0000</pubDate>
      <link>https://dev.to/jonynguyen/top-cac-phan-mem-diet-virus-tot-nhat-cho-windows-2022-5459</link>
      <guid>https://dev.to/jonynguyen/top-cac-phan-mem-diet-virus-tot-nhat-cho-windows-2022-5459</guid>
      <description>&lt;p&gt;Nh∆∞ c√°c b·∫°n ƒë√£ bi·∫øt th√¨ ƒë·ªëi v·ªõi m√°y t√≠nh s·ª≠ d·ª•ng h·ªá ƒëi·ªÅu h√†nh windows 10, windows 8/8.1 hay windows 7 th√¨ vi·ªác s·ª≠ d·ª•ng c√°c lo·∫°i ph·∫ßn m·ªÅm nh∆∞ t∆∞·ªùng l·ª≠a, di·ªát virus nh·∫±m b·∫£o v·ªÅ m√°y t√≠nh c·ªßa m√¨nh l√† ƒëi·ªÅu c·∫ßn thi·∫øt ph·∫£i th·ª±c hi·ªán. V√† n·∫øu kh√¥ng bi·∫øt t√¨m ki·∫øm nh·ªØng ph·∫ßn m·ªÅm n√†o th√¨ trong chuy√™n m·ª•c c·ªßa &lt;a href="https://dev.to/"&gt;&lt;b&gt;dev.to&lt;/b&gt;&lt;/a&gt; m√¨nh xin ƒë∆∞·ª£c chia s·∫ª ƒë·∫øn m·ªçi ng∆∞·ªùi v·ªÅ top c√°c ph·∫ßn m·ªÅm di·ªát virus t·ªët nh·∫•t cho Windows 2022&lt;/p&gt;

&lt;h2&gt;10 ph·∫ßn m·ªÅm di·ªát virus t·ªët nh·∫•t cho Windows 2022&lt;/h2&gt;

&lt;h3&gt;1. Bitdefender Antivirus Plus&lt;/h3&gt;

&lt;p&gt;Bitdefender Antivirus Plus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Gi√†nh ƒë∆∞·ª£c ƒëi·ªÉm s·ªë n·ªïi b·∫≠t trong c√°c b√†i ki·ªÉm tra ƒë·ªôc l·∫≠p t·∫°i ph√≤ng th√≠ nghi·ªám v√† ki·ªÉm tra kh·∫£ nƒÉng b·∫£o v·ªá web&lt;br&gt;
B·∫£o v·ªá ransomware nhi·ªÅu l·ªõp&lt;br&gt;
C√≥ t√≠nh nƒÉng ch·ªëng theo d√µi (Do Not Track)&lt;br&gt;
C√≥ tr√¨nh qu·∫£n l√Ω m·∫≠t kh·∫©u&lt;br&gt;
C√≥ t√≠nh nƒÉng Banking protection (b·∫£o v·ªá c√°c giao d·ªãch t√†i ch√≠nh tr·ª±c tuy·∫øn, nh∆∞ mua s·∫Øm hay thanh to√°n qua ng√¢n h√†ng)&lt;br&gt;
Cung c·∫•p m·ªôt m·∫°ng ri√™ng ·∫£o (VPN)&lt;br&gt;
Nhi·ªÅu t√≠nh nƒÉng b·ªï sung t·∫≠p trung v√†o b·∫£o m·∫≠t.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Truy c·∫≠p VPN kh√¥ng gi·ªõi h·∫°n y√™u c·∫ßu ƒëƒÉng k√Ω ri√™ng&lt;br&gt;
N·∫øu t·∫•t c·∫£ c√°c bi·ªán ph√°p b·∫£o v·ªá th·ªùi gian th·ª±c b·ªã v√¥ hi·ªáu h√≥a, nh·ªØng t√≠nh nƒÉng d√†nh ri√™ng cho ransomware ƒë√£ b·ªè qua m·ªôt m·∫´u kh√¥ng ph·ªï bi·∫øn.&lt;/p&gt;

&lt;h3&gt;2. Kaspersky Anti-Virus&lt;/h3&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Gi√†nh ƒë∆∞·ª£c ƒëi·ªÉm s·ªë ho√†n h·∫£o v√† g·∫ßn nh∆∞ ho√†n h·∫£o t·ª´ 4 ph√≤ng th·ª≠ nghi·ªám ƒë·ªôc l·∫≠p&lt;br&gt;
ƒê·∫°t ƒëi·ªÉm ho√†n h·∫£o trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng phishing&lt;br&gt;
ƒêi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra ch·∫∑n &lt;a href="https://bloghotro.com/phan-mem/"&gt;ph·∫ßn m·ªÅm&lt;/a&gt; v√† URL ƒë·ªôc h·∫°i&lt;br&gt;
C√≥ h·ªó tr·ª£ qua ƒëi·ªán tho·∫°i ho·∫∑c tr√≤ chuy·ªán tr·ª±c ti·∫øp&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;C√°c t√≠nh nƒÉng qu√©t b·ªï sung ch·ªìng ch√©o l·∫´n nhau ƒë√°ng k·ªÉ&lt;/p&gt;

&lt;h3&gt;3. Webroot SecureAnywhere AntiVirus&lt;/h3&gt;

&lt;p&gt;Webroot SecureAnywhere AntiVirus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm s·ªë ho√†n h·∫£o trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i&lt;br&gt;
Kh·∫£ nƒÉng ch·ªëng phishing r·∫•t t·ªët&lt;br&gt;
C√≥ t√≠nh nƒÉng b·∫£o v·ªá ch·ªëng ransomware&lt;br&gt;
Kh√¥ng ti√™u t·ªën nhi·ªÅu t√†i nguy√™n h·ªá th·ªëng.&lt;br&gt;
Qu√©t nhanh, k√≠ch th∆∞·ªõc nh·ªè&lt;br&gt;
S·ªü h·ªØu nhi·ªÅu t√≠nh nƒÉng ti√™n ti·∫øn&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;K·∫øt qu·∫£ th·ª≠ nghi·ªám h·∫°n ch·∫ø do k·ªπ thu·∫≠t ph√°t hi·ªán kh√¥ng gi·ªëng b√¨nh th∆∞·ªùng&lt;br&gt;
ƒê√£ b·ªè l·ª° m·ªôt m·∫´u ransomware ƒë∆∞·ª£c s·ª≠a ƒë·ªïi th·ªß c√¥ng ƒë·∫∑c bi·ªát trong th·ª≠ nghi·ªám.&lt;/p&gt;

&lt;h3&gt;4. McAfee AntiVirus Plus&lt;/h3&gt;

&lt;p&gt;McAfee AntiVirus Plus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;B·∫£o v·ªá cho m·ªçi thi·∫øt b·ªã Windows, macOS, Android v√† iOS trong gia ƒë√¨nh&lt;br&gt;
ƒêi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
ƒê·∫°t ƒëi·ªÉm xu·∫•t s·∫Øc trong b√†i ki·ªÉm tra ch·ªëng phishing&lt;br&gt;
Bao g·ªìm t√≠nh nƒÉng b·∫£o v·ªá Ransom Guard, PC Boost v√† nhi·ªÅu t√≠nh nƒÉng b·ªï sung kh√°c.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Ransom Guard ƒë√£ b·ªè l·ª° m·ªôt s·ªë m·∫´u ransomware trong th·ª±c t·∫ø&lt;br&gt;
T√≠nh nƒÉng tƒÉng t·ªëc web PC Boost v·∫´n ch·ªâ ho·∫°t ƒë·ªông trong Chrome&lt;br&gt;
Vi·ªác qu√©t to√†n b·ªô r·∫•t ch·∫≠m tr√™n Windows&lt;br&gt;
Phi√™n b·∫£n Mac √≠t t√≠nh nƒÉng h∆°n Windows ho·∫∑c Android&lt;br&gt;
V·∫´n c√≤n √≠t t√≠nh nƒÉng cho iOS&lt;/p&gt;

&lt;h3&gt;5. ESET NOD32 Antivirus&lt;/h3&gt;

&lt;p&gt;ESET NOD32 Antivirus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm r·∫•t t·ªët t·ª´ c√°c ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p&lt;br&gt;
ƒêi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
Th√†nh ph·∫ßn HIPS ch·∫∑n ƒë∆∞·ª£c c√°c cu·ªôc t·∫•n c√¥ng exploit&lt;br&gt;
Tr√¨nh qu√©t UEFI t√¨m th·∫•y ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i trong firmware&lt;br&gt;
Kh·∫£ nƒÉng ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã to√†n di·ªán&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng phishing ch·ªâ ·ªü m·ª©c ch·∫•p nh·∫≠n ƒë∆∞·ª£c&lt;br&gt;
Kh·∫£ nƒÉng ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã qu√° ph·ª©c t·∫°p ƒë·ªëi v·ªõi h·∫ßu h·∫øt ng∆∞·ªùi d√πng.&lt;/p&gt;

&lt;h3&gt;6. Norton AntiVirus Plus&lt;/h3&gt;

&lt;p&gt;Norton AntiVirus Plus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒêi·ªÉm s·ªë xu·∫•t s·∫Øc trong c√°c b√†i ki·ªÉm tra th·ª≠ nghi·ªám ƒë·ªôc l·∫≠p v√† ki·ªÉm tra ri√™ng&lt;br&gt;
C√≥ kh·∫£ nƒÉng b·∫£o v·ªá d·ªØ li·ªáu ch·ªëng l·∫°i ransomware&lt;br&gt;
Bao g·ªìm sao l∆∞u tr·ª±c tuy·∫øn, t∆∞·ªùng l·ª≠a, b·∫£o v·ªá ch·ªëng t·∫•n c√¥ng exploit, qu·∫£n l√Ω m·∫≠t kh·∫©u v√† c√°c t√≠nh nƒÉng b·ªï sung kh√°c.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;T√≠nh nƒÉng Data Protector (B·∫£o v·ªá d·ªØ li·ªáu) kh√° k√©m khi th·ª≠ nghi·ªám&lt;br&gt;
ƒê·∫Øt ti·ªÅn&lt;br&gt;
Kh√¥ng c√≥ m·ª©c gi√° t·ªët khi mua nhi·ªÅu gi·∫•y ph√©p&lt;/p&gt;

&lt;h3&gt;7. Trend Micro Antivirus+ Security&lt;/h3&gt;

&lt;p&gt;Trend Micro Antivirus+ Security&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒêi·ªÉm s·ªë tuy·ªát v·ªùi trong c√°c b√†i ki·ªÉm tra ch·∫∑n URL ƒë·ªôc h·∫°i v√† ch·ªëng phishing&lt;br&gt;
B·∫£o v·ªá ransomware nhi·ªÅu l·ªõp&lt;br&gt;
T√≠nh nƒÉng Pay Guard b·∫£o v·ªá c√°c giao d·ªãch tr·ª±c tuy·∫øn&lt;br&gt;
Nhi·ªÅu t√≠nh nƒÉng b·ªï sung&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm kh√° k√©m trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng l·∫°i ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i th·ª±c t·∫ø&lt;br&gt;
Pay Guard kh√¥ng b·∫£o v·ªá m·ªôt c√°ch nh·∫•t qu√°n&lt;br&gt;
B·ªô l·ªçc th∆∞ r√°c ch·ªâ ho·∫°t ƒë·ªông v·ªõi Outlook&lt;br&gt;
Kh√¥ng c√≥ gi·∫•y ph√©p chung cho nhi·ªÅu thi·∫øt b·ªã.&lt;/p&gt;

&lt;h3&gt;8. Emsisoft Anti-Malware&lt;/h3&gt;

&lt;p&gt;Emsisoft Anti-Malware&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm t·ªët trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i&lt;br&gt;
Kh·∫£ nƒÉng ph√°t hi·ªán h√†nh vi ƒë√°ng ng·ªù ƒë√£ ch·∫∑n th√†nh c√¥ng ransomware&lt;br&gt;
Cloud Console cho ph√©p qu·∫£n l√Ω t·ª´ xa ƒë·∫ßy ƒë·ªß&lt;br&gt;
C√≥ ti·ªán √≠ch m·ªü r·ªông m·ªõi c√≥ th·ªÉ ph√°t hi·ªán phishing.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;H·∫ßu nh∆∞ kh√¥ng c√≥ ƒëi·ªÉm s·ªë ghi l·∫°i t·ª´ c√°c ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p&lt;br&gt;
T√≠nh nƒÉng b·∫£o v·ªá ch·ªëng phishing kh√¥ng d√†nh cho t·∫•t c·∫£ c√°c tr√¨nh duy·ªát&lt;br&gt;
Cloud Console c√≥ th·ªÉ qu√° ph·ª©c t·∫°p ƒë·ªëi v·ªõi m·ªôt s·ªë ng∆∞·ªùi&lt;/p&gt;

&lt;h3&gt;9. F-Secure Anti-Virus&lt;/h3&gt;

&lt;p&gt;F-Secure Anti-Virus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p v√† c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
T√≠nh nƒÉng DeepGuard d·ª±a tr√™n h√†nh vi ph√°t hi·ªán ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i ho√†n to√†n m·ªõi, bao g·ªìm c·∫£ ransomware&lt;br&gt;
Kh·∫£ nƒÉng b·∫£o v·ªá m·∫°ng ti√™n ti·∫øn&lt;br&gt;
Giao di·ªán h·ª£p l√Ω, ƒë∆°n gi·∫£n&lt;br&gt;
Kh√¥ng t·ªën k√©m&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng l·∫°i ransomware th·∫•t b·∫°i tr∆∞·ªõc m·ªôt m·∫´u th·ª±c t·∫ø trong qu√° tr√¨nh th·ª≠ nghi·ªám&lt;br&gt;
Kh√¥ng c√≥ th√†nh ph·∫ßn ch·ªëng phishing&lt;/p&gt;

&lt;h3&gt;10. Malwarebytes Premium&lt;/h3&gt;

&lt;p&gt;Malwarebytes Premium&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm s·ªë tuy·ªát v·ªùi v·ªÅ kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng malware v√† ki·ªÉm tra ch·∫∑n URL ƒë·ªôc h·∫°i trong c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
Bao g·ªìm kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng l·∫°i c√°c cu·ªôc t·∫•n c√¥ng exploit, ransomware, ph√°t hi·ªán d·ª±a tr√™n h√†nh vi&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒêi·ªÉm ki·ªÉm tra ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p √≠t v√† kh√° k√©m&lt;br&gt;
Kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng phishing kh√¥ng hi·ªáu qu·∫£&lt;br&gt;
K·∫øt qu·∫£ ph√°t hi·ªán ransomware kh√° r·ªëi&lt;/p&gt;

&lt;p&gt;K·∫øt lu·∫≠n: Tr√™n ƒë√¢y l√† t·ªïng h·ª£p pop c√°c &lt;a href="https://bloghotro.com/phan-mem-diet-virus/"&gt;ph·∫ßn m·ªÅm di·ªát virus&lt;/a&gt; t·ªët nh·∫•t cho Windows 2021, m·ªçi ng∆∞·ªùi c√≥ th·ªÉ tham kh·∫£o nhi·ªÅu h∆°n n·ªØa c√°c d·∫°ng ph·∫ßn m·ªÅm n√†y t·∫°i blog h·ªó tr·ª£ th√¥ng qua ƒë·ªãa ch·ªâ website bloghotro.com ƒë·ªÉ c√≥ th√™m nhi·ªÅu th√¥ng tin h∆°n n·ªØa nh√©&lt;/p&gt;

</description>
      <category>bloghotro</category>
    </item>
    <item>
      <title>useAxios : A simple custom hook for calling APIs using axios  </title>
      <author>Yogini Bende</author>
      <pubDate>Tue, 18 May 2021 10:52:54 +0000</pubDate>
      <link>https://dev.to/ms_yogii/useaxios-a-simple-custom-hook-for-calling-apis-using-axios-2dkj</link>
      <guid>https://dev.to/ms_yogii/useaxios-a-simple-custom-hook-for-calling-apis-using-axios-2dkj</guid>
      <description>&lt;p&gt;Hello folks, &lt;/p&gt;

&lt;p&gt;Frontend apps are not complete if there are no api calls involved and calling an api becomes a little repetitive thing to do. By creating a custom hook for this, we can save this repetition. To make an api call from frontend, popular methods are &lt;code&gt;fetch&lt;/code&gt; and &lt;code&gt;axios&lt;/code&gt;. Because of the feature like interceptors which axios support, we will be using them in this hook. &lt;/p&gt;

&lt;p&gt;We will create &lt;strong&gt;useAxios hook&lt;/strong&gt; in the following steps - &lt;br&gt;
    1- Do the api call from a component using axios.&lt;br&gt;
    2. Add states for the API response, loading and error. &lt;br&gt;
    3. Create a hook for calling an API using all above.&lt;br&gt;
    4. Make the hook dynamic, to call all types of API methods.&lt;/p&gt;

&lt;p&gt;If you don‚Äôt want to go through these steps and directly jump to the final code, &lt;a href="#final-code"&gt;check here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, let's dive in and create our custom hook, step by step!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-simple-api-call-from-the-component"&gt;
  &lt;/a&gt;
  1. Simple API call from the component
&lt;/h3&gt;

&lt;p&gt;To create this example, we will be using &lt;a href="https://jsonplaceholder.typicode.com/"&gt;jsonplaceholder‚Äôs&lt;/a&gt; posts api. They have many more such APIs created for the practice purpose. &lt;/p&gt;

&lt;p&gt;Generally, all the apis of an app have the same base URL. We will first set up our base URL for axios, so will not need to pass it again and again. &lt;em&gt;In case you are using more than one base URLs, axios supports it via creating instances. You can check that in their &lt;a href="https://axios-http.com/docs/instance"&gt;documentation&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;In our App component, we will just call a &lt;code&gt;get&lt;/code&gt; api to get the list of posts. For this, we are using &lt;code&gt;useEffect&lt;/code&gt; hook. The basic api call from an App component will look something like this -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//App Component&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="c1"&gt;//do something&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The api call made above is simple. We used &lt;code&gt;axios.get&lt;/code&gt; to call an api and using promises we will get the result or the error. Because we already had set up a baseURL, we just passed the specific path to the axios method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-adding-different-states-to-the-api-call"&gt;
  &lt;/a&gt;
  2. Adding different states to the API call
&lt;/h3&gt;

&lt;p&gt;But till now, we are just logging the response coming from api. Let‚Äôs use react‚Äôs states to save our response and error, if occurred. Also,  we will be adding a loading state to conditionally show loaders on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App Component&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setloading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setloading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="c1"&gt;//do something&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-creating-a-custom-hook"&gt;
  &lt;/a&gt;
  3. Creating a custom hook
&lt;/h3&gt;

&lt;p&gt;Custom hooks might be overwhelming in the beginning. But, if you view them just like other components, they will make more sense. One thing to keep in mind, &lt;strong&gt;custom hooks are just another component, which returns values instead of JSX&lt;/strong&gt;. This is my definition for custom hooks and somehow it made the concept more clear to me. You can read more about custom hooks &lt;a href="https://reactjs.org/docs/hooks-custom.html"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So now, let‚Äôs copy the logic of calling an api from our app component to our custom hook. So, the first draft of our &lt;code&gt;useAxios&lt;/code&gt; will look something like this -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// useAxios hook (first draft)&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useAxios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setloading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setloading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

    &lt;span class="c1"&gt;// custom hook returns value&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useAxios&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you notice carefully, we have literally copy pasted the code and created a custom hook. The only difference is this hook is returning us 3 values, loading, response and error. &lt;/p&gt;

&lt;p&gt;Till now, everything looks fine but the hook we created is not at all dynamic. If we need to change the API path or if we want to make a post call instead of get, then we are right now not capable of doing so. &lt;/p&gt;

&lt;p&gt;Hence, here comes the last step of making our hook more flexible. - &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-making-our-hook-more-dynamic"&gt;
  &lt;/a&gt;
  4. Making our hook more dynamic
&lt;/h3&gt;

&lt;p&gt;To make our hook dynamic, we can create a variable for the url path and pass it as a prop to our hook. Also, axios can have any method from get, put, post and delete. Hence, we will need a variable for method name too. With path and methods, we will be adding two variables which can be used to pass body and headers to the request. After adding all these, our hook will look something like this -&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final code
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// useAxios hook&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useAxios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setloading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setloading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useAxios&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As our &lt;strong&gt;useAxios&lt;/strong&gt; hook is ready, let‚Äôs now use it into our app component and try to create a new post using that. Hence, the &lt;code&gt;App&lt;/code&gt; component will be -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// App Component&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAxios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*/*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19392&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sample text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Posts&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="p"&gt;)}&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the very basic version of useAxios hook. You can add more customisations to it as per your requirements. &lt;/p&gt;

&lt;p&gt;Thank you so much for reading this article and do let me know your thoughts about this custom hook! Also, for daily updates you can follow me on &lt;a href="https://twitter.com/ms_yogii"&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Keep learning üôå&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I made a website to make programmers laugh: ProgrammerHumor.io</title>
      <author>ProgrammerHumor.io</author>
      <pubDate>Tue, 18 May 2021 10:48:59 +0000</pubDate>
      <link>https://dev.to/prgrmmrhumor_io/i-made-a-website-to-make-programmers-laugh-programmerhumor-io-p3e</link>
      <guid>https://dev.to/prgrmmrhumor_io/i-made-a-website-to-make-programmers-laugh-programmerhumor-io-p3e</guid>
      <description>&lt;p&gt;Created a website for programmers to spend their free time on, and get a good laugh out of it too. &lt;/p&gt;

&lt;p&gt;Here, check it out: &lt;a href="https://programmerhumor.io"&gt;https://programmerhumor.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OcttZvcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xxwyko50osmzhizosm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OcttZvcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1xxwyko50osmzhizosm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wZ-avdwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g16bqzpl9xpi3h7kf2nj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZ-avdwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g16bqzpl9xpi3h7kf2nj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4vQNpYAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuxc2g52i2b8qom6062t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4vQNpYAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vuxc2g52i2b8qom6062t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
      <category>funny</category>
      <category>news</category>
    </item>
    <item>
      <title>Ways To lose Weight That Actually work
</title>
      <author>Harshith</author>
      <pubDate>Tue, 18 May 2021 10:22:46 +0000</pubDate>
      <link>https://dev.to/harshith/ways-to-lose-weight-that-actually-work-7fg</link>
      <guid>https://dev.to/harshith/ways-to-lose-weight-that-actually-work-7fg</guid>
      <description>&lt;p&gt;The number of fad diets, weight loss programmes and body-shaping products is almost infinite. These days, it seems that everyone wants to lose weight but not everyone knows how. In this article, we look at some of the most common weight loss myths you may be following but actually making your goals even harder to achieve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-fad-diets"&gt;
  &lt;/a&gt;
  1. Fad Diets
&lt;/h2&gt;

&lt;p&gt;Fad diets come and go, but they never seem to go away. Dieting is one of the most-studied topics in the world and has been for a long time. The reason that there are so many fad diets is because there‚Äôs always a new way to sell dieting.When we hear about a diet and what it contains, we automatically go to our cupboards, pantry and fridge as our first thoughts. We may even go online to research which diet is the best one for us. When you‚Äôve been on a diet before many times, you stop being vigilant and start looking for shortcuts to your goals.&lt;br&gt;
If there‚Äôs one thing we‚Äôve always learned in nutrition, it‚Äôs a never-ending list of diet risks and dangers. Eating certain foods can be healthy, but eating them in excess, or common diet risks, can be dangerous.&lt;br&gt;
The real risks of diets are rooted in the lifestyle we lead. If your diet is based on food from a certain region or not, it‚Äôs not only your indulgence in a carb-heavy breakfast that could be making you ill.&lt;br&gt;
For example, northern European countries have very healthy populations primarily because their diet isn‚Äôt focused on carbs. This is because the lack of grains in the northern diet results in a high-fat, moderate (30%+) protein intake.&lt;br&gt;
One of the biggest mistakes people make is substituting regular, high-fat foods with ‚Äòfat‚Äô. If people knowingly replaced fine dining with low-fat takeaways and eventually ended up gaining weight, it would be a recipe for disaster. Anyone struggling to lose weight or who needs to build muscle should keep these two concepts in mind.&lt;br&gt;
There is no simple answer for how to get or stay thin. Dieting is highly complicated and is nowhere close to one-size-fits-all. Different diets work for different people. Weight loss can be easy or hard depending on your level of fitness.&lt;br&gt;
It‚Äôs common to hear people say that weight loss is like ‚Äòplaying the piano with one hand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-not-drinking-enough-water"&gt;
  &lt;/a&gt;
  2. Not Drinking Enough Water
&lt;/h2&gt;

&lt;p&gt;It‚Äôs amazing how many people don‚Äôt drink enough water. According to The Institute of Medicine, men should drink roughly 3 liters of water a day (about 13 cups), and women should drink 2.2 liters (about 9 cups).Drinking water is so important for reducing your risk of many health problems. However, some people believe that only tap water is healthy. This is not true; most bottled water is not enough and many water filters do not remove chlorine from tap water. The Institute of Medicine also states that the quality of tap water impacts your risk of health problems more than water quality treatment systems.&lt;br&gt;
According to a 2017 study published by the American Journal of Clinical Nutrition, when people are told to limit how much water they drink, they are less likely to drink as much as they should. What is more concerning is that many people believe that if they drink five glasses of water a day, they will be well-hydrated. While that may be true for a portion of the population, the vast majority of people in the western world do not drink five glasses of water a day. In fact, the World Health Organization (WHO) recommends only drinking around 2.7 liters (about 9 cups) of water a day. Once again, drinking enough water can have more impact on your health than what you‚Äôre drinking.&lt;br&gt;
You may be reluctant to try a different kind of food because you‚Äôve heard it can make you more susceptible to food poisoning. One of the biggest myths about food poisoning is the following: Some foods will make you more likely to get food poisoning because you have more bacteria and germs in your body. This belief has led to the widespread use of limiting your diet to foods and drinks that you think will kill the germs causing food poisoning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-eating-too-many-calories"&gt;
  &lt;/a&gt;
  3. Eating Too Many Calories
&lt;/h2&gt;

&lt;p&gt;There are two main reasons why people gain weight. The first one is eating too many calories. If you eat more calories than your body burns, then the excess calories will be stored as fat. The second one is eating the wrong types of calories. If you eat more calories from fat than your body needs, then the extra fat will be stored as fat.&lt;br&gt;
There is no doubt that your diet plays a major role in your weight. In fact, the extra weight you gain is partly controlled by your food choices. However, the issue lies in over-reliance on one-size-fits-all diets and not following a range of dietary approaches.&lt;br&gt;
If you are interested in weight cycling, then the actual fat storage may be stored in different places. Alternatively, if you are trying to lose weight, then your body needs a higher supply of energy than when you are at your ideal weight.&lt;br&gt;
If you are trying to lose body fat, the more consistent you are with eating foods that will help you maintain or help you lose body fat, the more sustainable your weight loss will be.&lt;br&gt;
Fad diets and weight loss programmes almost always cause more harm than good. In an ideal world, a healthy diet should be simple, tasty and nutritious. Good body composition is made easier when we eat the foods that our bodies need to function properly.&lt;br&gt;
Fad diets and weight loss programmes flood the market with foods that you can‚Äôt process well at home and are not suited for your lifestyle. These foods are high in simple carbs, simple sugars, saturated fats, refined carbs and salt. They do not suit the daily diet of a healthy individual.&lt;br&gt;
The foods that can be eaten to suit your lifestyle are whole, unprocessed carbohydrates, like oats, buckwheat, buckwheat bran, peanut butter, bananas, and sometimes fruit. Some people also eat yogurt and fresh fruit. No matter which way you choose to approach your diet, you need to be realistic about the foods you can eat and what you can and can‚Äôt include.&lt;br&gt;
Check your health and BP with this devise -- &lt;a href="https://amzn.to/3hypEeE"&gt;https://amzn.to/3hypEeE&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-not-staying-active"&gt;
  &lt;/a&gt;
  4. Not Staying Active
&lt;/h2&gt;

&lt;p&gt;Best all in one Home GYM Kit at amazon -- &lt;a href="https://amzn.to/33Qp3Nd"&gt;https://amzn.to/33Qp3Nd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve noticed that I‚Äôm much more productive when I stay active. Studies have shown that staying active throughout the day can make you more productive. I used to be someone who would just sit at my desk all day and work, but now I try to move around as much as I can. &lt;br&gt;
Stretching is crucial too. Even though a lot of us don‚Äôt realise it, we are actually doing more in our daily lives if we stretch. Getting out of your chair, walking around or even just taking a short walk can help to reduce your risk of an adverse injury. Here are a few examples of exercises that you can try.&lt;br&gt;
Aesthetics can increase our self-confidence and reduce our feelings of fatness.&lt;br&gt;
Fad diets and ‚Äòquick-fix‚Äô diets don‚Äôt work. Around 80% of weight-loss diets fail, while a 2014 study proved that there are no quick-fix diet trends. The reality is that most sustainable weight-loss methods are long-term. If we want to lose weight and keep it off, we need to make sustainable changes that will contribute to our long-term wellbeing.&lt;br&gt;
I used to be terrified of food. I was always rushing to the kitchen for a burger when I could easily get a salad for dinner. I wouldn‚Äôt skip breakfast, try new foods or enjoy anything that didn‚Äôt taste good. Whenever I went on vacation, I didn‚Äôt bring my charger, the fridge or even my favourite coffee back with me. I was a strict vegan during vacation and would stay in bed for days before eating anything at all.&lt;br&gt;
Now, I‚Äôm not vegan anymore. I hate to say that as I still enjoy a lot of food when I‚Äôm out. I‚Äôve curtailed my meat consumption a lot and now I have to look for alternatives if I‚Äôm really hungry. Here are some suggestions:&lt;br&gt;
I used to believe that I was lazy and needed to diet to change that. This was probably because I used to go to bed much earlier than most of my peers and skip lunch all the time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-using-diet-pills-and-other-products"&gt;
  &lt;/a&gt;
  5. Using Diet Pills and Other Products
&lt;/h2&gt;

&lt;p&gt;Some Good recommended pills &lt;br&gt;
1) &lt;a href="https://amzn.to/33SLYYl"&gt;https://amzn.to/33SLYYl&lt;/a&gt;&lt;br&gt;
2) &lt;a href="https://amzn.to/3hA7NUS"&gt;https://amzn.to/3hA7NUS&lt;/a&gt;&lt;br&gt;
or find yourself (not suggested ) at &lt;a href="https://amzn.to/33VJUPg"&gt;https://amzn.to/33VJUPg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a lot of diet pills and other products out there that promise to help you lose weight, but they are not the answer. Sure, there are some safe and effective products that you can use to help you lose weight, but only if you use them in conjunction with a good diet and exercise program and you‚Äôre realistic about your expectations. &lt;br&gt;
Our goal is to help men with body image issues to rely less on products that promise quick fixes and gain sustainable ‚Äúmoderation‚Äù back into their lifestyles. Visit our Weight Loss Page for more of our articles on the latest science-backed techniques for sustainable fat loss.&lt;br&gt;
Obesity is almost always a diet-related disease, but that doesn‚Äôt mean diets can‚Äôt help. One essential component of a good diet and exercise program is ensuring that carbohydrate intake is high enough to help your body burn fat while avoiding refined carbohydrates.&lt;br&gt;
Most low-carb diets are high in highly processed carbohydrates which are easily processed, become difficult to digest and cause spikes in insulin levels. Very high protein diets also often provide more refined carbohydrates than most people need, this is why ‚Äòketo‚Äô is gradually being mainstreamed by many professionals, in order to provide an ‚Äòenergy-rich‚Äô diet in an easier to manage format.&lt;br&gt;
There is nothing wrong with taking the time to learn what foods are naturally good for you and learn how your body needs to digest them, so that you can control the amounts you eat and know exactly what you‚Äôre putting into your body.&lt;br&gt;
Diet it or lose it is a catchphrase often used to promote a pretty unrealistic and poor-formatted ultra-lean (or as most people would call it) body image ideal.&lt;br&gt;
There is a lot of bias and misinformation in the body positive movement, and many are even promoting one cause or another. This could lead you to think that body positive people praise weight loss and think that people should ditch diets and live solely on vegetables, fruits and grass-fed meats.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gift-for-my-followers"&gt;
  &lt;/a&gt;
  Gift FOR my FOllowers
&lt;/h1&gt;

&lt;p&gt;Free Ebook of 100 tips to lose weight &lt;br&gt;
Direct Download link --&lt;a href="https://drive.google.com/file/d/1rdBasp6jmKzyAFHZNIRSekkr-MkQYlQp/view?usp=sharing"&gt;https://drive.google.com/file/d/1rdBasp6jmKzyAFHZNIRSekkr-MkQYlQp/view?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--btcT-sLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wbwj6d79aob6c7bjbdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btcT-sLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wbwj6d79aob6c7bjbdw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Thank you&lt;/p&gt;

</description>
      <category>weight</category>
      <category>lose</category>
      <category>how</category>
      <category>to</category>
    </item>
    <item>
      <title>Loading Javascript The Right Way!</title>
      <author>Vivek Alhat</author>
      <pubDate>Tue, 18 May 2021 10:15:16 +0000</pubDate>
      <link>https://dev.to/vivekalhat/loading-javascript-the-right-way-4lb4</link>
      <guid>https://dev.to/vivekalhat/loading-javascript-the-right-way-4lb4</guid>
      <description>&lt;p&gt;Javascript is one of the most important parts of web development. You can add functionality to your website using javascript. In order to use the javascript in a web application, you need to import it inside an HTML file. There are two primary ways to insert javascript into your website. These are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internal Javascript&lt;/li&gt;
&lt;li&gt;External Javascript&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#internal-javascript"&gt;
  &lt;/a&gt;
  Internal Javascript
&lt;/h2&gt;

&lt;p&gt;In this approach, you can write javascript code directly inside an HTML file. You need to use a script tag to do so.&lt;br&gt;
e.g: &lt;code&gt;&amp;lt;script&amp;gt; JS goes here &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#external-javascript"&gt;
  &lt;/a&gt;
  External Javascript
&lt;/h2&gt;

&lt;p&gt;In this approach, you can write javascript inside a separate file. The extension of this file is &lt;code&gt;.js&lt;/code&gt;. In order to use this file, you need to import it inside the HTML. You can do this by using a script tag.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;&amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now the main question is where should we actually import the javascript file?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can place the javascript file either in the head section of the HTML or at the end of the body tag. The way you place the javascript file can affect the code execution.&lt;/p&gt;

&lt;p&gt;Let's see this with the help of an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// index.html

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8" /&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&amp;gt;
    &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;title&amp;gt;Ecdysis&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
     &amp;lt;p id="text"&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// script.js

document.getElementById("text").innerHTML = "This is a paragraph tag";  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTML is parsed in the top to bottom manner. In the above example, we have written javascript to change the text of paragraph tag with id &lt;em&gt;text&lt;/em&gt;. The above code won't work and it will return an error because HTML is executed in a top to bottom manner. As soon as control reaches the javascript file, the javascript will be executed before the P tag is actually rendered in the browser.&lt;/p&gt;

&lt;p&gt;We can solve this error in two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Placing javascript at the end of the HTML&lt;/li&gt;
&lt;li&gt;Using Async and Defer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we place javascript at the end of the HTML, it is executed after the entire HTML code is rendered in the browser. After the P tag is rendered then javascript is executed without getting any error.&lt;/p&gt;

&lt;p&gt;Another method is to use async and defer. In this method, javascript will be in the head section only but we can add async or defer keywords inside the script tag to execute the JS without any error.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;&amp;lt;script src="script.js" defer&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In async, when the javascript is encountered while parsing HTML the browser loads JS in parallel while parsing HTML. As soon as JS is completely loaded browser stops rendering HTML then it executes javascript code. After executing the javascript, it continues parsing HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72JZfO2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c46clny4yrogs84krtfo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72JZfO2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c46clny4yrogs84krtfo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In defer, the browser loads javascript in parallel while parsing HTML but javascript code is executed after parsing the entire HTML code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85yIQcD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kmgu998nqas7yzrnpfr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85yIQcD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kmgu998nqas7yzrnpfr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So by using async or defer, we can execute javascript safely by placing it inside the head section.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best practice is to put all the javascript files in the head section of the HTML.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>es6</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>What Are The Most Important Things to Keep in Mind When Building a Portfolio Website? ‚ö°</title>
      <author>Anastasia üèÑüèª‚Äç‚ôÄÔ∏è</author>
      <pubDate>Tue, 18 May 2021 10:01:12 +0000</pubDate>
      <link>https://dev.to/coffeestasia/what-are-the-most-important-things-to-keep-in-mind-when-building-a-portfolio-website-3g8g</link>
      <guid>https://dev.to/coffeestasia/what-are-the-most-important-things-to-keep-in-mind-when-building-a-portfolio-website-3g8g</guid>
      <description>&lt;p&gt;What a perfect developer portfolio should include? What advice would you give to Bootcamp graduates and seasoned developers?  &lt;/p&gt;

&lt;p&gt;You are welcome to showcase your portfolios üôå&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>100daysofcode</category>
      <category>discuss</category>
    </item>
  </channel>
</rss>
