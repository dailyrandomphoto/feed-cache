<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Beginner Coding Apps For Android</title>
      <author>Jonny</author>
      <pubDate>Tue, 26 Oct 2021 07:46:34 +0000</pubDate>
      <link>https://dev.to/johnn/best-beginner-coding-apps-for-android-2146</link>
      <guid>https://dev.to/johnn/best-beginner-coding-apps-for-android-2146</guid>
      <description>&lt;p&gt;Programming skills open doors to dozens of lucrative tech careers. And there‚Äôs never been a better or easier time to learn. Just like learning any other language, coding requires regular practice to master. But it‚Äôs not always easy for people to find time to practice in front of a computer. That‚Äôs why coding apps are so helpful. In this article, we‚Äôll cover the best coding apps on iOS and Android for those who want to learn to code.¬†&lt;/p&gt;
&lt;br&gt;Read More : &lt;b&gt;&lt;a href="https://www.codelivly.com/best-coding-apps-for-beginners/"&gt;Best Beginner Coding Apps For Android&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>15+üòç reasons why you should learn JavaScript right now</title>
      <author>Jonny</author>
      <pubDate>Tue, 26 Oct 2021 07:44:54 +0000</pubDate>
      <link>https://dev.to/johnn/15-reasons-why-you-should-learn-javascript-right-now-1ak5</link>
      <guid>https://dev.to/johnn/15-reasons-why-you-should-learn-javascript-right-now-1ak5</guid>
      <description>&lt;p&gt;There are two reasons why it‚Äôs sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There‚Äôs Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that‚Äôs not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there‚Äôs no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go.¬†&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;15+üòç reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Mine Ripple XRP with Your Computer Under 5 Minutes in 2021</title>
      <author>Course Probe</author>
      <pubDate>Tue, 26 Oct 2021 07:38:05 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-mine-ripple-xrp-with-your-computer-under-5-minutes-in-2021-4hlk</link>
      <guid>https://dev.to/courseprobe/how-to-mine-ripple-xrp-with-your-computer-under-5-minutes-in-2021-4hlk</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining Ripple XRP in 2021 with a CPU or GPUs!&lt;/p&gt;

&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and XRP in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining Ripple XRP with any computer in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining XRP with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;XRP is a digital asset built for payments. It is the native digital asset on the XRP Ledger‚Äîan open-source, permissionless and decentralized blockchain technology that can settle transactions in 3-5 seconds.&lt;/p&gt;

&lt;p&gt;XRP can be sent directly without needing a central intermediary, making it a convenient instrument in bridging two different currencies quickly and efficiently.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How Is XRP Used?&lt;/p&gt;

&lt;p&gt;Faster, less costly and more scalable than any other digital asset, XRP and the XRP Ledger are used to power innovative technology across the payments space.&lt;/p&gt;

&lt;p&gt;Ripple is focused on building technology to help unleash new utility for XRP and transform global payments. Third parties are also pursuing other XRP-related use cases.&lt;/p&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend getting Trustwallet in order for you to get a public Address for XRP to receive your funds.&lt;/p&gt;

&lt;p&gt;You can visit the Official Site &lt;a href="https://trustwallet.com/"&gt;TrustWallet&lt;/a&gt; and Download it from there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine XRP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your Ripple XRP Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OBrJWXUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bhwlxu3gwwefasif3hh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OBrJWXUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bhwlxu3gwwefasif3hh.png" alt="Unmineable XRP mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box (Recommended, not mandatory).&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;If you are using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.bat" or "start.com" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u XRP:rDE9nDFxx7pxEFACbpFZbV1o3AxwMAGf4x.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the XRP: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example XRP and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, Ripple XRP.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. In this example Binance Smart Chain is used and you would receive a CAKE token on the BSC blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Referral Disclosure:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Please read the Unmineable Referral Policy at the following link to better understand How the referral code works in detail &lt;a href="https://www.unmineable.com/referrals"&gt;Unmineable Referrals&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>ripple</category>
    </item>
    <item>
      <title>API Testing - Executing API Tests on the command line</title>
      <author>Dheeraj Aggarwal</author>
      <pubDate>Tue, 26 Oct 2021 07:36:08 +0000</pubDate>
      <link>https://dev.to/dheerajaggarwal/api-testing-executing-api-tests-on-the-command-line-jia</link>
      <guid>https://dev.to/dheerajaggarwal/api-testing-executing-api-tests-on-the-command-line-jia</guid>
      <description>&lt;p&gt;vREST NG allows you to write your API tests via easy-to-use UI and scriptless assertions. And you may execute them using the command line module by just providing the project directory path. This video explains how you execute those API tests on the command line.&lt;/p&gt;

&lt;p&gt;vREST NG is a script less API test automation tool. It helps you to write maintainable test cases quickly for functional and regression testing of APIs. You can download and install the vREST NG application directly on Windows, OSX, and Linux via our website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Link:&lt;/strong&gt; &lt;a href="https://youtu.be/wDUDCPfbphk"&gt;https://youtu.be/wDUDCPfbphk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Testing Tutorials Playlist:&lt;/strong&gt; &lt;a href="https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0"&gt;https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://vrest.io/?utm_source=devto&amp;amp;utm_medium=devto-desc&amp;amp;utm_campaign=video"&gt;vREST NG Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/NtRa7kw"&gt;Community Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meetings.hubspot.com/dheeraj-aggarwal"&gt;Book a Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please do like and share if you found this video helpful and let the voice heard by the testing community. Also, let us know your feedback by commenting on this post.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>tutorial</category>
      <category>apitesting</category>
      <category>vrest</category>
    </item>
    <item>
      <title>PHP OOP</title>
      <author>Bazeng</author>
      <pubDate>Tue, 26 Oct 2021 07:30:03 +0000</pubDate>
      <link>https://dev.to/bazeng/php-oop-2ilb</link>
      <guid>https://dev.to/bazeng/php-oop-2ilb</guid>
      <description>&lt;p&gt;OOP stands for Object-Oriented Programming. Object-oriented programming is about creating objects that contain both data and functions, this is different from Procedural programming which is about writing procedures or functions that perform operations on the data.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#why-oop"&gt;
  &lt;/a&gt;
  Why OOP?
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;OOP is faster and easier to execute&lt;/li&gt;
&lt;li&gt;OOP provides a clear structure for the programs&lt;/li&gt;
&lt;li&gt;OOP helps to keep the PHP code DRY "Don't Repeat Yourself", and 
makes the code easier to maintain, modify and debug&lt;/li&gt;
&lt;li&gt;OOP makes it possible to create full reusable applications with 
less code and shorter development time&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#classes-amp-objects"&gt;
  &lt;/a&gt;
  Classes &amp;amp; Objects
&lt;/h6&gt;

&lt;p&gt;Classes and objects are the two main aspects of object-oriented programming.&lt;/p&gt;

&lt;p&gt;For example&lt;/p&gt;

&lt;p&gt;So, a class is a template for objects, and an object is an instance of a class.&lt;/p&gt;

&lt;p&gt;When the individual objects are created, they inherit all the properties and behaviors from the class, but each object will have different values for the properties.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#class"&gt;
  &lt;/a&gt;
  Class
&lt;/h6&gt;

&lt;p&gt;Let assume we have a class Person, a person has a name, age and gender.&lt;br&gt;
To define a class, use curly braces.In a class, variables are called properties and functions are called methods!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
class Person{ 
 //properties of the class
 public name;
 public age;
 public gender;
 //methods of the class
 function setName(name){
   $this-&amp;gt;name = name;
 }
 function getName(){
   return $this-&amp;gt;name;
 }
 function setAge(name){
   $this-&amp;gt;name = name;
 }
 function getAge(){
   return $this-&amp;gt;name;
 }
 function setGender(name){
   $this-&amp;gt;name = name;
 }
 function getGender(){
   return $this-&amp;gt;name;
 }


}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h6&gt;

&lt;p&gt;Classes are nothing without objects! We can create multiple objects from a class. Each object has all the properties and methods defined in the class, but they will have different property values.&lt;/p&gt;

&lt;p&gt;Objects of a class is created using the &lt;code&gt;new&lt;/code&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$person1 = new Person()
$person1-&amp;gt;setName('samuel')
echo "Name:" .$person1-&amp;gt;getName()
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#the-raw-this-endraw-keyword"&gt;
  &lt;/a&gt;
  The &lt;code&gt;$this&lt;/code&gt; Keyword
&lt;/h6&gt;

&lt;p&gt;The &lt;code&gt;$this&lt;/code&gt; keyword refers to the current object, and is only available inside methods.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#php-raw-instanceof-endraw-"&gt;
  &lt;/a&gt;
  PHP - &lt;code&gt;instanceof&lt;/code&gt;
&lt;/h6&gt;

&lt;p&gt;You can use the &lt;code&gt;instanceof&lt;/code&gt; keyword to check if an object belongs to a specific class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
$apple = new Fruit();
var_dump($Person1 instanceof Person);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>php</category>
    </item>
    <item>
      <title>10+üòçBest Tools For Developers - They Can't Live Without It</title>
      <author>Jonny</author>
      <pubDate>Tue, 26 Oct 2021 07:25:53 +0000</pubDate>
      <link>https://dev.to/johnn/10best-tools-for-developers-they-cant-live-without-it-cgg</link>
      <guid>https://dev.to/johnn/10best-tools-for-developers-they-cant-live-without-it-cgg</guid>
      <description>&lt;p&gt;¬†&lt;span&gt;The&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;b&gt;best tools for developers¬†&lt;/b&gt;&lt;span&gt;are a priority for them to work. As a developer, he always works with code editors, browsers, terminals, etc. to improve his productivity. VS Code is one of the best editors, every developer would like to work with it. I've also listed the&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;VS Code extensions for JS¬†&lt;span&gt;that are useful for a developer. And browser extensions are also a great way to improve productivity and I've also listed&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;b&gt;Chrome extensions for a developer&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;If you are a junior programmer, this will give you an idea the improve your coding skills, and if you are a senior developer, you are still learn something new from it. Extensions are one the¬†&lt;b&gt;best tools for developers.&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;Let's see the best tools for developers.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/7-best-tools-for-developers-they-cant-live-without-it/"&gt;10+üòçüî• Best Tools For Developers - They Can't Live Without It&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>TestKube 0.6.0</title>
      <author>Ole Lensmar</author>
      <pubDate>Tue, 26 Oct 2021 07:16:30 +0000</pubDate>
      <link>https://dev.to/olensmar/testkube-06-4jhc</link>
      <guid>https://dev.to/olensmar/testkube-06-4jhc</guid>
      <description>&lt;p&gt;We're happy to announce the version 0.6.0 of TestKube - an open-source test execution framework for Kubernetes. TestKube currently supports the execution of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://kubeshop.github.io/testkube/executor-postman/"&gt;Postman collections&lt;/a&gt; for testing your microservices/APIs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubeshop.github.io/testkube/executor-cypress/"&gt;Cypress tests&lt;/a&gt; for testing your web UIs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubeshop.github.io/testkube/executor-curl/"&gt;Curl commands&lt;/a&gt; for basic health/functional testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a very rudimentary dashboard for monitoring test executions and results - a demo version is running at &lt;a href="https://demo.testkube.io"&gt;https://demo.testkube.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The project docs are at &lt;a href="https://kubeshop.github.io/testkube/"&gt;https://kubeshop.github.io/testkube/&lt;/a&gt; - including installation instructions, etc.&lt;/p&gt;

&lt;p&gt;The main GitHub repo is at &lt;a href="https://github.com/kubeshop/testkube/"&gt;https://github.com/kubeshop/testkube/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TestKube is still pretty early in its development, but the long term vision is to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid vendor lock-in for test orchestration and execution in CI/CD pipelines&lt;/li&gt;
&lt;li&gt;Make it easy to orchestrate and execute any kinds of tests without having to wrap them in docker-images or providing external network access&lt;/li&gt;
&lt;li&gt;Make it possible to decouple test execution from build processes&lt;/li&gt;
&lt;li&gt;Centralise all test results in a consistent format for "actionable QA analytics"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We would love to get your feedback; could this fit into your testing activities for applications running under kubernetes? If no - why not? If yes - what can we do to make it even better?&lt;/p&gt;

&lt;p&gt;Great thanks in advance!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>testing</category>
      <category>postman</category>
      <category>cypress</category>
    </item>
    <item>
      <title>15+üòç Amazing Tips While Redesigning Your Website</title>
      <author>Jonny</author>
      <pubDate>Tue, 26 Oct 2021 07:13:17 +0000</pubDate>
      <link>https://dev.to/johnn/15-amazing-tips-while-redesigning-your-website-1mo5</link>
      <guid>https://dev.to/johnn/15-amazing-tips-while-redesigning-your-website-1mo5</guid>
      <description>&lt;p&gt;Redesigning a website may be a stressful, time-consuming, and complex task. It‚Äôs natural if the amount of information you need to know in order to build a new, fresh design repulses you. However, if you take the time to educate yourself and gain hands-on experience, you can avoid making mistakes and achieve your goals. Here are seven golden pointers for redesigning your website to get you started:&lt;/p&gt;
&lt;p&gt;When you consider rebuilding your website, you most likely imagine something huge and powerful. It‚Äôs the ideal opportunity to give your website a bold and dramatic new appearance. However, the world is not what you might assume.¬†&lt;/p&gt;

&lt;p&gt;&lt;b&gt;READ More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/7-amazing-tips-while-redesigning-your-website/&amp;amp;ved=2ahUKEwjCx8Gc_JjzAhXawzgGHeQLBh4QFnoECAQQBQ&amp;amp;usg=AOvVaw1MCPezHaMcqtc9wW14T5Lx"&gt;15+üòç Amazing Tips While Redesigning Your Website&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Dev de Direita</title>
      <author>Jean Carlo Nascimento</author>
      <pubDate>Tue, 26 Oct 2021 07:03:02 +0000</pubDate>
      <link>https://dev.to/suissa/dev-de-direita-89b</link>
      <guid>https://dev.to/suissa/dev-de-direita-89b</guid>
      <description>&lt;p&gt;Se vc √© DEV e de Direita.&lt;br&gt;
PROVO Q VC EH IDIOTA.&lt;/p&gt;

&lt;p&gt;Quer refutar sua burrice?&lt;br&gt;
POR FAVOR!!! Tente me refutar.&lt;/p&gt;

&lt;p&gt;Pq eu nem comecei a destruir suas ideias.&lt;/p&gt;

&lt;p&gt;Seja INTELIGENTE e tente defender o Bolsonaro!!!&lt;/p&gt;

&lt;p&gt;DUVIDOOOOOOOOO q algu√©m consiga.&lt;/p&gt;

&lt;p&gt;ps: vc pode ser o MAIS inteligente poss√≠vel, o q duvido; ent√£o usa  essa intelig√™ncia pra DEFENDER O PIOR PRESIDENTE DO BRASIL!&lt;br&gt;
ps2: NAO EXISTE UMA PESSOA Q CONSIGA ESSA FA√áANHA!&lt;/p&gt;

</description>
      <category>burro</category>
      <category>idiota</category>
      <category>retardado</category>
      <category>filhodeumaputa</category>
    </item>
    <item>
      <title>Day 12: Showing user location on embedded Google Maps (with Geolocation API and React)</title>
      <author>Masa Kudamatsu</author>
      <pubDate>Tue, 26 Oct 2021 06:54:35 +0000</pubDate>
      <link>https://dev.to/masakudamatsu/day-12-showing-user-location-on-embedded-google-maps-with-geolocation-api-and-react-128j</link>
      <guid>https://dev.to/masakudamatsu/day-12-showing-user-location-on-embedded-google-maps-with-geolocation-api-and-react-128j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;To create a web app that shows the user's location on embedded Google Maps with React: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a state variable that stores an instance of Google Maps, and pass this state to a button component as its prop (Section 1).&lt;/li&gt;
&lt;li&gt;Once the button is clicked, use Geolocation API to retrieve location data from the user's device, and execute the &lt;code&gt;setCenter()&lt;/code&gt; method of Google Maps JavaScript API to snap the map to the user's location (Section 2).&lt;/li&gt;
&lt;li&gt;To mark the user's location on the map, use &lt;code&gt;google.maps.Marker()&lt;/code&gt; method of Google Maps JavaScript API (Section 3).&lt;/li&gt;
&lt;li&gt;To show the range of location data error, use &lt;code&gt;google.maps.Circle()&lt;/code&gt; method to draw a circle whose radius is set in meters (Section 4).&lt;/li&gt;
&lt;li&gt;To handle Geolocation API errors, update the UI state for each error case (Section 5.3).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In doing so, we need to use React's &lt;code&gt;useRef&lt;/code&gt; hook to retain the maker for the user's location across the re-rendering of React components, a lesser-known technique of making a React app (Section 3.2).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Showing the user's location on the map is an important feature of &lt;em&gt;My Ideal Map App&lt;/em&gt;, a web app that I'm building to improve the user experiences of Google Maps. It allows the user to discover which of their saved places (e.g., cafes that they always wanted to go) are close enough to visit now (see &lt;a href="https://dev.to/masakudamatsu/creating-saas-to-solve-my-own-problem-4gk9"&gt;&lt;strong&gt;Day 1 of this blog series&lt;/strong&gt;&lt;/a&gt; for detail). &lt;/p&gt;

&lt;p&gt;Unlike Google Maps iOS/Android app, however, a web app cannot (and should not try to) show the user's location immediately after the user accesses the app (see &lt;a href="https://dev.to/masakudamatsu/day-11-learning-about-web-app-limitations-on-location-services-3gdp"&gt;&lt;strong&gt;Day 11 of this blog series&lt;/strong&gt;&lt;/a&gt; for detail). &lt;/p&gt;

&lt;p&gt;The second best option is therefore to show the user's location only after the user taps a button on the screen. &lt;/p&gt;

&lt;p&gt;How to implement such a feature is well-described in the code snippet provided by &lt;a href="https://developers.google.com/maps/documentation/javascript/geolocation"&gt;Google Maps Platform documentation&lt;/a&gt;. But it is for vanilla JavaScript. I'm using React (Next.js, to be more exact) to build &lt;em&gt;My Ideal Map App&lt;/em&gt;. And I've gone through a handful of sticking points due to how React works.&lt;/p&gt;

&lt;p&gt;For those of you who also create a React app with embedded Google Maps, let me share with you what I have learned to show the user's location on the map.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;This article will create an app like &lt;a href="https://4aa36604.mima.pages.dev/"&gt;this demo&lt;/a&gt; hosted on &lt;a href="https://pages.cloudflare.com/"&gt;Cloudflare Pages&lt;/a&gt;. Maybe you want to check it out before reading the rest of this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-setting-up"&gt;
  &lt;/a&gt;
  1. Setting up
&lt;/h2&gt;

&lt;p&gt;Let me first quickly go through how to embed Google Maps and to render a button over it. &lt;/p&gt;

&lt;p&gt;Write the component for the index page (or  &lt;code&gt;pages/index.js&lt;/code&gt;  in Next.js) as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// pages/index.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/LocatorButton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Map&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;LocatorButton&lt;/span&gt; &lt;span class="na"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Map&lt;/span&gt; &lt;span class="na"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;HomePage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;mapObject&lt;/code&gt; state variable will store an instance of the embedded Google Maps. The &lt;code&gt;&amp;lt;Map&amp;gt;&lt;/code&gt; component will embed Google Maps, pass it to &lt;code&gt;pages/index.js&lt;/code&gt; by executing the &lt;code&gt;setMapObject()&lt;/code&gt; method. Then the &lt;code&gt;pages/index.js&lt;/code&gt; will hand it over to the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; which will mark the user's current location on the embedded Google Maps.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;Map&amp;gt;&lt;/code&gt; component embeds Google Maps with the following code (if the code below is perplexing, see my blog post (&lt;strong&gt;&lt;a href="https://dev.to/masakudamatsu/3-gotchas-of-google-maps-api-when-used-with-next-js-and-eslint-p7e"&gt;Kudamatsu 2021&lt;/a&gt;&lt;/strong&gt;) in which I explain how to embed Google Maps with Next.js):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// components/Map.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@googlemaps/js-api-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Specifying HTML element to which Google Maps will be embeded &lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;googlemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Loading Google Maps JavaScript API&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_API_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;weekly&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Setting parameters for embedding Google Maps&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;34.9988127&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;135.7674863&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buttonsDisabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;fullscreenControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;mapTypeControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;streetViewControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;zoomControl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="c1"&gt;// Embedding Google Maps&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;googlemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;initialView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;buttonsDisabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NOTE&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;googlemap&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;What's important for this article is the line commented with &lt;code&gt;"NOTE"&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setMapObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This passes the embedded Google Maps as a JavaScript object up to the &lt;code&gt;pages/index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This way, the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component can access to the embedded Google Maps as its &lt;code&gt;mapObject&lt;/code&gt; prop:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// components/LocatorButton.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt; &lt;span class="na"&gt;Insert&lt;/span&gt; &lt;span class="na"&gt;the&lt;/span&gt; &lt;span class="na"&gt;button&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt; &lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  );
};

LocatorButton.propTypes = &lt;span class="si"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt;;

export default LocatorButton;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where I use &lt;code&gt;PropTypes&lt;/code&gt; to define the type of the &lt;code&gt;mapObject&lt;/code&gt; prop (see &lt;a href="https://reactjs.org/docs/typechecking-with-proptypes.html"&gt;React documentation&lt;/a&gt; for detail on &lt;code&gt;PropTypes&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;Now we're ready to mark the user's current location on the embedded Google Maps.&lt;/p&gt;



&lt;p&gt;Footnote: I use a state variable to pass &lt;code&gt;mapObject&lt;/code&gt; from &lt;code&gt;Map&lt;/code&gt; component to &lt;code&gt;LocatorButton&lt;/code&gt; component. The use of a state variable, however, causes the re-rendering of the entire app once &lt;code&gt;mapObject&lt;/code&gt; changes from its initial value of &lt;code&gt;null&lt;/code&gt; to an instance of Google Maps. This is unnecessary re-rendering, because no part of the UI changes after the map is loaded. It's something I need to investigate in the future.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-snapping-map-to-user-location"&gt;
  &lt;/a&gt;
  2. Snapping map to user location
&lt;/h2&gt;

&lt;p&gt;Showing the user's location on a map means two things: (1) marking the location on the map and (2) snapping the map to it. Let me first tackle the second ‚Äúsnapping‚Äù part, because it is relatively simple. &lt;/p&gt;

&lt;p&gt;Let's start by adding a click handler to the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
    &lt;span class="c1"&gt;// To be defined below        // ADDED&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;                              &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
      &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getUserLocation&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;   &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt; &lt;span class="na"&gt;Insert&lt;/span&gt; &lt;span class="na"&gt;the&lt;/span&gt; &lt;span class="na"&gt;button&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt; &lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is the standard way of adding an event hander in React (see &lt;a href="https://reactjs.org/docs/handling-events.html"&gt;React documentation&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Then we define the &lt;code&gt;getUserLocation()&lt;/code&gt; function as follows.&lt;/p&gt;

&lt;p&gt;First up, handle those legacy browsers that do not support &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API"&gt;Geolocation API&lt;/a&gt;, a web API that allows the browser to access to the location data in the user's device. Following the suggestion by &lt;a href="https://developers.google.com/web/fundamentals/native-hardware/user-location/#browser_support"&gt;Kinlan (2019)&lt;/a&gt;, I use the feature detection technique to handle those browsers:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code for showing the user's location&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In Section 5.3 below, I'll briefly discuss how to handle those legacy browsers.&lt;/p&gt;

&lt;p&gt;Then, for those browsers that do support Geolocation API, I retrieve the user's current location data from their device by calling the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// ADDED FROM HERE &lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// code for processing user location data           &lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="c1"&gt;// ADDED UNTIL HERE&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It's a bit tricky to understand how the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method works. Here's my understanding (see &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API/Using_the_Geolocation_API#getting_the_current_position"&gt;MDN Web Docs&lt;/a&gt; for more proper explanation). &lt;/p&gt;

&lt;p&gt;When it runs, it retrieves the user location data from their device. This is done &lt;em&gt;asynchronously&lt;/em&gt;: it won't prevent the rest of the code from running immediately after. Once the location data is obtained, it's passed to a function specified as the argument for &lt;code&gt;getCurrentPosition()&lt;/code&gt;. In the above code, this data is given the name of &lt;code&gt;position&lt;/code&gt;. Taking &lt;code&gt;position&lt;/code&gt; as an argument, this function will be executed.&lt;/p&gt;

&lt;p&gt;The user location data takes the form of a JavaScript object formally called the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPosition"&gt;&lt;code&gt;GeolocationPosition&lt;/code&gt; interface&lt;/a&gt;, which has a property called &lt;code&gt;coords&lt;/code&gt;. This &lt;code&gt;coords&lt;/code&gt; property in turn stores the user's location coordinates as its own &lt;code&gt;latitude&lt;/code&gt; and &lt;code&gt;longitude&lt;/code&gt; properties. &lt;/p&gt;

&lt;p&gt;So I store the coordinates of the user's location as a JavaScript object called &lt;code&gt;userLocation&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;            &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
          &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
          &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;                                &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I use property names &lt;code&gt;lat&lt;/code&gt; and &lt;code&gt;lng&lt;/code&gt; because that's how Google Maps JavaScript API refers to the coordinates of locations (known as &lt;a href="https://developers.google.com/maps/documentation/javascript/reference/coordinates#LatLng"&gt;&lt;code&gt;LatLng&lt;/code&gt; class&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now we're ready to use the &lt;code&gt;setCenter()&lt;/code&gt; method from Google Maps JavaScript API to snap the map to the user's current location:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCenter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code for legacy browsers&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;mapObject&lt;/code&gt;, if you remember, refers to the embedded Google Maps, passed as a prop to the &lt;code&gt;LocatorButton&lt;/code&gt; component (see Section 1 above if your memory slips).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-marking-users-current-location"&gt;
  &lt;/a&gt;
  3. Marking user's current location
&lt;/h2&gt;

&lt;p&gt;Now it's time to mark the user's location on the map. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#31-marker"&gt;
  &lt;/a&gt;
  3.1 Marker
&lt;/h3&gt;

&lt;p&gt;As a marker, I imitate what Google Maps app does: a white-rimmed circle in Google's brand blue:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" alt="White-rimmed blue circle shown on Google Maps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A screenshot of Google Maps app in which the blue dot indicates the user's current location&lt;/strong&gt; (image source: &lt;a href="https://support.google.com/maps/thread/71969187/my-google-map-cannot-show-direction-direction-pointer-on-blue-dot-is-missing-what-can-i-do?hl=en"&gt;Google Maps Help&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I've learned about how to render this particular type of the blue dot from &lt;a href="https://github.com/ChadKillingsworth/geolocation-marker/blob/master/src/geolocation-marker.js"&gt;the source code of Geolocation Marker&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;fillOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SymbolPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CIRCLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;strokeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where I define the &lt;code&gt;color&lt;/code&gt; object as design tokens in a separate file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// designtokens.js&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#4285F4`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`rgb(255,255,255)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I prefer this way of setting color because the color code itself doesn't tell me anything about the reason behind the color choice. For example, the color code &lt;code&gt;#4285F4&lt;/code&gt; is the blue used in Google's logo (source: &lt;a href="https://usbrandcolors.com/google-colors/"&gt;U.S. Brand Colors&lt;/a&gt;). So I call it &lt;code&gt;google-blue 100&lt;/code&gt; where &lt;code&gt;100&lt;/code&gt; refers to the opacity of 1. (If I need to use semi-transparent Google Blue, I can then call it &lt;code&gt;google-blue 50&lt;/code&gt;, for example.)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#32-adding-marker-to-map"&gt;
  &lt;/a&gt;
  3.2 Adding marker to map
&lt;/h3&gt;

&lt;p&gt;With Google Maps JavaScript API, we can add a marker to the map as follows. First, create a marker as a JavaScript object with the &lt;code&gt;google.maps.Marker()&lt;/code&gt; method. Then, add the Marker object to the map with its own method &lt;code&gt;setMap()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sounds simple. But it actually isn't, because I'm using React to build the app.&lt;/p&gt;

&lt;p&gt;NOTE: If you only want to know the code that works, skip to the sub-section entitled "Fourth Attempt" below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My first attempt didn't work properly. I created a Marker object:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;icon&lt;/code&gt; property refers to the marker icon (which I have defined as &lt;code&gt;blueCircle&lt;/code&gt;), &lt;code&gt;position&lt;/code&gt; to the coordinates of the user's current position (which I have defined as &lt;code&gt;userLocation&lt;/code&gt;), and &lt;code&gt;title&lt;/code&gt; to the text to be shown when the user hovers over the marker. (See &lt;a href="https://developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions"&gt;Google Maps Platform documentation&lt;/a&gt; for all the options available for the Marker object.)&lt;/p&gt;

&lt;p&gt;Then, I added the Marker object to the embedded map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;mapObject&lt;/code&gt; refers to the embedded Google Maps, passed as a prop to the &lt;code&gt;LocatorButton&lt;/code&gt; component (as explained in Section 1 above).&lt;/p&gt;

&lt;p&gt;This code caused a problem when the user taps the locator button again. In this situation, the above code adds a new marker at the current location &lt;em&gt;without&lt;/em&gt; removing the marker at the previous location.&lt;/p&gt;

&lt;p&gt;Which means we first need to &lt;em&gt;remove&lt;/em&gt; the outdated marker before adding the updated one. To do so, we need to use the Marker object's method &lt;code&gt;setMap(null)&lt;/code&gt;. Without running this, we would be adding more and more markers to the map.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My second attempt was as follows (which turned out to be not desirable): I checked whether we have already created the Marker object. If so, I'd remove the marker from the map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, I created a new marker tied to the user's current position:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't code like this&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This code worked fine, but once I started using the &lt;code&gt;useState()&lt;/code&gt; hook  inside the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component in order to change the UI in response to user actions (see &lt;a href="https://dev.to/masakudamatsu/day-13-flashing-tapped-button-while-user-is-waiting-with-react-and-styled-components-1ii4"&gt;&lt;strong&gt;Day 13 of this blog series&lt;/strong&gt;&lt;/a&gt;), the previous marker wasn't removed when the user tapped the button for the second time.&lt;/p&gt;

&lt;p&gt;Why? Because using the &lt;code&gt;useState()&lt;/code&gt; hook causes the re-rendering of the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component, which means the entire code gets re-run, including&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This means that every time the component gets re-rendered, the &lt;code&gt;marker&lt;/code&gt; variable gets reset, losing the data on the previous user location. That's why the previous marker fails to be removed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Third Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My initial work around for this rerendering problem was to define &lt;code&gt;marker&lt;/code&gt; outside the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component (which worked, but turned out to be not the best practice for building a React app):&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// This code works, but not the best practice&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This way, the &lt;code&gt;marker&lt;/code&gt; variable will be retained even when the &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component gets re-rendered. So the data on the user's previous location won't be lost, and the previous marker will get removed.&lt;/p&gt;

&lt;p&gt;But then, while I was working for dealing with another issue (see &lt;strong&gt;Day 14 of this blog series&lt;/strong&gt;), I learned about how to use the &lt;code&gt;useRef()&lt;/code&gt; hook to retain the data across the re-rendering of React components.&lt;/p&gt;

&lt;p&gt;Sounds like a solution for removing the previous marker on the user location!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fourth Attempt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So I've revised the code as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// ADDED&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LocatorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;          &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
      &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
    &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blueDot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You are here!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;First, I define the &lt;code&gt;marker&lt;/code&gt; variable by using the &lt;code&gt;useRef&lt;/code&gt; hook. Then, I replace &lt;code&gt;marker&lt;/code&gt; in the previous version of the code with &lt;code&gt;marker.current&lt;/code&gt;. This is because the &lt;code&gt;useRef&lt;/code&gt; hook creates an object whose &lt;code&gt;current&lt;/code&gt; property will keep the value across the re-rendering of components (see &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;React documentation&lt;/a&gt; for detail). It also makes the code more readable: we're now talking about the &lt;em&gt;current&lt;/em&gt; value of &lt;code&gt;marker&lt;/code&gt; at each run of the re-rendering, rather than &lt;code&gt;marker&lt;/code&gt; which sounds like a constant value.&lt;/p&gt;

&lt;p&gt;Now I ask myself: what's the difference between &lt;code&gt;useRef&lt;/code&gt; and defining a variable outside the component?&lt;/p&gt;

&lt;p&gt;Googling this question immediately got me to &lt;a href="https://stackoverflow.com/a/57444430/11847654"&gt;Vash (2019)&lt;/a&gt;, who explains the difference with an example code. In a nutshell, the difference emerges if I would use more than one &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component. By using &lt;code&gt;useRef&lt;/code&gt;, each instance of the component keeps track of its own value. By defining a variable outside the component, however, all the instances of the component share the same value, which can lead to a weird situation as in &lt;a href="https://codesandbox.io/s/useref-vs-variable-scegg"&gt;this CodeSandbox example by Vash (2019)&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;For my case, it doesn't matter as I won't use more than one &lt;code&gt;&amp;lt;LocatorButton&amp;gt;&lt;/code&gt; component, at least for now. But maybe I will. We never know. So it is safe to use &lt;code&gt;useRef&lt;/code&gt; to keep track of data across re-rendering.   &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-showing-location-error-range"&gt;
  &lt;/a&gt;
  4. Showing location error range
&lt;/h2&gt;

&lt;p&gt;The GPS functionality of devices cannot perfectly pinpoint the user's location. To indicate the range of error on the map, I want to add a semi-transparent blue circle around the blue circle, as Google Maps app does:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sP2Hmaev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bwd6d00ra6vv1ya1vsc.jpeg" alt="White-rimmed blue circle shown on Google Maps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A screenshot of Google Maps app in which the semi-transparent blue circle shows the range of error on the user's current location&lt;/strong&gt; (image source: &lt;a href="https://support.google.com/maps/thread/71969187/my-google-map-cannot-show-direction-direction-pointer-on-blue-dot-is-missing-what-can-i-do?hl=en"&gt;Google Maps Help&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;To do so, we first need to extract the GPS information on the range of error. The Geolocation API allows us to get this piece of information in the following way:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;position.coords.accuracy&lt;/code&gt; gives the radius &lt;em&gt;in meters&lt;/em&gt; of a circle within which the user's current location falls 95 times out of 100 cases (source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates/accuracy"&gt;MDN Web Docs&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;To draw this circle, however, we cannot use the Marker object, which doesn't allow us to set its size &lt;em&gt;in meter&lt;/em&gt;. It took a while for me to figure out how to work around this limitation, but, again from &lt;a href="https://github.com/ChadKillingsworth/geolocation-marker/blob/master/src/geolocation-marker.js"&gt;the source code of Geolocation Marker&lt;/a&gt;, I've finally learned that the Circle object does the job (see &lt;a href="https://developers.google.com/maps/documentation/javascript/shapes#circles"&gt;Google Maps Platform documentation&lt;/a&gt; for detail).&lt;/p&gt;

&lt;p&gt;The Circle object works in a similar fashion to the Marker object. So I first check if it's already been added to the map. If so, remove it from the map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;           &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
    &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;                                       &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, define a new Circle object with the &lt;code&gt;google.maps.Circle()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// ADDED FROM HERE&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-dark 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;fillOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-light 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;strokeOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;zIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// ADDED UNTIL HERE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;center&lt;/code&gt; property refers to the center of the circle (which is set to be &lt;code&gt;userLocation&lt;/code&gt;, the user's current location), and &lt;code&gt;radius&lt;/code&gt; to the radius of the circle (which is set to be &lt;code&gt;errorRange&lt;/code&gt; defined above). The &lt;code&gt;zIndex&lt;/code&gt; property makes sure that the circle will be overlaid on the blue circle. The other properties define the appearance of the circle (see &lt;a href="https://developers.google.com/maps/documentation/javascript/reference/polygon#CircleOptions"&gt;Google Maps Platform documentation&lt;/a&gt; for all the options available for Circle objects) where I define the colors as:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// designtokens.js&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#4285F4`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-dark 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#61a0bf`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-light 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`#1bb6ff`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`rgb(255,255,255)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;These color codes are borrowed from &lt;a href="https://github.com/ChadKillingsworth/geolocation-marker/blob/master/src/geolocation-marker.js"&gt;the source code of Geolocation Marker&lt;/a&gt;. What's nice about putting all the color codes together in one file is that we can immediately start reconsidering the change of the color palette. Maybe I want to redefine the light and dark variants of &lt;code&gt;google-blue&lt;/code&gt;. If so, I can just look at this file, rather than searching through the entire codebase.&lt;/p&gt;

&lt;p&gt;Finally, I add the circle to the map:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userLocation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fillColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-dark 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;fillOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;errorRange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google-blue-light 100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;strokeOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;zIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyCircle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-improving-ux"&gt;
  &lt;/a&gt;
  5. Improving UX
&lt;/h2&gt;

&lt;p&gt;The code written so far does the basic job to tell the user where they are on the map. There are a few more things to do, however, for enhancing the user experiences.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#51-using-cache-up-to-one-second"&gt;
  &lt;/a&gt;
  5.1 Using cache up to one second
&lt;/h3&gt;

&lt;p&gt;First, we can use the cached GPS information to make it faster to show the current location. I think 1 second is a reasonable amount of time to keep the cache. Humans walk about 1.4 meters per second (I cannot find the exact source for this data, but many say it's about 1.4 meters per second). The range of location error with my iPhone SE (2nd Gen.) is about 12 meters. Using the location data one second ago, therefore, won't terribly mislocate the user on the map. &lt;/p&gt;

&lt;p&gt;To allow the Geolocation API to use the cached GPS information within the past one second, I add an optional parameter for &lt;code&gt;getCurrentPosition()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// All the code descirbed in this article so far&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;where the &lt;code&gt;maximumAge&lt;/code&gt; option refers to the number of milliseconds to cache the location data (source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition"&gt;MDN Web Docs&lt;/a&gt;).    &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#52-flashing-the-button-while-waiting"&gt;
  &lt;/a&gt;
  5.2 Flashing the button while waiting
&lt;/h3&gt;

&lt;p&gt;Second, we need to tell the user that the app is working hard to locate where they are, while they are waiting for their location to be shown on the map after tapping the button. It can take a while. If there's no UI change during this waiting time, the user may misunderstand that the app gets frozen or the button doesn't function at all.&lt;/p&gt;

&lt;p&gt;To tell the user that the app is working, we can make the trigger button keep flashing until the user's location is shown on the map.&lt;/p&gt;

&lt;p&gt;The implementation of this feature requires a long explanation, and it's rather a different topic from the one in this article. So it's described in &lt;strong&gt;Day 13 of this blog series&lt;/strong&gt;:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/masakudamatsu" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecVAc1ot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PLbsBsYv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/522915/238cfd20-65e5-4b05-8803-2c4c18f29192.jpeg" alt="masakudamatsu"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/masakudamatsu/day-13-flashing-tapped-button-while-user-is-waiting-with-react-and-styled-components-1ii4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Day 13: Flashing tapped button while user is waiting (with React and Styled Components)&lt;/h2&gt;
      &lt;h3&gt;Masa Kudamatsu „Éª Oct 26 „Éª 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#styledcomponents&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cssanimation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#53-error-handling"&gt;
  &lt;/a&gt;
  5.3 Error handling
&lt;/h3&gt;

&lt;p&gt;There are four possible errors when we use Geolocation API. When these errors occur, we should tell the user what happens, why it happens, and how they can deal with the error (&lt;a href="https://freshsparks.com/user-experience-tips-best-error-messages/"&gt;Gregory 2021&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I'm still working on exactly how to show these error messages for the user. Making such a dialog in an accessible way is quite a bit of work (see &lt;a href="https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/"&gt;Giraudel 2021&lt;/a&gt;). In this article, I only describe how to change the UI state to show error dialogs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation API unsupported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, the user's browser may not support Geolocation API. This is unlikely to happen in 2021: the browsers supporting Geolocation API account for 96.78% of global page views in September 2021 (&lt;a href="https://caniuse.com/mdn-api_geolocation"&gt;Can I Use 2021&lt;/a&gt;). But just in case.&lt;/p&gt;

&lt;p&gt;I set the &lt;code&gt;status&lt;/code&gt; variable to be &lt;code&gt;geolocationDenied&lt;/code&gt; in this case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;geolocationDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then show a dialog explaining what happens if &lt;code&gt;status&lt;/code&gt; takes the value of &lt;code&gt;geolocationDenied&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Location service permission denied&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Second, the user may have disabled location services with their browser/OS. This happens either immediately after pressing the button (because the user has turned off the location services before) or after the user is asked for permission upon the button click and responds with no. &lt;/p&gt;

&lt;p&gt;This error is likely to happen because not an ignorable number of people are concerned about privacy on the web (e.g., &lt;a href="https://www.fastcompany.com/90454921/apple-and-googles-tough-new-location-privacy-controls-are-working"&gt;Newman 2020&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;If Geolocation API is unable to retrieve user location data because of the disabled location services, the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method returns the error code equal to 1 (source: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError"&gt;MDN Web Docs&lt;/a&gt;). So we can create an error-handling function and specify it as the optional argument for &lt;code&gt;getCurrentPosition()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUserLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="c1"&gt;// ADDED FROM HERE&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permissionDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;// ADDED UNTIL HERE&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;                               &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
        &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;geolocationDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the Geolocation API error code is 1, then we set the value of &lt;code&gt;status&lt;/code&gt; to be &lt;code&gt;permissionDenied&lt;/code&gt;. We can then render a dialog explaining what happens to the user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation API failure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Third, the Geolocation API may fail to obtain the user's location data from their device for an unknown reason. It's not clear to me when this can happen. But in this case, the Geolocation API error code is 2. So we can revise the &lt;code&gt;handleGeolocationError&lt;/code&gt; function as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permissionDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;      &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;positionUnavailable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ADDED&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Render the corresponding dialog if the &lt;code&gt;status&lt;/code&gt; takes the value of &lt;code&gt;positionUnavailable&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geolocation API not responding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally, there may be a situation where Geolocation API cannot obtain user location data for a long period of time. If this happens, with the current setting, the user cannot tell whether the app is functioning or not.&lt;/p&gt;

&lt;p&gt;We should tell the user what is going on. &lt;a href="https://developers.google.com/web/fundamentals/native-hardware/user-location/"&gt;Kinlan (2019)&lt;/a&gt; recommends setting a timeout of 10 seconds after which the user gets notified that it took more than 10 seconds to retrieve the location data. To implement this feature, we first need to add &lt;code&gt;timeout&lt;/code&gt; as an additional optional parameter of the &lt;code&gt;getCurrentPosition()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// REVISED&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make Geolocation API return the error code of 3 if there is no response after 10,000 milliseconds (i.e., 10 seconds). So I can revise the &lt;code&gt;handleGeolocationError()&lt;/code&gt; as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleGeolocationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;permissionDenied&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;positionUnavailable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;timeout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then render the corresponding dialog when &lt;code&gt;status&lt;/code&gt; takes the value of &lt;code&gt;timeout&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;With the code explained in this article (and &lt;a href="https://dev.to/masakudamatsu/day-13-flashing-tapped-button-while-user-is-waiting-with-react-and-styled-components-1ii4"&gt;&lt;strong&gt;Day 13 of this blog series&lt;/strong&gt;&lt;/a&gt; for flashing the button), I've uploaded &lt;a href="https://4aa36604.mima.pages.dev/"&gt;a demo app&lt;/a&gt; to Cloudflare Pages. Try to click the button. When asked for permission to use location services, answer both yes and no, to see how the UI changes. &lt;/p&gt;

&lt;p&gt;If you notice something weird, file a bug report by posting a comment to this article. I'll apprecaite your help to improve &lt;em&gt;My Ideal Map App&lt;/em&gt;! ;-)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-step"&gt;
  &lt;/a&gt;
  Next step
&lt;/h2&gt;

&lt;p&gt;If &lt;em&gt;My Ideal Map App&lt;/em&gt; were a desktop app, it would be good enough to show the user's location each time the user clicks the button. However, the app is also meant to be used with a smartphone while the user is moving around in a city. It's more desirable for the app to keep track of the user location, updating the marker constantly. Next step is to implement such a feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Can I Use (2021) ‚Äú&lt;a href="https://caniuse.com/mdn-api_geolocation"&gt;Geolocation API&lt;/a&gt;‚Äù, &lt;em&gt;Can I Use?&lt;/em&gt;, accessed on Oct 25, 2021.&lt;/p&gt;

&lt;p&gt;Giraudel, Kitty (2021) ‚Äú&lt;a href="https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/"&gt;Creating An Accessible Dialog From Scratch&lt;/a&gt;‚Äù, &lt;em&gt;Smashing Magazine&lt;/em&gt;, Jul 28, 2021.&lt;/p&gt;

&lt;p&gt;Gregory, Sonia (2021) ‚Äú&lt;a href="https://freshsparks.com/user-experience-tips-best-error-messages/"&gt;Best Error Messages: 5 Tips For A User-Friendly Experience&lt;/a&gt;‚Äù, &lt;em&gt;FreshSparks&lt;/em&gt;, Sep 26, 2021 (last updated).&lt;/p&gt;

&lt;p&gt;Kinlan, Paul (2019) ‚Äú&lt;a href="https://developers.google.com/web/fundamentals/native-hardware/user-location/"&gt;User Location&lt;/a&gt;‚Äù, &lt;em&gt;Web Fundamentals&lt;/em&gt;, Feb 12, 2019.&lt;/p&gt;

&lt;p&gt;Kudamatsu, Masa (2021) ‚Äú&lt;a href="https://dev.to/masakudamatsu/3-gotchas-of-google-maps-api-when-used-with-next-js-and-eslint-p7e"&gt;4 Gotchas of embedding Google Maps with Next.js&lt;/a&gt;‚Äù, &lt;em&gt;Dev.to&lt;/em&gt;, Feb 12, 2021.&lt;/p&gt;

&lt;p&gt;Newman, Jared (2020) ‚Äú&lt;a href="https://www.fastcompany.com/90454921/apple-and-googles-tough-new-location-privacy-controls-are-working"&gt;Apple and Google‚Äôs tough new location privacy controls are working&lt;/a&gt;‚Äù, &lt;em&gt;FastCompany&lt;/em&gt;, Jan 23, 2020.&lt;/p&gt;

&lt;p&gt;Vash, Dennis (2019) ‚Äú&lt;a href="https://stackoverflow.com/a/57444430/11847654"&gt;&lt;code&gt;useRef&lt;/code&gt; will assign a reference for each component, while a variable defined outside a function component scope will only assign once...&lt;/a&gt;‚Äù, &lt;em&gt;Stack Overflow&lt;/em&gt;, Aug 10, 2019.&lt;/p&gt;

</description>
      <category>geolocation</category>
      <category>react</category>
      <category>googlemaps</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Intro to Webhooks with Python</title>
      <author>Rahul Banerjee</author>
      <pubDate>Tue, 26 Oct 2021 06:21:28 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/intro-to-webhooks-with-python-1ikh</link>
      <guid>https://dev.to/rahulbanerjee99/intro-to-webhooks-with-python-1ikh</guid>
      <description>&lt;p&gt;This tutorial will be an introduction to the concept of webhooks. We will also build a simple Flask server that can receive GitHub webhooks. We will also see how to expose our local hosts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-webhook"&gt;
  &lt;/a&gt;
  What is a webhook?
&lt;/h3&gt;

&lt;p&gt;Before talking about webhooks, let's talk about APIs. Below is the data flow for an API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nWyhs3ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8s1cujrspgu6tewi3lh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nWyhs3ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8s1cujrspgu6tewi3lh.png" alt="API Data Flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You make a GET/POST request to the API and you get a response back. If you want to learn more about working with APIs, check out my article on working with &lt;a href="https://www.realpythonproject.com/how-to-authenticate-using-keys-basicauth-oauth-in-python/"&gt;APIs with Python&lt;/a&gt; or my article on working with &lt;a href="https://www.realpythonproject.com/how-to-authenticate-using-keys-basicauth-oauth2-in-javascript/"&gt;APIs with JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Consider the Github API, what if we wanted to build an API that would send use an email every time a new issue is made in a repo. One way would be to build an API that would make a request every 1-2 minutes to check if a new issue is made and notify us. This process is known as &lt;a href="https://tyk.io/blog/moving-beyond-polling-to-async-apis/#:~:text=APIs%20commonly%20require%20a%20client,requests%20data%20from%20the%20server.&amp;amp;text=This%20pattern%20is%20known%20as,or%20notified%20of%20backend%20events."&gt;polling&lt;/a&gt;. Basically we would have to periodically make requests to check for a new issue. However, this seems inefficient. What if GitHub makes a request to our API whenever a new issue is created. This is known as a webhook. Instead of us making periodic requests, we just give GitHub our API's endpoint and whenever a new issue is created, a request will be made to the endpoint we gave to Github. Webhooks are also known as Reverse APIs. Below is a comparison between polling and webhooks. This image was inspired by &lt;a href="https://www.mailjet.com/blog/news/what-is-webhook/"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUkq7-wI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635228126977/UzxuZmJIr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUkq7-wI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635228126977/UzxuZmJIr.png" alt="Polling vs WebHooks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you might have noticed, a lot of requests are made and depending on how frequently we make requests, there might be a slight delay between the new issue being created and our API getting notified.&lt;/p&gt;

&lt;p&gt;Let's create an API to receive a request whenever a new Issue is created in a Github repo.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-simple-flask-server"&gt;
  &lt;/a&gt;
  Create a simple Flask Server
&lt;/h3&gt;

&lt;p&gt;First, let's create a hello world endpoint.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now we need to create an endpoint to receive the request from the GitHub API. This will be a standard endpoint that accepts POST requests.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;I read the docs and knew the keys for the JSON objects. You can use different keys to access more data like issue labels etc.&lt;/p&gt;

&lt;p&gt;Now you can run your flask server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python3 __init__.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#exposing-our-localhost-url-publically"&gt;
  &lt;/a&gt;
  Exposing our localhost URL publically
&lt;/h3&gt;

&lt;p&gt;Webhooks require a public API endpoint since they can not make requests to endpoints such as '&lt;a href="http://127.0.0.1:5000/"&gt;http://127.0.0.1:5000/&lt;/a&gt;'. One way would be to deploy the API and use the URL of the deployed API. Another way is to expose your localhost as a publically available URL. This will be temporary and will only work as long as your Flask server is running. Any request made to the public URL will also be made to your localhost URL.&lt;/p&gt;

&lt;p&gt;We will use &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt; to expose our localhost URL. You will have to create an account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DoVyO1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226921573/lM5MkEfJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DoVyO1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226921573/lM5MkEfJ8.png" alt="Screen Shot 2021-10-26 at 1.41.52 AM.png"&gt;&lt;/a&gt;&lt;br&gt;
Download ngrok for your OS and unzip it. Now open a terminal and cd to the directory where the unzipped ngrok file is present. Type the following command in the terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ngrok  http &amp;lt;PORT NUMBER&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eg: If your flask server is running on port 5000, you'd have to type the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ngrok http 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpnjmzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226711318/if00V8gy05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpnjmzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226711318/if00V8gy05.png" alt="Screen Shot 2021-10-26 at 1.38.25 AM.png"&gt;&lt;/a&gt;&lt;br&gt;
 You should see a similar output in your terminal. The public URL is the URL next to 'Forwarding'. In my case it is &lt;a href="http://35cc-69-58-102-156.ngrok.io"&gt;http://35cc-69-58-102-156.ngrok.io&lt;/a&gt;. If you access your public URL, you should see the same thing you see when you access your localhost URL. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-an-issue-webhook"&gt;
  &lt;/a&gt;
  Creating an Issue Webhook
&lt;/h3&gt;

&lt;p&gt;Chose any Github Repo you like. Go to Settings&amp;gt; Webhooks &amp;gt; Add Webhook&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e_Ee8u4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226862829/AK1RV-qTX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_Ee8u4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635226862829/AK1RV-qTX.png" alt="Screen Shot 2021-10-26 at 1.40.56 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9c8Vgkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635227038512/Hg_4vQZrP1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9c8Vgkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635227038512/Hg_4vQZrP1.png" alt="Screen Shot 2021-10-26 at 1.43.52 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter your endpoint, in my case it is &lt;a href="http://35cc-69-58-102-156.ngrok.io/githubIssue"&gt;http://35cc-69-58-102-156.ngrok.io/githubIssue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since we only want requests to be made when an Issue is created in the repo, select 'Let me select individual events.' and scroll down to choose 'Issues'. Once you are down, scroll down and create the webhook.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-the-webhook"&gt;
  &lt;/a&gt;
  Testing the Webhook
&lt;/h3&gt;

&lt;p&gt;Create an Issue in your repo&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pyifF0zP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635227234544/NHo5VaJO8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pyifF0zP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635227234544/NHo5VaJO8.png" alt="Screen Shot 2021-10-26 at 1.47.09 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now check the terminal where the flask server is running. I also added a label and closed the issue. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r6z6nFjd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635227338152/z6CVghu0H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6z6nFjd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635227338152/z6CVghu0H.png" alt="Screen Shot 2021-10-26 at 1.48.43 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Right now the Flask server doesn't do much. However, you can build on top of it. Instead of just printing the data received, you can use the data and send a push notification or an email. I hope you found this article helpful. Connect with on &lt;a href="https://www.linkedin.com/in/rahulbanerjee2699/"&gt;LinkedIn&lt;/a&gt; , &lt;a href="https://twitter.com/rahulbanerjee99"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>15+ üòçreasons why you should learn JavaScript right now</title>
      <author>Jonny</author>
      <pubDate>Tue, 26 Oct 2021 06:18:45 +0000</pubDate>
      <link>https://dev.to/johnn/15-reasons-why-you-should-learn-javascript-right-now-244j</link>
      <guid>https://dev.to/johnn/15-reasons-why-you-should-learn-javascript-right-now-244j</guid>
      <description>&lt;p&gt;There are two reasons why it‚Äôs sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There‚Äôs Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that‚Äôs not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there‚Äôs no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go.¬†&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;15+ reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
