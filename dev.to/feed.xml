<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Principles of Object-oriented programming </title>
      <author>Abhinav Pandey</author>
      <pubDate>Sat, 16 Oct 2021 14:27:09 +0000</pubDate>
      <link>https://dev.to/abh1navv/principles-of-object-oriented-programming-51k1</link>
      <guid>https://dev.to/abh1navv/principles-of-object-oriented-programming-51k1</guid>
      <description>&lt;p&gt;Object-oriented programming has been the most popular programming paradigm for over two decades. It is build on the idea that problems can be broken down in terms of the objects required to solve it.&lt;/p&gt;

&lt;p&gt;Let's have a look into the core principles around the object-oriented programming paradigm.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-blocks-of-oop"&gt;
  &lt;/a&gt;
  Building blocks of OOP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h3&gt;

&lt;p&gt;Objects are entities which have certain attributes and provide some services. &lt;/p&gt;

&lt;p&gt;In programming terms attributes are data held by the object in variables and services are the methods of the object that are accessible from outside.&lt;/p&gt;

&lt;p&gt;A Car is an object. Its attributes are its engine, color, model, seats, etc. while its service is to help people travel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#class"&gt;
  &lt;/a&gt;
  Class
&lt;/h3&gt;

&lt;p&gt;Class is based on the idea of "type". It provides a template  for defining similar objects and an interface for interacting with the object's services and data. &lt;/p&gt;

&lt;p&gt;In OOP, each object will belong to a class which defines its characteristics and behaviour. Objects, also called as instances of a class, are created, stored and utilized as per the template defined by their class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#principles"&gt;
  &lt;/a&gt;
  Principles
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#encapsulation"&gt;
  &lt;/a&gt;
  Encapsulation
&lt;/h3&gt;

&lt;p&gt;The object's data and its capabilities are bundled together. And as we already know, they are defined in a class. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The class provides an interface for other objects to interact with instances of that class. The point to note about the interface is that it does not need to reveal everything about the object. &lt;/li&gt;
&lt;li&gt;Some capabilities and data are internal to the object. They are not for the outside world to know or use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This can be understood in terms of a capsule which is consumed from the outside. It has a composition of medicines inside but they cannot be taken separately.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#abstraction"&gt;
  &lt;/a&gt;
  Abstraction
&lt;/h3&gt;

&lt;p&gt;Focus on "what" can solve your problem and not on "how" it solves it. More specifically, find the objects which can solve your problem and use their relevant services. &lt;/p&gt;

&lt;p&gt;Objects communicate by calling each other's services to get the job done. At no point does one object need to know the specifics of how the other object is implementing the services. &lt;/p&gt;

&lt;p&gt;Abstraction and Encapsulation work together to ensure that implementation details of an object are hidden from the external world.&lt;/p&gt;

&lt;p&gt;For e.g. a Car is an encapsulated unit. It will not tell you what each of its parts are made of and what material was used to create them. However, it will provide you with some abstracted functionalities. &lt;/p&gt;

&lt;p&gt;You can press the accelerator and it will increase your speed without you knowing how it increases the speed or what parts are involved in the process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h3&gt;

&lt;p&gt;At its core, inheritance is a technique for code reuse. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inheritance allows a class (&lt;em&gt;subclass&lt;/em&gt;) to build on top of another class (&lt;em&gt;superclass&lt;/em&gt;). &lt;/li&gt;
&lt;li&gt;The subclass will have all the properties of its superclass and should be able to perform all the services provided by the superclass. &lt;/li&gt;
&lt;li&gt;In addition it can define/update a few properties and services of its own.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sometimes objects required to solve problems will follow a uniform interface but will differ in implementation details. In such cases, inheritance is useful to help in avoiding repetition of code that will remain the same.&lt;/p&gt;

&lt;p&gt;A stricter and recommended use case of inheritance is subtyping where we state that if a subclass object "is-a" and "behaves-as-a" superclass object, only then the inheritance is valid.&lt;/p&gt;

&lt;p&gt;A Car is a class. Additionally, cars can be of several subtypes. A SUV is also a Car and a LUV is a Car too because they will both have all the attributes of . &lt;/p&gt;

&lt;p&gt;If we were defining SUV and LUV as classes, it would make sense to make them inherit the class of Car.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#polymorphism"&gt;
  &lt;/a&gt;
  Polymorphism
&lt;/h3&gt;

&lt;p&gt;Polymorphism is the ability to behave differently in different situations. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is achieved using a technique called "Late Binding". The code to be executed is determined at runtime. &lt;/li&gt;
&lt;li&gt;From another perspective, the object or method to be used is determined at runtime. &lt;/li&gt;
&lt;li&gt;This helps in making the code "decoupled" - not tied strongly with objects of a specific type.&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>oop</category>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Parcel.js v2 Bundler, is an excellent web development build tool.</title>
      <author>Alexandre Desroches</author>
      <pubDate>Sat, 16 Oct 2021 13:56:42 +0000</pubDate>
      <link>https://dev.to/alexdrocks/parceljs-v2-bundler-is-an-excellent-web-development-build-tool-67j</link>
      <guid>https://dev.to/alexdrocks/parceljs-v2-bundler-is-an-excellent-web-development-build-tool-67j</guid>
      <description>&lt;p&gt;&lt;a href="https://parceljs.org/"&gt;Parcel Version 2&lt;/a&gt; was publicly released on October 13 of 2021 - as seen in &lt;a href="https://parceljs.org/blog/v2/"&gt;their blog post&lt;/a&gt; and also &lt;a href="https://twitter.com/devongovett/status/1448303499045838859"&gt;on Twitter&lt;/a&gt; by the creator of Parcel, &lt;a href="https://twitter.com/devongovett"&gt;Devon Govett&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#version-2-of-the-parcel-build-tool-is-simple-and-efficient"&gt;
  &lt;/a&gt;
  Version 2 of the Parcel build tool is simple and efficient.
&lt;/h2&gt;

&lt;p&gt;During a year and a half - as a new web developer learning mostly Javascript, HTML, CSS and React - I was searching for the perfect build tools to create web applications and web sites.&lt;/p&gt;

&lt;p&gt;Well, it was almost impossible to find one that did "everything" simply and efficiently. By "everything" I mean that it provides out-of-the-box: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dev server for Javascript, HTML, CSS based projects.&lt;/li&gt;
&lt;li&gt;Default loaders to handle regular web site and web apps requirements like loading images, SVGs, multiple CSS and JS files, etc.&lt;/li&gt;
&lt;li&gt;Optimized production builds - without any complex configs that can waste hours of your day each time you start a new project.&lt;/li&gt;
&lt;li&gt;Speed and performance.&lt;/li&gt;
&lt;li&gt;Proper usage of HTML and CSS files rather than everything handled by Javascript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#parcel-v2-replaced-a-webpack-5-project-in-10-minutes"&gt;
  &lt;/a&gt;
  Parcel v2 replaced a Webpack 5 project in 10 minutes.
&lt;/h2&gt;

&lt;p&gt;No jokes. I had a project using Webpack 5 and a super complex configuration which took me days to setup! &lt;/p&gt;

&lt;p&gt;I went on the &lt;a href="https://parceljs.org/"&gt;Parcel website&lt;/a&gt; and read the &lt;a href="https://parceljs.org/getting-started/webapp/"&gt;get started guide for web apps&lt;/a&gt; which took 1 minute. Then in my project, I deleted my &lt;code&gt;node_modules&lt;/code&gt; folder and every dev dependencies I had related to Webpack in my package.json file. Then I installed Parcel as stated in the guide, setup the scripts in &lt;code&gt;package.json&lt;/code&gt; then ran the &lt;code&gt;npm install&lt;/code&gt; command. Then I executed &lt;code&gt;npm start&lt;/code&gt; a few times to see console error messages which were super easy to understand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;After 10 minutes, the project was fully replaced with Parcel v2&lt;/strong&gt;. Isn't that incredible?! Seriously, I was telling myself that this could never be possible. I mean - how could you replace days of work setting up my custom Webpack configurations and then simply replace it with a new module bundler called Parcel...? Well, it worked. Incredible and awesome.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-image-optimization-with-production-builds"&gt;
  &lt;/a&gt;
  Automatic Image Optimization with production builds.
&lt;/h2&gt;

&lt;p&gt;Believe it or not, we are now at this awesome point in time where the build tool is able to let you declare a  HTML element with multiple image sources (including AVIF images) and it will automatically optimize them when you run the production build command. This is insane. I previously had to manually setup a gulp workflow with imagemin and other complexities which I really had trouble with most of the time because you kind of never remember what you did in previous projects to set this up. &lt;strong&gt;Parcel v2... simply declare your HTML&lt;/strong&gt;, put the original image in your project's preferred folder, run a command. Done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smaller-javascript-and-css-minified-bundles-than-with-my-previous-webpack-v5-setup"&gt;
  &lt;/a&gt;
  Smaller Javascript and CSS minified bundles than with my previous Webpack v5 setup.
&lt;/h2&gt;

&lt;p&gt;Not only is it extremely handy, fast and enjoyable - it also produced ~10kb less of total shipped Javascript and CSS. Then if you also count the automatic image optimizations which took another ~10kb off my previous images. That is &lt;strong&gt;around 20kb less shipped code&lt;/strong&gt; in the production build with zero real efforts on my side.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-caching-helpers-with-file-names-hashing"&gt;
  &lt;/a&gt;
  Automatic caching helpers with file names hashing.
&lt;/h2&gt;

&lt;p&gt;Parcel will reorganize your file names in production builds so that they include a hash like this &lt;code&gt;index.f7b8de4d.js&lt;/code&gt;. &lt;strong&gt;This helps to cache those files for a very long time without worrying that you users will get old cached results&lt;/strong&gt;. In fact, by hashing your file names, each production build that modified a file's content will generate a new hash which automatically invalidates the cache and ensure your users get the latest content you wanted to provide to them. That's awesome too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, I found that Parcel v2 provides out-of-the-box ideal modern default configurations for my web development needs. &lt;strong&gt;I am not affiliated with Parcel in any way&lt;/strong&gt;. I just discovered it the day it was released publicly on Twitter. &lt;/p&gt;

&lt;p&gt;Maybe you could try it and be as impressed as I am today. Honestly, when you spend hours, days, months, years searching for something and then you finally find it, it's an extremely satisfying feeling. &lt;/p&gt;

&lt;p&gt;Thanks to all contributors in the &lt;a href="https://parceljs.org/"&gt;Parceljs.org&lt;/a&gt; project. This new release is my new go to build tool for starting new projects.&lt;/p&gt;

&lt;p&gt;Disclaimer: For purely React based projects I will keep using &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; because its extremely good at it (and built especially for it).&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Jira CLI: The Missing Command-line Tool for Atlassian Jira</title>
      <author>Ankit Pokhrel</author>
      <pubDate>Sat, 16 Oct 2021 13:52:48 +0000</pubDate>
      <link>https://dev.to/konsole/jira-cli-the-missing-command-line-tool-for-atlassian-jira-2n2i</link>
      <guid>https://dev.to/konsole/jira-cli-the-missing-command-line-tool-for-atlassian-jira-2n2i</guid>
      <description>&lt;p&gt;&lt;em&gt;The &lt;a href="https://medium.com/@ankitpokhrel/introducing-jira-cli-the-missing-command-line-tool-for-atlassian-jira-fe44982cc1de"&gt;original version&lt;/a&gt; of this post first appeared in Medium.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The year is 2078 and there have been 0 improvements in the Jira UI — #rant&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jira UI is terrible to work with. It is slow, buggy, and doesn’t even load on occasions. If you have to rely on it for your day-to-day job it is going to cost you a lot of time and frustration. These frustrations pile up if you need to create tickets, in a pre-defined format with proper labels, components, etc, for every change you make, even a typo!&lt;/p&gt;

&lt;p&gt;Since I spend a significant amount of my time in the command-line, this is my small attempt to make Jira experience better for the CLI users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introducing-jira-cli"&gt;
  &lt;/a&gt;
  Introducing Jira CLI
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ankitpokhrel"&gt;
        ankitpokhrel
      &lt;/a&gt; / &lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;
        jira-cli
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔥 [WIP] Feature-rich interactive Jira command line.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;a href="https://github.com/ankitpokhrel/jira-cli#"&gt;
        &lt;img alt="stargazers over time" src="https://camo.githubusercontent.com/0e674d8f04a6e1a50dfea464cc89512e48e8c2304f987a1648a046bba167d75b/68747470733a2f2f73746172732e6d6564762e696f2f616e6b6974706f6b6872656c2f6a6972612d636c692e737667"&gt;
    &lt;/a&gt;
    &lt;h1&gt;
JiraCLI&lt;/h1&gt;
&lt;/div&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://github.com/ankitpokhrel/jira-cli/actions?query=workflow%3Abuild+branch%3Amaster"&gt;
            &lt;img alt="Build" src="https://camo.githubusercontent.com/11ccce3b149701a583a7eda25e8e1e70d993e659cdd59954cf46dd20da12a504/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f616e6b6974706f6b6872656c2f6a6972612d636c692f6275696c643f7374796c653d666c61742d737175617265"&gt;
        &lt;/a&gt;
        &lt;a href="https://goreportcard.com/report/github.com/ankitpokhrel/jira-cli" rel="nofollow"&gt;
            &lt;img alt="GO Report-card" src="https://camo.githubusercontent.com/6dfa0d69b416072706b881ad566f83f97c52fbd3b53a5e11e0c5a06d85914bfd/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f616e6b6974706f6b6872656c2f6a6972612d636c693f7374796c653d666c61742d737175617265"&gt;
        &lt;/a&gt;
        &lt;a href="https://github.com/ankitpokhrel/jira-cli/blob/master/LICENSE"&gt;
            &lt;img alt="Software License" src="https://camo.githubusercontent.com/ad8758fbaebbced78645b98e446c0bb5ec223676ed61700184320887cadbfb8e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;
        &lt;/a&gt;
        &lt;a href="https://github.com/ankitpokhrel/jira-cli#"&gt;
            &lt;img alt="Software License" src="https://camo.githubusercontent.com/f18094648d87d228dd660d6226473ddb786bcc3a6d8cfe2f373cd213f79512a5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d5749502d79656c6c6f773f7374796c653d666c61742d73717561726526636f6c6f723d6f72616e6765"&gt;
        &lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;
        &lt;i&gt;Feature-rich Interactive Jira Command Line&lt;/i&gt;
    &lt;/p&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/ankitpokhrel/jira-cli.github/assets/demo.gif"&gt;&lt;img alt="JiraCLI Demo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HUOuXffw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/ankitpokhrel/jira-cli.github/assets/demo.gif"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
    &lt;p&gt;
        🚧 This project is still a work in progress 🚧&lt;br&gt;
        &lt;a href="https://opencollective.com/jira-cli#backers" rel="nofollow"&gt;
            &lt;img src="https://camo.githubusercontent.com/28790ec72e54f784580b53ef5afc67c6647a95f0650a04cacec4c51958b8adb2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a6972612d636c692f6261636b6572732e737667" alt="jira-cli open collective badge"&gt;
        &lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;JiraCLI is a command line tool for Jira created with an idea to avoid the Jira UI as much as possible. The tool is not yet complete but has
all necessary features required to improve your workflow with Jira. The tool mostly focuses on issue search and navigation at the moment
However, it also includes features like issue creation, cloning, linking, ticket transition, and so on.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your suggestions and feedbacks are highly appreciated. Feel free to &lt;a href="https://github.com/ankitpokhrel/jira-cli/discussions"&gt;start a discussion&lt;/a&gt;
or &lt;a href="https://github.com/ankitpokhrel/jira-cli/issues/new"&gt;create an issue&lt;/a&gt; to share your experience about the tool or to discuss a feature/issue
If you think this project is cool and helpful, consider contributing by starring the repo, sharing with your friends or submitting a PR.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Supported platforms&lt;/h2&gt;
&lt;p&gt;The tool is only tested with the latest Jira cloud since that's what I…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ankitpokhrel/jira-cli"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#tldr-features-highlight"&gt;
  &lt;/a&gt;
  TLDR; Features Highlight
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interactive mode + an option to easily integrate with shell/automation scripts using standard &lt;a href="https://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html"&gt;POSIX-complaint&lt;/a&gt; flags.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankitpokhrel/jira-cli/#list"&gt;Easy search&lt;/a&gt; and navigation. For instance, you can easily search for something like “&lt;em&gt;Issues that are of high priority, is in progress, was created this month, and has a label called backend&lt;/em&gt;” with &lt;code&gt;jira issue list -yHigh -s"In Progress" --created month -lbackend&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankitpokhrel/jira-cli/#create"&gt;Create a neat Jira ticket&lt;/a&gt; (and &lt;a href="https://github.com/ankitpokhrel/jira-cli/#comment"&gt;comment&lt;/a&gt;) using &lt;a href="https://github.github.com/gfm/"&gt;Github-flavored&lt;/a&gt; + &lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all"&gt;Jira-flavored&lt;/a&gt; markdown as a template. Supports pre-defined templates.&lt;/li&gt;
&lt;li&gt;The ticket details are translated to &lt;a href="https://github.github.com/gfm/"&gt;markdown&lt;/a&gt; from the &lt;a href="https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/"&gt;Atlassian document&lt;/a&gt; and is &lt;a href="https://github.com/ankitpokhrel/jira-cli/#view"&gt;beautifully displayed&lt;/a&gt; on the screen when you view it.&lt;/li&gt;
&lt;li&gt;Easy &lt;a href="https://github.com/ankitpokhrel/jira-cli/#sprint"&gt;sprint&lt;/a&gt; and &lt;a href="https://github.com/ankitpokhrel/jira-cli/#epic"&gt;epic&lt;/a&gt; navigation. You can quickly view tickets in previous, current, and next sprint tickets using flags like &lt;code&gt;--prev&lt;/code&gt;, &lt;code&gt;--next&lt;/code&gt;, and &lt;code&gt;--current&lt;/code&gt; eg: &lt;code&gt;jira sprint list --current&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Fast and straightforward &lt;a href="https://github.com/ankitpokhrel/jira-cli/#clone"&gt;ticket cloning&lt;/a&gt; with the ability to replace text in summary and description.&lt;/li&gt;
&lt;li&gt;You can &lt;a href="https://github.com/ankitpokhrel/jira-cli#edit"&gt;edit&lt;/a&gt;, &lt;a href="https://github.com/ankitpokhrel/jira-cli#link"&gt;link&lt;/a&gt;, &lt;a href="https://github.com/ankitpokhrel/jira-cli#assign"&gt;assign&lt;/a&gt; and &lt;a href="https://github.com/ankitpokhrel/jira-cli#movetransition"&gt;transition&lt;/a&gt; the issues with ease.&lt;/li&gt;
&lt;li&gt;Supports multiple Jira servers using &lt;code&gt;--config&lt;/code&gt; flag or &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; env.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h3&gt;

&lt;p&gt;The tool is mosty tested with the latest Jira cloud since that’s what I usually work with. However, the support for on-premise Jira installation is &lt;a href="https://github.com/ankitpokhrel/jira-cli/issues/138"&gt;on the way&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, the tool is still a work in progress with some exciting features in the todo pipeline.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#searching-for-an-issue"&gt;
  &lt;/a&gt;
  Searching for an Issue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;JiraCLI&lt;/a&gt; makes searching for an issue as easy as it should be. The lists are displayed in an interactive UI and can be navigated easily to perform actions like viewing, navigating, and copying issue keys/links.&lt;/p&gt;

&lt;p&gt;The examples below shows how easy it is to look for an issue. See more examples &lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# List issues that I am watching in the current board
$ jira issue list -w

# List issues assigned to me
$ jira issue list -a$(jira me)

# List issues created within an hour and updated in the last 30 minutes️
$ jira issue list --created -1h --updated -30m

# Give me issues that are of high priority, is in progress, was created this month, and has given labels 🔥
$ jira issue list -yHigh -s"In Progress" --created month -lbackend -l"high prio"

# Wait, what was that ticket I opened earlier today? 😫
$ jira issue list --history# What was the first issue I ever reported on the current board? 🤔
$ jira issue list -r$(jira me) --reverse

# What was the first bug I ever fixed in the current board? 🐞
$ jira issue list -a$(jira me) -tBug sDone -rFixed --reverse

# What issues did I report this week? 🤷‍♂️
$ jira issue list -r$(jira me) --created week
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-an-issue"&gt;
  &lt;/a&gt;
  Creating an Issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;create&lt;/code&gt; command lets you create an issue and supports Github-flavored and Jira-flavored markdown for writing descriptions. You can load pre-defined templates using &lt;code&gt;--template&lt;/code&gt; flag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create an issue using interactive prompt
$ jira issue create

# Pass required parameters to skip prompt or use --no-input option
$ jira issue create -tBug -s"New Bug" -yHigh -lbug -lurgent -b"Bug description"

# Load description from template file
$ jira issue create --template /path/to/template.tmpl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HbebjIDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2AYJ7iBrmFlpBR3VSgj3UIXg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HbebjIDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2AYJ7iBrmFlpBR3VSgj3UIXg.gif" alt="Creating an issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The preview below shows the markdown template passed in JiraCLI and the way it is rendered in the Jira UI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SZ2Au3it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Ak5q3jXFs2m_oYHUI3qBDzA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SZ2Au3it--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Ak5q3jXFs2m_oYHUI3qBDzA.jpeg" alt="Create shell and UI preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#viewing-an-issue"&gt;
  &lt;/a&gt;
  Viewing an Issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;view&lt;/code&gt; command lets you see issue details in a terminal. Atlassian document is roughly converted to a markdown and is nicely displayed in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ jira issue view ISSUE-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JiDlfxOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A5Zt6icnszXhq3ALznT5pTA.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JiDlfxOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A5Zt6icnszXhq3ALznT5pTA.gif" alt="Viewing an issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assigning-a-user-to-an-issue"&gt;
  &lt;/a&gt;
  Assigning a user to an issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;assign&lt;/code&gt; command lets you easily assign and unassign users to and from the issue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I18sqj_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2ACs0JlkQWXCSP1MtUApjptw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I18sqj_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2ACs0JlkQWXCSP1MtUApjptw.gif" alt="Assigning a user to an issue"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Assign user to an issue using interactive prompt
$ jira issue assign

# Pass required parameters to skip prompt
$ jira issue assign ISSUE-1 "Jon Doe"

# Assign to self
$ jira issue assign ISSUE-1 $(jira me)

# Will prompt for selection if keyword suffix returns multiple entries
$ jira issue assign ISSUE-1 suffix

# Assign to default assignee
$ jira issue assign ISSUE-1 default

# Unassign
$ jira issue assign ISSUE-1 x
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cloning-an-issue"&gt;
  &lt;/a&gt;
  Cloning an Issue
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;clone&lt;/code&gt; command lets you clone an issue. You can update fields like summary, priority, assignee, labels, and components when cloning the issue. The command also allows you to replace a part of the string (case-sensitive) in summary and description using &lt;code&gt;--replace/-H&lt;/code&gt; option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Clone an issue
$ jira issue clone ISSUE-1

# Clone issue and modify the summary, priority and assignee
$ jira issue clone ISSUE-1 -s"Modified summary" -yHigh -a$(jira me)

# Clone issue and replace text from summary and description
$ jira issue clone ISSUE-1 -H"find-me:replace-with-me"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sprints"&gt;
  &lt;/a&gt;
  Sprints
&lt;/h3&gt;

&lt;p&gt;Sprints are displayed in an explorer view by default. You can output the results in a table view using the &lt;code&gt;--table&lt;/code&gt; flag. When viewing sprint issues, you can use all filters available for the issue command. You can quickly view tickets in previous, current, and next sprint tickets using flags like &lt;code&gt;--prev&lt;/code&gt;, &lt;code&gt;--next&lt;/code&gt;, and &lt;code&gt;--current&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h0e1hud5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A3pFxH8lmXAdGDpNXYhZKsQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h0e1hud5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2A3pFxH8lmXAdGDpNXYhZKsQ.gif" alt="Sprints"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Display sprints in an interactive list
$ jira sprint list

# Display tickets in the current active sprint
$ jira sprint list --current

# Display tickets in the previous sprint
$ jira sprint list --prev

# Display tickets of a particular sprint
$ jira sprint list &amp;lt;SPRINT_ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn more
&lt;/h3&gt;

&lt;p&gt;Check out &lt;a href="https://github.com/ankitpokhrel/jira-cli"&gt;the project page&lt;/a&gt; to view the full set of features and learn more about the project.&lt;/p&gt;

&lt;p&gt;Your suggestions and feedback is highly appreciated. Feel free to &lt;a href="https://github.com/ankitpokhrel/jira-cli/discussions"&gt;start a discussion&lt;/a&gt; or &lt;a href="https://github.com/ankitpokhrel/jira-cli/issues/new"&gt;create an issue&lt;/a&gt; to share your experience about the tool or to discuss a feature/issue. If you think this project is useful, consider contributing by &lt;a href="https://github.com/ankitpokhrel/jira-cli/stargazers"&gt;starring the repo&lt;/a&gt;, sharing with your friends, or submitting a PR.&lt;/p&gt;

</description>
      <category>go</category>
      <category>opensource</category>
      <category>showdev</category>
      <category>bash</category>
    </item>
    <item>
      <title>Read Data From Firebase Firestore (V9)</title>
      <author>abhisheks-12</author>
      <pubDate>Sat, 16 Oct 2021 13:25:31 +0000</pubDate>
      <link>https://dev.to/abhisheks12/read-data-from-firebase-firestore-v9-28be</link>
      <guid>https://dev.to/abhisheks12/read-data-from-firebase-firestore-v9-28be</guid>
      <description>&lt;p&gt;For reading data from firestore database we will need some starter files so clone this repo &lt;a href="https://github.com/abhisheks-12/Blog-dev-to"&gt;https://github.com/abhisheks-12/Blog-dev-to&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) Go to &lt;a href="https://firebase.google.com/"&gt;https://firebase.google.com/&lt;/a&gt; then click on Go to console.&lt;/p&gt;

&lt;p&gt;2) Now create project with name parking system and after that turn off google  analytics.&lt;/p&gt;

&lt;p&gt;3) After that click on &amp;lt;/&amp;gt; icon which represents web app.&lt;/p&gt;

&lt;p&gt;4) Register app with any name , then copy firebase configuration and if you don't have firebase install firebase first.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1NRI670q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b80i86cuvh5vwmoafed8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1NRI670q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b80i86cuvh5vwmoafed8.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5) After that go to your editor open src/Firebase/config.js &lt;br&gt;
and paste configuration here&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T9MXqyvJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upgicfcs3s6un4huz6zh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T9MXqyvJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/upgicfcs3s6un4huz6zh.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6) Again go to firebase click on firestore database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xo9Ouz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n3457ynnj36og92moydm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Xo9Ouz2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n3457ynnj36og92moydm.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7) Click on start collection and create your data base like this &lt;br&gt;
picture&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iD58GQVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f540jgyhgsz37r8tu034.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iD58GQVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f540jgyhgsz37r8tu034.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8) Now come back to your text editor open src/App.js.&lt;/p&gt;

&lt;p&gt;9)Import following statements&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qy7Jp-dQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va2qfy8bvysir2ta1pgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qy7Jp-dQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va2qfy8bvysir2ta1pgs.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10) Now we will fetch data from firestore so we will use async function so first see this code&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--la5NxA0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be0n1x6mp9ezi1xz8ohp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--la5NxA0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be0n1x6mp9ezi1xz8ohp.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;11) Here we are using getData function to fetch data ,now we will save data in parkingData first console log parkingData after logging we will find doc value in this value there will be objects of our  data.&lt;/p&gt;

&lt;p&gt;12) In setCars we are setting data in array using map method . All properties will come in different objects so we are destructuring &lt;br&gt;
this properties into one object with unique id .&lt;/p&gt;

&lt;p&gt;15) Now we have data and now we are going to loop over that data &lt;br&gt;
using map and access every property and set it in our html .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZeM2ARk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbi1inw3n1zviaz1ik4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZeM2ARk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbi1inw3n1zviaz1ik4q.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;16) Here is final code &lt;a href="https://github.com/abhisheks-12/Blog-dev-to/tree/final/src"&gt;https://github.com/abhisheks-12/Blog-dev-to/tree/final/src&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>firebase</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Wicked Blocks V2: Ready Made Tailwind CSS blocks, for your next project. updated with new blocks. 500% free</title>
      <author>Michael Andreuzza</author>
      <pubDate>Sat, 16 Oct 2021 13:23:42 +0000</pubDate>
      <link>https://dev.to/mike_andreuzza/wicked-blocks-v2-ready-made-tailwind-css-blocks-for-your-next-project-updated-with-new-blocks-500-free-1egf</link>
      <guid>https://dev.to/mike_andreuzza/wicked-blocks-v2-ready-made-tailwind-css-blocks-for-your-next-project-updated-with-new-blocks-500-free-1egf</guid>
      <description>&lt;p&gt;Hello beautiful people! 🖐&lt;/p&gt;

&lt;p&gt;How are you all doing?&lt;br&gt;
I have made something for those that like Tailwind CSS to the bones and back.Yes, for you, don't be skeptical....come on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-wwwwickedblocksdev"&gt;
  &lt;/a&gt;
  So what is &lt;a href="http://www.WickedBlocks.dev"&gt;www.WickedBlocks.dev&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;WICKED BLOCKS are a growing collection of layouts  and components built with Tailwind CSS  and Alpine.js ready to copy-paste on your Tailwind project.&lt;br&gt;
Get it here ---&amp;gt; Wicked Blocks&lt;br&gt;
In this version you will find updated blocks and and the addition of Alpine.js on the navigation, plus all are  visually updated and with a better and nicer design , bro: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Left Headers&lt;/li&gt;
&lt;li&gt;Centered Headers&lt;/li&gt;
&lt;li&gt;Right Headers&lt;/li&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Pricing&lt;/li&gt;
&lt;li&gt;Cards&lt;/li&gt;
&lt;li&gt;Alerts&lt;/li&gt;
&lt;li&gt;Grids&lt;/li&gt;
&lt;li&gt;Clients&lt;/li&gt;
&lt;li&gt;Modals&lt;/li&gt;
&lt;li&gt;Content&lt;/li&gt;
&lt;li&gt;Forms&lt;/li&gt;
&lt;li&gt;Navigation ( with Alpine.js )&lt;/li&gt;
&lt;li&gt;Sidebars&lt;/li&gt;
&lt;li&gt;Footers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I added the new blocks yesterday, I am still working ( literally right now ) with the responsiveness of some of them, but 90% are responsive.&lt;/p&gt;

&lt;p&gt;I hope you guys like it and remember that I am always open to feedback and DM's are also open for anything you want to know.&lt;/p&gt;

&lt;p&gt;Or Twitter u/mike_andreuzza&lt;/p&gt;

&lt;p&gt;Let me drop some previews here....&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qkv65IRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/1dfm05645tt71.png%3Fwidth%3D2480%26format%3Dpng%26auto%3Dwebp%26s%3D86088c1b0fd0ad0dc537deb11b63c0007f823b69" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qkv65IRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/1dfm05645tt71.png%3Fwidth%3D2480%26format%3Dpng%26auto%3Dwebp%26s%3D86088c1b0fd0ad0dc537deb11b63c0007f823b69" alt="a"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RmT5_We2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/3nnfkmfj7tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3D12b6cc2701804eee947864a23e494ce61f73f5cd" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RmT5_We2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/3nnfkmfj7tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3D12b6cc2701804eee947864a23e494ce61f73f5cd" alt="b"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--npDfpgEK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/s7fm5gep7tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3D2f949147e33b45448b015ca8dafb44e16a379bb7" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npDfpgEK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/s7fm5gep7tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3D2f949147e33b45448b015ca8dafb44e16a379bb7" alt="c"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tF8KsYCJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/58sbr1vw7tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3D88d3cfebe6ff19d2008e0bd5a633d0edcb1f2756" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tF8KsYCJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/58sbr1vw7tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3D88d3cfebe6ff19d2008e0bd5a633d0edcb1f2756" alt="d"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CS2IsAyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/n5jw8gu18tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3Dd082355a669d89606b8457f38ebbe40ef4ad084a" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CS2IsAyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/n5jw8gu18tt71.png%3Fwidth%3D2462%26format%3Dpng%26auto%3Dwebp%26s%3Dd082355a669d89606b8457f38ebbe40ef4ad084a" alt="f"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Understanding the Modern Web Stack: Linters (ESLint)</title>
      <author>Alex E</author>
      <pubDate>Sat, 16 Oct 2021 12:27:44 +0000</pubDate>
      <link>https://dev.to/alexeagleson/understanding-the-modern-web-stack-linters-eslint-59pm</link>
      <guid>https://dev.to/alexeagleson/understanding-the-modern-web-stack-linters-eslint-59pm</guid>
      <description>&lt;p&gt;You can find the official repository for the &lt;em&gt;Understanding the Modern Web Stack&lt;/em&gt; tutorial series &lt;a href="https://github.com/alexeagleson/the-modern-web-stack"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This includes the final versions of the code examples from each tutorial to help make sure you haven't missed anything. You can also submit pull requests for any errors or corrections you may find (and I will update the blog posts accordingly).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-is-a-linter"&gt;What is a linter?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-eslint"&gt;What is ESLint?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initializing-the-project"&gt;Initializing the Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-eslint"&gt;Installing ESLint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linting-your-project"&gt;Linting Your Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extending-configurations-airbnb"&gt;Extending Configurations (Airbnb)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#plugins-react"&gt;Plugins (React)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#editor-integration-vs-code"&gt;Editor Integration (VS Code)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wrapping-up"&gt;Wrapping Up&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-linter"&gt;
  &lt;/a&gt;
  What is a linter?
&lt;/h2&gt;

&lt;p&gt;A code &lt;a href="https://en.wikipedia.org/wiki/Lint_(software)"&gt;linter&lt;/a&gt; is a tool to help minimize bad coding practices, and also help to standardize code syntax between team members working on a single project.&lt;/p&gt;

&lt;p&gt;Since we are focused on the web, we'll be discussing linters in the context of Javascript. JS is a language well known to have a lot of quirks that often trip up people new to the language, even experienced developers coming from other languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5h_nONtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.freecodecamp.org/news/content/images/2019/07/best-js-meme-to-date-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5h_nONtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.freecodecamp.org/news/content/images/2019/07/best-js-meme-to-date-2.png" alt="Javascript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above for example, using the &lt;code&gt;==&lt;/code&gt; operator in JS instead of &lt;code&gt;===&lt;/code&gt; allows types to be coerced into their &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy"&gt;truthy&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy"&gt;falsy&lt;/a&gt; equivalents. Oftentimes this is not what the user intended when comparing a string and a number value, and can be a common source of errors.&lt;/p&gt;

&lt;p&gt;A linter will allow you to apply a rule that either &lt;em&gt;warns&lt;/em&gt; or &lt;em&gt;prohibits&lt;/em&gt; the usage of the &lt;code&gt;==&lt;/code&gt; operator, guiding every developer on your team to be explicit with their comparisons.&lt;/p&gt;

&lt;p&gt;This will help introduce better &lt;em&gt;consistency&lt;/em&gt; across your codebase, which is one of the most valuable attributes of a software project at scale. It allows any developer to navigate different parts of the codebase and more quickly read and understand what the code is designed to do.&lt;/p&gt;

&lt;p&gt;This is just one example of any number of potentially unlimited rules you can enable for a linter. You can even write rules yourself if you want.&lt;/p&gt;

&lt;p&gt;In this tutorial we are going to demonstrate how to install and configure the most popular Javascript linter: ESlint.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-eslint"&gt;
  &lt;/a&gt;
  What is ESLint?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt; is a highly configurable Javascript linter with a rich ecosystem of available rules. It can be added to any JS project and set to be as "light and suggestive" or as "strict and opinionated" as you and your team desire.&lt;/p&gt;

&lt;p&gt;It can be added to your &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;continuous integration (CI)&lt;/a&gt; pipeline to prohibit any code being merged into your main branch unless it adheres to a set of rules that are validated automatically. This dramatically reduces the amount of manual review required from other developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;You will need to have &lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; installed on your machine and available from your terminal. Installing Node will automatically install &lt;a href="https://en.wikipedia.org/wiki/Npm_(software)"&gt;npm&lt;/a&gt; as well, which is what you will use to install Babel.&lt;/p&gt;

&lt;p&gt;Open up your terminal of choice. If you see version numbers when running the two commands below (your numbers will likely be different than this example) then you are ready to go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; v15.5.0

npm &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 7.16.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initializing-the-project"&gt;
  &lt;/a&gt;
  Initializing the Project
&lt;/h2&gt;

&lt;p&gt;Let's start by initializing a new &lt;code&gt;npm&lt;/code&gt; project. Run the following command to generate one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;-y&lt;/code&gt; flag will automatically select default values for everything, which is appropriate in our example.&lt;/p&gt;

&lt;p&gt;Create a file in your root directory called &lt;code&gt;script.js&lt;/code&gt; with the following code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;script.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Steve&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;some_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printHelloWorld&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printHelloWorld&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code is perfectly valid Javascript. You can verify by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node script.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will get the output &lt;code&gt;hello world!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However despite being &lt;em&gt;valid&lt;/em&gt; there are a number of problems that might prevent code like this from passing a review at your company.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;person&lt;/code&gt; is assigned two names, one overwrites the other.&lt;/li&gt;
&lt;li&gt;Semicolons are inconsistent. Some lines have them, others don't.&lt;/li&gt;
&lt;li&gt;Quotations are inconsistent. Some code uses single, others double.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;some_text&lt;/code&gt; is written in &lt;em&gt;snake_case&lt;/em&gt; instead of &lt;em&gt;camelCase&lt;/em&gt; (again, consistency)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;person&lt;/code&gt; and &lt;code&gt;some_text&lt;/code&gt; are never actually used. Why did we declare them?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We could send this code back to the developer with this written list saying "please fix", but of course as you have already guessed, something as basic as this can easily be identified with a &lt;a href="https://en.wikipedia.org/wiki/Static_program_analysis"&gt;static analysis&lt;/a&gt; tool like ESLint.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-eslint"&gt;
  &lt;/a&gt;
  Installing ESLint
&lt;/h2&gt;

&lt;p&gt;Now let's &lt;code&gt;eslint&lt;/code&gt; to our project with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point you have the &lt;em&gt;option&lt;/em&gt; of running the command &lt;code&gt;npx eslint --init&lt;/code&gt; which will take you through a little questionnaire in your terminal about what kind of project you are making and what tools you are using.&lt;/p&gt;

&lt;p&gt;For everyday use this is a great way to get started, however since our goal is to understand each piece of the configuration as we implement it, we are going to create our configuration file from scratch. Create a &lt;code&gt;.eslintrc.json&lt;/code&gt; file in your root directory:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.eslintrc.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"browser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"parserOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ecmaVersion"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quotes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"double"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;(Be sure to notice that our config filename begins with a &lt;code&gt;.&lt;/code&gt; to indicate it is a hidden file)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can look at what each one of these fields in the config does:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;env&lt;/code&gt; - Specifies the environment we are planning to run our code in. When we say &lt;code&gt;browser&lt;/code&gt; ESLint will not throw an error if we try to use a DOM method like &lt;code&gt;document.querySelector()&lt;/code&gt;. Another common &lt;code&gt;env&lt;/code&gt; value is &lt;code&gt;node&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;extends&lt;/code&gt; - This option allows us to inherit from existing lists of rules. ESLint provides a list of &lt;a href="https://eslint.org/docs/rules/"&gt;default recommended rules&lt;/a&gt;. If there are any you disagree with, they can be disabled manually in the &lt;code&gt;rules&lt;/code&gt; field on the config.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;parserOptions&lt;/code&gt; - The &lt;code&gt;ecmaVersion&lt;/code&gt; property tells ESLint which &lt;a href="https://en.wikipedia.org/wiki/ECMAScript"&gt;ECMA version&lt;/a&gt; of Javascript you are targeting. For example if you use a value fo &lt;code&gt;2015&lt;/code&gt; it will throw an error if you try to use syntax like &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. Setting it to &lt;code&gt;2016&lt;/code&gt; would allow you to use them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rules&lt;/code&gt; - This is where you manually configure any rules you would like to apply in your project, and whether you want to show a warning or throw an error. Tools can be set to listen for ESLint errors and cancel if they are encountered.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have decided to use the default &lt;code&gt;eslint:recommended&lt;/code&gt; set of rules, but we would like to enforce that semicolons must always be used at the end of lines, and they all developers on the team use double quotes instead of single.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linting-your-project"&gt;
  &lt;/a&gt;
  Linting Your Project
&lt;/h2&gt;

&lt;p&gt;With this configuration in place, let's run ESLint on our &lt;code&gt;script.js&lt;/code&gt; file with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx eslint script.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHE4Co9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WG5tDGA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHE4Co9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WG5tDGA.png" alt="ESLint Errors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that this tool has provided us with the information needed to correct the errors in our code.&lt;/p&gt;

&lt;p&gt;Not only does ESLint inform us of the issues, it even knows how to fix some of the more basic syntax issues like quotes and semicolons. Run the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx eslint script.js &lt;span class="nt"&gt;--fix&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KizjTsoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ASfxTcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KizjTsoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ASfxTcr.png" alt="ESLint Fixed Errors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problems with obvious solutions have been fixed. Check out &lt;code&gt;script.js&lt;/code&gt; and see for yourself the file has been edited.&lt;/p&gt;

&lt;p&gt;The other values don't have obvious solutions. Deciding whether or not to use &lt;code&gt;person&lt;/code&gt; is more of a program logic decision than a syntax error. Similar, ESLint can't be sure which of the two names is correct.&lt;/p&gt;

&lt;p&gt;So we decide to refactor our code so it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;script.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;some_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printHelloWorld&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;some_text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printHelloWorld&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we run &lt;code&gt;npx eslint script.js&lt;/code&gt; again we see no output.&lt;/p&gt;

&lt;p&gt;No output is good! It means there are no errors.&lt;/p&gt;

&lt;p&gt;Except &lt;code&gt;some_text&lt;/code&gt; is still using &lt;em&gt;snakeCase&lt;/em&gt; instead of &lt;em&gt;camelCase&lt;/em&gt;. As it turns out casing in variable names is a &lt;a href="https://eslint.org/docs/rules/"&gt;rule that exists&lt;/a&gt; called &lt;a href="https://eslint.org/docs/rules/camelcase"&gt;camelcase&lt;/a&gt;, it's just not enabled by default.&lt;/p&gt;

&lt;p&gt;Let's turn it on in our config file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.eslintrc.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quotes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"double"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"camelcase"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"warn"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We decide that enforcing &lt;em&gt;camelCase&lt;/em&gt; isn't as important as making sure to use all the variables we declare, so we set it to &lt;code&gt;warn&lt;/code&gt; instead of &lt;code&gt;error&lt;/code&gt;.  When we run &lt;code&gt;npx eslint script.js&lt;/code&gt; again we'll see:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C32BElIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fdkUGAF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C32BElIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fdkUGAF.png" alt="ESLint Warning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which is exactly what we were expecting.  Other devs on our team now know that anything other than &lt;em&gt;camelCase&lt;/em&gt; is discouraged, but it will not necessarily prevent their commit from being integrated into the main branch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extending-configurations-airbnb"&gt;
  &lt;/a&gt;
  Extending Configurations (Airbnb)
&lt;/h2&gt;

&lt;p&gt;You can easily inherit from third party ESLint configurations that you've installed into your project.&lt;/p&gt;

&lt;p&gt;One of the most famous examples is &lt;a href="https://www.npmjs.com/package/eslint-config-airbnb"&gt;eslint-config-airbnb&lt;/a&gt; based on the set of linting rules used by Airbnb software developers.&lt;/p&gt;

&lt;p&gt;To apply the same sets of rules they use, first install the plugin:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint-config-airbnb &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add the plugin to the list of configurations we are extending in our config file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.eslintrc.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"airbnb"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we run &lt;code&gt;npx eslint script.js&lt;/code&gt; we will discover that our program that previous met our own standards, no longer meets the higher standards of Airbnb:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vsNT_uOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KKx5Ruo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vsNT_uOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KKx5Ruo.png" alt="ESLint Airbnb Plugin Errors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can continue to add plugins, chain them in the order you like, enable/disable rules and generally configure ESLint to work however best suits your team's project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#plugins-react"&gt;
  &lt;/a&gt;
  Plugins (React)
&lt;/h2&gt;

&lt;p&gt;Plugins allow to you add new rules that go beyond just the basic Javascript syntax so that you can also include rules that help write alternative syntax in the JS environment.  Two popular examples of that would be &lt;a href="https://reactjs.org/docs/introducing-jsx.html"&gt;React (JSX)&lt;/a&gt; and &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this example we'll choose JSX, but the Typescript plugin setup works essentially the same way.&lt;/p&gt;

&lt;p&gt;Create a new file called &lt;code&gt;react-example.jsx&lt;/code&gt; in your root with the following content:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-example.jsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CoolComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;COOL&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now install React, as well as the ESLint React plugin.  Although we are not going to run the code, having React installed will let ESLint automatically detect which version we are using and apply rules in that context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;react
npm &lt;span class="nb"&gt;install &lt;/span&gt;eslint-plugin-react &lt;span class="nt"&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then update your config like so to include the new &lt;code&gt;plugins&lt;/code&gt; value and &lt;code&gt;plugin:react/recommended&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.eslintrc.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"browser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"react"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"airbnb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plugin:react/recommended"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"parserOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ecmaVersion"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quotes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"double"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"camelcase"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"warn"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time we will run ESLint with some additional flags to check all files in the root directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx eslint ./ &lt;span class="nt"&gt;--ext&lt;/span&gt; .js &lt;span class="nt"&gt;--ext&lt;/span&gt; .jsx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;./&lt;/code&gt; says to lint files starting in the current directory.  By default it will process &lt;code&gt;.js&lt;/code&gt; files but by using the &lt;code&gt;--ext&lt;/code&gt; flag we can tell it to process both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.jsx&lt;/code&gt; files.  This will now give the output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RtOdzz8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6UdMQ1H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RtOdzz8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6UdMQ1H.png" alt="ESLint React"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#editor-integration-vs-code"&gt;
  &lt;/a&gt;
  Editor Integration (VS Code)
&lt;/h2&gt;

&lt;p&gt;ESLint can be integrated into your workflow to enable you to see errors as you type them, so you don't need to wait for the build process to discover them.  This is supported by a number of different IDEs, for this tutorial we will demonstrate how to add it to your VS Code environment.&lt;/p&gt;

&lt;p&gt;First we will install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint extension for VS Code&lt;/a&gt; and enable it.&lt;/p&gt;

&lt;p&gt;Next we need to open VS Code's &lt;code&gt;settings.json&lt;/code&gt; file.  You can find it in the &lt;code&gt;File &amp;gt; Preferences &amp;gt; Settings&lt;/code&gt; menu (or &lt;code&gt;Code &amp;gt; Preferences &amp;gt; Settings&lt;/code&gt; on mac) there is a link within the settings menu to access &lt;code&gt;settings.json&lt;/code&gt; directly.&lt;/p&gt;

&lt;p&gt;You can also access it through the Command Palette with &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; and typing &lt;code&gt;settings.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"eslint.validate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"javascript"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Doing so will enable ESLint validation on all your Javascript files, including JSX.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note you may have to close and re-open VS Code before it begins to properly lint your files)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now we can see the errors in our code as we write them.  The extension will automatically use the rules in your &lt;code&gt;.eslintrc.json&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VhT0aHLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CQMyh6u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VhT0aHLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CQMyh6u.png" alt="ESLint Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;You should now have a good understanding about what linters are, and how ESLint specifically helps you and your team write better more consistent Javascript code.&lt;/p&gt;

&lt;p&gt;Linters play an important role in the modern web stack.  Though some may disagree, the days or arguing between tabs and spaces, or use of semicolons are behind us.  Come to a decision for the project, not the individual, and let the tools manage it for you.  &lt;/p&gt;

&lt;p&gt;That lets you put your attention on what the code does where it belongs, rather than the syntax itself.&lt;/p&gt;

&lt;p&gt;Please check out the other entries in this series!  Feel free to leave a comment or question and share with others if you find any of them helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-running-a-local-web-server-4d8g"&gt;Running a Local Web Server&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-linters-eslint-59pm"&gt;Linters (ESLint)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/building-a-modern-web-stack-babel-3hfp"&gt;Babel&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-react-with-and-without-jsx-31c7"&gt;React &amp;amp; JSX&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Webpack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-webpack-part-1-2mn1"&gt;The Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-webpack-part-2-49bj"&gt;Loaders, Optimizations &amp;amp; Bundle Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-webpack-devserver-react-typescript-4b9b"&gt;DevServer, React &amp;amp; Typescript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;For more tutorials like this, follow me &lt;a href="https://twitter.com/eagleson_alex?ref_src=twsrc%5Etfw"&gt;@eagleson_alex&lt;/a&gt; on Twitter&lt;/p&gt;

&lt;p&gt;Thanks for reading, and stay tuned!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to automate WhatsApp messages</title>
      <author>vibalijoshi</author>
      <pubDate>Sat, 16 Oct 2021 11:56:53 +0000</pubDate>
      <link>https://dev.to/vibalijoshi/how-to-automate-whatsapp-messages-3cpl</link>
      <guid>https://dev.to/vibalijoshi/how-to-automate-whatsapp-messages-3cpl</guid>
      <description>&lt;p&gt;WhatsApp is without a doubt the most popular smartphone application on our devices. With restrictions in place all around the world, it became one of our primary means of communication.&lt;/p&gt;

&lt;p&gt;Are you the type of person who prefers not to be distracted from your work by the thought of wishing someone a happy birthday or reminding someone of anything at a specific time? If that's the case, this automation is for you!&lt;/p&gt;

&lt;p&gt;You can automate this process by using python by writing just 2-3 lines of code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--86Cd_kbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy0swgn2rm16oinpr5gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86Cd_kbY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy0swgn2rm16oinpr5gm.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python3 &lt;/li&gt;
&lt;li&gt;Chrome browser*&lt;/li&gt;
&lt;li&gt;You must be logged into &lt;a href="https://web.whatsapp.com/"&gt;WhatsApp web&lt;/a&gt; (does not matter if it is closed)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;If you do not have chrome browser, then you can follow the following steps:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;1.  Download and extract the current stable release of chrome driver from  &lt;a href="https://chromedriver.chromium.org/"&gt;https://chromedriver.chromium.org/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2.  Open the downloaded file and search for an application named chrome drive, copy its path, for windows, it should look like this - C:/Users/.../chromedriver.exe.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.  Then call  &lt;code&gt;pywhatkit.add_driver_path(path)&lt;/code&gt;  and pass the copied path as an argument, if the path is valid, a black window along with chrome will open and close.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;4.  Now call  &lt;code&gt;pywhatkit.load_QRcode()&lt;/code&gt;  function and scan the QR code.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_YoCWlUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7ai55113r8y1257l4om.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_YoCWlUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7ai55113r8y1257l4om.png" alt="Overview of the process"&gt;&lt;/a&gt;&lt;br&gt;
To automate the transmission of messages, we'll write a Python script. Whatsapp web would open at the appointed time and deliver the message to the specified contact number.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install-pywhatkit"&gt;
  &lt;/a&gt;
  Install PyWhatkit
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a new python file, name it &lt;code&gt;wa_automation.py&lt;/code&gt; or anything of your choice. &lt;/li&gt;
&lt;li&gt;We would use a python library &lt;a href="https://pypi.org/project/pywhatkit/"&gt;PyWhatKit&lt;/a&gt;, which comes with various whatsapp features like send text messages, images, gifs to a personal contact or even a group chat. 
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ankit404butfound"&gt;
        Ankit404butfound
      &lt;/a&gt; / &lt;a href="https://github.com/Ankit404butfound/PyWhatKit"&gt;
        PyWhatKit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Send WhatsApp message at certain time and many other things.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e87412b322c414971c84b5c77189cd32354e7c8410e97a54d033f031616a80fb/68747470733a2f2f6d656469612e646973636f72646170702e6e65742f6174746163686d656e74732f3834323739343136373133343435333832302f3838323232373936303631333034383335302f756e6b6e6f776e2e706e673f77696474683d31343430266865696768743d343230"&gt;&lt;img src="https://camo.githubusercontent.com/e87412b322c414971c84b5c77189cd32354e7c8410e97a54d033f031616a80fb/68747470733a2f2f6d656469612e646973636f72646170702e6e65742f6174746163686d656e74732f3834323739343136373133343435333832302f3838323232373936303631333034383335302f756e6b6e6f776e2e706e673f77696474683d31343430266865696768743d343230" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/09dea9548206ee25355b484a4843ea231cc843270fd4e179e3b537b1a18c5a5b/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f73746172732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/09dea9548206ee25355b484a4843ea231cc843270fd4e179e3b537b1a18c5a5b/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f73746172732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fc2134c9077a525e89fab507a4598317e3cb2598b9e3d9e3370ffef464cc16e1/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f666f726b732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/fc2134c9077a525e89fab507a4598317e3cb2598b9e3d9e3370ffef464cc16e1/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f666f726b732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d0c77c2e697b2329c74a14eadd5e855ad2ff46b74fbb68cdafa872494637c3dd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d6973737565732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/d0c77c2e697b2329c74a14eadd5e855ad2ff46b74fbb68cdafa872494637c3dd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d6973737565732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1ac20ddf0a1b3bf1ef15b84de7174574f3490899c6a9f84e931bbfec707e5fcd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d7072732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/1ac20ddf0a1b3bf1ef15b84de7174574f3490899c6a9f84e931bbfec707e5fcd/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6f70656e2d7072732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/14374cfeb834dd052c24fd322b58f13aea6b6e84549bde8f742dc17c194daf36/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6d6d6974732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/14374cfeb834dd052c24fd322b58f13aea6b6e84549bde8f742dc17c194daf36/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6d6d6974732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9762119f3c558ab2ee8c7e28a721289c93bef5d77f33256250a58bd220a9e80f/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6c6963656e73652f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/9762119f3c558ab2ee8c7e28a721289c93bef5d77f33256250a58bd220a9e80f/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f6c6963656e73652f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f3184fef6cc5983358db04478b19890a71f1d020267af8ff58726a594001c91/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6e7472696275746f72732f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/5f3184fef6cc5983358db04478b19890a71f1d020267af8ff58726a594001c91/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f636f6e7472696275746f72732f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/59122f0bebcb2da66137929ba2daf749e85f1fd9c8b008e02f54287ff8688c9a/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f72656c656173652f416e6b6974343034627574666f756e642f5079776861746b6974"&gt;&lt;img src="https://camo.githubusercontent.com/59122f0bebcb2da66137929ba2daf749e85f1fd9c8b008e02f54287ff8688c9a/68747470733a2f2f666c61742e62616467656e2e6e65742f6769746875622f72656c656173652f416e6b6974343034627574666f756e642f5079776861746b6974" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pypi.org/project/pywhatkit/" rel="nofollow"&gt;PyWhatKit&lt;/a&gt; is a Python library with various helpful features. It's easy-to-use and does not require you to do any additional setup. Currently, it has about 200k+ downloads and counting. New updates are released frequently with new features and bug fixes.&lt;/p&gt;
&lt;h1&gt;
Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
Have some query or suggestions or want to become a beta tester, join our discord server - &lt;a href="https://discord.gg/62Yf5mushu" rel="nofollow"&gt;Discord invite link&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
Help us test an upcoming feature - &lt;a href="https://pywhatkit.herokuapp.com/remote-kit" rel="nofollow"&gt;here&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
Documentation - &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/wiki"&gt;Wiki&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.
For more detailed information see &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/blob/master/CONTRIBUTING.md"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;MIT. For more information see &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/blob/master/LICENSE"&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ankit404butfound/PyWhatKit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;This library takes care of everything behind the scenes, so all we have to do is write a few lines of Python code describing it what message to send and when to send it, along with some other parameters.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
Install the library in your Python environment&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;pywhatkit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;If you face errors:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python &lt;span class="nt"&gt;-m&lt;/span&gt; pip &lt;span class="nb"&gt;install&lt;/span&gt; - upgrade pip

python &lt;span class="nt"&gt;-m&lt;/span&gt; pip &lt;span class="nb"&gt;install&lt;/span&gt; –upgrade Pillow 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Import the package&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# wa_automation.py
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#write-code"&gt;
  &lt;/a&gt;
  Write Code
&lt;/h2&gt;

&lt;p&gt;After we have installed the package, let us write our python code for automation.&lt;/p&gt;

&lt;p&gt;We will use the function &lt;code&gt;sendwhatmsg()&lt;/code&gt; to send our message to the contact.&lt;br&gt;
The function asks for the following parameters:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sendwhatmsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phone_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;time_hour&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;time_min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;wait_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;tab_close&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;close_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Mandatory Parameters: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;phone_no&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Enter phone number as a string&lt;/li&gt;
&lt;li&gt;It is mandatory to add the country code, otherwise you would get error&lt;/li&gt;
&lt;li&gt;Example: "+911234567891"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Message to be sent as a string.&lt;/li&gt;
&lt;li&gt;Ex: "One hour to go for the deadline"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;time_hour&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The hour when you want to send message&lt;/li&gt;
&lt;li&gt;Please note that the time should be given in 24 hour format.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;time_min&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The minutes when you want to send message.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# wa_automation.py
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt;
&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Reminder to go to market"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#customizations"&gt;
  &lt;/a&gt;
  Customizations:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# wa_automation.py
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt;
&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Reminder to go to market"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;wait_time:&lt;/strong&gt; After the appointed time, this is the time when your messages will be sent. It is set to 20 seconds by default, but you can alter it to suit your needs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;tab_close&lt;/strong&gt;: Specifies that whether the previous tab should be closed or not after sending the message. It will remain open after sending the message by default. You can change it by marking it &lt;code&gt;True&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;close_time&lt;/strong&gt;: You can control the time after which the tab should be closed &lt;strong&gt;after delivering the message&lt;/strong&gt; by specifying the &lt;code&gt;close_time&lt;/code&gt; parameter &lt;strong&gt;in seconds&lt;/strong&gt;. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ytPtt-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cd1r20k9k3jwiai64gwl.png" alt="full overview"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#other-features"&gt;
  &lt;/a&gt;
  Other features
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#send-messages-to-groups"&gt;
  &lt;/a&gt;
  Send messages to groups
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using the &lt;code&gt;sendwhatmsg_to_group()&lt;/code&gt; method we can send messages to group chats.&lt;/li&gt;
&lt;li&gt;Everything else is the same as the earlier case including the customizations, the only difference is that instead of &lt;code&gt;phone_num&lt;/code&gt; there is &lt;code&gt;group_id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can identify the group_id of your group through the invite link. Highlighted text is your group id.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dJDu5kDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/413/1%2AVq_3IAcaSeAgcky9ZEwRdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJDu5kDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/413/1%2AVq_3IAcaSeAgcky9ZEwRdg.png" alt="WhatsApp Group ID. https://holithemes.com/whatsapp-chat/fin… | by venkat |  Click to Chat | Medium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg_to_group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AB123CDEFGHijklmn"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"One hour to the deadline"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#send-instant-messages"&gt;
  &lt;/a&gt;
  Send Instant Messages
&lt;/h3&gt;

&lt;p&gt;Here only difference is that there is no &lt;code&gt;time_hour&lt;/code&gt; or &lt;code&gt;time_min&lt;/code&gt; to be scheduled.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sendwhatmsg_instantly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phone_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;wait_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;tab_close&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;close_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhatmsg_instantly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Can you call me? It is urgent!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#send-imagesgifs"&gt;
  &lt;/a&gt;
  Send Images/gifs
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sendwhats_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phone_no&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;img_path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;caption&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;wait_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;tab_close&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;close_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pywhatkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendwhats_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+911234567891"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;Image.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Question-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#send-multiple-messages"&gt;
  &lt;/a&gt;
  Send multiple messages
&lt;/h3&gt;

&lt;p&gt;The feature would be launched soon: &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/issues/126"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Sending multiple messages to multiple numbers
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#126&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/Elbargho"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--CY9a939n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/67919802%3Fv%3D4" alt="Elbargho avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/Elbargho"&gt;Elbargho&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/Ankit404butfound/PyWhatKit/issues/126"&gt;&lt;time&gt;Oct 07, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;I think you are already working on sending multiple messages to the same person (one after another), if not, this feature is needed.
Also I would like to send a message (or multiple) to multiple numbers.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ankit404butfound/PyWhatKit/issues/126"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#possible-pitfalls"&gt;
  &lt;/a&gt;
  Possible pitfalls:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Make sure your WhatsApp web is connected properly and you have a stable internet connection.&lt;/li&gt;
&lt;li&gt;When running the code, you should try to give at least 4-5 minutes from the present time; otherwise, if you set the time 1-2 minutes prior to the current time, the module may throw an error.&lt;/li&gt;
&lt;li&gt;Do not add 0 as a prefix when specifying time. &lt;/li&gt;
&lt;li&gt;Windows users can send Images (all formats) and GIF's. For Linux based distributions, only &lt;code&gt;JPEG&lt;/code&gt; and &lt;code&gt;PNG&lt;/code&gt; are supported. For MacOS users, only &lt;code&gt;JPEG&lt;/code&gt; is supported currently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#limitations"&gt;
  &lt;/a&gt;
  Limitations
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This would only work when you are working on the machine, connected to a stable connection.&lt;/li&gt;
&lt;li&gt;So for example, you want to send your parents good morning every day at 7:00 AM while sleeping, this won't work. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you are busy doing your work and you have to remind someone, or even schedule a text for meetings, announcements then this would do your work.&lt;/li&gt;
&lt;li&gt;Make aware your study group about the project deadline submission, wish someone a happy birthday on time while not being bothered about it doing work.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#alternative"&gt;
  &lt;/a&gt;
  Alternative
&lt;/h2&gt;

&lt;p&gt;If you want to send messages while being offline and away from your machine, then there is an alternative method for this using &lt;em&gt;Twilio, python and Heroku&lt;/em&gt;. It is not that convenient and works on the basis of a hack, but it is for free and it works. &lt;br&gt;
Check out these resources to implement it:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pQeFxdT3FGY"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="https://medium.com/programminghero/how-to-automate-whatsapp-with-15-lines-of-python-code-fa2d3565324d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpgJFcgj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/96/96/1%2Ac8dWhnGtWGvBdX1LuJ0nIw.png" alt="Shawon Chowdhury"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/programminghero/how-to-automate-whatsapp-with-15-lines-of-python-code-fa2d3565324d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Automate WhatsApp with 15 lines of Python Code | Shawon Chowdhury | by Shawon Chowdhury | Programming Hero | Medium&lt;/h2&gt;
      &lt;h3&gt;Shawon Chowdhury ・ &lt;time&gt;Oct 3, 2020&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Adding the Google reCAPTCHA v3 to an Angular application</title>
      <author>Rodrigo Kamada</author>
      <pubDate>Sat, 16 Oct 2021 11:29:26 +0000</pubDate>
      <link>https://dev.to/rodrigokamada/adding-the-google-recaptcha-v3-to-an-angular-application-kge</link>
      <guid>https://dev.to/rodrigokamada/adding-the-google-recaptcha-v3-to-an-angular-application-kge</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt; is a development platform for building WEB, mobile and desktop applications using HTML, CSS and TypeScript (JavaScript). Currently, Angular is at version 12 and Google is the main maintainer of the project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ng-recaptcha"&gt;ng-recaptcha&lt;/a&gt; is a simple and configurable reCAPTCHA v2 and v3 component library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before you start, you need to install and configure the tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js and npm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/cli"&gt;Angular CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE (e.g. &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-and-configure-the-account-on-the-google-recaptcha"&gt;
  &lt;/a&gt;
  Create and configure the account on the Google reCAPTCHA
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Let's create the account. Access the site &lt;a href="https://www.google.com/recaptcha/"&gt;https://www.google.com/recaptcha/&lt;/a&gt; and click on the button &lt;em&gt;v3 Admin Console&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fFz0IYGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step1_uwkikq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFz0IYGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step1_uwkikq.png" alt="Google reCAPTCHA - Home page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Fill in the field &lt;em&gt;Email or phone&lt;/em&gt; and click on the button &lt;em&gt;Next&lt;/em&gt; to login with your Google account and if you don't have an account, just create a new account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-SMr51l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step2_jy3afs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-SMr51l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step2_jy3afs.png" alt="Google reCAPTCHA - Sign up"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Click on the button &lt;em&gt;+&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_V_CI6Am--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step3_waxzdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_V_CI6Am--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step3_waxzdc.png" alt="Google reCAPTCHA - Create new"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Fill in the field &lt;em&gt;Label&lt;/em&gt;, click on the option &lt;em&gt;reCAPTCHA 3&lt;/em&gt;, Fill in the field &lt;em&gt;Domains&lt;/em&gt;, click on the checkbox &lt;em&gt;Accept the reCAPTCHA Terms of Service&lt;/em&gt; and click on the button &lt;em&gt;Submit&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MA2LjJNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step4_edo7dj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MA2LjJNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step4_edo7dj.png" alt="Google reCAPTCHA - Register a new site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Click on the button &lt;em&gt;COPY SITE KEY&lt;/em&gt; to copy the key, in my case, the key &lt;code&gt;6Lf7UL0cAAAAAIt_m-d24WG4mA1XFPHE8yVckc5S&lt;/code&gt; was copied because this key will be configured in the Angular application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMFCITUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step5_tkjuo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMFCITUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966510/Blog/angular-recaptcha-v3/recaptcha-step5_tkjuo4.png" alt="Google reCAPTCHA - Adding reCAPTCHA to your site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Ready! The keys have been generated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-angular-application"&gt;
  &lt;/a&gt;
  Create the Angular application
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Let's create the application with the Angular base structure using the &lt;code&gt;@angular/cli&lt;/code&gt; with the route file and the SCSS style format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ng new angular-recaptcha-v3
? Would you like to add Angular routing? Yes
? Which stylesheet format would you like to use? SCSS   &lt;span class="o"&gt;[&lt;/span&gt; https://sass-lang.com/documentation/syntax#scss                &lt;span class="o"&gt;]&lt;/span&gt;
CREATE angular-recaptcha-v3/README.md &lt;span class="o"&gt;(&lt;/span&gt;1064 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/.editorconfig &lt;span class="o"&gt;(&lt;/span&gt;274 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/.gitignore &lt;span class="o"&gt;(&lt;/span&gt;604 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/angular.json &lt;span class="o"&gt;(&lt;/span&gt;3291 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/package.json &lt;span class="o"&gt;(&lt;/span&gt;1082 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/tsconfig.json &lt;span class="o"&gt;(&lt;/span&gt;783 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/.browserslistrc &lt;span class="o"&gt;(&lt;/span&gt;703 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/karma.conf.js &lt;span class="o"&gt;(&lt;/span&gt;1437 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/tsconfig.app.json &lt;span class="o"&gt;(&lt;/span&gt;287 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/tsconfig.spec.json &lt;span class="o"&gt;(&lt;/span&gt;333 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/favicon.ico &lt;span class="o"&gt;(&lt;/span&gt;948 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/index.html &lt;span class="o"&gt;(&lt;/span&gt;304 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/main.ts &lt;span class="o"&gt;(&lt;/span&gt;372 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/polyfills.ts &lt;span class="o"&gt;(&lt;/span&gt;2820 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/styles.scss &lt;span class="o"&gt;(&lt;/span&gt;80 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/test.ts &lt;span class="o"&gt;(&lt;/span&gt;788 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/assets/.gitkeep &lt;span class="o"&gt;(&lt;/span&gt;0 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/environments/environment.prod.ts &lt;span class="o"&gt;(&lt;/span&gt;51 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/environments/environment.ts &lt;span class="o"&gt;(&lt;/span&gt;658 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app-routing.module.ts &lt;span class="o"&gt;(&lt;/span&gt;245 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.module.ts &lt;span class="o"&gt;(&lt;/span&gt;393 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.scss &lt;span class="o"&gt;(&lt;/span&gt;0 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.html &lt;span class="o"&gt;(&lt;/span&gt;24617 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.spec.ts &lt;span class="o"&gt;(&lt;/span&gt;1115 bytes&lt;span class="o"&gt;)&lt;/span&gt;
CREATE angular-recaptcha-v3/src/app/app.component.ts &lt;span class="o"&gt;(&lt;/span&gt;225 bytes&lt;span class="o"&gt;)&lt;/span&gt;
✔ Packages installed successfully.
    Successfully initialized git.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Install and configure the Bootstrap CSS framework. Do steps 2 and 3 of the post &lt;em&gt;&lt;a href="https://github.com/rodrigokamada/angular-bootstrap"&gt;Adding the Bootstrap CSS framework to an Angular application&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Configure the &lt;code&gt;siteKey&lt;/code&gt; variable with the Google reCAPTCHA key in the &lt;code&gt;src/environments/environment.ts&lt;/code&gt; and &lt;code&gt;src/environments/environment.prod.ts&lt;/code&gt; files as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;recaptcha&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;siteKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6Lf7UL0cAAAAAIt_m-d24WG4mA1XFPHE8yVckc5S&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Install the &lt;code&gt;ng-recaptcha&lt;/code&gt; library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;ng-recaptcha
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Import the &lt;code&gt;FormsModule&lt;/code&gt;, &lt;code&gt;RecaptchaV3Module&lt;/code&gt; modules. Configure the Google reCAPTCHA key. Change the &lt;code&gt;app.module.ts&lt;/code&gt; file and add the lines as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FormsModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;RECAPTCHA_V3_SITE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;RecaptchaV3Module&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-recaptcha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../environments/environment&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nl"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;BrowserModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;FormsModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;RecaptchaV3Module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;AppRoutingModule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="nx"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;provide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RECAPTCHA_V3_SITE_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;useValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recaptcha&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;siteKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Remove the contents of the &lt;code&gt;AppComponent&lt;/code&gt; class from the &lt;code&gt;src/app/app.component.ts&lt;/code&gt; file. Import the &lt;code&gt;NgForm&lt;/code&gt; component, the &lt;code&gt;ReCaptchaV3Service&lt;/code&gt; service and create the &lt;code&gt;send&lt;/code&gt; method as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgForm&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ReCaptchaV3Service&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ng-recaptcha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styleUrls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.scss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;recaptchaV3Service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ReCaptchaV3Service&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NgForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;invalid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;markAsTouched&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recaptchaV3Service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;importantAction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Token [&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;] generated`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Remove the contents of the &lt;code&gt;src/app/app.component.html&lt;/code&gt; file. Add the &lt;code&gt;re-captcha&lt;/code&gt; component as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-fluid py-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Angular reCAPTCHA v3&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;#form&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;&lt;span class="na"&gt;ngForm&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row mt-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-sm-12 mb-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-sm btn-primary"&lt;/span&gt; &lt;span class="na"&gt;(click)=&lt;/span&gt;&lt;span class="s"&gt;"send(form)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Run the application with the command below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; angular-recaptcha-v3@1.0.0 start
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; ng serve

✔ Browser application bundle generation complete.

Initial Chunk Files | Names         |      Size
vendor.js           | vendor        |   2.75 MB
styles.css          | styles        | 266.71 kB
polyfills.js        | polyfills     | 128.52 kB
scripts.js          | scripts       |  76.33 kB
main.js             | main          |  12.28 kB
runtime.js          | runtime       |   6.64 kB

                    | Initial Total |   3.23 MB

Build at: 2021-10-09T22:00:31.213Z - Hash: f91dc9237b57212ebd83 - Time: 12001ms

&lt;span class="k"&gt;**&lt;/span&gt; Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ &lt;span class="k"&gt;**&lt;/span&gt;


✔ Compiled successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Ready! Access the URL &lt;code&gt;http://localhost:4200/&lt;/code&gt; and check if the application is working. See the application working on &lt;a href="https://rodrigokamada.github.io/angular-recaptcha-v3/"&gt;GitHub Pages&lt;/a&gt; and &lt;a href="https://stackblitz.com/edit/angular12-recaptcha-v3"&gt;Stackblitz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GzZOCHMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966502/Blog/angular-recaptcha-v3/angular-recaptcha-v3_zrgsso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GzZOCHMr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rodrigokamada/image/upload/v1633966502/Blog/angular-recaptcha-v3/angular-recaptcha-v3_zrgsso.png" alt="Angular Google reCAPTCHA v3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application repository is available at &lt;a href="https://github.com/rodrigokamada/angular-recaptcha-v3"&gt;https://github.com/rodrigokamada/angular-recaptcha-v3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This tutorial was posted on my &lt;a href="https://rodrigo.kamada.com.br/blog/adicionando-o-google-recaptcha-v3-em-uma-aplicacao-angular"&gt;blog&lt;/a&gt; in portuguese.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>recaptcha</category>
      <category>webdev</category>
      <category>captcha</category>
    </item>
    <item>
      <title>Generic CRUD Service in Angular: Part 4</title>
      <author>Nikos Anifantis</author>
      <pubDate>Sat, 16 Oct 2021 11:27:46 +0000</pubDate>
      <link>https://dev.to/nikosanif/generic-crud-service-in-angular-part-4-3neo</link>
      <guid>https://dev.to/nikosanif/generic-crud-service-in-angular-part-4-3neo</guid>
      <description>&lt;p&gt;&lt;sup&gt;&lt;em&gt;Cover Photo by &lt;a href="https://unsplash.com/@xangriffin?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Xan Griffin&lt;/a&gt; on &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;.&lt;/em&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;This article is a part of a series about how to create &lt;strong&gt;Generic CRUD Service &amp;amp; Models in Angular&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/nikosanif/generic-crud-service-in-angular-part-1-understanding-generics-2n75"&gt;Part 1 - Understanding Generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nikosanif/generic-crud-service-in-angular-part-2-what-is-crud-30ek"&gt;Part 2 - What is CRUD?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nikosanif/generic-crud-service-in-angular-part-3-generic-crud-model-2hl"&gt;Part 3 - Generic CRUD Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👉 &lt;strong&gt;Part 4 - Generic CRUD Service in Angular&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#generic-crud-service"&gt;
  &lt;/a&gt;
  Generic CRUD Service
&lt;/h2&gt;

&lt;p&gt;Before we start generating and writing code, let’s take a step back and see the bigger picture. The generic service should accept the following arguments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;HttpClient&lt;/code&gt; is used for the HTTP requests&lt;/li&gt;
&lt;li&gt;the class of model for creating instances&lt;/li&gt;
&lt;li&gt;the path of the API endpoints.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, all resources should have 5 main methods related to CRUD…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Create&lt;/strong&gt; - Returns a new resource.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Get all&lt;/strong&gt; - Retrieves all resources as a list.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Get by ID&lt;/strong&gt; - Returns a specific resource by ID.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Update&lt;/strong&gt; - Updates a specific resource by ID.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Delete&lt;/strong&gt; - Removes a specific resource by ID.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Great, let’s create our methods step by step now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-create"&gt;
  &lt;/a&gt;
  1️⃣ Create
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;create()&lt;/code&gt; method accepts a partial model as argument and returns the created model from server. We say "partial" because before we create the resource, some properties are not available (e.g. &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;createdAt&lt;/code&gt;, etc). Also, it converts the result to an instance of model's class.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; All methods try to create instances of model's class in order to apply and benefit extra functionality from them (e.g. convert string dates to actual &lt;code&gt;Date&lt;/code&gt; in constructor or for future usage of their methods such as &lt;code&gt;toJSON()&lt;/code&gt; function).&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;}):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#two-get-all"&gt;
  &lt;/a&gt;
  2️⃣ Get all
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;get()&lt;/code&gt; method returns an &lt;code&gt;Observable&lt;/code&gt; with a list of all existing resources. It accepts no arguments and iterates the list to create multiple instances instead of simple JSON objects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#three-get-by-id"&gt;
  &lt;/a&gt;
  3️⃣ Get by ID
&lt;/h3&gt;

&lt;p&gt;The next method of "read" is &lt;code&gt;getById()&lt;/code&gt;. As is obvious, it accepts as argument an ID of type &lt;code&gt;number&lt;/code&gt; and returns an &lt;code&gt;Observable&lt;/code&gt; of the existing resource instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;getById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#four-update"&gt;
  &lt;/a&gt;
  4️⃣ Update
&lt;/h3&gt;

&lt;p&gt;When we want to update an existing resource, we'll use the &lt;code&gt;update()&lt;/code&gt; method. It accepts a partial model (e.g. only properties that we want to update) and returns the updated instance as &lt;code&gt;Observable&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;}):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#five-delete"&gt;
  &lt;/a&gt;
  5️⃣ Delete
&lt;/h3&gt;

&lt;p&gt;Finally, the &lt;code&gt;delete()&lt;/code&gt; method removes completely an existing resource from the server by a given ID. It accepts a number as argument that matches the ID of the model, but it does not return anything (&lt;code&gt;Observable&amp;lt;void&amp;gt;&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arrowright-final-result"&gt;
  &lt;/a&gt;
  ➡️ Final result
&lt;/h3&gt;

&lt;p&gt;Once we described one-by-one all methods, now it's time to see the final result of the generic service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HttpClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/common/http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs/operators&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ResourceModel&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your-path-to-model&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// see: Part 3&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ResourceService&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;ResourceModel&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="na"&gt;httpClient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="na"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="na"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;}):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;getById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="p"&gt;}):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tConstructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;httpClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion-whitecheckmark"&gt;
  &lt;/a&gt;
  Conclusion ✅
&lt;/h2&gt;

&lt;p&gt;Hooray! We made it to the end! 🙌&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this series of article and you will make your applications' code even more generic and reusable following the DRY principle. Also, I hope to use this article not only for the CRUD feature but whenever it's possible in your apps by using generics.&lt;/p&gt;

&lt;p&gt;Please support this article (and the previous parts) with your ❤️ 🦄 🔖 to help it spread to a wider audience. 🙏&lt;/p&gt;

&lt;p&gt;Also, don’t hesitate to contact me if you have any questions leaving here your comments or Twitter DMs &lt;a href="https://twitter.com/nikosanif"&gt;@nikosanif&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Author: Nikos Anifantis ✍️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/nikosanif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qj2cbvcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/twitter/url/https/twitter.com/nikosanif.svg%3Fstyle%3Dsocial%26label%3DFollow%2520nikosanif" alt="Twitter"&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/in/nikosanifantis/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rd3V3_tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-blue%3Fstyle%3Dsocial%26style%3Dflat%26logo%3Dlinkedin%26labelColor%3Dblue%26label%3DConnect%2520Nikos%2520Anifantis" alt="LinkedIn"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Terraform IaC Scanning with Trivy</title>
      <author>Marcel.L</author>
      <pubDate>Sat, 16 Oct 2021 11:15:25 +0000</pubDate>
      <link>https://dev.to/pwd9000/terraform-iac-scanning-with-trivy-3cai</link>
      <guid>https://dev.to/pwd9000/terraform-iac-scanning-with-trivy-3cai</guid>
      <description>&lt;h2&gt;
  &lt;a href="#trivy-vulnerability-scanner"&gt;
  &lt;/a&gt;
  Trivy Vulnerability Scanner
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Trivy&lt;/code&gt; is a simple and comprehensive scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues in IaC. &lt;code&gt;Trivy&lt;/code&gt; detects vulnerabilities of OS packages (Alpine, RHEL, CentOS, etc.) and language-specific packages (Bundler, Composer, npm, yarn, etc.). In addition, &lt;code&gt;Trivy&lt;/code&gt; scans Infrastructure as Code (IaC) files such as Terraform, Dockerfile and Kubernetes, to detect potential configuration issues that expose your deployments to the risk of attack.&lt;/p&gt;

&lt;p&gt;You can scan your Terraform configuration artifacts easily giving you the confidence that all is well with your configuration before deploying your Terraform (IaC) configurations. It is a free/open source tool by AquaSecurity. For more information go check out the &lt;a href="https://github.com/aquasecurity/trivy"&gt;Trivy github page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today we will look at how you can utilise &lt;code&gt;Trivy&lt;/code&gt; as part of your DevOps CI/CD process by scanning your Terraform (IaC) code for security risks, before actually deploying the configuration to ensure that there are no vulnerabilities or misconfigurations that could potentially open up security risks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-scan-iac"&gt;
  &lt;/a&gt;
  How to Scan IaC
&lt;/h2&gt;

&lt;p&gt;This tutorial is based on the following &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code"&gt;Azure DevOps Repository&lt;/a&gt; blueprint, which will use a CI/CD YAML pipeline to deploy an Azure Virtual Network using terraform IaC configuration files.&lt;/p&gt;

&lt;p&gt;There are terraform configuration files under the path &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/Terraform/networking"&gt;/Terraform/networking&lt;/a&gt;. There is also a YAML pipeline &lt;code&gt;network.yml&lt;/code&gt; under &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/pipelines"&gt;/pipelines/&lt;/a&gt; which is used to deploy the terraform code. The pipeline will trigger a &lt;code&gt;build.yml&lt;/code&gt; template which essentially creates our Terraform artifact and if successful the pipeline will trigger the &lt;code&gt;deploy.yml&lt;/code&gt; template which will apply our terraform configuration artifact. The pipeline templates are kept under the path &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/task_groups"&gt;/task_groups/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will utilise &lt;code&gt;Trivy&lt;/code&gt; during our build phase, so lets take a look at the &lt;code&gt;build.yml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;#// code/task_groups/build.yml#L16-L89&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.pool }}&lt;/span&gt;
    &lt;span class="na"&gt;workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;clean&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;src&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformInstaller@0&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;terraformVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.terraformVersion }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Download&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Install&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;sudo apt-get install rpm&lt;/span&gt;
            &lt;span class="s"&gt;wget https://github.com/aquasecurity/trivy/releases/download/v${{ parameters.trivyVersion }}/trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb&lt;/span&gt;
            &lt;span class="s"&gt;sudo dpkg -i trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb&lt;/span&gt;
            &lt;span class="s"&gt;trivy -v&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
          &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
          &lt;span class="na"&gt;backendServiceArm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.backend_service_connection_name }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmResourceGroupName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.backend_resource_group }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmStorageAccountName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.backend_storage_accountname }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmContainerName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.container_name }}&lt;/span&gt;
          &lt;span class="na"&gt;backendAzureRmKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.container_key }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;LOW/MED&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;trivy config --severity LOW,MEDIUM --exit-code 0 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;HIGH/CRIT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
            &lt;span class="s"&gt;trivy config --severity HIGH,CRITICAL --exit-code 1 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;plan'&lt;/span&gt;
          &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
          &lt;span class="na"&gt;commandOptions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--var-file=$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.tfvarFile&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--out=$(Agent.BuildDirectory)/src/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;parameters.root_directory&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}plan.tfplan'&lt;/span&gt;
          &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ parameters.deployment_service_connection_name }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CopyFiles@2&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Copy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Files&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Staging'&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;SourceFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Agent.BuildDirectory)/src'&lt;/span&gt;
          &lt;span class="na"&gt;Contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Terraform/**'&lt;/span&gt;
          &lt;span class="na"&gt;TargetFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)'&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ArchiveFiles@2&lt;/span&gt;
        &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;rootFolderOrFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)'&lt;/span&gt;
          &lt;span class="na"&gt;archiveFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'&lt;/span&gt;
          &lt;span class="na"&gt;replaceExistingArchive&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
          &lt;span class="na"&gt;includeRootFolder&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Archive Terraform Artifact&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;publish&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'&lt;/span&gt;
        &lt;span class="na"&gt;artifact&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.BuildId)-trivy'&lt;/span&gt;
        &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Publish Pipeline Artifact&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see from the &lt;code&gt;build&lt;/code&gt; process above we are performing the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download and Install Terraform.&lt;/li&gt;
&lt;li&gt;Download and Install &lt;code&gt;Trivy&lt;/code&gt; vulnerability scanner.&lt;/li&gt;
&lt;li&gt;Perform a Terraform Init on our terraform network configuration.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;Trivy&lt;/code&gt; vulnerability scanner in IaC mode for (LOW / MEDIUM) risks.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;Trivy&lt;/code&gt; vulnerability scanner in IaC mode for (HIGH / CRITICAL) risks.&lt;/li&gt;
&lt;li&gt;Run a Terraform plan.&lt;/li&gt;
&lt;li&gt;Copy our Terraform deployment files to a staging area.&lt;/li&gt;
&lt;li&gt;Create a Terraform deployment Artifact (zip) from the staging area.&lt;/li&gt;
&lt;li&gt;Publish the Terraform deployment artifact created to the pipeline for later use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;Trivy&lt;/code&gt; will not cause the &lt;code&gt;build&lt;/code&gt; process of the pipeline to fail on (LOW/MEDIUM) risks, but will cause a failure if any (HIGH/CRITICAL) issues are detected. This is defined by the &lt;code&gt;--exit-code (1)(0)&lt;/code&gt; argument:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;#// code/task_groups/build.yml#L51-L61&lt;/span&gt;

&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
&lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;LOW/MED&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode"&lt;/span&gt;
&lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;trivy config --severity LOW,MEDIUM --exit-code 0 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;

&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CmdLine@2&lt;/span&gt;
&lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;HIGH/CRIT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Trivy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;vulnerability&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;scanner&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;IaC&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;mode"&lt;/span&gt;
&lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;script&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;trivy config --severity HIGH,CRITICAL --exit-code 1 $(Agent.BuildDirectory)/src/${{ parameters.root_directory }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That is it as far as configuring and integrating &lt;code&gt;Trivy&lt;/code&gt; into your CI/CD process to check your Terraform deployments for any security or misconfiguration issues before completing a build. Let's take a look at an example.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please note that this example does not protect secrets being committed into source control and is meant as a guide. If you find any secrets in source code or terraform configurations after they have been committed please remove and rotate them as soon as possible.&lt;/p&gt;

&lt;p&gt;As you can see in my Terraform configuration &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code/Terraform/networking/main.tf"&gt;main.tf&lt;/a&gt;. I have configured a second provider using an alias, but I configured my provider with a &lt;code&gt;client_secret&lt;/code&gt; value in plain text:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Terraform/networking/main.tf#L18-L25&lt;/span&gt;

&lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"azurerm"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;features&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="nx"&gt;alias&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"core_network"&lt;/span&gt;
  &lt;span class="nx"&gt;subscription_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"00000000-0000-0000-0000-000000000000"&lt;/span&gt;
  &lt;span class="nx"&gt;client_id&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"00000000-0000-0000-0000-000000000000"&lt;/span&gt;
  &lt;span class="nx"&gt;client_secret&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"S3cR3t20!"&lt;/span&gt;
  &lt;span class="nx"&gt;tenant_id&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"00000000-0000-0000-0000-000000000000"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When &lt;code&gt;Trivy&lt;/code&gt; runs a scan against my Terraform configuration you will see that my &lt;code&gt;build&lt;/code&gt; process fails due to a &lt;strong&gt;CRITICAL&lt;/strong&gt; security risk that it identified.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k_Hc5pbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/DevOps-Terraform-Trivy/assets/detect.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k_Hc5pbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/DevOps-Terraform-Trivy/assets/detect.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-checked"&gt;
  &lt;/a&gt;
  What is checked?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Trivy&lt;/code&gt; checks Terraform IaC using &lt;a href="https://github.com/aquasecurity/tfsec"&gt;TFSEC&lt;/a&gt;. You can take a look at all the checks that &lt;code&gt;Trivy&lt;/code&gt; performs under the &lt;a href="https://github.com/aquasecurity/tfsec#included-checks"&gt;included checks&lt;/a&gt; documentation. In the previous example above &lt;code&gt;Trivy&lt;/code&gt; detected a risk called: &lt;a href="https://tfsec.dev/docs/general/secrets/sensitive-in-attribute/"&gt;Potentially sensitive data stored in block attribute&lt;/a&gt;, which notified us that our code was potentially exposing sensitive information.&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/DevOps-Terraform-Trivy/code"&gt;Github&lt;/a&gt; page. ❤️&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Like, share, follow me on: 🐙 &lt;a href="https://github.com/Pwd9000-ML"&gt;GitHub&lt;/a&gt; | 🐧 &lt;a href="https://twitter.com/pwd9000"&gt;Twitter&lt;/a&gt; | 👾 &lt;a href="https://www.linkedin.com/in/marcel-l-61b0a96b/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions &amp;amp; DevOps Architect.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>tutorial</category>
      <category>security</category>
      <category>azure</category>
      <category>devops</category>
    </item>
    <item>
      <title>#(ML) Learn About The Machine  Learning🤹 </title>
      <author>Deepak Gupta</author>
      <pubDate>Sat, 16 Oct 2021 10:56:26 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/ml-learn-about-the-machine-learning-3pfh</link>
      <guid>https://dev.to/deepakguptacoder/ml-learn-about-the-machine-learning-3pfh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone!
&lt;/h4&gt;

&lt;p&gt;In this article, we look into about machine learning in Artificial intelligence&lt;br&gt;
We are using Artificial intelligence in our daily life I will tell you that Machine learning how it work and how many types we are see all the step in this article  it's help you to grow and build your knowledge.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYs7TMyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4h5tlna4lrg47v595ry.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYs7TMyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4h5tlna4lrg47v595ry.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Machine learning is a subset of AI,and it's provide the static ( Statistics )Method and there algorithm and enable to machine and computers learning ,the program to change in any case Machine Learning is utilized in various applications, ranging from automating.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-machine-learning-"&gt;
  &lt;/a&gt;
  What is Machine learning ?
&lt;/h2&gt;

&lt;p&gt;Machine Learning provides many different techniques and algorithms to make the computer learn Machine learning uses a massive amount of structured and semi-structured data so that a machine learning model can generate accurate result or give predictions based on that data. Also it's called (ML)Machine learning enables a computer system to make predictions or take some decisions using historical data without being explicitly programmed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-machine-learning"&gt;
  &lt;/a&gt;
  Types Of Machine Learning
&lt;/h2&gt;

&lt;p&gt;There are Three types of Machine learning&lt;br&gt;
1.Supervised Learning&lt;br&gt;
2.Unsupervised Learning&lt;br&gt;
3.Reinforcement Learning&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supervised-learning"&gt;
  &lt;/a&gt;
  Supervised Learning
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GqF32Etf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1wl5s72jtytbv11fh17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GqF32Etf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1wl5s72jtytbv11fh17.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Supervised learning is typically done in the context of classification, when we want to map input to output labels, or regression.&lt;br&gt;
Supervised learning (SL) is the machine learning task of learning a function that maps an input to an output based on example input-output pairs. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unsupervised-learning"&gt;
  &lt;/a&gt;
  Unsupervised Learning
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tPz7hIL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgztqf42maobyautb43w.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPz7hIL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgztqf42maobyautb43w.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Unsupervised learning is a type of machine learning in which the algorithm is not provided with any pre-assigned labels or scores for the training data.&lt;br&gt;
Advantages of unsupervised learning include a minimal workload to prepare and audit the training set, in contrast to supervised learning techniques where a considerable amount. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reinforcement-learning"&gt;
  &lt;/a&gt;
  Reinforcement Learning
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I83n6Ucu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpkt6guutb09h03w7f9q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I83n6Ucu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpkt6guutb09h03w7f9q.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Reinforcement learning is a machine learning training method based.It enables an agent to learn through the consequences of actions in a specific environment.&lt;br&gt;
example, types of reinforcement might include praise, getting out of unwanted work, token rewards ,etc.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#its-the-some-of-the-basis-points-of-the-machine-learning-i-will-also-provide-the-machine-learning-and-there-platform-is-also-giving-in-my-last-article-you-can-check-there-and-learn-about-the-machine-learning"&gt;
  &lt;/a&gt;
  It's the some of the basis points of the machine learning I will also provide  the machine learning and there platform is also giving in my last article. You can check there and learn about the machine learning.
&lt;/h5&gt;

&lt;p&gt;.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h4&gt;

</description>
      <category>machinelearning</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Hyvä Theme
For Magento 2</title>
      <author>⭐ JaJuMa ⭐</author>
      <pubDate>Sat, 16 Oct 2021 10:46:53 +0000</pubDate>
      <link>https://dev.to/jajuma/hyva-themefor-magento-2-5169</link>
      <guid>https://dev.to/jajuma/hyva-themefor-magento-2-5169</guid>
      <description>&lt;h2&gt;
  &lt;a href="#no-rocket-science-but-rocket-speed"&gt;
  &lt;/a&gt;
  NO ROCKET SCIENCE, BUT ROCKET SPEED
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#about-hyv%C3%A4-theme-amp-magento-2"&gt;
  &lt;/a&gt;
  ABOUT HYVÄ THEME &amp;amp; MAGENTO 2
&lt;/h2&gt;

&lt;p&gt;Magento 2 Frontend Rethought And Redone.&lt;br&gt;
Top performance and fast loading times on mobile and desktop&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fD8lHWk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlb39jwrrkmbwjkrik1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD8lHWk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlb39jwrrkmbwjkrik1y.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-hyv%C3%A4-theme-for-magento-2"&gt;
  &lt;/a&gt;
  WHAT IS HYVÄ THEME FOR MAGENTO 2?
&lt;/h2&gt;

&lt;p&gt;The standard Magento frontend "Luma" has been much criticized since its release in 2015. Too slow, unnecessarily complex, too much effort even for smallest adjustments and changes to the design template.&lt;/p&gt;

&lt;p&gt;It was exactly this criticism and dissatisfaction in the Magento community that was the motivation for the development of Hyvä. The idea behind Hyvä is to build a new frontend or design template for Magento 2 from scratch. A template that throws everything "bad" about Luma overboard and instead is built from scratch and well thought out. Without outdated technologies and without unnecessary complex overhead, but still with all the features and possibilities that make Magento stand out.&lt;/p&gt;

&lt;p&gt;A design that with a leaner approach and modern technologies also meets today's expectations and requirements for performance, flexibility and easy customizability and that without bringing new challenges at the same time like it is the case with other frontend approaches (e.g. PWA, Headless...) with much higher implementation efforts and additional complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-the-hyv%C3%A4-theme-better"&gt;
  &lt;/a&gt;
  WHY IS THE HYVÄ THEME BETTER?
&lt;/h2&gt;

&lt;p&gt;The Hyvä Theme promises:&lt;/p&gt;

&lt;p&gt;Reduced complexity&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved performance&lt;/li&gt;
&lt;li&gt;Improved developer experience&lt;/li&gt;
&lt;li&gt;Improved development speed&lt;/li&gt;
&lt;li&gt;Lower dependencies&lt;/li&gt;
&lt;li&gt;Lower learning curve&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boom! That's an announcement!&lt;br&gt;
Does Hyvä Theme live up to these promises and is it really that good?&lt;/p&gt;

&lt;p&gt;Short and sweet answer: Yes. Hyvä abandons the old and cumbersome frameworks like KnockoutJS, RequireJS and jQuery on which the standard Magento 2 frontend is based.&lt;br&gt;
Instead, Hyvä relies on modern and lean frameworks, AlpineJS and TailwindCSS and takes full advantage of the capabilities of modern browsers with VanillaJS. Retained components of the well-known Magento frontend architecture that have proven themselves: Layout XML, PHTML templates, caching...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hyv%C3%A4-theme-highlights"&gt;
  &lt;/a&gt;
  HYVÄ THEME HIGHLIGHTS
&lt;/h2&gt;

&lt;p&gt;The Hyvä Theme:&lt;br&gt;
The best frontend for Magento 2.&lt;br&gt;
Excellent performance without compromise on all devices,&lt;br&gt;
thanks to most modern technology stack!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rocket Fast Page Load TImes&lt;/li&gt;
&lt;li&gt;Top Core Web Vitals Values LCP / CLS / FID / TBT&lt;/li&gt;
&lt;li&gt;Modern Technologies: AlpineJS &amp;amp; TailwindCS&lt;/li&gt;
&lt;li&gt;Reduced Complexity&lt;/li&gt;
&lt;li&gt;Full Magento Power&lt;/li&gt;
&lt;li&gt;Strong &amp;amp; Fast Growing Hyvä Community&lt;/li&gt;
&lt;li&gt;Compatible With Many 3rd Party Modules&lt;/li&gt;
&lt;li&gt;Faster Time-To-Market&lt;/li&gt;
&lt;li&gt;JaJuMa Extensions for Hyvä Theme&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.jajuma.de/en/jajuma-develop/magento-extensions"&gt;JaJuMa Magento Extensions&lt;/a&gt; for Hyvä To make your Hyvä store even better&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thats-why-hyv%C3%A4-theme-is-the-best-frontend-for-magento-2"&gt;
  &lt;/a&gt;
  That's why Hyvä Theme is the best frontend for Magento 2
&lt;/h2&gt;

&lt;p&gt;The streamlining by using the modern frameworks AlpineJS &amp;amp; TailwindCSS is the key to achieving the outstanding performance and the accompanying top user experience that the Hyvä theme offers.&lt;/p&gt;

&lt;p&gt;Another effect of this streamlining:&lt;br&gt;
Simplification leads to less complexity, easier implementation of customizations and overall shorter development times.&lt;/p&gt;

&lt;p&gt;For you as a merchant, this means:&lt;br&gt;
A first-class frontend with all the comprehensive possibilities Magento offers, while at the same time lower budget requirements and shorter project times.&lt;/p&gt;

&lt;p&gt;Too good to be true or not convinced yet?&lt;br&gt;
Read on to learn more about the benefits JaJuMa and Hyvä can offer you...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amp-pwa-headless-hyv%C3%A4-is-the-future"&gt;
  &lt;/a&gt;
  AMP? PWA? Headless? HYVÄ Is The Future!
&lt;/h2&gt;

&lt;p&gt;In the past, there have always been new ideas and approaches to make Magento better, faster, more modern... with new technologies.&lt;br&gt;
Again and again, these ideas also said: This is the future! So you have to do it now, otherwise, you will be left behind.&lt;/p&gt;

&lt;p&gt;Naturally, we have also looked at these earlier approaches and dealt with them. After all, it's fun to deal with new things, learn new things and try them out. Of course, we were also repeatedly approached by customers, whether one would not have to make "PWA" now?.&lt;/p&gt;

&lt;p&gt;However, none of these earlier ideas and hypes could convince us. From our point of view, the disadvantages outweighed the advantages, more hype than "gamechanger". Accordingly, we have also always advised our customers against getting involved in AMP or PWA and investing in these hypes. Too bad about the sales for us, but you don't have to go along with every technology hype. More important in the end is the overall result and a satisfied customer.&lt;/p&gt;

&lt;p&gt;With Hyvä, it was different from the very first moment, Belly feeling: there's the gamechanger!.&lt;br&gt;
Even when we first read the concept and idea behind Hyvä it was an eye-opening experience. It was exactly the realization of many whining conversations over lunch about Magento 2 "You'd have to..."&lt;/p&gt;

&lt;p&gt;So we took a closer look at Hyvä. Despite the positive gut feeling, but also with some skepticism due to the earlier disillusionments regarding other frontend alternatives. First tests, reading in docs etc. about Hyvä, AlpineJS, TailwindCSS..., make the first of our extensions compatible with Hyvä as the first "real-life" tests...&lt;/p&gt;

&lt;p&gt;Conclusion: Our gut feeling did not deceive us. The skepticism has evaporated!&lt;br&gt;
Hyvä keeps what it promises and convinces in every aspect. It is the frontend the Magento community has been waiting for.&lt;br&gt;
Hyvä is a gamechanger.&lt;br&gt;
Hyvä is the future!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EVo5IQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6u9otvc3biooq0637737.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EVo5IQt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6u9otvc3biooq0637737.gif" alt="Hyvä Rocket"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-are-excited-about-hyv%C3%A4"&gt;
  &lt;/a&gt;
  We are excited about Hyvä!
&lt;/h2&gt;

&lt;p&gt;Is Hyvä revolutionary?&lt;br&gt;
Maybe not, more appropriate would be: it's a clever rework of the previous Magento frontend architecture.&lt;br&gt;
In which outdated and obsolete components have been replaced with newer and more powerful ones.&lt;br&gt;
It's the powerful frontend Magento deserves.&lt;br&gt;
Is Hyvä a hype?&lt;br&gt;
Granted, the attention and comments Hyvä has been getting since its release are reminiscent of a hype.&lt;br&gt;
But the concept and implementation are too good to just disappear again like some other inflated hype.&lt;br&gt;
We are convinced:&lt;br&gt;
Hyvä is here to stay! Hyvä is the front-end "way to go" for a convincing, contemporary and future-proof e-commerce solution based on Magento which is still the most powerful e-commerce system.&lt;/p&gt;

&lt;p&gt;What Do You Think?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-information"&gt;
  &lt;/a&gt;
  Further Information
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.jajuma.de/en/jajuma-shop/demo-shop-with-magento-2-and-hyva-themes"&gt;Experience Hyvä: Live-Demo&lt;/a&gt;&lt;br&gt;
Experience Hyvä live and in action on our fully functional live demo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jajuma.de/en/jajuma-develop/magento-extensions"&gt;Hyvä Extensions: by JaJuMa&lt;/a&gt;&lt;br&gt;
Discover our already available Extensions for Hyvä that will make your Hyvä store even better.&lt;/p&gt;

</description>
      <category>magento</category>
      <category>performance</category>
      <category>frontend</category>
      <category>development</category>
    </item>
  </channel>
</rss>
