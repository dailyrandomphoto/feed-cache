<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network. Open source and radically transparent.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What are the most generous free plans you know?</title>
      <author>Madza</author>
      <pubDate>Thu, 26 Nov 2020 14:54:27 +0000</pubDate>
      <link>https://dev.to/madza/what-are-the-most-generous-free-plans-you-know-4jmn</link>
      <guid>https://dev.to/madza/what-are-the-most-generous-free-plans-you-know-4jmn</guid>
      <description>&lt;p&gt;Could you share some services with the most generous free plans across various categories like cloud storage, hosting platforms, database services, CI/CD tools, productivity and collaboration apps, etc?&lt;/p&gt;

&lt;p&gt;Some of my favs include &lt;a href="https://degoo.com/"&gt;Degoo&lt;/a&gt; with 100GB free cloud storage, &lt;a href="https://netlify.com/"&gt;Netlify&lt;/a&gt; with unlimited projects and 100GB bandwidth, and &lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB&lt;/a&gt; with 25 GB of data storage.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>GraphQL Terminology - Cheatsheet</title>
      <author>Ido Shamun</author>
      <pubDate>Thu, 26 Nov 2020 14:11:47 +0000</pubDate>
      <link>https://dev.to/dailydotdev/graphql-terminology-cheatsheet-4lem</link>
      <guid>https://dev.to/dailydotdev/graphql-terminology-cheatsheet-4lem</guid>
      <description>&lt;p&gt;GraphQL is an API query language. Originally developed by Facebook, and now it's part of the Linux Foundation. It is used by giants like Facebook (duh... üòâ), GitHub, and Pinterest. Its community is growing fast, and it's probably the most popular alternative to the good old REST.&lt;/p&gt;

&lt;p&gt;Practically, GraphQL is only a specification, and it has many implementations for different languages, JavaScript, Go, Elixir, Ruby, Java, Python, and more.&lt;/p&gt;

&lt;p&gt;In this article, I would like to explain the terms of GraphQL. Just like other specs, they had to come up with their own language and terms, so I'm here to the rescue.&lt;/p&gt;

&lt;p&gt;I'm not going to cover all the terms but only the most popular ones. The ones you're probably going to see when you build your very own GraphQL server or client.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Type&lt;/strong&gt; - GraphQL is a type-based query language. As such, Type is the basic building block to model our domain. Just like in any other typed language such as Java, C#, and TypeScript. Every type consists of one or more fields.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Field&lt;/strong&gt; - A Field defines what data a given Type holds. Other languages might refer to it as property or getter. The only difference is that a field can also get arguments just like a function. This enables us to create complex logic for resolving the field.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Query&lt;/strong&gt; - A prebuilt type for querying our data. Every field in the Query type can be perceived as a query on its own. Think of it as a GET request in REST API. A Query field only returns data but doesn't change it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mutation&lt;/strong&gt; - A prebuilt type for manipulating our data. Every field in the Mutation type can be thought of as a POST/PUT/DELETE/PATCH request in REST API. A Mutation field can return data, but its primary purpose is to manipulate data.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Subscription&lt;/strong&gt; - A prebuilt type for describing real-time events the client can subscribe to. Every field is an event that the client can ask to receive updates in real-time. Think of it as a chat room that you receive all the new messages once you joined it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fragment&lt;/strong&gt; - A reusable unit for grouping together a set of fields often used in a Query, Mutation, or a Subscription. You can think of it as a View in a SQL database. If you find yourself querying for the same fields repeatedly in different queries, you can create a Fragment to encapsulate it. A Fragment can also get arguments.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Directive&lt;/strong&gt; - Just like arguments, directives can be used to change a field's fulfillment. A directive can be attached to a field or fragment inclusion. The server has to implement the directive and what they will exactly do. The main concept is to create reusable logic to apply to the resolver of every field. For example, an authentication directive can drop a specific field if the request is not authenticated. The specs include two directives, which must be supported by any GraphQL server, include and skip.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Schema&lt;/strong&gt; - A document that defines our API. This is the essence of a GraphQL server. It defines the types, queries, mutations, subscriptions, directives, and everything that is needed. A schema is just a definition with no implementation. The schema can be written either in code or in GraphQL SDL (schema definition language).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SDL&lt;/strong&gt; (Schema Definition Language) - The language we use to define our GraphQL schema (see above).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Code-first&lt;/strong&gt; - As mentioned above, you can either write your GraphQL schema programmatically or using the SDL. Code-first refers to the first, where the developer creates the schema in the programming language of its choice, for example, TypeScript. The GraphQL schema is then generated automatically by a script.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Schema-first&lt;/strong&gt; - The exact opposite of code-first. In schema-first, the developer writes the schema in SDL and only then writes the types and resolvers in its choice language. They can also use existing tools to generate it automatically from the schema rather than doing it manually.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Resolver&lt;/strong&gt; - A server function that fulfills a request of a certain field. Usually, the first resolver to be called is the query/mutation resolver, followed by the resolver of every field returned in the response.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AST&lt;/strong&gt; (Abstract Syntax Tree) - Every GraphQL request can be translated into a big nested tree object. AST is the binary representation for the text-based query. As soon as the server receives the query, it's compiled to an AST that can be used by the resolvers. The resolvers use it to determine what types to return, arguments, directives, and basically everything. AST is a generic concept in programming but can be seen a lot in advanced topics of GraphQL.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Context&lt;/strong&gt; - A value that is passed to all the resolvers of the same request. Usually, the Context will hold information such as the authenticated user, database connection, and other shared data.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Schema Federation&lt;/strong&gt; (Apollo Federation) - Today, everyone wants micro-projects, micro-frontend, and microservice. Schema Federation is the process of merging many GraphQL schemas while separating concerns. Each schema can refer to another service schema's types without worrying about the implementation. The references will be resolved at runtime by the Gateway. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Gateway&lt;/strong&gt; - a smart GraphQL proxy. The Gateway uses schema federation to expose a single schema composed of at least one federated schema. Upon a request, the Gateway knows how to route split it between the services to fulfill it completely.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it. We made it! Now you can probably understand any GraphQL discussion or get started with your first GraphQL service. You know the fundamental terminology to get it going.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;&lt;a href="https://api.daily.dev/get?r=devto"&gt;daily.dev&lt;/a&gt; is the easiest way to stay updated on the latest programming news. It's a feed of articles that's ranked by a community of +60,000 developers. Get the best content from the top tech publications on any topic you want. All in one extension.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://api.daily.dev/get?r=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BuAxU7zj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fuiu65dyow99idmn6e3e.png" alt="Daily Poster"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>graphql</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Intro to measuring page performance with Puppeteer &amp; Playwright</title>
      <author>Tim Nolet üë®üèª‚ÄçüöÄ</author>
      <pubDate>Thu, 26 Nov 2020 13:30:19 +0000</pubDate>
      <link>https://dev.to/checkly/intro-to-measuring-page-performance-with-puppeteer-playwright-oli</link>
      <guid>https://dev.to/checkly/intro-to-measuring-page-performance-with-puppeteer-playwright-oli</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://theheadless.dev"&gt;theheadless.dev&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The need for fast and responsive applications has never been greater because of the move from &lt;a href="https://gs.statcounter.com/platform-market-share/desktop-mobile-tablet/worldwide/2019"&gt;desktop to mobile&lt;/a&gt;. Still, web applications have been increasing in &lt;a href="https://httparchive.org/reports/page-weight"&gt;complexity and size&lt;/a&gt;, with rising load times. It is therefore clear why the topic of webpage performance is more popular today than it likely ever was.&lt;/p&gt;

&lt;p&gt;This article aims at giving a practical introduction to the whys and hows of web performance, without getting lost in the depth or breadth of this massive topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-performance-matters" class="anchor"&gt;
  &lt;/a&gt;
  Why performance matters
&lt;/h2&gt;

&lt;p&gt;The time it takes for a service to become usable, as well as its general responsiveness, bear a lot of weight on the user's perception of that service. Helpful features, great design and other prominent characteristics all become irrelevant when an online service is so slow that users navigate away. &lt;/p&gt;

&lt;p&gt;You can build the best web application in the world, but be mindful that each user will have a specific amount of time they are willing to invest in your service to solve their problems. Exceed that amount, and you risk losing them to a different, more performant solution. This is even truer for new users, who haven't yet been given proof of the quality of your service, and are essentially investing their time up-front, hoping for a return.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-competitive-differentiator" class="anchor"&gt;
  &lt;/a&gt;
  A competitive differentiator
&lt;/h3&gt;

&lt;p&gt;There is a brighter side to the topic: if low performance can sink an online platform, high performance can very well help it rise to the top. Speed and responsiveness can be a differentiating characteristic for a service, prompting users to choose it over the competition. Therefore an investment in this area will almost always pay off. Some notorious real-world examples from known businesses include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pinterest decreasing wait time for their users, &lt;a href="https://medium.com/@Pinterest_Engineering/driving-user-growth-with-performance-improvements-cfc50dafadd7"&gt;increasing both traffic and conversions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Zalando applying small improvements in load time and finding a direct correlation with &lt;a href="https://engineering.zalando.com/posts/2018/06/loading-time-matters.html"&gt;increased revenue per session&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The BBC discovering that every extra second that a page took to load led to 10% of &lt;a href="https://www.creativebloq.com/features/how-the-bbc-builds-websites-that-scale"&gt;users leaving the page&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#measuring-performance" class="anchor"&gt;
  &lt;/a&gt;
  Measuring performance
&lt;/h2&gt;

&lt;p&gt;Given the importance of page performance, it is no coincidence that browsers expose a ton of insights into &lt;a href="https://web.dev/metrics/"&gt;performance metrics&lt;/a&gt;. Being aware of how your application scores against these &lt;em&gt;across time&lt;/em&gt; will provide you the feedback you need to keep it performant for your users. There are several approaches that can be combined to achieve the best results:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Real user monitoring&lt;/em&gt; to understand what performance actual end-users of your service are experiencing.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Synthetic monitoring&lt;/em&gt; to proactively gather intel on service performance, as well as to find issues before users stumble into them.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Performance testing&lt;/em&gt; to avoid releasing performance regression to production in the first place.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Regular audits&lt;/em&gt; to get an overview of your page's performance and suggestions on how to improve it, e.g. with tools such as &lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;Google Lighthouse&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#performance-with-headless-tools" class="anchor"&gt;
  &lt;/a&gt;
  Performance with headless tools
&lt;/h2&gt;

&lt;p&gt;As much as we should be striving to build performant applications, we should commit to monitoring and testing performance to enable continuous feedback and rapid intervention in case of degradation. Puppeteer and Playwright give us a great toolkit to power both synthetic monitoring and performance testing.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Access to the Web Performance APIs, especially &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming"&gt;PerformanceNavigationTiming&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming"&gt;PerformanceResourceTiming&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Whenever testing against Chromium, access to the Chrome DevTools Protocol for traffic inspection, network emulation and more.&lt;/li&gt;
&lt;li&gt;Easy interoperability with performance libraries from the Node.js ecosystem.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#web-performance-apis" class="anchor"&gt;
  &lt;/a&gt;
  Web Performance APIs
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://www.w3.org/TR/navigation-timing/"&gt;Navigation Timing&lt;/a&gt; and the &lt;a href="https://www.w3.org/TR/resource-timing-1/"&gt;Resource Timing&lt;/a&gt; performance APIs are &lt;a href="https://www.w3.org/"&gt;W3C&lt;/a&gt; specifications. The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings"&gt;MDN docs&lt;/a&gt; very clearly define the scope of both:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Navigation timings are metrics measuring a browser's document navigation events. Resource timings are detailed network timing measurements regarding the loading of an application's resources. Both provide the same read-only properties, but navigation timing measures the main document's timings whereas the resource timing provides the times for all the assets or resources called in by that main document and the resources' requested resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can use the Navigation Timing API to retrieve timestamps of key events in the page load timeline. &lt;/p&gt;

&lt;p&gt;With Puppeteer:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With Playwright:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The Resource Timing API allows us to zoom in to single resources and get accurate information about how quickly they are being loaded. For example, we could specifically look at our website's logo:&lt;/p&gt;

&lt;p&gt;With Puppeteer:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With Playwright:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#chrome-devtools-for-performance" class="anchor"&gt;
  &lt;/a&gt;
  Chrome DevTools for performance
&lt;/h3&gt;

&lt;p&gt;The Chrome DevTools Protocol offers many great performance tools for us to leverage together with Puppeteer and Playwright.&lt;/p&gt;

&lt;p&gt;One important example is network throttling, through which we can simulate the experience of users accessing our page with different network conditions.&lt;/p&gt;

&lt;p&gt;With Puppeteer:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With Playwright:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The DevTools Protocol is quite extensive. We recommend exploring the &lt;a href="https://chromedevtools.github.io/devtools-protocol/"&gt;documentation&lt;/a&gt; and getting a comprehensive overview of its capabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-performance-libraries" class="anchor"&gt;
  &lt;/a&gt;
  Additional performance libraries
&lt;/h3&gt;

&lt;p&gt;Lighthouse can easily be used programmatically with Playwright and Puppeteer to gather values and scores for different metrics, like &lt;a href="https://web.dev/interactive/"&gt;Time To Interactive (TTI)&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;With Puppeteer:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With Playwright:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#further-reading" class="anchor"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The comprehensive &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Performance"&gt;MDN Web Performance documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/learn/#performance"&gt;web.dev's performance section&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://addyosmani.com/blog/puppeteer-recipes/"&gt;Web Performance Recipes With Puppeteer&lt;/a&gt; by Addy Osmani&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aslushnikov/getting-started-with-cdp"&gt;Getting started with Chrome DevTools Protocol&lt;/a&gt; by Andrey Lushnikov&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/tools/lighthouse#get-started"&gt;Get Started with Google Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Banner image: &lt;a href="https://www.flickr.com/photos/51867225@N08/5177851910"&gt;"Speed of Light"&lt;/a&gt; by &lt;a href="https://www.flickr.com/photos/51867225@N08"&gt;Rhys A.&lt;/a&gt;, licensed under CC BY 2.0&lt;/p&gt;

</description>
      <category>webperf</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How demo-oriented programming makes you better</title>
      <author>Dvir Segal</author>
      <pubDate>Thu, 26 Nov 2020 12:32:33 +0000</pubDate>
      <link>https://dev.to/dejavo/how-demo-oriented-programming-makes-you-better-44mo</link>
      <guid>https://dev.to/dejavo/how-demo-oriented-programming-makes-you-better-44mo</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oegKGsCa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/0%2ASAnuYVLSCOpYrzqG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oegKGsCa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/0%2ASAnuYVLSCOpYrzqG" alt=""&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@nicolasthomas?utm_source=medium&amp;amp;utm_medium=referral"&gt;Nicolas Thomas&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#on-the-focused-effort-of-making-a-working-prototype" class="anchor"&gt;
  &lt;/a&gt;
  On the focused effort of making a working prototype
&lt;/h4&gt;

&lt;p&gt;There are many ways you can determine whether a new feature will add value to the product or turn out to be a complete waste of time. For instance, you can undertake user research, analyze the demands of the market, and study existing solutions. However, we (developers) have a fantastic tool in our sleeves: Developing a running project that demonstrates the proposed solution‚Äôs key ideas is your optimal option‚Ää‚Äî‚Ääin my opinion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l2JhtKtDWYNKdRpoA/source.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l2JhtKtDWYNKdRpoA/source.gif" alt=""&gt;&lt;/a&gt;Whhhhhhhhhhhhhhhhhy - &lt;a href="https://media.giphy.com/media/l2JhtKtDWYNKdRpoA/source.gif"&gt;src&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs why.&lt;/p&gt;

&lt;p&gt;Just one small thing: what do I mean by ‚Äúdemo‚Äù?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--okKtG0xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/900/0%2ADaRBobZ-t1AXsbxC" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--okKtG0xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/900/0%2ADaRBobZ-t1AXsbxC" alt=""&gt;&lt;/a&gt;demo‚Ää‚Äî‚Ää&lt;a href="https://dilbert.com/strip/2000-02-24"&gt;src&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, a demonstration, also known as a customer acceptance test, is usually performed by showing the product or feature to stakeholders within your organization shortly after completing it.&lt;/p&gt;

&lt;p&gt;Its main goal is to make sure everyone knows what you will be releasing and reduce the risk of investing time in the wrong direction. It should keep everyone on the same page and lead to a better product and happier customers. Thus, the demo plays an essential part in your decisions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rjp_QKdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/600/0%2A_iucqTz1qzrqMMQ8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rjp_QKdf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/600/0%2A_iucqTz1qzrqMMQ8.jpg" alt=""&gt;&lt;/a&gt;demo oriented‚Ää‚Äî‚Ää&lt;a href="https://makeameme.org/meme/this-demo-uses-5c49db"&gt;src&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Therefore, focus on developing the most valuable features and code them as quickly as possible, but don‚Äôt compromise over quality. Write down any shortcuts and obstacles you‚Äôve found on the way. It will help you in the future when it‚Äôs time to decide which product to put on the road map.&lt;/p&gt;

&lt;p&gt;If done often, demos create accountability, a drive to deliver, which supports the team‚Äôs continuous improvement. Furthermore, as a by-product, the demo allows the team to be proud of what they‚Äôve developed and have &lt;strong&gt;dedicated&lt;/strong&gt; time to celebrate small wins. A word of advice: be careful of demos that are too polished. You might create a false impression among participants that you‚Äôre ready to launch when that might be far from the truth. To prevent confusion, clarify which shortcuts have been taken and what is left to be done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/FSBbRZEpPxJbaHcyvJ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/FSBbRZEpPxJbaHcyvJ/giphy.gif" alt=""&gt;&lt;/a&gt;Proof of Concept - &lt;a href="https://media.giphy.com/media/FSBbRZEpPxJbaHcyvJ/giphy.gif"&gt;src&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until now, I‚Äôve been talking about demos in the &lt;strong&gt;s&lt;/strong&gt;oftware &lt;strong&gt;d&lt;/strong&gt;evelopment &lt;strong&gt;l&lt;/strong&gt;ife &lt;strong&gt;c&lt;/strong&gt;ycle. But there‚Äôs another way to do demos‚Ää‚Äî‚Ääa PoC, or proof of concept. PoCs are usually done in the developers‚Äô environments, without any software ( &lt;strong&gt;QA&lt;/strong&gt; ) testing, with some cut corners at times, but with the goal of getting quick feedback. The purpose is to keep the team ‚Äúin shape‚Äù, meaning preserving their ability to quickly create solutions while deep diving into new tech stack, development methodologies, and more. This method is highly recommended to busy &lt;strong&gt;I&lt;/strong&gt;ndividual &lt;strong&gt;C&lt;/strong&gt;ontributors who don‚Äôt find enough time to play with the code.&lt;/p&gt;

&lt;p&gt;Simply put, I believe demos, regardless of how they are done, are an excellent way of sharing knowledge with others, learning new stuff, and generally keep &lt;strong&gt;improving&lt;/strong&gt; one‚Äôs work.&lt;/p&gt;

</description>
      <category>softwaredevelopment</category>
      <category>softwareengineering</category>
      <category>programming</category>
      <category>demo</category>
    </item>
    <item>
      <title>Where accessibility and AI meet: changing lives a few lines of code at a time</title>
      <author>Rory Preddy</author>
      <pubDate>Thu, 26 Nov 2020 12:31:47 +0000</pubDate>
      <link>https://dev.to/rorypreddy/where-accessibility-and-ai-meet-changing-lives-a-few-lines-of-code-at-a-time-1an7</link>
      <guid>https://dev.to/rorypreddy/where-accessibility-and-ai-meet-changing-lives-a-few-lines-of-code-at-a-time-1an7</guid>
      <description>&lt;p&gt;Anyone who has felt what it is like to be stripped of one of your five senses ‚Äì sight, taste, touch, hearing and smell ‚Äì will know how much harder it can be navigating and making sense of the world. People with other accessibility challenges will most likely tell you the same. Certain day-to-day activities may take a little longer to complete ‚Äì like reading if you‚Äôre visually impaired, for example ‚Äì without tools to help make these tasks more accessible.&lt;/p&gt;

&lt;p&gt;Making the world more accessible is a major focus for modern organisations and governments. Our own government annually recognises the importance of levelling the playing field for people of all capabilities and abilities by marking Disability Rights Awareness Month ‚Äì and one of this year‚Äôs sub-themes is focusing on ‚ÄòPersons with disabilities as equal players in building inclusive economies‚Äô.&lt;/p&gt;

&lt;p&gt;Accessibility is a key part of being able to achieve this. It‚Äôs increasingly a business imperative, and we are beginning to see some incredible developments around cognitive products and services using AI that show that it is possible to change lives a few lines of code at a time. &lt;/p&gt;

&lt;p&gt;As a case in point, research has shown that &lt;a href="https://www.microsoft.com/en-us/research/group/azure-florence/"&gt;sight&lt;/a&gt; is the sense that humans rely on most, because it forms the cornerstone of human learning, cognition and perception: between 80 and 85 percent of these activities take place through our visual recognition and intelligence system. So it‚Äôs not difficult to imagine how challenging it must be in a world without 20/20 vision.  &lt;/p&gt;

&lt;p&gt;I myself got glasses a few months ago, and combined with a collection of clever tools that I‚Äôve been using, my eyes have been opened to just how critical cognitive services and products are to change and improve everyday life. &lt;/p&gt;

&lt;p&gt;This understanding of the essential role of cognitive tools in opening up accessibility has also long served as the driving force for Microsoft‚Äôs AI Cognitive Services team to create and develop AI tools and solutions that make a tangible difference. These include apps and tools like Azure Florence, Seeing AI, Azure Image Captioning and Immersive Reader. I have seen, worked with and benefitted from these technologies and have also witnessed how they are helping other people make sense of the world around them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.microsoft.com/en-us/research/project/azure-florence-vision-and-language/"&gt;Azure Florence&lt;/a&gt;, which is one of Microsoft‚Äôs most recent cognitive projects, focuses on developing the best computer vision technologies and algorithms to detect and translate data from multiple channels, such as vision and language, to help humans more accurately and easily perceive the world around us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Equipping AI with human capabilities to help make sense of the world&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.microsoft.com/en-us/ai/seeing-ai"&gt;Seeing AI&lt;/a&gt;, for example, helps people with vision impairments by converting visual information into an audio narrative. It uses the device‚Äôs camera to identify people and objects and then describe them to the person. The app was originally a beta that the company took and has been refined to give qualities and capabilities that are able to even surpass human function.  &lt;/p&gt;

&lt;p&gt;Likewise with our &lt;a href="https://blogs.microsoft.com/ai/azure-image-captioning/"&gt;Azure image captioning bot&lt;/a&gt;, which is able to not only analyse images through facial recognition, but also recognise emotions and use human language to describe the picture. &lt;/p&gt;

&lt;p&gt;Anyone who works with AI knows that describing an image accurately and as well as people do is the ultimate goal, so to be able to do that and help customers and developers improve accessibility in their own services ‚Äì as well as assist people who are blind or have low vision at the same time ‚Äì is a proud moment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.microsoft.com/en-us/education/products/learning-tools"&gt;Immersive Reader&lt;/a&gt; also assists with a range of accessibility issues by improving readability. It was designed to support students with dyslexia and dysgraphia in the classroom, but can support anyone who wants to make reading on their device easier ‚Äì it includes features like reading aloud, changing text options such as size and font, identifying parts of speech and syllables, setting line focus ‚Äì which can also help people with Attention Deficit Hyperactivity Disorder (ADHD) ‚Äì and translating the text into another language.  &lt;/p&gt;

&lt;p&gt;Although just a small cross-section of what is being done to improve accessibility, these examples show that accessibility tools are becoming ever more accurate and user-friendly, truly helping people experience and make sense of the world around them and levelling the playing field for people with accessibility challenges.  &lt;/p&gt;

&lt;p&gt;The time is now for people with accessibility challenges: with more companies making the move to remote and hybrid working models, we are no longer in offices that often act as barriers themselves. We are now, more than ever, part of the digital revolution ‚Äì and can begin to enjoy a more accessible and inclusive world through the power of AI.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>ai</category>
      <category>microsoft</category>
    </item>
    <item>
      <title>Absolute Beginner's Guide to BCC, XDP, and eBPF</title>
      <author>Amir Keshavarz</author>
      <pubDate>Thu, 26 Nov 2020 10:52:03 +0000</pubDate>
      <link>https://dev.to/satrobit/absolute-beginner-s-guide-to-bcc-xdp-and-ebpf-47oi</link>
      <guid>https://dev.to/satrobit/absolute-beginner-s-guide-to-bcc-xdp-and-ebpf-47oi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If you're reading this, chances are you have some idea of eBPF and XDP. In this article, we'll write an eBPF program that will count and categorize packets based on the destination port.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ebpf" class="anchor"&gt;
  &lt;/a&gt;
  eBPF
&lt;/h2&gt;

&lt;p&gt;Writing low-level tracing, monitoring, or network programs in Linux is not easy. Through all the layers of the kernel, people have been squeezing every bit of performance they could get.&lt;/p&gt;

&lt;p&gt;And that's where eBPF comes in. eBPF is basically an extended and modern variation of BPF which is like a virtual machine inside the Linux kernel. It can execute user-defined programs inside a sandbox in the kernel. &lt;/p&gt;

&lt;p&gt;These programs can be executed in various hook points but we will focus on XDP for now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#xdp" class="anchor"&gt;
  &lt;/a&gt;
  XDP
&lt;/h2&gt;

&lt;p&gt;XDP provides a data path which we can intercept or even edit packets using an eBPF program. The execution can happen in 3 different places depending on your setup:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Offloaded - NIC:&lt;/strong&gt; eBPF program can be offloaded to the network card itself, provided that the card supports XDP offloading.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native - NIC Driver:&lt;/strong&gt; eBPF will fallback to the driver if your card doesn't support offloading. The good news is that most drivers support this and performance is still impressive since this is all before entering the Linux network stack.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Generic - Linux Network Stack:&lt;/strong&gt; This is the last option if the mentioned methods are not supported. Performance is not as good since the packet has entered the network stack.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The fate of packets is decided by action codes that your program returns:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;XDP_PASS:&lt;/strong&gt; let the packet continue through the network stack&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;XDP_DROP:&lt;/strong&gt; silently drop the packet&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;XDP_ABORTED:&lt;/strong&gt; drop the packet with trace point exception&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;XDP_TX:&lt;/strong&gt; bounce the packet back to the same NIC it arrived on&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;XDP_REDIRECT:&lt;/strong&gt; redirect the packet to another NIC or user space socket via the &lt;code&gt;AF_XDP&lt;/code&gt; address family&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#bcc" class="anchor"&gt;
  &lt;/a&gt;
  BCC
&lt;/h2&gt;

&lt;p&gt;BCC is a toolkit for creating eBPF programs with bindings to a few languages like Python, Lua and etc. BCC makes it pleasantly easy to write eBPF programs and their GitHub page is filled with examples to get you started.&lt;/p&gt;

&lt;p&gt;We'll use BCC in Python to write our program.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ebpf-program-in-c" class="anchor"&gt;
  &lt;/a&gt;
  eBPF Program in C
&lt;/h1&gt;

&lt;p&gt;We start by writing the eBPF program itself before getting into the bcc stuff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#entry-point" class="anchor"&gt;
  &lt;/a&gt;
  Entry Point
&lt;/h2&gt;

&lt;p&gt;eBPF is event-driven so it'll call our exposed function when a packet arrives. Hence, we'll define a function that receives packet metadata and returns an XDP action code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#define KBUILD_MODNAME "udp_counter"
#include &amp;lt;linux/bpf.h&amp;gt;
#include &amp;lt;linux/if_ether.h&amp;gt;
#include &amp;lt;linux/ip.h&amp;gt;
#include &amp;lt;linux/udp.h&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;udp_counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;xdp_md&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;bpf_trace_printk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"packet received&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// MOERE CODE HERE&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#udp-packet-data" class="anchor"&gt;
  &lt;/a&gt;
  UDP Packet Data
&lt;/h2&gt;

&lt;p&gt;using the &lt;code&gt;ctx&lt;/code&gt; we can extract everything we need about the arrived packet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;ethhdr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;iphdr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;IPPROTO_UDP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;udphdr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// MORE CODE HERE&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, we go through the eth and IP packet to get to the UDP packet. Here, we can get the destination port that needs to be stored in a histogram. But what histogram!? In the next section, we learn about BPF maps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bpf-maps" class="anchor"&gt;
  &lt;/a&gt;
  BPF Maps
&lt;/h2&gt;

&lt;p&gt;If you were wondering how will we be able to store our results, there is amazing news. BPF provides multiple useful data structures that we can use to store persisted data or even exchange data to and from userland.&lt;/p&gt;

&lt;p&gt;Here is a list of some of the most noticeable data BPF data structures:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;BPF_TABLE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPF_HASH&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPF_ARRAY&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPF_HISTOGRAM&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BPF_PERF_ARRAY&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We'll use &lt;code&gt;BPF_HISTOGRAM&lt;/code&gt; to count UDP packets based on their port.&lt;/p&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;BPF_HISTOGRAM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;key_type&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we define the histogram outside of the &lt;code&gt;udp_counter&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;BPF_HISTOGRAM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u64&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You'll need only one method to work with histograms: &lt;code&gt;increment()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;increment&lt;/code&gt; will increment the value based on the key that you provided.&lt;br&gt;
Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;increment_amount&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the next section, we go back to the UDP packet and try to count them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#counter" class="anchor"&gt;
  &lt;/a&gt;
  Counter
&lt;/h2&gt;

&lt;p&gt;In the &lt;code&gt;UDP Packet Data&lt;/code&gt; section, we extracted the UDP packet and left a place to count them.&lt;/p&gt;

&lt;p&gt;Since we have a histogram ready, the only thing you need to do is to increment the value based on the port that you extract from the UDP packet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;u64&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The htons() function converts the unsigned short integer hostshort from host byte order to network byte order.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#xdp-action-code" class="anchor"&gt;
  &lt;/a&gt;
  XDP Action Code
&lt;/h2&gt;

&lt;p&gt;Now that we're done with the packet, we need to pass the packet so it can go through the network stack. We can just return &lt;code&gt;XDP_PASS&lt;/code&gt; at the end of our function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;XDP_PASS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-code" class="anchor"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#define KBUILD_MODNAME "udp_counter"
#include &amp;lt;linux/bpf.h&amp;gt;
#include &amp;lt;linux/if_ether.h&amp;gt;
#include &amp;lt;linux/ip.h&amp;gt;
#include &amp;lt;linux/udp.h&amp;gt;
&lt;/span&gt;
&lt;span class="n"&gt;BPF_HISTOGRAM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u64&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;udp_counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;xdp_md&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;ethhdr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;iphdr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;IPPROTO_UDP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;udphdr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;data_end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;u64&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;udp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;XDP_PASS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#bcc-program" class="anchor"&gt;
  &lt;/a&gt;
  BCC Program
&lt;/h1&gt;

&lt;p&gt;The only thing left to write is a simple bcc program to load our eBPF code and attach it to a device like loopback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bcc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BPF&lt;/span&gt; &lt;span class="c1"&gt;#1
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bcc.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;printb&lt;/span&gt;

&lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"lo"&lt;/span&gt; &lt;span class="c1"&gt;#2
&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BPF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"udp_counter.c"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#3
&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"udp_counter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BPF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XDP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#4
&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach_xdp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#5
&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trace_print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#6
&lt;/span&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;#7
&lt;/span&gt;
    &lt;span class="n"&gt;dist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"counter"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#8
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt; &lt;span class="c1"&gt;#9
&lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DEST_PORT : %10d, COUNT : %10d"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;#10
&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove_xdp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#11
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, the program is fairly simple.&lt;/p&gt;

&lt;p&gt;Steps explained:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import the BPF python lib.&lt;/li&gt;
&lt;li&gt;Specify which device you want your eBPF code to get attached to.&lt;/li&gt;
&lt;li&gt;Create the BPF object and load the file.&lt;/li&gt;
&lt;li&gt;Load the function.&lt;/li&gt;
&lt;li&gt;Attach the function to the xdp hook of the device that was specified earlier.&lt;/li&gt;
&lt;li&gt;Read the trace_pipe file so we can trace what's happening.&lt;/li&gt;
&lt;li&gt;Catch the exit signal so we can exit gracefully.&lt;/li&gt;
&lt;li&gt;Get the contents of the histogram.&lt;/li&gt;
&lt;li&gt;Iterate over the content.&lt;/li&gt;
&lt;li&gt;Print the results.&lt;/li&gt;
&lt;li&gt;Deattach our code from the device.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#execution" class="anchor"&gt;
  &lt;/a&gt;
  Execution
&lt;/h2&gt;

&lt;p&gt;Simple run the python code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;python main.py
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Wait for some data to be gathered. You can send out some packets using &lt;code&gt;nc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nc &lt;span class="nt"&gt;-u&lt;/span&gt; 127.0.0.1 5005
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Send multiple packets to different ports and then exit from the python program. You should see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DEST_PORT : 5007, COUNT : 1
DEST_PORT : 5005, COUNT : 5
DEST_PORT : 5006, COUNT : 2
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see, the result shows how many packets were sent to these ports separately.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we learned about eBPF and XDP and why they matter so much. We also were able to write a program to count UDP packets based on their ports using the amazing BCC toolkit.&lt;/p&gt;

&lt;p&gt;I really hope this article has been helpful. Thank you for your time.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#links" class="anchor"&gt;
  &lt;/a&gt;
  Links
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Berkeley_Packet_Filter#Extensions_and_optimizations"&gt;https://en.wikipedia.org/wiki/Berkeley_Packet_Filter#Extensions_and_optimizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.cilium.io/en/stable/bpf/"&gt;https://docs.cilium.io/en/stable/bpf/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Express_Data_Path"&gt;https://en.wikipedia.org/wiki/Express_Data_Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ebpf.io/what-is-ebpf"&gt;https://ebpf.io/what-is-ebpf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iovisor/bcc"&gt;https://github.com/iovisor/bcc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md"&gt;https://github.com/iovisor/bcc/blob/master/docs/reference_guide.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://linux.die.net/man/3/hton"&gt;https://linux.die.net/man/3/hton&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>linux</category>
      <category>ebpf</category>
      <category>xdp</category>
      <category>networking</category>
    </item>
    <item>
      <title>How to Stand Out as Developer?</title>
      <author>Matthew Rungwe</author>
      <pubDate>Thu, 26 Nov 2020 10:36:44 +0000</pubDate>
      <link>https://dev.to/matthewrungwe/how-to-be-a-stand-out-as-developer-53h3</link>
      <guid>https://dev.to/matthewrungwe/how-to-be-a-stand-out-as-developer-53h3</guid>
      <description>&lt;p&gt;When I first started out, this question never came up in my mind. Like most, we start asking ourselves this question when we are now preparing for a job or further along in your career. &lt;/p&gt;

&lt;p&gt;So, what makes a you &lt;em&gt;stand out&lt;/em&gt; developer? On a general note, be good at what you do. While this response is correct, it is vague as to what to focus on and is often interpreted as hard skills. In this article, I will share a little about what can &lt;em&gt;stand out as a developer&lt;/em&gt; from when you starting out and throughout your career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#path"&gt;Master your Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#solving"&gt;Become a problem solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#analytics"&gt;Develop an analytical mind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#innovative"&gt;Be Innovative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learn-to-learn"&gt;Learn how to Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Know how Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adapt"&gt;Be able to adapt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#best-practices"&gt;Follow best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#time-management"&gt;Manage your time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bring-to-the-table"&gt;Have more you can bring to the table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#consistency"&gt;Be consistent&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id="core-skills"&gt;Core Skills&lt;/h2&gt;

&lt;h3 id="path"&gt;Master your Path&lt;/h3&gt;

&lt;p&gt;First things first, you need to choose a path. For some it can be Front End Web Development, others Android Development or Cloud Engineering. After you've chosen a path, master it. You don't have to be perfect in the path that you chose but you do need to be competent in it and you need to understand a majority of the features in the path. &lt;/p&gt;

&lt;h3 id="solving"&gt;Become a problem solver&lt;/h3&gt;

&lt;p&gt;To those who are just starting out and those who have been in the industry for a while now, I think we can all agree that there is a great amount of problems that we get in writing the code. While we have people and databases to turn to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.stackoverflow.com"&gt;StackOverflow&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.grepper.com"&gt;Grepper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It amazing when you can solve your own problems. Being a &lt;em&gt;problem solver&lt;/em&gt; also means &lt;strong&gt;you need to be able to come up with ways to implement a feature or fix a bug&lt;/strong&gt; and if &lt;em&gt;solution one&lt;/em&gt; is not working, be able to come up with &lt;em&gt;solution two&lt;/em&gt;. Be able to work around abstacles.&lt;/p&gt;

&lt;h3 id="innovative"&gt;Be Innovative&lt;/h3&gt;

&lt;p&gt;Being innovative means being able to create a solution for a larger audience or to be deployed on a broader scale. &lt;br&gt;
Our world is filled with challenges and struggles. Being a developer does not just mean you can write code for your organization or yourself but it also means &lt;strong&gt;you are in a place to design solutions, come up with ideas&lt;/strong&gt; to a lot of problems being faced out there. &lt;/p&gt;




&lt;h3 id="transferable-skills"&gt;Transferable Skills&lt;/h3&gt;

&lt;p&gt;Transferable skills are soft skills. These can be carried across industries hence &lt;em&gt;transferable&lt;/em&gt;. Soft skills are important because as a developer, you are designing and developing solutions for people and not just for yourself. These &lt;em&gt;soft skills&lt;/em&gt; allow us to see beyond the screen and understand the world or live with it.&lt;/p&gt;

&lt;h3 id="learn-to-learn"&gt;Learn to learn&lt;/h3&gt;

&lt;p&gt;Learning never really ends. There is &lt;strong&gt;always going to be something that you did not know&lt;/strong&gt;, it can be a new technology or a more concise way to implement a feature. Be willing to learn yourself for growth and to improve the way you do things. Be willing to learn from others because everyone has something unique to share. Keep an open mind, never close your doors to growth because you never know what opportunity is around the corner. You can take a look at this article &lt;a href="https://dev.to/matthewrungwe/your-learning-plan-4dp8"&gt;Your Learning Plan&lt;/a&gt; I wrote on setting up a learning plan.&lt;/p&gt;

&lt;h3 id="communication"&gt;Know how to communicate&lt;/h3&gt;

&lt;p&gt;Communication is &lt;em&gt;extremely important&lt;/em&gt;. Most of your time as a developer is spent communicating, either with a team or with a client. Ask questions where you don't understand, it's better to be redundent but certain. Share ideas, raise concerns&lt;/p&gt;

&lt;h3 id="adapt"&gt;Be able to adapt&lt;/h3&gt;

&lt;p&gt;Technology is constantly changing and evolving rapidly. New solutions are coming up into the market every single time. You need to be able to adapt and be flexible. Don't be hard bent onto one way of doing things, one language or one framework because you never know if there will be a new solution to eliminate the way the current solution is working. You need to be willing to learn new things and build on what you know.&lt;/p&gt;

&lt;h3 id="best-practices"&gt;Follow best practices&lt;/h3&gt;

&lt;p&gt;There is nothing that makes a Developer stand out more than the way they write their code. Your code needs to be clean and dry. It's okay when you write code that works and you can read it but it is even batter to write it in a format that others can be able to read.Keep it &lt;strong&gt;concise&lt;/strong&gt;, use &lt;strong&gt;comments&lt;/strong&gt; and &lt;strong&gt;refactor&lt;/strong&gt; where you can and as you code. &lt;/p&gt;

&lt;h3 id="time-management"&gt;Manage your time&lt;/h3&gt;

&lt;p&gt;Time management is crucial as a developer. If you have a problem, you will need to know how you will break it up and how much time you will spend on each module. Without good time management, you will find yourself missing deadlines, not having enough time to finish Task B, you will be overwhelmed, always stressed and under a lot of pressure. This is a quality that spans across multiple industries. Good time management instills order into one's life.&lt;/p&gt;

&lt;h3 id="bring-to-the-table"&gt;Have more you can bring to the table&lt;/h3&gt;

&lt;p&gt;It's important to know your &lt;strong&gt;path&lt;/strong&gt; and mastering it. It's also exciting when you have more than your general skills to offer. For others it can be blogging, others podcasts and some, research. For many, these can be well recognise as hobbies. &lt;/p&gt;

&lt;h3 id="consistency"&gt;Be Consistent&lt;/h3&gt;

&lt;p&gt;Be consistent in all you do. Be able to &lt;em&gt;show up and put in work to the thngs that really matter to you&lt;/em&gt;: this might be in your work or your learning. Hard work will eventually get you somewhere. Build as many habits as you can, this will automate your problem solving skills for all the situations you encounter every single day. &lt;/p&gt;




&lt;p&gt;Being a developer is a stepping stone to bringing the creative world hidden within you. Everyone has this element of creativity, most just need the right tools to make it happen. &lt;/p&gt;

&lt;p&gt;All in all: to stand out, to be good,to be competent and to be a sort after developer you need to have both Core Skills and Transfereble skills. Also, &lt;em&gt;be willing at any point to go the extra  mile for what you love and believe in&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>A Deep Review of Top WordPress Translation Plugins</title>
      <author>GretaThemes</author>
      <pubDate>Thu, 26 Nov 2020 10:02:35 +0000</pubDate>
      <link>https://dev.to/gretathemes/a-deep-review-of-top-wordpress-translation-plugins-1e8b</link>
      <guid>https://dev.to/gretathemes/a-deep-review-of-top-wordpress-translation-plugins-1e8b</guid>
      <description>&lt;p&gt;In the era of globalization today, if you want to reach customers from all over the world, a website with only one language may not be enough. Therefore, using plugins to translate WordPress websites has become more popular than ever. Translation plugins are also becoming more competitive to meet the various needs of users. In this article, we will deep dive into the review and comparison of the most 4 popular translation plugins: WPML (premium), and free versions of Polylang, TranslatePress, and Weglot.&lt;/p&gt;

&lt;h2&gt;Things to Consider When Choosing a Translation Plugin&lt;/h2&gt;

&lt;h3&gt;Supported Languages&lt;/h3&gt;

&lt;p&gt;This is the most important criterion when we evaluate a translation plugin. You need to know whether the plugin supports your desired languages or not, for example, &lt;a href="https://gretathemes.com/themes-support-right-to-left-language/"&gt;Right-to-left language&lt;/a&gt; (RTL), Latin, etc.&lt;/p&gt;

&lt;p&gt;Furthermore, when your multilingual website has a lot of readers from different countries, the more languages it supports, the more advantages you have. Therefore, you should pay attention to the number of supported languages.&lt;/p&gt;

&lt;h3&gt;Supported Content&lt;/h3&gt;

&lt;p&gt;There are 2 types of supported content:&lt;/p&gt;

&lt;ul&gt;

¬†  &lt;li&gt;
&lt;strong&gt;Basic content&lt;/strong&gt;: translate the content of posts, themes (widgets, menus, categories, taxonomies), plugins, page URLs, ...&lt;/li&gt;

¬†  &lt;li&gt;
&lt;strong&gt;Advanced content&lt;/strong&gt;: translate the content of image URLs, WooCommerce pages, custom fields, custom post types, page builders, ...&lt;/li&gt;

&lt;/ul&gt;

&lt;h3&gt;Translation Method&lt;/h3&gt;

&lt;p&gt;Currently, there are 2 popular Translation Methods: manual translation and automatic translation.&lt;/p&gt;

&lt;p&gt;Manual translation is translating the content manually. It's like writing another language version to replace the original.&lt;/p&gt;

&lt;p&gt;Automatic translation means that the plugin will automatically translate the content with its available dictionary.&lt;/p&gt;

&lt;p&gt;Each method has its own pros and cons. Therefore, if any plugin combines both of them, that'll be an advantage.&lt;/p&gt;

&lt;p&gt;In addition, some plugins provide other translation services to meet the various needs of users. For example, they allow a third party / a translator to participate in the manual translation or provide professional translation services.&lt;/p&gt;

&lt;h3&gt;Translation Interface&lt;/h3&gt;

&lt;p&gt;This is a very important factor because it affects your translation experience. A friendly interface will help you to translate or connect with your needed languages more easily and faster.&lt;/p&gt;

&lt;p&gt;After learning about the criteria for evaluating a translation plugin, let's dive in each one:&lt;/p&gt;

&lt;h2&gt;Polylang&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h8rHWAIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0Oy534g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h8rHWAIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0Oy534g.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Supported Languages&lt;/h3&gt;

&lt;p&gt;The free version of Polylang supports more than 90 languages, including RTL languages. In addition, you can simply add your own custom languages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AR5T42wd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/qempZ15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AR5T42wd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/qempZ15.png" alt="Polylang is a translation plugin supporting more than 90 languages" width="559" height="625"&gt;&lt;/a&gt; Add your own custom languages&lt;/p&gt;

&lt;p&gt;Using Polylang, you only have one style for the language transition button. It's a widget that can be placed in the menu, footer, sidebar, or any other widget areas as below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cbsAjhC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Ez9iUIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cbsAjhC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Ez9iUIQ.png" alt="Polylang translation plugin only has one style for the language transition button" width="1339" height="593"&gt;&lt;/a&gt; You have only one style for the language transition button&lt;/p&gt;

&lt;h3&gt;Supported Content&lt;/h3&gt;

&lt;p&gt;Polylang supports translating the content of themes, articles, pages, media, taxonomies, page builders, ...&lt;/p&gt;

&lt;p&gt;Especially, unlike other plugins, Polylang translates menus by creating a separate one for each language version. This section is also located in the &lt;strong&gt;Menu&lt;/strong&gt; section of WordPress. Thus, it's quite convenient.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DDOWfA4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/a95hvKJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DDOWfA4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/a95hvKJ.png" alt="Polylang translation plugin translates menus by creating a separate one for each language version." width="1346" height="625"&gt;&lt;/a&gt; Translate menu by creating a separate menu for each language version&lt;/p&gt;

&lt;p&gt;As for translating WooCommerce pages, you must purchase a premium extension called &lt;strong&gt;Polylang for WooCommerce&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;Plugin Setup&lt;/h3&gt;

&lt;p&gt;Setting up and installing the Polylang plugin is pretty quick and easy with just a few clicks. However, I find that there is no search bar in the language selecting section, so searching manually is quite time-consuming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8t2Dpq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/qovf0iY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8t2Dpq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/qovf0iY.png" alt="installing the Polylang translation plugin plugin is pretty quick and easy with just a few clicks." width="738" height="615"&gt;&lt;/a&gt; Searching manually is quite time-consuming&lt;/p&gt;

&lt;h3&gt;Translation Method&lt;/h3&gt;

&lt;p&gt;The free version of Polylang now only allows you to manually translate. To have the automatic translation feature, you have to install a third-party plugin like &lt;strong&gt;Lingotek Translation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With this method, you just need to add this automatic translation only when you really need it, hence avoiding the redundancy of an unused feature. In addition, Lingotek Translation is also free and it includes professional translation services. On the other hand, the plugin installation may take up extra space on the website.&lt;/p&gt;

&lt;h3&gt;Translation Interface&lt;/h3&gt;

&lt;p&gt;Polylang's interface is very easy-to-use and familiar.&lt;/p&gt;

&lt;p&gt;To translate the content of pages / posts, just create a translation (similar to creating a new post / page in WordPress) then connect it to the original version. You can do it all in the WordPress Editor interface (like the below image).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b9IpEWMA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/696XizK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9IpEWMA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/696XizK.png" alt="Polylang's interface is very easy-to-use and familiar." width="1345" height="627"&gt;&lt;/a&gt; Posts / pages translation interface&lt;/p&gt;

&lt;p&gt;Translating tags, categories is even easier because you can do it right in the &lt;strong&gt;Tag&lt;/strong&gt;, &lt;strong&gt;Category&lt;/strong&gt; sections of WordPress.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FpD_EqTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/EXPDsNH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpD_EqTo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/EXPDsNH.png" alt="Translating tags, categories is even easier with Polylang translation plugin" width="1348" height="616"&gt;&lt;/a&gt; Category translation interface&lt;/p&gt;

&lt;h2&gt;TranslatePress&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yrzVHtHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/EzPoyOc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrzVHtHz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/EzPoyOc.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Supported Languages&lt;/h3&gt;

&lt;p&gt;The free version of TranslatePress supports many languages: more than 120, including RTL.&lt;/p&gt;

&lt;p&gt;Additionally, you can create your own custom languages using additional code.&lt;/p&gt;

&lt;h3&gt;Supported Content&lt;/h3&gt;

&lt;p&gt;TranslatePress can translate almost anything, from the content of themes, plugins, menus, page builders to URLs. This plugin can even translate shortcodes, WooCommerce pages, and Gutenberg blocks that the free version of Polylang doesn't support.&lt;/p&gt;

&lt;h3&gt;Plugin Setup&lt;/h3&gt;

&lt;p&gt;Installing and using TranslatePress is also pretty quick. However, the TranslatePress plugin's setup is a bit more complicated than Polylang. On the other hand, in the language settings, TranslatePress is more convenient than Polylang because you can search for languages faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xun7Gphq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/iRZjX3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xun7Gphq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/iRZjX3x.png" alt="TranslatePress plugin's setup is a bit more complicated than Polylang translation plugin" width="1037" height="623"&gt;&lt;/a&gt; TranslatePress can search for languages faster&lt;/p&gt;

&lt;p&gt;You have up to three options for displaying the language transition button (just less than WPML) as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zyOE6LOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/NotuUTn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zyOE6LOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/NotuUTn.png" alt="TranslatePress have three options for displaying the language transition button" width="1349" height="622"&gt;&lt;/a&gt; Three options for the language transition button&lt;/p&gt;

&lt;h3&gt;Translation Method&lt;/h3&gt;

&lt;p&gt;In addition to creating a bilingual or a multilingual site by manual translation, this plugin also has an automatic translation mode. In the plugin's settings page, you just need to link your site to Google Translate with Google API Key.&lt;/p&gt;

&lt;p&gt;With TranslatePress, you can manually change the content of the automatic translations, but only when they haven't been published. This is a special and advanced feature of TranslatePress compared to other plugins.&lt;/p&gt;

&lt;h3&gt;Translation Interface&lt;/h3&gt;

&lt;p&gt;The most outstanding feature of TranslatePress is translating all content right in the front end. This helps you to track your translation results visually, easily, and save your time. Moreover, the translating interface is quite similar to the familiar Customizer interface. Therefore, you'll get used to it more easily.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YWrqWDdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/dqL1orw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YWrqWDdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/dqL1orw.png" alt="TranslatePress translation plugin translates all content right in the front end." width="1353" height="616"&gt;&lt;/a&gt; Translation interface of TranslatePress&lt;/p&gt;

&lt;h2&gt;WPML&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aczu5A0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/niFwcAt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aczu5A0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/niFwcAt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Supported Languages&lt;/h3&gt;

&lt;p&gt;WPML supports 60 languages including RTL. You can also change or add your own custom languages very easily and quickly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3hv9vu2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/SkSVzDu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3hv9vu2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/SkSVzDu.png" alt="WPML translation plugin supports 60 languages including RTL." width="1347" height="621"&gt;&lt;/a&gt; The section to change / add custom languages&lt;/p&gt;

&lt;h3&gt;Supported Content&lt;/h3&gt;

&lt;p&gt;You can translate almost all content such as widgets, taxonomies, custom fields, categories, menus, URLs, page builders content, ... However, the number of supported content depends on the package you buy. For example, in the &lt;strong&gt;Multilingual CMS&lt;/strong&gt; and &lt;strong&gt;Multilingual Agency&lt;/strong&gt; packages, you can translate the content of WooCommerce pages, page builders, and custom fields.&lt;/p&gt;

&lt;h3&gt;Plugin Setup&lt;/h3&gt;

&lt;p&gt;WPML doesn't have any free version, so you must purchase one of the following premium packages: &lt;strong&gt;Multilingual Blog&lt;/strong&gt;, &lt;strong&gt;Multilingual CMS&lt;/strong&gt;, and &lt;strong&gt;Multilingual Agency&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Depending on each package, you'll have different plugins (each one is a feature). After activating all the plugins of the package, you'll see an instruction page to install and connect to the WPML account. It's quite easy to understand.&lt;/p&gt;

&lt;p&gt;WPML's language transition button ‚Äã‚Äãis quite flexible with 5 styles (the biggest number among the translation plugins in this article).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0Zi6C67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/seyrTv7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0Zi6C67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/seyrTv7.png" alt="WPML doesn't have any free version" width="1350" height="619"&gt;&lt;/a&gt; Five styles to switch languages display&lt;/p&gt;

&lt;h3&gt;Translation Method&lt;/h3&gt;

&lt;p&gt;WPML supports more translation methods than the three free plugins above, including automatic, manual translation, and allowing other users / third parties to translate.&lt;/p&gt;

&lt;p&gt;Allowing other users to translate is authorizing other users in WordPress to be translators regardless of their roles on the page. In addition, WPML allows you to use professional 3rd party translation services as well.&lt;/p&gt;

&lt;p&gt;As you can see, WPML has the most various translation methods. It's suitable for individuals, organizations, and professional websites.&lt;/p&gt;

&lt;h3&gt;Translation Interface&lt;/h3&gt;

&lt;p&gt;WPML's translation interface is quite similar to the Polylang's interface because you have to work in the WordPress Editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMk0ghvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/lprMSye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMk0ghvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/lprMSye.png" alt="WPML supports more translation methods than the three free plugins above" width="1349" height="624"&gt;&lt;/a&gt; Create a translation for post / page in the Editor&lt;/p&gt;

&lt;p&gt;However, WPML only generates a translation here. After that, you'll translate on the back end like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLT2MWJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/VqFhCoH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLT2MWJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/VqFhCoH.png" alt="you'll translate on the back end if using WPML" width="1347" height="625"&gt;&lt;/a&gt; Translating posts / pages content interface&lt;/p&gt;

&lt;p&gt;The translation interface is quite native and makes it easy for you to compare the two translations. However, post formatting can be a bit difficult and the fields for translating are quite small.&lt;/p&gt;

&lt;p&gt;To translate a taxonomy, you must go to the &lt;strong&gt;Settings&lt;/strong&gt; section of WPML, not in the &lt;strong&gt;Taxonomy&lt;/strong&gt; section of WordPress like Polylang. I find that the interface is well balanced and clear.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tQmw2vYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/93iCQ63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQmw2vYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/93iCQ63.png" alt="To translate a taxonomy, you must go to the Settings section of WPML" width="1345" height="625"&gt;&lt;/a&gt; Taxonomies translation interface&lt;/p&gt;

&lt;h2&gt;Weglot&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vB7iPFwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/wRhjpex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vB7iPFwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/wRhjpex.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Supported Languages&lt;/h3&gt;

&lt;p&gt;Weglot also supports many languages, up to 100+ languages, ‚Äã‚Äãincluding RTL. However, you can only translate a limited number of words in the free version (2000 words per language).&lt;/p&gt;

&lt;p&gt;Finally, I don't see the section to add custom languages in this plugin.&lt;/p&gt;

&lt;h3&gt;Supported Content&lt;/h3&gt;

&lt;p&gt;Weglot supports translating a variety of content including all posts, pages, themes, plugins, page builders content, ... Notably, Weglot will scan all texts on your website's front end to translate. Thus, you don't have to worry about whether your themes and plugins are compatible with Weglot or not.&lt;/p&gt;

&lt;h3&gt;Plugin Setup&lt;/h3&gt;

&lt;p&gt;To use Weglot, you have to set up the plugin first by creating an account and getting the API key. This is a bit time-consuming, but not difficult at all. In particular, language selecting is quite easy with advanced search.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYmTc9ew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/y4wzJXn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYmTc9ew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/y4wzJXn.png" alt="set up Weglot plugin by creating an account and getting the API key." width="1089" height="617"&gt;&lt;/a&gt; Choosing languages easily with the advanced searching section&lt;/p&gt;

&lt;p&gt;After you set up, the options to configure Weglot will appear. However, these options are organized in a long list and aren't divided into tabs. Therefore, it may be difficult to find the necessary parts to work with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vQ4XiNkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MhBo3E4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vQ4XiNkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MhBo3E4.png" alt="the options to configure Weglot appear" width="982" height="1295"&gt;&lt;/a&gt; A long list of settings&lt;/p&gt;

&lt;p&gt;Weglot supports only one language transition button style. It's the fixed button at the bottom of the screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cbsAjhC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Ez9iUIQ.png" class="article-body-image-wrapper"&gt;&lt;img class="aligncenter" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cbsAjhC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/Ez9iUIQ.png" alt="Weglot supports only one language transition button style." width="1339" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Translation Method&lt;/h3&gt;

&lt;p&gt;Weglot also combines automatic and manual translation. Unlike other plugins in this article, after setting up and connecting to your Weglot account, your website is automatically translated without any additional setup required. Besides, you can edit the translations manually easily like TranslatePress. But when using Weglot, you can do it even after all translations are published.&lt;/p&gt;

&lt;p&gt;The advantage of this plugin is the ability to combine both automatic and manual translations at the same time. However, automatic translation can't be 100% perfect as you want. Therefore, you have to review and double-check to see if the translated content is okay.&lt;/p&gt;

&lt;h3&gt;Translation Interface&lt;/h3&gt;

&lt;p&gt;Weglot doesn't translate in the front end or back end. Alternatively, it provides you with an account on Weglot to translate.&lt;/p&gt;

&lt;p&gt;The interface is beautiful and clean with 2 tabs placed side by side symmetrically so that users can compare the original version and the translation easily. To edit a translation, just click each part and edit it quickly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NeEBoYi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/b8M1Iam.png" class="article-body-image-wrapper"&gt;&lt;img class="aligncenter" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NeEBoYi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/b8M1Iam.png" alt="Weglot doesn't translate in the front end or back end." width="1348" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Last Words&lt;/h2&gt;

&lt;p&gt;Hopefully, after reading this review, you can easily choose a suitable translation plugin for your site. Each plugin has its own advantages and even some weaknesses compared to the others. And remember, there are some other things you should consider when choosing a translation such as your needs, your website's features, your budget, ... Therefore, you should carefully review them to choose the best one for your site.&lt;br&gt;
&lt;/p&gt;


&lt;p&gt;The publication at &lt;a href="https://gretathemes.com/review-wordpress-translation-plugin/"&gt;GretaThemes&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>wordpress</category>
    </item>
    <item>
      <title>6 Essential Things I Wish I Knew When I Started Programming</title>
      <author>Nick Bull</author>
      <pubDate>Thu, 26 Nov 2020 09:30:28 +0000</pubDate>
      <link>https://dev.to/nickbulljs/6-essential-things-i-wish-i-knew-when-i-started-programming-1pc7</link>
      <guid>https://dev.to/nickbulljs/6-essential-things-i-wish-i-knew-when-i-started-programming-1pc7</guid>
      <description>&lt;p&gt;I could probably achieve 300% more in 6 years as a programmer if I knew these things when I started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coding-is-not-about-the-coding" class="anchor"&gt;
  &lt;/a&gt;
  Coding Is Not About The Coding
&lt;/h2&gt;

&lt;p&gt;What do you think programming is about?&lt;/p&gt;

&lt;p&gt;Writing code?&lt;/p&gt;

&lt;p&gt;Writing good code?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's just a part of the truth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Programming is not about coding, programming is about solving problems with coding.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;End customers don‚Äôt care what technologies, languages, frameworks, or methodologies you use. They care only about one thing, whether your product solves their problem or not.&lt;/p&gt;

&lt;p&gt;That‚Äôs why no one cares what technologies Google search is using under the hood. Until people can find relative information with it, they will use it.&lt;/p&gt;

&lt;p&gt;It‚Äôs the number one thing I wish I knew when I started programming.&lt;/p&gt;

&lt;p&gt;I would spend less time writing ‚Äúbest code‚Äù and more time solving customer‚Äôs problems best.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don‚Äôt write code just to write code, solve customer‚Äôs problems with the code.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication-skills-more-important-than-coding-skills" class="anchor"&gt;
  &lt;/a&gt;
  Communication Skills More Important Than Coding Skills
&lt;/h2&gt;

&lt;p&gt;When I just started my career, lack of social skills was not my main problem. But when I moved higher, to the middle, senior, and leadership position, my weak soft skills became my Achilles heel.&lt;/p&gt;

&lt;p&gt;When you work on a product with a group of different people (engineers, designers, managers), communication is the only thing that makes you a ‚Äúteam‚Äù and helps you effectively develop the product.&lt;/p&gt;

&lt;p&gt;Lack of social skills does the opposite, it decreases the product development time and overall productivity.&lt;/p&gt;

&lt;p&gt;Here is the real situation you might face:&lt;/p&gt;

&lt;p&gt;The leadership team tells your product manager that they want to create a new product feature and put it in the next product release. It‚Äôs not urgent, they just want to release it as soon as possible (as always).&lt;/p&gt;

&lt;p&gt;The product Manager calls you on Zoom, tells you what you need to build, and asks, &lt;em&gt;‚ÄúHow much time do you need to build it?‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You are doing a rough calculation and tell, &lt;em&gt;‚ÄúI need 20 hours.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Product Manager is not satisfied with your answer. He wants to release it as soon as possible and show the management that he can deliver results fast (this is a very common situation).&lt;/p&gt;

&lt;p&gt;So he asks you, &lt;em&gt;‚ÄúCan you build it for 10 hours? We really need this feature in the next product release!‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And you know that you can if you cut the corners (no tests, messy code) but then you will need to refactor it, and it will take an additional 30 hours. Because other engineers will work with your messy code when you release it. And after refactoring, you will need to integrate their code with yours.&lt;/p&gt;

&lt;p&gt;So here‚Äôs what will happen next. If you have bad social skills, you will not convince the Product Manager that you actually need 20 hours to build this feature. &lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Product Managers often have good social skills, from my experience. So if you can‚Äôt convince him that refactoring later is worse than spending 20 hours right now, he will easily argue with you and convince you that ‚Äúrefactoring later is okay.‚Äù And the whole team will lose additional 30 hours for this refactoring (I don't count the time to fix unpredictable bugs after).&lt;/p&gt;

&lt;p&gt;But if you have good communication skills you will be able to convince him of the opposite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So improve your social skills as well as coding skills&lt;/strong&gt; (send memes in the group chats on Slack or something).&lt;/p&gt;

&lt;p&gt;And remember one simple truth:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;People work with people, not machines.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#regular-breaks-help-to-program-better" class="anchor"&gt;
  &lt;/a&gt;
  Regular Breaks Help To Program Better
&lt;/h2&gt;

&lt;p&gt;For 4 years I always feel exhausted after work. Somehow I could productively work only for a couple of hours. After that, I didn't have much energy. Until I learned about the Pomodoro technique.&lt;/p&gt;

&lt;p&gt;It‚Äôs quite simple. You work for 25 minutes and take a break for 5 minutes.&lt;/p&gt;

&lt;p&gt;Your working routine becomes:&lt;/p&gt;

&lt;p&gt;8:00-8:25 ‚Äì Work&lt;/p&gt;

&lt;p&gt;8:25-8:30 ‚Äì Break&lt;/p&gt;

&lt;p&gt;8:30-8:55 ‚Äì Work&lt;/p&gt;

&lt;p&gt;8:55-9:00 ‚Äì Break&lt;/p&gt;

&lt;p&gt;‚Ä¶&lt;/p&gt;

&lt;p&gt;I tried it for a week and was surprised at how focused, energetic, and productive I became  (&lt;a href="https://www.focusboosterapp.com/blog/the-science-behind-the-pomodoro-technique/"&gt;the science behind Pomodoro&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Then I went further and implemented the &lt;a href="https://twitter.com/nickbulljs/status/1303037682294173699"&gt;52+17 system&lt;/a&gt; and my productivity levels spiked by 200%.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So&lt;/strong&gt; &lt;strong&gt;take regular breaks if you want to operate at your maximum capabilities.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10x-engineers-dont-exist" class="anchor"&gt;
  &lt;/a&gt;
  10X Engineers Don‚Äôt Exist
&lt;/h2&gt;

&lt;p&gt;At the beginning of my career, I thought that a great programmer is a person who knows tons of programming languages, frameworks, and methodologies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I was wrong.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Such a mindset only gave birth to my impostor syndrome. I thought that I don't deserve my current position, my salary, that I am a ‚Äúfraud.‚Äù So I started to follow every popular developer on Twitter, read every technical news, and thousands of developer blogs just to convince myself that I deserve what I have and to feel more close to the title ‚Äúgreat developer.‚Äù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This was not a healthy behavior.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But it helped me to discover that a lot of people I followed (I thought were 10X engineers) actually didn‚Äôt know a lot of things. They may know how to do some complex things that require a lot of different deep knowledge in a couple of fields and at the same time don‚Äôt know some primitive things. Like to know how to design highly scalable database architectures but don‚Äôt know how vertical-align an element with CSS.&lt;/p&gt;

&lt;p&gt;Big thanks to those developers, like Dan Abramov (creator of Redux) for &lt;a href="https://overreacted.io/things-i-dont-know-as-of-2018/"&gt;this article&lt;/a&gt;, they cured my imposter syndrome and showed me that it is okay not to know something.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-is-not-hard-if-you-know-how-to-learn" class="anchor"&gt;
  &lt;/a&gt;
  Programming Is Not Hard If You Know How To Learn
&lt;/h2&gt;

&lt;p&gt;When I started to learn JavaScript, it was hard. &lt;strong&gt;Because I learned the wrong way.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Read a lot of theory without the practice, no routine, no end goal. Chaos.&lt;/p&gt;

&lt;p&gt;I thought it was normal to learn like this. Until I discovered &lt;strong&gt;deliberate practice.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs a purposeful and systematic type of practice (learning).&lt;/p&gt;

&lt;p&gt;The difference between normal practice and deliberate is that deliberate requires focused attention and is conducted with the specific goal of improving performance.&lt;/p&gt;

&lt;p&gt;After I applied a deliberate practice, I began to notice how fast I'm progressing with learning JavaScript. My knowledge started to stick for a long time, not just for 5 minutes after tutorials. I created the end goal, why I am learning JavaScript, and understand what I need to learn, and what I don't.&lt;/p&gt;

&lt;p&gt;üìå &lt;em&gt;Quick note: I‚Äôm creating a JavaScript course where I‚Äôm using deliberate practice to &lt;strong&gt;combine modern and practical JavaScript theory with a lot of real-world practice&lt;/strong&gt; to teach you how to become a skilled JavaScript developer with knowledge of modern language features. &lt;a href="https://javascriptcoursethatworks.com/"&gt;Join here.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So here is what you need to perform deliberate practice on your own:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Teacher:&lt;/strong&gt; provides practice activities designed to help you improve performance.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Perform at maximum effort:&lt;/strong&gt; constantly being taken out of your comfort zone.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Well defined and specific goals:&lt;/strong&gt; not just ‚Äúoverall improvement.‚Äù&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;To be in focus:&lt;/strong&gt; give your full attention, no distractions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do conscious actions:&lt;/strong&gt; no autopilot.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Instant response to feedback and modifying your strategy.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you start learning a new language, technology, framework, whatever, stick to these rules to get big results as quickly as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-is-no-best-programming-language" class="anchor"&gt;
  &lt;/a&gt;
  There is no ‚Äúbest programming language‚Äù
&lt;/h2&gt;

&lt;p&gt;There is no &lt;strong&gt;best "something"&lt;/strong&gt; in our world. Only &lt;strong&gt;best in something&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take cars. How can we choose the best car in the world? By speed? By safety? By what criteria?&lt;/p&gt;

&lt;p&gt;It‚Äôs impossible.&lt;/p&gt;

&lt;p&gt;We can only choose the best car in a certain category. Like the safest car. Or the best offroad car.&lt;/p&gt;

&lt;p&gt;And if we look deeper, every category solves some problems.&lt;/p&gt;

&lt;p&gt;For example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; We have children and we take them to school every day, we want our children to be safe on the way to school.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Buy the safest car.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; We go camping every weekend, so we need some vehicle that can easily get us to places that are difficult to access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Buy the best off-road car.&lt;/p&gt;

&lt;p&gt;The same is with programming languages. Some languages and tools are better at solving some problems than others.&lt;/p&gt;

&lt;p&gt;If we want to build an interactive website, we choose JavaScript.&lt;/p&gt;

&lt;p&gt;If we want to go with ML/AI, we choose Python.&lt;/p&gt;

&lt;p&gt;Remember, &lt;strong&gt;there is no best programming language, there is the best programming language to ...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So start with a problem first, then pick a language to solve it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-end" class="anchor"&gt;
  &lt;/a&gt;
  In the end...
&lt;/h2&gt;

&lt;p&gt;If you like this article, share it with your friends and &lt;a href="https://twitter.com/nickbulljs"&gt;follow me on Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, every week I send out a "3‚Äì2‚Äì1" newsletter with 3 tech news, 2 articles, and 1 piece of advice for you.&lt;/p&gt;

&lt;p&gt;üìå &lt;a href="https://nickbulljs.com/"&gt;Subscribe to my 3‚Äì2‚Äì1 newsletter here&lt;/a&gt; üìå&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>python</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Understanding the Concept of Branches in Git</title>
      <author>Tobias G√ºnther</author>
      <pubDate>Thu, 26 Nov 2020 07:47:13 +0000</pubDate>
      <link>https://dev.to/gittower/understanding-the-concept-of-branches-in-git-3a38</link>
      <guid>https://dev.to/gittower/understanding-the-concept-of-branches-in-git-3a38</guid>
      <description>&lt;p&gt;Using branches in your day-to-day work might very well prove to make you a better programmer or designer. Be that as it may, it's definitely one of the main reasons why Git is so highly respected. And although desktop GUIs like "&lt;a href="https://www.git-tower.com?utm_source=devto&amp;amp;utm_medium=guestpost&amp;amp;utm_campaign=understanding-the-concept-of-branches"&gt;Tower&lt;/a&gt;" make all of this a lot easier, it still makes sense to have a firm understanding of the underlying concepts!&lt;/p&gt;




&lt;p&gt;First of all, if you're coming from another version control system, I kindly ask you to forget the things you already know about branching &amp;amp; merging. It's true that Git hasn't invented this particular wheel: many other VCS also offer branching. However, Git's concepts in this area are absolutely unique when it comes to ease of use and performance.&lt;/p&gt;

&lt;p&gt;Now, let's look at why branches are so important.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-in-contexts" class="anchor"&gt;
  &lt;/a&gt;
  Working in Contexts
&lt;/h2&gt;

&lt;p&gt;In every project, there are always multiple different &lt;strong&gt;contexts&lt;/strong&gt; where work happens. Each feature, bugfix, experiment, or alternative of your product is actually a context of its own: it can be seen as its own "topic", clearly separated from other topics.&lt;/p&gt;

&lt;p&gt;This leaves you with an unlimited amount of different contexts. Most likely, you'll have at least one context for your "main" or "production" state, and another context for each feature, bugfix, experiment, etc.&lt;/p&gt;

&lt;p&gt;In real-world projects, work always happens in multiple of these contexts &lt;em&gt;in parallel&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;While you're preparing 2 new variations of your website's design (context 1 &amp;amp; 2)...&lt;/li&gt;
&lt;li&gt;you're also trying to fix an annoying bug (context 3).&lt;/li&gt;
&lt;li&gt;Besides, you also update some content on your FAQ pages (context 4), while...&lt;/li&gt;
&lt;li&gt;your teammate is working on a new feature for your shopping cart (context 5),...&lt;/li&gt;
&lt;li&gt;and another colleague is experimenting with a whole new login functionality (context 6).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-world-without-branches" class="anchor"&gt;
  &lt;/a&gt;
  A World Without Branches
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Not&lt;/strong&gt; working in clearly separated contexts can (and sooner or later &lt;strong&gt;will&lt;/strong&gt;) cause several problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What happens if your client likes variation 2 of the new design? In the meantime, a host of other changes have happened! How do you launch the new design while integrating all these other changes instead of losing them?&lt;/li&gt;
&lt;li&gt;What happens if the shopping cart feature became obsolete because the client changed his mind? How do you get all that unwanted code (and only that code!) out?&lt;/li&gt;
&lt;li&gt;What do you do if that new login functionality proves to be impossible to implement? It's already mingled with all of those other changes, being almost impossible to separate out!&lt;/li&gt;
&lt;li&gt;How can you avoid losing track? Most likely, you shouldn't be bothered with all the topics from all of your colleagues.
Things will start to get very confusing when you try to handle multiple topics in a single context:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ukf1VvoE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2zydtbq8wncs9d2i9wsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ukf1VvoE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2zydtbq8wncs9d2i9wsq.png" alt="one-context"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;A tempting workaround might  be to simply copy your complete project folder for each new context. But this only leaves you with other problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You circumvent your VCS, since those new folders won't be under version control.&lt;/li&gt;
&lt;li&gt;Not being version controlled, you can't easily share &amp;amp; collaborate with others.&lt;/li&gt;
&lt;li&gt;Integrating changes from one context into another (maybe your main context) is difficult and error-prone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make a long story short: if your goal is to work professionally, you'll have to find a way to deal with multiple contexts in a professional manner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#branches-to-the-rescue" class="anchor"&gt;
  &lt;/a&gt;
  Branches to the Rescue
&lt;/h2&gt;

&lt;p&gt;You might have already guessed it: branches are what we need to solve these problems. Because a branch represents exactly such a context in a project and helps you keep it separate from all other contexts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6OVVoZRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/18repx38nvbi4ncne3v7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6OVVoZRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/18repx38nvbi4ncne3v7.png" alt="multiple-contexts"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This was an excerpt from my (&lt;strong&gt;completely free!!&lt;/strong&gt;) online book &lt;a href="https://www.git-tower.com/learn/git/ebook?utm_source=devto&amp;amp;utm_medium=guestpost&amp;amp;utm_campaign=understanding-the-concept-of-branches"&gt;"Learn Version Control with Git"&lt;/a&gt;. Feel free to read more if you want to understand &lt;em&gt;How branches can solve these problems&lt;/em&gt;, &lt;em&gt;How to create and manage them&lt;/em&gt;, &lt;em&gt;How to integrate changes between branches&lt;/em&gt; and &lt;em&gt;where remote branches come into play&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.git-tower.com/learn/git/ebook?utm_source=devto&amp;amp;utm_medium=guestpost&amp;amp;utm_campaign=understanding-the-concept-of-branches"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lhq4VJQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hqcbk5vnzacvofekh007.png" alt="ebook-learn-version-control"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React State Machine Hook</title>
      <author>Andrew Petersen</author>
      <pubDate>Thu, 26 Nov 2020 07:30:22 +0000</pubDate>
      <link>https://dev.to/droopytersen/state-machine-hook-hdg</link>
      <guid>https://dev.to/droopytersen/state-machine-hook-hdg</guid>
      <description>&lt;p&gt;This custom hook is meant to live somewhere in between the built-in &lt;code&gt;useReducer&lt;/code&gt; and pulling in a 3rd party library like &lt;a href="https://xstate.js.org/"&gt;xstate&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;stateChart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nx"&gt;updaters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;transitionEffects&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;It's not quite useful/big enough to warrant an NPM package, so I created a &lt;a href="https://codesnippets.dev/droopytersen/hooks-core/useStateMachine.ts"&gt;code snippet&lt;/a&gt; and will document it here for the next time I reach for it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-document-the-state-and-available-statuses" class="anchor"&gt;
  &lt;/a&gt;
  1. Document the State and available Statuses
&lt;/h1&gt;

&lt;p&gt;The State Machine will track 2 things, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;status&lt;/code&gt; - the State Machine's state, called &lt;code&gt;status&lt;/code&gt; to avoid confusing with React &lt;code&gt;state&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;state&lt;/code&gt; - The stateful data that should be tracked in addition to &lt;code&gt;status&lt;/code&gt;. This is just like the state for &lt;code&gt;useReducer&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;AuthState&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="na"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; 
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AuthState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AuthStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UNKNOWN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ANONYMOUS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUTHENTICATING&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUTHENTICATED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERRORED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#2-create-the-state-chart" class="anchor"&gt;
  &lt;/a&gt;
  2. Create the State Chart
&lt;/h1&gt;

&lt;p&gt;For each status, what actions can be performed? If that action runs, to which status should it transition?  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The names of the actions should match the names of the updaters in the next step.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stateChart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StateChart&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AuthStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;updaters&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UNKNOWN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;UNKNOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;setCachedUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUTHENTICATED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ANONYMOUS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;handleError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERRORED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ANONYMOUS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;loginStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUTHENTICATING&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;AUTHENTICATING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;loginSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUTHENTICATED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;handleError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERRORED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;AUTHENTICATED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ANONYMOUS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ERRORED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;loginStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AUTHENTICATING&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#3-implement-the-state-updaters" class="anchor"&gt;
  &lt;/a&gt;
  3. Implement the State Updaters
&lt;/h1&gt;

&lt;p&gt;A state updater is a function that takes in the current state (a React state) and the triggered action, then returns the updated state. Just like a reducer.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(state, action) =&amp;gt; updatedState&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Under the covers, &lt;code&gt;useStateMachine&lt;/code&gt; will bind the &lt;code&gt;updaters&lt;/code&gt; to &lt;code&gt;dispatch&lt;/code&gt; and return &lt;code&gt;actions&lt;/code&gt; you can call like &lt;code&gt;actions.handleError({ error })&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Some actions are triggered just to cause a State Machine &lt;code&gt;status&lt;/code&gt; transition (like &lt;code&gt;loginStart&lt;/code&gt;).  In this case, the updater should return the &lt;code&gt;state&lt;/code&gt; right back.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The names of the updaters should match the names of the actions in the State Chart.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updaters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;loginSuccess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cacheCurrentUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;setCachedUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cacheCurrentUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;handleError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;loginStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#4-use-and-define-transition-effects" class="anchor"&gt;
  &lt;/a&gt;
  4. Use and Define Transition Effects
&lt;/h1&gt;

&lt;p&gt;The last step is to use the hook. &lt;/p&gt;

&lt;p&gt;You can also define effect functions to be run when the state machine transitions into a specified status.  This is useful for doing async work.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;enter&lt;/code&gt; transition effect function is given the &lt;code&gt;action&lt;/code&gt; that caused the transition as well as all the available &lt;code&gt;actions&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this example, when the user calls, &lt;code&gt;loginStart&lt;/code&gt;, the status will transition to &lt;code&gt;AUTHENTICATING&lt;/code&gt;, which will fire the transition effect to call &lt;code&gt;api.login&lt;/code&gt;. Based on the result of &lt;code&gt;login()&lt;/code&gt;, either the success or error action is triggered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stateMachine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stateChart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updaters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;AUTHENTICATING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
          &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loginSuccess&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleError&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;UNKNOWN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cachedUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getCurrentUserFromCache&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cachedUser&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;cachedUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;stateMachine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCachedUser&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cachedUser&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;stateMachine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// { actions, state, status }&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;stateMachine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here is the full login form example implemented in Code Sandbox.&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/ymv9x"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Companies That Use Node.js for Backend: How Do Big Players Benefit from It?</title>
      <author>TechMagic</author>
      <pubDate>Thu, 26 Nov 2020 06:59:21 +0000</pubDate>
      <link>https://dev.to/techmagic/companies-that-use-node-js-for-backend-how-do-big-players-benefit-from-it-19b0</link>
      <guid>https://dev.to/techmagic/companies-that-use-node-js-for-backend-how-do-big-players-benefit-from-it-19b0</guid>
      <description>&lt;p&gt;Node.js is a JavaScript server environment that runs code outside a browser. The technology is a perfect fit for many websites like streaming, games, time trackers, social media applications, etc. It provides a scalable and fast solution for real-time applications.&lt;/p&gt;

&lt;p&gt;Being written in JavaScript, the most popular programming language globally, it opens up the door to many businesses. It is no wonder that it has become a highly trending technology that many companies have embraced, including some of the most prominent players like Netflix and PayPal. What companies use Node.js technology, and how do they benefit from it? Find the answer in this blog post.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#is-nodejs-really-changing-the-market" class="anchor"&gt;
  &lt;/a&gt;
  Is Node.js Really Changing the Market?
&lt;/h1&gt;

&lt;p&gt;According to &lt;a href="https://selleo.com/blog/10-successful-companies-using-nodejs"&gt;Stack Overflow&lt;/a&gt;, Node.js is the absolute leader in the world of technology with 50.4%. So, what makes it so popular?&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://nodejs.org/en/user-survey-report/"&gt;the latest Node.js report&lt;/a&gt;, this technology has a significant impact on business: it provides a 68% increase in developer productivity, a 48% increase in application performance, and a 13% increase in customer satisfaction. Moreover, these numbers seem to grow over the years:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6vGMcLXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/serverless-security-trends-copy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6vGMcLXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/serverless-security-trends-copy.png" alt="Node.js report"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On top of that, the Node.js report mentions that four out of five backend and full-stack developers adopt Node.js frameworks. Why do developers choose to work with Node.js?&lt;/p&gt;

&lt;p&gt;First, this JavaScript environment is easy to work with, and it enables the execution of the code on the server-side. Secondly, it allows high scalability as well as quicker development cycles. Finally, it is the go-to technology with a thriving open-source community. Learn more about the general &lt;a href="https://blog.techmagic.co/top-10-benefits-of-node-js-for-web-application-development/"&gt;benefits of Node.js from the experts&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-top-10-well-known-companies-using-nodejs-for-the-backend" class="anchor"&gt;
  &lt;/a&gt;
  The Top 10 Well Known Companies Using Node.js for the Backend
&lt;/h1&gt;

&lt;p&gt;Based on the long list of Node.js usage advantages, it is easy to believe that among the biggest companies that used Node.js are NASA, Uber, and Twitter. Who uses Node.js, why did they decide to move to Node.js, and how has it worked out for them?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xzrjvndy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/netflix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xzrjvndy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/netflix.png" alt="Netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#netflix" class="anchor"&gt;
  &lt;/a&gt;
  Netflix
&lt;/h2&gt;

&lt;p&gt;Netflix is the largest provider of streaming content and video-on-demand with 93 million users worldwide. Its path to current success started back in 2015 when Java ‚Äì the backend technology Netflix used ‚Äì could not handle such a rapidly growing user base. The backend development could not catch up with the frontend, which caused a higher load time. The customized UI design was unachievable, which led to poor customer experience. Finally, Java took too much time to build, and as a result, the development and deployment processes were inefficiently slow.&lt;/p&gt;

&lt;p&gt;The benefits Netflix got:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Since the adoption of Node.js technology, startup time has drastically decreased by 70%. Instead of taking up ten seconds to load the Netflix interface, it only takes one second now;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js made it easier to integrate microservices and break a huge block of information into a detailed interface;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The transition from the backend to the frontend has significantly accelerated due to Node.js being a JavaScript-based environment.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ny3Rv4PN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/NASA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ny3Rv4PN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/NASA.png" alt="NASA"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nasa" class="anchor"&gt;
  &lt;/a&gt;
  NASA
&lt;/h2&gt;

&lt;p&gt;NASA is one of the most well-known enterprises in the world. NASA has decided to make a transition to Node.js after an accident, which almost led to a fatal outcome. The accident was caused by a long access time due to the inefficient storage of data across many locations. NASA‚Äôs developers found it important to move data into a cloud database to shorten the access time. Additionally, most of NASA‚Äôs applications were built on JavaScript.&lt;/p&gt;

&lt;p&gt;The benefits for NASA:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The access time has increased by 300%, allowing users to reach the information in seconds, not hours;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NASA has successfully moved legacy databases to the cloud and provided access to them via APIs;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js has shortened the process of working with databases from 28 steps to only seven, which made scientific research significantly easier.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0JOu9be--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/trello.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0JOu9be--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/trello.png" alt="Trello"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trello" class="anchor"&gt;
  &lt;/a&gt;
  Trello
&lt;/h2&gt;

&lt;p&gt;Trello is a tool for project management, which is used across industries and countries. A platform like this requires instant updates in real-time without latency, which is why Trello is one of the companies that use Node.js for its server-side. Trello needs to juggle several real-time connections on the server to ensure that updates come smoothly and on time.&lt;/p&gt;

&lt;p&gt;Trello‚Äôs main advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node.js provided an extremely lightweight Single Page Application;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thanks to Node.js, Trello can handle updates with zero latency;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js architecture enabled to cut expenses of development and prototyping.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lsfaF1MZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/Paypal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lsfaF1MZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/Paypal.png" alt="PayPal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paypal-nodejs-transition" class="anchor"&gt;
  &lt;/a&gt;
  PayPal Node.js transition
&lt;/h2&gt;

&lt;p&gt;With over 200 million active accounts, PayPal is a worldwide leader in the industry of online payments and transfers. In 2013, they stumbled upon some difficulties caused by using Java, which didn‚Äôt mix well with frontend development. Java provided long development times as well as poor performance, so PayPal has become one of the companies using Node.js.&lt;/p&gt;

&lt;p&gt;The benefits PayPal acquired:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A smaller team of developers built a Node.js based application in a shorter amount of time;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Response time has reduced, leading to a 35% decrease in loading time;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The number of user requests per second has doubled since the adoption of Node.js technology.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vl6RWXeU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/linkedin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vl6RWXeU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/linkedin.png" alt="LinkedIn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linkedin" class="anchor"&gt;
  &lt;/a&gt;
  LinkedIn
&lt;/h2&gt;

&lt;p&gt;Another company on the list of the websites using Node.js is LinkedIn ‚Äî the world‚Äôs biggest social media platform built for business and employment networking. Its popularity continues to grow, with 467 million users from more than 200 countries. After shifting from Ruby on Rails to Node.js, they‚Äôve created an application that runs ten times faster than its old version. The decision has been made due to the synchronicity of the previous Ruby App, which led to the long loading times, especially whenever there was a traffic increase.&lt;/p&gt;

&lt;p&gt;The benefits LinkedIn obtained:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The entire LinkedIn architecture has been built on JavaScript, which made the handling of client-server interactions simpler;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The number of servers has been cut from thirty to three, which doubled the traffic capacity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z8YVm1_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/uber.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z8YVm1_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/uber.png" alt="Uber"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uber-nodejs-experience" class="anchor"&gt;
  &lt;/a&gt;
  Uber Node.js experience
&lt;/h2&gt;

&lt;p&gt;Uber is another ever-growing platform that expands the number of users every six months operating in 68 countries worldwide. Due to the always-increasing number of connections, Uber had to create a real-time architecture. Additionally, the company ran advanced analytics on the data stored on the platform, requiring the services to perform smoothly. That is why Uber is now one of the companies that use Node.js in production.&lt;/p&gt;

&lt;p&gt;The benefits Uber received:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node.js enabled Uber to process an immense amount of data and numerous user requests much quicker;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thanks to Node.js technology, Uber is capable of processing 14 million rides every day;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Uber increased its connectivity and reduced management overheads by building over 600 stateless endpoints.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxySuAly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/twiter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxySuAly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/twiter.png" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-shift-to-nodejs-twitter-case" class="anchor"&gt;
  &lt;/a&gt;
  The shift to Node.js ‚Äî Twitter case
&lt;/h2&gt;

&lt;p&gt;More than 80% of the account holders on Twitter access it via a smartphone, which led to a decision to build Twitter Lite ‚Äî an application with minimum functionality that can run even with a poor internet connection. On top of that, the website version of Twitter wasn‚Äôt optimized for a slow internet connection. This led Twitter to become one of the companies that use Node.js.&lt;/p&gt;

&lt;p&gt;Twitter‚Äôs benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Twitter Lite doesn‚Äôt take too much space ‚Äî 1% to 3% ‚Äî which saves mobile device users a lot of storage space;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The application runs even on 3G and 2G connections;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The maintenance costs of Twitter Lite are significantly lower than of Twitter Desktop.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bDRslkER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/lebay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bDRslkER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/lebay.png" alt="eBay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ebay" class="anchor"&gt;
  &lt;/a&gt;
  eBay
&lt;/h2&gt;

&lt;p&gt;Another business among the examples of companies using Node.js is eBay. With 183 million users, eBay is the biggest marketplace that offers C2C and B2C online sales services. eBay‚Äôs app used to run on Java, which showed long startup times and poor performance. As a platform with huge traffic, eBay needed a technology that would speed up the development to catch up with frontend iterations.&lt;/p&gt;

&lt;p&gt;eBay‚Äôs benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;eBay created microservices using Node.js that run in real-time and don‚Äôt overload the infrastructure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js provided scalability, speed, and transparency.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eDvMsbdY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/groupon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eDvMsbdY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/groupon.png" alt="Groupon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#groupon" class="anchor"&gt;
  &lt;/a&gt;
  Groupon
&lt;/h2&gt;

&lt;p&gt;Groupon is the largest marketplace for coupons, deals, and discounts with 40 million customers. When Groupon achieved the mark of 200 million downloads in 2019, it faced scalability issues. That is when the company turned to Node.js and held the largest production deployments of Node.js in the world.&lt;/p&gt;

&lt;p&gt;Groupon‚Äôs benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;High scalability has been ensured by Node.js deployment to enable 3,400 backend services to run smoothly;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The loading speed has doubled;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js has simplified and accelerated the migration to a different platform.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jyjcBcao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/medium.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jyjcBcao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.techmagic.co/content/images/size/w1000/2020/10/medium.png" alt="Medium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#medium" class="anchor"&gt;
  &lt;/a&gt;
  Medium
&lt;/h2&gt;

&lt;p&gt;Medium is a world-renowned online publishing platform that uses Node.js with over 85 million users. Having reached 7.5 million posts in 2016, Medium felt the need for big data management without overloading the server. The company also had to keep up with the text editors‚Äô ever-growing performance standards for post publishing.&lt;/p&gt;

&lt;p&gt;Benefits for Medium:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Even with large-sized images and content, the page loads in 2.7 seconds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js has improved user experience as well as accelerated the deployment time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#our-experience" class="anchor"&gt;
  &lt;/a&gt;
  Our Experience
&lt;/h1&gt;

&lt;p&gt;TechMagic is a company that specializes in application development. With years of experience and a multitude of projects, TechMagic is an expert in backend development as well as AWS infrastructure. We built applications both from scratch and by adding our specialists to startup development teams, using several full-stack approaches, including Node.js.&lt;/p&gt;

&lt;p&gt;We love JavaScript, and that is why we have embraced Node.js to build all kinds of applications of any level of complexity. Additionally, we are experts in serverless architecture, which is the best ingredient for Node.js-based platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://techmagic-public.s3.eu-west-2.amazonaws.com/elements-cloud-serverless-case-study.pdf"&gt;Elements.cloud&lt;/a&gt; is a company that helps other businesses to visualize and organize business processes. The biggest challenge for Elements.cloud has been implementing customizable process mapping and visualization tools amid the automated scalability of the backend infrastructure. TechMagic helped Elements.cloud to build a highly scalable and cost-efficient application using Node.js and AWS infrastructure.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you are still not convinced that Node.js is a technology of the future, here are additional big players who use Node.js as a part of their operations: Google, Yahoo, Mozilla, Microsoft, and many more. Due to its unlimited advantages, many companies are embracing Node.js technology. One of these days, this trending technology will conquer the market and become the go-to framework for every company, from startups to the biggest players. If you have a product in mind, consider using Node.js for its backend. We‚Äôd be pleased to consult you on the technology‚Äôs peculiarities and offer our services to make your idea come true.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
  </channel>
</rss>
