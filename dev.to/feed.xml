<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I can't solve problems, what should I do?</title>
      <author>Adarsh Navneet Sinha</author>
      <pubDate>Tue, 31 Aug 2021 07:56:59 +0000</pubDate>
      <link>https://dev.to/geeky01adarsh/i-can-t-solve-problems-what-should-i-do-3ei7</link>
      <guid>https://dev.to/geeky01adarsh/i-can-t-solve-problems-what-should-i-do-3ei7</guid>
      <description>&lt;p&gt;Can you all relate to the above image either while solving tough problems on LeetCode, GeeksforGeeks, some other websites, or working with projects?&lt;br&gt;
Yes, we all are the same and it's the most common doubt among beginners or say codenewbie. I can relate to it and believe me or not it's becomes so demotivating to continue with same. When I was a beginner, thoughts often came to my mind that this programming sort of thing is not made for me, and thought of giving up. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dczgQyEj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elyp9yf80z8w3syoeccg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dczgQyEj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elyp9yf80z8w3syoeccg.jpg" alt="Frustrated and demotivated"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After reading so many articles over the internet, I learned the correct way of learning and improving my productivity. Did I give up?&lt;br&gt;
No, remember the most important rule of being a programmer:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TN1oi3wd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75odud4k4y1ta6at0dx0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TN1oi3wd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75odud4k4y1ta6at0dx0.jpg" alt="Never Give Up"&gt;&lt;/a&gt;&lt;br&gt;
Curious to know what to do in such conditions? Stay in the loop and I will help you with that.&lt;br&gt;
These tips will be useful regardless of whether you are doing development or problem-solving.&lt;br&gt;
But there is a famous rule in programming that says “never copy-paste code that you don’t understand”.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8--vbEnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfufaqa238qzub9wxyen.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8--vbEnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfufaqa238qzub9wxyen.jpg" alt="Confused"&gt;&lt;/a&gt;&lt;br&gt;
Confused? I am saying to break into someone's code but never copy them.&lt;br&gt;
Well, you have there are few steps that you have to follow. &lt;br&gt;
First try to understand the logic from it and try to code by yourself, if you can't then follow the below steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Type the complete code by looking through it. (yes, yes, I know I just said not to do copy paste and now this, patience, patience).&lt;/li&gt;
&lt;li&gt;Make sure that your program or application is functioning as expected, i.e. confirm that block of code really did solve your problem.&lt;/li&gt;
&lt;li&gt;Delete the copy and pasted block of code line by line.&lt;/li&gt;
&lt;li&gt;Each time you delete a line, check to see what’s been broken. Does the app still run? What are the error codes? What has deleting that line of code done to your program?&lt;/li&gt;
&lt;li&gt; Even if you think you know what a line of code does, delete it any way. The most important task as a programmer is to always test your assumptions against the outcome. The most enjoyable feeling as a programmer is for the real world to validate your assumptions. You know how nice it is when your boyfriend/girlfriend/husband/wife says those magical three words.

&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6I6HRZXu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56l7fme9hql9vcwzjk91.png" alt="AC"&gt;
&lt;em&gt;0 Errors&lt;/em&gt; or &lt;em&gt;All Testcases Passed&lt;/em&gt; or &lt;em&gt;AC&lt;/em&gt; or &lt;em&gt;I was right&lt;/em&gt;.
It’s like that, but better.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By breaking the solution code, line-by-line, you’ll learn and understand what each line does and why it’s been written. This is a far better way to use code from other people than just pasting it in and hoping for the best. Once you understand why each of those lines was necessary, the next time you encounter a similar problem, you’ll be able to tease out the problem and solve it yourself.&lt;/p&gt;

&lt;p&gt;You might now probably ask, ok I will follow these tips but how will I know if I have improved or not? What's my progress. &lt;/p&gt;

&lt;p&gt;Well for that what you need is to bookmark the question or note down where your code was failing. Once you have took help from any source, come back after some time let's say 2-3 weeks and try to code now by yourself. Still can't? Continue this loop until you can solve without looking to solution.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5X2jqeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j5jz3p1ydw8je4vfnij.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5X2jqeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j5jz3p1ydw8je4vfnij.jpg" alt="Confident"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feeling confident and motivated now? &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yes, All the very best for your journey. &lt;br&gt;
No? Feel free to reach out to me at my social handles &lt;a href="https://linktr.ee/geeky01adarsh"&gt;@geeky01adarsh&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let me know your thoughts in the comment box below. &lt;br&gt;
Keep Coding!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>motivation</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Ansible Playbook that will configure Docker &amp; dynamically update the inventory with newly created Docker Container IP</title>
      <author>Suraj Warbhe</author>
      <pubDate>Tue, 31 Aug 2021 07:51:56 +0000</pubDate>
      <link>https://dev.to/surajwarbhe/ansible-playbook-that-will-configure-docker-dynamically-update-the-inventory-with-newly-created-docker-container-ip-41fn</link>
      <guid>https://dev.to/surajwarbhe/ansible-playbook-that-will-configure-docker-dynamically-update-the-inventory-with-newly-created-docker-container-ip-41fn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#steps-for-rhel-8"&gt;
  &lt;/a&gt;
  STEPS: (For RHEL 8)
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Enable SSH in the Container using Dockerfile&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build and Push this image to the Docker Hub&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ansible Play that will launch and configure the Docker Container and webserver inside it&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#step-1-enable-ssh-in-the-container-using-dockerfile"&gt;
  &lt;/a&gt;
  STEP 1: Enable SSH in the Container using Dockerfile
&lt;/h2&gt;

&lt;p&gt;Dockerfile has two types of keyword that helps to configure Image.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build Time: Executes at build time and in the build phase all run time commands are skipped. 
examples are &lt;code&gt;FROM&lt;/code&gt;, &lt;code&gt;RUN&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;Run Time: Run time commands are &lt;code&gt;ENTRYPOINT&lt;/code&gt;, &lt;code&gt;CMD&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  DockerFile
&lt;/h3&gt;

&lt;p&gt;It is compulsory to give the docker/image file name as &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To use Base OS from container Image: Dockerfile Keyword: &lt;code&gt;FROM&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM centos:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;To run OS Specific command: Dockerfile keyword: &lt;code&gt;RUN&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RUN yum install openssh-server -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Installing OpenSSH-server
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RUN yum install openssh-server -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Configure SSH Server for password authentication
By Default password authentication is disabled we need to add the below string in the SSHd service configuration file to enable password authentication.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RUN echo "PasswordAuthentication yes" &amp;gt;&amp;gt; /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Generating Keys
For each of the key types (RSA, DSA, ECDSA, and ED25519) for which host keys do not exist, generate the host keys with the default key file path, an empty passphrase, default bits for the key type, and default comment.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RUN ssh-keygen -A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Changing the Password of the root user
&lt;code&gt;chpasswd&lt;/code&gt; command is used to change the password although &lt;code&gt;passwd&lt;/code&gt; command can also do the same. But it changes the password of one user at a time so for multiple users, &lt;code&gt;chpasswd&lt;/code&gt; is used.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# RUN echo "user_name:password" | chpasswd
RUN echo "root:centos" | chpasswd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Default password for this image will be &lt;code&gt;centos&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;To start service at runtime
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CMD ["/usr/sbin/sshd", "-D"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#final-image"&gt;
  &lt;/a&gt;
  Final Image:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM centos:latest
RUN yum install openssh-server -y
RUN yum install openssh-server -y
RUN echo "PasswordAuthentication yes" &amp;gt;&amp;gt; /etc/ssh/sshd_config
RUN ssh-keygen -A
RUN echo "root:centos" | chpasswd
CMD ["/usr/sbin/sshd", "-D"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-build-and-push-docker-image-to-the-docker-hub"&gt;
  &lt;/a&gt;
  STEP 2 : Build and push Docker Image to the Docker Hub
&lt;/h2&gt;

&lt;p&gt;Use below command this build your created image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t dockerhub_id/imagename:image_version fileLocation
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#to-push-the-image-to-the-docker-registry"&gt;
  &lt;/a&gt;
  To push the image to the Docker registry.
&lt;/h4&gt;

&lt;p&gt;First, we need to give a username and password of the Docker Hub &lt;br&gt;
For this run the below command-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run below command to push your created Image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker push dockerhub_id/imagename:image_version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can use my Docker Image to perform further task.&lt;br&gt;
To Pull my Docker image, use below command-&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker pull surajwarbhe/ssh_centos:v1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-ansible-configuration-and-playbooks"&gt;
  &lt;/a&gt;
  STEP 3 : Ansible Configuration and Playbooks
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1-create-an-inventory-file"&gt;
  &lt;/a&gt;
  1. Create an Inventory file
&lt;/h4&gt;

&lt;p&gt;🔶 Create an inventory file with the extension &lt;code&gt;(.txt)&lt;/code&gt; and leave it blank.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vim ip.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-create-ansible-configuration-file"&gt;
  &lt;/a&gt;
  2. Create Ansible Configuration file
&lt;/h4&gt;

&lt;p&gt;🔶 Create a file with the extension &lt;code&gt;(.cfg)&lt;/code&gt; in the directory &lt;code&gt;/etc/ansible/&lt;/code&gt;, here I have a configuration file with named &lt;code&gt;ansible.cfg&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vim  /etc/ansible/ansible.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 Write below statements in the configuration file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[defaults]
inventory=/root/ip.txt
host_key_checking=false
deprecation_warnings=false
command_warnings=false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-create-and-run-ansible-playbook-to-setup-docker"&gt;
  &lt;/a&gt;
  3. Create and Run Ansible Playbook (To setup Docker)
&lt;/h4&gt;

&lt;p&gt;🔶 Create an Ansible playbook with an extension &lt;code&gt;(.yml)&lt;/code&gt; or &lt;code&gt;(.yaml)&lt;/code&gt;, here I have created a playbook with named &lt;code&gt;dockertask.yaml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- hosts: localhost
  vars_prompt:
      - name: container_name
        prompt: "Docker Container Name: "
        private: no

  vars:
          - image_name: surajwarbhe/ssh_centos:v1

  tasks:
      - name: Creating Repo for yum
        yum_repository:
            name: docker
            file: docker
            description: Docker Yum Repo
            baseurl: https://download.docker.com/linux/centos/7/x86_64/stable/
            gpgcheck: no

      - name: Installing Python3...
        command: "yum -y install python3"
      - name: Installing Docker Software...
        command: "yum install -y  docker-ce --nobest"

      - name: Starting Docker services...
        service:
            name: "docker"
            state: started
            enabled: yes

      - name: Installing Docker Library...
        command: "pip3 install docker-py"

      - name: pull an image
        docker_image:
            name: "{{ image_name }}"
            source: pull

      - name: "Launching {{ container_name }} Container"
        docker_container:
            name: "{{ container_name }}"
            image: "{{ image_name }}"
            state: started
            interactive: yes
            detach: yes
            tty: yes

      - name: "Container Info"
        docker_container_info:
            name: "{{ container_name }}"
        register: dinfo

      - name: "Printing IP of Docker container..."
        debug:
              msg: "{{ dinfo.container.NetworkSettings.IPAddress}}"

      - name: updating ansible inventory  with new docker info.......
        blockinfile:
            path: "/root/ip.txt"
            block: |
                    [docker]
                    {{ dinfo['container']['NetworkSettings']['IPAddress'] }} ansible_user=root ansible_ssh_pass=centos  ansible_connection=ssh

  handlers:
  - name: docker
    yum:
        name: docker-ce
        state: present
        allow_downgrade: yes
        skip_broken: yes

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 To run the playbook use the below command-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ansible-playbook &amp;lt;filename&amp;gt;

ansible-playbook dockertask.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initially, it will ask us container name.&lt;br&gt;
I have provided container name as &lt;code&gt;Arth14&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9-GpcUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wln2l5z1cnmjmofe684w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9-GpcUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wln2l5z1cnmjmofe684w.png" alt="root@localhost_~_ansible_tasks 31-08-2021 09_48_59 AM"&gt;&lt;/a&gt;&lt;br&gt;
Yesss, Our playbook run successfully !&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And we got a &lt;code&gt;IP address&lt;/code&gt; of newly created Docker Container as &lt;code&gt;172.17.0.3&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;🔶 Let’s Check ip.txt file&lt;br&gt;
Earlier, we had leave ip.txt as empty but now it is updated dynamically with newly created &lt;code&gt;IP address&lt;/code&gt; Docker container.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rR4G9FIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mc25d11xbpg675v496e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rR4G9FIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mc25d11xbpg675v496e.png" alt="root@localhost_~_ansible_tasks 31-08-2021 09_56_10 AM"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-4-check-connectivity-with-docker-container"&gt;
  &lt;/a&gt;
  STEP 4 : Check connectivity with Docker Container
&lt;/h4&gt;

&lt;p&gt;We have to check ansible connectivity with newly created Docker Container so that we can perform &lt;code&gt;SSH&lt;/code&gt; and perform further operations on that. &lt;br&gt;
Use below command to check connectivity-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ansible all -m ping
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VaS2DU5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnkqiwvj27vv9dtjqp2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VaS2DU5X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnkqiwvj27vv9dtjqp2z.png" alt="root@localhost_~_ansible_tasks 31-08-2021 09_55_55 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you get &lt;code&gt;Success&lt;/code&gt; message in a green color and &lt;code&gt;Ping Pong&lt;/code&gt; at the end, it means everything is OKAY!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#step-5-configuration-of-apache-webserver-copying-the-testing-page-and-starting-the-apache-web-service"&gt;
  &lt;/a&gt;
  STEP 5 : Configuration of Apache Webserver, Copying the testing Page, and Starting the Apache web service
&lt;/h4&gt;

&lt;p&gt;🔶 Create an Ansible playbook with an extension &lt;code&gt;(.yml)&lt;/code&gt; or &lt;code&gt;(.yaml)&lt;/code&gt;, here I have created a playbook with named &lt;code&gt;webserver.yaml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- hosts: docker
  tasks:
    - name: "Installing Httpd service"
      package:
          name: "httpd"
          state: present

    - name: "Creating html file"
      copy:
          content : "&amp;lt;b&amp;gt;&amp;lt;center&amp;gt;HEY! TASK 14.2 Done successfully &amp;lt;/center&amp;gt;&amp;lt;/b&amp;gt;"
          dest: "/var/www/html/index.html"

    - name: "Starting Httpd Service"
      command: "/usr/sbin/httpd"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔶 To run the playbook use the below command-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ansible-playbook &amp;lt;filename&amp;gt;

ansible-playbook webserver.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ytcK-TyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0se46wapnpxzo6lxr7oy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytcK-TyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0se46wapnpxzo6lxr7oy.png" alt="root@localhost_~_ansible_tasks 31-08-2021 09_56_45 AM"&gt;&lt;/a&gt;&lt;br&gt;
Yesss, Our playbook run successfully !&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-6-testing"&gt;
  &lt;/a&gt;
  STEP 6 : Testing
&lt;/h4&gt;

&lt;p&gt;Use below command to test your configuration OR you can directly type your Docker container's IP address over Browser-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# curl &amp;lt;ip_address_of_Docker_container&amp;gt;

curl 172.17.0.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ujFBPvP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9u2hlg7qhrrd9os4z1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ujFBPvP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9u2hlg7qhrrd9os4z1a.png" alt="root@localhost_~_ansible_tasks 31-08-2021 10_15_50 AM"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OY7_r_OW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eejaohv6pr6c6gcdq7wc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OY7_r_OW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eejaohv6pr6c6gcdq7wc.png" alt="567 (2)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;YAY! The Web-Server is configured successfully inside Container.&lt;/strong&gt; 💥💥&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#github-link-httpsgithubcomsurajwarbheansiblewebserinsidedockercontainer"&gt;
  &lt;/a&gt;
  GitHub Link: &lt;a href="https://github.com/surajwarbhe/Ansible-Webser-inside-Docker-Container"&gt;https://github.com/surajwarbhe/Ansible-Webser-inside-Docker-Container&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KuN2YuwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p.kindpng.com/picc/s/646-6464705_thanks-for-reading-png-transparent-png.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KuN2YuwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p.kindpng.com/picc/s/646-6464705_thanks-for-reading-png-transparent-png.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ansible</category>
      <category>docker</category>
      <category>github</category>
      <category>html</category>
    </item>
    <item>
      <title>AWS API Gateway</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 07:49:36 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-api-gateway-323g</link>
      <guid>https://dev.to/this-is-learning/aws-api-gateway-323g</guid>
      <description>&lt;p&gt;AWS API gateway is a fully managed service for developers to fully manage, publish, create, and secure API's. Using API gateway you can create both restful and WebSocket API's. API Gateway has no minimum fees or startup costs. You pay for the API calls you receive and the amount of data transferred out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Easy monitoring - Adding other monitoring services to api&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Security Controls - Authorize access to your APIs with AWS Identity and Access Management (IAM) and Amazon Cognito. If you use OAuth tokens, API Gateway offers native OIDC and OAuth2 support.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Throttling - API throttling is automatically added so our back ends don't receive unnecessary loads&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;API development- Run multiple versions of the same API using API gateway.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Serverless API - We can also use this to build a server less API by building a proxy from the gateway to lambda.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to protect GitHub projects from non-reviewed code and force code review culture</title>
      <author>Mario Loncarek</author>
      <pubDate>Tue, 31 Aug 2021 07:39:24 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/how-to-protect-github-projects-from-non-reviewed-code-and-force-code-review-culture-3ip7</link>
      <guid>https://dev.to/bornfightcompany/how-to-protect-github-projects-from-non-reviewed-code-and-force-code-review-culture-3ip7</guid>
      <description>&lt;p&gt;In this blog post I will show you a way of protecting GitHub repositories from random pushes of non-reviewed code or pushes to the &lt;code&gt;master&lt;/code&gt;/&lt;code&gt;main&lt;/code&gt; branch. I’m a strong believer in deploying features via pull requests with code review. I will not get into the question if the branch and pull request workflow is good or bad, I have my opinion which is that pull requests and code reviews are a must for a team that wants to learn, so if you don't agree this article is not for you because it forces all team members to use it.&lt;/p&gt;

&lt;p&gt;Code review is a practice that depends on the culture. A culture with no ego, with a great wish for continuous learning, sharing and teamwork. Besides learning code, code reviews will improve your communication soft skills as you will need to be clear and professional without being harsh which will also show you if you are a good mentor or not.&lt;/p&gt;

&lt;p&gt;This article will focus on 3 steps to achieve pull request with code review practice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Workflow in theory &lt;/li&gt;
&lt;li&gt;Setting up your project&lt;/li&gt;
&lt;li&gt;Creating pull request template&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#workflow-in-theory"&gt;
  &lt;/a&gt;
  Workflow in theory
&lt;/h3&gt;

&lt;p&gt;1.On GitHub create a new branch from &lt;code&gt;master&lt;/code&gt; and use standard naming convention for branches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature/name-of-the-feature&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix/name-of-the-fix&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try to do this for every &lt;code&gt;feature&lt;/code&gt;/&lt;code&gt;fix&lt;/code&gt; to avoid creating very large pull requests which will be very time consuming for reviewers.&lt;/p&gt;

&lt;p&gt;2.After you finish working, commit and push your code to your &lt;code&gt;feature&lt;/code&gt;/&lt;code&gt;fix&lt;/code&gt; branch and create pull request to merge this branch to &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;3.Assign someone for code review. The goal here is to learn from each other and to make sure all standards are met and code style is respected, and of course to make sure code does not have any bugs. &lt;/p&gt;

&lt;p&gt;4.If there are any questions/suggestions/fixes/changes requested from the person which is conducting code review, that person will request changes on GitHub with clear comments and the process starts again. All comments need to be resolved before the reviewer can accept the pull request, either changes or only answering the questions.&lt;/p&gt;

&lt;p&gt;5.After successful code review, the branch will be merged into the &lt;code&gt;master&lt;/code&gt; branch and the &lt;code&gt;feature&lt;/code&gt;/&lt;code&gt;fix&lt;/code&gt; branch will be automatically deleted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-your-project"&gt;
  &lt;/a&gt;
  Setting up your project
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-create-raw-codeowners-endraw-file"&gt;
  &lt;/a&gt;
  1. Create &lt;code&gt;CODEOWNERS&lt;/code&gt; file
&lt;/h4&gt;

&lt;p&gt;Code owners file defines individuals or teams that are responsible for code in a repository. Code owners are automatically requested for review when someone opens a pull request that modifies code that they own. To use a &lt;code&gt;CODEOWNERS&lt;/code&gt; file, create a new file called &lt;code&gt;CODEOWNERS&lt;/code&gt; in the &lt;code&gt;root&lt;/code&gt;, &lt;code&gt;docs/&lt;/code&gt;, or &lt;code&gt;.github/&lt;/code&gt; directory of the repository, in the branch where you'd like to add the code owners. I’m a simple guy so I always put everything in the &lt;code&gt;root&lt;/code&gt;. You can assign different code owners for different branches. In practice, no one could approve pull requests without code owners approval. This will protect developers from trying to merge pull requests that no one approved.&lt;/p&gt;

&lt;p&gt;Example &lt;code&gt;CODEOWNERS&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* @marioloncarek
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-manage-user-roles"&gt;
  &lt;/a&gt;
  2. Manage user roles
&lt;/h4&gt;

&lt;p&gt;On GitHub repository go to the &lt;code&gt;Settings&lt;/code&gt; tab and then choose &lt;code&gt;Manage access&lt;/code&gt; from the left menu. Here you can define which users can access your repository and what are their roles. Always have at least one administrator, and all other developers can have write permissions. In practice, administrators could override everything from this article and use their privileges to make changes on master branch or force merge without review. This could be helpful for hotfixes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i8sGMOOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swdnah795f1ije4m0ybd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8sGMOOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swdnah795f1ije4m0ybd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-configure-branch-protection-settings"&gt;
  &lt;/a&gt;
  3. Configure branch protection settings
&lt;/h4&gt;

&lt;p&gt;On GitHub repository go to the &lt;code&gt;Settings&lt;/code&gt; tab and then choose &lt;code&gt;Branches&lt;/code&gt; from the left menu. Under &lt;code&gt;Branch protection rules&lt;/code&gt; click &lt;code&gt;Add rule&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IBGY5LS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8oaw6a95dh7c8c7z3rou.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IBGY5LS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8oaw6a95dh7c8c7z3rou.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will open branch protection configuration. Under &lt;code&gt;Branch name pattern&lt;/code&gt; write your main branch name (probably &lt;code&gt;master&lt;/code&gt;) or any other branch you wish to protect. Configure all options according to this image:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Or0ntcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1v8u1bjmg093g7o5hyvi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Or0ntcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1v8u1bjmg093g7o5hyvi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This configuration will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;require pull request reviews before merging &lt;/li&gt;
&lt;li&gt;require review from code owners&lt;/li&gt;
&lt;li&gt;restrict who can dismiss pull request reviews&lt;/li&gt;
&lt;li&gt;require status checks to pass before merging&lt;/li&gt;
&lt;li&gt;require branches to be up to date before merging&lt;/li&gt;
&lt;li&gt;require conversation resolution before merging&lt;/li&gt;
&lt;li&gt;restrict who can push to matching branches&lt;/li&gt;
&lt;li&gt;disallow force pushes for all users with push access&lt;/li&gt;
&lt;li&gt;disallow users with push access to delete matching branches&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#creating-raw-pullrequesttemplatemd-endraw-file"&gt;
  &lt;/a&gt;
  Creating &lt;code&gt;pull_request_template.md&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;When you add a pull request template to your repository, project contributors will automatically see the template's contents in the pull request body.&lt;/p&gt;

&lt;p&gt;To make your pull request template visible in the repository's root directory, name the pull request template &lt;code&gt;pull_request_template.md&lt;/code&gt; and put it in the &lt;code&gt;root&lt;/code&gt; of the repository.&lt;/p&gt;

&lt;p&gt;Now when a contributor creates a new pull request they will see the template which will make pull request more standardised and contributors can be reminded about stuff that is important for the project (like standards, code style, build flows etc etc) with checklists.&lt;/p&gt;

&lt;p&gt;Example &lt;code&gt;pull_request_template.md&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;## Description

Please include a summary of the change or which issue is fixed.

## Type of change

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Area of change

- [ ] Frontend
- [ ] Backend

## General checklist:

- [ ] My code follows the style guidelines of this project
- [ ] I ran `npm run format`/`yarn format` before commit
- [ ] I have performed a self-review of my own code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation where needed
- [ ] My changes generate no new warnings
- [ ] I have checked my code and corrected any misspellings
- [ ] I have updated `master` and merged to my branch before submitting pull request
- [ ] My pull request generate no conflicts with `master` branch
- [ ] I requested code review from other team members

## Frontend checklist:

- [ ] I followed guidelines for `HTML`/`LIQUID`, `SCSS`, `JAVASCRIPT` from readme
- [ ] My `Javascript` generate no new console errors  
- [ ] I tested my code cross browsers
- [ ] My slice is pixel perfect for both desktop and mobile according to design
- [ ] I conducted basic QA to assure all features are working
- [ ] I tested responsive for mobile and tablet resolutions

## Backend checklist:

- [ ] I tested admin by manually adding content from zero
- [ ] I followed guidelines for naming admin fields
- [ ] I created easy to use admin experience which is self-explanatory
- [ ] I added description to admin fields in hard-to-understand areas
- [ ] I followed guidelines for naming `php`/`liquid` variables
- [ ] I conducted basic QA to assure all features are working
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;These 3 setup steps will create strong protection of repositories against pushes of non-reviewed code or direct pushes to the master/main branch. It will force the team to apply the rules and maintain the code review culture.&lt;/p&gt;

&lt;p&gt;It’s not always easy to enforce people to follow the rules, but with suggestions given throughout the post, you can automate them quickly, to make sure that everyone follows them.&lt;/p&gt;

&lt;p&gt;What do you think about rules mentioned above? Do you have other advices to improve your team’s workflow?&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>github</category>
      <category>codereview</category>
      <category>productivity</category>
    </item>
    <item>
      <title>🚀 JavaScript Project Series That Makes You Pro.</title>
      <author>Chetan Atrawalkar👉CA.</author>
      <pubDate>Tue, 31 Aug 2021 07:11:36 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/javascript-project-series-that-makes-you-pro-33ma</link>
      <guid>https://dev.to/chetan_atrawalkar/javascript-project-series-that-makes-you-pro-33ma</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-coders"&gt;
  &lt;/a&gt;
  Hello Coders!👋
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; is one of the leading names when it comes to front-end web development. Moreover, it is one of the best programming languages to learn and earn in 2021. There are several ways of learning JS, ranging from books to tutorials and one amazing way to learn javascript is building a projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;So I'm start the series of javascript projects for learning javascript with enjoyable projects. Hope you like this mini project series.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BU1gGja8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3n3hkhxyzu83w59zm3f.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BU1gGja8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3n3hkhxyzu83w59zm3f.gif" alt="wow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started....🚀
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-color-theme-switcher-using-javascript"&gt;
  &lt;/a&gt;
  1.🎨 Color Theme Switcher Using JavaScript.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In this, we're going to see how you can change the theme of your website to any color you want using JavaScript. This can be considered as a mini-project if you're learning JavaScript. It teaches you DOM concepts and how to change styling of CSS through JavaScript. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#heres-a-preview-"&gt;
  &lt;/a&gt;
  Here's a preview :-
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYhzZk1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6f1c2bqzklgjyk8l3paf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYhzZk1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6f1c2bqzklgjyk8l3paf.gif" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step - 1:&lt;/strong&gt; First Create project files - Index.html, Style.css and Script.js.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step - 2:&lt;/strong&gt; Then Copy the below HTML code and paste it into your code editor.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  Index.html
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;CodePen - Color Change Buttons&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"menu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"menu__item menu__item--yellow "&lt;/span&gt; &lt;span class="na"&gt;data-background=&lt;/span&gt;&lt;span class="s"&gt;"e4a924"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"menu__item menu__item--red"&lt;/span&gt; &lt;span class="na"&gt;data-background=&lt;/span&gt;&lt;span class="s"&gt;"c92142"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"menu__item menu__item--green"&lt;/span&gt; &lt;span class="na"&gt;data-background=&lt;/span&gt;&lt;span class="s"&gt;"37b983"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"menu__item menu__item--purple"&lt;/span&gt; &lt;span class="na"&gt;data-background=&lt;/span&gt;&lt;span class="s"&gt;"9f32b8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;script  &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Here we have used tag to choose various colors for the theme. We have used an attribute "data-background" to specify the default background of the anchor tags.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step - 3:&lt;/strong&gt; After creating html file next is the use CSS code for styling.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#stylecss"&gt;
  &lt;/a&gt;
  Style.css
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.3vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f6f7fc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;background-color&lt;/span&gt; &lt;span class="m"&gt;0.55s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;will-change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;will-change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="n"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="m"&gt;0.55s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;vertical-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.menu__item&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fabe2b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f43768&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#45e1a3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#c152da&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item--animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item--active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;17rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.menu__item--active.menu__item--yellow&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fabe2b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item--active.menu__item--red&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f43768&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item--active.menu__item--green&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#45e1a3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.menu__item--active.menu__item--purple&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#c152da&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step - 4:&lt;/strong&gt; Below is the JavaScript code which is the most important part in this Theme changer. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;We declared a const &lt;strong&gt;'menuItems'&lt;/strong&gt; which will get the tag attributes of our tags.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then in that const we store all the mouse event listener and at the same time calling the &lt;strong&gt;`buttonClick()&lt;/strong&gt;` method which assigns the specified color to the background.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scriptjs"&gt;
  &lt;/a&gt;
  Script.js
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;menuItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.menu__item&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;menuItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;menuItems&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;buttonClick&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;buttonClick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;menu__item--active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`#&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-background&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it. You're done.&lt;/p&gt;

&lt;p&gt;That’s all! Let me know by comment below if you have successfully implemented this project. &lt;/p&gt;

&lt;p&gt;🛑 And If you need more content like this follow &lt;strong&gt;@codev_land&lt;/strong&gt; on instagram.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-claim-and-just-code-it"&gt;
  &lt;/a&gt;
  Keep Claim And Just Code It 😎
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Multi-colored text in CSS</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 31 Aug 2021 07:10:13 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/multi-colored-text-in-css-1mi8</link>
      <guid>https://dev.to/dailydevtips1/multi-colored-text-in-css-1mi8</guid>
      <description>&lt;p&gt;In this article, we will be creating a super cool effect where we can have multi-colored text in CSS.&lt;/p&gt;

&lt;p&gt;I saw this effect a while ago on Twitter done by &lt;a href="https://twitter.com/argyleink/status/1409590647187656706"&gt;Adam Argyle&lt;/a&gt; and was blown away by how easy this can be achieved in CSS.&lt;/p&gt;

&lt;p&gt;Below is a demo of what we'll be creating today!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/ExXYzbg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-multicolored-gradient-text"&gt;
  &lt;/a&gt;
  CSS Multi-colored gradient text
&lt;/h2&gt;

&lt;p&gt;To create this effect, let's first start with our HTML structure. This is super easy as we only need one element!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;multi colored text in css&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then it's off to our CSS file to magic some magic 🪄.&lt;/p&gt;

&lt;p&gt;Let's start by defining our five colors and our starting angle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--color-1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#442288&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--color-2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#6ca2ea&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--color-3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#b5d33d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--color-4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fed23f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--color-5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#eb7d5b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--angle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are using the root to define variables as this is valid syntax in basic CSS. No need for SCSS here.&lt;/p&gt;

&lt;p&gt;Then let's add some styling to our body. This is used to center our text and make our background black. The effect works better on black but will also work on different colors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then let's start on styling our &lt;code&gt;h1&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;I'm breaking these up into a couple of steps to give more of an idea of what's happening.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-basic-heading-styling"&gt;
  &lt;/a&gt;
  1. Basic heading styling
&lt;/h3&gt;

&lt;p&gt;For our basic styling, we want a relatively big heading.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Helvetica Neue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6.5vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us the following output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7aqE5Fxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629698862225/mJelzv5WB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7aqE5Fxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629698862225/mJelzv5WB.png" alt="Heading stying"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-each-word-on-its-own-line"&gt;
  &lt;/a&gt;
  2. Each word on its own line
&lt;/h3&gt;

&lt;p&gt;As you can see above, it's just one big line. To get each word on its own line, we can use the following CSS hack.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;word-spacing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="nt"&gt;vw&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Making each word space on a single line&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fvZBOsED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629698977760/jKn1N700v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fvZBOsED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629698977760/jKn1N700v.png" alt="CSS Every word on its own line"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-css-text-gradient-background"&gt;
  &lt;/a&gt;
  3. CSS Text Gradient background
&lt;/h3&gt;

&lt;p&gt;Now we can move to add the gradient effect. We'll start by splitting the gradient into 5 steps, resulting in each word being one color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;background&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;linear-gradient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--angle&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;19&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;19&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;20&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;20&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;39&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;39&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;40&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;40&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;59&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;59&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;60&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;60&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;79&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;79&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;transparent&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="nt"&gt;var&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;--color-5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;background-clip&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;text&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;-webkit-background-clip&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;text&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see we define the colors we have in our &lt;code&gt;:root&lt;/code&gt; element definition. As well as the basic angle of 0.&lt;br&gt;
We add a transparent border between each color for our animation later on.&lt;br&gt;
As well as set the clipping mode to text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kkcAjMY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629699790231/t2_xUUlq-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkcAjMY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629699790231/t2_xUUlq-.png" alt="CSS Multi-coloured gradient effect"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animating-a-linear-background-gradient-in-css"&gt;
  &lt;/a&gt;
  Animating a linear background gradient in CSS
&lt;/h2&gt;

&lt;p&gt;To animate the gradient is quite tricky.&lt;br&gt;
The main hack we are applying is by defining the &lt;code&gt;--angle&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;Then we can go ahead and add an animation to our &lt;code&gt;h1&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="nt"&gt;rotate&lt;/span&gt; &lt;span class="nt"&gt;linear&lt;/span&gt; &lt;span class="nt"&gt;infinite&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This animation looks as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--angle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, this doesn't do much yet, because the browser doesn't know &lt;code&gt;360deg&lt;/code&gt; is a value.&lt;br&gt;
We can fix this by defining a &lt;code&gt;@property&lt;/code&gt; for the &lt;code&gt;--angle&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="n"&gt;--angle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;syntax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'&amp;lt;angle&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;initial-value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;inherits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: This idea was taken from this cool &lt;a href="https://css-tricks.com/animating-a-css-gradient-border/"&gt;CSS-Tricks article&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And there we go! A super cool CSS text animation effect. I hope you enjoyed this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>What is 'this' ? 😳</title>
      <author>Mayank Kumar</author>
      <pubDate>Tue, 31 Aug 2021 07:09:16 +0000</pubDate>
      <link>https://dev.to/mayank0508/what-is-this-4p6n</link>
      <guid>https://dev.to/mayank0508/what-is-this-4p6n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#this"&gt;
  &lt;/a&gt;
  This 😭
&lt;/h2&gt;

&lt;p&gt;The this keyword can lead to some headaches in JavaScript - this blog hopefully acts as a remedy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2LMuD7rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/h36vh423PiV9K/giphy.gif%3Fcid%3Decf05e4737goqavfe8abhgzhc5pbdgd86g3hx0to7j6kgboj%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2LMuD7rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/h36vh423PiV9K/giphy.gif%3Fcid%3Decf05e4737goqavfe8abhgzhc5pbdgd86g3hx0to7j6kgboj%26rid%3Dgiphy.gif%26ct%3Dg" alt="hi"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;this refers to different things, depending on where it's used and how (if used in a function) a function is called !&lt;/p&gt;

&lt;p&gt;Generally, this refers to the "thing" which called a function. That can be the global context, an object or some bound data/ object (e.g. when the browser binds this to the button that triggered a click event).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-this-in-global-context-ie-outside-of-any-function"&gt;
  &lt;/a&gt;
  1) this in Global Context (i.e. outside of any function)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;// logs global object (window in browser) - ALWAYS (also in strict mode)! 🙌&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-this-in-a-function-nonarrow-called-in-the-global-context"&gt;
  &lt;/a&gt;
  2) this in a Function (non-Arrow) - Called in the global context
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;// logs global object (window in browser) in non-strict mode, undefined in strict mode 🙌&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-this-in-an-arrowfunction-called-in-the-global-context"&gt;
  &lt;/a&gt;
  3) this in an Arrow-Function - Called in the global context
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;// logs global object (window in browser) - ALWAYS (also in strict mode)! 🙌&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-this-in-a-method-nonarrow-called-on-an-object"&gt;
  &lt;/a&gt;
  4) this in a Method (non-Arrow) - Called on an object
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mayank&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// or use method shorthand: greet() { ... }&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;// logs 'Max', "this" refers to the person object 🙌&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-this-in-a-method-arrow-function-called-on-an-object"&gt;
  &lt;/a&gt;
  5) this in a Method (Arrow Function) - Called on an object
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Max&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;// logs nothing (or some global name on window object), "this" refers to global (window) object, even in strict mode 🙌&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If in doubt, a console.log(this); can always help you find out what this is referring to at the moment!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8vvuYXfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og3yo6blha2karbyqj7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8vvuYXfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og3yo6blha2karbyqj7e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HAPPY CODING 👨‍💻&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>AWS Lambda</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 06:41:38 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-lambda-2je9</link>
      <guid>https://dev.to/this-is-learning/aws-lambda-2je9</guid>
      <description>&lt;p&gt;AWS Lambda is function as service in AWS it means that we define what we want to run on AWS as a function and AWS runs it it does not matter how much RAM, storage it requires. It does not require you to provision any servers. It also runs on demand and you pay for compute time and no of times you run required function. It can scale infinitely. Scaling and pay on compute time makes it a service of choice for many developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You don't need to manage any servers for your back end service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It lets you run I million requests and 400 thousand of compute time in free tier so that you can get well versed with it before using it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy pricing you have to pay for compute time and number for request&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Language support Node.js, Python, Golang C# etc and all other using many API provided custom API&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very easy to add resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Only used as for resources when needed&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next we will do a hands on AWS Lambda&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>Nickname Generator - Create Free, unique and Random nickname</title>
      <author>Sankeypython</author>
      <pubDate>Tue, 31 Aug 2021 06:31:54 +0000</pubDate>
      <link>https://dev.to/sanketsbhosale/nickname-generator-create-free-unique-and-random-nickname-8em</link>
      <guid>https://dev.to/sanketsbhosale/nickname-generator-create-free-unique-and-random-nickname-8em</guid>
      <description>&lt;p&gt;Nickname! familiar or humorous name given to a person or thing instead of or as well as the real name.&lt;br&gt;
"Millender's fair complexion gave rise to his nickname ‘Ghost’"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.nicknamegenerator.online/"&gt; Nickname generator,&lt;/a&gt; is a 100% Free online Nickname maker tool that is used to Generate Unique &amp;amp; Random nicknames for your friends &amp;amp; loved ones. The best thing about it? It's totally FREE TO USE!!!&lt;/p&gt;

&lt;p&gt;Generating Your First Friends New Friend Name Generator - Using Email A friend of yours calls you on Facebook asking for personal information like: Phone Number (if calling from cell phone) What website / Apps are they using which can be found by typing in address.&lt;/p&gt;

&lt;p&gt;How old does he/she play Pokemon Go what device model did he/ she purchase; if there was any issue with his tablet before yesterday morning where we were having problems while playing through our email account Where else will I hear my contact again via twitter when searching around My mobile number.&lt;/p&gt;

&lt;p&gt;Generator uses 3 Easy Steps:&lt;br&gt;
 "Inches Above" (inclusive), Create New Name with Simple Words – All you have got until now will become visible on Internet quickly before using it in any of these 6 steps; 'Onward", Add Personal Info To Your ID - Please choose how much info as follows : age category group email location telephone number personal background check photo size height weight color country area code city town zip address Country Address Zip Code City State/Province ZIP code province Canada US Alaska Alabama Arkansas Arizona California Colorado Connecticut Delaware District Of Columbia Florida Georgia Guam Hawaii Idaho Illinois Indiana Iowa Kansas Kentucky Louisiana Maine Maryland Massachusetts Michigan.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 10 Free Website Template Resources</title>
      <author>Md Abu Taher</author>
      <pubDate>Tue, 31 Aug 2021 06:29:50 +0000</pubDate>
      <link>https://dev.to/helloabutaher/top-10-free-website-template-resources-3eoe</link>
      <guid>https://dev.to/helloabutaher/top-10-free-website-template-resources-3eoe</guid>
      <description>&lt;p&gt;Users’ first interaction with any website is with the frontend. Most developers don’t want to spend days or weeks writing HTML and CSS code from scratch, especially when a client wants a website made on an urgent basis. &lt;/p&gt;

&lt;p&gt;Your biggest strength in development is smartness when you have resources to download a template or theme and then customize it with your creativity to make it unique, beautiful, modern and attractive for the user.&lt;/p&gt;

&lt;p&gt;If you are a good backend developer (developer who codes) then using a template or theme is also a very good idea. You can also use these templates for your project.&lt;/p&gt;

&lt;p&gt;There are a lot of places where you can get free templates but not all the templates and themes on offer are completely free of charge. An alternative is to develop a template from scratch but this does take some time and requires skills in web design. &lt;/p&gt;

&lt;p&gt;If you're looking to save some money and want to customize some of the details further down the line, one option worth exploring is trying out free templates that have been created by other designers.&lt;/p&gt;

&lt;p&gt;We will discuss why it's sometimes best to consider going for at least semi-free theme options and share a few resources where you can get both paid and free themes or templates online!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.uihut.com/"&gt;UIHUT&lt;/a&gt;- 12000 Exclusive Design Resources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Explore 12,000+ Exclusive Design Resources Download thousands of templates, illustrations, icons, and graphic assets for web and mobile app design without paying designer prices .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Significant advantages of UIHUT&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;1000+ web Templates UI&lt;br&gt;
2500+ Illustration&lt;br&gt;
7000+ Icons&lt;br&gt;
500+ Mobile Screen UI&lt;br&gt;
100+ Web App UI&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://html5up.net/"&gt;HTML5 Up&lt;/a&gt;-  makes spiffy HTML5 site templates&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the most popular design platforms is called HTML5 where you can find plenty of beautiful and elegant themes which are fully responsive (you can view the site as it would appear on all screen modes) that has been built on HTML5 and CSS3. &lt;/p&gt;

&lt;p&gt;Most of the features you will find here could be used for general-purpose means for any kind of application. You may also check out the live demo on multiple devices to help visualize how your theme might look on them, while download links are found in a column on the right hand side. &lt;/p&gt;

&lt;p&gt;All themes come available 100% free to download however you can always upgrade to get further access to features with some premium points if needed – simply click on 'get premium points' to see more details about what more features you have access to once they've been purchased!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://colorlib.com/wp/templates/"&gt;Colorlib&lt;/a&gt;- 1500+ Best Website Template&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One of the most often used and popular places for website templates is Colorlib. Not only can they give you a wide selection of website templates to choose from, but they also have a good collection that can be utilized on all kinds of trades including real estate, hotels, photography, travel etc. &lt;/p&gt;

&lt;p&gt;Any multiple pages of website templates that you need you will more than likely find in one single place. &lt;/p&gt;

&lt;p&gt;It's easy to get lost in the large amount of choices at your disposal so make sure before you settle on any specific template that you check its viability across different devices as well as browsers!&lt;/p&gt;

&lt;p&gt;4.&lt;a href="https://bootstrapthemes.co/"&gt; Bootstrap Themes&lt;/a&gt; -Free Bootstrap Templates and Themes&lt;/p&gt;

&lt;p&gt;This is also a very good site at which you can find a great quantity of free beautiful templates for web development projects that are specific to the travel, restaurant, agency, retail, or business industry.&lt;/p&gt;

&lt;p&gt;Most of these templates are fully responsive so you will be able to ascertain the live preview for different screen models before downloading them. Within this website there is also a section for resources that presents customers with the option of downloading navigation menus, buttons, pricing tables and much more to meet their needs.&lt;/p&gt;

&lt;p&gt;5.&lt;a href="https://www.astemplates.com/"&gt;AS Templates&lt;/a&gt;-FREE WEBSITE TEMPLATES&lt;/p&gt;

&lt;p&gt;The website has both free and paid templates. For the free template, you need to visit the ‘free stuff’ tab where you can find a lot of free templates built on Joomla, WordPress, HTML on the site. &lt;/p&gt;

&lt;p&gt;These are web applications which can be installed in any device - tablet or mobile. You just need to download the app from play store or apple ios store. Then you can install them and customize your own websites!&lt;/p&gt;

&lt;p&gt;It has a lot of categories to design such as art &amp;amp; culture, business, education, photography , medical etc. One can also check out some of the demo previews before installing it in a real world app .&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.zerotheme.com/"&gt;ZeroTheme&lt;/a&gt;-Free Html5 and Css3 Website Templates&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This website also gives you the option to choose free or paid templates. You can download the free responsive theme for your website from here and customize that according to your needs. Some of the templates are regular responsive HTML5 and some of them are bootstrap . &lt;/p&gt;

&lt;p&gt;They have more than 120+ free themes, out of which 87 are HTML-based and 37 are bootstrap 4. You can also check a live preview of it on different smartphones like iPhone 4/4s, iPhone 5/5s, iPhone 6/6s, Samsung Galaxy S3, Galaxy S4, Galaxy S5, or newer devices like LG G3/G2 , HTC M7 , Nexus 5x , Nexus 6p , Nokia Lumia 1020 .&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://freehtml5.co/"&gt;Free HTML5&lt;/a&gt;- Free &amp;amp; Premium HTML5 Bootstrap Templates&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This website also gives you the option to download free mobile application themes and templates. You can find a lot of options on offer including ones for business, education, health/fitness, travel and hotels.&lt;/p&gt;

&lt;p&gt;There are also subscription based templates available. If there is an application which you're building but don't yet have a specific template, it's always possible to order one bespoke from this talented professional! &lt;/p&gt;

&lt;p&gt;The themes themselves are built with Bootstrap and HTML5 (though this too could vary as site engineers may specialise in different coding languages).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://startbootstrap.com/"&gt;Start Bootstrap&lt;/a&gt;-Bootstrap themes, templates, and UI tools&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look into the template store bellow and choose our first theme! There are multiple good themes available. And more importantly, we can preview and test them on multiple devices before downloading which is very cool because we can use a smartphone, tablet, laptop or a desktop to see how it'll look like - that's awesome! Someone told me you could even test your website on robots such as those used by Google if they are responsive. &lt;br&gt;
I'm going to try that next time…&lt;/p&gt;

&lt;p&gt;But let's just not get ahead of ourselves for now or the point of why we're here will fly over our heads and then what? The point is: this site has great templates from which you should be able to choose one and add features and CSS or whatever else in order to make it yours.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://themewagon.com/"&gt;Themewagon&lt;/a&gt;-Better UX. Documented Code. Effortless Customization.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This website offers many free templates built on HTML and Bootstrap. They also provide different styles for any kind of application, so be sure to check them out. If you are looking for a particular e-commerce template, then this site will give you some great options.&lt;/p&gt;

&lt;p&gt;These templates are responsive, meaning that they will change their style depending on what device they're being viewed on. Make sure to click the links below to view sites with responsive templates available!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.styleshout.com/"&gt;Styleshout&lt;/a&gt;-Brilliantly Crafted Free Website Templates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Like HTML5 Up, this website offers some unique and simple templates which you can customize as per your need. All these templates are responsive so you can easily check views for different devices. You can also find pages like Coming Soon or 404 errors.&lt;/p&gt;

&lt;p&gt;If you explore the website you will find most of the templates have added dynamic JavaScript features like countdowns and sliders. For non-developers, they provide a service to customize their website. So if it's too much hassle for you to do it yourself, then no worries: just pay a fee and get one of their customized websites!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;In this article, we have provided you with a list of the best resources available on the internet for web template design. We hope you find these resources useful and that they help you to develop an amazing website ! If you have any other questions or concerns about designing UIs, please contact us anytime at UIHUT.&lt;br&gt;
Thank you for reading, we are always excited when one of our posts is able to provide useful information on a topic like this!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>GitHub Copilot on Codespaces on an iPad + GitHub Codespaces Q&amp;A</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Tue, 31 Aug 2021 06:28:22 +0000</pubDate>
      <link>https://dev.to/n3wt0n/github-copilot-on-codespaces-on-an-ipad-github-codespaces-q-a-2n00</link>
      <guid>https://dev.to/n3wt0n/github-copilot-on-codespaces-on-an-ipad-github-codespaces-q-a-2n00</guid>
      <description>&lt;p&gt;Do you know you can &lt;strong&gt;develop any application on your iPad&lt;/strong&gt;? Well, thanks to Codespaces you can!&lt;/p&gt;

&lt;p&gt;In this live streaming I'm going to have a quick demo of using GitHub &lt;strong&gt;Codespaces on iPad&lt;/strong&gt;, and we will also see &lt;strong&gt;GitHub Copilot in action within Codespaces&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I will also answer all your &lt;strong&gt;questions about GitHub Codespaces&lt;/strong&gt;. So prepare your questions! And if you can't make it, &lt;strong&gt;post your questions or comments down below&lt;/strong&gt; so I can address them during the live!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ELBJjwpUn1s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/ELBJjwpUn1s"&gt;Link to the video: https://youtu.be/ELBJjwpUn1s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you there!&lt;/p&gt;

&lt;p&gt;TIME FOR THE LIVE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wednesday, September 9th, 9.30 pm HKT&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 7.00 pm IST&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 1.30 pm UTC&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 9.30 am ET&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 6.30 am PT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>codespaces</category>
      <category>ipad</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>AWS Container Services</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 05:55:30 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-container-services-kbp</link>
      <guid>https://dev.to/this-is-learning/aws-container-services-kbp</guid>
      <description>&lt;p&gt;Docker is used a lot for deploying production services on the servers. To allow this paradigm of deployment AWS has many services like Elastic Container service, Fargate serverless container service, container registry in this series we will learn about the container services in AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ecs"&gt;
  &lt;/a&gt;
  ECS
&lt;/h2&gt;

&lt;p&gt;Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service that helps you easily deploy, manage, and scale containerized applications. It deeply integrates with the rest of the AWS platform to provide a secure and easy-to-use solution for running container workloads in the cloud and now on your infrastructure with Amazon ECS Anywhere.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Easily manage your deployments using existing tools.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eliminates the need for you to install, operate, and scale your own cluster management infrastructure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Makes best use of your instance resources by using containers&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#fargate"&gt;
  &lt;/a&gt;
  Fargate
&lt;/h2&gt;

&lt;p&gt;AWS Fargate is a technology that you can use with Amazon ECS to run containers without having to manage servers or clusters of Amazon EC2 instances. With Fargate, you no longer have to provision, configure, or scale clusters of virtual machines to run containers. This removes the need to choose server types, decide when to scale your clusters, or optimize cluster packing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We don't have to worry about the servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We pay only for the resources we use as its fully serverless&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can focus on building applications&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#aws-ecr"&gt;
  &lt;/a&gt;
  AWS ECR
&lt;/h2&gt;

&lt;p&gt;AWS Elastic Container Registry (Amazon ECR) is a fully managed container registry that makes it easy to store, manage, share, and deploy your container images and artifacts anywhere. Amazon ECR eliminates the need to operate your own container repositories or worry about scaling the underlying infrastructure. Amazon ECR hosts your images in a highly available and high-performance architecture, allowing you to deploy images for your container applications reliably. You can share container software privately within your organization or publicly worldwide for anyone to discover and download.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
  </channel>
</rss>
