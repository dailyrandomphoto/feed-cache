<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What Things Do Developers Get to Focus on Uber Clone Development?</title>
      <author>georgedavid</author>
      <pubDate>Tue, 02 Nov 2021 13:12:39 +0000</pubDate>
      <link>https://dev.to/georgedavid02/what-things-do-developers-get-to-focus-on-uber-clone-development-4lca</link>
      <guid>https://dev.to/georgedavid02/what-things-do-developers-get-to-focus-on-uber-clone-development-4lca</guid>
      <description>&lt;p&gt;Developing mobile applications today is getting higher than developing websites. Instead of people going to browsers and searching for individual websites to book particular on-demand services online, it is really easy for them to do the same through simple mobile apps. Following this, most of the current business initiations highly require the Uber clone in the development processes due to advantages.&lt;/p&gt;

&lt;p&gt;So, let‚Äôs discuss why the ready-to-go app script is in such demand and what are the things you need to focus on developing it progressive to the contemporary market requirements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-app-development-in-the-present-market-scenario"&gt;
  &lt;/a&gt;
  Mobile App Development in The Present Market Scenario
&lt;/h2&gt;

&lt;p&gt;In this busy world, a maximum of industries is turned into smart customer approaches. After the first arrival of transport service via simple mobile applications, several business sectors followed the same digital path later. In which, right from the new emergence to the contemporary market, the transport industry still holds its high level of growth value online.&lt;/p&gt;

&lt;p&gt;This is why today‚Äôs entrepreneurs are enormously started to invest in the achievable marketplace. As mobile app development is the core concept for the startup, it is so demanded among business people to find a better developer in the market now.&lt;/p&gt;

&lt;p&gt;On that, by following the upcoming new mobile app development consideration, you could be that developer amongst your rivals smartly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-get-to-focus-to-build-a-progressive-taxi-app"&gt;
  &lt;/a&gt;
  Things Get to Focus to Build A Progressive Taxi App
&lt;/h2&gt;

&lt;p&gt;The development sector in the present market trend is becoming a crucial part compared to others. So as a developer, we could follow up some importance while developing mobile apps for any digitized service sectors. According to it, the below-mentioned stuff must be followed by developers in the taxi app building.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advanced Techstack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your selective tech-stack to develop the entire blog could be like Reactjs, Swift, Laravel, Firebase, Android SDK, and Php. Such more advanced tech sources could assist you in several good aspects in your new business app development such as speedy app creation, user-friendly structure, easy client-centric modulations, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Market Analysis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make your own market analysis regarding the on-demand transport service industry in present days. Study service providers‚Äô pain points, their development side of requirements, app functionality through additional needs, and existing app users‚Äô demands online. Design your new readymade script apt to the latest market needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While there are many development tools available in the market, the reason why entrepreneurs choose this &lt;a href="https://www.spotnrides.com/"&gt;Uber clone script&lt;/a&gt; for their new mobile app creation is its enhancements and flexibility primarily. Therefore, it is necessary to provide your clients with a 360-degree full customizing app solution on development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost-effective&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Additionally, offer your side of expert business model-related plans and support. That makes them sketch their already planned business idea to be more powerful with expert guidance. Along with advancements as mentioned in the blog like the full tailored solution, latest features and options in-built, and its cost affordability make your complete app output to the business launching so cost-effective at the client end.&lt;/p&gt;

&lt;p&gt;Along with these importance, your app also should acquire some must include as well as progressive in-app features as follows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-demanded-inapp-features-that-must-be-added-to-uber-clone"&gt;
  &lt;/a&gt;
  What Are the Demanded In-app Features that Must Be Added to Uber Clone?
&lt;/h2&gt;

&lt;p&gt;Your app development for the transport service today must be included with the following features. As these are playing major roles in the complete business functionality online, your built script to the latest marketplace naturally acquires the advanced features. That not only provides the app functions seamlessly between heavy user traffic but also becomes so user-friendly to the users‚Äô hands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Social Media Integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The customers can smartly log in to the business app speedily. This social media through sign-up solutions offer quick access for them even as new users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fast Driver Onboardings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After the requests of new driver registrations, the required documents which they uploaded needed to be verified fast. It makes their onboardings so fast as demanded in the marketplace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GPS Tracking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An optimized GPS-route-mapping-facility should be enabled for the drivers. So they can smartly complete all the tripping smartly without on-road route inquiries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Different Payment Option&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Multiple payment gateways are always assisting the passenger to pay fares at their convenience. So, including both the online and offline payment mode is essential in the service app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Push Notifications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A strong interlinking framework concept is needed to build a powerful in-app connection between different players. By ensuring that, the communication through push notifications happens rapidly in the business progress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Schedule Booking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By including the schedule-based booking option with your ready-made app, your developed app allows riders to book cabs in advance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Security&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By virtue of all the users' sensitive information such as banking, contact-info, and social media credentials needed to be secured in the service, the app must contain an automated end-to-end data encryption technology.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smart User Control&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The overall-admin-control option should be easy, especially in user control. For i.e. the admin should be able to add or remove any user at any time under demand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In Conclusion
&lt;/h2&gt;

&lt;p&gt;As mobile app development is the core concept in new business initiations, it is very crucial to follow some importance on the development area. While concentrating on stuff like selecting enhanced tech-stack, market analysis, client requirements, and cost-effectiveness, you could smartly create a demanded ready-made app as discussed. That makes you stand out from others in the development market ever in the future.&lt;/p&gt;

</description>
      <category>development</category>
      <category>beginners</category>
      <category>programming</category>
      <category>uberclone</category>
    </item>
    <item>
      <title>Responsive Personal Portfolio Website with HTML CSS JS - Part 2</title>
      <author>Sadee</author>
      <pubDate>Tue, 02 Nov 2021 13:05:50 +0000</pubDate>
      <link>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-2-l5</link>
      <guid>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-2-l5</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/EOtRjEeP6zk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Responsive personal portfolio website with html css js&lt;/p&gt;

&lt;p&gt;In this video series, &lt;br&gt;
I will show you how to build a Complete Responsive Personal Portfolio Website using HTML CSS JavaScript. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#website-features"&gt;
  &lt;/a&gt;
  üåü Website features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;5 pages&lt;/li&gt;
&lt;li&gt;Fully Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Awesome Page Navigation&lt;/li&gt;
&lt;li&gt;Filterable item showcase&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;HI üëã&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel üëá&lt;/p&gt;

&lt;p&gt;üì∫ My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
üîî Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
üïê New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  üìπ Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-1-3dlg"&gt;Part 1&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  üîó Essential links
&lt;/h2&gt;

&lt;p&gt;Images : &lt;a href="https://drive.google.com/file/d/1CZZcnaOEVDDneSve6qpSUoyAfEBuPrqD/view"&gt;image.zip&lt;/a&gt;&lt;br&gt;
Font : &lt;a href="https://fonts.google.com/specimen/Poppins?query=poppins"&gt;Poppins&lt;/a&gt;&lt;br&gt;
Ionicon : &lt;a href="https://ionic.io/ionicons"&gt;https://ionic.io/ionicons&lt;/a&gt;&lt;br&gt;
How to use ionicon : &lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;https://youtu.be/TTrYjLOJeKs&lt;/a&gt;&lt;br&gt;
Source Code : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamp"&gt;
  &lt;/a&gt;
  ‚è±Ô∏è Timestamp
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
0:57 - New Variables and default style&lt;br&gt;
2:34 - Resume section&lt;br&gt;
16:23 - Media queries&lt;br&gt;
18:17 - Page navigation functionality&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  üë§ Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Let's build a stock price CLI with Python</title>
      <author>Code_Jedi</author>
      <pubDate>Tue, 02 Nov 2021 12:56:21 +0000</pubDate>
      <link>https://dev.to/code_jedi/lets-build-a-stock-price-cli-with-python-g28</link>
      <guid>https://dev.to/code_jedi/lets-build-a-stock-price-cli-with-python-g28</guid>
      <description>&lt;p&gt;Are you someone who can't help checking the latest stock prices every 5 minutes? Thanks to Python, getting the latest stock prices can be as easy as running &lt;code&gt;python3 main.py AMZN&lt;/code&gt; in your terminal. In this tutorial, you will learn how to make a CLI with Python that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reads the ticker whose price you would like to get.&lt;/li&gt;
&lt;li&gt;Scrapes the specified ticker's latest price.&lt;/li&gt;
&lt;li&gt;Displays the scraped price.&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h2&gt;

&lt;p&gt;First things first, create a new python file. For this tutorial, I'll name mine &lt;code&gt;main.py&lt;/code&gt;. Once you have your new python file, import &lt;code&gt;sys&lt;/code&gt;, &lt;code&gt;BeautifulSoup&lt;/code&gt; and &lt;code&gt;requests&lt;/code&gt;:&lt;br&gt;
&lt;strong&gt;main.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import sys
import requests
from bs4 import BeautifulSoup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our CLI will need the user to input a ticker as a command-line argument after &lt;code&gt;python3 main.py&lt;/code&gt;. Using the &lt;code&gt;sys&lt;/code&gt; library, we can check if the user has entered a ticker and make the CLI return an error if no ticker was provided or if too many tickers were provided. This CLI will then define the &lt;code&gt;ticker&lt;/code&gt; variable as the second argument provided by the user:&lt;br&gt;
&lt;strong&gt;main.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if len(sys.argv) &amp;gt; 2:
    print('You have specified too many tickers')
    sys.exit()

if len(sys.argv) &amp;lt; 2:
    print('No ticker provided')
    sys.exit()

ticker = sys.argv[1] # 0 = first argument and 1 = second argument
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our CLI will need to scrape the provided ticker for it's latest price. We can do this using the &lt;code&gt;BeautifulSoup&lt;/code&gt; and &lt;code&gt;requests&lt;/code&gt; libraries.&lt;/p&gt;

&lt;p&gt;The CLI will scrape the stock prices from &lt;a href="https://finance.yahoo.com/"&gt;yahoo finance&lt;/a&gt;. It will need to change the URL it scrapes based on the ticker entered by the user. Since the entered ticker gets stored inside the &lt;code&gt;ticker&lt;/code&gt; variable, following yahoo finance's url structure, the CLI can change the &lt;code&gt;url&lt;/code&gt; variable based on the ticker like so:&lt;br&gt;
&lt;strong&gt;main.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;url = 'https://finance.yahoo.com/quote/' + ticker + '?p=' + ticker + '&amp;amp;.tsrc=fin-srch'
response = requests.get(url)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, if the provided ticker is &lt;code&gt;AMZN&lt;/code&gt;, the CLI will scrape &lt;a href="https://finance.yahoo.com/quote/AMZN?p=AMZN&amp;amp;.tsrc=fin-srch"&gt;this url&lt;/a&gt;.&lt;br&gt;
If the provided ticker is instead &lt;code&gt;AAPL&lt;/code&gt;, the CLI will scrape &lt;a href="https://finance.yahoo.com/quote/AAPL?p=AAPL&amp;amp;.tsrc=fin-srch"&gt;this url&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
import sys
import requests
from bs4 import BeautifulSoup

if len(sys.argv) &amp;gt; 2:
    print('You have specified too many tickers')
    sys.exit()

if len(sys.argv) &amp;lt; 2:
    print('No ticker provided')
    sys.exit()

ticker = sys.argv[1]

url = 'https://finance.yahoo.com/quote/' + ticker + '?p=' + ticker + '&amp;amp;.tsrc=fin-srch'
response = requests.get(url)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#scraping-the-stock-price"&gt;
  &lt;/a&gt;
  Scraping the stock price
&lt;/h3&gt;

&lt;p&gt;For the actual scraping part, first go to a sample ticker's stock price webpage on yahoo finance. I'll choose &lt;a href="https://finance.yahoo.com/quote/AMZN?p=AMZN&amp;amp;.tsrc=fin-srch"&gt;AMZN&lt;/a&gt; for this tutorial. Locate the sample ticker's stock price element and right click on it. This will make a pop-up appear next to your cursor, click on the &lt;code&gt;inspect&lt;/code&gt; option:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3Ycv6Vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no469xj5l0vgnvo0hxcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3Ycv6Vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no469xj5l0vgnvo0hxcb.png" alt="Inspect the stock price" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will make a large pop-up containing this webpage's DOM appear at the right of your screen with the selected stock price element highlighted in light blue:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---jh_Lmnk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2wp793xfv98bmgikf7m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---jh_Lmnk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2wp793xfv98bmgikf7m.png" alt="DOM pop-up" width="880" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select and copy the highlighted element's &lt;code&gt;class&lt;/code&gt; property:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L8NSw8jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6061qoxj9azpmw4x97g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8NSw8jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6061qoxj9azpmw4x97g.png" alt="Select class property" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now that you have this element's &lt;code&gt;class&lt;/code&gt; property, to scrape this ticker's latest stock price, add the following code to &lt;code&gt;main.py&lt;/code&gt;:&lt;br&gt;
&lt;strong&gt;main.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    soup = BeautifulSoup(response.text, 'html.parser')
    price = soup.find('body').find(class_='Trsdu(0.3s) Fw(b) Fz(36px) Mb(-4px) D(ib)')
    print('Latest stock price: ' + price.text.strip())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will find the stock price element through it's class property and display it's text contents using &lt;code&gt;price.text.strip()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
import sys
import requests
from bs4 import BeautifulSoup

if len(sys.argv) &amp;gt; 2:
    print('You have specified too many tickers')
    sys.exit()

if len(sys.argv) &amp;lt; 2:
    print('No ticker provided')
    sys.exit()

ticker = sys.argv[1]

url = 'https://finance.yahoo.com/quote/' + ticker + '?p=' + ticker + '&amp;amp;.tsrc=fin-srch'
response = requests.get(url)

soup = BeautifulSoup(response.text, 'html.parser')
price = soup.find('body').find(class_='Trsdu(0.3s) Fw(b) Fz(36px) Mb(-4px) D(ib)')
print('Latest stock price: ' + price.text.strip())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;One last thing!&lt;/strong&gt;&lt;br&gt;
Put the last piece of code into a &lt;code&gt;try:&lt;/code&gt; statement and return an error if the user entered an invalid ticker:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
import sys
import requests
from bs4 import BeautifulSoup

if len(sys.argv) &amp;gt; 2:
    print('You have specified too many tickers')
    sys.exit()

if len(sys.argv) &amp;lt; 2:
    print('No ticker provided')
    sys.exit()

ticker = sys.argv[1]

url = 'https://finance.yahoo.com/quote/' + ticker + '?p=' + ticker + '&amp;amp;.tsrc=fin-srch'
response = requests.get(url)
try:
    soup = BeautifulSoup(response.text, 'html.parser')
    price = soup.find('body').find(class_='Trsdu(0.3s) Fw(b) Fz(36px) Mb(-4px) D(ib)')
    print('Latest stock price: ' + price.text.strip())
except:
    print('Invalid ticker')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;I have put the link to the full code as one of my free gumroad products &lt;a href="https://mattnikonorov.gumroad.com/l/TFbWS"&gt;here&lt;/a&gt;. I frequently post cool projects and developer resources there, a &lt;a href="https://app.gumroad.com/mattnikonorov"&gt;follow&lt;/a&gt; would be much appreciated ;)&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#time-to-test"&gt;
  &lt;/a&gt;
  Time to test!
&lt;/h2&gt;

&lt;p&gt;Now that you have the full code, it's time to run some tests.&lt;br&gt;
&lt;strong&gt;Check Amazon's stock price:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DNuJuRcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn5cecuf6mjakq5yxn79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DNuJuRcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn5cecuf6mjakq5yxn79.png" alt="AMZN stock price" width="880" height="61"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check Apple's stock price:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1fESlOM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzbyyaxpol4unnfrlxxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1fESlOM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzbyyaxpol4unnfrlxxq.png" alt="AAPL stock price" width="853" height="60"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input an invalid ticker:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F27UpNc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1agpi7n8snzxy8lbwy3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F27UpNc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1agpi7n8snzxy8lbwy3.png" alt="Invalid ticker" width="862" height="60"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this article helped you learn about CLI development in Python, as well as gave you a fun and useful Python project idea.&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>üî•Build a Stunning Portfolio website with React JS</title>
      <author>CodeBucks</author>
      <pubDate>Tue, 02 Nov 2021 12:56:16 +0000</pubDate>
      <link>https://dev.to/codebucks/build-a-stunning-portfolio-with-react-js-p1</link>
      <guid>https://dev.to/codebucks/build-a-stunning-portfolio-with-react-js-p1</guid>
      <description>&lt;p&gt;Hi thereüëã,&lt;/p&gt;

&lt;p&gt;I wanted to build a portfolio which is different and unique with design and little bit animations.&lt;br&gt;
Here is the Demo Link:&lt;br&gt;
&lt;a href="https://react-portfolio-sigma.vercel.app/"&gt;https://react-portfolio-sigma.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this project I have used these libraries,&lt;br&gt;
‚ñ∂Ô∏è React JS&lt;br&gt;
‚ñ∂Ô∏è Framer-motion for Cool transitions and animations&lt;br&gt;
‚ñ∂Ô∏è Styled-Components&lt;br&gt;
‚ñ∂Ô∏è Particle JS&lt;br&gt;
‚ñ∂Ô∏è React Router&lt;/p&gt;

&lt;p&gt;First I have created design in Figma, and used some of it's awesome plugins and resources. I have listed all the resources used in this website in the github ReadMe file.&lt;/p&gt;

&lt;p&gt;Here is the tutorial how I have created this website!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jcohAIaSy2M"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Things that I have learned building this project,&lt;br&gt;
‚ñ∂Ô∏è Complex Styling with Styled-components&lt;br&gt;
‚ñ∂Ô∏è How to create Page Transition effects using Framer-motion&lt;br&gt;
‚ñ∂Ô∏è How we can leverage advantages of component structure&lt;br&gt;
‚ñ∂Ô∏è How to use ParticleJS in React JS for awesome background effects&lt;br&gt;
‚ñ∂Ô∏è Uses of Lazy and suspence in reactJS to make components load faster&lt;br&gt;
‚ñ∂Ô∏è Many awesome pure CSS animations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can use this portfolio and if you want to use it else where small credit would be appreciated (not compulsory), just check license of all images and other assets before using it commercially.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I will try to improve it's speed and performance.&lt;br&gt;
Feel free to try different designs and animations with it and you can also tag me or share your link in the comments.&lt;/p&gt;

&lt;p&gt;Any suggestions are welcomed!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#share-your-portfolio-in-the-comments-so-that-all-the-other-peoplebeginners-can-get-the-different-ideas-as-well-as-inspiration"&gt;
  &lt;/a&gt;
  Share your portfolio in the comments, So that all the other people/beginners can get the different ideas as well as inspiration.
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks For ReadingüòÑ
&lt;/h3&gt;

&lt;p&gt;Feel free to visit my youtube channel: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/channel/UCeYt6blRBKuNrEg_-282fSA"&gt;@CodeBucks&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#codebucks"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.instagram.com/code.bucks/"&gt;@code.bucks&lt;/a&gt; üòâ
&lt;/h4&gt;

</description>
      <category>react</category>
      <category>portfolio</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to find perfect Limo service in Connecticut</title>
      <author>Singin SEO</author>
      <pubDate>Tue, 02 Nov 2021 12:45:49 +0000</pubDate>
      <link>https://dev.to/seosingin/how-to-find-perfect-limo-service-in-connecticut-l90</link>
      <guid>https://dev.to/seosingin/how-to-find-perfect-limo-service-in-connecticut-l90</guid>
      <description>&lt;p&gt;How to find perfect Limo service in Connecticut&lt;br&gt;
So you have arranged your ideal occasion. Everything is all together and prepared. Yet, transportation is the main thing that you have not organized. Assuming you need to give your visitors or friends and family a lavish and most agreeable ride, a limo is the best Limo Service CT  you can consider. &lt;br&gt;
So to ensure that you get the best assistance, enquire about the limo administration you will recruit by actually taking a look at a couple of things about the organization. Like what sort of administration they will give, the expense of leasing a limo, the model of the limo, leasing techniques, check in case it is a time-based compensation or per mile. &lt;br&gt;
Indeed, even envisioning how you would feel if you employ Limo Service CT in Connecticut and when it shows up and you view it as an old and obsolete model, it feels horrendous. You may be exceptionally baffled and you can even lose interest in your extremely extraordinary day. Each you had always wanted to go in an extravagant vehicle will be broken if you don't ask about your limo administration prior to settling your request. This is the reason considering decent limo rental help is vital for you.&lt;br&gt;
They realize what is best for their clients. Like in case you are wild parties and require limo administration, they will give you limo party transport in Connecticut. Some limo specialist co-ops might show you, various models of the limo, to browse all around kept up with and great condition vehicles that suit your requirements best.&lt;br&gt;
Ride in your fantasy vehicle and partake in every single second of the most extravagant and agreeable vehicle. Nothing is just about as exceptional as going in class. Regardless size of limo you require or which occasion you will join in, a decent and solid organization will clearly be fit for furnishing you with the best help you want. Google us for the best limo services The main thing you wanted to do is to settle on a decision for them and let them in on your prerequisites, date of article Submission, scene, and time.&lt;br&gt;
Ansonia&lt;br&gt;
CT Limo Service  Bethany&lt;br&gt;
CT Limo Service Bethel&lt;br&gt;
CT Limo Service Bridgeport&lt;br&gt;
CT Limo Service Danbury&lt;br&gt;
CT Limo Service Darien&lt;br&gt;
CT Limo Service Fairfield&lt;br&gt;
CT Limo Service Greenwich&lt;br&gt;
CT Limo Service Milford&lt;br&gt;
CT Limo Service Monroe&lt;br&gt;
CT Limo Service Newtown&lt;br&gt;
CT Limo Service North&lt;br&gt;
Haven CT Limo Norwalk&lt;br&gt;
CT Limo Service Orange&lt;br&gt;
CT Limo Service Oxford&lt;br&gt;
CT Limo Service Redding&lt;br&gt;
CT Limo Service Ridgefield&lt;br&gt;
CT Limo Service Shelton&lt;br&gt;
CT Limo Service Southbury&lt;br&gt;
CT Limo Service Stamford&lt;br&gt;
CT Limo Service Stratford&lt;br&gt;
CT Limo Service Trumbull&lt;br&gt;
CT Limo Service  Waterbury&lt;br&gt;
CT Limo Service Weston&lt;br&gt;
CT Limo Service Westport&lt;br&gt;
CT Limo Service Wilton&lt;br&gt;
CT Limo Service New&lt;br&gt;
Canaan CT Limo Service Stratford CT Limo Service&lt;br&gt;
 Find&lt;br&gt;
us on Google&lt;br&gt;
&lt;a href="https://www.google.com/maps/place/Pride+Connecticut+Limo+-+Limo+Service+CT,+Car+Service+CT,+Limo+Service+in+Fairfield+County,+Connecticut/@41.3264698,-73.677029,10z/data=!3m1!4b1!4m5!3m4!1s0x0:0xfef34fcfdf03baf8!8m2!3d41.3268096!4d-73.3968448"&gt;https://www.google.com/maps/place/Pride+Connecticut+Limo+-+Limo+Service+CT,+Car+Service+CT,+Limo+Service+in+Fairfield+County,+Connecticut/@41.3264698,-73.677029,10z/data=!3m1!4b1!4m5!3m4!1s0x0:0xfef34fcfdf03baf8!8m2!3d41.3268096!4d-73.3968448&lt;/a&gt;&lt;br&gt;
Contact Us&lt;br&gt;
76 Bank St, New Canaan, CT&lt;br&gt;
06840, USA | 146 Joffre Ave Stamford, CT 06905 US&lt;br&gt;
&lt;a href="https://prideconnecticutlimo.com/"&gt;https://prideconnecticutlimo.com/&lt;/a&gt;&lt;br&gt;
Phone: 1-800-670-6729,&lt;br&gt;
1-203-612-6729&lt;br&gt;
Face book:  &lt;a href="https://www.facebook.com/PrideConnecticutLimoLlc"&gt;https://www.facebook.com/PrideConnecticutLimoLlc&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#limoservicect-carservicect-connecticutlimoservice"&gt;
  &lt;/a&gt;
  Limoservicect  #carservicect #Connecticutlimoservice
&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>Overview of AWS : IOT , End User Computing ,
Front-End Web &amp; Mobile ,
Game Tech Services| AWS WhitePaper Summary</title>
      <author>‚Ä™Karim Negm‚Ä¨‚Äè</author>
      <pubDate>Tue, 02 Nov 2021 12:44:44 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/overview-of-aws-iot-end-user-computing-front-end-web-mobile-game-tech-services-aws-whitepaper-summary-4deo</link>
      <guid>https://dev.to/awsmenacommunity/overview-of-aws-iot-end-user-computing-front-end-web-mobile-game-tech-services-aws-whitepaper-summary-4deo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#internet-of-things-iot"&gt;
  &lt;/a&gt;
  Internet of Things (IoT)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bpmQcjnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jstbfgc1hee9yekjocpu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bpmQcjnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jstbfgc1hee9yekjocpu.png" alt="Image description" width="224" height="224"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT 1-Click&lt;/strong&gt; is a service that enables simple devices to trigger AWS Lambda functions that can execute an action. AWS IoT 1-Click supported devices enable you to easily perform actions such as notifying technical support, tracking assets, and replenishing goods or services. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Analytics&lt;/strong&gt; is a fully-managed service that makes it easy to run and operationalize sophisticated analytics on massive volumes of IoT data without having to worry about the cost and complexity typically required to build an IoT analytics platform.&lt;br&gt;
IoT data is highly unstructured which makes it difficult to analyze with traditional analytics and business intelligence tools that are designed to process structured data. IoT data comes from devices that often record fairly noisy processes (such as temperature, motion, or sound). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The AWS IoT Button&lt;/strong&gt; is a programmable button based on the Amazon Dash Button hardware. This simple Wi-Fi device is easy to conÔ¨Ågure, and it‚Äôs designed for developers to get started with AWS IoT Core, AWS Lambda, Amazon DynamoDB, Amazon SNS, and many other Amazon Web Services without writing device-speciÔ¨Åc code.&lt;br&gt;
You can code the button's logic in the cloud to conÔ¨Ågure button clicks to count or track items, call or alert someone, start or stop something, order services, or even provide feedback. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Core&lt;/strong&gt; is a managed cloud service that lets connected devices easily and securely interact with cloud applications and other devices. AWS IoT Core can support billions of devices and trillions of messages and can process and route those messages to AWS endpoints and to other devices reliably and securely. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Device Defender&lt;/strong&gt; is a fully managed service that helps you secure your fleet of IoT devices. AWS IoT Device Defender continuously audits your IoT configurations to make sure that they aren‚Äôt deviating from security best practices. &lt;br&gt;
AWS IoT Device Defender also lets you continuously monitor security metrics from devices and AWS IoT Core for deviations from what you have defined as appropriate behavior for each device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Device Management&lt;/strong&gt; makes it easy to securely onboard, organize, monitor, and remotely manage IoT devices at scale. With AWS IoT Device Management, you can register your connected devices individually or in bulk, and easily manage permissions so that devices remain secure. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Events&lt;/strong&gt; is a fully managed IoT service that makes it easy to detect and respond to events from IoT sensors and applications. Events are patterns of data identifying more complicated circumstances than expected, such as changes in equipment when a belt is stuck or connected motion detectors using movement signals to activate lights and security cameras.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Greengrass&lt;/strong&gt; seamlessly extends AWS to devices so they can act locally on the data they generate, while still using the cloud for management, analytics, and durable storage. With AWS IoT Greengrass, connected devices can run AWS Lambda functions, execute predictions based on machine learning models, keep device data in sync, and communicate with other devices securely ‚Äì even when not connected to the Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT SiteWise&lt;/strong&gt; is a managed service that makes it easy to collect, store, organize and monitor data from industrial equipment at scale to help you make better, data-driven decisions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS IoT Things Graph&lt;/strong&gt; is a service that makes it easy to visually connect different devices and web services to build IoT applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The AWS Partner Device Catalog&lt;/strong&gt; helps you find devices and hardware to help you explore, build, and go to market with your IoT solutions. Search for and find hardware that works with AWS, including development kits and embedded systems to build new devices, as well as off-the-shelf-devices such as gateways, edge servers, sensors, and cameras for immediate IoT project integration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FreeRTOS&lt;/strong&gt; is an operating system for microcontrollers that makes small, low-power edge devices easy to program, deploy, secure, connect, and manage. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#end-user-computing"&gt;
  &lt;/a&gt;
  End User Computing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P872uxdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpvql2oxgc9qp6xjecqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P872uxdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpvql2oxgc9qp6xjecqm.png" alt="Image description" width="638" height="359"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon AppStream 2.0&lt;/strong&gt; is a fully managed application streaming service. You centrally manage your desktop applications on AppStream 2.0 and securely deliver them to any computer. You can easily scale to any number of users across the globe without acquiring, provisioning, and operating hardware or infrastructure. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon WorkSpaces&lt;/strong&gt; is a fully managed, secure cloud desktop service. You can use WorkSpaces to provision either Windows or Linux desktops in just a few minutes and quickly scale to provide thousands of desktops to workers across the globe&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon WorkLink&lt;/strong&gt; is a fully managed service that lets you provide your employees with secure, easy access to your internal corporate websites and web apps using their mobile phones. &lt;br&gt;
With Amazon WorkLink, employees can access internal web content as easily as they access any public website, without the hassle of connecting to their corporate network. When a user accesses an internal website, the page is first rendered in a browser running in a secure container in AWS.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#frontend-web-amp-mobile-services"&gt;
  &lt;/a&gt;
  Front-End Web &amp;amp; Mobile Services
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Amazon Location Service&lt;/strong&gt; makes it easy for developers to add location functionality to applications without compromising data security and user privacy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Pinpoint&lt;/strong&gt; makes it easy to send targeted messages to your customers through multiple engagement channels. Examples of targeted campaigns are promotional alerts and customer retention campaigns, and transactional messages are messages such as order confirmations and password reset messages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Amplify&lt;/strong&gt; makes it easy to create, configure, and implement scalable mobile applications powered by AWS. Amplify seamlessly provisions and manages your mobile backend and provides a simple framework to easily integrate your backend with your iOS, Android, Web, and React Native frontends. Amplify also automates the application release process of both your frontend and backend allowing you to deliver features faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Device Farm&lt;/strong&gt; is an app testing service that lets you test and interact with your Android, iOS, and web apps on many devices at once, or reproduce issues on a device in real time. View video, screenshots, logs, and performance data to pinpoint and fix issues before shipping your app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS AppSync&lt;/strong&gt; is a serverless back-end for mobile, web, and enterprise applications.&lt;br&gt;
AWS AppSync makes it easy to build data driven mobile and web applications by handling securely all the application data management tasks like online and offline data access, data synchronization, and data manipulation across multiple data sources. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#game-tech"&gt;
  &lt;/a&gt;
  Game Tech
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--22_2w3W---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j65o9pfnkw0bizvyy8j0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--22_2w3W---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j65o9pfnkw0bizvyy8j0.png" alt="Image description" width="360" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon GameLift&lt;/strong&gt; is a managed service for deploying, operating and scaling dedicated game servers for session-based multiplayer games. Amazon GameLift makes it easy to manage server infrastructure, scale capacity to lower latency and cost, match players into available game sessions, and defend from distributed denial-of-service (DDoS) attacks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Lumberyard&lt;/strong&gt; is a free, cross-platform, 3D game engine for you to create the highest-quality games, connect your games to the vast compute and storage of the AWS Cloud, and engage fans on Twitch. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>mobile</category>
      <category>aws</category>
      <category>iot</category>
    </item>
    <item>
      <title>Day 25 of 100 Days of Code &amp; Scrum: Physical Therapy and Company Website Planning</title>
      <author>Rammina</author>
      <pubDate>Tue, 02 Nov 2021 12:41:36 +0000</pubDate>
      <link>https://dev.to/rammina/day-25-of-100-days-of-code-scrum-physical-therapy-and-company-website-planning-2m2j</link>
      <guid>https://dev.to/rammina/day-25-of-100-days-of-code-scrum-physical-therapy-and-company-website-planning-2m2j</guid>
      <description>&lt;p&gt;Greetings!&lt;/p&gt;

&lt;p&gt;Today, I went out for my Physical Therapy session so I couldn't spend much time coding. However, I got 3 hours in, which I'm pretty content with for a day with impediments. I also started planning for the requirements and features of my company's website, so I wrote some user stories along with another developer today.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wge-PcO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2et8cpgcygm0kmzbwzy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wge-PcO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2et8cpgcygm0kmzbwzy.jpg" alt="Meeting" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Photo by &lt;a href="https://unsplash.com/@homajob?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Scott Graham&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/web-crawlers?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
  &lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned about two forms of rendering in Next.js. Also, I read about &lt;code&gt;getStaticProps&lt;/code&gt;, &lt;code&gt;getStaticPaths&lt;/code&gt;, and &lt;code&gt;getServerSideProps&lt;/code&gt;. I kept on pushing through Scrum and XP from the Trenches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Web crawlers&lt;/strong&gt; are used by search engines to navigate a website to discover other websites and its pages.&lt;/li&gt;
&lt;li&gt;Here is how the Googlebot indexes webpages:

&lt;ul&gt;
&lt;li&gt;find URLs&lt;/li&gt;
&lt;li&gt;add the URLs to the Crawl Queue&lt;/li&gt;
&lt;li&gt;make an HTTP request&lt;/li&gt;
&lt;li&gt;Render Queue&lt;/li&gt;
&lt;li&gt;if all criteria are met, the page may be indexed and shown in search results.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;There are 4 rendering strategies in Next.js:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Static Generation&lt;/strong&gt; - the page HTML is generated during &lt;em&gt;build time&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server-side Rendering&lt;/strong&gt; - the page HTML is generated during &lt;em&gt;each request&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Incremental Static Generation&lt;/strong&gt; - static generation on a page-by-page basis.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Client-side Rendering&lt;/strong&gt; - websites are rendered entirely using JavaScript.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I learned more about crawling and indexing, including status codes, robots.txt, XML sitemaps, special tags, and canonical tags.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;wrote user stories for my company website.&lt;/li&gt;
&lt;li&gt;I continued to read &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;part-time team members in Scrum are rarely a good idea.&lt;/li&gt;
&lt;li&gt;rearranging teams between sprints are best done at the beginning and only for long-term changes afterwards.&lt;/li&gt;
&lt;li&gt;cross-component teams tend to be better most of the time than component-specialized teams.&lt;/li&gt;
&lt;li&gt;synchronizing the sprints of multiple teams is better than overlapping.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I really had a great time today, even if the day felt really short!&lt;/p&gt;

&lt;p&gt;I hope everyone's doing well!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to build a chat into a React app with TalkJS</title>
      <author>Aswin Rajeev</author>
      <pubDate>Tue, 02 Nov 2021 12:40:34 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-build-a-chat-into-a-react-app-with-talkjs-4hcd</link>
      <guid>https://dev.to/talkjs/how-to-build-a-chat-into-a-react-app-with-talkjs-4hcd</guid>
      <description>&lt;p&gt;In today‚Äôs tutorial, we will add a group chat for students to an existing React application using the &lt;a href="https://talkjs.com/"&gt;TalkJS Chat API&lt;/a&gt;. As a pre-requisite, you will need to sign up with TalkJS and get your &lt;code&gt;APP_ID&lt;/code&gt; from the Dashboard which will be used to identify your account. For the sake of this article, we have created a fictitious application with React that will be used by students from a specific university to view live lectures. The live lectures will be supplemented with a group chat feature that lets the students ask questions to the lecturer. The source code for the entire project can be downloaded from &lt;a href="https://github.com/aswinrajeevofficial/TalkJS-React"&gt;GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXfXjknr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2h30axqh1nmgxy7198o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXfXjknr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2h30axqh1nmgxy7198o.png" alt="App Home Screen" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-overview"&gt;
  &lt;/a&gt;
  Application Overview
&lt;/h2&gt;

&lt;p&gt;This fictitious application is run by John Doe University on their intranet to provide live lectures to its students. Since it is on their intranet, students are already expected to be authenticated with the university. Once they land on the main page, they are expected to enter their student ID, name, and email address, which will then take them to the live lecture. For the sake of simplicity, the lecture we have used is a video from YouTube and all students will be redirected to the same lecture. The article will focus more on the integration of the group chat to an existing React application. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-talkjs-to-a-react-application"&gt;
  &lt;/a&gt;
  Adding TalkJS to a React application
&lt;/h2&gt;

&lt;p&gt;To add TalkJS to your existing React application, use the following command:&lt;br&gt;
&lt;code&gt;npm install talkjs ‚Äìsave&lt;/code&gt;&lt;br&gt;
If you are using the yarn package manager, you should use the command &lt;code&gt;yarn add talkjs&lt;/code&gt;.&lt;br&gt;
To use it in the component of your choice, import TalkJS using the following statement.&lt;br&gt;
&lt;code&gt;import Talk from ‚Äòtalkjs‚Äô;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#component-walkthrough"&gt;
  &lt;/a&gt;
  Component Walkthrough
&lt;/h2&gt;

&lt;p&gt;The application has two main components. One is the &lt;code&gt;Home&lt;/code&gt; component and the other is the &lt;code&gt;VideoLecture&lt;/code&gt; component. The Home component contains the form that takes the information from the student and then routes them to the VideoLecture component. The &lt;code&gt;handleSubmit()&lt;/code&gt; method is of interest here as it handles storage of the student details as well as the redirection.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/viewLiveLecture&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React‚Äôs thin &lt;code&gt;history&lt;/code&gt; library is used here to perform the redirection. All the details for the routes are mentioned in the &lt;code&gt;Routes&lt;/code&gt; component. The details entered by the user are stored in the local storage for ease of access across all components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Routes&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/viewLiveLecture&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;VideoLecture&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Router&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The majority of the logic for TalkJS is housed inside the VideoLecture component. The entire code is present inside the constructor. We will take a look at it section by section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#retrieving-student-details"&gt;
  &lt;/a&gt;
  Retrieving student details
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emailId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create three variables to hold the user id, user name, and email address. This is accessed from the local storage.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-the-users-and-the-talkjs-session"&gt;
  &lt;/a&gt;
  Creating the Users and the TalkJS Session
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;   &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emailId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;photoUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`https://randomuser.me/api/portraits/men/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;default&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Prof. George Larry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;george@larry.net&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;photoUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/portraits/men/83.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;default&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;appId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_APP_ID_HERE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;me&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the &lt;code&gt;then()&lt;/code&gt; function on the Talk object which can be chained multiple times and returns a Promise. The first thing to do is to set the users in the conversation. Note that the other user here is always the professor who is hosting the lecture and the current user will be the student who enters the live lecture room.&lt;br&gt;
To identify the student, we set their id, username, and email address from what they enter on the Home page. This is also used to retrieve their profile picture. The last step here is to create a session using the &lt;code&gt;APP_ID&lt;/code&gt;, from the TalkJS dashboard, and the current user.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-conversation-object"&gt;
  &lt;/a&gt;
  Creating the Conversation object
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;conversation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOrCreateConversation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;999&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttributes&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Robotics: 101&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setParticipant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setParticipant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;other&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chatbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createChatbox&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chatbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chatbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Once the session and users are created, we will create the conversation object. We are assigning a static id for the conversation here so that all students log in to the same room. In a real use case, the conversation id can be the lecture‚Äôs unique key which will then be mapped to all the students taking that module.&lt;br&gt;
To make the subject appear at the top, we have set the attribute ‚Äòsubject‚Äô on the conversation object. Again, in a real scenario, this can be retrieved from the database or service. We then set the participants of the conversation and create a chatbox. This is then mounted inside the component shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
  &lt;span class="na"&gt;className=&lt;/span&gt;&lt;span class="s"&gt;"talk-js-chatbox flex-child"&lt;/span&gt;
  &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;{(c)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; (this.container = c)}
&amp;gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have themed the chat a little so that it stays consistent with the university website and looks more like a group chat in a live lecture. Since this article is more about adding group student chat into an existing React application, we will not discuss about theming here. You can check out these articles for reference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#talkjs-ui-customization-tutorials"&gt;
  &lt;/a&gt;
  TalkJS UI Customization Tutorials
&lt;/h3&gt;

&lt;p&gt;Here are some additional tutorials on how you can customize the TalkJS UI using our powerful Theme Editor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/talkjs/how-to-build-an-airbnb-chat-lookalike-with-talkjs-2di8"&gt;Airbnb lookalike using TalkJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/talkjs/how-to-create-direct-messages-like-on-twitter-with-the-talkjs-chat-api-3jo6"&gt;Twitter DM lookalike using TalkJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/talkjs/how-to-build-a-linkedin-lookalike-chat-using-talkjs-chat-api-1o0k"&gt;LinkedIn Chat lookalike using TalkJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eo2qxifR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx8x0t50f38acend149h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eo2qxifR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx8x0t50f38acend149h.png" alt="Live Lecture with Student Group Chat" width="880" height="683"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With that, we have successfully added TalkJS to our existing React application. With very minimal code changes, we were able to add a fully working group chat to our fictitious university‚Äôs live lecture. Group Chats in TalkJS supports up to 20 users in the Basic plan and up to 40 users in the Growth plan. If your use case requires more than 40 users, you can also go for the Enterprise plan. You can access the complete source code on &lt;a href="https://github.com/aswinrajeevofficial/TalkJS-React"&gt;GitHub&lt;/a&gt;, read more about &lt;a href="https://talkjs.com/docs/Features/Group_Chats/"&gt;Group Chats&lt;/a&gt;, and also about the versatile &lt;a href="https://talkjs.com/docs/Features/Themes/The_Theme_Editor/"&gt;Theme Editor&lt;/a&gt; on TalkJS.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>api</category>
    </item>
    <item>
      <title>A fun detour is also progress in coding</title>
      <author>Jason Leow ~ golifelog.com</author>
      <pubDate>Tue, 02 Nov 2021 12:39:03 +0000</pubDate>
      <link>https://dev.to/jasonleowsg/a-fun-detour-is-also-progress-in-coding-1mk0</link>
      <guid>https://dev.to/jasonleowsg/a-fun-detour-is-also-progress-in-coding-1mk0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#sometimes-when-stuck-debugging-a-bug-the-best-thing-to-do-is-to-take-a-detour-away-from-the-bug"&gt;
  &lt;/a&gt;
  &lt;em&gt;Sometimes, when stuck debugging a bug, the best thing to do is to take a detour, away from the bug.&lt;/em&gt;
&lt;/h2&gt;




&lt;p&gt;Once after working really hard for past 2-3 weeks learning and head-banging on a Rails API, I decided I needed to switch up and do something fun instead. Sometimes taking detours make all the difference, even though it sounds unproductive and not adding anything to the progress. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#progress-is-not-lines-of-code-written"&gt;
  &lt;/a&gt;
  Progress is not lines of code written
&lt;/h3&gt;

&lt;p&gt;But that‚Äôs the thing. What‚Äôs progress anyway? Measurable progress like lines of code written, revenue made, customers acquired ‚Äì sure, that‚Äôs progress. But it‚Äôs also my job as an entrepreneur and a creative professional (I see myself as one) to stay inspired and motivated, in order to make this journey sustainable. And switching up the tasks like this is all about inspiration and motivation. In the end, if I don‚Äôt persevere in the future, whatever progress I make in numbers in the present will be for naught anyway, isn‚Äôt it?&lt;/p&gt;

&lt;p&gt;Yeah, so this detour is actually still progress. I do see it as much more important work actually. Having fun and staying inspired is the real work, because downstream you get all sorts of goodies from it ‚Äì better work quality, more productivity, fresh and innovative ideas, sustainability, and overall higher quality of life.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-you-know-a-detour-worked"&gt;
  &lt;/a&gt;
  How you know a detour worked
&lt;/h3&gt;

&lt;p&gt;I want to jump out of bed in the mornings, not out of trepidation but excitement. And indeed, after spending time in my coding playground this morning, playing with Vue.js repos in Codepen; browsing cool shit that people make; learning how to make them myself; following my curiosity and playfulness, my fun tank was all topped up. I can feel it right in my heart. It sings. And I sang my way to lunch, spirits glowing, chest forward and head up high. &lt;/p&gt;

&lt;p&gt;What a difference a morning can make. Now that‚Äôs real progress.&lt;/p&gt;




&lt;p&gt;Follow my daily writings on &lt;a href="https://golifelog.com/goals/30"&gt;Lifelog&lt;/a&gt;, where I write about learning to code, goals, productivity, indie hacking and tech for good.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>coding</category>
      <category>decodingcoding</category>
    </item>
    <item>
      <title>Hello World</title>
      <author>potyoma</author>
      <pubDate>Tue, 02 Nov 2021 12:32:29 +0000</pubDate>
      <link>https://dev.to/potyoma/hello-world-56dn</link>
      <guid>https://dev.to/potyoma/hello-world-56dn</guid>
      <description>&lt;p&gt;Hi, DEV! I'm eager to start a blog. It is not only about development for me. English is not my native language and I want to practice it actively. By that I mean writing and speaking. So I've decided to start a blog in English. I plan to write at least 1 post a week. My English is far from perfect and I would LOVE it if you'd left comments and tips on my writing skills.&lt;br&gt;
As I've said earlier, I want to practice speaking, too. In the future I'm thinking about starting a video blog (mostly about development and related stuff). Firstly, I want to find out if I have what it takes by writing. So, please, be welcome to leave a comment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I'm a Fullstack Developer. At my job I mostly use C# and JS as primary languages. Yet it doesn't feed my curiosity enough so I learn a lot of stuff on my own. Go, Rust, Elixir, graph databases, linear algebra... You name it. &lt;br&gt;
That is the second reason I've decided to write this post. It is easier to learn something by explaining it to someone else. Those words are not mine, but I strongly believe in them. I want to share my knowledge to grow it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-plan"&gt;
  &lt;/a&gt;
  The plan
&lt;/h2&gt;

&lt;p&gt;Firstly, I want to write a series of posts where we (me and you, if you'd like to) will implement full-stack challenges in devchallenges.io. I would like to start with the second one (the first was finished a long time ago) and go further.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What is devchallenges.io? Web Development Resources and Community that help you to become a Web Developer by working with Real-life projects and practices. Founded, designed and developed by @thunghiemdinh. You can go and check the site if you want to learn more.&lt;/li&gt;
&lt;li&gt;Why devchallenges.io? The reason is simple. I'm no designer and I have a pretty bad imagination when it comes to creating something new from the ground. The service has great designs for projects and good user stories to get started and then add something new, something "yours" to implementation.&lt;/li&gt;
&lt;li&gt;What will I use? I plan to code backend in &lt;strong&gt;Go&lt;/strong&gt; (I'm thinking of Fiber framework). I will use &lt;strong&gt;PostgreSQL&lt;/strong&gt; to store data and &lt;strong&gt;React.js&lt;/strong&gt; for the user interface as I'm already familiar with both of them. &lt;/li&gt;
&lt;li&gt;Why don't I try something new? SQL databases are pretty similar to each other and, of course, I will use NoSQL one when I'll see a need for this. And I just really like using React for my frontend code. Maybe I'll try writing some challenges using &lt;strong&gt;ReScript&lt;/strong&gt; later.&lt;/li&gt;
&lt;li&gt;Whatever question you have I'll answer. Leave it in the comments section, please.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it for now. I would like you to share your opinions in the comments. Thank you.&lt;/p&gt;

&lt;p&gt;P.S.: I'll add everything to my GitHub account. There you can find some projects I did earlier. Please, don't judge, I was a newbie back then üòÖ&lt;br&gt;
P.P.S.: Image's from &lt;a href="https://www.pexels.com/tr-tr/fotograf/adam-insanlar-dizustu-bilgisayar-not-defteri-9553905/"&gt;Pexels&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>go</category>
      <category>csharp</category>
    </item>
    <item>
      <title>Do you need programming knowledge to start bitcoin mining?</title>
      <author>Mallaya</author>
      <pubDate>Tue, 02 Nov 2021 12:25:53 +0000</pubDate>
      <link>https://dev.to/mallaya_mathur/do-you-need-programming-knowledge-to-start-bitcoin-mining-583c</link>
      <guid>https://dev.to/mallaya_mathur/do-you-need-programming-knowledge-to-start-bitcoin-mining-583c</guid>
      <description>&lt;p&gt;Considering the profit margins, Many freelancers and business owners have started bitcoin mining over the last few years. Bitcoin mining has increased 428% since September 2020. This shows how it has attracted different people's interest in bitcoin mining.&lt;/p&gt;

&lt;p&gt;Do you need programming language knowledge for bitcoin mining?&lt;/p&gt;

&lt;p&gt;The simple answer is "No". You do not need any kind of expertise in the field of computer programming. But you need technical knowledge to get started with bitcoin mining. Many of my friends have left their jobs just to make a career in bitcoin mining.&lt;/p&gt;

&lt;p&gt;I talked to them about the same. They insisted to gain detailed knowledge about RAM, CPU, and the processor of a computer system. Along with that, electricity is also a requirement. You need 24*7 high electronics.&lt;/p&gt;

</description>
      <category>programming</category>
    </item>
    <item>
      <title>Full-stack monitoring in one solution or is it better to split out the functions between several applications?</title>
      <author>Sonia Belokur</author>
      <pubDate>Tue, 02 Nov 2021 12:25:09 +0000</pubDate>
      <link>https://dev.to/soniabelokur/full-stack-monitoring-in-one-solution-or-is-it-better-to-split-out-the-functions-between-several-applications-13h2</link>
      <guid>https://dev.to/soniabelokur/full-stack-monitoring-in-one-solution-or-is-it-better-to-split-out-the-functions-between-several-applications-13h2</guid>
      <description>&lt;p&gt;Firstly, this question had my attention, now it has my curiosity :) Since I dig into the full-stack monitoring niche, I would appreciate your opinion about the question above.&lt;/p&gt;

&lt;p&gt;On the one hand, it's always convenient to have a single monitoring solution for several purposes, e.g. IT infrastructure monitoring, log management, synthetic monitoring, etc. It doesn't matter if your company is a startup or enterprise, the benefits of an all-in-one solution are obvious:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One place for monitoring, logging, user experience, etc., consequently, one console instead of multiple.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Observability. Explore why an application or system behaves in a certain manner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Real-time metrics. Correlate application metrics, transaction metrics, and infrastructure metrics to see what‚Äôs going on in your apps.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logically, such an option helps to save company's budget and manager's &amp;amp; DevOps mental health :)&lt;/p&gt;

&lt;p&gt;But, on the other hand, the vast majority of people I know are sure that the existing B2B solutions are not always capable to face all the processes and produce expected results. I don't know why. Of course, we talk about solutions such as InsightCat, Elastic.co, Splunk, etc. The main argument is that "there is no decent ‚Äúfull stack‚Äù option".&lt;/p&gt;

&lt;p&gt;Perhaps, it depends on the company budget and tech people's preferences. But, from my personal perspective, a single full-stack solution is a good option to think about, especially, if you have multiple clouds, SaaS, and a few hundred apps.&lt;/p&gt;

&lt;p&gt;My company uses InsigthCat &lt;a href="https://insightcat.com/"&gt;https://insightcat.com/&lt;/a&gt; and we like it. So, I'm curious to know which side is preferable in your company and why.&lt;/p&gt;

&lt;p&gt;Do you stick to all-in-one or splitting?&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>monitoring</category>
      <category>ai</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
