<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Ultimate Collection of JavaScript Learning Resources(FREE)</title>
      <author>Sajan</author>
      <pubDate>Thu, 18 Nov 2021 06:47:15 +0000</pubDate>
      <link>https://dev.to/sajanmangattu/ultimate-collection-of-javascript-learning-resourcesfree-9dk</link>
      <guid>https://dev.to/sajanmangattu/ultimate-collection-of-javascript-learning-resourcesfree-9dk</guid>
      <description>&lt;p&gt;What Exactly is JavaScript?&lt;/p&gt;

&lt;p&gt;Javascript is a programming language which is usually used as the core for Web Development and Application Development. It is an Object-Oriented Language and it can be used as part of HTML or as a standalone script for client-side scripting on the Web.&lt;/p&gt;

&lt;p&gt;JavaScript has been standardized so that different browsers can support it fully. This standardization was helped by Google’s V8 JavaScript engine, which was an open-source project that allowed a lot of developers to contribute their time and skills towards making better standards for this language.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cssauthor.com/javascript-learning-resources-free/"&gt;https://cssauthor.com/javascript-learning-resources-free/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>E-Learning Application Development: Industry Outlook, Features &amp; Steps</title>
      <author>iWebServices</author>
      <pubDate>Thu, 18 Nov 2021 06:37:29 +0000</pubDate>
      <link>https://dev.to/iwebservices/e-learning-application-development-industry-outlook-features-steps-55n9</link>
      <guid>https://dev.to/iwebservices/e-learning-application-development-industry-outlook-features-steps-55n9</guid>
      <description>&lt;p&gt;In today’s scenario, the education sector has experienced rapid growth by introducing various E-Learning applications. We can install such learning applications on our mobile phones, laptops, or computers and can learn things according to our choice at any time from any place. They are called online learning applications; however, most of them offer features that work smoothly offline. If you don’t have a proper internet connection in your place, the best part is still you can access the courses by downloading them previously. &lt;/p&gt;

&lt;p&gt;However, online education industries are expecting to reach around $350 Billion in profit by 2025. The education sector has been changing drastically as more resources are getting available on the internet and making it more prosperous. Among these learning resources, e-learning applications come at the top of the list. The overall scenario of the teaching method and the entire education system has been changing forever since the arrival of these learning applications. The E-learning method has already accumulated praise from teachers, students, and their parents worldwide. &lt;a href="https://www.i-webservices.com/blog/mobility/e-learning-application-development-industry-outlook-features-steps/"&gt;Read More...&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to navigate the GitHub web without a mouse</title>
      <author>Michelle Mannering</author>
      <pubDate>Thu, 18 Nov 2021 06:26:57 +0000</pubDate>
      <link>https://dev.to/github/how-to-navigate-the-github-web-without-a-mouse-3enf</link>
      <guid>https://dev.to/github/how-to-navigate-the-github-web-without-a-mouse-3enf</guid>
      <description>&lt;p&gt;Developers are always thinking about productivity. Faster ways to do things. Shortcuts to take. Corners to cut.&lt;/p&gt;

&lt;p&gt;Earlier in the year, I wrote a post on some of my favourite keyboard shortcuts. Now I'm here with the ultimate keyboard shortcut.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mishmanners" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Rph_F4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ak56TdXS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/397557/4eb4ece3-2832-407c-b933-f1b4b58829e6.jpg" alt="mishmanners"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mishmanners/keyboard-shortcuts-for-github-your-key-to-increased-productivity-bm0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Keyboard shortcuts for GitHub • your key to increased productivity&lt;/h2&gt;
      &lt;h3&gt;Michelle Mannering ・ Mar 12 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#navigating-without-a-mouse"&gt;
  &lt;/a&gt;
  Navigating without a mouse
&lt;/h2&gt;

&lt;p&gt;One of the reasons we love the command line is it's quick. There's no need to grab your mouse and navigate the screen. Everything is done on your keyboard.&lt;/p&gt;

&lt;p&gt;Now we've created a way for you to navigate the GitHub web without using a mouse.&lt;/p&gt;

&lt;p&gt;It's called the &lt;strong&gt;Command Palette&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When you're on &lt;a href="https://github.com"&gt;GitHub.com&lt;/a&gt;, press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS), and the new command palette will appear.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CYUw_2VU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3acptsic2e9g2uun9cfm.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CYUw_2VU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3acptsic2e9g2uun9cfm.JPG" alt="Command palette" width="777" height="671"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This window will appear on any &lt;a href="https://github.com"&gt;GitHub.com&lt;/a&gt; page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-can-do-with-the-command-palette"&gt;
  &lt;/a&gt;
  What you can do with the Command Palette
&lt;/h2&gt;

&lt;p&gt;The Command Palette is designed to make it easy for you to navigate GitHub, search, and run commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Search&lt;/strong&gt; by typing the path or string into the Command Palette&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Filter&lt;/strong&gt; your search terms by using &lt;code&gt;Tab&lt;/code&gt; to cycle through users, org, or repo&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Expand&lt;/strong&gt; the scope or your search by using the &lt;code&gt;Backspace&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; keys&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Clear&lt;/strong&gt; your search by using &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Backspace&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;Backspace&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;Search &lt;strong&gt;Issues/PRs/Discussions/Projects&lt;/strong&gt; by using &lt;code&gt;#&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;Projects&lt;/strong&gt; by using &lt;code&gt;!&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;users/orgs/repos&lt;/strong&gt; by using &lt;code&gt;@&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;files&lt;/strong&gt; using &lt;code&gt;/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Jump&lt;/strong&gt; to your search result by hitting &lt;code&gt;ENTER&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open your search in a &lt;strong&gt;new browser tab&lt;/strong&gt; by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Enter&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;Enter&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Run commands&lt;/strong&gt; using &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Switch to command mode&lt;/strong&gt; by using &lt;code&gt;&amp;gt;&lt;/code&gt; on the keyboard if you already have the palette open&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Close&lt;/strong&gt; the command palette from search and navigation mode by using &lt;code&gt;Esc&lt;/code&gt; or &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Close&lt;/strong&gt; the command palette from command mode by using &lt;code&gt;Esc&lt;/code&gt; or &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (for Windows/Linux), or &lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;K&lt;/code&gt; (macOS)&lt;/li&gt;
&lt;li&gt;Get &lt;strong&gt;Help&lt;/strong&gt; by typing &lt;code&gt;?&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the full list of commands on the &lt;a href="https://docs.github.com/en/get-started/using-github/github-command-palette"&gt;GitHub Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There's also a short video where you can see the command palette in action:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DT5RAoXVXE4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let us know how you'll be using the command palette by leaving a comment below.&lt;/p&gt;

</description>
      <category>github</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Healthcare App Development 2021: Top Trends, Features, and Types</title>
      <author>iWebServices</author>
      <pubDate>Thu, 18 Nov 2021 06:24:24 +0000</pubDate>
      <link>https://dev.to/iwebservices/healthcare-app-development-2021-top-trends-features-and-types-4mj4</link>
      <guid>https://dev.to/iwebservices/healthcare-app-development-2021-top-trends-features-and-types-4mj4</guid>
      <description>&lt;p&gt;Healthcare mobile app development is the process and technique by virtue of which you can build an app (that is compatible both on mobile and computers) with the intention of helping its users track their medical conditions and concerns and make their insurance claims effectively.&lt;/p&gt;

&lt;p&gt;These apps, depending on how they have been developed, can also be used to accomplish specific or broad fitness goals on an individual level and track hospital visits for people who cannot do so on their own. Not only that, but these healthcare apps also include telemedicine, the scheduling of doctor’s appointments, the delivery of medical prescriptions, and updating of medicine prescriptions over time.&lt;/p&gt;

&lt;p&gt;However, these features can vary from healthcare app to healthcare app, depending on what stakeholders have developed the app and for what purpose. The apps might have different industry-grade features and specifications depending on the target audience it is catering to, whether this target audience is young teenagers or old centenarians.&lt;/p&gt;

&lt;p&gt;Nevertheless, these trends, features, and types of healthcare apps that we have highlighted in this blog will give you a much firmer understanding of how these apps can be the future of inclusive healthcare. &lt;a href="https://www.i-webservices.com/blog/mobility/healthcare-app-development-2021-top-trends-features-and-types/"&gt;Read More...&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>SolidJS on Snowpack – Quick Dev Guide</title>
      <author>C.Y. Park</author>
      <pubDate>Thu, 18 Nov 2021 05:45:26 +0000</pubDate>
      <link>https://dev.to/cypark/solidjs-on-snowpack-quick-dev-guide-f86</link>
      <guid>https://dev.to/cypark/solidjs-on-snowpack-quick-dev-guide-f86</guid>
      <description>&lt;p&gt;This is a SolidJS app dev guide using &lt;a href="https://github.com/cy-park/snowpack-solid-template"&gt;Snowpack Solid Template&lt;/a&gt;. The template has been tested on node.js &lt;code&gt;v16.13.0&lt;/code&gt; and npm &lt;code&gt;v8.1.0&lt;/code&gt;. It might or might not work on other node.js and/or npm versions.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;◆ ◆ ◆&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#1-install-template"&gt;
  &lt;/a&gt;
  1. Install Template
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Open terminal and clone the repo.&lt;/span&gt;
git@github.com:cy-park/snowpack-solid-template.git

&lt;span class="c"&gt;# Install dependencies&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;◆ ◆ ◆&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#2-configure-settings"&gt;
  &lt;/a&gt;
  2. Configure Settings
&lt;/h2&gt;

&lt;p&gt;The only required step is Snowpack alias setting. All other steps with ‘optional’ tags are not required unless you make any major template modification (i.e. changing directory structures). &lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#21-aliases"&gt;
  &lt;/a&gt;
  2.1 Aliases
&lt;/h3&gt;

&lt;p&gt;Open 🗎&lt;code&gt;snowpack.config.js&lt;/code&gt; and edit &lt;code&gt;alias&lt;/code&gt; values.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#22-typescript-and-ecmascript-settings-optional"&gt;
  &lt;/a&gt;
  2.2 Typescript and ECMAScript settings (optional)
&lt;/h3&gt;

&lt;p&gt;Check 🗎&lt;code&gt;tsconfig.json&lt;/code&gt; for Typescript configuration. For ECMAScript version setting, check &lt;code&gt;target&lt;/code&gt; value in the file.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#23-set-up-postcss-and-tailwind-optional"&gt;
  &lt;/a&gt;
  2.3 Set up PostCSS and Tailwind (optional)
&lt;/h3&gt;

&lt;p&gt;PostCSS is run by 🗎&lt;code&gt;snowpack.config.js&lt;/code&gt; which refers to 🗎&lt;code&gt;.postcssrc&lt;/code&gt; which refers to 🗎&lt;code&gt;tailwind.config.js&lt;/code&gt;. Follow this order and configure accordingly if you want more sophisticated CSS compile process.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#24-service-worker-for-pwa-settings-optional"&gt;
  &lt;/a&gt;
  2.4 Service Worker for PWA settings (optional)
&lt;/h3&gt;

&lt;p&gt;Check 🗎&lt;code&gt;workbox-config.js&lt;/code&gt; for Workbox settings.&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;◆ ◆ ◆&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#3-scripts"&gt;
  &lt;/a&gt;
  3. Scripts
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#-raw-npm-start-endraw-"&gt;
  &lt;/a&gt;
  📜 &lt;code&gt;npm start&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Starts dev mode at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-npm-run-build-endraw-"&gt;
  &lt;/a&gt;
  📜 &lt;code&gt;npm run build&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Builds a production version in &lt;code&gt;build&lt;/code&gt; directory with service worker.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-npm-run-buildsnowpack-endraw-"&gt;
  &lt;/a&gt;
  📜 &lt;code&gt;npm run build_snowpack&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Builds a production version in &lt;code&gt;build&lt;/code&gt; directory without service worker.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-npm-run-serviceworker-endraw-"&gt;
  &lt;/a&gt;
  📜 &lt;code&gt;npm run service_worker&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Builds service worker.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-npm-run-lint-endraw-"&gt;
  &lt;/a&gt;
  📜 &lt;code&gt;npm run lint&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Check if ts/js/tsx/jsx files are neat.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-npm-run-format-endraw-"&gt;
  &lt;/a&gt;
  📜 &lt;code&gt;npm run format&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Format ts/js/tsx/jsx files based on the settings in 🗎&lt;code&gt;.prettierrc&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;◆ ◆ ◆&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#4-caveat"&gt;
  &lt;/a&gt;
  4. Caveat
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;It is required to use ✔️&lt;code&gt;Snowpack@3.3.2&lt;/code&gt; with ✔️&lt;code&gt;@snowpack/plugin-webpack@3.0.0&lt;/code&gt; to use CSS Modules.&lt;/strong&gt;&lt;/p&gt;


&lt;/blockquote&gt;

&lt;p&gt;As of Nov 17, 2021, Snowpack has a bug on CSS Modules compile process. As a workaround, we use &lt;a href="https://github.com/snowpackjs/snowpack/issues/3243#issuecomment-854472971"&gt;this hotfix&lt;/a&gt;. Once this issue is resolved, 🗎&lt;code&gt;snowpack.config.js&lt;/code&gt; can be replaced with 🗎&lt;code&gt;snowpack.config.future-cssmodules.js&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;For more information about this issue, check these issue tickets: &lt;a href="https://github.com/snowpackjs/snowpack/issues/2998"&gt;Issue 2998&lt;/a&gt;, &lt;a href="https://github.com/snowpackjs/snowpack/issues/3219"&gt;Issue 3219&lt;/a&gt;, &lt;a href="https://github.com/snowpackjs/snowpack/issues/3243"&gt;Issue 3243&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;⋅ ⋅ ⋅&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;&lt;center&gt;🔥 &lt;a href="https://snowpack-solid-template.netlify.app"&gt;Live Demo&lt;/a&gt; 🔥&lt;/center&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>solidjs</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>pwa</category>
    </item>
    <item>
      <title>How to Read Excel File in C#</title>
      <author>Mehr Muhammad Hamza</author>
      <pubDate>Thu, 18 Nov 2021 05:42:18 +0000</pubDate>
      <link>https://dev.to/mhamzap10/c-read-excel-file-4g08</link>
      <guid>https://dev.to/mhamzap10/c-read-excel-file-4g08</guid>
      <description>&lt;p&gt;Reading an Excel file is something which Programmer is going to face in any case in their life. This is the era of data, and People usually store their data in the Excel file due to its user friendly behavior.  Programmer must knows about the reading of Excel files in their respective programming language.&lt;/p&gt;

&lt;p&gt;If you are a .Net Programmer and struggling with the reading excel file, than Don't worry. You are at the right place. I will show you step by step method about how to read an Excel file using C#. &lt;/p&gt;

&lt;p&gt;You might be thinking that, reading Excel file would be the difficult task and might need high level expertise, but that not the case. I will show you that we have to right just 2-3 lines of code for reading the excel files with the help of &lt;a href="https://ironsoftware.com/csharp/excel/"&gt;IronXL&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;We will be covering following topics in this article.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Introduction to IronXL.
a. Creating an Example Project for demonstration&lt;/li&gt;
&lt;li&gt;Add IronXL Nuget Package to to our Project.
a. Install IronXL using Package Manager Console
b. Install IronXL using Manage Package Manager
c. Directly download it and add reference to the project&lt;/li&gt;
&lt;li&gt;Read the Excel file in C#.&lt;/li&gt;
&lt;li&gt;Design the Form&lt;/li&gt;
&lt;li&gt;Code to Read the data from Excel&lt;/li&gt;
&lt;li&gt;Code to Read data from Particular range&lt;/li&gt;
&lt;li&gt;Code to Read XLs and XLSX File&lt;/li&gt;
&lt;li&gt;Code to Read csv file&lt;/li&gt;
&lt;li&gt;Summary&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For complete Tutorial please visit this &lt;a href="https://ironsoftware.com/csharp/excel/tutorials/how-to-read-excel-file-csharp/"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-ironxl"&gt;
  &lt;/a&gt;
  Introduction to IronXL:
&lt;/h2&gt;

&lt;p&gt;IronXL is .Net Library develop and Provided by &lt;a href="https://ironsoftware.com/"&gt;Iron Software&lt;/a&gt;. This Library provides us wonderful functions and APIs by using which we can read, create and Update/ Edit our Excel file and spreadsheet.  IronXL does not require Excel to be installed on your server or Interop. IronXL provides a faster and more intuitive API than Microsoft Office Interop Excel. &lt;/p&gt;

&lt;p&gt;IronXL works on .Net Core 2, Framework 4.5, Azure, Mono and, Mobile and Xamarin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-an-example-project-for-demonstration"&gt;
  &lt;/a&gt;
  Create an Example Project for Demonstration:
&lt;/h2&gt;

&lt;p&gt;I will be using windows Form App as an Example, you can use any such as Asp.Net Web App, .Net core MVC or .Net Core web api as per your choice and requirements. &lt;/p&gt;

&lt;p&gt;For creating new Project; Open Visual Studio, Click on Create new Project =&amp;gt; Select Template ; I am using Windows Form App; you can use any. =&amp;gt; Click on Next Button =&amp;gt; Named your Project; I have named it as "C Sharp Read Excel File". =&amp;gt; Click on Next = &amp;gt; Select your Target Framework, I am selecting .Net core 3.1; you can use any. =&amp;gt; Finally, click on create Project; A project would be created and opened for you as shown below. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jl_Bp3tT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i9wwdhtzcbgqrbeckj6.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jl_Bp3tT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i9wwdhtzcbgqrbeckj6.PNG" alt="Project" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our Next Task is to Install Nuget Package for the IronXL.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#add-ironxl-nuget-package"&gt;
  &lt;/a&gt;
  Add IronXL Nuget Package:
&lt;/h2&gt;

&lt;p&gt;We can add IronXL Package by using three ways, But you have to choose any one, which you fine easy or comfortable.&lt;/p&gt;

&lt;p&gt;Install IronXL using  Package Manager Console:&lt;br&gt;
Open Package Manager console in your Project and use following command. &lt;/p&gt;

&lt;p&gt;Go to Tools =&amp;gt; NuGet Package Manager =&amp;gt; Package Manager Console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ll3fS7ZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thq4l4vs8yia3k9iwtq8.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ll3fS7ZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thq4l4vs8yia3k9iwtq8.PNG" alt="Image description" width="512" height="288"&gt;&lt;/a&gt;&lt;br&gt;
This will open Package Manager console for you. Now; Write following command in the Package Manager console.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PM &amp;gt; Install-Package IronXL.Excel&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rLK-nbNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wetl4luo36zrd6oknn7q.PNG" alt="Image description" width="636" height="222"&gt;
&lt;/h3&gt;
&lt;h3&gt;
  &lt;a href="#install-ironxl-using-nuget-package-manager"&gt;
  &lt;/a&gt;
  Install IronXL using Nuget Package Manager:
&lt;/h3&gt;

&lt;p&gt;This is another way to install Nuget Package Manager, If you have already installed by using previous way, than you don't need to use this way.&lt;/p&gt;

&lt;p&gt;Go to Tools = &amp;gt; NuGet Package Manager =&amp;gt; Manage NuGet Packages for Solution, and click on it. &lt;/p&gt;

&lt;p&gt;This will open Nuget-Solution for you, Click on Browse and Search IronXL.Excel in Search Bar&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLnLklVZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v64fp32p8bsdt8h11ywq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLnLklVZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v64fp32p8bsdt8h11ywq.PNG" alt="Image description" width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on Install Button, It will install IronXL for you. After installing IronXL, Go to your form, and start designing it. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#download-the-ironxl"&gt;
  &lt;/a&gt;
  Download the IronXL:
&lt;/h3&gt;

&lt;p&gt;Another way of using IronXL is to download it directly from this &lt;a href="https://www.nuget.org/packages/IronXL.Excel"&gt;link&lt;/a&gt;. After downloading just add the reference of the file in your project and start using it. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#design-the-form"&gt;
  &lt;/a&gt;
  Design the Form:
&lt;/h2&gt;

&lt;p&gt;Now, we have to design the form as per the requirement. I will use the minimum design for the demonstration. you can use any as per your requirement. &lt;/p&gt;

&lt;p&gt;Go to the ToolBox=&amp;gt; Select Label (for name our example app), select Panel and Data grid view. Put Data grid view inside the panel. Our design will look like as following.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AluNOVao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kted7xiuaxfpkhjy97od.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AluNOVao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kted7xiuaxfpkhjy97od.PNG" alt="Image description" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our form has been designed, Our next task is to actually write the code for read an excel file or excel sheet in c#.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#write-code-to-read-the-excel-file-in-c"&gt;
  &lt;/a&gt;
  Write code to Read the Excel file in C#:
&lt;/h2&gt;

&lt;p&gt;We want to our app to read the given excel file on button click. so; for that double click on Read Excel file button, following code will appear:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private void button1_Click(object sender, EventArgs e)
        {
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Add following Namespace in this file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;
using System.Windows.Forms;
using IronXL;
using System.Data;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;using IronXL namespace is necessary for using the functionalities of IronXL. However; you can use other namespace as per the requirements of your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WorkBook workbook = WorkBook.Load("Weather.xlsx");
            WorkSheet sheet = workbook.GetWorkSheet("Sheet1");
            DataTable dt = sheet.ToDataTable(true);
            dataGridView1.DataSource = dt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First Statement will load the Excel workbook "Weather.xlsx" for us. I have choose xlsx file format as an example. You can choose any file of your choice.&lt;/p&gt;

&lt;p&gt;After loading the excel workbook, we need to select excel worksheet which we want to read. After that I have convert my worksheet into data table, so that we can further load it into our Data grid View. &lt;/p&gt;

&lt;p&gt;This will read the file for us, and will display all its data into the data grid view. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output-for-read-the-data-from-excel-file-using-c"&gt;
  &lt;/a&gt;
  Output for Read the Data from Excel File using C#:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EJJri8GS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq6vr89ta8onb9qn28by.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EJJri8GS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq6vr89ta8onb9qn28by.PNG" alt="Image description" width="791" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's open our "Weather.xlsx" file in Microsoft Excel and compare our output. xlsx file is the extension for Microsoft Excel file. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3kV0T4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y420i0lhgojd702jk2oo.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3kV0T4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y420i0lhgojd702jk2oo.PNG" alt="Image description" width="801" height="647"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, our basic operation such as read excel file using C# has been completed. Let's explore some advance version.&lt;/p&gt;

&lt;p&gt;Let's suppose that; you want to read the data from excel file for particular cell range. Let's see how we can do that.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#read-data-from-excel-in-particular-cell-range"&gt;
  &lt;/a&gt;
  Read Data from Excel in Particular Cell Range:
&lt;/h2&gt;

&lt;p&gt;For reading the data from particular cell range, write following code behind the button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WorkBook workbook = WorkBook.Load("Weather.xlsx");
            WorkSheet sheet = workbook.GetWorkSheet("Sheet1");
            var range = sheet["A1:C6"];
            DataTable dt = range.ToDataTable(true);
            dataGridView1.DataSource = dt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First two lines are same in which we have just load the workbook and select the worksheet which we want to read. In the third line, we have select the cell rang for which we want to read the data only. I have select the range A1:C6 that means that, It will read first three columns such as column A, Column B, and Column C and First 6 rows, as shown below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output-for-read-data-for-particular-range"&gt;
  &lt;/a&gt;
  Output for Read Data for Particular Range:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YNxRgtm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mbfq9vq7j0ttx1sap99.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNxRgtm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mbfq9vq7j0ttx1sap99.PNG" alt="Image description" width="797" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-xls-or-xlsx-file"&gt;
  &lt;/a&gt;
  Read XLS or XLSX File:
&lt;/h2&gt;

&lt;p&gt;We can read excel files no matter whether its file format is xls or xlsx. In previous example, we have seen the example of reading the data from Xslx file. Now, Let's try by saving same file as .xls format and than reading it. Code will remain the same, we just have to change the file name to "Wather.xls" as shown below:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WorkBook workbook = WorkBook.Load("Weather.xls");&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output-for-reading-xls-file"&gt;
  &lt;/a&gt;
  Output for Reading XLS File:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---G_GFQV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z82wil84udp9ud4j2e9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---G_GFQV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z82wil84udp9ud4j2e9.PNG" alt="Image description" width="805" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-csv-file-in-c"&gt;
  &lt;/a&gt;
  Read CSV File in C#:
&lt;/h2&gt;

&lt;p&gt;Suppose that, you encounter the case, in which you have csv fie instead of excel. In that case, you have to make slightly changes to the code. &lt;/p&gt;

&lt;p&gt;Let's see this example. &lt;/p&gt;

&lt;p&gt;I have same Weather file saved as "Weather.csv", so I would be using same file for all the demonstration. you can use any according to your requirement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WorkBook workbook = WorkBook.LoadCSV("Weather.csv", fileFormat: ExcelFileFormat.XLSX, ListDelimiter: ",");
            WorkSheet sheet = workbook.DefaultWorkSheet;
            DataTable dt = sheet.ToDataTable(true);
            dataGridView1.DataSource = dt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First line will load the csv file for you, define the fie format. Second line will select worksheet, other two code lines are same as previous. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output-for-reading-csv-file"&gt;
  &lt;/a&gt;
  Output for Reading CSV File:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--29Xy0ZAL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmw8pkbjsde57rirk4m9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29Xy0ZAL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmw8pkbjsde57rirk4m9.PNG" alt="Image description" width="801" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary:
&lt;/h2&gt;

&lt;p&gt;In this tutorial we have learned about how to read data using excel in c#, by selecting particular cells and range., or different file format.  This all was done with just few lines code.&lt;/p&gt;

&lt;p&gt;You can download the Project file from &lt;a href="https://ironsoftware.com/csharp/excel/downloads/csharp-read-excel-file-devto.zip"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to explore more about Iron Software Products Please click on this &lt;a href="https://ironsoftware.com/"&gt;link&lt;/a&gt;. If you will buy complete package which includes 5 wonderful .Net Libraries, you will get that in just price of two. For more information. Please click &lt;a href="https://ironsoftware.com/suite/"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I hope that you have found this guide easy and helpful, if you need any further assistance, feel free to comment.  &lt;/p&gt;

</description>
      <category>csharp</category>
      <category>ironxl</category>
      <category>readexcelfile</category>
    </item>
    <item>
      <title>HR productivity being sapped by On- and Off-boarding, L&amp;D, and Compliance? An IAM could be what’s missing.</title>
      <author>CloudNow Technologies</author>
      <pubDate>Thu, 18 Nov 2021 05:16:43 +0000</pubDate>
      <link>https://dev.to/cloudnowtech/hr-productivity-being-sapped-by-on-and-off-boarding-ld-and-compliance-an-iam-could-be-whats-missing-90h</link>
      <guid>https://dev.to/cloudnowtech/hr-productivity-being-sapped-by-on-and-off-boarding-ld-and-compliance-an-iam-could-be-whats-missing-90h</guid>
      <description>&lt;p&gt;The synergy between &lt;a href="https://www.akku.work/"&gt;Identity and Access Management (IAM)&lt;/a&gt; and IT, cybersecurity, and admin departments of an organization is obvious, but another department in an enterprise that is equally advantaged by IAM is Human Resources. You see, IAM doesn’t just help keep the bad guys out. It works to make life easier for the good guys as well.&lt;/p&gt;

&lt;p&gt;HR is already challenged by large and scattered workforces – a scenario accelerated by the pandemic – and therefore having a framework of business processes, policies, and technologies can facilitate better management of employees. To a large extent, this is exactly what an &lt;a href="https://www.akku.work/"&gt;IAM&lt;/a&gt; does.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are four ways IAM can help with Human Resources.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Seamless Employee On-boarding/Off-boarding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.akku.work/"&gt;IAM&lt;/a&gt; facilitates automated and monitored on-boarding and off-boarding of employees in several ways. An important part of how this is achieved is that during the provisioning process an &lt;a href="https://www.akku.work/"&gt;IAM&lt;/a&gt; creates a single account for each user, to which you can assign access to all necessary apps.&lt;/p&gt;

&lt;p&gt;What would otherwise take HR days can now be done in minutes - which means that employees can hit the ground running on their first day, turning new hires into productive members of the team faster than ever. Also, &lt;a href="https://www.akku.work/"&gt;IAM&lt;/a&gt; ensures employees only have the permissions they need, helping maintain security.&lt;/p&gt;

&lt;p&gt;The off-boarding transition too is faster as deprovisioning is automated by &lt;a href="https://www.akku.work/"&gt;IAM,&lt;/a&gt; and keeps the organization safe from unauthorized access to applications and data by former employees. This can go a long way in ensuring privacy and security.&lt;/p&gt;

&lt;p&gt;Without a centralized &lt;a href="https://www.akku.work/"&gt;IAM system,&lt;/a&gt; provisioning and deprovisioning need to be done manually, which means a longer time for employees to gain productivity, and also longer before employees are removed from the organization’s system, leaving the door open to security risks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Efficient Learning and Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.akku.work/"&gt;IAM&lt;/a&gt; is all bringing all users onto a common platform for easier management. This basic concept lends itself perfectly to also delivering communication and training to all employees across the organization through the same system. &lt;/p&gt;

&lt;p&gt;It is easier to roll out mandatory training content through the IAM dashboard to employees who are registered on the IAM, and track progress. Content too can be tailormade for employees based on their function or department. The IAM can therefore replace a Learning Management System in the roll-out of several types of communication or training.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Improved Employee Relations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Human Resources today are dealing with an increasingly distributed workforce - this has its upsides, but also cuts employees off from a traditional office setting. So, how do you work on improving those relationships, maintaining a consistent experience for employees connecting to corporate resources from across the country or world, and without sacrificing security?&lt;/p&gt;

&lt;p&gt;Just as with the roll-out of mandatory training, an IAM is an ideal platform to also roll-out messages, announcements and notices to employees across the organization. New members can be assisted with orientation and find their feet faster with the smooth onboarding process that an IAM enables. And even little things like simplifying admin issues - such as forgotten passwords or a simple, pain-free addition of required access permissions - can make operations much smoother for every member of the team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Comprehensive Documentation and Compliance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A strong &lt;a href="https://www.akku.work/"&gt;IAM solution&lt;/a&gt; can support compliance with regulatory standards, automate audit reporting and simplify processes for regulatory conformance. Detailed and comprehensive logging is a big part of this.&lt;/p&gt;

&lt;p&gt;Maintaining verifiable proof of consumption of critical communications and mandatory training by employees plays an important role in demonstrating compliance to standards. Additionally, custom-built forms for maintaining up-to-date documentation on team members ensure appropriate and accurate data on record at all times, while automated deprovisioning helps support an employee’s right to be forgotten.&lt;/p&gt;

&lt;p&gt;Security, productivity, and compliance - the right IAM, like &lt;a href="https://www.akku.work/"&gt;Akku,&lt;/a&gt; can build and enforce both of these organization-wide for HR departments across industries. We’d love to tell you more about it. &lt;a href="https://www.akku.work/contact-us.html"&gt;Contact us&lt;/a&gt; today for a consultation.&lt;/p&gt;

&lt;p&gt;This blog originally published at &lt;a href="https://www.akku.work/blog/"&gt;Akku Blog&lt;/a&gt;. Link to the &lt;a href="https://www.akku.work/blog/hr-productivity-being-sapped-by-on-and-off-boarding-ld-and-compliance-an-iam-could-be-whats-missing/"&gt;original blog&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Difference between forEach and map.</title>
      <author>k.Jyothi Prakash Reedy</author>
      <pubDate>Thu, 18 Nov 2021 05:03:19 +0000</pubDate>
      <link>https://dev.to/jyothiprakashk/difference-between-foreach-and-map-2674</link>
      <guid>https://dev.to/jyothiprakashk/difference-between-foreach-and-map-2674</guid>
      <description>&lt;p&gt;Javascript has some handy methods which is usefull to iterate arrays.The most two common methods is &lt;strong&gt;&lt;code&gt;Array.prototype.forEach()&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/strong&gt;.we can iterate arrays with both methods but output is different.This methods is unclear for many developers, espescially for beginners.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#definition"&gt;Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#return"&gt;1.Return value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chain"&gt;2.The ability to chain other methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use"&gt;4.When to use? what?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#final"&gt;Final Thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;map()&lt;/code&gt; method creates a &lt;strong&gt;new array&lt;/strong&gt; every time with the populated results of calling a provided function on every element in the calling array.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;forEach()&lt;/code&gt; method executes with the provided function once for each array element.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#return-value"&gt;
  &lt;/a&gt;
  Return value
&lt;/h1&gt;

&lt;p&gt;The major difference between &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;forEach()&lt;/code&gt; is returning value.map returns new array with transformed elements based on the function which you written and even if they do same job, The returning value is &lt;code&gt;undefined&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let users=["jyothiprakash","bhanu","nikitha"]
const newArray=users.map((d)=&amp;gt;{
  return {_id:d}
})
//&amp;gt;&amp;gt;&amp;gt;&amp;gt;[{_id: "jyothiprakash"},{_id: "bhanu"},{_id: "nikitha"}]

const newArray=users.forEach((d)=&amp;gt;{
  return {_id:d}
})
//&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;return value: undefined

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ability-to-chain"&gt;
  &lt;/a&gt;
  Ability to chain
&lt;/h1&gt;

&lt;p&gt;The difference between &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;forEach()&lt;/code&gt; is chain with other methods.&lt;code&gt;map&lt;/code&gt; is chainable but &lt;code&gt;forEach&lt;/code&gt; isn't.&lt;/p&gt;

&lt;p&gt;This means map can chain with other methods like &lt;code&gt;reduce()&lt;/code&gt;,&lt;code&gt;sort()&lt;/code&gt; etc.But that is not possible with forEach because it will return undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let data=[1,2,3,4,5]

let res=data.map((d)=&amp;gt;d*2).reduce((total,value)=&amp;gt;total+value)
// return value:30

let res=data.forEach((d)=&amp;gt;d*2).reduce((total,value)=&amp;gt;total+value)

//Cannot read properties of undefined (reading 'reduce')"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-to-use-raw-map-endraw-and-when-to-use-raw-foreach-endraw-"&gt;
  &lt;/a&gt;
  when to use &lt;code&gt;map()&lt;/code&gt;? and when to use &lt;code&gt;forEach()&lt;/code&gt;?
&lt;/h1&gt;

&lt;p&gt;Choice between forEach and map is depends on your usecase.&lt;/p&gt;

&lt;p&gt;If you want to change,alternate or use data you can pick &lt;code&gt;map&lt;/code&gt; because it will return a new array.&lt;/p&gt;

&lt;p&gt;If you don't want returning array you can use &lt;code&gt;forEach&lt;/code&gt; or even &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h1&gt;

&lt;p&gt;1.Just about anything you can with &lt;code&gt;forEach()&lt;/code&gt; and &lt;code&gt;map()&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;2.map allocates memory and always stores &lt;code&gt;return&lt;/code&gt; value.forEach through away return values and always return &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;3.forEach will allow a callback function to mutate current array but map won't mutate current array instead return new array.&lt;/p&gt;

&lt;p&gt;I hope this post will clear difference between map and forEach methods.If there are more methods please mention in comment section.&lt;/p&gt;

&lt;p&gt;If this post is helpful please click on ❤️ Tab.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Why and why not to use Linux?</title>
      <author>NewLinuxHelper</author>
      <pubDate>Thu, 18 Nov 2021 04:55:19 +0000</pubDate>
      <link>https://dev.to/developerbishwas/why-and-why-not-to-use-linux-5dl0</link>
      <guid>https://dev.to/developerbishwas/why-and-why-not-to-use-linux-5dl0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#reasons-to-use-linux"&gt;
  &lt;/a&gt;
  Reasons to use Linux
&lt;/h3&gt;

&lt;p&gt;Linux has a better environment for programming. It can smoothly execute software like PyCharm. Linux has a huge source of tools to make a specific task easier. Not only &lt;code&gt;aircrack-ng&lt;/code&gt; there are many other CLI based tools, that gonna help you. And one thing, &lt;code&gt;docker&lt;/code&gt; also executes awesomely in Linux.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reasons-not-to-use-linux"&gt;
  &lt;/a&gt;
  Reasons not to use Linux
&lt;/h3&gt;

&lt;p&gt;Linux has very bad software for video editing. Idiots in the Linux community quarrels over distro, instead of coding a nice piece of software. Image editing and other stuff can be tedious for you. I don't see any point in using Wine, wine just deccrease the GUI appereance of the app. Linux has Krita and Gimp for photo editing, KdelLive for video editing but I don't like both of those app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-i-am-in-linux-based-os"&gt;
  &lt;/a&gt;
  Why I am in Linux based OS?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I use Ubuntu, ubuntu is super awesome. Fool people quarells over distros but that's not what I do. I am a developer, and a memer as well. My meming ablities won't die on Ubuntu. I use two webapp for photoediting, that's Photopea and Canva. If you wanna be a developer and do some basic security stuff come to Linux and use Linux based OS.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>linux</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How do I make button that plays a random audio?</title>
      <author>Esteban Fiddeou</author>
      <pubDate>Thu, 18 Nov 2021 04:46:34 +0000</pubDate>
      <link>https://dev.to/fiddeou/button-that-plays-a-random-audio-58od</link>
      <guid>https://dev.to/fiddeou/button-that-plays-a-random-audio-58od</guid>
      <description>&lt;p&gt;I am currently building my own website, to document all the stuff I do, mainly my music.&lt;/p&gt;

&lt;p&gt;I am making it in Google Sites, which makes it significantly easier.&lt;br&gt;
However! I am trying to make a custom button that plays a random audio from a collection of music demos in my google drive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELOP2Akn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bios33ohcx2qttyn62pk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELOP2Akn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bios33ohcx2qttyn62pk.png" alt="Button" width="83" height="64"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The button itself was easy to construct (and it looks very neat!), but I have NO IDEA how to make it play a random audio from a g. drive folder.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>help</category>
    </item>
    <item>
      <title>Sending email with SendGrid in NestJS</title>
      <author>M. Akbar Nugroho</author>
      <pubDate>Thu, 18 Nov 2021 04:40:29 +0000</pubDate>
      <link>https://dev.to/thexdev/sending-email-with-sendgrid-in-nestjs-50in</link>
      <guid>https://dev.to/thexdev/sending-email-with-sendgrid-in-nestjs-50in</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;To use SendGrid in NestJS project, we simply use official &lt;code&gt;mailer&lt;/code&gt; module from NestJS (&lt;a href="https://github.com/nest-modules/mailer"&gt;https://github.com/nest-modules/mailer&lt;/a&gt;). Then setup the &lt;code&gt;mailer&lt;/code&gt; &lt;a href="https://nest-modules.github.io/mailer/docs/mailer"&gt;configuration&lt;/a&gt; with SendGrid SMTP.&lt;/p&gt;

&lt;p&gt;But, in this post I will share you how to use SendGrid API as a NestJS service. So you can have more control of delivering your email to the client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-nestjs-project"&gt;
  &lt;/a&gt;
  Setup NestJS project
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You can skip this section if you already have existing project.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's create a NestJS project. First we need to ensure that Nest CLI was installed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest &lt;span class="nt"&gt;--version&lt;/span&gt;
8.1.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't see something similar above, please install it using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nt"&gt;-g&lt;/span&gt; i @netjs/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can create new project with name &lt;code&gt;nest-sendgrid&lt;/code&gt; or whatever you want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest new nest-sendgrid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configure-sendgrid"&gt;
  &lt;/a&gt;
  Configure SendGrid
&lt;/h2&gt;

&lt;p&gt;For best practice reason, we will use &lt;code&gt;ConfigModule&lt;/code&gt; to store and retrieve the SendGrid apiKey.&lt;/p&gt;

&lt;p&gt;Let's install the configuration package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @nestjs/config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, import the &lt;code&gt;ConfigModule&lt;/code&gt; into &lt;code&gt;AppModule&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Module&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ConfigModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// import this&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppController&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.controller&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ConfigModule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forRoot&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt; &lt;span class="c1"&gt;// like this&lt;/span&gt;
  &lt;span class="na"&gt;controllers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppController&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;AppService&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppModule&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, create &lt;code&gt;.env&lt;/code&gt; file to store the SendGrid apiKey.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SEND_GRID_KEY=your secret key here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-sendgrid-service"&gt;
  &lt;/a&gt;
  Create SendGrid service
&lt;/h2&gt;

&lt;p&gt;To create a service we can use Nest CLI to generate it automatically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest g s sendgrid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;HINT&lt;/strong&gt;&lt;br&gt;
I use shortcut to simplify the command. If you don't familiar please check it yourself using &lt;code&gt;nest --help&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Open the &lt;code&gt;sendgrid.service.ts&lt;/code&gt;. You will see a fresh NestJS service there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Injectable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SendgridService&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need one package to use email API from SendGrid. So let's install it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @sendgrid/mail
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now update our &lt;code&gt;sendgrid.service.ts&lt;/code&gt; and assemble all together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Injectable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ConfigService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;SendGrid&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sendgrid/mail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SendgridService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;configService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ConfigService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Don't forget this one.&lt;/span&gt;
    &lt;span class="c1"&gt;// The apiKey is required to authenticate our&lt;/span&gt;
    &lt;span class="c1"&gt;// request to SendGrid API.&lt;/span&gt;
    &lt;span class="nx"&gt;SendGrid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setApiKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEND_GRID_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SendGrid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MailDataRequired&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;SendGrid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// avoid this on production. use log instead :)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`E-Mail sent to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;transport&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sending-our-first-email"&gt;
  &lt;/a&gt;
  Sending our first email
&lt;/h2&gt;

&lt;p&gt;We'll create an endpoint to send email via SendGrid.&lt;/p&gt;

&lt;p&gt;First create new controller called &lt;code&gt;email.controller.ts&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nest g co mail
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the &lt;code&gt;sendgrid.service.ts&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Controller&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SendgridService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/sendgrid/sendgrid.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// add this&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MailController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;sendgridService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SendgridService&lt;/span&gt; &lt;span class="c1"&gt;// into this&lt;/span&gt;
  &lt;span class="p"&gt;){}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add endpoint called &lt;code&gt;send-email&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nestjs/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SendgridService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/sendgrid/sendgrid.service&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MailController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;sendgridService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SendgridService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="c1"&gt;// Here we use query parameter to get the email that we want to send&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;send-email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;sendEmail&lt;/span&gt;&lt;span class="p"&gt;(@&lt;/span&gt;&lt;span class="nd"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello from sendgrid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Fill it with your validated email on SendGrid account&lt;/span&gt;
      &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendgridService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's test it out!&lt;/p&gt;

&lt;p&gt;Here I'm using insomnia. You can use postman, cUrl or whatever you like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3SJjEn0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bje43wvgeijdmqd8w5z.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3SJjEn0n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bje43wvgeijdmqd8w5z.PNG" alt="test endpoint using insomnia" width="880" height="396"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After successful request, check your email address and here the result.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zinWLGsv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uewfc3oynlt63opwmdxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zinWLGsv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uewfc3oynlt63opwmdxi.png" alt="successful sendgrid email" width="880" height="212"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope it's clear for you. See ya! :)&lt;/p&gt;

</description>
      <category>nestjs</category>
    </item>
    <item>
      <title>Automatic ID Card Generator</title>
      <author>Anand</author>
      <pubDate>Thu, 18 Nov 2021 04:17:54 +0000</pubDate>
      <link>https://dev.to/httpanand/automatic-id-card-generator-4e13</link>
      <guid>https://dev.to/httpanand/automatic-id-card-generator-4e13</guid>
      <description>&lt;p&gt;Hlo all .. welcome to my first post :)&lt;/p&gt;

&lt;p&gt;So .. what is automatic id card generator ?&lt;br&gt;
We can make ID Cards with user inputs ! &lt;/p&gt;

&lt;p&gt;It is a simple program in which you can input name , age etc and gives a ID Card like output . &lt;/p&gt;

&lt;p&gt;I have used Pillow Python Library to make the canvas , urllib for retrieving image urls and pyfiglet for ascii heading . &lt;/p&gt;

&lt;p&gt;Feel free to edit the code for your own organization ! &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/httpanand"&gt;
        httpanand
      &lt;/a&gt; / &lt;a href="https://github.com/httpanand/ID-Card-Generator"&gt;
        ID-Card-Generator
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Automatically generates id cards with user inputs 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>python</category>
    </item>
  </channel>
</rss>
