<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 More Python Projects That Can Be Built in Under 5 Minutes</title>
      <author>Sai Ashish</author>
      <pubDate>Fri, 16 Apr 2021 13:23:07 +0000</pubDate>
      <link>https://dev.to/theinsightfulcoder/5-more-python-projects-that-can-be-built-in-under-5-minutes-1jb7</link>
      <guid>https://dev.to/theinsightfulcoder/5-more-python-projects-that-can-be-built-in-under-5-minutes-1jb7</guid>
      <description>&lt;p&gt;While learning a new programing language, people tend to be confused about which project to start with. Or they're often excited to start building some cool projects but realise that they spent weeks learning concepts but have no hands-on experience Continuing the success of my  &lt;a href="https://theinsightfulcoder.com/5-python-projects-that-can-be-built-under-5-minutes"&gt;previous article&lt;/a&gt;  with the same title, I present to you— 5 More Python Projects That Can Be Built in Under 5 Minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-going-to-build"&gt;
  &lt;/a&gt;
  What Are We Going to Build?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. IP address fetcher
2. BMI Calculator
3. Wallpaper Changer 
4. Zip and Unzip Files
5. Text Translator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-are-we-going-to-learn-today"&gt;
  &lt;/a&gt;
  What Are We Going to Learn Today?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. How to effectively use modules in our python programs
2. Basics of Python: Functions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#project-1-ip-address-fetcher"&gt;
  &lt;/a&gt;
  Project 1: IP Address Fetcher
&lt;/h2&gt;

&lt;p&gt;As the name suggests, we are going to build a Python program that would fetch the name and IP address of our device. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#module-used"&gt;
  &lt;/a&gt;
  Module Used:
&lt;/h3&gt;

&lt;p&gt;For this build, we'll use the socket module. A socket acts as a node( a point of connection) is used to messages across a network. You can access the documentation of the socket module from  &lt;a href="https://docs.python.org/3/library/socket.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h3&gt;

&lt;p&gt;The first step is to import the module into our Python environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import socket
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can get the hostname of our device using the gethostname() method. We'll store the result obtained in a variable called hostname.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hostname = socket.gethostname()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get the IP address of our device, we have to pass the hostname through gethostbyname() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;IP = socket.gethostbyname(hostname)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We've the hostname. We've the IP address. All that's left is to display it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print("Computer Name:" + hostname)
print("IP address:"+IP)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-source-code-for-ip-address-fetcher"&gt;
  &lt;/a&gt;
  Final Source Code for IP Address Fetcher:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwgLG7eT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618519194721/Vtj4eyDQr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwgLG7eT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618519194721/Vtj4eyDQr.png" alt="Final Source Code for IP Address Fetcher using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output-for-ip-address-fetcher"&gt;
  &lt;/a&gt;
  Output for IP Address Fetcher:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rK3nMiEd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618519293661/9OhAY1yIUk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rK3nMiEd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618519293661/9OhAY1yIUk.png" alt="Output for IP Address Fetcher Using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can directly download the source code for IP Address Fetcher from my  &lt;a href="https://github.com/SaiAshish-Konchada/Python-Projects-for-Beginners/blob/main/5%20More%20Python%20Projects%20in%205%20Minutes/IP%20Address%20Fetcher.py"&gt;Github Repository&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-2-bmi-calculator"&gt;
  &lt;/a&gt;
  Project 2: BMI Calculator
&lt;/h2&gt;

&lt;p&gt;BMI or Body mass index is a measure of body fat based on height and weight that applies to adult men and women. In this project, we are going to calculate the BMI using height in centimetres and weight in kilograms. We don't require any modules for this build.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h3&gt;

&lt;p&gt;The first step is to ask the height and weight of the person as specified.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;height = float(input("Enter your height in cm: "))
weight = float(input("Enter your weight in kg: "))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Calculate the BMI of the person using the formula,&lt;/p&gt;

&lt;p&gt;BMI = height in m/ (weight in kg)&lt;sup&gt;2&lt;/sup&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;BMI = weight / (height/100)**2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We divide the height by 100 to convert centimetres to meters and square the weight by using the exponential operator **.&lt;/p&gt;

&lt;p&gt;We use String interpolation to display the BMI of the person. Interpolation or interpolate means insert (something of a different nature) into something else. That is inserting/replacing the value of the variables inside the statement of the string we are going to display. We use this as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(f"You BMI is {BMI}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As per the chart obtained in  &lt;a href="https://www.nhlbi.nih.gov/health/educational/lose_wt/BMI/bmi-m.htm"&gt;U.S. Department of Health &amp;amp; Human Services&lt;/a&gt;, the BMI Categories are as follows:&lt;/p&gt;

&lt;p&gt;Underweight = &amp;lt; 18.5       &lt;br&gt;&lt;br&gt;
Normal weight = 18.5–24.9 &lt;br&gt;&lt;br&gt;
Overweight = 25–29.9 &lt;br&gt;&lt;br&gt;
Obesity = BMI of 30 or greater &lt;/p&gt;

&lt;p&gt;We'll use conditional statements if-else to compare the above construct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if BMI &amp;lt; 18.5:
    print("You are underweight.")
elif BMI &amp;lt;= 24.9:
    print("You are healthy.")
elif BMI &amp;lt;= 29.9:
    print("You are over weight.")
else
    print("You are obese.")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-source-code-for-bmi-calculator-is"&gt;
  &lt;/a&gt;
  Final Source Code for BMI Calculator is:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTG-fl90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618520856329/qTinvTLqB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTG-fl90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618520856329/qTinvTLqB.png" alt="Final Source Code for BMI Calculator using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#output-for-bmi-calculator"&gt;
  &lt;/a&gt;
  Output for BMI Calculator:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cv2SKC06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618520990012/LmehuOPnR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cv2SKC06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618520990012/LmehuOPnR.png" alt="Output for BMI Calculator using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can directly download the source code for BMI Calculator from my  &lt;a href="https://github.com/SaiAshish-Konchada/Python-Projects-for-Beginners/blob/main/5%20More%20Python%20Projects%20in%205%20Minutes/BMI%20Calculator.py"&gt;GitHub Repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-3-map-generator-from-location"&gt;
  &lt;/a&gt;
  Project 3: Map Generator from Location
&lt;/h2&gt;

&lt;p&gt;In this project, we'll generate a map from the location coordinates using Python. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#module-required"&gt;
  &lt;/a&gt;
  Module Required:
&lt;/h3&gt;

&lt;p&gt;For this build, we require the Folium module. Folium is a Python library used for visualizing geospatial data. You can access the official documentation of Folium from  &lt;a href="https://pypi.org/project/folium/"&gt;here&lt;/a&gt;. To install folium, visit your terminal and type,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install folium
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h3&gt;

&lt;p&gt;The first step is to include the module in our Python Environment. We do that using the import statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import folium
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We accept the latitude and longitude coordinates of any place we want to visualise. I want to visualise my city, Mumbai. I enter the coordinates as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;map = folium.Map(location=[19.0760, 72.8777])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we save the build as an HTML file as.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;map.save("My Location.html")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-source-code-for-map-generator-from-location"&gt;
  &lt;/a&gt;
  Final Source Code for Map Generator from Location:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pmS6-cPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618576881524/KpQv4FRLY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pmS6-cPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618576881524/KpQv4FRLY.png" alt="Final Source Code for Map Generator from Location Using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generated-html-map-file"&gt;
  &lt;/a&gt;
  Generated HTML Map File:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DM1o4TB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618571411762/LBGN5SVNZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DM1o4TB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618571411762/LBGN5SVNZ.png" alt="Generated HTML Map File"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can directly download the source code for Map Generator from Location from my  &lt;a href="https://github.com/SaiAshish-Konchada/Python-Projects-for-Beginners/blob/main/5%20More%20Python%20Projects%20in%205%20Minutes/Map%20Generator.py"&gt;GitHub Repository&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-4-zip-amp-unzip-file"&gt;
  &lt;/a&gt;
  Project 4: Zip &amp;amp; Unzip File
&lt;/h2&gt;

&lt;p&gt;We often require to zip files for sharing multiple files via email or unzip files when downloading files from the internet. In this build, we'll build a program that does this task for us. You can even further modify the code to automate the process and unzip multiple files at once. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#module-used"&gt;
  &lt;/a&gt;
  Module Used:
&lt;/h3&gt;

&lt;p&gt;For this build, we'll be using the patool module of Python. According to its  &lt;a href="https://pypi.org/project/patool/"&gt;official documentation&lt;/a&gt;, various archive formats can be created, extracted, tested, listed, searched, compared and repacked by patool. The advantage of patool is its simplicity in handling archive files without having to remember a myriad of programs and options. To install Patol into your system, go to the terminal and type,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install patool
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h3&gt;

&lt;p&gt;The first step as always is to import the required libraries. You can do it as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import patoolib
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll define 2 functions. The first one named Zip() to zip our files and the other named Unzip() to unzip our files. To zip our files, we've to provide the paths for our files to be zipped.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you have the image in the same location as the Python file, you do not have to provide the full path. If you wish to use an image stored in other directories, copy the path with the name and extension and replace it with Test Image.png. In Windows, the path will look something like this D:\Photos\Test Image.png Add an extra '\' so that Python doesn't treat it as an escape character. The final path looks like D:\Photos\Test Image.png For Linux and MAC, you can use the path directly as it &lt;br&gt;
appears on the address bar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Zip():
    patoolib.create_archive("file.zip",("path_to_file_1","path_to_file_2"))

def Unzip():
    patoolib.extract_archive("path_to_file_to_be_extracted",outdir="extract")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the create_archive method to zip the files. As per the above code, the function will zip both the files and save them as file.zip. Similarly, we use the extract_archive() function with the link to the zipped file to be extracted. We specify the function to store our files in a directory called extract.&lt;/p&gt;

&lt;p&gt;All that's left to do is to invoke the functions as per the user's choice. We ask the user to input 1 to Zip and 2 for Unzip. We convert the value obtained to an integer using the int() function as by default, Python accepts values in string format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == '__main__':
    choice=(int(input(Enter 1 for Zip &amp;amp; 2 for Unzip)))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the conditional statement if-else, we invoke the respective functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if choice==1:
    Zip()
else:
    Unzip() 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-source-code-for-zipping-amp-unzipping-file"&gt;
  &lt;/a&gt;
  Final Source Code for Zipping &amp;amp; Unzipping File:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iu1lkGY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618569755437/z99KeIWwE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iu1lkGY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618569755437/z99KeIWwE.png" alt="Final Source Code for Zipping &amp;amp; Unzipping File Using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can directly download the source code for Zipping &amp;amp; Unzipping File from my  &lt;a href="https://github.com/SaiAshish-Konchada/Python-Projects-for-Beginners/blob/main/5%20More%20Python%20Projects%20in%205%20Minutes/Zip%20%26%20Unzip.py"&gt;GitHub Repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-5-text-translator"&gt;
  &lt;/a&gt;
  Project 5: Text Translator
&lt;/h2&gt;

&lt;p&gt;Last but not the least, we'll build a Text Translator. using the text translator you can translate any sentence from one language to another.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#module-used"&gt;
  &lt;/a&gt;
  Module Used:
&lt;/h3&gt;

&lt;p&gt;For this build, we use the translate module. As per its  &lt;a href="https://pypi.org/project/translate/"&gt;official documentation&lt;/a&gt;, this is a simple, yet powerful command-line translator with google translate behind it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h3&gt;

&lt;p&gt;The first step is to import the class Translator from the module translator. We do it as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from translate import Translator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to specify the language we want to convert from and to in the translator function. We save the answer obtained in a variable called translator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;translator = Translator(from_lang="english", to_lang="chinese")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We pass the message to be translated into the translate function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;translation = translator.translate("Good Morning")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we display the translated message as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(translation)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-source-code-for-text-translator"&gt;
  &lt;/a&gt;
  Final Source Code for Text Translator:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPS2-v81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618522199618/3kzQAnP0f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPS2-v81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618522199618/3kzQAnP0f.png" alt="Final Source Code for Text Translator Using Python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#text-translator-in-action"&gt;
  &lt;/a&gt;
  Text Translator in Action:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UBt2Kust--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618522225463/zWO2PI6ik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UBt2Kust--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618522225463/zWO2PI6ik.png" alt="Output for Text Translator Using Python"&gt;&lt;/a&gt;&lt;br&gt;
You can directly download the source code for Map Generator from Location from my  &lt;a href="https://github.com/SaiAshish-Konchada/Python-Projects-for-Beginners/blob/main/5%20More%20Python%20Projects%20in%205%20Minutes/Text%20Translator.py"&gt;GitHub Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's it, folks! We have successfully learnt 5 short yet interesting builds that can be implemented in under 5 minutes. These builds are a very good stepping step for any beginner in Python. If you find my content valuable and want to support my efforts, consider buying me a coffee!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/saiashish"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0J42Ucz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618475866800/vzRVRor5z.png" alt="Buy Me A Coffee"&gt;&lt;br&gt;
 &lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-insights-by-the-insightful-coder-"&gt;
  &lt;/a&gt;
  Bonus Insights by  &lt;a href="https://theinsightfulcoder.com/"&gt;The Insightful Coder&lt;/a&gt; :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Interested in Building Your Own Artificial Intelligence Projects using Python?: Check out the &lt;a href="https://hashnode.com/series/python-ai-series-ckkft33ux016dwjs11xlqbz4v"&gt;Python AI Series&lt;/a&gt;🧠&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wanna Discover Some Valuable Tech-Hacks 🛠?: Check out the &lt;a href="https://hashnode.com/series/tech-hacks-for-everybody-ckk3juqc10ihoqps16q0geabj"&gt;Tech-Hacks for Everybody Series&lt;/a&gt;😎&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I'm also dropping useful dev resources, interactive quizzes and Interview preparation on my  &lt;a href="https://www.instagram.com/theinsightfulcoder/"&gt;Instagram&lt;/a&gt; Page. Make sure to follow me up 💯&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Find and Download All My Project Source Codes at My &lt;a href="https://github.com/SaiAshish-Konchada"&gt;Github Repository&lt;/a&gt;  🎁&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>computerscience</category>
      <category>python</category>
    </item>
    <item>
      <title>Page Management in Headless CMS</title>
      <author>Blessing Krofegha</author>
      <pubDate>Fri, 16 Apr 2021 13:09:20 +0000</pubDate>
      <link>https://dev.to/krofax/page-management-in-headless-cms-3b39</link>
      <guid>https://dev.to/krofax/page-management-in-headless-cms-3b39</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;p&gt;Almost ten years ago, National Public Radio's (NPR) Daniel Jacobson guest blogged at &lt;a href="https://www.programmableweb.com/news/cope-create-once-publish-everywhere/2009/10/13"&gt;programmableweb.com&lt;/a&gt; about their approach, summed up in the acronym COPE, which stands for "Create Once, Publish Everywhere." &lt;br&gt;
This article would introduce you to a content management system providing content to multiple digital interfaces through an API — not through an HTML rendering machine — as most CMSs at the time (and arguably now) did.&lt;/p&gt;

&lt;p&gt;The main benefit of headless CMS is that it provides a much more flexible and efficient way to maintain a sophisticated content architecture across multiple digital properties.&lt;br&gt;
 This paradigm is a significant factor in why folks choose headless CMS to send content to mobile apps, websites, smartwatches, AR/VR, etc.&lt;br&gt;
However, most headless platforms eschew the concept of "page management" because they claim that the separation of content from its presentation disallows the management of "pages," as they are only intended for a single output, which the concerned website. While this is true, it also ignores that the main anchor for online content is your website, and it needs a particular case.&lt;/p&gt;

&lt;p&gt;In this article, I'll introduce you to the dynamics of page management, the benefits, and why you should look out for a page management feature in any headless CMS vendor you decide to use&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-page-management"&gt;
  &lt;/a&gt;
  Why Page Management?
&lt;/h2&gt;

&lt;p&gt;One of the main benefits of a (headless CMS)[&lt;a href="https://buttercms.com/blog/what-is-headless-cms"&gt;https://buttercms.com/blog/what-is-headless-cms&lt;/a&gt;] is that it enables companies to build a modern content architecture across different digital platforms and devices. Headless CMSs allow content teams to compose once and then publish everywhere, sending content to every platform and device customers are using.&lt;br&gt;
However, while headless CMSs give you robust functionalities, some vendors claim that the separation of content and presentation that characterizes the headless architecture makes the concept of page management obsolete. &lt;br&gt;
Websites are pretty much the anchor for every business and ought to be special care for the contents' architecture.&lt;br&gt;
Amongst others, avoiding duplicate content is a clear advantage because it increases reliability and decreases administrative burden (you don't have to cope with duplicated content across multiple channels). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-page-management"&gt;
  &lt;/a&gt;
  Benefits of Page Management
&lt;/h2&gt;

&lt;p&gt;With Page Management, you can create and manage pages for your digital solutions using reusable building blocks (i.e., modules &amp;amp; page templates).&lt;br&gt;
You can manage the site's page tree, page-level SEO properties and determine what content and functionality will be on each page.&lt;br&gt;
The following are the benefits of page management;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It empowers editors who can do more without a developer.&lt;/li&gt;
&lt;li&gt;Happier developers who can focus on new functionality and enhancements, and less time responding to new content requirements&lt;/li&gt;
&lt;li&gt;Increased productivity&lt;/li&gt;
&lt;li&gt;Fewer resources/expenses are required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-elements-of-page-management"&gt;
  &lt;/a&gt;
  The Elements of Page Management
&lt;/h2&gt;

&lt;p&gt;While checking out Headless CMS vendors, the following are some elements you should consider. However, in this article, we would be using Agility CMS as a reference because they do have robust support for page management.&lt;/p&gt;

&lt;p&gt;There are three things to consider during development, there are;&lt;br&gt;
 Page templates, module definitions, and digital channels and sitemaps. Let's take a look at these three elements. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Page Templates: Templates allow developers to determine a name and a set of modules where content editors can add content. Developers can also write code to render this template into an HTML document. &lt;/li&gt;
&lt;li&gt;Modules: Modules are reusable fields from a header to more complex UI elements such as a sliding image carousel. In short, modules are the building blocks that enable complex websites. &lt;/li&gt;
&lt;li&gt;Digital Channels and Sitemaps: A sitemap is a content structure that developers use to render the website. In Agility CMS, websites have one or more sitemaps defined, each in its channel, enabling multi-site management and granular control over each digital property. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These three things are the bedrock of potential page management headless CMS.&lt;br&gt;
In the next section, we would look at how Agility CMS handles pages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-agility-cms-handles-pages"&gt;
  &lt;/a&gt;
  How Agility CMS Handles Pages
&lt;/h2&gt;

&lt;p&gt;As mentioned in the previous section, let's look at how Agility CMS cares for pages or content in this section;&lt;br&gt;
Agility CMS allows you to define three things that make working with pages accessible for both content editors and developers to work. Developers set up the templates and definitions, while content editors determine how and where they want to use those templates and definitions. This part of the content architecture is fundamental to the success of any CMS solution that includes a website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-templates"&gt;
  &lt;/a&gt;
  Page Templates
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIh11hCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.agilitycms.com/page-template.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIh11hCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.agilitycms.com/page-template.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It allows a developer to determine a template name and a set of module zones that content editors can drop content into using modules. The developer can then write code in the website to render this template into HTML.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#module-definitions"&gt;
  &lt;/a&gt;
  Module Definitions
&lt;/h2&gt;

&lt;p&gt;Modules are the building blocks that enable a content editor to create a complex website structure with tools the developer has set up to succeed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YcP9g01c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.agilitycms.com/resources/diagrams/templates/module-definitions.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YcP9g01c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.agilitycms.com/resources/diagrams/templates/module-definitions.svg" alt="Module Definitions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It allows a developer to define a set of fields to render a reusable item inside a template module zone. It could be a header with a description generated as an &lt;code&gt;&amp;lt;H1&amp;gt;&lt;/code&gt; and an &lt;code&gt;&amp;lt;P&amp;gt;&lt;/code&gt; element. It could be a complex user interface component, such as a slider carousel, contact form, or blog posts listing.&lt;br&gt;
The developer has the choice of what properties the content editor will have to work. These can be simple text, number, or date fields; they can add image or file attachment fields or link to other content defined elsewhere, such as shared content. What's more, those shared content items or lists can then link to other shared content as well!&lt;br&gt;
Fantastic isn’t it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-channels-amp-sitemaps"&gt;
  &lt;/a&gt;
  Digital Channels &amp;amp; Sitemaps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H_97qj3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.agilitycms.com/resources/diagrams/templates/sitemaps-channels.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_97qj3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.agilitycms.com/resources/diagrams/templates/sitemaps-channels.svg" alt="Sitemaps and Digital Channels"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each Agility CMS website can have one or more sitemaps defined, each in its digital channel. It can use each digital channel to control a separate digital property. It could, for example, be for a contest or a completely different branded site.&lt;br&gt;
Essentially a sitemap is a nested content structure which the developer will use to render on the website. Giving the content editor the control to manage multiple page content channels is a compelling and cost-effective way to manage content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shared-content-is-vital"&gt;
  &lt;/a&gt;
  Shared Content is Vital
&lt;/h2&gt;

&lt;p&gt;Agility believes in a "content first" approach to designing your content architecture, and that starts with the shared content section in their suite. It is where all your main lists and items will live, and this is where you'll create most of your content that is reused across multiple destinations or endpoints, such as your app, social networks, etc.&lt;br&gt;
However, the pages section is often the first place to find the content they are working on. Your content teams' primary responsibility is the website itself, and seeing what page something on makes sense to people.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we took a brief dive into the benefits and elements of page management and why one(a developer or editor) should be interested in such a feature as an avenue to create and dynamic content without stress.&lt;br&gt;
No matter how sophisticated a headless CMS vendor package appears, it's essential to know if page management is among their feature they take seriously, especially if you desire to have the pages and contents of your website dynamically structured.&lt;br&gt;
You can also try Agility CMS for (FREE)[&lt;a href="https://agilitycms.com/product/pricing"&gt;https://agilitycms.com/product/pricing&lt;/a&gt;] and spin a new instance with our (Gatsby starter)[&lt;a href="https://agilitycms.com/resources/posts/gatsby-cloud-announces-their-new-partnership-with-agility-cms"&gt;https://agilitycms.com/resources/posts/gatsby-cloud-announces-their-new-partnership-with-agility-cms&lt;/a&gt;].&lt;br&gt;
Let me know what you feel in the comment section below about using page management in a Headless CMS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;(How to Design A Content-First Strategy using Agility CMS)[&lt;a href="https://agilitycms.com/resources/guide/how-to-design-a-content-first-strategy-using-agility-cms"&gt;https://agilitycms.com/resources/guide/how-to-design-a-content-first-strategy-using-agility-cms&lt;/a&gt;] - Agility CMS&lt;/li&gt;
&lt;li&gt;(Strategies For Headless Projects With Structured Content Management Systems)[&lt;a href="https://www.smashingmagazine.com/2018/11/structured-content-done-right/"&gt;https://www.smashingmagazine.com/2018/11/structured-content-done-right/&lt;/a&gt;] - Knut Melvær&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>headless</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>wordpress</category>
    </item>
    <item>
      <title>The definition and path to becoming a freelancer</title>
      <author>Lesly Villalobos</author>
      <pubDate>Fri, 16 Apr 2021 13:02:53 +0000</pubDate>
      <link>https://dev.to/lvtdeveloper/the-definition-and-path-to-becoming-a-freelancer-32p0</link>
      <guid>https://dev.to/lvtdeveloper/the-definition-and-path-to-becoming-a-freelancer-32p0</guid>
      <description>&lt;p&gt;Hi everyone, today I would like to talk about a topic you can relate to, which is the freelancer's journey. Let's start with the following question&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Is being a freelancer a lifestyle and at what point do you stop being a freelancer? &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;If we look up the definition of freelancer, it tells us that it is a person who works on his or her own account to provide services and get paid for it. . Under that definition I have this couple of questions that come to my mind &lt;/p&gt;

&lt;p&gt;&lt;b&gt;How profitable is it to be a freelancer all your life?&lt;br&gt;
What is the motivation that drives you to become a freelancer?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Many colleagues have the vision of the freelancer as the person who travels the world programming, others simply don´t want to have a boss who is giving them orders and others just want to earn more because they don´t have a company that takes a percentage of their profit, the reasons can be endless.&lt;/p&gt;

&lt;p&gt;I personally know people who have high earnings as freelancers, but I also know others who earn on average, the same as they would earn in a company, being this group the largest.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is the biggest disadvantage of being a freelancer?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I think the main disadvantage of being a freelancer is that by depending on yourself, if something happens to you, you stop producing money, that is, you don´t have a backup team to support you and that sometimes tends to become a burden especially when there are people who depend on you economically. That would explain why most freelancers (statistically) are young and single people. So the question is&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Is being a freelancer a lifestyle or is it just a stepping stone to building your own business? &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I think it depends a lot on the perspective, motivation, and situation of each programmer, maybe there are some who would not change their freelancer status for more money or who look for a way to produce a lot of money, and there are others who dare to take that step to the next level by forming a working group or company, which leads to more management responsibility and less code.&lt;/p&gt;

&lt;p&gt;In your case, &lt;b&gt;what is your experience?&lt;/b&gt; I read you.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;br&gt;
Have a nice day, coders💜&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>career</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>6 months of blogging the onion</title>
      <author>Tib</author>
      <pubDate>Fri, 16 Apr 2021 12:46:34 +0000</pubDate>
      <link>https://dev.to/thibaultduponchelle/6-months-of-blogging-the-onion-46i3</link>
      <guid>https://dev.to/thibaultduponchelle/6-months-of-blogging-the-onion-46i3</guid>
      <description>&lt;p&gt;It has been around 6 months since I started to blog &lt;strong&gt;a lot&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I followed the calls from &lt;a href="http://blogs.perl.org/users/gabor_szabo/2020/11/perl-on-devto.html"&gt;Gabor Szabo&lt;/a&gt;, &lt;a href="http://blogs.perl.org/users/joel_berger/2020/09/crosspost-nginxcertbot-recipe.html"&gt;Joel Berger&lt;/a&gt; and &lt;a href="https://perlhacks.com/2020/09/blogging-for-perl/"&gt;Dave Cross&lt;/a&gt; then on top I added &lt;a href="https://dev.to/thibaultduponchelle/a-call-to-perl-bloggers-to-come-on-dev-to-27ee"&gt;mine&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My intention was clearly to setup a "Perl blogging scene" on devto and I feel like it works, see &lt;a href="https://dev.to/t/perl"&gt;#Perl&lt;/a&gt; and numbers from &lt;a href="https://perlweekly.com/stats.html"&gt;perlweekly&lt;/a&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GBuORMoF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qxe3goonfapyvd1folp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GBuORMoF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qxe3goonfapyvd1folp.png" alt="Blogs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The number of blog posts does not decreased on BPO (it was not the goal, I want &lt;em&gt;more&lt;/em&gt; posts, not less!) but the number of posts on &lt;a href="https://dev.to/"&gt;DevTo&lt;/a&gt; increased lot yeah ! 💃&lt;br&gt;
It reached a minimum steady number that make it a viable place to monitor for posts :) (and to make people join and contribute)&lt;/p&gt;

&lt;p&gt;It's a teamwork and I do not deserve much credits, but I did a pretty decent effort (more than 50 blog posts in 6 months):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--og4G7QRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4bwduxct8dxq1u2simz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--og4G7QRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4bwduxct8dxq1u2simz.png" alt="A lot of posts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Will I blog as much for the coming 6 months? Probably not, but I have to say that blogging is very rewarding since I have the feeling to show Perl in a nice way and I have a lot of interactions with great people (comments ❤️). &lt;/p&gt;

&lt;p&gt;It also helps me practice the "art of writing", help me to dig deeper in some areas and suddenly there are so much great blog posts from Perl figures all around!&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/mjgardner"&gt;@mjgardner&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/leontimmermans"&gt;@leontimmermans&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/kraih"&gt;@kraih&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/davorg"&gt;@davorg&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/ovid"&gt;@ovid&lt;/a&gt;
 &lt;a class="mentioned-user" href="https://dev.to/haarg"&gt;@haarg&lt;/a&gt;
  &lt;a class="mentioned-user" href="https://dev.to/tobyink"&gt;@tobyink&lt;/a&gt;
&lt;br&gt;
(I wanted to put more names but there is a limit on how many people I can mention)&lt;/p&gt;

&lt;p&gt;These people are often more successful than me (I have to admit that they produce better blog posts 😃), &lt;strong&gt;Ovid&lt;/strong&gt; had an immediate huge success with Perl-but-generalist posts, that's crazy!  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#hits"&gt;
  &lt;/a&gt;
  Hits
&lt;/h1&gt;

&lt;p&gt;Back to me, my biggest hit is not Perl related but about &lt;a href="https://dev.to/thibaultduponchelle/the-github-action-mining-attack-through-pull-request-2lmc"&gt;how a user triggered a crypto miner in my github action through a malicious pull request&lt;/a&gt;, if you're interested in github actions and security, check it out.&lt;/p&gt;

&lt;p&gt;My other hits (could we really talk about &lt;em&gt;hits&lt;/em&gt;? 😀) are around the topic of Perl and blogging: &lt;a href="https://dev.to/thibaultduponchelle/a-call-to-perl-bloggers-to-come-on-dev-to-27ee"&gt;A call to Perl bloggers to come on DevTo&lt;/a&gt; or &lt;a href="https://dev.to/thibaultduponchelle/to-help-perl-just-blog-9h4"&gt;To help Perl, just blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or around Perl reputation like &lt;a href="https://dev.to/thibaultduponchelle/a-perl-love-letter-20jj"&gt;A Perl love letter&lt;/a&gt; or &lt;a href="https://dev.to/thibaultduponchelle/the-hate-of-perl-in-memes-469e"&gt;The hate of Perl in memes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also made books reviews that I wrote also as a kind of "personal notes". The list of reviews is &lt;a href="https://dev.to/thibaultduponchelle/about-perl-books-review-1cj6"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/t/mojolicious"&gt;Mojolicious related&lt;/a&gt; posts are always well received! Like for instance this &lt;a href="https://dev.to/thibaultduponchelle/simple-live-chart-using-mojolicious-1iej"&gt;Simple live chart using mojolicious&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In between I wrote a lot of posts about toolchain/(Meta)CPAN:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/a-tour-of-perl-github-actions-44lp"&gt;A tour of perl github actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/browse-cpan-modules-per-namespaces-6p"&gt;Browse CPAN modules per namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/new-upload-to-cpan-github-action-4h8j"&gt;My GitHub action to upload to CPAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/cpan-utils-4g4p"&gt;CPAN utils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/adoptaperlmodule-2oh2"&gt;#AdoptAPerlModule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/svg-cpan-logo-gel"&gt;SVG CPAN logo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thibaultduponchelle/install-cpan-modules-from-different-sources-with-cpanminus-5afi"&gt;Install CPAN modules from different sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And do you read my &lt;a href="https://dev.to/thibaultduponchelle/my-tprcic-2020-review-1187"&gt;first post&lt;/a&gt;?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#failures"&gt;
  &lt;/a&gt;
  Failures
&lt;/h2&gt;

&lt;p&gt;To be honest there are also some failures that I consider even more interesting to link 😃&lt;/p&gt;

&lt;p&gt;My parallel between &lt;a href="https://dev.to/thibaultduponchelle/perl-programmers-are-mandalorians-l0b"&gt;Perl devs and Mandalorians&lt;/a&gt; was cool but a bit weird for readers 😃 (but I get some very kind likes)&lt;/p&gt;

&lt;p&gt;I am proud of my serie about JAPHs (what a "risky" topic) but the 2 first episodes &lt;a href="https://dev.to/thibaultduponchelle/japhs-autopsies-1-4939"&gt;JAPHs autopsies 1&lt;/a&gt; and &lt;a href="https://dev.to/thibaultduponchelle/japhs-autopsies-2-41jl"&gt;JAPHs autopsies 2&lt;/a&gt; were almost totally ignored.&lt;/p&gt;

&lt;p&gt;My posts in French never worked but I continued to post them anyway 😀 like &lt;a href="https://dev.to/thibaultduponchelle/book-review-perl-pour-l-impatient-4dfi"&gt;Book review "Perl pour l'impatient"&lt;/a&gt; or this terrible absolutely-no-like &lt;a href="https://dev.to/thibaultduponchelle/critique-de-livre-gimp-2-10-special-debutants-4gio"&gt;Critique de livre : Gimp 2.10 - Special debutants&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aside from Perl, I published some posts about docker (&lt;a href="https://dev.to/thibaultduponchelle/do-you-really-need-to-merge-docker-layers-1j1"&gt;1&lt;/a&gt;, &lt;a href="https://dev.to/thibaultduponchelle/remotely-connect-to-a-running-docker-12id"&gt;2&lt;/a&gt;) or security (&lt;a href="https://dev.to/thibaultduponchelle/billion-laughs-attack-examples-59i"&gt;Billions laughs attack&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;(I'm kidding with "failures" but it is not, I'm not writing for likes)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As I said &lt;a href="https://dev.to/thibaultduponchelle/a-call-to-perl-bloggers-to-come-on-dev-to-27ee"&gt;in my call&lt;/a&gt;, I'm more a blog reader than a writer, so I'm very eager to read &lt;em&gt;your&lt;/em&gt; posts!&lt;/p&gt;

&lt;p&gt;So please dear reader, unleash the writer living in you! 😃&lt;/p&gt;

</description>
      <category>perl</category>
      <category>blogging</category>
      <category>devto</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Global Beverage Multipacks Market Overview: 2020-2026
</title>
      <author>Ram Vasekar</author>
      <pubDate>Fri, 16 Apr 2021 12:26:41 +0000</pubDate>
      <link>https://dev.to/ram_maximize/global-beverage-multipacks-market-overview-2020-2026-3al2</link>
      <guid>https://dev.to/ram_maximize/global-beverage-multipacks-market-overview-2020-2026-3al2</guid>
      <description>&lt;p&gt;Global Beverage Multipacks Market . 2019 has been considered as base year to estimate the market and same is forecasted through 2021 to 2026 by giving special focus and different treatment to 2020. The report forecast that by value Beverage Multipacks market will touch USD XX Bn. by 2026. The report has covered the market drivers, restraints and fluctuations in demand in different countries by region with special focus on demand and supply from China, India, Taiwan in Asia and USA, France, UK, Russia in western countries. Government regulations, different government’s special incentives and trade agreements in countries are going to have moderate impact on the demand and supply on Beverage Multipacks market.&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market&lt;/p&gt;

&lt;p&gt;The Beverage Multipacks faced several challenges in 2020 including Covid lock down and sudden decrease in demand for semiconductors, however, the demand is expected to normalize in 2021 and is expected to pick up in 2022, which is covered in the report in the growth drivers chapter.&lt;/p&gt;

&lt;p&gt;Request For View Sample Beverage Multipacks Market Report Page : &lt;a href="https://www.maximizemarketresearch.com/request-sample/86024"&gt;https://www.maximizemarketresearch.com/request-sample/86024&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beverage Multipacks Market report is Segmented by&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market 2&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market Segmentation by Region&lt;/p&gt;

&lt;p&gt;• North America:&lt;br&gt;
o US&lt;br&gt;
o Canada&lt;br&gt;
o Mexico&lt;br&gt;
• South America&lt;br&gt;
o Brazil&lt;br&gt;
o Argentina&lt;br&gt;
o Colombia&lt;br&gt;
o Rest of South America&lt;br&gt;
• Europe&lt;br&gt;
o UK&lt;br&gt;
o Germany&lt;br&gt;
o France&lt;br&gt;
o Spain&lt;br&gt;
o Italy&lt;br&gt;
o Sweden&lt;br&gt;
o CIS countries&lt;br&gt;
o Rest of Europe&lt;br&gt;
• APAC&lt;br&gt;
o China&lt;br&gt;
o India&lt;br&gt;
o South Korea&lt;br&gt;
o Japan&lt;br&gt;
o Australia&lt;br&gt;
o Rest of APAC&lt;br&gt;
o ASEAN&lt;br&gt;
 Indonesia&lt;br&gt;
 Malaysia&lt;br&gt;
 Singapore&lt;br&gt;
 Philippines&lt;br&gt;
 Thailand&lt;br&gt;
 Vietnam&lt;br&gt;
• Middle East &amp;amp; Africa&lt;br&gt;
o GCC Countries&lt;br&gt;
o South Africa&lt;br&gt;
o Nigeria&lt;br&gt;
o Egypt&lt;br&gt;
o Rest of MEA&lt;br&gt;
• Latin America&lt;br&gt;
o Mexico&lt;br&gt;
o Brazil&lt;br&gt;
o Rest of Latin America&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market Major Players&lt;/p&gt;

&lt;p&gt;• World Label Holdings Inc.&lt;br&gt;
• Graphic Packaging&lt;br&gt;
• Pack Service S.A.&lt;br&gt;
• Pry-Pak Inc.&lt;br&gt;
• MeadWestvaco Corporation&lt;br&gt;
• Cott Beverages Ltd.&lt;br&gt;
• WestRock Company&lt;br&gt;
• Hi-Cone&lt;br&gt;
• Mayr-Melnhof Packaging&lt;br&gt;
• Coveris Holdings Sa&lt;br&gt;
• Ceisa Semo&lt;br&gt;
• Clondalkin Group&lt;br&gt;
• RKW&lt;br&gt;
• Amcor Plc&lt;br&gt;
• Berry Global Inc.&lt;br&gt;
• Plastotecnica SpA&lt;br&gt;
• Clearpack group&lt;br&gt;
• Sarkina&lt;br&gt;
• Baroda Packaging&lt;/p&gt;

&lt;p&gt;Do Inquiry Before Purchasing Market Beverage Multipacks Report Here : &lt;a href="https://www.maximizemarketresearch.com/inquiry-before-buying/86024"&gt;https://www.maximizemarketresearch.com/inquiry-before-buying/86024&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By region, Beverage Multipacks Market is segmented by North America, South America, Europe, Middle East and APAC. The APAC market has further given the deep analysis of ASEAN countries separately in the report.&lt;/p&gt;

&lt;p&gt;The report has profiled key players in the market by their size and presence by regions. Since, there are limitation to profile all the kay player, representation is given to companies by region, sales revenue, expenditure on technology, expansion plans, investments received, involved in M&amp;amp;A.&lt;/p&gt;

&lt;p&gt;Browse Complete Beverage Multipacks Report details with ToC and List Of Figures Here: &lt;a href="https://www.maximizemarketresearch.com/market-report/global-beverage-multipacks-market/86024/"&gt;https://www.maximizemarketresearch.com/market-report/global-beverage-multipacks-market/86024/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About Maximize Market Research:&lt;/p&gt;

&lt;p&gt;Maximize Market Research has served esteemed clients including Yamaha, Boeing, Sensata, Etnyre, Canada, ALCOR M&amp;amp;A, Microsoft, Harman, and other 200 MNCs worldwide. The Company provides B2B and B2C market research on 5000 high growth emerging technologies &amp;amp; opportunities in Transportation, Chemical, Healthcare, Pharmaceuticals, Electronics &amp;amp; Communications, Internet of Things, Food and Beverages, Aerospace and Defense and other manufacturing sectors.&lt;br&gt;
We, at Maximize Market Research, are a strong unified team of industry specialists and analysts across sectors to ensure entire Industry ecosystem is taken in perspective, factoring all recent development, latest trends and futuristic – the technological impact of uniquely specific industries. In line with the agreed scope and objective of the study, our approach is uniquely custom detailed&lt;/p&gt;

&lt;p&gt;Contact Us:&lt;br&gt;
Maximize Market Research Pvt ltd.&lt;br&gt;
Email: &lt;a href="mailto:sales@maximizemarketresearch.com"&gt;sales@maximizemarketresearch.com&lt;/a&gt;&lt;br&gt;
Website: &lt;a href="http://www.maximizemarketresearch.com"&gt;www.maximizemarketresearch.com&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Global Central Drive Thickener Market – Industry Analysis and Forecast (2020-2026)</title>
      <author>Ram Vasekar</author>
      <pubDate>Fri, 16 Apr 2021 12:22:55 +0000</pubDate>
      <link>https://dev.to/ram_maximize/global-central-drive-thickener-market-industry-analysis-and-forecast-2020-2026-323n</link>
      <guid>https://dev.to/ram_maximize/global-central-drive-thickener-market-industry-analysis-and-forecast-2020-2026-323n</guid>
      <description>&lt;p&gt;Global Central Drive Thickener Market . 2019 has been considered as base year to estimate the market and same is forecasted through 2021 to 2026 by giving special focus and different treatment to 2020. The report forecast that by value Central Drive Thickener market will touch USD XX Bn. by 2026. The report has covered the market drivers, restraints and fluctuations in demand in different countries by region with special focus on demand and supply from China, India, Taiwan in Asia and USA, France, UK, Russia in western countries. Government regulations, different government’s special incentives and trade agreements in countries are going to have moderate impact on the demand and supply on Central Drive Thickener market.&lt;/p&gt;

&lt;p&gt;Global Central Drive Thickener Market&lt;/p&gt;

&lt;p&gt;The Central Drive Thickener faced several challenges in 2020 including Covid lock down and sudden decrease in demand for semiconductors, however, the demand is expected to normalize in 2021 and is expected to pick up in 2022, which is covered in the report in the growth drivers chapter.&lt;/p&gt;

&lt;p&gt;Request For View Sample Central Drive Thickener Market Report Page : &lt;a href="https://www.maximizemarketresearch.com/request-sample/85874"&gt;https://www.maximizemarketresearch.com/request-sample/85874&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Central Drive Thickener Market report is Segmented by&lt;/p&gt;

&lt;p&gt;Global Central Drive Thickener Market 2&lt;/p&gt;

&lt;p&gt;Global Central Drive Thickener Market, by Region&lt;/p&gt;

&lt;p&gt;• North America&lt;br&gt;
• Europe&lt;br&gt;
• Asia Pacific&lt;br&gt;
• Middle East &amp;amp; Africa&lt;br&gt;
• South America&lt;/p&gt;

&lt;p&gt;Key Players of the Global Central Drive Thickener Market&lt;/p&gt;

&lt;p&gt;• Bio Tech Envirocare Systems Pvt. Ltd.&lt;br&gt;
• EUROPELEC&lt;br&gt;
• Hook Service s.r.l.&lt;br&gt;
• Hubert Stavoren B.V.&lt;br&gt;
• Outotec Oyj&lt;br&gt;
• Parason Machinery Pvt. Ltd.&lt;br&gt;
• SAVI S.r.l.&lt;br&gt;
• SERECO S.r.l.&lt;br&gt;
• Shandong Xinhai Mining Technology &amp;amp; Equipment Inc&lt;br&gt;
• Shivpad Thickeners&lt;/p&gt;

&lt;p&gt;Do Inquiry Before Purchasing Market Central Drive Thickener Report Here : &lt;a href="https://www.maximizemarketresearch.com/inquiry-before-buying/85874"&gt;https://www.maximizemarketresearch.com/inquiry-before-buying/85874&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By region, Central Drive Thickener Market is segmented by North America, South America, Europe, Middle East and APAC. The APAC market has further given the deep analysis of ASEAN countries separately in the report.&lt;/p&gt;

&lt;p&gt;The report has profiled key players in the market by their size and presence by regions. Since, there are limitation to profile all the kay player, representation is given to companies by region, sales revenue, expenditure on technology, expansion plans, investments received, involved in M&amp;amp;A.&lt;/p&gt;

&lt;p&gt;Browse Complete Central Drive Thickener Report details with ToC and List Of Figures Here: &lt;a href="https://www.maximizemarketresearch.com/market-report/global-central-drive-thickener-market/85874/"&gt;https://www.maximizemarketresearch.com/market-report/global-central-drive-thickener-market/85874/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About Maximize Market Research:&lt;/p&gt;

&lt;p&gt;Maximize Market Research has served esteemed clients including Yamaha, Boeing, Sensata, Etnyre, Canada, ALCOR M&amp;amp;A, Microsoft, Harman, and other 200 MNCs worldwide. The Company provides B2B and B2C market research on 5000 high growth emerging technologies &amp;amp; opportunities in Transportation, Chemical, Healthcare, Pharmaceuticals, Electronics &amp;amp; Communications, Internet of Things, Food and Beverages, Aerospace and Defense and other manufacturing sectors.&lt;br&gt;
We, at Maximize Market Research, are a strong unified team of industry specialists and analysts across sectors to ensure entire Industry ecosystem is taken in perspective, factoring all recent development, latest trends and futuristic – the technological impact of uniquely specific industries. In line with the agreed scope and objective of the study, our approach is uniquely custom detailed&lt;/p&gt;

&lt;p&gt;Contact Us:&lt;br&gt;
Maximize Market Research Pvt ltd.&lt;br&gt;
Email: &lt;a href="mailto:sales@maximizemarketresearch.com"&gt;sales@maximizemarketresearch.com&lt;/a&gt;&lt;br&gt;
Website: &lt;a href="http://www.maximizemarketresearch.com"&gt;www.maximizemarketresearch.com&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why hiring Golang Development company from India is the best option?
</title>
      <author>Alexis Gilbert</author>
      <pubDate>Fri, 16 Apr 2021 12:20:21 +0000</pubDate>
      <link>https://dev.to/alexisdevs/why-hiring-golang-development-company-from-india-is-the-best-option-2n5l</link>
      <guid>https://dev.to/alexisdevs/why-hiring-golang-development-company-from-india-is-the-best-option-2n5l</guid>
      <description>&lt;p&gt;Since Golang was launched in 2009 it took a long way to get a significant place in the Developing community. However, by the time it has proven its place in concurrent programming.&lt;/p&gt;

&lt;p&gt;Often the beginner entrepreneurs have backend golang requirements and also have a significant budget to acquire the best talent across the globe but even having a strong backup of resources they cant get quality performance even after spending chunks of money and efforts after it.&lt;/p&gt;

&lt;p&gt;If we look at the global &lt;strong&gt;Golang development services&lt;/strong&gt;, India is emerging as a promising one-stop destination for all sorts of Golang development requirements, whether be it Golang mobile app development or full stack development with the Golang technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7NiYiDQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqxln9ihoxobife76mqf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7NiYiDQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqxln9ihoxobife76mqf.jpeg" alt="Golang Development Services"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s discover what are some crucial factors which make India ranking at the top position in providing Golang Development companies.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deployment-of-quality-resources"&gt;
  &lt;/a&gt;
  Deployment of quality resources:
&lt;/h1&gt;

&lt;p&gt;India has several Golang Development companies within the country itself. Therefore, if the potential companies have to sustain and have in-demand they have to top up their game and provide excellent resources to the service.&lt;/p&gt;

&lt;p&gt;This way to beat the competition the development companies must have to provide profound services so you should never worry regarding whether the resources will be worth enough the money you are spending or not because they will always be top of the game!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#saves-time-and-efforts"&gt;
  &lt;/a&gt;
  Saves time and efforts
&lt;/h1&gt;

&lt;p&gt;Hiring, training, and maintaining is a long and tedious process for employers and in such case, if your project doesn’t require much of the developing services, going through this entire process is clearly a waste of resources.&lt;/p&gt;

&lt;p&gt;To avoid such clumsy processes, hiring from a globally renowned Golang Development company is a comparatively convenient option as it saves your time efforts by providing exceptional results.&lt;/p&gt;

&lt;p&gt;Who doesn’t want that?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#costeffective-hiring-solutions"&gt;
  &lt;/a&gt;
  Cost-effective Hiring solutions:
&lt;/h1&gt;

&lt;p&gt;The prices of European and American regions for Golang Development is quite expensive compared to East Europe and especially Indian Region.&lt;br&gt;
Once again the competition is so tight in India therefore prices have to be low or competitive to get ahead of other competitors.&lt;/p&gt;

&lt;p&gt;Apparently, often the Indian price ranges are tentatively less than half of the European developing companies are charging.&lt;/p&gt;

&lt;p&gt;This economic situation is proven to be advantageous to the Golang Development Service seekers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cultural-flexibility"&gt;
  &lt;/a&gt;
  Cultural Flexibility
&lt;/h1&gt;

&lt;p&gt;Most of the globally renowned and leading Golang Development Company in India is following Agile Culture, &lt;/p&gt;

&lt;p&gt;Yes, this is quite a popular culture in every leading fortune company around the globe.&lt;/p&gt;

&lt;p&gt;And imagine the Golang Development Service providers following the same professional culture can save you from doing a lot of efforts that you would have to do if you would have to face cultural differences!&lt;/p&gt;

&lt;p&gt;So who wouldn’t mind a little extra convenience!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#enormous-talent-pool"&gt;
  &lt;/a&gt;
  Enormous talent pool
&lt;/h1&gt;

&lt;p&gt;In Indian culture passing out from good  Engineering is considered a prestigious thing among Indian families therefore, since childhood they plan on providing higher education to their next generation.&lt;/p&gt;

&lt;p&gt;This upbringing naturally results in having expertise and high scale talent among Indian generations.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#exceptional-247-support"&gt;
  &lt;/a&gt;
  Exceptional 24/7 support
&lt;/h1&gt;

&lt;p&gt;In India, the IT sector is organized in such a way that they always have this belief about the industry that this is a time-sensitive industry if you don’t be there when your client wants you, he will turn his back to someone else.&lt;/p&gt;

&lt;p&gt;This keeps them always up with their game when it comes to serving their international clients with utmost dedication and hard work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#english-speaking-programmers"&gt;
  &lt;/a&gt;
  English Speaking Programmers
&lt;/h1&gt;

&lt;p&gt;After USA, India is considered the second-largest English-speaking country where most of the people speak English fluently. &lt;/p&gt;

&lt;p&gt;The Golang Development companies in India always aspire fluent in English Golang Developers as they aim to serve international clients. Therefore, the hired experts are already been proficient with communication skills especially when it comes to English.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#all-golang-development-services-under-one-roof"&gt;
  &lt;/a&gt;
  All Golang Development services under one roof
&lt;/h1&gt;

&lt;p&gt;Most of the Golang Development Companies in India have a profoundly balanced blend of Golang Developers handling various functionalities like Golang AI development, Mobile app development, or Golang cloud and networking services.&lt;/p&gt;

&lt;p&gt;All of these functionalities under one roof that too with the flexibility of timezone, It’s like a cherry on the top!&lt;/p&gt;

&lt;p&gt;To wrap it up, there are multiple advantages of Hiring the &lt;strong&gt;Golang Development Services&lt;/strong&gt; from India. However, make sure you examine and verify the authenticity of the &lt;a href="https://www.bacancytechnology.com/golang-development"&gt;&lt;em&gt;Golang Development company&lt;/em&gt;&lt;/a&gt; by their past work and leverage their expert services by scheduling the interview with their senior Golang Developers and getting started with your business project! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#additional-information"&gt;
  &lt;/a&gt;
  Additional Information
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bacancytechnology.com/blog/golang-error-handling"&gt;Golang Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bacancytechnology.com/blog/tips-and-tricks-to-improve-the-performance-of-your-golang-application"&gt;Tips and Tricks to Improve The Performance of Your Golang 
Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bacancytechnology.com/blog/golang-jwt"&gt;How to Implement Golang JWT Authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
      <category>go</category>
    </item>
    <item>
      <title>Insurtech Market To Witness The Highest Gains by 2025</title>
      <author>Shweta Karanjekar</author>
      <pubDate>Fri, 16 Apr 2021 12:19:37 +0000</pubDate>
      <link>https://dev.to/shwetakaranjek1/insurtech-market-to-witness-the-highest-gains-by-2025-3kne</link>
      <guid>https://dev.to/shwetakaranjek1/insurtech-market-to-witness-the-highest-gains-by-2025-3kne</guid>
      <description>&lt;p&gt;The global &lt;a href="https://www.millioninsights.com/industry-reports/global-insurtech-market/request-sample?utm_source=Dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=Shweta_16april2021"&gt;insurtech market&lt;/a&gt; size is anticipated to value USD 16.8 billion until 2025. It is also expected to register a CAGR of 43.0% over the forecasted years, 2019 to 2025. The rising usage of advanced technologies like AI (Artificial Intelligence) and ML (Machine Learning) across many insurance companies for targeting customers and maintaining their records is projected to drive market growth.&lt;/p&gt;

&lt;p&gt;The cloud computing technology segment is projected to witness significant growth due to rising consumer demand for hybrid and customized services related to insurance. While the blockchain technological segment is anticipated to register 44.9% CAGR from 2019 to 2025 due to the need for enhancing operational speed and transparency in the process of insurance claims.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get Free PDF Sample Copy of the Report (Including Full TOC, List of Tables &amp;amp; Figures, Chart and Covid-19 Impact Analysis) : &lt;a href="https://bit.ly/3uYZV2j"&gt;https://bit.ly/3uYZV2j&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Key Questions Answered in this report :-&lt;br&gt;
• What are the sales or revenue produced by Organic Deodorant products beyond all sectors during the forecast period?&lt;br&gt;
• What are the key trends in the Organic Deodorant market?&lt;br&gt;
• What are the leading drivers, limitations, and probabilities in the industry?&lt;br&gt;
• Which segment will gain the highest revenue worldwide and which product segment will expand at the fastest CAGR during the forecast period?&lt;br&gt;
• In which region the Organic Deodorant market to project lucrative CAGR during the forecast period?&lt;/p&gt;

&lt;p&gt;Nykaa one of the leading brands aims to launch 30 physical stores across India by 2020, to widen its brand visibility. Additionally, the brand also plans to introduce 90 offline outlets for the Nykaa Luxe Nykaa On Trend outlets by 2020.&lt;/p&gt;

&lt;p&gt;Supermarkets/hypermarkets held a share of 57.9% in global revenue in 2018. Benefits such as physical display and verification attribute to the rising sales of supermarkets and hypermarkets. The multiple campaigns organized by renowned brands further contribute to increase in the sales of this segment.&lt;/p&gt;

&lt;p&gt;For example, Credo Beauty, in the U.S., had launched six outlets between 2017 and 2018. Moreover, the company aimed to introduce several offline stores in the upcoming years. The growing number of organic products oriented stores is predicted to have a positive impact on the organic deodorants market over the forecast period.&lt;/p&gt;

&lt;p&gt;Sprays held the largest market share of 46.5% in 2018. The growth is attributed to the products’ feature such as long durability and extensive adoption by Indians. Stick deodorants held the dominant position in the U.S. market in the past, however, with the shifting preference for sprays, the stick segment is expected to observe a decline in its sales in the future.&lt;/p&gt;

&lt;p&gt;A French company Laboratoire Saint Come, launched the Natural Body Deodorant that prevents odor through active molecules in its formulation by soaking them. The products contains 70% natural alcohol and are packed using a 100% recyclable bottle.&lt;/p&gt;

&lt;p&gt;Further key findings from the report suggest:&lt;br&gt;
• APAC is predicted to grow at the fastest rate due to the increased availability and product development of chemical-free products preferred by the customers in India.&lt;br&gt;
• Europe held a share of 34.8% in 2018 while North America held 22.9% share in the global revenue.&lt;br&gt;
• Based on type, sprays held the highest share of 46.5% in 2018 while sticks/creams are predicted to grow at the fastest rate from 2019 to 2025.&lt;/p&gt;

&lt;p&gt;Global Organic Deodorant Market: Key Players&lt;br&gt;
Unilever, Alverde, Elsa's Organic Skin Foods, SPEICK Natural Cosmetics, Lavera, Weleda, Sebamed, Indus Valley, Lavanila Laboratories, Truly's Natural Products, Erbaviva, Spirit Nest, Sky Organics, and EO Products.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Know More Insights @ &lt;a href="https://newsonmarketblog.wordpress.com"&gt;https://newsonmarketblog.wordpress.com&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

</description>
      <category>globalinsurtechmarket</category>
    </item>
    <item>
      <title>One Missing Ingredient In Growing Twitter Account I Found After Went From 0 To 23,000 Followers</title>
      <author>Nick Bull</author>
      <pubDate>Fri, 16 Apr 2021 12:19:10 +0000</pubDate>
      <link>https://dev.to/nickbulljs/one-missing-ingredient-in-growing-twitter-account-i-found-after-went-from-0-to-23-000-followers-40m6</link>
      <guid>https://dev.to/nickbulljs/one-missing-ingredient-in-growing-twitter-account-i-found-after-went-from-0-to-23-000-followers-40m6</guid>
      <description>&lt;p&gt;Building a Twitter audience is a road to failure without one thing.&lt;/p&gt;

&lt;p&gt;What all “Twitter guides” tell you (saving you $100+):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Tweet high-quality content a couple of times per day&lt;/li&gt;
&lt;li&gt;  Engage with large accounts&lt;/li&gt;
&lt;li&gt;  Be always kind to your followers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Honestly, it’ll work.&lt;/p&gt;

&lt;p&gt;Yet, you’ll fail.&lt;/p&gt;

&lt;p&gt;“Why?” you probably asking.&lt;/p&gt;

&lt;p&gt;Because you don’t want to build just an audience, it’s something else, am I right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your end goal is to build an audience that will help you to achieve your goals, not the audience itself.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Common goals I often see:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Increase personal brand awareness&lt;/li&gt;
&lt;li&gt;Build distribution channel and sell digital products&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But without one thing, a huge amount of followers won’t help you to achieve your goals.&lt;/p&gt;

&lt;p&gt;I learned it myself when I seriously started my audience-building journey in November 2020. I also blindly followed those “Twitter account growth” steps above. And the count of followers grew. But something was not right. I felt it.&lt;/p&gt;

&lt;p&gt;You know, it’s like when you do something by instruction but still feeling that something is missing. I have exact same feeling after a couple of months of building a Twitter account. Just the inner feeling that I couldn’t find even with deep reflection sessions. The funny thing is that I knew exactly what I was missing, but I didn't realize it. I was blind. I think because I was just building an audience not “full time”. But anyway, when I finally found what I was missing and applied it, things started to get better. My inner feeling of “something not right here” disappeared.&lt;/p&gt;

&lt;p&gt;So, what one thing did I miss?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trust.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you're just building an audience, you're disconnected from them and they're disconnected from you. Yeah, your audience subscribed to you because you are posting something useful or viral, and maybe some people even like you, but I’m betting most of them don't trust you.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Because when you &lt;em&gt;just&lt;/em&gt; build an audience with quality content and engaging with bigger accounts, you feel like another account that “growing here” for people. I can simply replace you with the good trained GPT-3 Twitter bot, and no one will understand that it’s a bot. People don’t &lt;em&gt;trust&lt;/em&gt; such accounts anymore. &lt;strong&gt;Now stop!&lt;/strong&gt; And re-read the previous sentence. Noticed this phrase? “people don’t trust such accounts” Getting the point? You are an “account” for them, not a person. That’s the problem. &lt;strong&gt;That’s why the audience doesn’t trust you.&lt;/strong&gt; That’s why so many accounts showing up every day and have almost zero followers. That’s why big accounts can’t sell a thing to their audience. They are accounts and not persons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trust is the key.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course, high-quality content is needed, but without trust, you’ll &lt;em&gt;just&lt;/em&gt; build an audience and not an audience that will help you achieve your goals.&lt;/p&gt;

&lt;p&gt;“How to build &lt;em&gt;that&lt;/em&gt; trust and the audience that trusts you?”&lt;/p&gt;

&lt;p&gt;Good question.&lt;/p&gt;

&lt;p&gt;Ask yourself, what makes you buy from [PASTE HERE YOUR FAVORITE PERSONAL BRAND]?&lt;/p&gt;

&lt;p&gt;Like if you a fan of Kylie Jenner, what makes you buy Kylie Cosmetics? (my friend influenced this example)&lt;/p&gt;

&lt;p&gt;What makes you &lt;em&gt;trust&lt;/em&gt; Kylie that you actually go to her website and buy something from her?&lt;/p&gt;

&lt;p&gt;I will answer for you, it’s her &lt;strong&gt;personality.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You somehow share her views, values, and many other things that make you want to be like her or just help her in some way. Because her personality resonates with you, you trust this person.&lt;/p&gt;

&lt;p&gt;But how she built &lt;em&gt;that trust&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;By sharing her &lt;strong&gt;personality&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sharing personal stories, views, and actions. You know about them, share them, and see that she is a real person because of them. And not just another IG account.&lt;/p&gt;

&lt;p&gt;If Kylie Jenner would share with you only beautiful photos, would you trust her and her brand?&lt;/p&gt;

&lt;p&gt;You will never buy a single item from her.&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;if you want to build a Twitter audience that will help you achieve your goals, you should build trust.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And the formula is simple: &lt;strong&gt;high-quality content + personality.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Nick, if I have a Twitter account, how can I tell if I have trust or not?”&lt;/p&gt;

&lt;p&gt;If you ask this question, you already lack it. But here’s the simple test:&lt;/p&gt;

&lt;p&gt;Imagine that some random person creates an account on Twitter and starts posting your content. Will your followers found a difference between you and this person? If the answer is NO, then you lack trust.&lt;/p&gt;




&lt;p&gt;Who knew that posting useful and high-quality content is not enough.&lt;/p&gt;




&lt;p&gt;If you like this article you need to know that every Monday, I send my "3-2-1" newsletter for Web Developers with 3 hand-picked articles from the tech world, 2 web development guides, and 1 best Tweet of the week&lt;/p&gt;

&lt;p&gt;Try to join 3,200+ web developers &lt;a href="https://nickbulljs.com/3-2-1/"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>twitter</category>
    </item>
    <item>
      <title>Solution: Remove All Adjacent Duplicates in String II</title>
      <author>seanpgallivan</author>
      <pubDate>Fri, 16 Apr 2021 12:17:29 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-remove-all-adjacent-duplicates-in-string-ii-431f</link>
      <guid>https://dev.to/seanpgallivan/solution-remove-all-adjacent-duplicates-in-string-ii-431f</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/discuss/1161314"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1209-medium-remove-all-adjacent-duplicates-in-string-ii"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/"&gt;Leetcode Problem #1209 (&lt;em&gt;Medium&lt;/em&gt;): Remove All Adjacent Duplicates in String II&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a string &lt;code&gt;s&lt;/code&gt;, a &lt;code&gt;k&lt;/code&gt; duplicate removal consists of choosing &lt;code&gt;k&lt;/code&gt; adjacent and equal letters from &lt;code&gt;s&lt;/code&gt; and removing them causing the left and the right side of the deleted substring to concatenate together.&lt;/p&gt;

&lt;p&gt;We repeatedly make &lt;code&gt;k&lt;/code&gt; duplicate removals on &lt;code&gt;s&lt;/code&gt; until we no longer can.&lt;/p&gt;

&lt;p&gt;Return the final string after all such duplicate removals have been made.&lt;/p&gt;

&lt;p&gt;It is guaranteed that the answer is unique.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s = "abcd", k = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;"abcd"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;There's nothing to delete.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s = "deeedbbcccbdaa", k = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;"aa"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;First delete "eee" and "ccc", get "ddbbbdaa"&lt;br&gt;Then delete "bbb", get "dddaa"&lt;br&gt;Finally delete "ddd", get "aa"&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s = "pbbcggttciiippooaais", k = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;"ps"&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= s.length &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2 &amp;lt;= k &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;s&lt;/code&gt; only contains lower case English letters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;




&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note: This is part of a series of Leetcode solution explanations. If you like this solution or find it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post.)&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Whenever we have to iterate through a data type and remove potentially nested information, the natural thought is to use some kind of &lt;strong&gt;stack&lt;/strong&gt; or &lt;strong&gt;recursive&lt;/strong&gt; solution to keep track of the nesting data while we search for our matches.&lt;/p&gt;

&lt;p&gt;In a naive recursive solution, we can search for a pattern match by keeping track of the current &lt;strong&gt;count&lt;/strong&gt; of adjacent duplicates, then recursively call the main function again on the string with the pattern removed. This solution repeatedly iterates through most of the string, but otherwise has low overhead, so it tends to be competitively performant, especially for shorter strings.&lt;/p&gt;

&lt;p&gt;In an effort to achieve a more efficient solution for longer strings, we can instead use a stack to build our answer. To avoid having to backtrack up to the last &lt;strong&gt;K&lt;/strong&gt; elements of our stack after removing a match, we can keep a separate stack (&lt;strong&gt;st&lt;/strong&gt;) just specifically for index values of the start of each duplicate run.&lt;/p&gt;

&lt;p&gt;To save on space, we can also use an &lt;strong&gt;in-place stack&lt;/strong&gt; approach for the char array (&lt;strong&gt;SC&lt;/strong&gt;) formed from the input string (&lt;strong&gt;S&lt;/strong&gt;), rather than using a separate stack. To do so, we can use a &lt;strong&gt;two-pointer system&lt;/strong&gt; in which one pointer (&lt;strong&gt;i&lt;/strong&gt;) keeps track of the end of the in-place "stack", while the other pointer (&lt;strong&gt;j&lt;/strong&gt;) iterates through &lt;strong&gt;SC&lt;/strong&gt; normally.&lt;/p&gt;

&lt;p&gt;As we move &lt;strong&gt;j&lt;/strong&gt; through &lt;strong&gt;SC&lt;/strong&gt;, we write to the "stack" by overwriting &lt;strong&gt;SC[i]&lt;/strong&gt; with &lt;strong&gt;SC[j]&lt;/strong&gt;. When we want to remove &lt;strong&gt;K&lt;/strong&gt; elements from the "stack", we just move &lt;strong&gt;i&lt;/strong&gt; back by &lt;strong&gt;K&lt;/strong&gt;. Then, once we're done, we can &lt;strong&gt;return&lt;/strong&gt; the "stack", which is the first part of &lt;strong&gt;SC&lt;/strong&gt; through &lt;strong&gt;i&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This solution has more overhead, but won't repeat as many iterations, so it should be more efficient for longer strings.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;C++ alone has mutable strings and doesn't require &lt;strong&gt;S&lt;/strong&gt; to be split into a char array before processing as an &lt;strong&gt;in-place stack&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;chr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;chr&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;peek&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;String&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Global Urological Cancer Market- Industry Analysis, Growth, Segmentation, Trends and Forecast 2020-2026
</title>
      <author>Ram Vasekar</author>
      <pubDate>Fri, 16 Apr 2021 12:15:05 +0000</pubDate>
      <link>https://dev.to/ram_maximize/global-urological-cancer-market-industry-analysis-growth-segmentation-trends-and-forecast-2020-2026-kkg</link>
      <guid>https://dev.to/ram_maximize/global-urological-cancer-market-industry-analysis-growth-segmentation-trends-and-forecast-2020-2026-kkg</guid>
      <description>&lt;p&gt;Global Urological Cancer Market . 2019 has been considered as base year to estimate the market and same is forecasted through 2021 to 2026 by giving special focus and different treatment to 2020. The report forecast that by value Urological Cancer market will touch USD XX Bn. by 2026. The report has covered the market drivers, restraints and fluctuations in demand in different countries by region with special focus on demand and supply from China, India, Taiwan in Asia and USA, France, UK, Russia in western countries. Government regulations, different government’s special incentives and trade agreements in countries are going to have moderate impact on the demand and supply on Urological Cancer market.&lt;/p&gt;

&lt;p&gt;The Urological Cancer faced several challenges in 2020 including Covid lock down and sudden decrease in demand for semiconductors, however, the demand is expected to normalize in 2021 and is expected to pick up in 2022, which is covered in the report in the growth drivers chapter.&lt;/p&gt;

&lt;p&gt;Request For View Sample Urological Cancer Market Report Page : &lt;a href="https://www.maximizemarketresearch.com/request-sample/85866"&gt;https://www.maximizemarketresearch.com/request-sample/85866&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Urological Cancer Market report is Segmented by&lt;/p&gt;

&lt;p&gt;By Region:&lt;/p&gt;

&lt;p&gt;• North America&lt;br&gt;
• Europe&lt;br&gt;
• South America&lt;br&gt;
• MEA&lt;br&gt;
• APAC&lt;/p&gt;

&lt;p&gt;Key Players:&lt;/p&gt;

&lt;p&gt;• Pfizer Inc.&lt;br&gt;
• Novartis International AG&lt;br&gt;
• Johnson &amp;amp; Johnson Private Limited&lt;br&gt;
• Astellas Pharma Inc&lt;br&gt;
• AstraZeneca Plc.&lt;br&gt;
• GlaxoSmithKline plc&lt;br&gt;
• Sanofi S.A.&lt;br&gt;
• Celgene Corporation&lt;br&gt;
• Eli Lilly and Company&lt;br&gt;
• Bristol-Myers Squibb Company&lt;br&gt;
• F. Hoffmann-La Roche AG.&lt;br&gt;
• Kyowa Hakko Kirin Co., Ltd.&lt;br&gt;
• Boehringer Ingelheim GmbH&lt;br&gt;
• Ferring Pharmaceuticals&lt;br&gt;
• Dendreon Corporation&lt;br&gt;
• Abbott Laboratories&lt;br&gt;
• Roche Healthcare&lt;br&gt;
• Indevus Pharmaceuticals Inc&lt;br&gt;
• Ipsen&lt;/p&gt;

&lt;p&gt;Do Inquiry Before Purchasing Market Urological Cancer Report Here : &lt;a href="https://www.maximizemarketresearch.com/inquiry-before-buying/85866"&gt;https://www.maximizemarketresearch.com/inquiry-before-buying/85866&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By region, Urological Cancer Market is segmented by North America, South America, Europe, Middle East and APAC. The APAC market has further given the deep analysis of ASEAN countries separately in the report.&lt;/p&gt;

&lt;p&gt;The report has profiled key players in the market by their size and presence by regions. Since, there are limitation to profile all the kay player, representation is given to companies by region, sales revenue, expenditure on technology, expansion plans, investments received, involved in M&amp;amp;A.&lt;/p&gt;

&lt;p&gt;Browse Complete Urological Cancer Report details with ToC and List Of Figures Here: &lt;a href="https://www.maximizemarketresearch.com/market-report/global-urological-cancer-market/85866/"&gt;https://www.maximizemarketresearch.com/market-report/global-urological-cancer-market/85866/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About Maximize Market Research:&lt;/p&gt;

&lt;p&gt;Maximize Market Research has served esteemed clients including Yamaha, Boeing, Sensata, Etnyre, Canada, ALCOR M&amp;amp;A, Microsoft, Harman, and other 200 MNCs worldwide. The Company provides B2B and B2C market research on 5000 high growth emerging technologies &amp;amp; opportunities in Transportation, Chemical, Healthcare, Pharmaceuticals, Electronics &amp;amp; Communications, Internet of Things, Food and Beverages, Aerospace and Defense and other manufacturing sectors.&lt;br&gt;
We, at Maximize Market Research, are a strong unified team of industry specialists and analysts across sectors to ensure entire Industry ecosystem is taken in perspective, factoring all recent development, latest trends and futuristic – the technological impact of uniquely specific industries. In line with the agreed scope and objective of the study, our approach is uniquely custom detailed&lt;/p&gt;

&lt;p&gt;Contact Us:&lt;br&gt;
Maximize Market Research Pvt ltd.&lt;br&gt;
Email: &lt;a href="mailto:sales@maximizemarketresearch.com"&gt;sales@maximizemarketresearch.com&lt;/a&gt;&lt;br&gt;
Website: www.maximizemarketresearch.com&lt;/p&gt;

</description>
    </item>
    <item>
      <title>7 GitHub Repositories To Help You Crush Your Job Interviews</title>
      <author>The Code Lounge</author>
      <pubDate>Fri, 16 Apr 2021 12:10:32 +0000</pubDate>
      <link>https://dev.to/codeloungedev/7-github-repositories-to-help-you-crush-your-job-interviews-272o</link>
      <guid>https://dev.to/codeloungedev/7-github-repositories-to-help-you-crush-your-job-interviews-272o</guid>
      <description>&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Originally posted on the codelounge.dev blog =&amp;gt; &lt;a href="https://codelounge.dev/7-github-repositories-to-help-you-crush-your-job-interviews"&gt;7 GitHub Repositories To Help You Crush Your Job Interviews&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;"In tech, interviews are harder than the actual jobs". This is a joke, but it can be true in many cases. Thus, in this article, you will see 7 GitHub repositories that will help you ace the interviews.&lt;/p&gt;

&lt;p&gt;These repositories include information about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How the web works (DNS, HTTP, and many more subjects)&lt;/li&gt;
&lt;li&gt;Data Structures and Algorithms&lt;/li&gt;
&lt;li&gt;How to design large-scale systems (System Design)&lt;/li&gt;
&lt;li&gt;Application Security&lt;/li&gt;
&lt;li&gt;JavaScript Algorithms&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#1-coding-interview-university"&gt;
  &lt;/a&gt;
  1. Coding Interview University
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JPr8uZpD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/usns6b0d6stjf03ihhlg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JPr8uZpD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/usns6b0d6stjf03ihhlg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The Coding Interview repository is one of the most comprehensive resources for interview preparation. The repository started as a study plan of the repository owner, which he used to become a software engineer.&lt;/p&gt;

&lt;p&gt;In this repository, you can find information about Data Structures, Algorithms, Dynamic Programming, Object-Oriented Programming, Design Patterns and more.&lt;/p&gt;

&lt;p&gt;I recommend you to check the &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;repository here&lt;/a&gt; and explore it on your own. Be aware that it's comprehensive and you do not have to learn everything or everything at once. Nonetheless, the resource is extremely handy to prepare for interviews.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#2-tech-interview-handbook"&gt;
  &lt;/a&gt;
  2. Tech Interview Handbook
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uaPaCr0W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vxflp5wuhslele8pkoyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uaPaCr0W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vxflp5wuhslele8pkoyo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Another useful resource is the Tech Interview Handbook. It covers information about technical interviews but not only. It also covers the job application (resume, cover letter), the interview process (behavioural questions, what questions to ask in the interview), and the post-interview (negotiation).&lt;/p&gt;

&lt;p&gt;Thus, you learn more than just Data Structures, Algorithms and other technical subjects. The Tech Interview Handbook is a handy resource, and I encourage you to &lt;a href="https://yangshun.github.io/tech-interview-handbook/"&gt;check it here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#3-the-system-design-primer"&gt;
  &lt;/a&gt;
  3. The System Design Primer
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TmPVG9et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3kiiw3mrx1pmvp2nnlhd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TmPVG9et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3kiiw3mrx1pmvp2nnlhd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
For small side projects, we might get away without planning or too much thinking. However, building large-scale systems is a different game. Learning how to design scalable systems will help you become a software engineer.&lt;/p&gt;

&lt;p&gt;Thus, the &lt;a href="https://github.com/donnemartin/system-design-primer"&gt;System Design Primer repository&lt;/a&gt; is a collection of materials and resources from the internet. The owner of the repository put together resources and materials from different sources. Besides, the repository is continuously updated, so keep an eye on it!&lt;/p&gt;

&lt;p&gt;The repo contains a study guide, how to approach system design questions, and solutions to the questions. I highly recommend it, and I use it as well to learn more about designing scalable applications.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#4-interview-resources"&gt;
  &lt;/a&gt;
  4. Interview Resources
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aB7sdqgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ejrw1e2gykmf67yx367i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aB7sdqgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ejrw1e2gykmf67yx367i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The &lt;a href="https://github.com/Olshansk/interview"&gt;Interview&lt;/a&gt; repository does not have a description or a guide on how you should use it. It only lists links to other resources, and it groups these links by their topic. For instance, there is the &lt;strong&gt;Algorithms&lt;/strong&gt; section that includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Books&lt;/li&gt;
&lt;li&gt;Coding Practice&lt;/li&gt;
&lt;li&gt;Guides&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I like this repository in particular, because of the number of resources included. Also, I like that they are categorised by type. Besides that, it deserves an extra point for having similar repositories at the end. That is additional resources to prepare for your interviews. Do check out the repository!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#5-how-to-secure-anything"&gt;
  &lt;/a&gt;
  5. How To Secure Anything
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_TU0P-Id--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gae1x8d6bp85k2aby2np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_TU0P-Id--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gae1x8d6bp85k2aby2np.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Security was, is, and will always be an essential topic when building applications. If your applications are not secure, it can result in disastrous consequences.&lt;/p&gt;

&lt;p&gt;Therefore, security is not something to take lightly. As a result, here we have the repository &lt;a href="https://github.com/veeral-patel/how-to-secure-anything"&gt;How To Secure Anything&lt;/a&gt;. The nice thing about this repository is that the information applies to securing anything, not only applications. The repository owner claims to "aim to document a process for securing anything, whether it's a medieval castle, an art museum, or a computer network".&lt;/p&gt;

&lt;p&gt;The repository is very well laid-out, and it includes a lot of extra materials to supplement your learning. I cannot recommend it enough!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#6-how-the-web-works"&gt;
  &lt;/a&gt;
  6. How The Web Works
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--irziRC9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/feqwwazk8z1x4kbp7qjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--irziRC9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/feqwwazk8z1x4kbp7qjd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In the interview for my first developer job, I was asked: &lt;em&gt;what happens when you type a URL in a browser?&lt;/em&gt;. Probably, you encountered the same question, or maybe you will in the future.&lt;/p&gt;

&lt;p&gt;Thus, you can find the answer to such questions in the repo called &lt;a href="https://github.com/vasanthk/how-web-works"&gt;How Web Works&lt;/a&gt;. You can find information about how DNS, HTTP protocol and server work or about DOM Tree, Render Tree, page painting and so on.&lt;/p&gt;

&lt;p&gt;It is a handy repository to learn the basics of how the web works. Moreover, the repository includes additional links to explore some subjects in-depth.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#7-javascript-algorithms"&gt;
  &lt;/a&gt;
  7. JavaScript Algorithms
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TU8cBpjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ew0yt6mh9si6tcb9maw9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TU8cBpjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ew0yt6mh9si6tcb9maw9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms repository&lt;/a&gt; is more tailored to JavaScript positions. Although, if you understand the concepts, and know how to implement them in JavaScript, you will most likely know how to implement them in other languages too.&lt;/p&gt;

&lt;p&gt;Each Data Structure and Algorithm comes with its separate README, and it also includes links to further material. Thus, if you do not understand a concept, you can always follow the additional material for extra information.&lt;/p&gt;

&lt;p&gt;Although I want to mention that some information might be scarce, and you might need additional learning material; nonetheless, the repository is excellent to practice Algorithms and Data Structures.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope these resources help you ace your next technical interview. The resources from the article are super helpful; especially if you use them together.&lt;/p&gt;

&lt;p&gt;The list from the article is not exhaustive, but it should cover anything you might encounter in an interview. As always, I am open to suggestions. Thus, if you know other great resources, feel free to drop them in the comments!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>career</category>
    </item>
  </channel>
</rss>
