<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Semicolon or No semicolon?</title>
      <author>Sumit Kumar Surana</author>
      <pubDate>Sun, 23 Jan 2022 17:20:40 +0000</pubDate>
      <link>https://dev.to/ssurana2/semicolon-or-no-semicolon-2d7h</link>
      <guid>https://dev.to/ssurana2/semicolon-or-no-semicolon-2d7h</guid>
      <description>&lt;p&gt;I have 10 years of experience being a JavaScript developer and I forget that semicolon is optional. Adding a semicolon in the end is a simple instinct for me.&lt;/p&gt;

&lt;p&gt;From my point of view, if you are using the right tools like jshint or jslint to catch the syntax errors before pushing the code to your repository, it doesn't matter if you use a semicolon or not. &lt;/p&gt;

&lt;p&gt;I use semicolons in the end because I am tuned that way while working with professionals or mentors who end the statement with a semicolon. I also advocate using semicolons in the end because of the following reasons.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automatic-semicolon-assertion"&gt;
  &lt;/a&gt;
  Automatic semicolon assertion
&lt;/h3&gt;

&lt;p&gt;I won’t spend too much time explaining about it since it is really well articulated in ecma specs &lt;a href="https://tc39.es/ecma262/#sec-automatic-semicolon-insertion"&gt;https://tc39.es/ecma262/#sec-automatic-semicolon-insertion&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To put it simply, it is better to handle the semicolon ourselves than relying on a compiler/minifier which has a chance of being unpredictable. Especially, when you are using ‘[‘ or ‘(‘ or binary operator or a regex in the next line without ending the previous statement with a semicolon. Refer &lt;a href="https://tc39.es/ecma262/#sec-asi-interesting-cases-in-statement-lists"&gt;https://tc39.es/ecma262/#sec-asi-interesting-cases-in-statement-lists&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I prefer lesser risk on my production code and I believe in the statement that if something can go wrong it will definitely go wrong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consistency"&gt;
  &lt;/a&gt;
  Consistency
&lt;/h3&gt;

&lt;p&gt;Most developers nowadays are full stack developers who have dabbled in one or more backend languages. And most of the popular backend languages (apart from &lt;a href="https://www.python.org"&gt;python&lt;/a&gt; that I know of) have statements ending with semicolon. &lt;/p&gt;

&lt;p&gt;So when a developer tends to switch between other programming languages and JavaScript they don't have to unlearn the idea of not putting the semicolon in the end. Remember it is optional. So no offense if someone puts it or omits it. But the idea is to keep a single standard and consistency so that it doesn't cause any confusion among team members on what to follow. So make sure you choose one or else brace yourself for resolving lots of ideology clashes among the team members like the discussion going on at &lt;a href="https://davidwalsh.name/javascript-semicolons"&gt;https://davidwalsh.name/javascript-semicolons&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Logos for Reco Fans! | Reco PC Server</title>
      <author>Arvinth Krishna</author>
      <pubDate>Sun, 23 Jan 2022 17:13:09 +0000</pubDate>
      <link>https://dev.to/arvinthkrishna/logos-for-reco-fans-reco-pc-server-3bl7</link>
      <guid>https://dev.to/arvinthkrishna/logos-for-reco-fans-reco-pc-server-3bl7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#reco-pc-server-logo"&gt;
  &lt;/a&gt;
  Reco PC Server Logo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lamm3k3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Arvinth-Krishna/Reco-PC-Server/main/reco_logos/Reco_logo.png" class="article-body-image-wrapper"&gt;&lt;img alt="Reco PC Server Logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lamm3k3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Arvinth-Krishna/Reco-PC-Server/main/reco_logos/Reco_logo.png" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reco-pc-server-mobile-logo"&gt;
  &lt;/a&gt;
  Reco PC Server - Mobile Logo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sw5hDIdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Arvinth-Krishna/Reco-PC-Server/main/reco_logos/Reco_Mobile_logo.png" class="article-body-image-wrapper"&gt;&lt;img alt="Reco PC Server - Mobile Logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--sw5hDIdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Arvinth-Krishna/Reco-PC-Server/main/reco_logos/Reco_Mobile_logo.png" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reco-pc-server-commander-logo"&gt;
  &lt;/a&gt;
  Reco PC Server - Commander Logo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88bGTyoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Arvinth-Krishna/Reco-PC-Server/main/reco_logos/Reco_PC_Server_Desktop_logo.png" class="article-body-image-wrapper"&gt;&lt;img alt="Reco PC Server - Commander Logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--88bGTyoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Arvinth-Krishna/Reco-PC-Server/main/reco_logos/Reco_PC_Server_Desktop_logo.png" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-reco-pc-server"&gt;
  &lt;/a&gt;
  What is Reco PC Server?
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Reco PC Server&lt;/strong&gt; is a cross platform PC Controller Discord Bot which helps you to control your system easily &amp;amp; it's written in Python discord.py.&lt;/p&gt;

&lt;p&gt;Using Reco you can easily control your computer remotely and have it do from simple tasks such as shutdown, sleep, and lock to opening a website or executing powershell commands. Currently Reco has more than 35 commands. &lt;a href="https://dev.to/arvinthkrishna/control-your-pc-using-discord-reco-pc-server-3pgd"&gt;To know more...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>logo</category>
      <category>reco</category>
      <category>discord</category>
      <category>python</category>
    </item>
    <item>
      <title>Interoperability in Julia</title>
      <author>Ifihan Olusheye</author>
      <pubDate>Sun, 23 Jan 2022 16:20:54 +0000</pubDate>
      <link>https://dev.to/ifihan/interoperability-in-julia-3im9</link>
      <guid>https://dev.to/ifihan/interoperability-in-julia-3im9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  INTRODUCTION
&lt;/h3&gt;

&lt;p&gt;One of the features Julia has to offer is Interoperability. Language interoperability could be defined as the ability for two or more languages to interact or communicate for effective data transmission in a system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S:&lt;/strong&gt; I wrote on &lt;a href="https://ifihan.hashnode.dev/language-interoperability"&gt;Interoperability&lt;/a&gt;; check it out!&lt;/p&gt;

&lt;p&gt;With the help of various packages, Julia can call several programming languages. &lt;a href="https://github.com/JuliaInterop"&gt;JuliaInterop&lt;/a&gt; is a GitHub organization that has created several packages that can be used to integrate Julia with different languages. In this article, we will be looking at integration with Python, R, and C++.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-python"&gt;
  &lt;/a&gt;
  1. Python
&lt;/h3&gt;

&lt;p&gt;It is possible to call Python from Julia using &lt;a href="https://github.com/JuliaPy/PyCall.jl"&gt;PyCall&lt;/a&gt;. Then to install PyCall, run the command in the Julia REPL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using Pkg
Pkg.add("PyCall")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;PyCall will download the Miniconda installer and create a separated conda environment just for Julia all by itself.&lt;/p&gt;

&lt;p&gt;An example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;julia&amp;gt; usig PyCall
&amp;gt;&amp;gt;&amp;gt; math = pyimport("math")
&amp;gt;&amp;gt;&amp;gt; math.sin(math.pi / 4) # returns ≈ 1/√2 = 0.70710678...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-r"&gt;
  &lt;/a&gt;
  2. R
&lt;/h3&gt;

&lt;p&gt;To inter-operate Julia with the R language, the &lt;a href="https://github.com/JuliaInterop/RCall.jl"&gt;RCall&lt;/a&gt; package is used. Run the following commands on the Julia REPL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using Pkg
Pkg.add("RCall")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will automatically install R using Conda if R is not detected. For further customization, check out the &lt;a href="https://juliainterop.github.io/RCall.jl/stable/installation/"&gt;documentation&lt;/a&gt; page &lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;julia&amp;gt; using RCall # This will initialize the R process in the background
julia&amp;gt; num = 7
julia&amp;gt; print(num)
7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Macros transfer can also occur between variables in the R and Julia environments. The copied variable will have the same name as the original.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;julia&amp;gt; x = 57
1

julia&amp;gt; @rput x
57
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More methods can be found on the official &lt;a href="https://juliainterop.github.io/RCall.jl/stable/"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-c"&gt;
  &lt;/a&gt;
  3. C++
&lt;/h3&gt;

&lt;p&gt;It is possible to call C++ into Julia with the package &lt;a href="https://github.com/JuliaInterop/Cxx.jl"&gt;Cxx&lt;/a&gt;. To install the &lt;code&gt;Cxx&lt;/code&gt; package, run the following command on the Julia REPL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using Pkg
Pkg.add("Cxx")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For further installation guides (like system requirements), visit the repository &lt;a href="https://github.com/JuliaInterop/Cxx.jl"&gt;README&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;A simple example of embedding a C++ function in Julia&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# include headers
julia&amp;gt; using Cxx
julia&amp;gt; cxx""" #include&amp;lt;iostream&amp;gt; """

# Declare the function
julia&amp;gt; cxx"""
         void mycppfunction() {
            int z = 0;
            int y = 5;
            int x = 10;
            z = x*y + 2;
            std::cout &amp;lt;&amp;lt; "The number is " &amp;lt;&amp;lt; z &amp;lt;&amp;lt; std::endl;
         }
      """
# Convert C++ to Julia function
julia&amp;gt; julia_function() = @cxx mycppfunction()
julia_function (generic function with 1 method)

# Run the function
julia&amp;gt; julia_function()
The number is 52
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;N.B:&lt;/strong&gt; Most of the examples were extracted from the official repository pages of these packages. Check out &lt;a href="https://github.com/JuliaInterop"&gt;Juliainterop&lt;/a&gt; for more examples and guides on other languages that can be called into Julia.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h3&gt;

&lt;p&gt;It has been seen how possible it is to call some programming languages from Julia. This also establishes the fact that Julia is a friendly language and can  be the go-to when it comes to building a system with multiple languages (Interoperability).&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>julialang</category>
    </item>
    <item>
      <title>Control your PC using Discord | Reco PC Server</title>
      <author>Arvinth Krishna</author>
      <pubDate>Sun, 23 Jan 2022 16:05:15 +0000</pubDate>
      <link>https://dev.to/arvinthkrishna/control-your-pc-using-discord-reco-pc-server-3pgd</link>
      <guid>https://dev.to/arvinthkrishna/control-your-pc-using-discord-reco-pc-server-3pgd</guid>
      <description>&lt;p&gt;&lt;strong&gt;Reco PC Server&lt;/strong&gt; is a cross platform PC Controller Discord Bot which helps you to control your system easily &amp;amp; it's written in Python discord.py.&lt;/p&gt;

&lt;p&gt;Using Reco you can easily control your computer remotely and have it do from simple tasks such as shutdown, sleep, and lock to opening a website or executing powershell commands. Currently Reco has more than 35 commands.&lt;/p&gt;

&lt;p&gt;Reco PC Server is a self hosted bot, which means that you have to run the bot on your computer - the machine you want to control via discord commands.&lt;/p&gt;

&lt;p&gt;Installing Reco PC Server is an easy 3 minute process. &lt;a href="https://www.youtube.com/playlist?list=PLwfmXAeVRyvkiFj_kyodNsd2uUa-0yrAG"&gt;🎬 YouTube - Reco Playlist&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reco-commands"&gt;
  &lt;/a&gt;
  Reco Commands:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-abort--"&gt;Abort&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-appquitter--"&gt;App Quitter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-battery-level--"&gt;Battery Level&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-battery-report-generator--"&gt;Battery Report Generator&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-camera--"&gt;Camera&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-cmd--"&gt;Cmd&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-clip--"&gt;Clip&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-echo--"&gt;Echo&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-file--"&gt;File&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-help--"&gt;Help&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-hibernate--"&gt;Hibernate&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-launch--"&gt;Launch&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-lock--"&gt;Lock&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-log--"&gt;Log&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-media--"&gt;Media&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-music--"&gt;Music&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-notification--"&gt;Notification&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-powershell--"&gt;Powershell&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-printer--"&gt;Printer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-processes--"&gt;Processes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-reco--"&gt;Reco&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-restart--"&gt;Restart&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-say--"&gt;Say&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-screenshot--"&gt;Screenshot&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-google-search--"&gt;Search (Google)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-shutdown--"&gt;Shutdown&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-logoff--"&gt;SignOut (LogOff)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-sleep--"&gt;Sleep&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-speedtest--"&gt;Speedtest&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-system-info--"&gt;System Info&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-url-launcher--"&gt;URL Launcher&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-version-checker--"&gt;Version Checker&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-Wake--"&gt;Wake&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-Wlan-Signal--"&gt;Wlan Signal&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-whatsapp--"&gt;WhatsApp&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#-youtube-search--"&gt;YouTube (search)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation-%E2%86%9F"&gt;
  &lt;/a&gt;
  Installation:  &lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server#quick-jumps"&gt;↟&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#text-instructions"&gt;
  &lt;/a&gt;
  Text Instructions:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Download &amp;amp; Install Python&lt;/strong&gt; - Remember: Tick the Add to path checkBox during installation.
-&amp;gt; &lt;a href="https://www.python.org/"&gt;https://www.python.org/&lt;/a&gt;   (Python Version - &lt;a href="https://www.python.org/downloads/release/python-398/"&gt;3.9.8&lt;/a&gt; recommended)&lt;/li&gt;
&lt;li&gt;Create a bot and get its &lt;strong&gt;token&lt;/strong&gt; by following these instructions: &lt;a href="https://youtu.be/-m-Z7Wav-fM"&gt;https://youtu.be/-m-Z7Wav-fM&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;⚠ &lt;strong&gt;Don't forget to turn on these &lt;a href="https://user-images.githubusercontent.com/49812701/149883812-53643ba8-df84-47ee-89e5-cf3177202b7f.png"&gt;three switches&lt;/a&gt;&lt;/strong&gt; in &lt;a href="https://discord.com/developers/applications"&gt;Discord Developer Portal&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Arvinth-Krishna/Reco-PC-Server/releases/download/v7.0/Reco-PC-Server-main.zip"&gt;Download&lt;/a&gt; the Reco PC Server Repository, &lt;strong&gt;run setup.bat on Windows&lt;/strong&gt; or &lt;strong&gt;setup.sh on Linux&lt;/strong&gt; and put your Bot Token in the newly created &lt;strong&gt;.env file&lt;/strong&gt;. &lt;/li&gt;
&lt;li&gt;Get &lt;strong&gt;Webhook URL&lt;/strong&gt; from your Channel and add it in your Webhook tab in your &lt;a href="https://play.google.com/store/apps/details?id=com.gak.reco"&gt;Reco&lt;/a&gt; mobile App. &lt;a href="https://www.youtube.com/watch?v=2Fcvg-Bh7Oo&amp;amp;t=1s"&gt;https://www.youtube.com/watch?v=2Fcvg-Bh7Oo&amp;amp;t=1s&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Launch &lt;strong&gt;reco.pyw&lt;/strong&gt;, right click on the system tray icon and hit Connect to invite Reco Pc Server to your Discord server.&lt;/li&gt;
&lt;li&gt;Enjoy!🥳&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video tutorial:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=HbqW0zCIZYg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FFO49hi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://j.gifs.com/J8qwWg.gif" alt="Video Tutorial" width="640" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discord</category>
      <category>python</category>
      <category>flutter</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Liman veya Ansible uzak yönetim için WinRM açma</title>
      <author>Ali Orhun Akkirman</author>
      <pubDate>Sun, 23 Jan 2022 16:03:26 +0000</pubDate>
      <link>https://dev.to/aciklab/liman-veya-ansible-uzak-yonetim-icin-winrm-acma-3903</link>
      <guid>https://dev.to/aciklab/liman-veya-ansible-uzak-yonetim-icin-winrm-acma-3903</guid>
      <description>&lt;p&gt;Liman MYS ve Ansible gibi sistemler uzaktan Windows sunuculara erişim için WinRM gibi protokollere ihtiyaç duymaktadır. Windows'un güncel sunucuları kendi içerisinde OpenSSH sunucu servisini de seçmeli olarak sunabilmesine rağmen hala WinRM'in tercih edildiği de görülmekte.&lt;/p&gt;

&lt;p&gt;Aşağıdaki çalışmada WinRM'i SSL'li bir şekilde 5986 portu üzerinden kullanılabilmesi için yapılması gerekenler gösterilecektir.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#i%CC%87lgili-beti%C4%9Fin-windows-sunucuna-indirilmesi-ve-kurulmas%C4%B1"&gt;
  &lt;/a&gt;
  İlgili betiğin Windows sunucuna indirilmesi ve kurulması
&lt;/h1&gt;

&lt;p&gt;İlgili betiği Windows sunucusuna indirmek için aşağıdaki komutu &lt;strong&gt;yetkili kullanıcı ile açılmış&lt;/strong&gt; &lt;em&gt;powershell&lt;/em&gt; veya &lt;em&gt;windows terminal&lt;/em&gt; üzerinden çalıştırmak gerekiyor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;invoke-webrequest -Uri https://liman.dev/winrm -Outfile winrm.ps1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu adımdan sonra yetki edinmek için aşağıdaki komutu uygulamanız gerekmektedir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Set-ExecutionPolicy Bypass -Scope Process -Force
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu adımdan sonra güvenlik gereği sadece belirli IP'den WinRM isteğinde bulunacaksanız aşağıdaki komutu kullanmanız gerekmektedir. Eğer böyle bir kısıt bulunmuyorsa Instance parametresini kullanmayabilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.\winrm.ps1 -Instance "IP_ADRESI" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu adımdan sonra belirttiğiniz IP Adresinden, 5986 portunu kullanarak SSL'li WinRM sorguları atabilirsiniz.&lt;/p&gt;

</description>
      <category>liman</category>
      <category>ansible</category>
      <category>winrm</category>
    </item>
    <item>
      <title>Share Text Across Near 💻Devices📱 using this website 🔥</title>
      <author>Rajesh Joshi</author>
      <pubDate>Sun, 23 Jan 2022 15:25:22 +0000</pubDate>
      <link>https://dev.to/rajeshj3/share-text-across-near-devices-using-this-website-23hh</link>
      <guid>https://dev.to/rajeshj3/share-text-across-near-devices-using-this-website-23hh</guid>
      <description>&lt;p&gt;Sharing Text data across near devices has always been a headache.&lt;/p&gt;

&lt;p&gt;Some conventional methods to share text data are, Using native cross-platform applications (eg. WhatsApp, WeChat, Telegram, etc.). Or, Using Email Services (Gmail, Yahoo Mail, etc.)&lt;/p&gt;

&lt;p&gt;All such conventional methods needs either installation of Native Applications or Bulky Sites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://temp-share.ml"&gt;&lt;strong&gt;TEMP-SHARE&lt;/strong&gt;&lt;/a&gt;, a fast 🚀, reliable 💪 and secure 🛡️ web application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TEMP-SHARE&lt;/strong&gt; meets all your requirements of sharing text data across near devices-&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Unlimited Text Length 🗒️&lt;/p&gt;

&lt;p&gt;Secure 4-characters alpha-numeric random password 🔑&lt;/p&gt;

&lt;p&gt;Your Custom Password 😎&lt;/p&gt;

&lt;p&gt;Max Data Persistence Life of 10 minutes 🤩&lt;/p&gt;

&lt;p&gt;One Time Read Only 🤫&lt;/p&gt;

&lt;p&gt;Most important, Dark/Light Themes 🌒&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Step. 1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just visit &lt;a href="https://temp-share.ml"&gt;temp-share.ml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ed_zynL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1ekn2a19q1eb8xj4f4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ed_zynL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1ekn2a19q1eb8xj4f4r.png" alt="temp-share home page" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step. 2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enter the Text you want to share, and hit &lt;strong&gt;SUBMIT&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;STEP. 3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You'll get a 4-characters alpha-numeric random password 🔑&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OzjkGqfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzzbe2la56zgqo01vhtb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OzjkGqfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzzbe2la56zgqo01vhtb.png" alt="Submitted Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step. 4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Open the same website (&lt;a href="https://temp-share.ml"&gt;temp-share.ml&lt;/a&gt;) on another device and Paste the &lt;strong&gt;passcode&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VOvyZ65l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/978jhckd7g8zp6sb9od3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VOvyZ65l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/978jhckd7g8zp6sb9od3.png" alt="entered passcode" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Step. 5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just hit &lt;strong&gt;GET TEXT&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EL9jQics--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e84se614rm07hc50oia6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EL9jQics--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e84se614rm07hc50oia6.png" alt="GET TEXT" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you go, you have the text on your other device.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As, we checked &lt;strong&gt;One Time View&lt;/strong&gt;, fetching the text again will return an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--roBpTAXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ak08bdyqxkyx8hqjkfwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--roBpTAXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ak08bdyqxkyx8hqjkfwe.png" alt="Error" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Other than this, You can also set your custom password 🔑&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#live"&gt;
  &lt;/a&gt;
  Live ✨
&lt;/h2&gt;

&lt;p&gt;TEMP-SHARE is currently Live at &lt;a href="https://temp-share.ml"&gt;temp-share.ml&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#contribution"&gt;
  &lt;/a&gt;
  Contribution ✨
&lt;/h2&gt;

&lt;p&gt;TEMP-SHARE is &lt;strong&gt;not Open-Souce yet&lt;/strong&gt;. But, if you want us to Open the Source, please drop a comment explaining why you are interested.&lt;/p&gt;




&lt;p&gt;I hope, you guys liked this quick introduction to TEMP-SHARE. If so, then please don't forget to drop a Like ❤️&lt;/p&gt;

&lt;p&gt;And also, help me reach &lt;strong&gt;1k Subscribers&lt;/strong&gt; 🤩, on my &lt;a href="https://www.youtube.com/channel/UCCO4jIqmQVFDmVeeaAO5obA"&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy Coding! 😃💻&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Game Programming Fundamentals</title>
      <author>Fatih Küçükkarakurt</author>
      <pubDate>Sun, 23 Jan 2022 15:24:14 +0000</pubDate>
      <link>https://dev.to/fkkarakurt/game-programming-fundamentals-5cil</link>
      <guid>https://dev.to/fkkarakurt/game-programming-fundamentals-5cil</guid>
      <description>&lt;p&gt;If you are looking for an answer to the question of &lt;strong&gt;How to Develop a Game&lt;/strong&gt;, let's think together. First of all, we are not going to talk about the need to learn a software language or game engines to program games. In fact, the game industry is a field that includes many different industries such as mathematics, art, psychology and even cinema. In other words, it is never enough to master game engines and learn a software language. So what do we need to know? Let's see together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#game-mechanics"&gt;
  &lt;/a&gt;
  Game Mechanics
&lt;/h2&gt;

&lt;p&gt;One of the biggest reasons why games reach huge audiences today is Game Mechanics. In order to better understand the game mechanics, we have to think of a system. There are various sub-parts that this system controls. To understand this better, you can examine the diagram below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBgF4pwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2vg0m0uoaqr5htpe8cnm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBgF4pwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2vg0m0uoaqr5htpe8cnm.png" alt="Game Mechanics" width="746" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#system"&gt;
  &lt;/a&gt;
  System
&lt;/h2&gt;

&lt;p&gt;As you can see in the diagram above, the system takes on the following tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Runs the load and save part to load the files.&lt;/li&gt;
&lt;li&gt;It then enables the intro animation to run using the audio and graphic parts.&lt;/li&gt;
&lt;li&gt;During the use of the game interface, user inputs ensure that the graphics and sound parts work in harmony. &lt;/li&gt;
&lt;li&gt;Finally, it ensures that the graphics, sound, user input, artificial intelligence and network parts work in harmony in the game.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#resource"&gt;
  &lt;/a&gt;
  Resource
&lt;/h2&gt;

&lt;p&gt;The Resource describes the necessary files for the game located on the hard disk.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;These files contain configuration files that describe the configuration in which the game will run by default.&lt;/li&gt;
&lt;li&gt;If available, it contains the video file for the intro that will be played when the game first starts.&lt;/li&gt;
&lt;li&gt;Contains files where the user gets information about the game before the game.&lt;/li&gt;
&lt;li&gt;It contains the files containing the graphics, music and chapter information in the game.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#game-model"&gt;
  &lt;/a&gt;
  Game Model
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It is the state of the game graphics, music and text files loaded into memory from the resource in memory.&lt;/li&gt;
&lt;li&gt;Image files are stored in memory or in the texture memory of the video card.&lt;/li&gt;
&lt;li&gt;Section, score, etc. information is kept in variables and data structures.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#upload-and-save"&gt;
  &lt;/a&gt;
  Upload and Save
&lt;/h2&gt;

&lt;p&gt;This part is the particle that takes the graphics, music and other information from the source and puts it into the memory (game model) and undertakes the process of saving it back to the source in case of new score situations or when the game is recorded.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upload:&lt;/strong&gt; Configuration files, Chapter Files, Image Files, Music and Sound Files, 3D Model Files, Video Files, Help Files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Save:&lt;/strong&gt; Score files and other documents to be saved during the game&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#graphics"&gt;
  &lt;/a&gt;
  Graphics
&lt;/h2&gt;

&lt;p&gt;This is the most important and hardest part of the game in my opinion. Because it is impossible to have a game without visuals. This part is responsible for painting the screen.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Playing the Video&lt;/li&gt;
&lt;li&gt;Displaying the Game Interface&lt;/li&gt;
&lt;li&gt;Viewing Score, Help and Configuration Information&lt;/li&gt;
&lt;li&gt;Displaying the Game's Own Graphics&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#user-inputs"&gt;
  &lt;/a&gt;
  User Inputs
&lt;/h2&gt;

&lt;p&gt;A game without interaction would be like a movie. User Interaction is definitely one of the sine qua non of game mechanics that connects users to the game. The system is in constant interaction with the user. Keyboard, mouse etc. this is where we're going to use the equipment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using the Game Interface&lt;/li&gt;
&lt;li&gt;Reviewing Help Files&lt;/li&gt;
&lt;li&gt;Reviewing Score Files&lt;/li&gt;
&lt;li&gt;Configuring (System and Game Related)&lt;/li&gt;
&lt;li&gt;Controlling the user's character in the game&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sound-and-music"&gt;
  &lt;/a&gt;
  Sound and Music
&lt;/h2&gt;

&lt;p&gt;If you want to understand the importance of sound and music, please turn off the sound while playing games. You will notice that the value of the game drops when there is no sound. We can say that the value of the sound is as valuable as the graphics of the game.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Music playing in the background&lt;/li&gt;
&lt;li&gt;Sound effects for collisions and movements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#artificial-intelligence-ai"&gt;
  &lt;/a&gt;
  Artificial intelligence (AI)
&lt;/h2&gt;

&lt;p&gt;Let's consider the intelligence level of the enemies in the game. The more humanoid they look, the more intelligent the behavior and the more fun the game will be. It doesn't just have to be the enemy. In an open world game, citizens passing by look at their wristwatches, wipe the sweat on their foreheads in sunny weather, give way to you, even argue with you, attack you when you treat animals badly, etc. All of them can go into the subject of artificial intelligence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#network-listening-and-sending"&gt;
  &lt;/a&gt;
  Network Listening and Sending
&lt;/h2&gt;

&lt;p&gt;This part is the part that allows the game to be played by more than one person. In this part, the parties send information to the game server and the information received by listening to the server is updated in the game. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Establishing the Session:&lt;/strong&gt; The players who will participate in the game agree on which protocol and on which port they will communicate at first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Packet Delivery:&lt;/strong&gt; The moves made in the game are sent to the server in packets. Then the server distributes it to all parties after making the necessary change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Package Pickup:&lt;/strong&gt; Simultaneously, the parties are aware of the changes made by listening to the server and reflect this to the game.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#hardware"&gt;
  &lt;/a&gt;
  Hardware
&lt;/h1&gt;

&lt;p&gt;Computer game lovers always want better graphics, music, physics and better artificial intelligence. For all this to happen, one of two conditions must be met.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;software optimization should be done, new algorithms should be found,&lt;/li&gt;
&lt;li&gt;appropriate equipment should be used and the processing speed should be increased.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today, new algorithms and code optimization progress much slower than the speed at which hardware develops. Now, instead of new algorithms, the software, focuses on issues such as reusability, code openness, code security (encapsulation). The hardware is trying to increase the processor speed and memory capacity as much as possible for these new requests.&lt;/p&gt;

&lt;p&gt;In this section, we can talk about many different hardware such as the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;graphics cards,&lt;/li&gt;
&lt;li&gt;processor,&lt;/li&gt;
&lt;li&gt;motherboard,&lt;/li&gt;
&lt;li&gt;sound cards,&lt;/li&gt;
&lt;li&gt;monitors, speaker and new input devices etc…&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#programming-language"&gt;
  &lt;/a&gt;
  Programming Language
&lt;/h1&gt;

&lt;p&gt;Programming language is a computer language that offers the opportunity to develop commands and software in a certain standard form. Thanks to programming languages, it is possible to control what kind of output a computer can give in which situation. In short, computers and humans can communicate efficiently thanks to programming languages.&lt;/p&gt;

&lt;p&gt;Since our topic is game development, we will focus on this subject. Depending on what you want to do and create, you can develop games with all programming languages. There will be those who insist you learn C++. This is absolutely not true. You can make great games with JavaScript, C#, Python or even C. A choice-based adventure game that only works on the console screen can be great. But if you want to make games that are more professional and reach more people, please keep reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h2&gt;

&lt;p&gt;Since C++ is a high-level language that will teach you the basics of object-oriented programming, it's a good idea to learn it. It is also the language used to create console and Windows games. Also, it uses OpenGL or a similar framework (If you continue reading the guide, I will give a detailed explanation about OpenGL). &lt;/p&gt;

&lt;p&gt;C++ is a fast compiling programming language. You also get a lot of say in memory management. It has extensive libraries useful for designing and powering complex graphics. There's a lot of literature for you to improve on, because it's been the programmer's language of choice for decades, and you'll find online communities ready and willing to answer your questions.&lt;/p&gt;

&lt;p&gt;It would be a lie if we said that C++ is easy to learn. It is difficult to learn compared to other programming languages. But it can be useful not only because C++ games are easy to distribute on various platforms, but also because if you know C++ you can quickly learn C# and other object-oriented languages. Both C++ and C# are only two of the most actively used programming languages today.&lt;/p&gt;

&lt;p&gt;To sum it up, learning C++ is a good choice if you want to create games from scratch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c%E2%99%AF"&gt;
  &lt;/a&gt;
  C♯
&lt;/h2&gt;

&lt;p&gt;The benefit of C# lies in the XNA framework. This is a set of tools and workspaces by Microsoft that are particularly suitable for games on Xbox or Windows platforms. &lt;/p&gt;

&lt;p&gt;If you compare C++ and C#, you might consider this example. C++ is like a manual transmission car. C# is like an automatic transmission car. Let's consider the Unity game engine. If you use the Unity game engine, you have to code the scripts in C#. However, the core of this game engine is C++ code.&lt;/p&gt;

&lt;p&gt;The platform you target, the game you want to make, the game engine you will use, etc. factors will affect the language you choose. But yes learning C# would be a great idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  JAVA
&lt;/h2&gt;

&lt;p&gt;Game programmers often use Java because Java supports multithreading and sockets. Multithreading uses less memory and makes the most of available CPU without blocking the user while intensive processes are running in the background. Sockets help in the creation of multiplayer games. Also, Java runs in a virtual machine so the game is easier to deploy.&lt;/p&gt;

&lt;p&gt;Also, if you want to develop applications and games for Android platforms, Java would be a great option.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;Making games for browsers is very different from making games for consoles. If you need 3D graphics or complex graphics and a content management system, you will also need SVG or WebGL.&lt;/p&gt;

&lt;p&gt;Flash animation using the programming language ActionScript was common for browser games in the past, but Flash is finished.&lt;/p&gt;

&lt;p&gt;Unity 3D Engine accepts Javascript. A WebGL-enabled Java engine such as &lt;a href="https://playcanvas.com/"&gt;PlayCanvas&lt;/a&gt;, developed at MIT, allows users to simultaneously work in the game with an online browser and publish to multiple platforms.&lt;/p&gt;

&lt;p&gt;Moreover, there are great game engines that you can use JavaScript. To give an example of these, we can definitely say &lt;a href="https://phaser.io/"&gt;PhaserJS&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#apis"&gt;
  &lt;/a&gt;
  APIs
&lt;/h1&gt;

&lt;p&gt;What is API? It stands for Application Programming Interface. They are libraries that help us perform specific tasks with a number of functions they provide.&lt;/p&gt;

&lt;p&gt;The APIs we will use in our games will be libraries that allow us to take advantage of them by providing an interface to the graphics and sound hardware. For example OpenGL, GLUT, GLU DirectX (Direct3D, DirectDraw, DirectShow, DirectInput, DirectPlayer, DirectSound, DirectMusic), Java2D, Java3D, JavaMusic, JavaNET, JavaMedia, FMOD, etc…&lt;/p&gt;

&lt;p&gt;I think it will be very useful to learn the OpenGL library. So let's talk a little bit about OpenGL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opengl"&gt;
  &lt;/a&gt;
  OpenGL
&lt;/h2&gt;

&lt;p&gt;OpenGL resides on graphics hardware and provides an interface to that hardware. This interface contains 250 different instruction sets. 200 of them are in the OpenGL core and the other 50 are in the OpenGL Utility Library. You can develop 3D interactive applications thanks to the OpenGL graphics API.&lt;/p&gt;

&lt;p&gt;OpenGL is a platform independent API. It has been designed as an interface that performs a command flow that is run consecutively. In order to ensure this quality, it does not include commands such as windowing tasks and obtaining user input, but instead benefits from the windowing and input services provided by the platform it uses to OpenGL. Likewise, it does not contain commands for creating high-level 3D objects. But with the commands it provides, it can create an automobile, plane or molecule surface. To create the desired models of this type with OpenGL, we make use of the points, lines and polygons in the small toolkit we call the geometric primitive.&lt;/p&gt;

&lt;p&gt;Of course, the creation of a better graphics system can be built on top of OpenGL's core structures. OpenGL Utility Library (GLU) has many high-level modeling features, Quadratic surfaces, NURBS curve and surface rendering. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-operations-performed-during-rendering"&gt;
  &lt;/a&gt;
  What are the Operations Performed During Rendering?
&lt;/h2&gt;

&lt;p&gt;In the following 4 stages, you can briefly see what processes are happening during the rendering process.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating shapes and geometric objects with mathematical expressions (OpenGL has tools to create primitive objects such as point, line, polygon, image, bitmap)&lt;/li&gt;
&lt;li&gt;Arrangement of objects in three-dimensional plane and adjustment of perspective&lt;/li&gt;
&lt;li&gt;Calculating the color values of the objects, applying them to the screen by taking into account the light and texture values&lt;/li&gt;
&lt;li&gt;The conversion of the definitions and color values of all object values to pixel values, briefly the realization of the rasterization event.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-simple-opengl-code-example"&gt;
  &lt;/a&gt;
  A Simple OpenGL Code Example
&lt;/h2&gt;

&lt;p&gt;Doing so many options and complex operations with the OpenGL graphics system can make OpenGL complex. But basically, the structure of a program made with OpenGL is very simple. What you're doing is actually defining certain states and putting a control mechanism about which objects OpenGL should render and how it should render.&lt;/p&gt;

&lt;p&gt;You can actually think of OpenGL as a Real Time Rendering Software. Before introducing this programming construct, let's try to grasp some terms.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
       &lt;span class="n"&gt;initializeAwindowPlease&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
             &lt;span class="n"&gt;glClearColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
             &lt;span class="n"&gt;glClear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GL_COLOR_BUFFER_BIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;glColor3f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
             &lt;span class="n"&gt;glOrtho&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;glBegin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GL_POLYGON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;glVertex3f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;glVertex3f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;glVertex3f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;glVertex3f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;glEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
             &lt;span class="n"&gt;glFlush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="n"&gt;UpdateTheWindowAndCheckForEvents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;First of all, thank you very much to those who have come this far. Our conclusion from this article should be:&lt;/p&gt;

&lt;p&gt;Game development is not just about learning programming languages and game engines.&lt;/p&gt;

&lt;p&gt;You have to master a lot of technology. Among the technologies we did not mention are programs such as Adobe Premier, Adobe After Effects, 3D Studio Max, Lightwave, Maya and Poser. Learning and mastering each of these is only possible with experience.&lt;/p&gt;

&lt;p&gt;That's why we talked about hardware and OpenGL. Love your computer and keyboard rather than focusing on one thing. The best and only rule of thumb to master game development is this:&lt;/p&gt;

&lt;p&gt;Be curious, read a lot and try without fear.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Goodbye Dockerfiles: Build Secure &amp; Optimised Node.js Container Images with Cloud Native Buildpacks</title>
      <author>Peter Mbanugo</author>
      <pubDate>Sun, 23 Jan 2022 15:21:04 +0000</pubDate>
      <link>https://dev.to/pmbanugo/goodbye-dockerfiles-build-secure-optimised-nodejs-container-images-with-cloud-native-buildpacks-489p</link>
      <guid>https://dev.to/pmbanugo/goodbye-dockerfiles-build-secure-optimised-nodejs-container-images-with-cloud-native-buildpacks-489p</guid>
      <description>&lt;p&gt;Docker enables developers to easily package, share, and run applications. As a platform, it has shaped the way we build and run applications, and containers have become the de facto standard to run applications. A container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system libraries and settings. You need a &lt;em&gt;Dockerfile&lt;/em&gt; to create an image.&lt;br&gt;
When you tell Docker (or any similar tool) to build an image by executing the &lt;code&gt;docker build&lt;/code&gt; command, it reads the instructions in the Dockerfile, executes them, and creates an image as a result. Writing Dockerfiles is one thing, and writing Dockerfiles that are optimised for fast build and secure image as output is another thing. If you're not careful, you may create images that take a long time to build. Aside from the time it takes to build the image, they may also not be secure.&lt;br&gt;
You can learn how to secure and optimise your container image of course! But, wouldn't you rather invest your time and resources in writing code and delegate the task of creating optimised images to a different tool? That's where Cloud Native Buildpacks can help.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-cloud-native-buildpacks"&gt;
  &lt;/a&gt;
  What are Cloud Native Buildpacks?
&lt;/h2&gt;

&lt;p&gt;Cloud Native Buildpacks are pluggable, modular tools that transform application source code into container images. Its job is to collect everything your app needs to build and run. They replace Dockerfiles in the app development lifecycle and enable swift rebasing of images, and modular control over images (through the use of builders), among other benefits.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-do-they-work"&gt;
  &lt;/a&gt;
  How do they work?
&lt;/h2&gt;

&lt;p&gt;Buildpacks examine your app’s to determine all the dependencies it needs and how to run it, then package it up as a runnable container image. Typically you run your source code through one or more buildpacks. Each buildpack goes through two phases; the detect phase and the build phase.&lt;br&gt;
The detect phase runs against your source code to determine if a buildpack is applicable or not. If the buildpack is detected to be applicable, it proceeds tothe build stage. If the project fails detection, the build stage for that specific buildpack is skipped.&lt;br&gt;
The build phase runs against your source code to download dependencies and compile your source code (if needed), and also set the appropriate entry point and startup scripts. Let's see how to create an image using the &lt;a href="https://buildpacks.io/docs/tools/pack/"&gt;pack&lt;/a&gt; CLI.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#building-your-first-image"&gt;
  &lt;/a&gt;
  Building your first image
&lt;/h2&gt;

&lt;p&gt;You're going to build your first image using the pack CLI. Go to &lt;a href="https://buildpacks.io/docs/tools/pack/"&gt;buildpacks.io/docs/tools/pack&lt;/a&gt; and follow the instruction for your OS to install it. You're going to create and deploy a Node.js web app that will return a string.&lt;br&gt;
Run the command below to create the project and install &lt;a href="https://github.com/vercel/micro"&gt;micro&lt;/a&gt; (an HTTP library for building microservices)&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bashmkdir micro-app &amp;amp;&amp;amp; cd micro-app &amp;amp;&amp;amp; npm init -y &amp;amp;&amp;amp; npm i micro&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Create a file named &lt;strong&gt;index.js&lt;/strong&gt;. Copy and paste the function below in it.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;javascriptmodule.exports = () =&amp;gt; "Hello Buildpacks!";&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Update your package.json with the following start script&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;json"start": "micro"&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;That's all you need for the service. Run the command below to create an image.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bashpack build micro --builder paketobuildpacks/builder:base&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;That command should create an image using the &lt;code&gt;paketobuildpacks/builder:base&lt;/code&gt; builder. A builder is an image that contains all the components necessary to execute a &lt;em&gt;build&lt;/em&gt;. There are different builder image from Paketo, Heroku and a few others. You can even create yours or extend an existing one.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you use Heroku, then your app is making use of Buildpacks without you being aware of it. You can choose to build your images using Heroku buildpacks so you can have the same image when you deploy to Heroku or other platforms.&lt;br&gt;
The image is built and you can try it out by running it with Docker (or Podman if that's what you use). Run the docker command below to start the app. Go to &lt;a href="https://dev.tolocalhost:3000"&gt;localhost:3000&lt;/a&gt; in your browser. You should get the text &lt;code&gt;Hello Buildpacks!&lt;/code&gt; as a response.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#usage-in-cicd"&gt;
  &lt;/a&gt;
  Usage in CI/CD
&lt;/h2&gt;

&lt;p&gt;You can build images with Cloud Native Buildpacks and pack CLI in your continuous integration pipeline. With GitHub Actions, there's a &lt;a href="https://github.com/marketplace/actions/pack-docker-action"&gt;Pack Docker Action&lt;/a&gt; that you can use. When you combine it with &lt;a href="https://github.com/marketplace/actions/docker-login"&gt;Docker Login&lt;/a&gt; Action, you can build and publish to a registry in your workflow. There's a similar process on GitLab if you use &lt;a href="https://docs.gitlab.com/ee/topics/autodevops/stages.html#auto-build-using-cloud-native-buildpacks"&gt;GitLab's Auto DevOps&lt;/a&gt;. I won't go into details on how to use Buildpacks in different CI systems, but you can check the links below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.gitlab.com/ee/topics/autodevops/stages.html#auto-build-using-cloud-native-buildpacks"&gt;Auto Build using Cloud Native Buildpacks in GitLab&lt;/a&gt;- &lt;a href="https://github.com/marketplace/actions/pack-docker-action"&gt;Pack Docker&lt;/a&gt; GitHub Action. It can be combined with &lt;a href="https://github.com/marketplace/actions/docker-login"&gt;Docker Login&lt;/a&gt;.- &lt;a href="https://hub.tekton.dev/tekton/task/buildpacks"&gt;Tekton Buildpacks&lt;/a&gt; task, available on Tekton Hub. It doesn't require the pack CLI or Docker.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

</description>
      <category>builpacks</category>
      <category>cloudnative</category>
      <category>kubernetes</category>
      <category>docker</category>
    </item>
    <item>
      <title>Multi environment AZURE deployments with Terraform and GitHub</title>
      <author>Marcel.L</author>
      <pubDate>Sun, 23 Jan 2022 15:14:24 +0000</pubDate>
      <link>https://dev.to/pwd9000/multi-environment-azure-deployments-with-terraform-and-github-2450</link>
      <guid>https://dev.to/pwd9000/multi-environment-azure-deployments-with-terraform-and-github-2450</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;This tutorial uses examples from the following GitHub demo project &lt;a href="https://github.com/Pwd9000-ML/Azure-Terraform-Deployments"&gt;template repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have been wanting to do a tutorial to demonstrate how to perform large scale terraform deployments in Azure using a &lt;strong&gt;non-monolithic&lt;/strong&gt; approach. I have seen so many large deployments fall into this same trap of using one big &lt;strong&gt;monolithic&lt;/strong&gt; configuration when doing deployments at scale. Throwing everything into one unwieldy configuration can be troublesome for many reasons. To name a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Making a small change can potentially break something much larger somewhere else in the configuration unintentionally.&lt;/li&gt;
&lt;li&gt;Build time aka &lt;code&gt;terraform plan/apply&lt;/code&gt; is increased. A tiny change can take a long time to run as the entire state is checked.&lt;/li&gt;
&lt;li&gt;It can become cumbersome and complex for a team or team members to understand the entire code base.&lt;/li&gt;
&lt;li&gt;Module and provider versioning and dependencies can be fairly confusing to debug in this paradigm and may become restrictive.&lt;/li&gt;
&lt;li&gt;It becomes unmanageable, risky and time consuming to plan and implement any changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's also many blogs and tutorials out there on how to integrate &lt;strong&gt;Terraform&lt;/strong&gt; with DevOps &lt;strong&gt;CI/CD&lt;/strong&gt; processes using Azure DevOps. So I decided to share with you today how to use &lt;strong&gt;Terraform&lt;/strong&gt; with &lt;strong&gt;GitHub&lt;/strong&gt; instead.&lt;/p&gt;

&lt;p&gt;In this tutorial we will use &lt;strong&gt;GitHub reusable workflows&lt;/strong&gt; and &lt;strong&gt;GitHub environments&lt;/strong&gt; to build enterprise scale multi environment infrastructure deployments in &lt;strong&gt;Azure&lt;/strong&gt; using a &lt;strong&gt;non-monolithic&lt;/strong&gt; approach, to construct and simplify complex terraform deployments into simpler manageable work streams, that can be updated independently, increase build time, and reduce duplicate workflow code by utilizing &lt;strong&gt;reusable GitHub workflows&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l5IOvGyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/mainwf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l5IOvGyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/mainwf.png" alt="image.png" width="880" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Things you will get out of this tutorial:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn about &lt;strong&gt;GitHub reusable workflows&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Learn how to integrate terraform deployments with &lt;strong&gt;CI/CD&lt;/strong&gt; using &lt;strong&gt;GitHub&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Learn how to deploy resources in &lt;strong&gt;AZURE&lt;/strong&gt; at scale.&lt;/li&gt;
&lt;li&gt;Learn about &lt;strong&gt;multi-stage&lt;/strong&gt; deployments and approvals using &lt;strong&gt;GitHub Environments&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully you can even utilize these concepts in your own organization to build &lt;strong&gt;AZURE&lt;/strong&gt; Infrastructure at scale in your own awesome cloud projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-Requisites
&lt;/h3&gt;

&lt;p&gt;To start things off we will build a few pre-requisites that is needed to integrate our &lt;strong&gt;GitHub&lt;/strong&gt; project and workflows with &lt;strong&gt;AZURE&lt;/strong&gt; before we can start building resources.&lt;/p&gt;

&lt;p&gt;We are going to perform the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Create Azure Resources (Terraform Backend):&lt;/strong&gt; (Optional) We will first create a few resources that will host our terraform backend state configuration. We will need a Resource Group, Storage Account and KeyVault. We will also create an &lt;strong&gt;Azure Active Directory App &amp;amp; Service Principal&lt;/strong&gt; that will have access to our Terraform backend and subscription in Azure. We will link this Service Principal with our GitHub project and workflows later in the tutorial.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Create a GitHub Repository:&lt;/strong&gt; We will create a GitHub project and set up the relevant secrets and (optional) GitHub environments that we will be using. The project will host our workflows and terraform configurations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Create Terraform Modules (Modular):&lt;/strong&gt; We will set up a few terraform ROOT modules. Separated and modular from each other (non-monolithic).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Create GitHub Workflows:&lt;/strong&gt; After we have our repository and terraform ROOT modules configured we will create our reusable workflows and configure multi-stage deployments to run and deploy resources in Azure based on our terraform ROOT Modules.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-create-azure-resources-terraform-backend"&gt;
  &lt;/a&gt;
  1. Create Azure resources (Terraform Backend)
&lt;/h2&gt;

&lt;p&gt;To set up the resources that will act as our Terraform backend, I wrote a PowerShell script using AZ CLI that will build and configure everything and store the relevant details/secrets we need to link our GitHub project in a key vault. You can find the script on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/code"&gt;github code&lt;/a&gt; page called &lt;a href="https://github.com/Pwd9000-ML/blog-devto/blob/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/code/AZ-GH-TF-Pre-Reqs.ps1"&gt;AZ-GH-TF-Pre-Reqs.ps1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First we will log into Azure by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After logging into Azure and selecting the subscription, we can run the script that will create all the pre-requirements we'll need:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;## code/AZ-GH-TF-Pre-Reqs.ps1&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;#Log into Azure&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;#az login&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Setup Variables.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$randomInt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Get-Random&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-Maximum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;9999&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get-azcontext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Subscription&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Id&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Demo-Terraform-Core-Backend-RG"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$storageName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tfcorebackendsa&lt;/span&gt;&lt;span class="nv"&gt;$randomInt&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tf-core-backend-kv&lt;/span&gt;&lt;span class="nv"&gt;$randomInt&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$appName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"tf-core-github-SPN&lt;/span&gt;&lt;span class="nv"&gt;$randomInt&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"uksouth"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create a resource resourceGroupName&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create a Key Vault&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keyvault&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--resource-group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--enable-rbac-authorization&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Authorize the operation to create a few secrets - Signed in User (Key Vault Secrets Officer)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ad&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;signed-in-user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;objectId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tsv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foreach-object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;assignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Key Vault Secrets Officer"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--assignee&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--scope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/subscriptions/&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="s2"&gt;/resourceGroups/&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;/providers/Microsoft.KeyVault/vaults/&lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create an azure storage account - Terraform Backend Storage Account&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$storageName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$region&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--resource-group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--sku&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Standard_LRS"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--kind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"StorageV2"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--https-only&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--min-tls-version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TLS1_2"&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Authorize the operation to create the container - Signed in User (Storage Blob Data Contributor Role)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ad&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;signed-in-user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;objectId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tsv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;foreach-object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;assignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Storage Blob Data Contributor"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--assignee&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--scope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/subscriptions/&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="s2"&gt;/resourceGroups/&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;/providers/Microsoft.Storage/storageAccounts/&lt;/span&gt;&lt;span class="nv"&gt;$storageName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;#Create Upload container in storage account to store terraform state files&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;Start-Sleep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;40&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--account-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$storageName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tfstate"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--auth-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Create Terraform Service Principal and assign RBAC Role on Key Vault&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$spnJSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ad&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;sp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create-for-rbac&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$appName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Key Vault Secrets Officer"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;--scopes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;/subscriptions/&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="nx"&gt;/resourceGroups/&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="nx"&gt;/providers/Microsoft.KeyVault/vaults/&lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Save new Terraform Service Principal details to key vault&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nv"&gt;$spnObj&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$spnJSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ConvertFrom-Json&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$spnObj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;psobject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"appId"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keyvault&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--vault-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ARM-CLIENT-ID"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keyvault&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--vault-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ARM-CLIENT-SECRET"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="kr"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tenant"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keyvault&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--vault-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ARM-TENANT-ID"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$object_properties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="bp"&gt;$null&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;keyvault&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--vault-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$kvName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ARM-SUBSCRIPTION-ID"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c"&gt;# Assign additional RBAC role to Terraform Service Principal Subscription as Contributor and access to backend storage&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ad&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;sp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--display-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$appName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;appId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-o&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tsv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ForEach-Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;assignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--assignee&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Contributor"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--subscription&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="n"&gt;az&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;assignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--assignee&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="bp"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--role&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Storage Blob Data Contributor"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;--scope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/subscriptions/&lt;/span&gt;&lt;span class="nv"&gt;$subscriptionId&lt;/span&gt;&lt;span class="s2"&gt;/resourceGroups/&lt;/span&gt;&lt;span class="nv"&gt;$resourceGroupName&lt;/span&gt;&lt;span class="s2"&gt;/providers/Microsoft.Storage/storageAccounts/&lt;/span&gt;&lt;span class="nv"&gt;$storageName&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;`
&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Lets take a closer look, step-by-step what the above script does as part of setting up the Terraform backend environment.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a resource group called &lt;code&gt;Demo-Terraform-Core-Backend-RG&lt;/code&gt;, containing an Azure key vault and storage account. &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TNSVy5Z9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/prereqs1.png" alt="image.png" width="880" height="419"&gt;
&lt;/li&gt;
&lt;li&gt;Create an &lt;strong&gt;AAD App and Service Principal&lt;/strong&gt; that has access to the key vault, backend storage account, container and the subscription. &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aArmhg-Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/spn.png" alt="image.png" width="856" height="768"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bi5McCte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/rbac.png" alt="image.png" width="880" height="296"&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;AAD App and Service Principal&lt;/strong&gt; details are saved inside the key vault. &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RloDPUU---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/secrets.png" alt="image.png" width="880" height="593"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#2-create-a-github-repository"&gt;
  &lt;/a&gt;
  2. Create a GitHub Repository
&lt;/h2&gt;

&lt;p&gt;For this step I actually created a &lt;a href="https://github.com/Pwd9000-ML/Azure-Terraform-Deployments"&gt;template repository&lt;/a&gt; that contains everything to get started. Feel free to create your repository from my template by selecting &lt;code&gt;Use this template&lt;/code&gt;. (Optional)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_r2b8Pjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghtemplate1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_r2b8Pjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghtemplate1.png" alt="image.png" width="880" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating the GitHub repository there are a few things we do need to set on the repository before we can start using it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add the secrets that was created in the &lt;code&gt;Key Vault&lt;/code&gt; step above, into the newly created GitHub repository as &lt;strong&gt;&lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository"&gt;Repository Secrets&lt;/a&gt;&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUjeohrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghsecrets.png" alt="image.png" width="880" height="427"&gt;
&lt;/li&gt;
&lt;li&gt;This step is &lt;strong&gt;Optional&lt;/strong&gt;. Create the following &lt;strong&gt;&lt;a href="https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#creating-an-environment"&gt;GitHub Environments&lt;/a&gt;&lt;/strong&gt;, or environments that matches your own requirements. In my case these are: &lt;code&gt;Development&lt;/code&gt;, &lt;code&gt;UserAcceptanceTesting&lt;/code&gt;, &lt;code&gt;Production&lt;/code&gt;. You do not have to set up and use &lt;strong&gt;GitHub Environments&lt;/strong&gt;, this is optional and is used in this tutorial to demonstrate deployment approvals via &lt;strong&gt;Protection Rules&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; GitHub environments and Protection Rules are available on public repos, but for private repos you will need GitHub Enterprise.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BK3kWqPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghenv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK3kWqPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghenv.png" alt="image.png" width="880" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that on the &lt;strong&gt;Production&lt;/strong&gt; environment I have configured a &lt;strong&gt;Required Reviewer&lt;/strong&gt;. This will basically allow me to set explicit reviewers that have to physically approve deployments to the &lt;strong&gt;Production&lt;/strong&gt; environment. To learn more about approvals see &lt;a href="https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-protection-rules"&gt;Environment Protection Rules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LzYbIfsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghprotect.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LzYbIfsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/ghprotect.png" alt="image.png" width="848" height="707"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You can also configure &lt;strong&gt;GitHub Secrets&lt;/strong&gt; at the &lt;strong&gt;Environment&lt;/strong&gt; scope if you have separate Service Principals or even separate Subscriptions in Azure for each &lt;strong&gt;Environment&lt;/strong&gt;. (Example: Your Development resources are in subscription A and your Production resources are in Subscription B). See &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-an-environment"&gt;Creating encrypted secrets for an environment&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-create-terraform-modules-modular"&gt;
  &lt;/a&gt;
  3. Create Terraform Modules (Modular)
&lt;/h2&gt;

&lt;p&gt;Now that our repository is all configured and ready to go, we can start to create some modular terraform configurations, or in other words separate independent deployment configurations based on ROOT terraform modules. If you look at the &lt;a href="https://github.com/Pwd9000-ML/Demo-Repo-TF-Azure"&gt;Demo Repository&lt;/a&gt; you will see that on the root of the repository I have paths/folders that are numbered e.g. &lt;strong&gt;./01_Foundation&lt;/strong&gt; and &lt;strong&gt;./02_Storage&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---6vNZLer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/tfmods.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---6vNZLer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/tfmods.png" alt="image.png" width="880" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These paths each contain a terraform ROOT module, which consists of a &lt;strong&gt;collection&lt;/strong&gt; of items that can &lt;strong&gt;independently&lt;/strong&gt; be configured and deployed. You do not have to use the same naming/numbering as I have chosen, but the idea is to understand that these paths/folders each represent a unique independent modular terraform configuration that consists of a collection of resources that we want to deploy independently.&lt;/p&gt;

&lt;p&gt;So in this example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;path:&lt;/strong&gt; &lt;code&gt;./01_Foundation&lt;/code&gt; contains the terraform ROOT module/configuration of an Azure Resource Group and key vault.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;path:&lt;/strong&gt; &lt;code&gt;./02_Storage&lt;/code&gt; contains the terraform ROOT module/configuration for one General-V2 and one Data Lake V2 Storage storage account.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You will also notice that each ROOT module contains 3x separate TFVARS files: &lt;code&gt;config-dev.tfvars&lt;/code&gt;, &lt;code&gt;config-uat.tfvars&lt;/code&gt; and &lt;code&gt;config-prod.tfvars&lt;/code&gt;. Each representing an environment. This is because each of my environments will use the same configuration: &lt;code&gt;foundation_resources.tf&lt;/code&gt;, but may have slightly different configuration values or naming.&lt;/p&gt;

&lt;p&gt;Example: The &lt;strong&gt;Development&lt;/strong&gt; resource group name will be called &lt;code&gt;Demo-Infra-Dev-Rg&lt;/code&gt;, whereas the &lt;strong&gt;Production&lt;/strong&gt; resource group will be called &lt;code&gt;Demo-Infra-Prod-Rg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--axxO-xOj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/tffoundation.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axxO-xOj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/tffoundation.png" alt="image.png" width="880" height="569"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-create-github-workflows"&gt;
  &lt;/a&gt;
  4. Create GitHub Workflows
&lt;/h2&gt;

&lt;p&gt;Next we will create a special folder/path structure in the root of our repository called &lt;code&gt;.github/workflows&lt;/code&gt;. This folder/path will contain our &lt;strong&gt;&lt;a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions"&gt;GitHub Action Workflows&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You will notice that there are &lt;strong&gt;numbered&lt;/strong&gt; workflows: &lt;code&gt;./.github/workflows/01_Foundation.yml&lt;/code&gt; and &lt;code&gt;./.github/workflows/02_Storage.yml&lt;/code&gt;, these are &lt;strong&gt;caller&lt;/strong&gt; workflows. Each caller workflow represents a terraform module and is named the same as the &lt;strong&gt;path&lt;/strong&gt; containing the ROOT terraform module as described in the section above. There are also 2x &lt;strong&gt;&lt;a href="https://docs.github.com/en/actions/using-workflows/reusing-workflows"&gt;GitHub Reusable Workflows&lt;/a&gt;&lt;/strong&gt; called &lt;code&gt;./.github/workflows/az_tf_plan.yml&lt;/code&gt; and &lt;code&gt;./.github/workflows/az_tf_apply.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's take a closer look at the reusable workflows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://github.com/Pwd9000-ML/blog-devto/blob/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/code/az_tf_plan.yml"&gt;az_tf_plan.yml&lt;/a&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This workflow is a reusable workflow to plan a terraform deployment, create an artifact and upload that artifact to workspace artifacts for consumption.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;## code/az_tf_plan.yml&lt;/span&gt;

&lt;span class="c1"&gt;### Reusable workflow to plan terraform deployment, create artifact and upload to workspace artifacts for consumption ###&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Build_TF_Plan'&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_call&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;module.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;tf_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;use.&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;e.g:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;1.1.0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Default=latest.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;latest&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Resource&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Group&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;where&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;backend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;storage&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;account&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hosted.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Storage&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Account&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;where&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;backend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;state&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hosted.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Storage&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;account&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;container&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;where&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;backend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;state&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hosted.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;state&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;for&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;this&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;plan.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;gh_environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GitHub&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;deployment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;environment.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;null&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;TFVARS&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CLIENT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ID.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CLIENT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SECRET.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SUBSCRIPTION&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ID.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;TENANT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ID.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build-plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.gh_environment }}&lt;/span&gt;
    &lt;span class="na"&gt;defaults&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash&lt;/span&gt;
        &lt;span class="na"&gt;working-directory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.path }}&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;STORAGE_ACCOUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.az_storage_acc }}&lt;/span&gt;
      &lt;span class="na"&gt;CONTAINER_NAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.az_container_name }}&lt;/span&gt;
      &lt;span class="na"&gt;RESOURCE_GROUP&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.az_resource_group }}&lt;/span&gt;
      &lt;span class="na"&gt;TF_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_key }}.tfstate&lt;/span&gt;
      &lt;span class="na"&gt;TF_VARS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_vars_file }}&lt;/span&gt;
      &lt;span class="c1"&gt;###AZURE Client details###&lt;/span&gt;
      &lt;span class="na"&gt;ARM_CLIENT_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_client_id }}&lt;/span&gt;
      &lt;span class="na"&gt;ARM_CLIENT_SECRET&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_client_secret }}&lt;/span&gt;
      &lt;span class="na"&gt;ARM_SUBSCRIPTION_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_subscription_id }}&lt;/span&gt;
      &lt;span class="na"&gt;ARM_TENANT_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_tenant_id }}&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup Terraform&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hashicorp/setup-terraform@v1.3.2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;terraform_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_version }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Format&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fmt&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraform fmt --check&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;init&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraform init --backend-config="storage_account_name=$STORAGE_ACCOUNT" --backend-config="container_name=$CONTAINER_NAME" --backend-config="resource_group_name=$RESOURCE_GROUP" --backend-config="key=$TF_KEY"&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Validate&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;validate&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraform validate&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;plan&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraform plan --var-file=$TF_VARS --out=plan.tfplan&lt;/span&gt;
        &lt;span class="na"&gt;continue-on-error&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan Status&lt;/span&gt;
        &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;steps.plan.outcome == 'failure'&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;exit &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Compress TF Plan artifact&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;zip -r ${{ inputs.tf_key }}.zip ./*&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Upload Artifact&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/upload-artifact@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;inputs.tf_key&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;inputs.path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;inputs.tf_key&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}.zip'&lt;/span&gt;
          &lt;span class="na"&gt;retention-days&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The reusable workflow can only be triggered by another workflow, aka the &lt;strong&gt;caller&lt;/strong&gt; workflows. We can see this by the &lt;code&gt;on:&lt;/code&gt; trigger called &lt;code&gt;workflow_call:&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;## code/az_tf_plan.yml#L3-L4&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_call&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see the reusable workflow can be given specific &lt;strong&gt;inputs&lt;/strong&gt; when called by the &lt;strong&gt;caller&lt;/strong&gt; workflow. Notice that one of the inputs are called &lt;strong&gt;path:&lt;/strong&gt; which we can use to specify the path of the ROOT terraform module that we want to plan and deploy.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Inputs&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the path of the root terraform module.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tf_version&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;(Optional) Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.&lt;/td&gt;
&lt;td&gt;latest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;az_resource_group&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure Resource Group where the backend storage account is hosted.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;az_storage_acc&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure Storage Account where the backend state is hosted.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;az_container_name&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure Storage account container where backend Terraform state is hosted.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tf_key&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Terraform state file name for this plan.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gh_environment&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;(Optional) Specifies the GitHub deployment environment. Leave this setting out if you do not have GitHub Environments configured.&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tf_vars_file&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Terraform TFVARS file.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We aso need to pass some secrets from the &lt;strong&gt;caller&lt;/strong&gt; to the &lt;strong&gt;reusable workflow&lt;/strong&gt;. This is the details of our Service Principal we created to have access in Azure and is linked with our &lt;strong&gt;GitHub Repository Secrets&lt;/strong&gt; we configured earlier.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Secret&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;arm_client_id&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM CLIENT ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_client_secret&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM CLIENT SECRET.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_subscription_id&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM SUBSCRIPTION ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_tenant_id&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM TENANT ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This workflow when called will perform the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out the code repository and set the path context given as input to the path containing the terraform module.&lt;/li&gt;
&lt;li&gt;Install and use the version of terraform as per the input.&lt;/li&gt;
&lt;li&gt;Format check the terraform module code.&lt;/li&gt;
&lt;li&gt;Initialize the terraform module in the given path.&lt;/li&gt;
&lt;li&gt;Validate the terraform module in the given path.&lt;/li&gt;
&lt;li&gt;Create a terraform plan based on the given TFVARS file specified at input.&lt;/li&gt;
&lt;li&gt;Compress the plan artifacts.&lt;/li&gt;
&lt;li&gt;Upload the compressed plan as a workflow artifact.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take a look at our second &lt;strong&gt;reusable workflow&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://github.com/Pwd9000-ML/blog-devto/blob/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/code/az_tf_apply.yml"&gt;az_tf_apply.yml&lt;/a&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This workflow is a reusable workflow to download a terraform artifact built by &lt;code&gt;az_tf_plan.yml&lt;/code&gt; and apply the artifact/plan (Deploy the planned terraform configuration).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;## code/az_tf_apply.yml&lt;/span&gt;

&lt;span class="c1"&gt;### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Apply_TF_Plan'&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_call&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;module.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;tf_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;version&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;use.&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;e.g:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;1.1.0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Default=latest.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;latest&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Resource&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Group&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;where&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;backend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;storage&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;account&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hosted.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Storage&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Account&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;where&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;backend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;state&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hosted.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Storage&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;account&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;container&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;where&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;backend&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;state&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hosted.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;state&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;for&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;this&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;plan.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
      &lt;span class="na"&gt;gh_environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GitHub&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;deployment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;environment.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;null&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Terraform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;TFVARS&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;string&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CLIENT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ID.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CLIENT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SECRET.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SUBSCRIPTION&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ID.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Specifies&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ARM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;TENANT&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ID.'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;apply-plan&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.gh_environment }}&lt;/span&gt;
    &lt;span class="na"&gt;defaults&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash&lt;/span&gt;
        &lt;span class="na"&gt;working-directory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.path }}&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;STORAGE_ACCOUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.az_storage_acc }}&lt;/span&gt;
      &lt;span class="na"&gt;CONTAINER_NAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.az_container_name }}&lt;/span&gt;
      &lt;span class="na"&gt;RESOURCE_GROUP&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.az_resource_group }}&lt;/span&gt;
      &lt;span class="na"&gt;TF_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_key }}.tfstate&lt;/span&gt;
      &lt;span class="na"&gt;TF_VARS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_vars_file }}&lt;/span&gt;
      &lt;span class="c1"&gt;###AZURE Client details###&lt;/span&gt;
      &lt;span class="na"&gt;ARM_CLIENT_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_client_id }}&lt;/span&gt;
      &lt;span class="na"&gt;ARM_CLIENT_SECRET&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_client_secret }}&lt;/span&gt;
      &lt;span class="na"&gt;ARM_SUBSCRIPTION_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_subscription_id }}&lt;/span&gt;
      &lt;span class="na"&gt;ARM_TENANT_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.arm_tenant_id }}&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Download Artifact&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/download-artifact@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_key }}&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.path }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Decompress TF Plan artifact&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;unzip ${{ inputs.tf_key }}.zip&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup Terraform&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hashicorp/setup-terraform@v1.3.2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;terraform_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ inputs.tf_version }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;init&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraform init --backend-config="storage_account_name=$STORAGE_ACCOUNT" --backend-config="container_name=$CONTAINER_NAME" --backend-config="resource_group_name=$RESOURCE_GROUP" --backend-config="key=$TF_KEY"&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Apply&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraform apply --var-file=$TF_VARS --auto-approve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;inputs&lt;/strong&gt; and &lt;strong&gt;secrets&lt;/strong&gt; are the same as our previous &lt;strong&gt;reusable workflow&lt;/strong&gt; which created the terraform plan.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Inputs&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the path of the root terraform module.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tf_version&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;(Optional) Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.&lt;/td&gt;
&lt;td&gt;latest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;az_resource_group&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure Resource Group where the backend storage account is hosted.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;az_storage_acc&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure Storage Account where the backend state is hosted.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;az_container_name&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure Storage account container where backend Terraform state is hosted.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tf_key&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Terraform state file name for this plan.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gh_environment&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;(Optional) Specifies the GitHub deployment environment. Leave this setting out if you do not have GitHub Environments configured.&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tf_vars_file&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Terraform TFVARS file.&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Secret&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;arm_client_id&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM CLIENT ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_client_secret&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM CLIENT SECRET.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_subscription_id&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM SUBSCRIPTION ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_tenant_id&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;Specifies the Azure ARM TENANT ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This workflow when called will perform the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the terraform plan (workflow artifact).&lt;/li&gt;
&lt;li&gt;Decompress the terraform plan (workflow artifact).&lt;/li&gt;
&lt;li&gt;Install and use the version of terraform as per the input.&lt;/li&gt;
&lt;li&gt;Re-initialize the terraform module.&lt;/li&gt;
&lt;li&gt;Apply the terraform configuration based on the terraform plan and values in the TFVARS file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take a look at one of the &lt;strong&gt;caller workflows&lt;/strong&gt; next. These workflows will be used to call the &lt;strong&gt;reusable workflows&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://github.com/Pwd9000-ML/blog-devto/blob/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/code/01_Foundation.yml"&gt;01_Foundation.yml&lt;/a&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This workflow is a &lt;strong&gt;Caller&lt;/strong&gt; workflow. It will call and trigger a reusable workflow &lt;code&gt;az_tf_plan.yml&lt;/code&gt; and create a foundational terraform deployment &lt;code&gt;PLAN&lt;/code&gt; based on the repository &lt;code&gt;path: ./01_Foundation&lt;/code&gt; containing the terraform ROOT module/configuration of an Azure Resource Group and key vault. The plan artifacts are validated, compressed and uploaded into the workflow artifacts, the caller workflow &lt;code&gt;01_Foundation&lt;/code&gt; will then call and trigger the second reusable workflow &lt;code&gt;az_tf_apply.yml&lt;/code&gt; that will download and decompress the &lt;code&gt;PLAN&lt;/code&gt; artifact and trigger the deployment based on the plan. (Also demonstrated is how to use GitHub Environments to do multi staged environment based deployments with approvals - Optional)&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;## code/01_Foundation.yml&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;01_Foundation'&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;Plan_Dev&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#if: github.ref == 'refs/heads/master' &amp;amp;&amp;amp; github.event_name == 'pull_request'&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_plan.yml@master&lt;/span&gt;
    &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;01_Foundation&lt;/span&gt; &lt;span class="c1"&gt;## Path to terraform root module (Required)&lt;/span&gt;
      &lt;span class="na"&gt;tf_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;latest&lt;/span&gt; &lt;span class="c1"&gt;## Terraform version e.g: 1.1.0 Default=latest (Optional)&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-resource-group-name&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - AZURE Resource Group hosting terraform backend storage acc (Required)&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-storage-account-name&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - AZURE terraform backend storage acc (Required)&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-sa-container-name&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - AZURE storage container hosting state files (Required)&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;foundation-dev&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - Specifies name that will be given to terraform state file (Required)&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-dev.tfvars&lt;/span&gt; &lt;span class="c1"&gt;## Terraform TFVARS (Required)&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_ID }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Client ID&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_SECRET }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Client Secret&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_SUBSCRIPTION_ID }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Subscription ID&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_TENANT_ID }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Tenant ID&lt;/span&gt;

  &lt;span class="na"&gt;Deploy_Dev&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Plan_Dev&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_apply.yml@master&lt;/span&gt;
    &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;01_Foundation&lt;/span&gt; &lt;span class="c1"&gt;## Path to terraform root module (Required)&lt;/span&gt;
      &lt;span class="na"&gt;tf_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;latest&lt;/span&gt; &lt;span class="c1"&gt;## Terraform version e.g: 1.1.0 Default=latest (Optional)&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-resource-group-name&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - AZURE Resource Group hosting terraform backend storage acc (Required)&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-storage-account-name&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - AZURE terraform backend storage acc (Required)&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-sa-container-name&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - AZURE storage container hosting state files (Required)&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;foundation-dev&lt;/span&gt; &lt;span class="c1"&gt;## AZ backend - Specifies name that will be given to terraform state file (Required)&lt;/span&gt;
      &lt;span class="na"&gt;gh_environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Development&lt;/span&gt; &lt;span class="c1"&gt;## GH Environment. Default=null - (Optional)&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-dev.tfvars&lt;/span&gt; &lt;span class="c1"&gt;## Terraform TFVARS (Required)&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_ID }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Client ID&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_SECRET }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Client Secret&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_SUBSCRIPTION_ID }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Subscription ID&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_TENANT_ID }}&lt;/span&gt; &lt;span class="c1"&gt;## ARM Tenant ID&lt;/span&gt;

  &lt;span class="na"&gt;Plan_Uat&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#if: github.ref == 'refs/heads/master' &amp;amp;&amp;amp; github.event_name == 'pull_request'&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_plan.yml@master&lt;/span&gt;
    &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;01_Foundation&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-resource-group-name&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-storage-account-name&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-sa-container-name&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;foundation-uat&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-uat.tfvars&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_SECRET }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_SUBSCRIPTION_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_TENANT_ID }}&lt;/span&gt;

  &lt;span class="na"&gt;Deploy_Uat&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Plan_Uat&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Deploy_Dev&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_apply.yml@master&lt;/span&gt;
    &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;01_Foundation&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-resource-group-name&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-storage-account-name&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-sa-container-name&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;foundation-uat&lt;/span&gt;
      &lt;span class="na"&gt;gh_environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;UserAcceptanceTesting&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-uat.tfvars&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_SECRET }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_SUBSCRIPTION_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_TENANT_ID }}&lt;/span&gt;

  &lt;span class="na"&gt;Plan_Prod&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#if: github.ref == 'refs/heads/master' &amp;amp;&amp;amp; github.event_name == 'pull_request'&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_plan.yml@master&lt;/span&gt;
    &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;01_Foundation&lt;/span&gt;
      &lt;span class="na"&gt;tf_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;latest&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-resource-group-name&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-storage-account-name&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-sa-container-name&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;foundation-prod&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-prod.tfvars&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_SECRET }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_SUBSCRIPTION_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_TENANT_ID }}&lt;/span&gt;

  &lt;span class="na"&gt;Deploy_Prod&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;needs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Plan_Prod&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Deploy_Uat&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_apply.yml@master&lt;/span&gt;
    &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;01_Foundation&lt;/span&gt;
      &lt;span class="na"&gt;az_resource_group&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-resource-group-name&lt;/span&gt;
      &lt;span class="na"&gt;az_storage_acc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-storage-account-name&lt;/span&gt;
      &lt;span class="na"&gt;az_container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-sa-container-name&lt;/span&gt;
      &lt;span class="na"&gt;tf_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;foundation-prod&lt;/span&gt;
      &lt;span class="na"&gt;gh_environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Production&lt;/span&gt;
      &lt;span class="na"&gt;tf_vars_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-prod.tfvars&lt;/span&gt;
    &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_client_secret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_CLIENT_SECRET }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_subscription_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_SUBSCRIPTION_ID }}&lt;/span&gt;
      &lt;span class="na"&gt;arm_tenant_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ARM_TENANT_ID }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Notice that we have multiple &lt;code&gt;jobs:&lt;/code&gt; in the caller workflow, one job to generate a terraform plan and one job to deploy the plan, per environment.&lt;/p&gt;

&lt;p&gt;You will see that each plan job uses the different TFVARS files: &lt;code&gt;config-dev.tfvars&lt;/code&gt;, &lt;code&gt;config-uat.tfvars&lt;/code&gt; and &lt;code&gt;config-prod.tfvars&lt;/code&gt; respectively of each environment, but using the same ROOT module configuration in the &lt;strong&gt;path:&lt;/strong&gt; &lt;code&gt;./01_Foundation/foundation_resources.tf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Each reusable workflows &lt;strong&gt;inputs&lt;/strong&gt; are specified on the &lt;strong&gt;caller&lt;/strong&gt; workflows &lt;code&gt;jobs:&lt;/code&gt; using &lt;code&gt;with:&lt;/code&gt;, and &lt;strong&gt;Secrets&lt;/strong&gt; using &lt;code&gt;secret:&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(Optional) - You will also note that only the &lt;strong&gt;Deploy&lt;/strong&gt; jobs: &lt;code&gt;Deploy_Dev:&lt;/code&gt;, &lt;code&gt;Deploy_Uat:&lt;/code&gt;, &lt;code&gt;Deploy_Prod:&lt;/code&gt;, are linked with an input &lt;code&gt;gh_environment&lt;/code&gt; which specifies which GitHub environment the job is linked to. Each &lt;strong&gt;Plan&lt;/strong&gt; jobs: &lt;code&gt;Plan_Dev:&lt;/code&gt;, &lt;code&gt;Plan_Uat:&lt;/code&gt;, &lt;code&gt;Plan_Prod:&lt;/code&gt;, are not linked to any GitHub Environment.&lt;/p&gt;

&lt;p&gt;If you don't use &lt;strong&gt;GitHub Environments&lt;/strong&gt; or don't have any set up, you can leave out the input: &lt;code&gt;gh_environment&lt;/code&gt; completely. The benefits however of using GitHub Environments are &lt;strong&gt;Protection rules&lt;/strong&gt;, and also &lt;strong&gt;secrets&lt;/strong&gt; at the Environment scope.&lt;/p&gt;

&lt;p&gt;Each &lt;strong&gt;Deploy&lt;/strong&gt; jobs: &lt;code&gt;Deploy_Dev:&lt;/code&gt;, &lt;code&gt;Deploy_Uat:&lt;/code&gt;, &lt;code&gt;Deploy_Prod:&lt;/code&gt; are also linked with the relevant &lt;code&gt;needs:&lt;/code&gt; setting of it's corresponding plan. This means that the plan job must be successful before the deploy job can initialize and run. Deploy jobs are also linked with earlier deploy jobs using &lt;code&gt;needs:&lt;/code&gt; so that &lt;strong&gt;Dev&lt;/strong&gt; gets built first and if successful be followed by &lt;strong&gt;Uat&lt;/strong&gt;, and if successful followed by &lt;strong&gt;Prod&lt;/strong&gt;. However if you remember, we configured a &lt;strong&gt;GitHub Protection Rule&lt;/strong&gt; on our Production environment which needs to be approved before it can run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l5IOvGyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/mainwf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l5IOvGyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/mainwf.png" alt="image.png" width="880" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; if you have been following this tutorial step by step, and used a cloned copy of the &lt;a href="https://github.com/Pwd9000-ML/Azure-Terraform-Deployments"&gt;Demo Repository&lt;/a&gt; you will need to update the &lt;strong&gt;caller&lt;/strong&gt; workflows: &lt;code&gt;./.github/workflows/01_Foundation.yml&lt;/code&gt; and &lt;code&gt;./.github/workflows/02_Storage.yml&lt;/code&gt; with the &lt;strong&gt;inputs&lt;/strong&gt; specified under &lt;code&gt;with:&lt;/code&gt; using the values of your environment.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;Let's run the workflow: &lt;strong&gt;01_Foundation&lt;/strong&gt; and see what happens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YhBxdyX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YhBxdyX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run.png" alt="image.png" width="880" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the run you will see that each plan was created and DEV as well as UAT terraform configurations have been deployed to Azure as per the terraform configuration under &lt;code&gt;path: ./01_Foundation&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Xitw2M7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Xitw2M7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run2.png" alt="image.png" width="866" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After approving &lt;strong&gt;Production&lt;/strong&gt; we can see that approval has triggered the production deployment and now we also have a production resource group.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8N5O4QbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8N5O4QbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run3.png" alt="image.png" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rql-P2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rql-P2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run4.png" alt="image.png" width="864" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will notice that each resource group contains a key vault as per our foundation terraform configuration under &lt;code&gt;path: ./01_Foundation&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hXSjfK0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXSjfK0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run5.png" alt="image.png" width="703" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's run the workflow: &lt;strong&gt;02_Storage&lt;/strong&gt; and after deploying DEV and UAT, also approve PRODUCTION to run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NR3ggNie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NR3ggNie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run6.png" alt="image.png" width="880" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you will notice that each of our environments resource groups also contains storage accounts as per the terraform configuration under &lt;code&gt;path: ./02_Storage&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQpTCdKu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQpTCdKu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/run7.png" alt="image.png" width="781" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, if we navigate to the terraform backend storage account, you will see that based on the &lt;code&gt;tf_key&lt;/code&gt; inputs we gave each of our &lt;strong&gt;caller&lt;/strong&gt; workflow &lt;code&gt;jobs:&lt;/code&gt;, each terraform deployment has its own state file per ROOT module/collection, per environment, which nicely segregates the terraform configuration state files independently from each other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c3uiPPev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/state.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c3uiPPev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/assets/state.png" alt="image.png" width="880" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/main/posts/2022-GitHub-Actions-Terraform-Deployment-Part1/code"&gt;Github&lt;/a&gt; page. You can also look at the demo project or even create your own projects and workflows from the demo project &lt;a href="https://github.com/Pwd9000-ML/Azure-Terraform-Deployments"&gt;template repository&lt;/a&gt;. ❤️&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Like, share, follow me on: 🐙 &lt;a href="https://github.com/Pwd9000-ML"&gt;GitHub&lt;/a&gt; | 🐧 &lt;a href="https://twitter.com/pwd9000"&gt;Twitter&lt;/a&gt; | 👾 &lt;a href="https://www.linkedin.com/in/marcel-l-61b0a96b/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions &amp;amp; DevOps Architect.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>terraform</category>
      <category>iac</category>
      <category>github</category>
      <category>azuredevops</category>
    </item>
    <item>
      <title>build a snake game using canvas and requestAnimationFrame</title>
      <author>p4nghu</author>
      <pubDate>Sun, 23 Jan 2022 15:13:53 +0000</pubDate>
      <link>https://dev.to/p4nghu/build-a-snake-game-using-canvas-and-requestanimationframe-3iff</link>
      <guid>https://dev.to/p4nghu/build-a-snake-game-using-canvas-and-requestanimationframe-3iff</guid>
      <description>&lt;p&gt;this project is inspired by &lt;a href="https://www.youtube.com/watch?v=dFRiNUp-FT0&amp;amp;t=5613s"&gt;dan's streaming&lt;/a&gt;,but implement my way.&lt;/p&gt;

&lt;p&gt;im not good at english, so i just show my code and comments.&lt;/p&gt;

&lt;p&gt;if you found this is helpful, please give me a star.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HaxjWxdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/886f0a556b4d4ddda96aad77c72d6283%257Etplv-k3u1fbpfcp-watermark.image%3F" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HaxjWxdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/886f0a556b4d4ddda96aad77c72d6283%257Etplv-k3u1fbpfcp-watermark.image%3F" alt="snake.gif" width="600" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cyhfe.github.io/snake/"&gt;live-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cyhfe/snake"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chenyuhao.vercel.app/"&gt;blog&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-structure-and-variables"&gt;
  &lt;/a&gt;
  data structure and variables
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;foodPosition&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;initSnake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;snake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;initSnake&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#canvas"&gt;
  &lt;/a&gt;
  canvas
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//  background&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawBackground&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#bfbfbf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cellLength&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cellLength&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// snake&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawSnake&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;step&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// gradient color&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;step&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(0,0%,&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;percent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%)`&lt;/span&gt;

    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;cellLength&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// draw food&lt;/span&gt;

&lt;span class="c1"&gt;// random food position&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateRandomFood&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// if no place to generate&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;you win&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="c1"&gt;// if the position comflict with snake, then re-generate&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;randomX&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;randomY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;generateRandomFood&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;foodPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;randomX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;randomY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// draw&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;drawFood&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ff7875&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;foodPosition&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;foodPosition&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;cellLength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;cellLength&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#snake-movement"&gt;
  &lt;/a&gt;
  snake movement
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;snakeMove&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="c1"&gt;// set new snake head by direction&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;down&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// boundary collision&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;boundary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;cellLength&lt;/span&gt;

  &lt;span class="c1"&gt;// self collision&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selfCollision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;// if collision, restart&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;boundary&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;selfCollision&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;// if next movement is food, push head, do not shift&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;foodPosition&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;foodPosition&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;generateRandomFood&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;snake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#event-listener"&gt;
  &lt;/a&gt;
  event listener
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ArrowUp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;down&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;canChangeDirection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
      &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ArrowDown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;canChangeDirection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
      &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;down&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ArrowLeft&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;canChangeDirection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
      &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ArrowRight&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;canChangeDirection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
      &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#requestanimationframe-for-animate"&gt;
  &lt;/a&gt;
  requestAnimationFrame for animate
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// its too fast for this game by default, make it slow down&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fix-bug"&gt;
  &lt;/a&gt;
  fix Bug
&lt;/h2&gt;

&lt;p&gt;because requestAnimationFrame is async, as if snake's direction is right, i can change it to top,and then left before snake movement.&lt;/p&gt;

&lt;p&gt;so i add &lt;code&gt;canChangeDirection&lt;/code&gt;, direction can change only after snake moved&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// event callback&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ArrowUp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;down&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="nx"&gt;canChangeDirection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;canChangeDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Want to learn about git and GitHub in a more fun way?</title>
      <author>Pradumna Saraf</author>
      <pubDate>Sun, 23 Jan 2022 14:49:20 +0000</pubDate>
      <link>https://dev.to/pradumnasaraf/want-to-learn-about-git-and-github-in-a-more-fun-way-4o5f</link>
      <guid>https://dev.to/pradumnasaraf/want-to-learn-about-git-and-github-in-a-more-fun-way-4o5f</guid>
      <description>&lt;p&gt;We always watch tons of videos and tutorials and skim through lots of documentation to learn some concept or any programming language.&lt;/p&gt;

&lt;p&gt;But you know you can learn git and GitHub in a more fun way like playing games or visualizing.&lt;br&gt;
&lt;strong&gt;YES! you head it right, "by playing games"&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-some-of-the-resources-to-learn-git-and-github-in-a-more-way"&gt;
  &lt;/a&gt;
  Here are some of the resources to learn git and GitHub in a more way.
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#1-twilioquest-forest-of-open-source"&gt;
  &lt;/a&gt;
  1) TwilioQuest - "Forest of Open Source":
&lt;/h3&gt;

&lt;p&gt;This is game made by &lt;a href="https://www.twilio.com/"&gt;Twilio&lt;/a&gt;, you will learn about git and GitHub while playing games and doing tasks. Also, you will XP after every task you complete. &lt;a href="https://www.twilio.com/quest/learn/open-source"&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMzY9rIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29rrdxad8gcd9g25qzn6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMzY9rIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29rrdxad8gcd9g25qzn6.png" alt="TwilioQuest" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-oh-my-git"&gt;
  &lt;/a&gt;
  2) Oh My Git!:
&lt;/h3&gt;

&lt;p&gt;It will let you visualize the internal structures of Git repositories in real-time. &lt;a href="https://ohmygit.org/"&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AeZhdeK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04a7nkg3909j2e2ek4hw.png" alt="Oh My Git!" width="880" height="495"&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#3-learn-git-branching"&gt;
  &lt;/a&gt;
  3) Learn Git Branching:
&lt;/h3&gt;

&lt;p&gt;You can master your git branching concept by visualizing, playing, and doing certain tasks. &lt;a href="https://learngitbranching.js.org/"&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VsYTZJr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e98kprjz06zicjqgor0s.png" alt="Learn Git Branching" width="880" height="550"&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#4-github-learning-lab"&gt;
  &lt;/a&gt;
  4) GitHub Learning Lab:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; itself provides a learning track, which grows your skills by completing fun, realistic projects. &lt;a href="https://lab.github.com/"&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ClqwkB9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05zocn7jdwya01di467p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClqwkB9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05zocn7jdwya01di467p.png" alt="GitHub Learning Lab" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Support and Reachout: &lt;a href="https://twitter.com/intent/follow?screen_name=pradumna_saraf"&gt;Twitter&lt;/a&gt;     &lt;a href="https://linkedin.com/in/pradumnasaraf"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>git</category>
      <category>github</category>
    </item>
    <item>
      <title>watch anime from the command line</title>
      <author>Dumbo-programmer</author>
      <pubDate>Sun, 23 Jan 2022 14:23:58 +0000</pubDate>
      <link>https://dev.to/dumboprogrammer/watch-anime-from-the-command-line-59m3</link>
      <guid>https://dev.to/dumboprogrammer/watch-anime-from-the-command-line-59m3</guid>
      <description>&lt;p&gt;do you watch anime? if yes Highfive! me too.&lt;br&gt;
Today I will show you how can you watch anime from the command line!&lt;br&gt;
not only watch but search &amp;amp; download&lt;br&gt;
Even in android &amp;amp; mac? heck yeah!&lt;br&gt;
Dependencies::&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Essential&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;grep&lt;br&gt;
sed&lt;br&gt;
curl&lt;br&gt;
openssl&lt;br&gt;
jq&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optional&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mpv - The default video player (recommended)&lt;br&gt;
aria2 - For downloading (recommended)&lt;br&gt;
iina - An alternative video player for the Mac&lt;br&gt;
vlc - An alternative video player&lt;br&gt;
diff - Update checking&lt;br&gt;
patch - Update checking&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Linux / Mac&lt;/em&gt;&lt;br&gt;
&lt;code&gt;git clone https://github.com/pystardust/ani-cli.git&lt;br&gt;
cd ani-cli&lt;br&gt;
sudo make&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android (Termux)&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;apt update&lt;br&gt;
apt install git make ncurses-utils openssl-tool jq -y&lt;br&gt;
git clone -b android-termux https://github.com/pystardust/ani-cli.git&lt;br&gt;
cd ani-cli&lt;br&gt;
make&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;Download and install gitbash&lt;br&gt;
Download and install vlc (mpv needs further testing)&lt;br&gt;
Add vlc to Windows Env PATH like so: C:\Program Files\VideoLAN\VLC.&lt;br&gt;
Open git bash by right-clicking and choosing "Run as administrator"&lt;br&gt;
Run the following commands&lt;br&gt;
git clone -b windows-vlc https://github.com/pystardust/ani-cli.git&lt;br&gt;
cd ani-cli&lt;br&gt;
chmod +x ani-cli-win&lt;br&gt;
./install&lt;/code&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>tutorial</category>
      <category>bash</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
