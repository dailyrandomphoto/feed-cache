<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Git Fundamentals: Concepts &amp; Commands Simplified</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 27 Jun 2021 05:53:42 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/git-fundamentals-concepts-commands-simplified-2k4j</link>
      <guid>https://dev.to/ruppysuppy/git-fundamentals-concepts-commands-simplified-2k4j</guid>
      <description>&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; is one of the most used tools in the tech industry as it efficiently solves the &lt;strong&gt;version control&lt;/strong&gt; issue. Without &lt;code&gt;git&lt;/code&gt;, even a simple project might end up looking like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RYyBvdSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg8o1wn0d6g6jxx60fyv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYyBvdSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg8o1wn0d6g6jxx60fyv.PNG" alt="Without Git"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; helps to keep track of different versions of a single code base by tracking all changes. With &lt;code&gt;git&lt;/code&gt;, even a complex project (&lt;a href="https://github.com/mui-org/material-ui"&gt;Material UI&lt;/a&gt;) ends up looking condensed like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kTi_nq-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5d26yxj89wb7zyox2vy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kTi_nq-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5d26yxj89wb7zyox2vy.PNG" alt="With Git"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though &lt;code&gt;git&lt;/code&gt; is a really useful tool, everyone (including me) while starting, has a lot of issues wrapping their heads around how it works. This article aims at demystifying &lt;code&gt;git&lt;/code&gt; for you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing-raw-git-endraw-"&gt;
  &lt;/a&gt;
  Installing &lt;code&gt;Git&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;To use &lt;code&gt;git&lt;/code&gt; you will need to install it. You can download and install &lt;code&gt;git&lt;/code&gt; from &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;'s website. Make sure you add &lt;code&gt;git&lt;/code&gt; to &lt;code&gt;Path&lt;/code&gt; in case you are using it on &lt;strong&gt;Windows&lt;/strong&gt;. In &lt;strong&gt;Linux&lt;/strong&gt;, you can directly install it from the terminal using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After installation is complete, to check if &lt;code&gt;git&lt;/code&gt; was installed properly execute the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#how-raw-git-endraw-works"&gt;
  &lt;/a&gt;
  How &lt;code&gt;Git&lt;/code&gt; Works?
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; works by storing a snapshot of the entire repository at any given point of time when you &lt;strong&gt;commit&lt;/strong&gt; changes (a &lt;strong&gt;commit&lt;/strong&gt; can be considered to be an equivalent of a &lt;em&gt;save&lt;/em&gt;). So whenever you wish, you can go back to any previous commits and make modifications.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-git-endraw-basics"&gt;
  &lt;/a&gt;
  &lt;code&gt;Git&lt;/code&gt; Basics
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-initializing-a-repository"&gt;
  &lt;/a&gt;
  1. Initializing a Repository
&lt;/h3&gt;

&lt;p&gt;Before you can use any functionalities of &lt;code&gt;git&lt;/code&gt;, you would require a repository. To initialize a repository use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-staging-changes"&gt;
  &lt;/a&gt;
  2. Staging Changes
&lt;/h3&gt;

&lt;p&gt;To &lt;strong&gt;commit&lt;/strong&gt; changes, you need to specify the files whose changes you want to &lt;strong&gt;commit&lt;/strong&gt; first. This is done by staging the changes. It is NOT required that you stage all files you modified, you can stage only the files whose changes you want to &lt;strong&gt;commit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To stage changes, use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &amp;lt;file 01 path&amp;gt; &amp;lt;file 02 path&amp;gt; &amp;lt;...&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you are lazy like me, stage all changes using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-committing-changes"&gt;
  &lt;/a&gt;
  3. Committing Changes
&lt;/h3&gt;

&lt;p&gt;Finally, we come to &lt;strong&gt;committing&lt;/strong&gt; changes. To save the changes you have staged, use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;small description of the change (for ease of understanding)&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You have successfully made your first &lt;strong&gt;commit&lt;/strong&gt;!!! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-logs"&gt;
  &lt;/a&gt;
  4. Logs
&lt;/h3&gt;

&lt;p&gt;After several &lt;strong&gt;commits&lt;/strong&gt; if you require to check out the commits you have made, check out the logs using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k5e8WzTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yysuc90edj1pcmilw6ok.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k5e8WzTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yysuc90edj1pcmilw6ok.PNG" alt="Logs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-resetting-amp-reverting-changes"&gt;
  &lt;/a&gt;
  5. Resetting &amp;amp; Reverting Changes
&lt;/h3&gt;

&lt;p&gt;But what if I make some mistakes in an old commit 😨???&lt;/p&gt;

&lt;p&gt;Fret not my friend, &lt;code&gt;git&lt;/code&gt; also has two solutions for that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Reset&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Revert&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Reset&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reset --soft HEAD~1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's break down the command. We are using &lt;code&gt;git reset &amp;lt;reset types&amp;gt; HEAD~&amp;lt;number of commits to undo&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The most commonly used &lt;strong&gt;reset types&lt;/strong&gt;s are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;--soft&lt;/strong&gt;: uncommit and keep (staged) changes&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;--hard&lt;/strong&gt;: uncommit and delete changes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Revert&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You might also have noticed that every &lt;strong&gt;commit&lt;/strong&gt; is associated with a hash.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oBXyA7me--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gc1xztnj8wdyl3lczhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oBXyA7me--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gc1xztnj8wdyl3lczhp.png" alt="Git Hash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also use the hash to undo a specific &lt;strong&gt;commit&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git revert 8a11c5095f2dcd70b0bc8c66061a1368558a3abf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On breaking down the command, we find &lt;code&gt;git revert &amp;lt;commit hash&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An additional &lt;strong&gt;commit&lt;/strong&gt; is added on reverting modifications&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cvlUa4xD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4jjg35t7gdl1ar8nyzx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cvlUa4xD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4jjg35t7gdl1ar8nyzx.PNG" alt="Git Revert Commit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow!!! We have made it quite far; pat yourself on the back for the progress!&lt;/p&gt;

&lt;p&gt;Now let's dive into a few more basic &lt;code&gt;git&lt;/code&gt; features which are a bit harder to grasp.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-branches"&gt;
  &lt;/a&gt;
  6. Branches
&lt;/h3&gt;

&lt;p&gt;It is possible that you would be working on multiple different features at once. Scoping all changes in one location is a perfect recipe for disaster for this case, and since you are learning &lt;code&gt;git&lt;/code&gt;, you definitely would like to keep track of several copies of the same project. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; has you covered! There is a feature to create branches of the code to scope modifications like &lt;em&gt;feature additions&lt;/em&gt;, &lt;em&gt;bug fixes&lt;/em&gt;, etc to only one branch, which may later be merged with other branches. &lt;/p&gt;

&lt;p&gt;The former convention was to call the base branch &lt;em&gt;master&lt;/em&gt;, but recently the name has been changed to &lt;em&gt;main&lt;/em&gt;. You can change the name or the base branch as per your requirement though.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6RFcmkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xls4372j58kl8kozbvgp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6RFcmkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xls4372j58kl8kozbvgp.jpg" alt="Branches"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create a new branch use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b &amp;lt;new branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To switch to an existing branch use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout &amp;lt;branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-merge"&gt;
  &lt;/a&gt;
  7. Merge
&lt;/h3&gt;

&lt;p&gt;After completing work on a branch, you may require updating a branch with the code from another branch. For &lt;strong&gt;merging&lt;/strong&gt; changes from another branch, first, move to the branch you want to update and use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git merge &amp;lt;update source branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5EN09Oi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c295xb9c1qq9jlk9aqnp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5EN09Oi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c295xb9c1qq9jlk9aqnp.PNG" alt="Git Merge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-conflict"&gt;
  &lt;/a&gt;
  8. Conflict
&lt;/h3&gt;

&lt;p&gt;Merging branches may result in &lt;strong&gt;conflict&lt;/strong&gt; if, in both of the branches, the same part of the same file was updated. In such a case, &lt;code&gt;git&lt;/code&gt; doesn't know which change to keep and which to discard. So &lt;code&gt;git&lt;/code&gt; creates a &lt;strong&gt;conflict&lt;/strong&gt; message for manual review.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--no5h2uGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eytr3s3bw1d3purmmzx9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--no5h2uGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eytr3s3bw1d3purmmzx9.PNG" alt="Git Merge Fail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The conflict message outlines where the &lt;strong&gt;conflict&lt;/strong&gt; occurred as well as the current (available in the branch) and incoming changes (merging from another branch).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tERDFliN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egwnkoxah0agycrswz1y.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tERDFliN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egwnkoxah0agycrswz1y.PNG" alt="Git Conflict"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After resolving the &lt;strong&gt;conflict&lt;/strong&gt;, you need to add a &lt;strong&gt;commit&lt;/strong&gt; to save the resolved &lt;strong&gt;merge&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we learned the basic concepts and commands of &lt;code&gt;git&lt;/code&gt; and how to add it to a project. Now you have this skill in your arsenal and would be able to use it in your projects to maximize your productivity :)&lt;/p&gt;

&lt;p&gt;Stay tuned for the article next week, where we will be diving into how to use &lt;code&gt;git&lt;/code&gt; for remote repositories hosted on sites like &lt;strong&gt;GitHub&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 5 Best Resources To Learn Javascript</title>
      <author>Innocent Coder</author>
      <pubDate>Sun, 27 Jun 2021 05:40:44 +0000</pubDate>
      <link>https://dev.to/innocentcoder/top-5-best-resources-to-learn-javascript-e3p</link>
      <guid>https://dev.to/innocentcoder/top-5-best-resources-to-learn-javascript-e3p</guid>
      <description>&lt;p&gt;Hello friends, Today we have the top 5 resources that you can use to learn javascript. Javascript is the most popular and flexible programming language on the web. Javascript is used for websites, web app, and more various fields.&lt;/p&gt;

&lt;p&gt;this post repost from :- &lt;a href="https://the-dev-community.blogspot.com/top-5-best-resources-to-learn-javascript"&gt;https://the-dev-community.blogspot.com/top-5-best-resources-to-learn-javascript&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-codecademy"&gt;
  &lt;/a&gt;
  1. Codecademy
&lt;/h1&gt;

&lt;p&gt;Codecademy is one of the best platforms to learn javascript, they provide the completion certificate. 1,686,370 students join this course and it's very easy to learn and faculty is very kind and helpful.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;https://www.codecademy.com/learn/introduction-to-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;course syllabus&lt;/strong&gt;&lt;br&gt;
conditionals&lt;br&gt;
functions&lt;br&gt;
scope&lt;br&gt;
arrays&lt;br&gt;
loops&lt;br&gt;
interators&lt;br&gt;
objects&lt;br&gt;
classes&lt;br&gt;
browser compatibility and transpilation&lt;br&gt;
modules&lt;br&gt;
promises&lt;br&gt;
async-await&lt;br&gt;
requests&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_c_NZukw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lfwnxyboh4ramrpkvhy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_c_NZukw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lfwnxyboh4ramrpkvhy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-javascript-essentials"&gt;
  &lt;/a&gt;
  2. Javascript Essentials
&lt;/h1&gt;

&lt;p&gt;Learn the Javascript essentials for web development or any type of programming. Learn all the basics of Javascript including primitive types, arrays, functions, assignment operators, the window object and much more. Also I'll provide clear explanations of objects, constructors and arrays in a clear way for anyone to understand. We'll also dive into some more detail about how Javascript works and even advanced topics like prototype inheritance, scope, execution context and much more. So why should you learn Javascript? Well it's everywhere and is getting even bigger in 2016. It's available to mobile apps, desktop apps, server side nodeJS technology and as always in every single browser around the world. There has never been a better time to learn the basics of Javascript!&lt;/p&gt;

&lt;p&gt;lnk:- &lt;a href="https://www.udemy.com/course/javascript-essentials/"&gt;https://www.udemy.com/course/javascript-essentials/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;course syllabus&lt;/strong&gt;&lt;br&gt;
What is Javascript?&lt;br&gt;
How Javascript Works&lt;br&gt;
Javascript Console&lt;br&gt;
Objects in Javascript&lt;br&gt;
Javascript Syntax&lt;br&gt;
Primitive Data&lt;br&gt;
Variables, Constants &amp;amp; Assignment&lt;br&gt;
Arithmetic Operator’s &amp;amp; BODMAS&lt;br&gt;
Assignment Operator’s&lt;br&gt;
Code Editors &amp;amp; Debugging&lt;br&gt;
Functions or Subroutines&lt;br&gt;
Objects &amp;amp; Arrays&lt;br&gt;
Embedding Objects &amp;amp; Arrays&lt;br&gt;
Member Access&lt;br&gt;
Computed Member Access&lt;br&gt;
Member Creation, Assignment &amp;amp; Deletion&lt;br&gt;
Array Modification&lt;br&gt;
Callable Objects&lt;br&gt;
Scope &amp;amp; Closures&lt;br&gt;
Inferred Globals &amp;amp; Scope&lt;br&gt;
This Context&lt;br&gt;
Constructors&lt;br&gt;
Prototype&lt;br&gt;
Constructors with Prototype&lt;br&gt;
Comparison Operators&lt;br&gt;
If Statements&lt;br&gt;
For &amp;amp; For In Loop's&lt;br&gt;
Let ES6&lt;br&gt;
Understanding the Document Object Model&lt;br&gt;
Targeting DOM Element’s&lt;br&gt;
Changing Element's Content's&lt;br&gt;
Changing Element Style's&lt;br&gt;
Event Handlers&lt;br&gt;
Create &amp;amp; appendChild &amp;amp; insertBefore method's&lt;br&gt;
Final Project&lt;br&gt;
Conclusion &amp;amp; Goodbye&lt;br&gt;
Bonus Lecture: Discount Courses&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FzguIUd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ea8pxsaa88xu3ugfqf97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FzguIUd7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ea8pxsaa88xu3ugfqf97.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#3-javascriptinfo"&gt;
  &lt;/a&gt;
  3. Javascript.info
&lt;/h1&gt;

&lt;p&gt;The Modern JavaScript Tutorial was created in 2007 by Ilya Kantor, and regularly updated since then. New chapters were added, outdated ones - removed, to stay fresh. The PDF version is about 1300 pages, starting from the beginning, and then to advanced topics. It's a book, not a video, as for many people reading is faster. Also, books are easier to update, keep modern :). &lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://javascript.info/"&gt;https://javascript.info/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;course syllabus&lt;/strong&gt;&lt;br&gt;
An introduction&lt;br&gt;
JavaScript Fundamentals&lt;br&gt;
Code quality&lt;br&gt;
Objects: the basics&lt;br&gt;
Data types&lt;br&gt;
Advanced working with functions&lt;br&gt;
Object properties configuration&lt;br&gt;
Prototypes, inheritance&lt;br&gt;
Classes&lt;br&gt;
Error handling&lt;br&gt;
Promises, async/await&lt;br&gt;
Generators, advanced iteration&lt;br&gt;
Modules&lt;br&gt;
Miscellaneous &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vea5wpla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0vj8dqzidlz9xcp0poq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vea5wpla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0vj8dqzidlz9xcp0poq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#4-mdn-by-mozilla"&gt;
  &lt;/a&gt;
  4. MDN By Mozilla
&lt;/h1&gt;

&lt;p&gt;MDN is more of a reference tool. Not really structured for learning by newbies. But it is an excellent resource for folks that already have a decent background with the technologies they are reading about. Yes MDN is the best online resource for learning HTML and CSS.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;course syllabus&lt;/strong&gt;&lt;br&gt;
JavaScript basics&lt;br&gt;
JavaScript first steps&lt;br&gt;
JavaScript building blocks&lt;br&gt;
Introducing JavaScript objects&lt;br&gt;
Introduction&lt;br&gt;
Grammar and types&lt;br&gt;
Control flow and error handling&lt;br&gt;
Loops and iteration&lt;br&gt;
Functions&lt;br&gt;
Expressions and operators&lt;br&gt;
Numbers and dates&lt;br&gt;
Text formatting&lt;br&gt;
Regular expressions&lt;br&gt;
Indexed collections&lt;br&gt;
Keyed collections&lt;br&gt;
Working with objects&lt;br&gt;
Details of the object model&lt;br&gt;
Using promises&lt;br&gt;
Iterators and generators&lt;br&gt;
Meta programming&lt;br&gt;
JavaScript modules&lt;br&gt;
Client-side JavaScript frameworks&lt;br&gt;
Client-side web APIs&lt;br&gt;
A re-introduction to JavaScript&lt;br&gt;
JavaScript data structures&lt;br&gt;
Equality comparisons and sameness&lt;br&gt;
Closures&lt;br&gt;
Inheritance and the prototype chain&lt;br&gt;
Strict mode&lt;br&gt;
JavaScript typed arrays&lt;br&gt;
Memory Management&lt;br&gt;
Concurrency model and Event Lo&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGbGghFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29fjtgfbskfxdhxtsg5o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGbGghFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29fjtgfbskfxdhxtsg5o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#5-javascript-30"&gt;
  &lt;/a&gt;
  5. Javascript 30
&lt;/h1&gt;

&lt;p&gt;Javascript 30 is great for showing you some basic ways you can use javascript to create or alter websites. Others are right that there are other "more important" things to learn, but practising code and seeing some simple working examples is also very useful.&lt;/p&gt;

&lt;p&gt;link:- &lt;a href="https://javascript30.com/"&gt;https://javascript30.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;course syllabus&lt;/strong&gt;&lt;br&gt;
JavaScript Drum Kit&lt;br&gt;
CSS + JS Clock&lt;br&gt;
Playing with CSS Variables and JS&lt;br&gt;
Array Cardio Day 1&lt;br&gt;
Flex Panels Image Gallery&lt;br&gt;
Ajax Type Ahead&lt;br&gt;
Array Cardio Day 2&lt;br&gt;
Fun with HTML5 Canvas&lt;br&gt;
14 Must Know Dev Tools Tricks&lt;br&gt;
Hold Shift to Check Multiple Checkboxes&lt;br&gt;
Custom HTML5 Video Player&lt;br&gt;
Key Sequence Detection (KONAMI CODE)&lt;br&gt;
Slide In on Scroll&lt;br&gt;
Object and Arrays - Reference VS Copy&lt;br&gt;
LocalStorage and Event Delegation&lt;br&gt;
CSS Text Shadow Mouse Move Effect&lt;br&gt;
Sorting Band Names without articles&lt;br&gt;
Tally String Times with Reduce&lt;br&gt;
Unreal Webcam Fun&lt;br&gt;
Native Speech Recognition&lt;br&gt;
Geolocation based Speedometer and Compass&lt;br&gt;
Follow Along Links&lt;br&gt;
Speech Synthesis&lt;br&gt;
Sticky Nav&lt;br&gt;
Event Capture, Propagation, Bubbling and Once&lt;br&gt;
Stripe Follow Along Dropdown&lt;br&gt;
Click and Drag to Scroll&lt;br&gt;
Video Speed Controller UI&lt;br&gt;
Countdown Clock&lt;br&gt;
Whack A Mole Game&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1RUQGLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9fkm6ddm4pflue00nex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1RUQGLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9fkm6ddm4pflue00nex.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/vibrate-mobiledevice-with-javascript-245f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Vibrate MobileDevice With
Javascript&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ Jun 24 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>30 Days of React JS: Solving 30 Problems in 30 Days!</title>
      <author>Praveen Kumar</author>
      <pubDate>Sun, 27 Jun 2021 04:54:12 +0000</pubDate>
      <link>https://dev.to/praveenscience/30-days-of-react-js-solving-30-problems-in-30-days-1pjc</link>
      <guid>https://dev.to/praveenscience/30-days-of-react-js-solving-30-problems-in-30-days-1pjc</guid>
      <description>&lt;p&gt;Welcome to the World of JavaScript! This is the age of JavaScript. JavaScript is everywhere in the Full Stack. I am planning to solve a couple of problems that I faced in my work and other places. Let's try solving 30 crazy problems I had in the next 30 days, starting from Feb 14th! Also, &lt;a href="https://github.com/eddiejaoude"&gt;Eddie Jaoude&lt;/a&gt; (one of the very few GitHub Stars in this entire Milky Way Galaxy) is going to do the honours of kick-starting this event!&lt;/p&gt;

&lt;p&gt;Here's a Pilot that explains why and when:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rb.gy/vmw5dr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEVpN9DC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KXEPKc9h.png" alt="Trailer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episodes"&gt;
  &lt;/a&gt;
  Episodes
&lt;/h2&gt;

&lt;p&gt;Here are the current topics that we are covering. They are completely diverse, but some are interconnected (i.e., you have to have watched the previous episode so that you can understand better).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/s0cc3p"&gt;Intro to JSX&lt;/a&gt; by &lt;a href="https://linkedin.com/in/dolly-jain05"&gt;Dolly Jain&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/l2eu2j"&gt;Componentising your React App&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/pooja-singh12"&gt;Pooja Singh&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/mbidmc"&gt;States &amp;amp; Props of Components&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/tanya-taneja-a88465196/"&gt;Tanya Taneja&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/vqiqyd"&gt;A Simple Connected Component&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/nikita-raghuwanshi-933233203/"&gt;Nikita Raghuwanshi&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/neniq4"&gt;Customising the Branding Part of your App&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/sonali-bedade-0519071ab/"&gt;Sonali Bedade&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/p4sbc1"&gt;Changing your Favicon RealTime&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/shriya-madan-5b1283167"&gt;Shriya Madan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/akyl9s"&gt;Bootstrap CSS Header Component&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/sohini-pattanayak-259b92117/"&gt;Sohini Pattanayak&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/kh4e6p"&gt;Interactively Theming the Header Component&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/tanya-taneja-a88465196/"&gt;Tanya Taneja&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/rnyw0e"&gt;Fetching External Data Using AJAX&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/shivamjoker/"&gt;Shivam Veer Singh&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/yp6vuf"&gt;Fetching External Data with Axios&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/dey-ayonika/"&gt;Ayonika Dey&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/giin3y"&gt;Converting States into Hooks&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/sonali-bedade-0519071ab/"&gt;Sonali Bedade&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/wqwcpl"&gt;Discord Emoji Hover Effect&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/kirthana-s/"&gt;Kirthana Subramaniam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/vole5k"&gt;Layout for 30 Days of React&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/shilpa-khelge-74a630139/"&gt;Shilpa Khelge&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/5hn1i1"&gt;GitHub JSON to 30 DoR Layout&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/shivanigangadharan/"&gt;Shivani Gangadharan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/6hr8eh"&gt;Display Posts from Public JSON API&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/riti2409/"&gt;Riti Kumari&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/pmpw50"&gt;React Router for Multiple Page Apps&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/akhil-rudrawar-b17423192/"&gt;Akhil Rudrawar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/3t0x2b"&gt;Deploying React &amp;amp; Router using GH Pages&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/shriya-chadha30/"&gt;Shriya Chadha&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/gtddii"&gt;Really Making Deployment using GH Pages&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/shriya-chadha30/"&gt;Shriya Chadha&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/tclx9s"&gt;Create a Responsive Carousel&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/riti2409/"&gt;Riti Kumari&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/soddqq"&gt;Basic Web page with Kotlin and React&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/khushi-sharma-2201/"&gt;Khushi Sharma&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/fmnpho"&gt;Build LinkTree App using React JS&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/vismita-prabhu-3b3b381a4/"&gt;Vismita Prabhu&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/ygjbnp"&gt;Finish LinkTree App using React JS&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/vismita-prabhu-3b3b381a4/"&gt;Vismita Prabhu&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/xmuhpk"&gt;React JS using TypeScript&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/vinayak-nirvani-6b074a33/"&gt;Vinayak Nirvani&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/gnsqwm"&gt;Redux using TypeScript&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/vinayak-nirvani-6b074a33/"&gt;Vinayak Nirvani&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rb.gy/xqekyo"&gt;Generics in TypeScript&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/vinayak-nirvani-6b074a33/"&gt;Vinayak Nirvani&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>node</category>
      <category>praveenscience</category>
    </item>
    <item>
      <title>🧑‍🏫 Unacademy Interview Experience - Software Engineer, Web</title>
      <author>Rajat Gupta</author>
      <pubDate>Sun, 27 Jun 2021 04:17:13 +0000</pubDate>
      <link>https://dev.to/rajatetc/unacademy-interview-experience-software-engineer-web-2obm</link>
      <guid>https://dev.to/rajatetc/unacademy-interview-experience-software-engineer-web-2obm</guid>
      <description>&lt;p&gt;I have joined Unacademy as Software Engineer, Web. I am a final-year BTech student. I will be graduating next month or so.&lt;/p&gt;

&lt;p&gt;In this article - I will share how I got the opportunity, interview experience, tips, and the resources that helped me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-contact"&gt;
  &lt;/a&gt;
  🐣 First Contact
&lt;/h2&gt;

&lt;p&gt;It all started when one of my articles went viral. The article in question: &lt;a href="https://dev.to/rajatetc/js-interview-checklist-part-1-basics-10k6"&gt;https://dev.to/rajatetc/js-interview-checklist-part-1-basics-10k6&lt;/a&gt;. I had shared the article on LinkedIn. An Unacademy recruiter liked my article. So, I cold DM'ed him for a chance to interview.&lt;/p&gt;

&lt;p&gt;To my delight - he said that he has already checked out my portfolio - resume, projects, and articles and will get back to me if any relevant openings come up.&lt;/p&gt;

&lt;p&gt;After one week or so -  I did a follow-up. To my good fortune - they had started hiring for a junior role. The recruiter explained everything related to the rounds over a call and scheduled the first round.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-rounds"&gt;
  &lt;/a&gt;
  🥊 The Rounds
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; JS Fundamentals (~ 1 hr)&lt;/li&gt;
&lt;li&gt;Frontend with React (~ 1 hr)&lt;/li&gt;
&lt;li&gt;Senior Engineering Manager (~ 30 m)&lt;/li&gt;
&lt;li&gt;Culture ( ~ 30 min)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Platform:&lt;/strong&gt; Google Meet&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding Environment:&lt;/strong&gt; CodeSandbox&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#js-fundamentals"&gt;
  &lt;/a&gt;
  ✔️ JS Fundamentals
&lt;/h2&gt;

&lt;p&gt;It started with a simple intro. Then we quickly jumped to JS questions. The questions revolved around the concepts of closures, setTimeout, this, async/await, and promises.&lt;/p&gt;

&lt;p&gt;For the output-based questions: the interviewer first gave a simple question and then added more complexity to it.&lt;/p&gt;

&lt;p&gt;There was no DS/Algo but there were questions like writing the &lt;code&gt;Promise.all()&lt;/code&gt; method from scratch to test problem-solving skills. The interviewer gave hints or directed me whenever I got stuck.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend-with-react"&gt;
  &lt;/a&gt;
  🌋 Frontend with React
&lt;/h2&gt;

&lt;p&gt;This took place after a few days. There were two interviewers in this round. One was just shadowing the whole process.&lt;/p&gt;

&lt;p&gt;The questions ranged from basics like what is React, state, hooks, class components to coding a counter, cleanups, and custom hooks.&lt;/p&gt;

&lt;p&gt;In the end - the interviewer also asked JS questions on this, objects, new operator, and the event loop. There were questions on performance optimizations like debounce and throttle as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take-home assignment:&lt;/strong&gt; After this round - there was supposed to be a take-home assignment. But I shared the projects I had built and they were impressed enough to skip it. &lt;/p&gt;

&lt;p&gt;After two days, the next two rounds took place on the same day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#senior-engineering-manager"&gt;
  &lt;/a&gt;
  🧑🏻‍💼 Senior Engineering Manager
&lt;/h2&gt;

&lt;p&gt;This round was with employee #9 at Unacademy. Now, we are 5000+.&lt;/p&gt;

&lt;p&gt;It was more of a discussion on how I approach problems, team dynamics, and culture fit. It started with technical questions on what I had done in my previous internship and optimizations in my projects. &lt;/p&gt;

&lt;p&gt;Questions related to culture fit like what worked in the previous internship and what didn't were peppered in between. He also asked what I would like to work on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#culture"&gt;
  &lt;/a&gt;
  👘 Culture
&lt;/h2&gt;

&lt;p&gt;It was again more of a discussion. Questions related to behavior and situations like how will you react if the project you were working on for a few months gets shelved.&lt;/p&gt;

&lt;p&gt;All the interviewers were very friendly. At no point - it felt like an interrogation. They guided me whenever I got stuck.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-worked-for-me"&gt;
  &lt;/a&gt;
  ⚙️ What Worked For me
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Building in public. All my projects are hosted online. They have proper readMEs and posted on relevant platforms like Linkedin. This caught their attention in the first place and allowed me to skip the take-home assignment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Doubled down on strengthening my fundamental knowledge of JS and React. I had also prepped for CSS but that didn't come in my round 2. This helped me tackle the coding questions in the rounds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thoroughly researched the company - I had gone through their leadership principles, tech blog, videos, recent initiatives, and so on. I had also checked their product - analyzed the UI/UX and checked the lighthouse report for the website. I got positive feedback from every interviewer and they were impressed that I knew so much about the company.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Beforehand I had also prepped my intro, spoken out loud when coding during the process, and asked specific questions at the end. I also reached out to friends and mentors to make sure that I am not over-preparing or headed in the wrong direction.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, I had an overall positive and high-energy approach to everything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  📚 Resources
&lt;/h2&gt;

&lt;p&gt;In my journey to learn web development, I had perused many resources - ranging from documentation, videos, courses to articles, Twitter, and LinkedIn posts.&lt;/p&gt;

&lt;p&gt;Here, I share some of the key resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMZFwxv5l-XtKi693qMJptA"&gt;Coding Addict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;Namaste JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://blog.unacademy.com/"&gt;Unacademy Blog&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://workat.tech/general/article/ace-behavioral-interview-star-technique-igsg09rw2u1a"&gt;STAR Technique&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last but not the least, a shoutout to the 🚀 &lt;a href="https://www.roc8.careers/"&gt;roc8&lt;/a&gt; community for helping in the interview preparation. &lt;/p&gt;

&lt;p&gt;If you have any questions - you can comment down below or DM me on Twitter.&lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to create signature pad in html | signature pad JavaScript</title>
      <author>Stackfindover</author>
      <pubDate>Sun, 27 Jun 2021 04:09:38 +0000</pubDate>
      <link>https://dev.to/stackfindover/how-to-create-signature-pad-in-html-signature-pad-javascript-3866</link>
      <guid>https://dev.to/stackfindover/how-to-create-signature-pad-in-html-signature-pad-javascript-3866</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hello guys, today I am going to show you how to create a signature pad using HTML CSS &amp;amp; JavaScript, in this video, I will create a JavaScript signature pad using the signature pad JavaScript library.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-signature-pad-step-by-step"&gt;
  &lt;/a&gt;
  JavaScript signature pad step by step
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#step-1-creating-a-new-project"&gt;
  &lt;/a&gt;
  Step 1 — Creating a New Project
&lt;/h4&gt;

&lt;p&gt;In this step, we need to create a new project folder and files(index.html, style.css) for creating an awesome responsive website footer. In the next step, you will start creating the structure of the webpage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may like these also:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://blog.stackfindover.com/how-to-create-currency-converter-in-javascript/"&gt;How to create currency converter in javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.stackfindover.com/how-to-integrate-webcam-using-javascript/"&gt;How to Integrate Webcam using JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#step-2-setting-up-the-basic-structure"&gt;
  &lt;/a&gt;
  Step 2 — Setting Up the basic structure
&lt;/h4&gt;

&lt;p&gt;In this step, we will add the HTML code to create the basic structure of the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;How to create signature pad in html&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the base structure of most web pages that use HTML.&lt;/p&gt;

&lt;p&gt;Add the following code inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex-row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"signature-pad"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"400"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"200"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clear-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"clear"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt; Clear &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-3-adding-styles-for-the-classes"&gt;
  &lt;/a&gt;
  Step 3 — Adding Styles for the Classes
&lt;/h4&gt;

&lt;p&gt;In this step, we will add styles to the section class Inside style.css file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ececec&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.flex-row&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#4b00ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;canvas&lt;/span&gt;&lt;span class="nf"&gt;#signature-pad&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;crosshair&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nf"&gt;#clear&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#4b00ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nf"&gt;#clear&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;90deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-4-adding-signature-pad-javascript-library-and-code"&gt;
  &lt;/a&gt;
  Step 4 — Adding signature pad javascript library and code
&lt;/h4&gt;

&lt;p&gt;In this step, we will add some javascript code to generate canvas and add the signature pad library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/signature_pad/1.3.5/signature_pad.min.js"&lt;/span&gt; &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-kw/nRM/BMR2XGArXnOoxKOO5VBHLdITAW00aG8qK4zBzcLVZ4nzg7/oYCaoiwc8U9zrnsO9UHqpyljJ8+iqYiQ=="&lt;/span&gt; &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt; &lt;span class="na"&gt;referrerpolicy=&lt;/span&gt;&lt;span class="s"&gt;"no-referrer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
       &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;signature-pad&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

       &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;resizeCanvas&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ratio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;devicePixelRatio&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
           &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetWidth&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetHeight&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onresize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;resizeCanvas&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="nx"&gt;resizeCanvas&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

       &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;signaturePad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SignaturePad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rgb(250,250,250)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
       &lt;span class="p"&gt;});&lt;/span&gt;

       &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;clear&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;signaturePad&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="p"&gt;})&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-result"&gt;
  &lt;/a&gt;
  #Final Result
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/uOJ81GDRs38"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>#100DaysOfCodeChallenge - Crop Management Information System - Day 4</title>
      <author>Curtly Critchlow</author>
      <pubDate>Sun, 27 Jun 2021 03:42:14 +0000</pubDate>
      <link>https://dev.to/curtlycritchlow/100daysofcodechallenge-crop-management-information-system-day-4-2i8l</link>
      <guid>https://dev.to/curtlycritchlow/100daysofcodechallenge-crop-management-information-system-day-4-2i8l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;On &lt;a href="https://dev.to/curtlycritchlow/100daysofcodechallenge-crop-management-information-system-day-3-5b45"&gt;Day 3&lt;/a&gt; I created the Farmer registration form and highlighted the need for me to understand layout and constraints in more detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;In this post we will pause building the Crop Management Information System and discuss layout and constraints using the Row and Column widget.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#row-and-column"&gt;
  &lt;/a&gt;
  Row and Column
&lt;/h2&gt;

&lt;p&gt;Row and Column are two of the most commonly used layout style, they both take a list of child widgets.&lt;/p&gt;

&lt;p&gt;Two important terms to keep in mind when dealing with layout are Constraints and size.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#constraints-vs-size"&gt;
  &lt;/a&gt;
  Constraints vs Size
&lt;/h3&gt;

&lt;p&gt;Constraints are concerned with minimum height, maximum height, minimum width and maximum width. Size is the actual height and width a widget takes up. To illustrate, the parent widget tells its children how big or small it can be, the child widget then decides what size it will take given the constraints provided by its parents.&lt;/p&gt;

&lt;p&gt;Row and Column widgets are special. If they have constraints passed into it by its parents, they are as big as possible within those constraints. If no constraints are provided by its parents they will be as big as the combined size of its children.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infinite-size-error"&gt;
  &lt;/a&gt;
  Infinite size error
&lt;/h3&gt;

&lt;p&gt;Infinite size error is a common error occurrence when working with row and column. It occurs when the children of an unconstrained row or column is also unconstrained. This create a sort of circular reference, ie The column or row is trying to be as big as its children when the children are trying to be as big as the column or row.&lt;/p&gt;

&lt;p&gt;In context of our Crop Management Information System app, this error occured when Placing a &lt;code&gt;TextFormField()&lt;/code&gt; widget inside a &lt;code&gt;Row()&lt;/code&gt; widget. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gjy9ZoqG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1uPmdHiSXX34SxbJyy-d7V29XPL6nLwor" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gjy9ZoqG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fid%3D1uPmdHiSXX34SxbJyy-d7V29XPL6nLwor" alt="Farmer Form"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Specifically, the &lt;code&gt;InputDecorator&lt;/code&gt; of the &lt;code&gt;TextFormField()&lt;/code&gt; has an unbound width while a row can be infinitely wide.&lt;/p&gt;

&lt;p&gt;A common solution to the Infinite size error when using row and column is to wrap each unconstrained child in an &lt;a href="https://api.flutter.dev/flutter/widgets/Expanded-class.html"&gt;expanded widget&lt;/a&gt;. Your can read more about it in this &lt;a href="https://flutter.dev/docs/development/ui/layout"&gt;flutter article&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;When troubleshooting our code it is important to understand why the error occurred in the first place. The more we understand what is occurring "under the hood" of the flutter SDK the better equipped we are at troubleshooting our errors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;p&gt;Thank you for reading my post. Feel free to subscribe below to join me on the #100DaysOfCodeChallenge or connect with me on &lt;a href="https://www.linkedin.com/in/curtlycritchlow/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/CritchlowCurtly"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>flutter</category>
      <category>dart</category>
    </item>
    <item>
      <title>My personal notes about requirement elicitation in unideal situations</title>
      <author>Jafet Benítez</author>
      <pubDate>Sun, 27 Jun 2021 02:13:41 +0000</pubDate>
      <link>https://dev.to/jafetbntz/my-personal-notes-about-requirement-elicitation-in-unideal-situations-5fj5</link>
      <guid>https://dev.to/jafetbntz/my-personal-notes-about-requirement-elicitation-in-unideal-situations-5fj5</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oz8xTUmZABI3PGwDe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oz8xTUmZABI3PGwDe/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://giphy.com/gifs/cute-craft-hand-made-3oz8xTUmZABI3PGwDe"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A common mistake in the development industry is not paying attention to the requirements (functional and non-functional). Requirement elicitation and analysis are the very first step in software development but sometimes, in a bad implementation of agile methodologies, we can lose focus of that and end up building the wrong software.&lt;/p&gt;

&lt;p&gt;In an ideal case, you would have someone to talk with users and customers, observe them and later write down what the business is requiring. Then, that person would sit down with the technical team to analyze requirements, business rules and make a plan for the implementation and validation. But, as I said before that is “ideally” and in countries where software engineering and requirement engineering are still growing as is mine,  sometimes you have to elucidate the requirements by yourself, analyze them and implement them with a very short deadline.&lt;/p&gt;

&lt;p&gt;I remember my first job. I was a 19 years old junior developer in a government organization working in ERP for the financial direction. We were a small team with lots of work, so our manager decided to assign us to different modules and do the elicitation of requirements by ourselves; later, we would check out our notes in one of our daily meetings. Initially, I didn’t feel in an ideal situation because of my lack of experience and maybe I wasn’t, but we had to make it work. &lt;/p&gt;

&lt;p&gt;I realized pretty soon that elicitation wasn’t as simple as I had thought during my classes in college. We had to deal with the short time of the actors, the ambiguity of the process, the actors with a tree-view mindset, and the resistance to change. Again, it wasn’t an ideal situation but had to make it work.&lt;/p&gt;

&lt;p&gt;With time, I realized that rarely we can make an elicitation without troubles and that is ok, because, if the company hadn't problems they wouldn't have hired you to build the software in the first place. Through some time doing this kind of work, I have learned some lessons that I will leave you below. Anyway, if you want to go deeper into this topic, I highly recommend you to look at &lt;em&gt;The Guide to the Software Engineering Body of Knowledge (SWEBOK Guide)&lt;/em&gt;. Said that, let’s go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#review-the-same-process-with-more-than-one-actor"&gt;
  &lt;/a&gt;
  Review the same process with more than one actor.
&lt;/h2&gt;

&lt;p&gt;The user or actor usually knows how to do his work, but does not always know how the company works or even what his partner is doing on the desk that is by his side. Actors may ignore what happens with the process after they deliver the record and that’s why you have to listen to the process from the mouths of as many people as you can find.&lt;/p&gt;

&lt;p&gt;You may find some power users that know the company pretty well or employees that were there when the process started working in that way. They are pretty helpful and you should pay attention to them, but to find them, you have to talk to several actors and put the ideas together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#people-may-not-be-technical-so-try-to-speak-his-language-and-dont-try-to-make-him-learn-yours"&gt;
  &lt;/a&gt;
  People may not be technical, so try to speak his language and don’t try to make him learn yours.
&lt;/h2&gt;

&lt;p&gt;As a noob in the field, I made the mistake of talking technically to the actors. As an analyst, you have to avoid getting too technical about the implementation instead of talking with the actors in terms of the business or even better, in terms the actor can understand easily.&lt;/p&gt;

&lt;p&gt;Better communication will get you more clarity. More clarity will lead you to better requirements and that will avoid having extra iterations or sprints because you already are making the right software from the beginning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#identify-priorities"&gt;
  &lt;/a&gt;
  Identify priorities.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/DpSoj00vkPpswwZU9o/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/DpSoj00vkPpswwZU9o/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://giphy.com/gifs/theoffice-gphyoffice726-DpSoj00vkPpswwZU9o"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During elicitation, you will find more than one trouble and probably more problems than what your team can handle at once. This is why you have to identify priorities and talk them down with the owner of the process and with your superior. And that leads us to the next lessons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validate-your-notes-with-a-mentor-andor-your-superior"&gt;
  &lt;/a&gt;
  Validate your notes with a mentor and/or your superior.
&lt;/h2&gt;

&lt;p&gt;This is probably more for people starting in the area.  But even for experienced analysts, elicitation and analysis are more about having the right conversation with the right people than about having a brainstorm with yourself walking in circles in your office.&lt;/p&gt;

&lt;p&gt;Receiving another point of view it’s critical when you are trying to make a work with quality.&lt;/p&gt;

&lt;p&gt;Now, notice that I’m talking about having not just a superior to check your notes with you, but also a mentor. If you are starting in the area, you may have noticed that there’s a lot of things you can learn by yourself but what most people don't say is that a mentor can save you a lot of headaches. Don’t you have one? Get one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#identify-improvement-opportunities"&gt;
  &lt;/a&gt;
  Identify improvement opportunities.
&lt;/h2&gt;

&lt;p&gt;The user and the client may tell you how they do things from the beginning of the time. They will describe the process they want you to systematize but they may lose improvement opportunities trying to be faithful to their day-to-day.&lt;/p&gt;

&lt;p&gt;It’s probably not your work but take into consideration that before making a system for a process, the company needs to optimize the process. You can always take notes and communicate with them. Be proactive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remember-your-objective"&gt;
  &lt;/a&gt;
  Remember your objective.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/MdGUUTVHk7s1BA5Pyk/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/MdGUUTVHk7s1BA5Pyk/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://giphy.com/gifs/bigbangtheory-season-1-episode-9-big-bang-theory-MdGUUTVHk7s1BA5Pyk"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s not just building software for the company, it's solving problems of the company through software, so ask for the problems. Ask the different actors not just what they do and how things should be, but ask them about what kind of things usually go wrong and what happens then.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#respect-people-process-owner-user-or-client-you-must-respect-them"&gt;
  &lt;/a&gt;
  Respect people. Process owner, user, or client you must respect them.
&lt;/h2&gt;

&lt;p&gt;As we said before, while you are talking with several people you will notice that sometimes actors don’t have a holistic view of the company and its process and because of that, they may ask you for requirements that wouldn’t be right (mostly a matter of security). You will be tempted to make fun of the user and talk about “layer 8 problems”, or maybe of the client with something like “the customers know what they want but not what they need”, which may be true but you must have respect for them. The last thing you want is to have him as an enemy.&lt;/p&gt;

&lt;p&gt;Remember that they aren’t supposed to know what you know. If that were the idea you wouldn’t have been hired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-people-dont-want-to-collaborate"&gt;
  &lt;/a&gt;
  What if people don't want to collaborate?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/11qCjC856PSmnm/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/11qCjC856PSmnm/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://giphy.com/gifs/genius-albums-11qCjC856PSmnm"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Initially, I didn’t want to go into this topic, but while I was reviewing this article with my friend Vanessa, she told me that it would sound too idyllic if I didn't give any advice about hard people.&lt;/p&gt;

&lt;p&gt;There are all kinds of people in this world and there are people that will not collaborate with your elicitation, actors that can even get angry with you doing your work. These people require you to go the extra mile for them and try harder to get their collaboration but remember that you have to do it with sympathy and amiability. I remember that my boss used to buy chocolates for hateful people and most of the time that helped to make them know that you are trying to give a service for the company and the employees.&lt;/p&gt;

&lt;p&gt;Of course, if that doesn't work you will need to scale up the case or look for another person who can help you with that, but try to do that just as the last resource.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Finally, if there is something that I want you to remember, is that during elicitation you shouldn't fear finding troubles. Actually, you should try to remember that you are looking for the kind of problems that you can fix with software. Situations rarely are as we expected, they are not always ideal and that’s ok.&lt;/p&gt;

</description>
      <category>softwareengineering</category>
      <category>career</category>
    </item>
    <item>
      <title>The Frontend Hitchhiker's Guide: Testing</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 27 Jun 2021 01:21:49 +0000</pubDate>
      <link>https://dev.to/snickdx/the-frontend-hitchhikers-guide-testing-311k</link>
      <guid>https://dev.to/snickdx/the-frontend-hitchhikers-guide-testing-311k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Tests give you the confidence to make changes to code whether its yours or someone else's. Tested code also brings peace of mind and is the calling card of a mature developer. &lt;/p&gt;

&lt;p&gt;The following is an overview of some of the popular tooling for testing front end applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4F2pCJGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awfh13b7zrbwnyntjcx0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4F2pCJGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awfh13b7zrbwnyntjcx0.gif" alt="testing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Testing tools typically provide some combination of the following features:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Test running &amp;amp; reporting&lt;/li&gt;
&lt;li&gt;Assertion Syntax for writing test code&lt;/li&gt;
&lt;li&gt;Browser Automation&lt;/li&gt;
&lt;li&gt;Page auditing &amp;amp; profiling&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The following are common types of tests&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type of Testing&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unit&lt;/td&gt;
&lt;td&gt;Checking the functionality of individual components by comparing their inputs and output.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integration&lt;/td&gt;
&lt;td&gt;Verifying the functionality of&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;End to End&lt;/td&gt;
&lt;td&gt;Automating the browser to verify functionality from the UI, filling forms clicking buttons and checking network requests.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Performance&lt;/td&gt;
&lt;td&gt;Auditing a web page's performance such as load times and core web vitals&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accessibility&lt;/td&gt;
&lt;td&gt;Audit the accessibility of a page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#testing-tools"&gt;
  &lt;/a&gt;
  Testing Tools
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Libraries

&lt;ul&gt;
&lt;li&gt;&lt;a href="#jasmine"&gt;Jasmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jest"&gt;Jest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chai"&gt;Chai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mocha"&gt;Mocha&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-library"&gt;Testing Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Browser Automation

&lt;ul&gt;
&lt;li&gt;&lt;a href="#puppeteer"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-driver-io"&gt;Web Driver IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selenium-web-driver"&gt;Selenium Web Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nightwatch"&gt;Nightwatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cypress"&gt;Cypress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Page Auditing

&lt;ul&gt;
&lt;li&gt;&lt;a href="#lighthouse"&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-page-test"&gt;Webpage Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wave"&gt;WAVE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#frameworkslibraries"&gt;
  &lt;/a&gt;
  Frameworks/Libraries
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#jasmine"&gt;
  &lt;/a&gt;
  &lt;a href="https://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YjwdCIt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdtsnb1wsycyuwd2ovfi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YjwdCIt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdtsnb1wsycyuwd2ovfi.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Jasmine is the default testing library of angular but it can be used with any frontend framework. Jasmine allows you to write unit tests using the &lt;a href="https://en.wikipedia.org/wiki/Behavior-driven_development"&gt;Behavior-Driven Development&lt;/a&gt; (BDD) style.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jest"&gt;
  &lt;/a&gt;
  &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3kIlO8H4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyfdthxwuaelt8s3ljll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3kIlO8H4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyfdthxwuaelt8s3ljll.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Jest is another popular framework, jest boasts excellent exceptions that can provide more context when test cases fail. The Jest core team's goal is to make testing delightful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chai"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.chaijs.com/"&gt;Chai&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NrctRq-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fg515v43eisa68ofs6yb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NrctRq-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fg515v43eisa68ofs6yb.png" alt="image"&gt;&lt;/a&gt; Chai is an assertion library, which means it can provide additionally testing syntax that you may want on top of your existing test library. Allow developers to write more specific and readable test cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mocha"&gt;
  &lt;/a&gt;
  &lt;a href="https://mochajs.org/"&gt;Mocha&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKPSJzI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoyyzc6hotk30k96ff09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKPSJzI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoyyzc6hotk30k96ff09.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Mocha is a testing framework for writing tests but also lets your run the tests and view the report via the CLI. Mocha is often paired with Chai.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-library"&gt;
  &lt;/a&gt;
  &lt;a href="https://testing-library.com/docs/react-testing-library/intro/"&gt;Testing Library&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ogO8ZLlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc2stcoyb9lx1siredza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ogO8ZLlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc2stcoyb9lx1siredza.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Testing Library describes itself as a set of utilities that encourage good testing practices. It includes various libraries that allow you to write tests no matter what you use on the frontend such as the &lt;a href="https://testing-library.com/docs/angular-testing-library/intro"&gt;angular&lt;/a&gt;, &lt;a href="https://testing-library.com/docs/react-testing-library/intro"&gt;React&lt;/a&gt; and &lt;a href="https://testing-library.com/docs/vue-testing-library/intro"&gt;vue&lt;/a&gt;. Some of which are recommended by the corresponding UI library itself such as &lt;a href="https://reactjs.org/docs/testing.html"&gt;vue&lt;/a&gt; and &lt;a href="https://reactjs.org/docs/testing.html"&gt;react&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#browser-automation"&gt;
  &lt;/a&gt;
  Browser Automation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#puppeteer"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.google.com/web/tools/puppeteer"&gt;Puppeteer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Puppeteer is a fun nodejs package that lets you automate interactions on a browser's webpage. This is usually paired with a testing framework such as mocha to perform End-To-End testcase. For example with this combination you can test to verify if a form submits properly or if a table has a particular structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yr1I9Ugf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qlswfnuhxc0th0rhmd0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yr1I9Ugf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qlswfnuhxc0th0rhmd0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-driver-io"&gt;
  &lt;/a&gt;
  &lt;a href="https://webdriver.io/"&gt;Web Driver IO&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ri3Zuo-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa0krhhz9p3ysos8nd96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ri3Zuo-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa0krhhz9p3ysos8nd96.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web driver IO is another automation tool with the advantage of being designed with UI Libraries such as React and Vue in mind. Web Driver IO's syntax lets you directly select react/vue components on the page. This allows you to write tests specific to the source code as opposed to the build output that puppeteer would require.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selenium-web-driver"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.selenium.dev/documentation/en/webdriver/"&gt;Selenium Web Driver&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8WZ0mTIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iy9aw2zpgze8yeyyuif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8WZ0mTIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iy9aw2zpgze8yeyyuif.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Selenium Web Driver is another browser automation tool with more support for web browsers than puppeteer including Safari, Opera and even Internet Explorer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nightwatch"&gt;
  &lt;/a&gt;
  &lt;a href="https://nightwatchjs.org/"&gt;Nightwatch&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2fsE5wE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbu1w6basop3kbyakq3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2fsE5wE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbu1w6basop3kbyakq3p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nightwatch is a fully integrated End-to-End testing tool that adheres to the &lt;a href="https://www.w3.org/TR/webdriver/"&gt;W3C&lt;/a&gt; API. It also works with &lt;a href="https://www.browserstack.com/"&gt;Browser Stack&lt;/a&gt; to perform cloud testing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cypress"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5-rvkZJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj7p0hk1owrswaaz2l5n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-rvkZJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj7p0hk1owrswaaz2l5n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cypress is another fully integrated End-to-End testing tool which lets you write, run and record tests in an interactive dashboard. Cypress has a really nice developer experience and much loved by its userbase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-auditing"&gt;
  &lt;/a&gt;
  Page Auditing
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#lighthouse"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;Lighthouse&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRhylzat--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cghr8j4m7g9gmj776g8c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRhylzat--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cghr8j4m7g9gmj776g8c.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Lighthouse audits performance according to the &lt;a href="https://web.dev/vitals/"&gt;core web vitals&lt;/a&gt;. Additionally, lighthouse can audit for Accessibility, Best Practices, Search Engine Optimization and whether your page is a Progressive Web App. You can also automate lighthouse audits via its &lt;a href="https://github.com/GoogleChrome/lighthouse-ci"&gt;API&lt;/a&gt;. Its a great tool to ensure your app is fast and does well with google search.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-page-test"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.webpagetest.org/"&gt;Web Page Test&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g5NPpbsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ha3j71308j9wexv1mrs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5NPpbsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ha3j71308j9wexv1mrs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web page test is a website that allows you to analyze a web page's performance. It records checks for compression, caching effective use CDN and load times among other things. You can create automated performance tests using its &lt;a href="https://github.com/marcelduran/webpagetest-api"&gt;API&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wave"&gt;
  &lt;/a&gt;
  &lt;a href="https://wave.webaim.org/"&gt;WAVE&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x5sNKkOa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/astr39fel6buo716az3y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x5sNKkOa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/astr39fel6buo716az3y.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
The Web Accessibility Evaluation Tool with audit your page for accessibility issues. This includes improper use of html elements, bad tab navigation, improper use of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;aria attributes&lt;/a&gt;, font sizes and colour contrasts. Accessibility (A11y) is unfortunately an afterthought sometimes for developers but paying just a little attention to it can go a long way for making a web for everyone.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This stop was a hefty one. As you can see there many tools available for testing (this is no way all of them) and this is just on the frontend side of things. We will be arriving at stop 6 next week and it promises to be very insightful. Can you guess what it might be?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.testim.io/blog/front-end-testing-complete-overview/"&gt;Front End Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.perfecto.io/blog/comprehensive-guide-front-end-testing"&gt;A comprehensive Guide to Front End Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/linkwepodcast/videos/1176353916126186"&gt;LinkWe Podcast: Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/front-end-testing-is-for-everyone/"&gt;CSS Tricks: Frontend testing is for everyone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://frontendmasters.com/books/front-end-handbook/2018/tools/testing.html"&gt;Frontend Masters: Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>testing</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>10 Best Development Articles you can't miss to read</title>
      <author>programmer-list</author>
      <pubDate>Sun, 27 Jun 2021 01:03:27 +0000</pubDate>
      <link>https://dev.to/programmerlist/10-best-development-articles-you-can-t-miss-to-read-dfg</link>
      <guid>https://dev.to/programmerlist/10-best-development-articles-you-can-t-miss-to-read-dfg</guid>
      <description>&lt;p&gt;In the Developer community there are many articles posted everyday. So today in this same average post, I am going to share 12 articles you should read this weekend, these are must read articles. &lt;/p&gt;

&lt;p&gt;The python language is perhaps the most open programming dialects accessible in light of the fact that it has improved on grammar and not confounded, which gives more accentuation on normal language. Because of its simplicity of learning and use, python codes can be effortlessly composed and executed a lot quicker than other programming languages.&lt;/p&gt;

&lt;p&gt;You can utilize Python for creating work area GUI applications, sites and web applications. The straightforward grammar rules of the programming language further makes it simpler for you to keep the code base comprehensible and application viable.&lt;/p&gt;

&lt;p&gt;So here is the list of 12 articles you should read this weekend. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://towardsdatascience.com/what-can-you-do-with-python-the-3-main-applications-518db9a68a78"&gt;What exactly can you do with Python? Here are Python’s 3 main applications.&lt;/a&gt; : In this article YK Sugi talks about how can you Python for and is it worth learning? He talks about every aspects of Python. He gives a simple and clear explanation of “What is Machine Learning”. Very informative and practical article. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://medium.freecodecamp.org/an-a-z-of-useful-python-tricks-b467524ee747"&gt;An A-Z of useful Python tricks&lt;/a&gt;  : An insightful and amazing article. Civers many Python tricks. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://pomb.us/build-your-own-react/"&gt;Build your own React&lt;/a&gt; : In this post Rodrigo is going to rewrite React from scratch. Step by step. Following the architecture from the real React code but without all the optimizations and non-essential features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.ciodive.com/news/netflix-relies-on-python-as-programming-language-gains-industry-prominence/553800/"&gt;Netflix relies on Python as programming language gains industry prominence&lt;/a&gt; : This article is in brief and will tell you about how does Netflix relies on Python. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.creative-tim.com/blog/web-design/reactjs-interview-questions/"&gt;Essentials ReactJS Interview Questions&lt;/a&gt; : Interviews are always not like coding questions. Here Tim gives an amazing HR advice how is the actual interview. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://insights.dice.com/2019/04/23/asynchronous-programming-python-walkthrough"&gt;Asynchronous Programming in Python&lt;/a&gt; : A Walkthrough &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gist.github.com/rondy/af1dee1d28c02e9a225ae55da2674a6f"&gt;Effective Engineer - Notes&lt;/a&gt; : They are the people who get things done. Effective Engineers produce results &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.twilio.com/blog/a-http-headers-for-the-responsible-developer"&gt;HTTP headers for the responsible developer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hackernoon.com/the-best-and-only-python-tutorial-you-will-ever-need-to-watch-432eb223605d"&gt;The Best And Only Python Tutorial You Will Ever Need To Watch&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://medium.com/@bretcameron/12-javascript-tricks-you-wont-find-in-most-tutorials-a9c9331f169d"&gt;11 JavaScript tricks you won't find in most tutorials&lt;/a&gt; : More then cool article related to JavaScript, these are not basics tricks. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://monicalent.com/blog/2019/06/03/absolute-truths-unlearned-as-junior-developer/"&gt;7 Absolute Truths I Unlearned as Junior Developer&lt;/a&gt; : An insightful article. Reading someone elses experience will motivate you and inspire you. Here Monica talks about her experience. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.zdnet.com/article/python-is-eating-the-world-how-one-developers-side-project-became-the-hottest-programming-language-on-the-planet/"&gt;Python is eating the world&lt;/a&gt; : Seriously? Read the article to find out is Python eating the world. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Articles are made rapidly, can be altered or added to later, and are intended to be transitory depictions on schedule. Articles are considerably more dexterous. So above were some articles you should read this weekend. It will be worth of your time and indeed you'll learn many things. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Homebrew で PostgreSQL を操作する</title>
      <author>Mako</author>
      <pubDate>Sun, 27 Jun 2021 00:20:11 +0000</pubDate>
      <link>https://dev.to/mako/homebrew-postgresql-2ffh</link>
      <guid>https://dev.to/mako/homebrew-postgresql-2ffh</guid>
      <description>&lt;p&gt;Homebrewを使ってインストールしたPostgreSQLを操作するときのコマンドの覚え書きです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL の起動・終了&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PostgreSQL を起動する
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew services start postgresql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;PostgreSQL を終了する
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew services stop postgresql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;起動状況を確認する
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew services list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;データベースの操作&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;データベース一覧の表示
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql -l
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;データベースを作成する
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;createdb [database name]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;データベースを削除する
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dropdb [database name]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;データベースにアクセスする
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql [database name]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;データベース内の操作&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;データテーブル一覧
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\dt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;データベースを切り替える
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\c [database name]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;データベースへのアクセスを終了する
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\q
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;列を追加
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSERT INTO table (column1, column2) VALUES (value1, value2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>part 2: Binary tree in data structure</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sun, 27 Jun 2021 00:18:38 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/part-2-binary-tree-in-data-structure-5bgf</link>
      <guid>https://dev.to/ayabouchiha/part-2-binary-tree-in-data-structure-5bgf</guid>
      <description>&lt;p&gt;Hi, this the part 2 of the tree in the data structure, we're going to talk about &lt;strong&gt;binary tree&lt;/strong&gt; and its famous types.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-binary-tree"&gt;
  &lt;/a&gt;
  Definition of binary tree
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Binary tree&lt;/strong&gt;: is one of the most famous tree data structure which each node should have at most 2 children (&lt;em&gt;left child&lt;/em&gt; and &lt;em&gt;right child&lt;/em&gt;), in this type of trees, all nodes contains three items which are &lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;pointer to left child&lt;/strong&gt;, &lt;strong&gt;pointer to right child&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-binary-tree"&gt;
  &lt;/a&gt;
  Types of binary tree
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#full-binary-tree"&gt;
  &lt;/a&gt;
  Full Binary tree
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;In this type of trees, all nodes except the leaves have two children&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QY8Hd9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx2leaqgmxm29y77jh4e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QY8Hd9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx2leaqgmxm29y77jh4e.jpg" alt="full binary tree in data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#perfect-binary-tree"&gt;
  &lt;/a&gt;
  Perfect Binary tree
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;All internal nodes have exactly two children and all the leaves are at the same level. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JA_KTYt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gspulau74n4gtwaew25g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JA_KTYt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gspulau74n4gtwaew25g.jpg" alt="perfect binary tree in data structure Aya Bouchiha "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#degenerate-binary-tree"&gt;
  &lt;/a&gt;
  Degenerate binary tree
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;In This kind of tree, all nodes have only one child.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85i4D-PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lld9xcngc5ktz4vhn5ae.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85i4D-PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lld9xcngc5ktz4vhn5ae.jpg" alt="degenerate binary tree in data structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#complete-binary-tree"&gt;
  &lt;/a&gt;
  Complete Binary tree
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Like a full binary tree, All levels are filled, but All the leaves should lean towards the left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PeAHOp8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aoszkp1y8lpgr16w7sh0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PeAHOp8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aoszkp1y8lpgr16w7sh0.jpg" alt="complete binartree in data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#balanced-binary-tree"&gt;
  &lt;/a&gt;
  Balanced Binary tree
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;the absolute value of the height  difference between the left and the right subtree is smaller than or equal 1. &lt;code&gt;| height(left_sub_tree) - height(right_sub_tree) | &amp;lt;= 1&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U19pcpVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57xiu9k0tmjzxd9g90va.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U19pcpVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57xiu9k0tmjzxd9g90va.jpg" alt="Balanced binary tree in data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#skewed-binary-tree"&gt;
  &lt;/a&gt;
  Skewed Binary tree
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;All nodes have only one child except the last one (leaf) which hasn't a child. It divided into two types: &lt;em&gt;left skewed binary tree&lt;/em&gt; and &lt;em&gt;right skewed binary tree&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZ0DSpok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69k5ahxgt2qvhkjhsoc9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZ0DSpok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69k5ahxgt2qvhkjhsoc9.jpg" alt="Skewed binary tree in data structure Aya Bouchiha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/binary-tree-data-structure/"&gt;https://www.geeksforgeeks.org/binary-tree-data-structure/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.programiz.com/dsa/binary-tree"&gt;https://www.programiz.com/dsa/binary-tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.programiz.com/dsa/perfect-binary-tree"&gt;https://www.programiz.com/dsa/perfect-binary-tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.kent.edu/~durand/CS2/Notes/10_Binary_Trees/ds_treesB.html"&gt;http://www.cs.kent.edu/~durand/CS2/Notes/10_Binary_Trees/ds_treesB.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.programiz.com/dsa/balanced-binary-tree"&gt;https://www.programiz.com/dsa/balanced-binary-tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.journaldev.com/43957/balanced-binary-tree-check"&gt;https://www.journaldev.com/43957/balanced-binary-tree-check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.programiz.com/dsa/complete-binary-tree"&gt;https://www.programiz.com/dsa/complete-binary-tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>beginners</category>
      <category>python</category>
    </item>
    <item>
      <title>Custom Hooks in React</title>
      <author>Jay Cruz</author>
      <pubDate>Sat, 26 Jun 2021 23:40:49 +0000</pubDate>
      <link>https://dev.to/coderjay06/custom-hooks-in-react-5981</link>
      <guid>https://dev.to/coderjay06/custom-hooks-in-react-5981</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SaFONB4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2ApllR4ALVef3evFxQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SaFONB4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2ApllR4ALVef3evFxQ.jpeg" alt="a hook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m going to assume you know the basics about hooks in React but if not or you’d like to dive a bit deeper into this concept check out the links at the end of this blog. So what are custom hooks? If you’ve used earlier versions of React you’ve probably come across patterns like higher-order components and render props (you can read about these in my previous blogs, &lt;a href="https://dev.to/coderjay06/higher-order-components-in-react-52d0"&gt;higher-order components&lt;/a&gt;, and &lt;a href="https://dev.to/coderjay06/render-props-26m5"&gt;render props&lt;/a&gt;). These patterns (just like hooks) let you reuse stateful logic in your React components, though hooks offer a less complex way to achieve the same result of reusability. With custom hooks, we can make our own hooks and customize them to contain whatever logic we choose to add to them. This gives us more flexibility to solve a specific problem we might have.&lt;/p&gt;

&lt;p&gt;Let’s start with an example of when you might feel the need to create a custom hook. Say we wanted to add a timer to the React application we’re building. We can simply just build it within our component that needs to use it and we’re good to go right!? But what if we needed to reuse our timer across several components? This would be a great opportunity for a custom hook! So to create our custom hook we should always start with the word &lt;em&gt;use&lt;/em&gt; followed by a relevant name for it. In this case, we’ll call it &lt;em&gt;useTimer&lt;/em&gt;. Then we can import any of the built-in react hooks that we’ll need inside of our custom one.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now with this code, anywhere a timer is needed within our app we just import our custom useTimer() hook and display it within our component. In this case the Timer component.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Here we’re just rendering the return value from the useTimer() hook we've just created. This timer updates each time the setInterval() inside of useEffect() is invoked.&lt;/p&gt;

&lt;p&gt;Custom hooks are great for reusing the business logic across your React application. When you need something less abstract and a bit more tailored towards your component they can come in handy. Instead of just using built-in hooks we can have more flexibility by adding customized code into a reusable hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-resources"&gt;
  &lt;/a&gt;
  More resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;React Hooks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-custom.html"&gt;Building your own hooks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://coderjay06.github.io/custom_hooks_in_react"&gt;https://coderjay06.github.io&lt;/a&gt; on June 24, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
