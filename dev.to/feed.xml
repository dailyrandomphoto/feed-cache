<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Make an Average of 250$ Every Month on Twitter</title>
      <author>Sunil Kumar</author>
      <pubDate>Fri, 21 May 2021 14:32:53 +0000</pubDate>
      <link>https://dev.to/sunilc_/how-i-make-an-average-of-250-every-month-on-twitter-3c60</link>
      <guid>https://dev.to/sunilc_/how-i-make-an-average-of-250-every-month-on-twitter-3c60</guid>
      <description>&lt;p&gt;I realised the importance of having an online presence sometime in the last year when I saw how much money people were making by using Twitter as a Marketing channel. Since I was new to marketing &amp;amp; selling products on the internet, it was shocking to me how one can leverage social media to build businesses online.&lt;/p&gt;

&lt;p&gt;I didn't know how to make money through an online presence, but the main thing I realised was that having an online presence is important and it can definitely benefit me one way or the other in the future.&lt;/p&gt;

&lt;p&gt;So I started building my online presence on Twitter since I was mainly using Twitter at the time.&lt;/p&gt;

&lt;p&gt;It's been close to 11 months and I have grown my account from 150 followers to 20k followers. And every month I make an average of 250 USD. I know this is not a lot of money at this point in time. The main reason for this is I don't have any e-book of my own yet. When you have your own product to offer people tend to buy more than when you're sharing someone else's product. This is because your audience trust you since you have been providing value from a long time.&lt;/p&gt;

&lt;p&gt;Also I earn 250 USD / month with very minimal effort. So that's a win for me.&lt;/p&gt;

&lt;p&gt;I mainly make this money by selling e-books &amp;amp; through affiliate program on Gumroad. For those who is not aware what an affiliate program is, it's basically you help someone else sell their product &amp;amp; earn a commission.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-basically-did-3-things-to-get-to-this-point"&gt;
  &lt;/a&gt;
  I Basically Did 3 Things To Get to This Point
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Grow a significant follower base on Twitter&lt;/li&gt;
&lt;li&gt;Provide valuable content for free every single day&lt;/li&gt;
&lt;li&gt;Promote ebooks &amp;amp; affiliate links occasionally&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How to grow your account on Twitter is a new blog topic altogether. There are a lot of articles &amp;amp; ebooks available to learn the strategies to grow your account. I will not be discussing this topic in this article.&lt;/p&gt;

&lt;p&gt;In this article I mainly want to share strategies that I use (with a good audience) which attracts my audience to buy from the links that I share.&lt;/p&gt;

&lt;p&gt;I mainly follow the below 3 strategies.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-share-my-sale-links-in-a-viral-tweet"&gt;
  &lt;/a&gt;
  1. Share My Sale Links in a Viral Tweet
&lt;/h3&gt;

&lt;p&gt;Twitter is a platform where posts tend to go viral when you post a really good tweet or post something on popular topics like JavaScript etc. Although there's no guarantee that two similar tweets will go viral. One of them might fail &amp;amp; the other one can succeed. This totally depends on the Twitter algorithm which nobody knows exactly about. &lt;/p&gt;

&lt;p&gt;Anyway after I post something, if I see that the tweet / thread is going viral, i'll immediately create a new tweet with the links I want users to buy from. &lt;/p&gt;

&lt;p&gt;For example: One of my tweet went viral recently and see how I attached an affiliate link as a second tweet couple of hours after I realised the tweet was going viral.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7F4zdcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346540119/z8-tuuctZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7F4zdcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346540119/z8-tuuctZ.png" alt="Screenshot 2021-05-18 at 7.32.12 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the tweet has gone viral, I generally get a lot of impressions / views and in turn a lot of link clicks. Although the conversion rate is pretty low I do get some sales.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rjAnv9VA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346692671/84nYBRUPt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjAnv9VA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621346692671/84nYBRUPt.png" alt="Screenshot 2021-05-18 at 7.34.45 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the time of writing this article I've got around 13.7k impressions on my sale tweet &amp;amp; 846 link clicks. That means 846 unique users have clicked on the link &amp;amp; have seen the product. If you think about it that's a very good visibility for one tweet without running any ads. Even if I get 1 or 2 sales, I'll make around 25$ in commissions and that's a pretty good deal for just 1 tweet which hardly took me a minute to write.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-share-my-sale-links-in-my-bio"&gt;
  &lt;/a&gt;
  2. Share My Sale Links in My Bio
&lt;/h3&gt;

&lt;p&gt;One of the strategies to build an audience on Twitter is to direct users to your profile by sharing valuable content and commenting on other big accounts. And once the users open your profile the first thing they notice is the bio. &lt;/p&gt;

&lt;p&gt;So you should have a killer bio if you want to convert users into your followers. Bio is also a very good place to keep any links that you want the incoming users to check out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--THu5aHze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178816623/36T_ROiI-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--THu5aHze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178816623/36T_ROiI-.png" alt="Screenshot 2021-05-16 at 8.56.50 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see I have a link to my free e-book in the bio. So when users look at my bio, they will check this &amp;amp; probably download it if they like the product. Since this is a free e-book I don't make any money from it but I do get their emails. Right now I'm trying to build an email list and that's the reason I'm offering a free e-book.&lt;/p&gt;

&lt;p&gt;But you get the idea.&lt;/p&gt;

&lt;p&gt;You can even keep any sale links here and make money!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-keep-a-pinned-tweet-which-has-my-sale-links"&gt;
  &lt;/a&gt;
  3. Keep a Pinned Tweet Which Has My Sale Links
&lt;/h3&gt;

&lt;p&gt;Twitter has this feature where you can pin a particular tweet and it always shows up as the first tweet in your profile. This is another good place to keep any of your sale links as pinned tweet is another important component users look at when they visit your profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUeyf-IO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178907739/3PaHblvYr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUeyf-IO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621178907739/3PaHblvYr.png" alt="Screenshot 2021-05-16 at 8.58.23 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have kept a tweet which is basically a thread of all of the affiliate links that I promote. &lt;/p&gt;

&lt;p&gt;Smart right?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-where-can-i-get-these-affiliate-links"&gt;
  &lt;/a&gt;
  But Where Can I Get These Affiliate Links?
&lt;/h3&gt;

&lt;p&gt;Excellent question!&lt;/p&gt;

&lt;p&gt;There are thousands of people with killer courses on Gumroad and most of them are on Twitter. When you start building your audience you will make friends with people who are in the same niche who are either promoting their own course of some else's (like me!). &lt;/p&gt;

&lt;p&gt;Once you find such courses you can contact the course creator and ask them if they're open to add you as an affiliate. Most of the creators will agree. But some creators add only those who have a good enough followers, at least a few thousand.&lt;/p&gt;

&lt;p&gt;Once they add you as an affiliate you will get your unique link and you can start sharing those with your audience and start making money!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important-things-to-remember-while-sharing-sale-links"&gt;
  &lt;/a&gt;
  Important Things To Remember While Sharing Sale Links
&lt;/h3&gt;

&lt;p&gt;Above are the main strategies that I follow on Twitter. But you need to keep some things in mind before sharing the sale links with your audience.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;When you build an audience on Twitter, you do it by sharing content in certain niche topics. So make sure the sale links you share come under those niche topics. Otherwise your audience being not interested in the product may see your content as spam and unfollow you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't do it very frequently. Otherwise your audience can again see your content as spam and unfollow you.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide value consistently to build trust which results in people wanting to buy your products.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tweets which are going viral are goldmine. Don't let them go for a waste. Add a call to action at the end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't share sale links very frequently. Nobody likes to follow someone who is constantly trying to sell them something.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your bio &amp;amp; pinned tweets are great places to keep sale links. These are the first things users check when they visit your profile. You job is just to get more profile visits.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Having an online presence will definitely benefit you one way or another. Even if making money is not your primary goal, you should still build your online presence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many people are making life changing income just through Twitter by selling info products, courses, SaaS etc. Start changing yours today!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;We recently started taking pre-orders for our latest e-book:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Start a SaaS Company: A Beginner's Guide&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The e-book will provide &amp;amp; help you to learn everything you need to know to build a successful SaaS business. Download it &lt;a href="https://gumroad.com/l/kgtSS"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>career</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How We're Building Glenstack</title>
      <author>Greg Brimble</author>
      <pubDate>Fri, 21 May 2021 14:25:41 +0000</pubDate>
      <link>https://dev.to/glenstack/how-we-re-building-glenstack-8p4</link>
      <guid>https://dev.to/glenstack/how-we-re-building-glenstack-8p4</guid>
      <description>&lt;p&gt;Glenstack is a production-ready, modern data platform. And as such, we are embracing the latest and greatest technologies as we deliver our application quickly, securely, and with the features our customers demand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivations"&gt;
  &lt;/a&gt;
  Motivations
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#speed"&gt;
  &lt;/a&gt;
  Speed
&lt;/h3&gt;

&lt;p&gt;We want Glenstack to be performant for users, regardless of where they are located. To us, this means we must be distributed. We can't have a single server in &lt;code&gt;us-east-1&lt;/code&gt; because every single user would have to wait for a round-trip request to Virginia which is a significant delay for most of the world. Instead, we have multiple points-of-presence (PoPs) around the world which are each capable of serving Glenstack, more often than not, from the same country as the user.&lt;/p&gt;

&lt;p&gt;No distributed provider has more PoPs and faster performance than &lt;a href="https://workers.cloudflare.com/"&gt;Cloudflare Workers&lt;/a&gt;, which lets us be in 200 locations around the world, and within 100 milliseconds of 99% of internet users.&lt;/p&gt;

&lt;p&gt;This serverless architecture lets us compete with (and often outperform) the performance of many traditional database providers, all while also eliminating the single point of failure that a single cluster presents. We are entirely convinced that it is the future of not just application hosting but data handling as well, and that serverless environments will continue to see increased usage throughout the technology industry.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;We make every effort to ensure that Glenstack is secure. And we like to start with the worst-case scenario, disaster-recovery: what happens if our infrastructure fails.&lt;/p&gt;

&lt;p&gt;As already stated, the Glenstack application is serverless and distributed. So if one PoP is unreachable, your traffic is automatically re-routed to the next available data center. If all 200 PoPs fail, we're in trouble, and this would constitute a truly global, internet-level event. Thankfully however, Cloudflare offer a 100% uptime SLA, and we're able to do the same for Glenstack customers. Please &lt;a href="https://glenstack.com/contact"&gt;contact us&lt;/a&gt; if you are interested in enterprise contracts.&lt;/p&gt;

&lt;p&gt;Data hosted on Glenstack is also guaranteed. We provide (C)onsistent and (P)artition-tolerant storage (of the &lt;a href="https://en.wikipedia.org/wiki/CAP_theorem"&gt;CAP theorem&lt;/a&gt;) in order to support the full set of &lt;a href="https://en.wikipedia.org/wiki/ACID"&gt;ACID&lt;/a&gt; properties for transactions.&lt;/p&gt;

&lt;p&gt;We have multiple layers of redundancy in place to ensure that even if a single data node is unreachable, we are able to failover to another location, with the same data available. We also take routine off-site backups for even more peace-of-mind.&lt;/p&gt;

&lt;p&gt;We're exploring end-to-end (E2E) encryption and would also love to &lt;a href="https://glenstack.com/contact"&gt;hear from you&lt;/a&gt; if you have a compelling use-case. In the meantime however, all data is encrypted in transit, at rest, and when backed up. Again, please &lt;a href="https://glenstack.com/contact"&gt;reach out&lt;/a&gt; if there's a particular certification your business needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#functionality"&gt;
  &lt;/a&gt;
  Functionality
&lt;/h3&gt;

&lt;p&gt;Glenstack sees data compliance as one of the most interesting and rapidly evolving challenges for the technology industry. The General Data Protection Regulation (EU GDPR) is frankly old news, but it remains a difficult problem for thousands of organizations inside and outside of the European Union. Complex legislation is continually being drafted by governments around the world, and it's only going to get harder for businesses to stay compliant.&lt;/p&gt;

&lt;p&gt;Fortunately, Glenstack has data compliance built-in. There's no need to set up a specialized EU cluster and manage the overhead of synchronizing migrations. With Glenstack, you simply tag a data instance as belonging to a particular jurisdiction, and we guarantee that we'll never store or process that instance outside of that border. Personally identifiable information (PII) stays close to the individual, which has the added benefit of decreasing their latency!&lt;/p&gt;

&lt;p&gt;With compliance sorted, you can focus on the stuff that matters: your data. Glenstack offers a suite of tools to help make you productive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an easy-to-use no-code editor,&lt;/li&gt;
&lt;li&gt;collaborative workflows for both internal and external use,&lt;/li&gt;
&lt;li&gt;version control,&lt;/li&gt;
&lt;li&gt;and most importantly, an incredibly scalable, low latency, automatic GraphQL API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more about our features on &lt;a href="https://glenstack.com/#features"&gt;our landing page&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-specifics-of-our-system-design"&gt;
  &lt;/a&gt;
  The Specifics of our System Design
&lt;/h2&gt;

&lt;p&gt;For those wanting more detail, this section delves into some specifics about the technologies we're using to build Glenstack. If we don't cover something here, or if you have any other questions, please &lt;a href="https://glenstack.com/contact"&gt;send us a message&lt;/a&gt;, and we'd seriously love to chat to you more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  Data
&lt;/h3&gt;

&lt;p&gt;We use a combination of Cloudflare's &lt;a href="https://www.cloudflare.com/en-gb/products/workers-kv/"&gt;Workers KV&lt;/a&gt; and &lt;a href="https://blog.cloudflare.com/introducing-workers-durable-objects/"&gt;Durable Objects&lt;/a&gt;, as well as &lt;a href="https://fauna.com/"&gt;Fauna&lt;/a&gt;, for hosting various Glenstack data. We support the full set of ACID properties and a complete transaction environment enabling you to build pretty much anything on top of Glenstack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#payments"&gt;
  &lt;/a&gt;
  Payments
&lt;/h3&gt;

&lt;p&gt;Leaving it to the industry-trusted experts, we use &lt;a href="https://stripe.com/en-gb"&gt;Stripe&lt;/a&gt; to handle payment transactions. They securely hold all sensitive information such as credit card numbers and bank details. In fact, we never even see this information—it goes straight to Stripe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authorization"&gt;
  &lt;/a&gt;
  Authorization
&lt;/h3&gt;

&lt;p&gt;With custom needs, we built our own authorization service which issues &lt;a href="https://datatracker.ietf.org/doc/html/rfc7519"&gt;JSON Web Tokens (JWTs)&lt;/a&gt; as &lt;a href="https://datatracker.ietf.org/doc/html/rfc6749"&gt;OAuth2&lt;/a&gt; Access Tokens. We act as both a consumer (for social login) and provider (for providing developers access to our &lt;a href="#API"&gt;API&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h3&gt;

&lt;p&gt;With support for massive datasets, Glenstack has to be able to efficiently respond to API requests. We use &lt;a href="https://spec.graphql.org/June2018/"&gt;GraphQL&lt;/a&gt; to allow users to specify exactly the data they require, and also navigate the complex relationships that can appear when working with embedded data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Front-end
&lt;/h3&gt;

&lt;p&gt;Finally, the Glenstack front-end is just a simple &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; application. We use &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; and some &lt;a href="https://tailwindui.com/"&gt;Tailwind UI&lt;/a&gt; components to rapidly build out our UI, and we consume our &lt;a href="#API"&gt;API&lt;/a&gt; like any other developer using Glenstack. This &lt;a href="https://en.wikipedia.org/wiki/Eating_your_own_dog_food"&gt;'dog-fooding'&lt;/a&gt; helps us to better understand what developers need from Glenstack in order to build their apps.&lt;/p&gt;




&lt;p&gt;Glenstack will be launching later this summer, 2021. Please consider &lt;a href="https://glenstack.com/waitlist"&gt;joining our waitlist&lt;/a&gt; or &lt;a href="https://glenstack.com/contact"&gt;getting in touch&lt;/a&gt; if you have any questions. We're so excited for you to see what we've been building, and we hope Glenstack can help you to create, exchange and collaborate on data soon!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>String em Python!!</title>
      <author>DevShy</author>
      <pubDate>Fri, 21 May 2021 14:10:05 +0000</pubDate>
      <link>https://dev.to/devshy/string-em-python-47a3</link>
      <guid>https://dev.to/devshy/string-em-python-47a3</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;a href="#o-que-%C3%A9-uma-string"&gt; O que é uma string?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#como-criar-uma-string-em-python"&gt; Como criar uma string em python?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#strings-s%C3%A3o-como-matrizes"&gt; Strings são como matrizes!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#como-acessar-estes-elementos"&gt; Como acessar estes elementos?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#iterando-strings"&gt; Iterando Strings?!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#tamanho-de-uma-string"&gt; Tamanho de uma string!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#validando-caracteres-em-uma-string"&gt; Validando caracteres em uma string!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conclus%C3%A3o"&gt; Conclusão&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#generated-with-summaryze-forem"&gt;
  &lt;/a&gt;
  generated with &lt;a href="https://summaryze-forem.vercel.app/"&gt;Summaryze Forem 🌱&lt;/a&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-uma-string"&gt;
  &lt;/a&gt;
  O que é uma string?
&lt;/h2&gt;

&lt;p&gt;Em python, uma string são sequências imutáveis de caractere. Ou seja, eles são imutáveis já que para se modificar uma string é necessário que se crie uma nova. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-criar-uma-string-em-python"&gt;
  &lt;/a&gt;
  Como criar uma string em python?
&lt;/h2&gt;

&lt;p&gt;Para criar uma string, é bastante fácil. Basta criarmos uma variável, e atribuir a ela qualquer caractere entre aspas simples ou duplas. Por exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python é muito legal"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para imprimir para o usuário o que está dentro da variável, basta utilizarmos o famoso print do python.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;é&lt;/span&gt; &lt;span class="n"&gt;muito&lt;/span&gt; &lt;span class="n"&gt;legal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#strings-s%C3%A3o-como-matrizes"&gt;
  &lt;/a&gt;
  Strings são como matrizes!
&lt;/h2&gt;

&lt;p&gt;Como em diversos tipos de linguagem de programação, as strings em python são matrizes de bytes que representam caracteres Unicodes. Contudo, em python não temos um tipo de dados de caractere, um único caractere é simplesmente uma string de comprimento 1. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-acessar-estes-elementos"&gt;
  &lt;/a&gt;
  Como acessar estes elementos?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Python é muito legal'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;P&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#iterando-strings"&gt;
  &lt;/a&gt;
  Iterando Strings?!
&lt;/h2&gt;

&lt;p&gt;Outra coisa super interessante que dá pra fazer em uma string é utilizar os famosos laços de repetição nela.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;P&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;

&lt;span class="n"&gt;é&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt;
&lt;span class="n"&gt;u&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="n"&gt;o&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="n"&gt;e&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tamanho-de-uma-string"&gt;
  &lt;/a&gt;
  Tamanho de uma string!
&lt;/h2&gt;

&lt;p&gt;Me deparei com uma string super grande, e preciso saber o tamanho dela, como posso fazer isso em python? É simples, basta utilizar a função &lt;code&gt;len()&lt;/code&gt;, desta forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Oi pra você que está lendo isso, qual o tamanho desta string?"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mi"&gt;61&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#validando-caracteres-em-uma-string"&gt;
  &lt;/a&gt;
  Validando caracteres em uma string!
&lt;/h2&gt;

&lt;p&gt;Para verificar se um caractere ou uma palavra está inserida em uma string já declarada, basta usarmos o &lt;code&gt;in {variável string}&lt;/code&gt;. Por exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Na UESB os professores são ótimos!"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ótimos"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Saída:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;E por hoje é só, apenas algumas demonstrações do que podemos fazer com uma string utilizando python! Lembrando que isso é apenas a ponta do iceberg, tem ainda uma diversidade de outras coisas que podem ser usadas. &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>education</category>
      <category>string</category>
    </item>
    <item>
      <title>Creating Data Visualizations with D3 and ReactJS</title>
      <author>Saji Wang</author>
      <pubDate>Fri, 21 May 2021 13:58:59 +0000</pubDate>
      <link>https://dev.to/codesphere/creating-data-visualizations-with-d3-and-reactjs-10ei</link>
      <guid>https://dev.to/codesphere/creating-data-visualizations-with-d3-and-reactjs-10ei</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEilTCb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/751schp3gqtcy2armdeo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEilTCb1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/751schp3gqtcy2armdeo.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D3 is a lot more than just a graphing library, it's a toolset for efficiently editing the DOM and creating visualizations based on data.&lt;/p&gt;

&lt;p&gt;If all you want is to quickly insert a generic bar graph into your app, then D3 is probably not for you, but if you want the ability to customize your visualizations from the ground up, then D3 is the industry standard.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this tutorial, we are going to create three different simple visualizations with D3 in React. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now while these things can be done without D3 and aren't particularly flashy, they highlight some of the basics of D3 very well. If you want to see some cool demos to get a sense of just how powerful D3 is, then check out some of the demos on the D3.js home page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://d3js.org/"&gt;https://d3js.org/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;To see the three visualizations that we are going to make, you can open up this project in Codesphere, a free development environment with instant deployment features. Just click the link, sign in, and run:&lt;br&gt;
npm ci &amp;amp;&amp;amp; npm start&lt;/p&gt;

&lt;p&gt;&lt;a href="https://link.codesphere.com/D"&gt;http://codesphere.com/#https://github.com/LiorB-D/d3tutorial&lt;/a&gt; &lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#setting-up%C2%A0react"&gt;
  &lt;/a&gt;
  Setting up React
&lt;/h3&gt;

&lt;p&gt;Let's start off with a blank Create-React-App.&lt;br&gt;
If you are new to React, this can be made with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app my-app&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We are also going to need to install D3 onto our app, with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install d3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Don’t forget to import D3 in all the files you are using it in!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import * as d3 from 'd3'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For now, we are going to render an empty div and create a useEffect hook, in which we will later insert all of our D3 code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#creating-labels-dynamically"&gt;
  &lt;/a&gt;
  Creating Labels Dynamically
&lt;/h3&gt;

&lt;p&gt;The first thing we are going to do is use D3 to dynamically insert p tags based on data. While this of course is not too difficult to do with vanilla React, I would recommend for anyone learning D3 to get comfortable editing the DOM in this way.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Let’s go through each part of that D3 line on line 17 and breakdown what it does:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;d3.select(“#pgraphs”) selects the div with the id “pgraphs”&lt;/li&gt;
&lt;li&gt;.selectAll(‘p’) tells d3 that we want to look at the p tags within that div. Since there are currently no p tags, we will later need to create them.&lt;/li&gt;
&lt;li&gt;.data(dataSet) binds that dataSet array to these p tags&lt;/li&gt;
&lt;li&gt;.enter().append(‘p’) adds all missing p tags within the div such that there is one p tag for each element in the bound dataset&lt;/li&gt;
&lt;li&gt;.text(dt =&amp;gt; dt.subject + “: ” + dt.count) sets the text of each of these p tags based on an arrow function we are defining within the text() function. Here, we want to take each corresponding element in the dataSet array and create a string based on the subject and count&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#creating-an-animated-htmlbased-bar-graph"&gt;
  &lt;/a&gt;
  Creating An Animated Html-Based Bar Graph
&lt;/h3&gt;

&lt;p&gt;Next, we are going to create a custom Bar Graph based on this data by creating a div for each element and dynamically setting the height.&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;App.css&lt;/code&gt;, we are going to add two styles: One for the div containing the bar graph, and one for each individual bar.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now in our useEffect we are going to have D3 do the following animation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set each bar to have the same height (Which will be equal to the highest count value)&lt;/li&gt;
&lt;li&gt;Wait 300 milliseconds&lt;/li&gt;
&lt;li&gt;Set each bar's height to correspond with a count value.&lt;/li&gt;
&lt;li&gt;Transition the bars into having a margin and a larger width.&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Let’s go through these new D3 functions that we just used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.classed(‘bar’, true) gives all the selected elements the CSS class “bar”&lt;/li&gt;
&lt;li&gt;.style(style, value) gives all the selected elements a given CSS style with a given value&lt;/li&gt;
&lt;li&gt;.transition() tells d3 to transition the element into the changes that will be made&lt;/li&gt;
&lt;li&gt;.duration(ms) dictates the duration of the transition in milliseconds&lt;/li&gt;
&lt;li&gt;.delay(ms) delays all the previous changes by a certain amount of milliseconds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If all is working well, the animation should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wigXQJfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzip422djqxpq7ro7mfe.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wigXQJfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzip422djqxpq7ro7mfe.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#creating-an-svgbased-line-graph"&gt;
  &lt;/a&gt;
  Creating An SVG-based Line Graph
&lt;/h3&gt;

&lt;p&gt;While in the previous two examples we used HTML elements, if you want much more versatility you are going to want to use D3 to manipulate SVG elements.&lt;/p&gt;

&lt;p&gt;For our line graph, we are going to create X and Y axes as well as a nice animation. For this example, we are also going to generate a random dataSet so that we have more points to work with.&lt;/p&gt;

&lt;p&gt;First, let’s add the following style to our &lt;code&gt;App.css&lt;/code&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We are then going to use D3 to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create D3 scales, which will allow us to easily map our data values to pixel values in our SVG.&lt;/li&gt;
&lt;li&gt;Define a path with scaled x and y coordinates&lt;/li&gt;
&lt;li&gt;Create x and y-axis based on our scales&lt;/li&gt;
&lt;li&gt;Graph a straight horizontal line at y = 0 in the #LineChart SVG&lt;/li&gt;
&lt;li&gt;Transition that line into having the correct y values based on our data&lt;/li&gt;
&lt;li&gt;Append our axis to our SVG&lt;/li&gt;
&lt;/ol&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Note that with functions like d3.line(), d3.axisBottom() and d3.scaleLinear(), D3 is giving us tools for processes that are possible in vanilla javascript. Even though D3 is built to allow you to make your visualizations from the ground up, it offers a host of different functions like this.&lt;/p&gt;

&lt;p&gt;If all is working well, you should see the following Line Chart:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t--Cyj9K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64ggtikb77k5vmm4iie9.gif" alt="Alt Text"&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Again, this is only the bare bones of what is possible with D3. D3’s versatility and in-house toolset mean that the only limit to the beautiful visualizations you create is your imagination!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>react</category>
      <category>d3js</category>
      <category>datavisualization</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 21st May 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 21 May 2021 13:50:17 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-21st-may-2021-2c6h</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-21st-may-2021-2c6h</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-docz"&gt;
  &lt;/a&gt;
  1. Docz
&lt;/h3&gt;

&lt;p&gt;Docz makes it easy to write and publish beautiful interactive documentation for your code. Create MDX files showcasing your code and Docz turns them into a live-reloading, production-ready site.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pedronauck"&gt;
        pedronauck
      &lt;/a&gt; / &lt;a href="https://github.com/pedronauck/docz"&gt;
        docz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✍ It has never been so easy to document your things!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a140cc0533adb9753107f86b2885e53c6b720f76aa88b60a7d7e0750eb62a2f/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f4253506b337a"&gt;&lt;img src="https://camo.githubusercontent.com/1a140cc0533adb9753107f86b2885e53c6b720f76aa88b60a7d7e0750eb62a2f/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f4253506b337a"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/docz" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8ec7ab57ecf5bbdcd2d43f764b7acf6402561c5d87fe2e80becbec9aedb49b73/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f646f637a" alt=""&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/LICENSE.md"&gt;
    &lt;img src="https://camo.githubusercontent.com/fc684ae0666234940e2ed32d594f69fba54effe4aba6dced4146fb72f24d6658/68747470733a2f2f62616467656e2e6e65742f62616467652f6c6963656e73652f4d49542f626c7565" alt=""&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/docz" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/50ff15292811c069c95e58e484f3c92469d408b82d588ed3366ca8e96357c328/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f646f637a" alt=""&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Docz makes it easy to write and publish beautiful interactive documentation for your code.&lt;/p&gt;

&lt;p&gt;Create MDX files showcasing your code and Docz turns them into a live-reloading, production-ready site.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1519edd8f649bad5c0a7917e9d57bdaf84b5f284fe041fe13f6eca7823cdf424/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f533259434944"&gt;&lt;img src="https://camo.githubusercontent.com/1519edd8f649bad5c0a7917e9d57bdaf84b5f284fe041fe13f6eca7823cdf424/68747470733a2f2f63646e2d7374642e64707263646e2e6e65742f66696c65732f6163635f3634393635312f533259434944" alt="docz example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#why"&gt;Why ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#start-a-new-project"&gt;Start a New Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#add-docz-to-an-existing-project"&gt;Add Docz to an Existing Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#build"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#deploy"&gt;Deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#more-info-on-doczsite"&gt;More info on docz.site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#used-by"&gt;Used by&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pedronauck/docz/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Why ?&lt;/h2&gt;

&lt;p&gt;Documenting code is one of the most important and time-heavy processes when developing software.&lt;/p&gt;

&lt;p&gt;A lot of time is spent on building and maintaining custom documentation sites.&lt;/p&gt;

&lt;p&gt;Docz enables you to quickly create live-reloading, seo-friendly, production-ready documentation sites with MDX and customize the look, feel and behavior when required by leveraging &lt;a href="https://www.gatsbyjs.org" rel="nofollow"&gt;GatsbyJS&lt;/a&gt; and &lt;a href="https://www.gatsbyjs.org/docs/themes/shadowing/" rel="nofollow"&gt;Gatsby theme shadowing&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Start a New Project&lt;/h2&gt;

&lt;p&gt;Use &lt;a href="https://www.npmjs.com/package/create-docz-app" rel="nofollow"&gt;create-docz-app&lt;/a&gt; to quickly get started :&lt;/p&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npx create-docz-app my-docz-app
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;
yarn create docz-app my-docz-app --example typescript&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Add Docz to an Existing Project&lt;/h2&gt;
&lt;p&gt;Start by adding &lt;code&gt;docz&lt;/code&gt; as a dependency :&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pedronauck/docz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-mo-js"&gt;
  &lt;/a&gt;
  2. mo · js
&lt;/h3&gt;

&lt;p&gt;The motion graphics toolbelt for the web. mo · js is a javascript motion graphics library that is a fast, retina ready, modular and open source.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mojs"&gt;
        mojs
      &lt;/a&gt; / &lt;a href="https://github.com/mojs/mojs"&gt;
        mojs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The motion graphics toolbelt for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mo · js – &lt;a href="https://www.npmjs.com/package/@mojs/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc583d59478eb20c81962ccddcf7e72ebed40b8f4ec7753db4e93eacbf2c0ef1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f406d6f6a732f636f72652e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/mojs/mojs/actions?query=workflow:%22CI%22"&gt;&lt;img src="https://camo.githubusercontent.com/6e08ec368d88d212d5e9662da4f0d96730b9eae452d2f915281b4e3d925c8774/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d6f6a732f6d6f6a732f4349" alt="ci"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/mojs/mojs?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bea2e546bdb922ce5c30ad7d8371e1833571ae6623c9f57921694e9d7541ed71/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f6a732f6d6f6a732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/mojs/shared_invite/zt-dlyxhupt-VR7eV2uwCnvu3Cx~Yc_L9Q" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f2125bb4be72646dafa9bc30cb8da50d072181b0f378eb9559f3da1376cfca2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374796c652d6a6f696e2d6666363962342e7376673f6c6162656c3d736c61636b" alt="Slack"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The motion graphics toolbelt for the web.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mojs.github.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cIak7oCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/mojs/mojs/master/logo.svg" alt="mo · js" title="mo · js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mo · js&lt;/strong&gt; is a javascript motion graphics library that is a &lt;strong&gt;fast, retina ready, modular and open source&lt;/strong&gt;. In comparison to other libraries, it has a different syntax and code animation structure approach. The declarative API provides you a complete control over the animation, making it customizable with ease.&lt;/p&gt;
&lt;p&gt;The library provides &lt;strong&gt;built-in components&lt;/strong&gt; to start animating from scratch like html, shape, swirl, burst and stagger, but also bring you tools to help craft your animation in a most natural way. Using mojs on your site will enhance the user experience, enrich your content visually and create &lt;strong&gt;delightful animations&lt;/strong&gt; precisely.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;h3&gt;
Use with a bundler&lt;/h3&gt;
&lt;p&gt;Mojs is published on the &lt;strong&gt;NPM registry&lt;/strong&gt; and &lt;strong&gt;GPR registry&lt;/strong&gt;, so you can install it through the command line interpreter using your favorite package manager. This is the best way…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mojs/mojs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-twitter-api-client"&gt;
  &lt;/a&gt;
  3. Twitter API Client
&lt;/h3&gt;

&lt;p&gt;A user-friendly Node.js / JavaScript client library for interacting with the Twitter API.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FeedHive"&gt;
        FeedHive
      &lt;/a&gt; / &lt;a href="https://github.com/FeedHive/twitter-api-client"&gt;
        twitter-api-client
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A user-friendly Node.js / JavaScript client library for interacting with the Twitter API.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Twitter API Client&lt;/h1&gt;
&lt;p&gt;Node.js client for Twitter API&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d8934d11f98ef14a7aebcd33b06a87cb9959845b7175238dc1ccac5f2712b9db/68747470733a2f2f692e696d6775722e636f6d2f4e666e4c48494d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d8934d11f98ef14a7aebcd33b06a87cb9959845b7175238dc1ccac5f2712b9db/68747470733a2f2f692e696d6775722e636f6d2f4e666e4c48494d2e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/twitter-api-client" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc77812758b05a6c15dccf45b3b2029ca3f753802549cf5e05f07e8f85982b48/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f747769747465722d6170692d636c69656e74" alt="NPM Version"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/FeedHive/twitter-api-client/workflows/build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---b9a3mO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/FeedHive/twitter-api-client/workflows/build/badge.svg" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#getting-started"&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#get-help"&gt;Get Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FeedHive/twitter-api-client/main/#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;☑️ Includes 90% of the &lt;strong&gt;official Twitter API&lt;/strong&gt; endpoints.&lt;br&gt;
☑️ &lt;strong&gt;Promise-based!&lt;/strong&gt; No ugly callbacks.&lt;br&gt;
☑️ &lt;strong&gt;Fully typed!&lt;/strong&gt; Both for query parameters and responses.&lt;br&gt;
☑️ Inbuilt in-memory &lt;strong&gt;cache&lt;/strong&gt; for rate-limit friendly usage.&lt;/p&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;h3&gt;
Get your Twitter credentials&lt;/h3&gt;
&lt;p&gt;You will need to create a set of Twitter developer credentials from your Twitter Developer account.&lt;br&gt;
If you don't have one already, apply for a developer account &lt;a href="https://developer.twitter.com/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;br&gt;
It takes about 5 minutes.&lt;/p&gt;
&lt;h3&gt;
Install&lt;/h3&gt;
&lt;div class="highlight highlight-text-shell-session position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;npm i twitter-api-client&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;TwitterClient&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'twitter-api-client'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;twitterClient&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;TwitterClient&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;apiKey&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-API-KEY&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;apiSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-API-SECRET&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;accessToken&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-ACCESS-TOKEN&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;accessTokenSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;'&amp;lt;YOUR-TWITTER-ACCESS-TOKEN-SECRET&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// Search for a user&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;data&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-s1"&gt;twitterClient&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;accountsAndUsers&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;usersSearch&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;q&lt;/span&gt;: &lt;span class="pl-s"&gt;'twitterDev'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FeedHive/twitter-api-client"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-web3js"&gt;
  &lt;/a&gt;
  4. web3.js
&lt;/h3&gt;

&lt;p&gt;The Ethereum JavaScript API which connects to the Generic JSON-RPC spec.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ChainSafe"&gt;
        ChainSafe
      &lt;/a&gt; / &lt;a href="https://github.com/ChainSafe/web3.js"&gt;
        web3.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Ethereum JavaScript API
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/assets/logo/web3js.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FVN_tMtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ChainSafe/web3.js/1.x/assets/logo/web3js.jpg" width="200" alt="web3.js"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
web3.js - Ethereum JavaScript API&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/ethereum/web3.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt; &lt;a href="https://ethereum.stackexchange.com/questions/tagged/web3js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eaf4ab03d793843e6a959459c3df633fac407aab79e99c0d21b7acd57c13d512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f776562336a732d737461636b65786368616e67652d627269676874677265656e" alt="StackExchange"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/web3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/145f50ffc3edf4c709037dbc629d3418dd809df2c4d0a2a0de358479ce4bfd56/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f776562332e737667" alt="NPM Package Version"&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/web3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15b66faf94fb5d250e01c662aaad184e713da0b43f1c41c22dd14a3fbee819ee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f776562332e737667" alt="NPM Package Downloads"&gt;&lt;/a&gt; &lt;a href="https://github.com/ethereum/web3.js/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vm4VHVDT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ethereum/web3.js/workflows/Build/badge.svg" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://david-dm.org/ethereum/web3.js/1.x?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc999a5745c613fe6dcebb7795fdac122c284db11b10cdaf7c3089412d71d92c/68747470733a2f2f64617669642d646d2e6f72672f657468657265756d2f776562332e6a732f312e782f6465762d7374617475732e737667" alt="Dev Dependency Status"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/ethereum/web3.js?branch=1.x" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7571dd8e6944b14066974df66999d68ce35f316bdb96a6bcd2160535aff15cf6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f657468657265756d2f776562332e6a732f62616467652e7376673f6272616e63683d312e78" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="Lerna"&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/web3-staging/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dfbacacbd55637663a1d81e6812379498a086fb881c22b7a5f7f90d16deb6977/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f31666336343933332d643137302d343933392d386264622d3530386563643230353531392f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the Ethereum &lt;a href="http://web3js.readthedocs.io/" rel="nofollow"&gt;JavaScript API&lt;/a&gt;
which connects to the &lt;a href="https://github.com/ethereum/wiki/wiki/JSON-RPC"&gt;Generic JSON-RPC&lt;/a&gt; spec.&lt;/p&gt;
&lt;p&gt;You need to run a local or remote &lt;a href="https://www.ethereum.org/" rel="nofollow"&gt;Ethereum&lt;/a&gt; node to use this library.&lt;/p&gt;
&lt;p&gt;Please read the &lt;a href="http://web3js.readthedocs.io/" rel="nofollow"&gt;documentation&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
Node&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install web3&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Yarn&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add web3&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
In the Browser&lt;/h3&gt;
&lt;p&gt;Use the prebuilt &lt;code&gt;dist/web3.min.js&lt;/code&gt;, or
build using the &lt;a href="https://github.com/ethereum/web3.js"&gt;web3.js&lt;/a&gt; repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm run build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then include &lt;code&gt;dist/web3.min.js&lt;/code&gt; in your html file
This will expose &lt;code&gt;Web3&lt;/code&gt; on the window object.&lt;/p&gt;
&lt;p&gt;Or via jsDelivr CDN:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;UNPKG:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/web3@latest/dist/web3.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// In Node.js&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;Web3&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'web3'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-s1"&gt;web3&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;Web3&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'ws://localhost:8546'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;web3&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;eth&lt;/span&gt;: ... &lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;shh&lt;/span&gt;: ... &lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;utils&lt;/span&gt;: ...&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    ...
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Additionally you…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ChainSafe/web3.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-renature"&gt;
  &lt;/a&gt;
  5. renature
&lt;/h3&gt;

&lt;p&gt;A physics-based animation library for React focused on modeling natural world forces.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FormidableLabs"&gt;
        FormidableLabs
      &lt;/a&gt; / &lt;a href="https://github.com/FormidableLabs/renature"&gt;
        renature
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A physics-based animation library for React focused on modeling natural world forces.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/FormidableLabs/formidable-oss-badges/master/src/assets/featuredLogos/renature.svg?sanitize=true"&gt;&lt;img width="300" alt="renature" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKIaUe3L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/FormidableLabs/formidable-oss-badges/master/src/assets/featuredLogos/renature.svg%3Fsanitize%3Dtrue"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;strong&gt;
    A physics-based animation library for React inspired by the natural world
  &lt;/strong&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;a href="https://npmjs.com/package/renature" rel="nofollow"&gt;
    &lt;img alt="NPM Version" src="https://camo.githubusercontent.com/af6c005408d3a39b4d95a8222ca4f80f2a9b13aa088048d746790ca515c0e0e4/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656e61747572652e737667"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/FormidableLabs/renature/actions"&gt;
    &lt;img alt="Test Status" src="https://res.cloudinary.com/practicaldev/image/fetch/s--IU5U3EGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/FormidableLabs/renature/workflows/renature%2520CI/badge.svg%3Fbranch%3Dsaturn"&gt;
  &lt;/a&gt;
  &lt;a href="https://bundlephobia.com/result?p=renature" rel="nofollow"&gt;
    &lt;img alt="Minified gzip size" src="https://camo.githubusercontent.com/8cbaf8b3a588c5b209b9a81989208af123785fda9390084307be54f74aa45f11/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f72656e61747572652e7376673f6c6162656c3d677a697025323073697a65"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/FormidableLabs/renature#maintenance-status"&gt;
    &lt;img alt="Maintenance Status" src="https://camo.githubusercontent.com/8b80799a3325d65d592848509453e32538e07c511250a5873158447bf2471c7f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e74656e616e63652d6163746976652d677265656e2e737667"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
&lt;/div&gt;
&lt;h1&gt;
&lt;code&gt;renature&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;renature&lt;/code&gt; is a physics-based animation library for React focused on modeling natural world forces like gravity, friction, and fluid dynamics, exposed as a set of React hooks.&lt;/p&gt;

&lt;h2&gt;
✨Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
🎣 A small set of declarative React hooks for animating with ease.&lt;/li&gt;
&lt;li&gt;
🌌 Support for non-traditional physics-based animations using gravity, friction, fluid resistance, and more.&lt;/li&gt;
&lt;li&gt;
🧮 Mathematically accurate and type-safe physics, powered by &lt;a href="https://rescript-lang.org/" rel="nofollow"&gt;ReScript&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🔁 Start, stop, delay, and loop animations with our Controller API.&lt;/li&gt;
&lt;li&gt;
0️⃣ A tiny animation library with zero dependencies!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
📃Documentation&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;renature&lt;/code&gt;'s documentation lives on our &lt;a href="https://formidable.com/open-source/renature/" rel="nofollow"&gt;docs site&lt;/a&gt;. Notice something inaccurate or confusing? Feel free &lt;a href="https://github.com/FormidableLabs/renature/issues"&gt;to open an issue&lt;/a&gt; or &lt;a href="https://github.com/FormidableLabs/renature/pulls"&gt;make a pull request&lt;/a&gt; to help improve the documentation for everyone! The source for our docs site lives in this repo in the &lt;a href="https://raw.githubusercontent.com/FormidableLabs/renature/saturn//docs/README.md"&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;

&lt;h2&gt;
Maintenance Status&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Active:&lt;/strong&gt; Formidable is actively working…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FormidableLabs/renature"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#6-usegesture"&gt;
  &lt;/a&gt;
  6. use-gesture
&lt;/h3&gt;

&lt;p&gt;use-gesture is a library that let you bind richer mouse and touch events to any component or view. With the data you receive, it becomes trivial to set up gestures, and often takes no more than a few lines of code.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pmndrs"&gt;
        pmndrs
      &lt;/a&gt; / &lt;a href="https://github.com/pmndrs/use-gesture"&gt;
        use-gesture
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      👇Bread n butter utility for component-tied mouse/touch gestures in React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
@use-gesture&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@use-gesture/react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f29e97df4c117c27748daa5ba9f1715dbde6978caa8d74551bc360e911013435/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030" alt="npm (tag)"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e649b06a0d042e82a3176a7453169c9b58d3be8541f01d7afdb4c010ed02f6d/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030"&gt;&lt;img src="https://camo.githubusercontent.com/5e649b06a0d042e82a3176a7453169c9b58d3be8541f01d7afdb4c010ed02f6d/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030" alt="npm bundle size"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0d4b111835ca3eb2e4fe5cac5af19e4806f5bab63f06f6a736ffc9a24cd9f768/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030"&gt;&lt;img src="https://camo.githubusercontent.com/0d4b111835ca3eb2e4fe5cac5af19e4806f5bab63f06f6a736ffc9a24cd9f768/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f407573652d676573747572652f72656163743f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030" alt="NPM"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/poimandres" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/693a48f4a77fd6b2d0d2a1894240dd96d4e88dc2e0a341f91b1cdf4fa716090d/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3734303039303736383136343635313030383f7374796c653d666c617426636f6c6f72413d30303030303026636f6c6f72423d303030303030266c6162656c3d646973636f7264266c6f676f3d646973636f7264266c6f676f436f6c6f723d666666666666" alt="Discord Shield"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;@use-gesture is a library that let you bind richer mouse and touch events to any component or view. With the data you receive, it becomes trivial to set up gestures, and often takes no more than a few lines of code.&lt;/p&gt;
&lt;p&gt;You can use it stand-alone, but to make the most of it you should combine it with an animation library like &lt;a href="https://github.com/pmndrs/react-spring"&gt;react-spring&lt;/a&gt;, though you can most certainly use any other.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/draggable-list" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf652941d2d6a23c225eed68d78b4f2978307c8dd72c59604f52384cf2e0f93e/68747470733a2f2f692e696d6775722e636f6d2f714c4b4a6f64332e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/cards-stack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/972414c19ec3ba6ab61fa4350807726d26e8bab12005c67a32311d98f3f1138a/68747470733a2f2f692e696d6775722e636f6d2f48366e585145712e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/action-sheet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4997ee83de43e96cd8cd0ae613386fd357fcafd994e0ce75503fc1ebd95a3598/68747470733a2f2f692e696d6775722e636f6d2f54484b50726d522e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/infinite-slideshow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/04e1770c490328d74292facf7ff1ca2e47f9180a5f6777e05d8bd6b055fe8d1b/68747470733a2f2f692e696d6775722e636f6d2f63754f667153542e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/viewpager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d856ca75e2baa270741156b7ac7ef58ec58afaf0ae11a564ffaa5f031ab6ff04/68747470733a2f2f692e696d6775722e636f6d2f69775a4f6654392e676966" width="400"&gt;&lt;/a&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/card-zoom" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5193850ca32018e88ab3ee363c167895f4838106cb7363cd04dec3ec178d10c2/68747470733a2f2f692e696d6775722e636f6d2f57616c743149702e676966" width="400"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;i&gt;The demos are real click them!&lt;/i&gt;&lt;/p&gt;

&lt;h2&gt;
Installation&lt;/h2&gt;

&lt;h3&gt;
React&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Yarn&lt;/span&gt;
yarn add @use-gesture/react
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;NPM&lt;/span&gt;
npm install @use-gesture/react&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Vanilla javascript&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Yarn&lt;/span&gt;
yarn add @use-gesture/vanilla

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;NPM&lt;/span&gt;
npm install @use-gesture/vanilla&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;a href="https://v10-beta--use-gesture.netlify.com" rel="nofollow"&gt;Full documentation website&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/gestures" rel="nofollow"&gt;Available Gestures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/state" rel="nofollow"&gt;Gesture State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/options" rel="nofollow"&gt;Gesture Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v10-beta--use-gesture.netlify.com/docs/faq" rel="nofollow"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Simple example&lt;/h3&gt;
&lt;p&gt;
  &lt;a href="https://codesandbox.io/s/github/pmndrs/use-gesture/tree/v10/demo/src/sandboxes/gesture-simplest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b536e97c966a7b81e318f9acb790a274acfd4fb3e5439569228ce1e3d77bb1f0/68747470733a2f2f692e696d6775722e636f6d2f414d7a734569332e676966" width="400"&gt;&lt;/a&gt;
&lt;/p&gt;

  React
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useSpring&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;animated&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@react-spring/web'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;useDrag&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@use-gesture/react'&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;Example&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; x&lt;span class="pl-kos"&gt;,&lt;/span&gt; y &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;api&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useSpring&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pmndrs/use-gesture"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-cheerio"&gt;
  &lt;/a&gt;
  7. cheerio
&lt;/h3&gt;

&lt;p&gt;Fast, flexible, and lean implementation of core jQuery designed specifically for the server.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cheeriojs"&gt;
        cheeriojs
      &lt;/a&gt; / &lt;a href="https://github.com/cheeriojs/cheerio"&gt;
        cheerio
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast, flexible, and lean implementation of core jQuery designed specifically for the server.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
cheerio&lt;/h1&gt;
&lt;h5&gt;
Fast, flexible &amp;amp; lean implementation of core jQuery designed specifically for the server.&lt;/h5&gt;
&lt;div&gt;
  &lt;a href="https://github.com/cheeriojs/cheerio/actions?query=workflow%3ACI+branch%3Amain"&gt;
    &lt;img src="https://camo.githubusercontent.com/42ffe839d9996bf82c79313a3878bb6e167163872f190fd91db28208ced88b69/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6368656572696f6a732f6368656572696f2f43492f6d61696e" alt="Build Status"&gt;
  &lt;/a&gt;
  &lt;a href="https://coveralls.io/github/cheeriojs/cheerio" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/d162b95038d3d64e8fdda615a4403c733fc7de42aa121638a4590707eef8250b/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6368656572696f6a732f6368656572696f2f6d61696e" alt="Coverage"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/cheeriojs/cheerio/main/Readme.md/#backers"&gt;
    &lt;img src="https://camo.githubusercontent.com/b3d8f2ae915bfbe4669be9733c9821802717e5a813693fcae7baaa838ef5aba4/68747470733a2f2f696d672e736869656c64732e696f2f6f70656e636f6c6c6563746976652f6261636b6572732f6368656572696f" alt="OpenCollective backers"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/cheeriojs/cheerio/main/Readme.md/#sponsors"&gt;
    &lt;img src="https://camo.githubusercontent.com/5b04983e1c63a6b63202fdf273bf1d69c8fbfbe6fc135850f77e18b226d2ec80/68747470733a2f2f696d672e736869656c64732e696f2f6f70656e636f6c6c6563746976652f73706f6e736f72732f6368656572696f" alt="OpenCollective sponsors"&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://github.com/cheeriojs/cheerio/wiki/Chinese-README"&gt;中文文档 (Chinese Readme)&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;cheerio&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'cheerio'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;$&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;cheerio&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;load&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'&amp;lt;h2 class="title"&amp;gt;Hello world&amp;lt;/h2&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'h2.title'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;text&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'Hello there!'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-s1"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'h2'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;addClass&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'welcome'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;html&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;//=&amp;gt; &amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h2 class="title welcome"&amp;gt;Hello there!&amp;lt;/h2&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Note&lt;/h2&gt;
&lt;p&gt;We are currently working on the 1.0.0 release of cheerio on the &lt;code&gt;main&lt;/code&gt; branch. The source code for the last published version, &lt;code&gt;0.22.0&lt;/code&gt;, can be found &lt;a href="https://github.com/cheeriojs/cheerio/tree/aa90399c9c02f12432bfff97b8f1c7d8ece7c307"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install cheerio&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;❤ Familiar syntax:&lt;/strong&gt;
Cheerio implements a subset of core jQuery. Cheerio removes all the DOM inconsistencies and browser cruft from the jQuery library, revealing its truly gorgeous API.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ϟ Blazingly fast:&lt;/strong&gt;
Cheerio works with a very simple, consistent DOM model. As a result parsing, manipulating, and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cheeriojs/cheerio"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-doctoc"&gt;
  &lt;/a&gt;
  8. DocToc
&lt;/h3&gt;

&lt;p&gt;Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated by github or other sites.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thlorenz"&gt;
        thlorenz
      &lt;/a&gt; / &lt;a href="https://github.com/thlorenz/doctoc"&gt;
        doctoc
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📜 Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated by github or other sites.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
DocToc &lt;a href="http://travis-ci.org/thlorenz/doctoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be5388b2baf722f371e7bb7fe6ec522444439514b163c4fb9f88c7997b81c15b/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f74686c6f72656e7a2f646f63746f632e737667" alt="build status"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/bePatron?u=8663953" rel="nofollow"&gt;&lt;img alt="become a patron" src="https://camo.githubusercontent.com/2b7105015397da52617ce6775a339b0b99d689d6f644c2ce911c5d472362bcbd/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6265636f6d655f615f706174726f6e5f627574746f6e2e706e67" height="35px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated
by github or other sites via a command line flag.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href="https://github.com/thlorenz/doctoc"&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#adding-toc-to-all-files-in-a-directory-and-sub-directories"&gt;Adding toc to all files in a directory and sub directories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#update-existing-doctoc-tocs-effortlessly"&gt;Update existing doctoc TOCs effortlessly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#adding-toc-to-individual-files"&gt;Adding toc to individual files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#using-doctoc-to-generate-links-compatible-with-other-sites"&gt;Using doctoc to generate links compatible with other sites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#specifying-location-of-toc"&gt;Specifying location of toc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#specifying-a-custom-toc-title"&gt;Specifying a custom TOC title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#specifying-a-maximum-heading-level-for-toc-entries"&gt;Specifying a maximum heading level for TOC entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#printing-to-stdout"&gt;Printing to stdout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/thlorenz/doctoc/master/#usage-as-a-git-hook"&gt;Usage as a &lt;code&gt;git&lt;/code&gt; hook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install -g doctoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;In its simplest usage, you can pass one or more files or folders to the
&lt;code&gt;doctoc&lt;/code&gt; command. This will update the TOCs of each file specified as well as of
each markdown file found by recursively searching each folder. Below are some
examples.&lt;/p&gt;
&lt;h3&gt;
Adding toc to all files in a directory&lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thlorenz/doctoc"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-styleguidist"&gt;
  &lt;/a&gt;
  9. Styleguidist
&lt;/h3&gt;

&lt;p&gt;Isolated React component development environment with a living style guide &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/styleguidist"&gt;
        styleguidist
      &lt;/a&gt; / &lt;a href="https://github.com/styleguidist/react-styleguidist"&gt;
        react-styleguidist
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Isolated React component development environment with a living style guide
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e5957704abbb3c823da4dfd68a31665a1065b4c0de3d662e7f08f23684455fbc/68747470733a2f2f64337676366c703535716a6171632e636c6f756466726f6e742e6e65742f6974656d732f303631663041326e3142304833703054317031662f72656163742d7374796c65677569646973742d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e5957704abbb3c823da4dfd68a31665a1065b4c0de3d662e7f08f23684455fbc/68747470733a2f2f64337676366c703535716a6171632e636c6f756466726f6e742e6e65742f6974656d732f303631663041326e3142304833703054317031662f72656163742d7374796c65677569646973742d6c6f676f2e706e67" alt="React Styleguidist" width="400"&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Isolated React component development environment with a living style guide&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-styleguidist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/790eb9d9348d99d60de5793a98f4855f5804cf7a9b9d8228ddb00ee3fcffd419/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d7374796c65677569646973742e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/styleguidist/react-styleguidist.git/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Umo3WsNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/styleguidist/react-styleguidist/workflows/CI/badge.svg" alt="CI status"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/styleguidist/react-styleguidist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/883e74b23f8facf0f9122f2c0ea145ee494503ba65980f8ccbf5a4b4619b9618/68747470733a2f2f636f6465636f762e696f2f67682f7374796c65677569646973742f72656163742d7374796c65677569646973742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/styleguidist/styleguidist?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40b23e65a017f38ae7e77237e798f174fbcb92ee17638ef626f495524b6c34c9/68747470733a2f2f6261646765732e6769747465722e696d2f7374796c65677569646973742f7374796c65677569646973742e737667" alt="Join the chat at https://gitter.im/styleguidist/styleguidist"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/QWsybqJDTA" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cde77425d6175c85134c067dec6ffb2d077dec5494c4c6933aaefac01014bb4b/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3834323833323138363931343633353830363f6c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/styleguidist/react-styleguidist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d92fe1698553066c1adf9859746f619c2226c21f25a38cc19bee316ca5505b1/68747470733a2f2f7777772e636f64657472696167652e636f6d2f7374796c65677569646973742f72656163742d7374796c65677569646973742f6261646765732f75736572732e737667" alt="Open Source Helpers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;React Styleguidist is a component development environment with hot reloaded dev server and a living style guide that you can share with your team. It lists component &lt;code&gt;propTypes&lt;/code&gt; and shows live, editable usage examples based on Markdown files. Check out &lt;a href="https://react-styleguidist.js.org/examples/basic/" rel="nofollow"&gt;&lt;strong&gt;the demo style guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1703219/74945569-51c6ad00-543b-11ea-8351-f4d86860893a.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CuNtKtOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/1703219/74945569-51c6ad00-543b-11ea-8351-f4d86860893a.gif" alt="React Styleguidist in action"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://react-styleguidist.js.org/docs/getting-started" rel="nofollow"&gt;Getting Started&lt;/a&gt;: install and run Styleguidist&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/documenting" rel="nofollow"&gt;Documenting components&lt;/a&gt;: how to write documentation&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/components" rel="nofollow"&gt;Locating components&lt;/a&gt;: point Styleguidist to your React components&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/webpack" rel="nofollow"&gt;Configuring webpack&lt;/a&gt;: tell Styleguidist how to load your code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/docs/cookbook" rel="nofollow"&gt;Cookbook&lt;/a&gt;: how to solve common tasks with Styleguidist&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Advanced documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://react-styleguidist.js.org/docs/configuration" rel="nofollow"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://react-styleguidist.js.org/docs/cli" rel="nofollow"&gt;CLI commands and options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://react-styleguidist.js.org/docs/api" rel="nofollow"&gt;Node.js API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://react-styleguidist.js.org/examples/basic/" rel="nofollow"&gt;Basic style guide&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/basic"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Style guide with sections, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/sections"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Style guide with customized styles, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/customised"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Style guide with custom express endpoints, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/express"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create React App integration, &lt;a href="https://raw.githubusercontent.com/styleguidist/react-styleguidist/master/Readme.md/./examples/cra"&gt;source&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Showcase&lt;/h2&gt;
&lt;p&gt;Real projects using React Styleguidist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rumble-charts.github.io/rumble-charts/" rel="nofollow"&gt;Rumble Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://better-react-spinkit.benjamintatum.com/" rel="nofollow"&gt;better-react-spinkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hallister.github.io/semantic-react/" rel="nofollow"&gt;Semantic UI Components for React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/styleguidist/react-styleguidist"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-pts"&gt;
  &lt;/a&gt;
  10. Pts
&lt;/h3&gt;

&lt;p&gt;A library for visualization and creative-coding&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/williamngan"&gt;
        williamngan
      &lt;/a&gt; / &lt;a href="https://github.com/williamngan/pts"&gt;
        pts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A library for visualization and creative-coding
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Pts&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/williamngan/pts/master/./assets/pts-gif-10.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29yDR8D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/williamngan/pts/master/./assets/pts-gif-10.gif" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pts is a typescript/javascript library for visualization and creative-coding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Get started at &lt;a href="https://ptsjs.org" rel="nofollow"&gt;ptsjs.org&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Please give it a try, &lt;a href="https://github.com/williamngan/pts/issues"&gt;file issues&lt;/a&gt;, and send feedbacks to &lt;a href="https://twitter.com/williamngan" rel="nofollow"&gt;@williamngan&lt;/a&gt;. Thank you!&lt;/p&gt;

&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;br&gt;
Get the latest &lt;code&gt;pts.js&lt;/code&gt; or &lt;code&gt;pts.min.js&lt;/code&gt; (in &lt;a href="https://github.com/williamngan/pts/tree/master/dist"&gt;dist&lt;/a&gt; folder). Alternatively use a CDN service like &lt;a href="https://cdnjs.com/libraries/pts" rel="nofollow"&gt;cdnjs&lt;/a&gt; or &lt;a href="https://cdn.jsdelivr.net/gh/williamngan/pts/dist/pts.min.js" rel="nofollow"&gt;jsdelivr&lt;/a&gt; or &lt;a href="https://unpkg.com/pts/dist/pts.min.js" rel="nofollow"&gt;unpkg&lt;/a&gt;. Then add it to your html page like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;text/javascript&lt;/span&gt;" &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;path/to/pts.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Pts is pretty lightweight. Currently at ~90kb minified and 26kb gzipped.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;br&gt;
Install via &lt;code&gt;npm install pts&lt;/code&gt;. Then you can choose to import some parts of Pts into your project as needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-v"&gt;CanvasSpace&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Pt&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Group&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-v"&gt;Line&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'pts'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;To quickly get started, try download or clone these repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/williamngan/pts-starter-kit"&gt;pts-starter-kit&lt;/a&gt;: Get started with a sample app using npm and webpack&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/williamngan/pts-react-example"&gt;pts-react-example&lt;/a&gt;: Try…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/williamngan/pts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/thedaviddias/Front-End-Checklist"&gt;Front-End Checklist&lt;/a&gt; +1,665 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sdmg15/Best-websites-a-programmer-should-visit"&gt;Best websites a programmer should visit&lt;/a&gt; +1,445 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GitSquared/edex-ui"&gt;eDEX-UI&lt;/a&gt; +1,350 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +1,235 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mikecao/umami"&gt;umami&lt;/a&gt; +844 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/pveyes/htmr"&gt;htmr&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +24%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/observablehq/plot"&gt;Observable Plot&lt;/a&gt; +15%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Elderjs/elderjs"&gt;Elder.js&lt;/a&gt; +15%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +15%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +6,543 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +5,535 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Web Developer Roadmap&lt;/a&gt;  +5,200 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,960 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt; +4,350 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/github/github-elements"&gt;github-elements&lt;/a&gt; +132%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pankod/superplate"&gt;superplate&lt;/a&gt; +73%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yiliansource/party-js"&gt;party.js&lt;/a&gt; +72%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +72%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/supabase"&gt;Supabase&lt;/a&gt; +43%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>React custom hook to fetch data</title>
      <author>abhmohan</author>
      <pubDate>Fri, 21 May 2021 13:48:18 +0000</pubDate>
      <link>https://dev.to/abhmohan/react-custom-hook-to-fetch-data-a72</link>
      <guid>https://dev.to/abhmohan/react-custom-hook-to-fetch-data-a72</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;In this post, I will explain how to create a custom hook which will fetch data and how can we reuse it in different components.&lt;/p&gt;

&lt;p&gt;React hooks are relatively new compared to class components. If you are new to hooks, I will strongly recommend to go through the official documentation. Here is the link &lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;hooks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hope you have an idea about hook.So let's start.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
                &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me explain what I have done here.&lt;/p&gt;

&lt;p&gt;I have created a custom hook &lt;strong&gt;useFetch&lt;/strong&gt; which is basically a function which takes in two arguments(url and options) and it returns an object with state(data, error).&lt;/p&gt;

&lt;p&gt;I have used two react hooks(useState and useEffect).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useState&lt;/strong&gt; is a hook that allows you to have state variables in functional components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useEffect&lt;/strong&gt; is a hook that allows to have side effects from within functional components(updating DOM, making asynchronous call..). It accepts two arguments, first one is the callback and second one is the dependencies array. Anytime if any of the dependency in the dependencies array changes, the callback is fired.&lt;/p&gt;

&lt;p&gt;In our case useEffect has no dependencies. So that means our callback function will be called only once(you can imagine how componentDidMount works in a class component). Inside the callback, we have fetchData which is a async function, which actually does a fetch call with the url and options.&lt;/p&gt;

&lt;p&gt;We can extend this to have a loading state. Let me add the loading state into our hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
                &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now then we have added the loading state, let's see how we can consume this hook in different components.&lt;/p&gt;

&lt;p&gt;Let's assume we have a component Component1.js and I want to consume the custom hook that we just created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;someUrl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;get&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Show a loader here because fetch is still going on.&lt;/span&gt;
        &lt;span class="c1"&gt;// return &amp;lt;Loader /&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Show some error message&lt;/span&gt;
        &lt;span class="c1"&gt;// return &amp;lt;ErrorState /&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;// Do something with data&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I can consume the custom hook in different other components.That means I can reuse the state(data, error, isLoading) in other components too and that was the main idea behind hooks(&lt;em&gt;Reuse state&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Hooks are really great addition to the react. We can make use of react features without writing class components.&lt;/p&gt;

&lt;p&gt;That's it for this article. I hope this helped you.&lt;br&gt;
Leave any feedback, suggestion, question if you have and most importantly keep learning.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Charts in Vue3</title>
      <author>Alexandru Ghiura</author>
      <pubDate>Fri, 21 May 2021 13:36:34 +0000</pubDate>
      <link>https://dev.to/ghalex/charts-in-vue3-25a0</link>
      <guid>https://dev.to/ghalex/charts-in-vue3-25a0</guid>
      <description>&lt;p&gt;Hello 👋 !&lt;/p&gt;

&lt;p&gt;Today I want to talk about charts, more specifically charts in Vue 3.&lt;/p&gt;

&lt;p&gt;Recently I had to add some charts to my latest project so I had to find a good library that will allow me to do this easily &amp;amp; fast.&lt;/p&gt;

&lt;p&gt;I already used &lt;a href="https://d3js.org/"&gt;D3&lt;/a&gt; multiple times and considered an industry-standard, but I wanted something more simple for the start that could still offer me some customization if I want to do that in the future.&lt;/p&gt;

&lt;p&gt;After some research this were my &lt;strong&gt;top 3 candidates&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;D3&lt;/li&gt;
&lt;li&gt;ApexCharts&lt;/li&gt;
&lt;li&gt;Chart.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The issue I had with &lt;strong&gt;ApexCharts&lt;/strong&gt; &amp;amp; &lt;strong&gt;Chart.js&lt;/strong&gt; was that you need to use a library that is a wrapper for the core library plus the configuration for the charts was cumbersome and I had problems trying to do any kind of customization.&lt;/p&gt;

&lt;p&gt;I was expecting to find a library like &lt;a href="https://recharts.org/en-US/"&gt;Recharts&lt;/a&gt; where you compose components to write your chart and the rendering part is handled by the framework, in my case by Vue, but I couldn’t find it.&lt;/p&gt;

&lt;p&gt;This made me choose &lt;strong&gt;D3&lt;/strong&gt;. The problem here was that I had to write a lot of code to get simple charts so I decided to write a new chart library for Vue 3.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hello-vue3charts"&gt;
  &lt;/a&gt;
  Hello, Vue3-Charts
&lt;/h2&gt;

&lt;p&gt;The library is called &lt;a href="http://vue3charts.org/"&gt;Vue3-Charts&lt;/a&gt; and it is build with 3 core concepts in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;💡 Intuitive&lt;/li&gt;
&lt;li&gt;🔌 Extensible&lt;/li&gt;
&lt;li&gt;📦 Extremely easy to use&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The core idea is&lt;/strong&gt;: If you want a simple chart, the library should be very intuitive and easy to use but if you need more complicated layers and customization the library should provide that too.&lt;/p&gt;

&lt;p&gt;To do that the library is build with this in mind and everything is a &lt;code&gt;layer&lt;/code&gt; or a &lt;code&gt;widget&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The library comes with some built-in layers (&lt;code&gt;Line&lt;/code&gt;, &lt;code&gt;Bar&lt;/code&gt;, &lt;code&gt;Area&lt;/code&gt;, etc…) but you can easily write your own layers using the power of Vue3 &lt;a href="https://v3.vuejs.org/api/composition-api.html"&gt;composition API&lt;/a&gt;. Check &lt;a href="https://vue3charts.org/docs/custom-layer"&gt;this example&lt;/a&gt; in the &lt;a href="https://vue3charts.org/docs/getting-started"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is a simple responsive &lt;strong&gt;LineChart&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;Responsive&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#main&lt;/span&gt;&lt;span class="err"&gt;="&lt;/span&gt;{ width }"&amp;gt;
      &lt;span class="nt"&gt;&amp;lt;Chart&lt;/span&gt; &lt;span class="na"&gt;:size=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;{ width, height: 420 }" :data="data"&amp;gt;
        &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#layers&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;Line&lt;/span&gt; &lt;span class="na"&gt;:dataKeys=&lt;/span&gt;&lt;span class="s"&gt;"['name', 'pl']"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/Chart&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/Responsive&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Responsive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Line&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue3-charts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;plByMonth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LineChart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Responsive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Line&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plByMonth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;horizontal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see you just write Vue components to build your charts simple and easy to read.&lt;/p&gt;

&lt;p&gt;The library is still in progress but you can check the documentation here:&lt;br&gt;
&lt;a href="https://vue3charts.org/"&gt;https://vue3charts.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the GitHub repository here:&lt;br&gt;
&lt;a href="https://github.com/ghalex/vue3-charts"&gt;https://github.com/ghalex/vue3-charts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any suggestions please let me know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-so-much-for-reading"&gt;
  &lt;/a&gt;
  Thank you so much for reading!
&lt;/h2&gt;

&lt;p&gt;If there is anything &lt;strong&gt;I can do to help&lt;/strong&gt;, please reach out on my Twitter &lt;a class="mentioned-user" href="https://dev.to/ghalex"&gt;@ghalex&lt;/a&gt;
 and check out my &lt;a href="https://ghalex.com"&gt;blog&lt;/a&gt; for more articles.&lt;/p&gt;

&lt;p&gt;Have a nice day!&lt;/p&gt;

</description>
      <category>vue</category>
      <category>vue3</category>
      <category>d3</category>
    </item>
    <item>
      <title>Is there a way to have custom typecasting in GoLang?</title>
      <author>Calin Baenen</author>
      <pubDate>Fri, 21 May 2021 13:26:48 +0000</pubDate>
      <link>https://dev.to/baenencalin/is-there-a-way-to-have-custom-typecasting-in-golang-383b</link>
      <guid>https://dev.to/baenencalin/is-there-a-way-to-have-custom-typecasting-in-golang-383b</guid>
      <description>&lt;p&gt;I know there is typecasting in GoLang, such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;long&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;ulong&lt;/span&gt; &lt;span class="kt"&gt;uint64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;long&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;39486&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i16&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;ui16&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;uint64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i16&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;66&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But is there a way to add them to interface/struct types?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;IJType&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c"&gt;/* ... */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;JByte&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c"&gt;/* Implements IJType */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Is there a way I could make a constructor, like in the following?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;JByte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JByte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt; &lt;span class="c"&gt;/*byte*/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;// -&amp;gt; JByte(byte) -&amp;gt; JByte {/* ... */}&lt;/span&gt;
&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;// 255.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>go</category>
      <category>beginners</category>
      <category>watercooler</category>
      <category>help</category>
    </item>
    <item>
      <title>Setting up an Angular 12 workspace with Nx and GitHub Actions</title>
      <author>Lars Gyrup Brink Nielsen</author>
      <pubDate>Fri, 21 May 2021 13:21:54 +0000</pubDate>
      <link>https://dev.to/this-is-learning/setting-up-an-angular-12-workspace-with-nx-and-github-actions-32l5</link>
      <guid>https://dev.to/this-is-learning/setting-up-an-angular-12-workspace-with-nx-and-github-actions-32l5</guid>
      <description>&lt;p&gt;In this episode of Nx After Dark, we're creating an Nx workspace for an Angular 12 app called Energy Insights. We're also setting up a GitHub Actions workflow and connecting it to Nx Cloud.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/g5AoLY3jqD4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Follow the instructions below to set up a similar workspace or browse the end result at &lt;a href="https://github.com/LayZeeDK/energy-insights"&gt;github/LayZeeDK/energy-insights&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Node.js 14.x&lt;/li&gt;
&lt;li&gt;PNPM&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that there's currently an issue with using Cypress with PNPM. Let me know if you figure out how to fix it. Until then, remove Cypress from the workspace or use either Yarn or NPM.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#create-nx-workspace"&gt;
  &lt;/a&gt;
  Create Nx workspace
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install the Nx workspace generator&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;pnpm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--global&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;create-nx-workspace&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Generate a blank Nx workspace&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;pnpm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;nx-workspace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;my-workspace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--preset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--pm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pnpm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--npm-scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;my-workspace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--nx-cloud&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#configure-nx-workspace"&gt;
  &lt;/a&gt;
  Configure Nx workspace
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install the "json" utility&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;npm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--global&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Set the base branch to "main"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;nx.json&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;-e&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"this.affected.defaultBase = 'main';"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#add-angular-capability"&gt;
  &lt;/a&gt;
  Add Angular capability
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Add Angular capability&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;pnpm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;--save-dev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;nrwl/angular&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;# Initialize Angular workspace&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;nrwl/angular:init&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#generate-angular-app-project"&gt;
  &lt;/a&gt;
  Generate Angular app project
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Generate Angular app project&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;my-app&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the video for examples of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up generator defaults&lt;/li&gt;
&lt;li&gt;Creating a GitHub Actions CI workflow&lt;/li&gt;
&lt;li&gt;Setting up GitHub workflow triggers&lt;/li&gt;
&lt;li&gt;Connecting Nx Cloud for distributed computation caching&lt;/li&gt;
&lt;li&gt;Remove Cypress&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nx</category>
      <category>angular</category>
      <category>github</category>
      <category>githubactions</category>
    </item>
    <item>
      <title>Hey I just made this cool pen...</title>
      <author>Siddharth</author>
      <pubDate>Fri, 21 May 2021 13:20:54 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/hey-i-just-made-this-cool-pen-201j</link>
      <guid>https://dev.to/siddharthshyniben/hey-i-just-made-this-cool-pen-201j</guid>
      <description>&lt;p&gt;You can check it out &lt;a href="https://codepen.io/SiddharthShyniben/full/eYvgoxm"&gt;here&lt;/a&gt;. You sure will love it!&lt;/p&gt;

&lt;p&gt;And I won't put details here. It's a surprise...&lt;/p&gt;

&lt;p&gt;‎‎&lt;/p&gt;

&lt;p&gt;‎‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎&lt;br&gt;
‎‎‎‎‎‎&lt;br&gt;
‎‎‎‎‎‎‎&lt;br&gt;
‎‎‎‎‎‎‎‎‎‎‎&lt;br&gt;
‎‎‎‎‎‎‎&lt;br&gt;
‎‎‎‎‎‎‎‎‎‎‎‎‎‎‎&lt;br&gt;
‎‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎‎‎‎‎‎&lt;/p&gt;

&lt;p&gt;‎‎‎‎‎&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How we achieved write speeds of 1.4 million rows per second</title>
      <author>Nicolas Hourcard</author>
      <pubDate>Fri, 21 May 2021 12:59:05 +0000</pubDate>
      <link>https://dev.to/questdb/how-we-achieved-write-speeds-of-1-4-million-rows-per-second-1a9l</link>
      <guid>https://dev.to/questdb/how-we-achieved-write-speeds-of-1-4-million-rows-per-second-1a9l</guid>
      <description>&lt;p&gt;At QuestDB, we've built an open-source time series database focused on performance. We started QuestDB so that we could bring our experience in low-latency trading and the technical approaches we developed in this domain to a variety of real-time data processing use cases.&lt;/p&gt;

&lt;p&gt;The journey to today's version of QuestDB began with the original prototype in 2013, and we've described what happened since in a post published &lt;a href="https://news.ycombinator.com/item?id=23975807"&gt;during our HackerNews launch&lt;/a&gt; last year. Our users deploy QuestDB to make time series analysis fast, efficient, and convenient in financial services, IoT, application monitoring, and machine learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-best-way-to-store-time-series-data"&gt;
  &lt;/a&gt;
  What's the best way to store time series data?
&lt;/h2&gt;

&lt;p&gt;In the early stages of the project, we were inspired by vector-based append-only systems like kdb+ because of the advantages of speed and the simple code path this model brings. QuestDB’s data model uses what we call &lt;em&gt;time-based arrays&lt;/em&gt; which is a linear data structure. This allows QuestDB to slice data during ingestion in small chunks and process it all in parallel. Data that arrives in the wrong time order is dealt with and reordered in memory before being persisted to disk. Therefore, data lands on the database ordered by time already. As such, QuestDB does not rely on computationally intense indices to reorder data for any given time-series queries.&lt;/p&gt;

&lt;p&gt;This liner model differs from the LSM trees or B-tree-based storage engines found in other open source databases such as InfluxDB or TimescaleDB.&lt;/p&gt;

&lt;p&gt;Beyond ingestion capabilities, QuestDB’s data layout enables CPUs to access data faster. Our codebase leverages modern CPU architecture with SIMD instructions to request that the same operation be performed on multiple data elements in parallel. We store data in columns and partition it by time to lift the minimal amount of data from the disk for a given query.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S_VNQsn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg2aqieemlkz5r5d2dym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_VNQsn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg2aqieemlkz5r5d2dym.png" alt="A diagram showing the column-based storage model of QuestDB which allows for parallelizing work in tables"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-questdb-compare-to-clickhouse-influxdb-and-timescaledb"&gt;
  &lt;/a&gt;
  How does QuestDB compare to ClickHouse, InfluxDB and TimescaleDB
&lt;/h2&gt;

&lt;p&gt;We saw the &lt;a href="https://github.com/timescale/tsbs"&gt;Time Series Benchmark Suite&lt;/a&gt; (TSBS) regularly coming up in discussions about database performance and decided we should provide the ability to benchmark QuestDB along with other systems. The TSBS is a collection of Go programs to generate datasets and then benchmark read and write performance. The suite is extensible so that different use cases and query types can be included and compared across systems.&lt;/p&gt;

&lt;p&gt;Here are our results of the benchmark with the &lt;code&gt;cpu-only&lt;/code&gt; use case using up to fourteen workers on an AWS EC2 &lt;code&gt;m5.8xlarge&lt;/code&gt; instance with sixteen cores.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bj9blf7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b27s5sk6dijrfamln2da.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bj9blf7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b27s5sk6dijrfamln2da.png" alt="A chart comparing the maximum throughput of four database systems, showing QuestDB hitting ingestion limits with less resources than other systems"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We reach maximum ingestion performance using four workers, whereas the other systems require more CPU resources to hit maximum throughput. QuestDB achieves 959k rows/sec with 4 threads. We find that InfluxDB needs 14 threads to reach its max ingestion rate (334k rows/sec), while TimescaleDB reaches 145k rows/sec with 4 threads. ClickHouse hits 914k rows/sec with twice as many threads as QuestDB.&lt;/p&gt;

&lt;p&gt;When running on 4 threads, QuestDB is 1.7x faster than ClickHouse, 6.5x faster than InfluxDB and 6.6x faster than TimescaleDB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pC0OYdik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82rkh366kuio6tqp1e7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pC0OYdik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82rkh366kuio6tqp1e7t.png" alt="Time series benchmark suite results showing QuestDB outperforming ClickHouse, TimescaleDB and InfluxDB when using four workers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we run the suite again using an AMD Ryzen5 processor, we found that we were able to hit maximum throughput of 1.43 million rows per second using 5 threads. This is compared to the &lt;a href="https://aws.amazon.com/ec2/instance-types/"&gt;Intel Xeon Platinum&lt;/a&gt; that's in use by our reference benchmark &lt;code&gt;m5.8xlarge&lt;/code&gt; instance on AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyAFy1Ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rf44e9irxw67aty77jwk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyAFy1Ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rf44e9irxw67aty77jwk.png" alt="A chart comparing the maximum throughput of QuestDB when utilizing an Intel Xeon Platinum processor versus an AMD Ryzen5 processor."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-should-you-store-outoforder-time-series-data"&gt;
  &lt;/a&gt;
  How should you store out-of-order time series data?
&lt;/h2&gt;

&lt;p&gt;Re-ordering data which is "out-of-order" (O3) during ingestion proved particularly challenging. It is a new approach that we wanted to detail a little bit more in this article. Our idea of how we could handle out out-of-order ingestion was to add a three-stage approach:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Keep the append model until records arrive out-of-order &lt;/li&gt;
&lt;li&gt;Sort uncommitted records in a staging area in-memory&lt;/li&gt;
&lt;li&gt;Reconcile and merge the sorted out-of-order data and persisted data at commit time&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first two steps are straightforward and easy to implement, and handling append-only data is unchanged. The heavy out-of-order commit kicks in only when there is data in the staging area. The bonus of this design is that the output is vectors, meaning our vector-based readers are still compatible.&lt;/p&gt;

&lt;p&gt;This pre-commit sort-and-merge adds an extra processing phase to ingestion with an accompanying performance penalty. We nevertheless decided to explore this approach and see how far we could reduce the penalty by optimizing the out-of-order commit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-we-sort-merge-and-commit-outoforder-time-series-data"&gt;
  &lt;/a&gt;
  How we sort, merge and commit out-of-order time series data
&lt;/h2&gt;

&lt;p&gt;Processing a staging area gives us a unique opportunity to analyze the data holistically where we can avoid physical &lt;em&gt;merges&lt;/em&gt; altogether and get away with fast and straightforward &lt;code&gt;memcpy&lt;/code&gt; or similar data movement methods. Such methods can be parallelized thanks to our column-based storage. We can employ SIMD and non-temporal data access where it makes a difference.&lt;/p&gt;

&lt;p&gt;We sort the timestamp column from the staging area via an optimized version of radix sort, and the resulting index is used to reshuffle the remaining columns in the staging area in parallel:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--obLSq2kZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg2xjtcc5c7nek6c9b4h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--obLSq2kZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg2xjtcc5c7nek6c9b4h.png" alt="A diagram illustrating how sorting is applied to unordered database records based on a timestamp column order"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The now-sorted staging area is mapped relative to the existing partition data. It may not be obvious from the start but we are trying to establish the type of operation needed and the dimensions of each of the three groups below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UewC9VM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zeinflbfvd9z2mxih42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UewC9VM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zeinflbfvd9z2mxih42.png" alt="A diagram illustrating the combinations of merge operations that can be applied to two data sets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When merging datasets in this way, the prefix and suffix groups can be persisted data, out-of-order data, or none. The merge group is where more cases occur as it can be occupied by persisted data, out-of-order data, both out-of-order and persisted data, or none.&lt;/p&gt;

&lt;p&gt;When it's clear how to group and treat data in the staging area, a pool of workers perform the required operations, calling &lt;code&gt;memcpy&lt;/code&gt; in trivial cases and shifting to SIMD-optimized code for everything else. With a prefix, merge, and suffix split, the maximum &lt;code&gt;liveliness&lt;/code&gt; of the commit (how susceptible it is to add more CPU capacity) is &lt;code&gt;partitions_affected&lt;/code&gt; x &lt;code&gt;number_of_columns&lt;/code&gt; x &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-often-should-time-series-data-be-sorted-and-merged"&gt;
  &lt;/a&gt;
  How often should time series data be sorted and merged?
&lt;/h2&gt;

&lt;p&gt;Being able to copy data fast is a good option, but we think that heavy data copying can be avoided in most time series ingestion scenarios. Assuming that most real-time out-of-order situations are caused by the delivery mechanism and hardware jitter, we can deduce that the timestamp distribution will be contained by some boundary.&lt;/p&gt;

&lt;p&gt;For example, if any new timestamp value has a high probability to fall within 10 seconds of the previously received value, the boundary is then 10 seconds, and we call this boundary &lt;em&gt;lag.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When timestamp values follow this pattern, deferring the commit can render out-of-order commits a normal append operation. The out-of-order system can deal with any variety of lateness, but if incoming data is late within the time specified by &lt;em&gt;lag&lt;/em&gt;, it will be prioritized for faster processing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-compare-time-series-database-performance"&gt;
  &lt;/a&gt;
  How to compare time series database performance
&lt;/h2&gt;

&lt;p&gt;We have opened a pull request (&lt;a href="https://github.com/timescale/tsbs/issues/157"&gt;Questdb benchmark support&lt;/a&gt;) in TimescaleDB's TSBS GitHub repository, to add the ability to run the benchmark against QuestDB. In the meantime, users may clone &lt;a href="https://github.com/questdb/tsbs"&gt;our fork of the benchmark&lt;/a&gt; and run the suite to see the results for themselves.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;tsbs_generate_data &lt;span class="nt"&gt;--use-case&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"cpu-only"&lt;/span&gt; &lt;span class="nt"&gt;--seed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;123 &lt;span class="nt"&gt;--scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4000 &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--timestamp-start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2016-01-01T00:00:00Z"&lt;/span&gt; &lt;span class="nt"&gt;--timestamp-end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2016-01-02T00:00:00Z"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--log-interval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"10s"&lt;/span&gt; &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"influx"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /tmp/bigcpu

tsbs_load_questdb &lt;span class="nt"&gt;--file&lt;/span&gt; /tmp/bigcpu &lt;span class="nt"&gt;--workers&lt;/span&gt; 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-an-open-source-database-with-a-permissive-license"&gt;
  &lt;/a&gt;
  Building an open source database with a permissive license
&lt;/h2&gt;

&lt;p&gt;Pushing database performance further while making it easy for developers to get started with our product motivates us every day. This is why we are focused on building a solid community of developers who can participate and improve the product through our open source distribution model.&lt;/p&gt;

&lt;p&gt;Beyond making QuestDB easy to use, we want to make it easy to audit, review, and make code or general project contributions. All of QuestDB's source code is available on &lt;a href="https://github.com/questdb/questdb"&gt;GitHub&lt;/a&gt; under the Apache 2.0 license and we welcome all sorts of contributions from GitHub issues to pull requests.&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>opensource</category>
      <category>database</category>
      <category>performance</category>
    </item>
    <item>
      <title>What is the difference between Library vs Framework?</title>
      <author>Rohit Singh Rana</author>
      <pubDate>Fri, 21 May 2021 12:51:38 +0000</pubDate>
      <link>https://dev.to/rohitrana/what-is-the-difference-between-library-vs-framework-174n</link>
      <guid>https://dev.to/rohitrana/what-is-the-difference-between-library-vs-framework-174n</guid>
      <description>&lt;p&gt;While the terms Library and Framework may sound similar, they both work differently. &lt;/p&gt;

&lt;p&gt;Many people use these two words interchangeably without knowing the profound meaning behind them.&lt;/p&gt;

&lt;p&gt;Before we dig into the key differences between Library and Framework, let's look at the common purpose that they both serve.&lt;/p&gt;

&lt;p&gt;Both Library and Framework are code written by some developer to solve a complicated problem efficiently.&lt;/p&gt;

&lt;p&gt;They both give you an excellent approach to write DRY (don't repeat yourself) code.&lt;/p&gt;

&lt;p&gt;Their purpose was to increase the reusability of the code so that you can use the same piece of code or functions again in your various project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-library"&gt;
  &lt;/a&gt;
  What is Library?
&lt;/h2&gt;

&lt;p&gt;A Library is a set of code that was previously written by a developer that you can call when you are building your project. &lt;/p&gt;

&lt;p&gt;In Library, you import or call specific methods that you need for your project.&lt;/p&gt;

&lt;p&gt;In simple words, a bunch of code packed together that can be used repeatedly is known as Library.&lt;/p&gt;

&lt;p&gt;Reusability is one of the main reasons to use libraries.&lt;/p&gt;

&lt;p&gt;Let's understand this more clearly with the help of an example. &lt;/p&gt;

&lt;p&gt;Think of you as a carpenter who needs to build a table.&lt;/p&gt;

&lt;p&gt;Now, you can build a table without the help of tools, but it's time-consuming and a long process.&lt;/p&gt;

&lt;p&gt;Whereas, if you choose the correct tools, you'll be able to build a table more quickly and that too without any hardship.&lt;/p&gt;

&lt;p&gt;Think of here tools as a library. You can write your program without them.&lt;/p&gt;

&lt;p&gt;But it will be a long process, and chances are your program will get buggy, while if you use Library, it'll be much easier for you to work with the program. &lt;/p&gt;

&lt;p&gt;For example, if you use the in-built JavaScript fetch () method to fetch the data from API and you feel that it's not the ideal solution.&lt;/p&gt;

&lt;p&gt;Then you can use  &lt;a href="https://www.npmjs.com/package/axios"&gt;Axios&lt;/a&gt;  Library for the same purpose to make your work easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;axios.post('/login', {
  firstName: 'Monica',
  lastName: 'robinson '
})
.then((response) =&amp;gt; {
  console.log(response);
}, (error) =&amp;gt; {
  console.log(error);
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some common examples of Library are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/rohitrana/why-react-is-winning-over-angular-2n7g"&gt;&lt;strong&gt;React&lt;/strong&gt; &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Redux is an open-source JavaScript library for managing application state.&lt;br&gt;
It's most commonly used with React &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Three.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's another super cool JavaScript library used to create and display 3d computer graphics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lodash&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lodash is a JavaScript library that provides utility functions for common programming tasks.&lt;/p&gt;

&lt;p&gt;It's more of a productivity kit in node.js &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jQuery&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;jQuery is a JavaScript library that does the things like event handling and HTML document manipulation.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-framework"&gt;
  &lt;/a&gt;
  What is Framework?
&lt;/h2&gt;

&lt;p&gt;A framework is a supporting structure that gives shape to your code.&lt;/p&gt;

&lt;p&gt;In the Framework, you have to fill the structure accordingly with your code.&lt;/p&gt;

&lt;p&gt;There is a specific structure for a particular framework that you have to follow, and it's generally more restrictive than Library.&lt;/p&gt;

&lt;p&gt;One thing to remember here is that frameworks sometimes get quite large, so they may also use the Library.&lt;/p&gt;

&lt;p&gt;But the Framework doesn't necessarily have to use Library.&lt;/p&gt;

&lt;p&gt;Let's get back to our carpenter and table example for a better understanding of the Framework.&lt;/p&gt;

&lt;p&gt;Here, if you want to build a table, then you need a model or skeleton for how the table looks, like the table has four legs and a top slab.&lt;/p&gt;

&lt;p&gt;Now, this is the core structure of the table and you have to work accordingly to build the table.&lt;/p&gt;

&lt;p&gt;Similar to this, Framework also provides the structure, and you have to write the code accordingly. &lt;/p&gt;

&lt;p&gt;Let's take the example of &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;  and understand the restrictive nature of the Framework.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var express = require('express')
var app = express()


app.get('/', function (req, res) {
  res.send('welcome to dev.to!! ')
})
app.post('/', function (req, res) {
  res.send('POST request to the dev.to homepage')
})


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here express is designed in such a way that it is going to look only for specific methods (get/post) and specific parameters.&lt;/p&gt;

&lt;p&gt;You can't name the methods whatever you want to, and you have to name the methods as per the documentation.&lt;/p&gt;

&lt;p&gt;Some common examples of Framework are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/rohitrana/why-react-is-winning-over-angular-2n7g"&gt;&lt;strong&gt;Angular&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Angular is a JavaScript framework for web and mobile development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Django&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Django is a fully featured server-side web framework written in &lt;br&gt;
Python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Express&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Express is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rails&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rails is a web application development framework written in the Ruby programming language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Spring Framework is an open-source framework for building web applications with Java as a programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-difference-between-library-vs-framework"&gt;
  &lt;/a&gt;
  Key Difference between Library vs Framework
&lt;/h2&gt;

&lt;p&gt;The main key difference between the Library and Framework is something known as &lt;a href="https://www.programcreek.com/2011/09/what-is-the-difference-between-a-java-library-and-a-framework/#:~:text=The%20key%20difference%20between%20a,a%20collection%20of%20class%20definitions."&gt;inversion of control.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Let's understand this inversion of control more in detail.&lt;/p&gt;

&lt;p&gt;When you import a library, you have to call the specific methods or functions of your choice so, and it's up to you when and where to call the Library.&lt;/p&gt;

&lt;p&gt;Here, you are in charge of flow.&lt;/p&gt;

&lt;p&gt;On the other hand, Framework itself makes a call to your code and provide you with some space to write down details.&lt;/p&gt;

&lt;p&gt;So, while using framework your framework is in charge of flow. &lt;/p&gt;

&lt;p&gt;In Library, your code is going to call the Library whereas, in Framework, your code is being called by Framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I know it's getting too confusing but stay with me. I'll end this with one last crucial point.&lt;/p&gt;

&lt;p&gt;Here is a simple thing to remember Framework is often more restrictive and generally have a more set of rules.&lt;/p&gt;

&lt;p&gt;Whereas, Library is not bounded by many rules.&lt;/p&gt;

&lt;p&gt;I hope you get a broader perspective of what's the difference between Library and Framework.&lt;/p&gt;

&lt;p&gt;If you find my work interesting and worth reading you can appreciate me on  &lt;a href="https://twitter.com/_RohitRana"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/rohit-rana17/"&gt; &lt;strong&gt;LinkedIn&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All kinds of Feedback are welcomed in comments. &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
  </channel>
</rss>
