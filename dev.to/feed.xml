<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Spaceduck For vscode - An intergalactic space theme</title>
      <author>Youssef Bouzekri</author>
      <pubDate>Sun, 11 Jul 2021 18:18:40 +0000</pubDate>
      <link>https://dev.to/yusefbouzekri/spaceduck-for-vscode-an-intergalactic-space-theme-5dc1</link>
      <guid>https://dev.to/yusefbouzekri/spaceduck-for-vscode-an-intergalactic-space-theme-5dc1</guid>
      <description>&lt;p&gt;I am very exited to share the vscode theme I have been working on for a while - &lt;em&gt;Spaceduck for VScode&lt;/em&gt; 🎉 ! if you want to feel like you are in space when starring at a computer then this is the theme for you ! if you are interested in using this theme, you can find it in the &lt;a href="https://marketplace.visualstudio.com/items?itemName=YoussefBouzekri.spaceduck"&gt;vscode marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3JyuPCnn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcnpyda8vggt6scj9t17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3JyuPCnn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcnpyda8vggt6scj9t17.png" alt="HTML screenshot"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ons92L2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyncyd1qc82t92dbk0o7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ons92L2K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyncyd1qc82t92dbk0o7.png" alt="image"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OXjPRLaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iiueb1riyg7wthwvo78s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OXjPRLaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iiueb1riyg7wthwvo78s.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-use-spaceduck-elsewhere-"&gt;
  &lt;/a&gt;
  Want to use spaceduck elsewhere ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/pineapplegiant/spaceduck"&gt;Vim&lt;/a&gt; (Maintained by Guillermo Rodriguez)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bigpick/spaceduck-atom-ui"&gt;Atom&lt;/a&gt; (Maintained by George Pickering)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vscode</category>
      <category>showdev</category>
      <category>code</category>
      <category>spaceduck</category>
    </item>
    <item>
      <title>Lessons When Scaling From 0 - 130 Devs w/ Kirby Frugia of MURAL</title>
      <author>Conor Bronsdon</author>
      <pubDate>Sun, 11 Jul 2021 18:18:26 +0000</pubDate>
      <link>https://dev.to/linearb/lessons-when-scaling-from-0-130-devs-w-kirby-frugia-of-mural-22e4</link>
      <guid>https://dev.to/linearb/lessons-when-scaling-from-0-130-devs-w-kirby-frugia-of-mural-22e4</guid>
      <description>&lt;p&gt;MURAL has gone through &lt;strong&gt;enormous&lt;/strong&gt; growth in the past two years and Kirby Frugia, VP of Engineering, joins the &lt;a href="https://devinterrupted.com/podcast/lessons-when-scaling-from-0-130-devs/"&gt;Dev Interrupted&lt;/a&gt; podcast to discuss the ins and outs of rapidly scaling engineering organizations. We go through the entire 0 to 100+ developer scale-up journey, dig into how he keeps the flow of information stable across teams, as well as the open source methods he uses to help onboard new employees.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/7tOPSSva5QsFrHqXTj34zC"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How an engineering organization changes after its first funding round&lt;/li&gt;
&lt;li&gt;What it means to go from 0 to 130 devs and how to lead this change successfully&lt;/li&gt;
&lt;li&gt;The open source methods Kirby uses at MURAL to onboard new team members&lt;/li&gt;
&lt;li&gt;Pitfalls to avoid when scaling up an engineering organization&lt;/li&gt;
&lt;li&gt;How to think about visibility and metrics as you scale&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gZgqxTQkrBM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>scaling</category>
      <category>leadership</category>
      <category>opensource</category>
      <category>growth</category>
    </item>
    <item>
      <title>6 practical ways to keep procrastination at bay</title>
      <author>Akshaya Venkatesh</author>
      <pubDate>Sun, 11 Jul 2021 18:15:58 +0000</pubDate>
      <link>https://dev.to/venkyakshaya/6-practical-ways-to-keep-procrastination-at-bay-284n</link>
      <guid>https://dev.to/venkyakshaya/6-practical-ways-to-keep-procrastination-at-bay-284n</guid>
      <description>&lt;p&gt;This blog talks about 6 simple yet effective way to minimise procrastination. &lt;/p&gt;

&lt;p&gt;Procrastinating simply put, means that you're putting off something important in order to do something fun. It does not apply just to work such as academics. You could be "procrastinating" anything -  from simple things like catching up with friends or cleaning your room  -  to much more serious things like applying for a new job or doing a project that will really help your career. &lt;/p&gt;

&lt;p&gt;I found myself doing this a lot and sought to understand the decisions that revolve around procrastination. This led me to find the &lt;strong&gt;video that changed my life&lt;/strong&gt; -  &lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=arj7oStGLkU&amp;amp;t=3s"&gt;Inside the mind of a master procrastinator by Tim Urban.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I strongly recommend this video to anyone who is reading this. It will help you understand why you do things or take decisions a certain way. After understanding what I was doing wrong I decided to make some changes to my approach to getting work done. I've listed them below hoping it will be of help.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-dont-have-a-plan-b"&gt;
  &lt;/a&gt;
  1. Don't have a "Plan B"
&lt;/h3&gt;

&lt;p&gt;Having a plan B is built-in when you're a procrastinator. Whenever you make plans you keep in mind, there is an easier and less effective alternative in case you fail or not do it at all. So lose your plan B. &lt;strong&gt;You will not procrastinate if there is no backup plan.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QLPw2N2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky812082eq2quse3z9jc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QLPw2N2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky812082eq2quse3z9jc.gif" alt="President Obama saying No plan B"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-dont-wait-for-the-perfect-moment"&gt;
  &lt;/a&gt;
  2. Don't wait for the perfect moment
&lt;/h3&gt;

&lt;p&gt;Have you done this? 👉 "Its 9:45 now, hmm... let me start at 10:00" (Why? simply because 10:00 is a round figure - THIS IS AN EXCUSE!!) This dangerous thought process has been my biggest enemy and every procrastinator is guilty of doing it on a daily basis. &lt;strong&gt;Waiting for the right moment is basically giving an excuse&lt;/strong&gt; for not starting something. Avoid this thought(not easy but surely possible). Start then and there.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AdMy3xyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jke6oq535dkvtm37mkzf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AdMy3xyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jke6oq535dkvtm37mkzf.gif" alt="Do not wait - Just Do gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-pixellate-the-big-picture-and-reward-yourself"&gt;
  &lt;/a&gt;
  3. Pixellate the big picture and reward yourself
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Split the big picture into tiny pieces.&lt;/strong&gt; When you are trying to get a big task done - you don't know where to start, you have a lot of questions or you simply feel nervous about the outcomes, then re-watching a Netflix show may seem like a better option. However, breaking it down and finishing of one piece at a time will get rid of the feeling of overwhelm.&lt;br&gt;
 &lt;strong&gt;Put down a checklist( - use an app or pen and paper to actually jot it down) the multiple small piece.&lt;/strong&gt; Every time you complete a tiny task, scored it off of the list. This will give you a sense of accomplishment that'll drive you to the finish.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LvLBkV6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t11jfv1t135goknz93kd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LvLBkV6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t11jfv1t135goknz93kd.gif" alt="Person checking off a todo list"&gt;&lt;/a&gt;&lt;br&gt;
It can get tedious and boring when you need to finish work that's gonna take multiple hours straight. In such cases, use the split-up technique and &lt;strong&gt;reward yourself each time you finish&lt;/strong&gt; a couple of subtasks or a target you've set for yourself.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AFReKz2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nvwuimxis6yakgppmfh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AFReKz2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8nvwuimxis6yakgppmfh.gif" alt="Treat yourself gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-tell-some-one-about-your-plans"&gt;
  &lt;/a&gt;
  4. Tell some one about your plans
&lt;/h3&gt;

&lt;p&gt;This technique may sound unconventional but it is my personal favourite because it works especially &lt;strong&gt;when there's something new you want to try&lt;/strong&gt; but just can't find the motivation to do or tend to forget about it. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tell someone about what you're gonna do, every time &lt;em&gt;they follow up&lt;/em&gt; you will be reminded and you will actually end up doing it.&lt;/li&gt;
&lt;li&gt;Talk to or read about &lt;em&gt;someone who has already done&lt;/em&gt; what you are about to try - their journey will inspire you to do it.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-hpB_O0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltpfhdwqb5uitdgljjl1.gif" alt="Person motivating kid and telling them you can do it"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-imagine-the-right-outcome"&gt;
  &lt;/a&gt;
  5. Imagine the right outcome
&lt;/h3&gt;

&lt;p&gt;Sometimes, the outcome of your work or task may make you nervous enough to stop you from trying it. This technique comes in handy for such cases. Take the time to imagine that you have done it, you have accomplished your goal. Tell the right outcome to yourself - "I wrote a blog on my new app and it was very well received." instead of "What if no one reads my blog?" because one mediocre blog is better than no blog at all.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TU0eEKpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcypl4zqzt1wahszux35.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TU0eEKpx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcypl4zqzt1wahszux35.gif" alt="Person celebrating a win"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-change-your-environment"&gt;
  &lt;/a&gt;
  6. Change your environment
&lt;/h3&gt;

&lt;p&gt;Sometimes simply &lt;strong&gt;moving to a different environment can make you more productive&lt;/strong&gt; and help you get work done. As someone who is used to sitting at a work desk, I find that sitting outside my house with fresh air helps me finish work faster.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IHLdjIc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7gwz2as57c3hy1bgz2p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IHLdjIc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7gwz2as57c3hy1bgz2p.gif" alt="Person working near a pool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This concludes my take on keeping procrastination at bay. Please do share your thoughts and any ideas that have helped you minimise procrastination (I would love to try them out) or leave feedback in the comments section. You can also find me on &lt;a href="https://twitter.com/venkyakshaya"&gt;Twitter&lt;/a&gt;. Thanks for reading!&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>productivity</category>
      <category>discuss</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Make a Discord bot in just 30 lines of code. </title>
      <author>Shreyas Pahune</author>
      <pubDate>Sun, 11 Jul 2021 18:02:51 +0000</pubDate>
      <link>https://dev.to/shreyazz/make-a-discord-bot-in-just-30-lines-of-code-44el</link>
      <guid>https://dev.to/shreyazz/make-a-discord-bot-in-just-30-lines-of-code-44el</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻, today we are going to make a discord bot 🤖 which will send gifs according to the user &lt;strong&gt;in just 30 lines of code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The way this bot will work is, if you write &lt;code&gt;.gif happy&lt;/code&gt; then the bot will send a random happy gif.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are we going to use to build this mini-project:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;NPM Packages:

&lt;ul&gt;
&lt;li&gt;Discord.js&lt;/li&gt;
&lt;li&gt;DOTENV&lt;/li&gt;
&lt;li&gt;node-fetch&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Okay so let's get started 🎉!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-"&gt;
  &lt;/a&gt;
  Steps :
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;We have to go to the &lt;a href="https://discord.com/developers/applications"&gt;discord developer portal&lt;/a&gt; and create a new application.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R9pYT03b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7zg9nzgm77funm73znr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R9pYT03b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7zg9nzgm77funm73znr.png" alt="portal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Then you have to create a new application ☝🏻. &lt;code&gt;(the blue button on top-right corner)&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;Give a name to your application.&lt;/li&gt;
&lt;li&gt;Then on the left hand side, click on bot👇🏻 .&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWydSSKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erzhg0zi8ykpiewhbd5g.PNG" alt="second"&gt;&lt;/li&gt;
&lt;li&gt;After clicking on bot, now click on &lt;code&gt;Add Bot&lt;/code&gt; on the right hand side, and after this step you will have a screen like this 👇🏻.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1N4yaK4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1ryr6lckw6gvtg7kqny.PNG" alt="third"&gt;&lt;/li&gt;
&lt;li&gt;Now the Token is something which you have to keep a secret and not reveal anywhere or to anyone.&lt;/li&gt;
&lt;li&gt;If you reveal it by mistake, no worries just regenerate it, but make sure you don't or else someone can take over your bot.&lt;/li&gt;
&lt;li&gt;Now we have to decide what permissions does our bot need, and after deciding this, just head to OAuth2 section on the right hand side of your screen.&lt;/li&gt;
&lt;li&gt;You will have a screen when many check boxes, and you have to click on the checkbox which says &lt;code&gt;bot&lt;/code&gt; 👇🏻.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mzJm8_D_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lijrp59d102ui3r06idc.PNG" alt="four"&gt;&lt;/li&gt;
&lt;li&gt;Then click on the permission you have to give to the bot.&lt;/li&gt;
&lt;li&gt;After that click on the link and copy it, after that paste it into a new tab and authorize it to add it to a new server.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we just have to code it!&lt;/p&gt;

&lt;p&gt;Before explaining the code, let me explain you the folder structure 👇🏻. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Lhde7OA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q82kix2zwih2msu2qp5w.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Lhde7OA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q82kix2zwih2msu2qp5w.PNG" alt="folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There is a folder called &lt;code&gt;src&lt;/code&gt; in which we have a main file called &lt;code&gt;bot.js&lt;/code&gt; in which we are going to code our bot.&lt;/li&gt;
&lt;li&gt;Okay so you can see that there are two files and a folder, named as &lt;code&gt;package-lock.json&lt;/code&gt;, &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;node_modules&lt;/code&gt; respectively, they are basically of node packages and their information.&lt;/li&gt;
&lt;li&gt;There is also a &lt;code&gt;.env&lt;/code&gt; file but we will discuss about it later in this blog.&lt;/li&gt;
&lt;li&gt;Okay so we have to use 3 packages to make a discord bot, they are as follows:

&lt;ol&gt;
&lt;li&gt;discord.js (&lt;code&gt;npm i discord.js&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;dotenv (&lt;code&gt;npm i dotenv&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;node-fetch (&lt;code&gt;npm i node-fetch&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Now using this image as my reference, I am going to explain the code.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z26av6Y9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t8atty7rujrytdy4wyv.png" alt="code"&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see ☝🏻, there are only 30 lines of code! How amazing it that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your own discord bot 🤖 in just 30 lines of code!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Okay so the first and the third line of code are the import  statements which can also be written as :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import discord from 'discord.js;'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The second line of code is basically us initializing the client/user, which in this case will be our bot and the users themselves .&lt;/p&gt;

&lt;p&gt;and the fourth line is importing the env package and configuring it, so basically &lt;code&gt;.env&lt;/code&gt; &lt;strong&gt;files stores all your secrets, like your discord bot's token or your API Key, these things will not be uploaded on GitHub using the git ignore file.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Okay so in JavaScript there is this thing called &lt;code&gt;addEventListner&lt;/code&gt; which helps us to react to certain events, like if a user clicks on something or double-tap on something a particular function should run.&lt;/p&gt;

&lt;p&gt;In the same way here in discord.js &lt;code&gt;addEventListner&lt;/code&gt; is more or less replaced by &lt;code&gt;.on&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;All of the &lt;code&gt;.on&lt;/code&gt; functions are called in regards to the &lt;code&gt;client&lt;/code&gt; so we have to write &lt;code&gt;client.on('event', callBackFunction)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On line number 6 you can see that I have written a function which is &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Zl4j19W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fi5gxnbad65u50jv6jw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Zl4j19W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fi5gxnbad65u50jv6jw.png" alt="ready"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This basically means that, whenever the user is ready and logged in the console should log &lt;code&gt;&amp;lt;Name of the Bot&amp;gt; is up and ready!&lt;/code&gt; and name of the bot is fetched by this inbuilt property known as &lt;code&gt;.user.tag&lt;/code&gt; , which is to be called in regards to the &lt;code&gt;client&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Now we have to make our bot login to the server. And  for that we have another inbuilt method/function called &lt;code&gt;.login&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;So we can write : &lt;code&gt;client.login(process.env.TOKEN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you might wonder what is this &lt;code&gt;process.env.TOKEN&lt;/code&gt;, this is the way we call variables from our &lt;code&gt;.env&lt;/code&gt; file.&lt;br&gt;
So let me show what is stored inside &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wRnL9jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o99m5yd2vqufzw18wcfq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wRnL9jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o99m5yd2vqufzw18wcfq.png" alt="env"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here in this file, we have to put our bot token inside a pair of single or double quotes and our tenor API key (you can generate it from &lt;a href="https://tenor.com/developer/keyregistration"&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;For example if you want to call the &lt;code&gt;tenor api key&lt;/code&gt; inside your &lt;code&gt;bot.js&lt;/code&gt; file, you just have to write &lt;code&gt;process.env.TENOR&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And you can make a &lt;code&gt;try-catch&lt;/code&gt; block around the &lt;code&gt;client.login()&lt;/code&gt; function, so if any error occurs, we can catch it and show it on the console. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4bRoMmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6623bj3fmz7ukbj1wxpy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4bRoMmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6623bj3fmz7ukbj1wxpy.png" alt="try-catch"&gt;&lt;/a&gt;&lt;br&gt;
So as of now, we have our boiler plate code ready with us, which is 👇🏻: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OHUP5mTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amssijt8pdyuvc2ttm3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OHUP5mTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/amssijt8pdyuvc2ttm3h.png" alt="boiler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's code the main functionality of the bot now.&lt;/p&gt;

&lt;p&gt;Now all the code discussed below will be in the reference to 👇🏻 this image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xyFQKmmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vof6263rdads9k8nj6n4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xyFQKmmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vof6263rdads9k8nj6n4.png" alt="main"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's understand the above code step-by-step:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating an add event listener to react when the user sends message:

&lt;ol&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrKk8CPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frfzpeoygaulx3ewj3xt.png" alt="addEve"&gt;&lt;/li&gt;
&lt;li&gt;Here the parameter &lt;code&gt;msg&lt;/code&gt; will contain the message which user has sent. &lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Let's add a prefix to our bot, so it will only react if we write &lt;code&gt;.gif&lt;/code&gt;.

&lt;ol&gt;
&lt;li&gt;Just to be a little safe, I am going to write the main functionality inside a &lt;code&gt;try-catch&lt;/code&gt; block.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2VH8n13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xybcvar7n5fyqxyl3ing.png" alt="try"&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;msg.content&lt;/code&gt; helps us to fetch the content inside the msg. In leman's term, it is like &lt;code&gt;.innerText&lt;/code&gt; in JavaScript. &lt;/li&gt;
&lt;li&gt;Here when the user will write &lt;code&gt;.gif&lt;/code&gt; the code inside the &lt;code&gt;if&lt;/code&gt; statement will be executed.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Now let's get user's queries.

&lt;ol&gt;
&lt;li&gt;Now if a user writes &lt;code&gt;.gif batman&lt;/code&gt; then this will be considered as a string and a problem arises here, which is how do we separate the bot command and the user's query.&lt;/li&gt;
&lt;li&gt;We do that by an inbuilt function called &lt;code&gt;.split()&lt;/code&gt;, which will help us to separate the whole string into two different values stored in an array, for example: if I write &lt;code&gt;.gif batman&lt;/code&gt; then &lt;code&gt;.split()&lt;/code&gt;  will make an array :  &lt;code&gt;['.gif', 'batman']&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Let's see it's code.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWl6yqj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hgyddtr6tzi94rcecmy.png" alt="split"&gt;&lt;/li&gt;
&lt;li&gt;We are going to compare the &lt;code&gt;first index of query&lt;/code&gt; which will be &lt;code&gt;.gif&lt;/code&gt;  to the string .gif.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Let's discuss about the API and Fetching it.

&lt;ol&gt;
&lt;li&gt;I am using node-fetch to fetch the API.&lt;/li&gt;
&lt;li&gt;The base of the API is

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;https://g.tenor.com/v1/search?q=USERQUERY&amp;amp;key=API-KEY&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;And in order to take query from the user and give the key as your API Key we have to make this URL dynamic.&lt;/li&gt;
&lt;li&gt;We can do that by using template literals.

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;https://g.tenor.com/v1/search?q=${query[1]}&amp;amp;key=${process.env.TENOR}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And now the  code looks like this.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axHEXkqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl5eu92onady5c3o02my.png" alt="url"&gt;&lt;/li&gt;
&lt;li&gt;And the query has to be the second value (First Index) in the array.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Let's fetch the API now.

&lt;ol&gt;
&lt;li&gt;We just have to put &lt;code&gt;async&lt;/code&gt; in front of the callback function as you can see in the above image on line number 10.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;async&lt;/code&gt; will make your function, asynchronous and then we will use &lt;code&gt;await&lt;/code&gt; to wait for the response from the API.&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4k1OljK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acmflsactcaxk46j97fb.png" alt="without"&gt;&lt;/li&gt;
&lt;li&gt;Now here we will have a problem, which is we will only receive one GIF every time.&lt;/li&gt;
&lt;li&gt;Now the API will return 20 GIFs and we have to pick a random one (on line 17).&lt;/li&gt;
&lt;li&gt;So to do this, we will make a random variable which will choose one GIF.&lt;/li&gt;
&lt;li&gt;Now the final code looks like 👇🏻
&lt;/li&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dv8PmckI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23aobyz6j106syjmja4i.png" alt="final"&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Let's run this.

&lt;ol&gt;
&lt;li&gt;Just open the terminal, change the directory to the home directory and inside &lt;code&gt;src&lt;/code&gt; folder, then write  &lt;code&gt;node bot.js&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Thank you for reading the whole blog 🎉!! If you liked it do share it with your developer friends and feel free to comment and give suggestions.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>npm</category>
      <category>discord</category>
    </item>
    <item>
      <title>What Should Dev Teams Measure First? w/ Luca Rossi</title>
      <author>Conor Bronsdon</author>
      <pubDate>Sun, 11 Jul 2021 17:46:15 +0000</pubDate>
      <link>https://dev.to/linearb/what-should-dev-teams-measure-first-w-luca-rossi-4che</link>
      <guid>https://dev.to/linearb/what-should-dev-teams-measure-first-w-luca-rossi-4che</guid>
      <description>&lt;p&gt;Why do we measure dev team metrics?&lt;/p&gt;

&lt;p&gt;It's even more important to understand this question because most engineers don't like to be measured. So why measure at all?&lt;/p&gt;

&lt;p&gt;Luca Rossi, Head of Engineering at Translated, helps answer these questions on the &lt;a href="https://devinterrupted.com/podcast/what-should-dev-teams-measure-first/"&gt;Dev Interrupted podcast&lt;/a&gt;. We also discuss which metrics are worthy and how managers should interpret those metrics.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3Rz970JfT6lYdAVNRZvRMz"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;What should you measure for?&lt;/li&gt;
&lt;li&gt;Measuring as a tool for good and bad&lt;/li&gt;
&lt;li&gt;What should not be measured&lt;/li&gt;
&lt;li&gt;Can you make progress if you aren't measuring?&lt;/li&gt;
&lt;li&gt;How measuring demonstrates what you care about&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>management</category>
      <category>culture</category>
      <category>devteam</category>
    </item>
    <item>
      <title>Guide For Your First Open Source Contribution.💻</title>
      <author>Naman Budhiraja</author>
      <pubDate>Sun, 11 Jul 2021 17:02:53 +0000</pubDate>
      <link>https://dev.to/naman56/guide-for-your-first-open-source-contribution-2136</link>
      <guid>https://dev.to/naman56/guide-for-your-first-open-source-contribution-2136</guid>
      <description>&lt;p&gt;Hi all👋. Today, I  will be talking about an interesting and one of my favourite topics called "Open Source"😃.It is a buzzword that has been roaming around developers nowadays. By following the trend, I am writing this article to help you out so that you can also contribute to open source projects easily.🤘&lt;br&gt;
So, without wasting any time, lets' get started&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HAjQ3UHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/l0IyjiXOXTX6Yemsg/giphy.gif%3Fcid%3Decf05e472m87qksbr674emv61tvo6t8ad55591f30a05qiep%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HAjQ3UHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/l0IyjiXOXTX6Yemsg/giphy.gif%3Fcid%3Decf05e472m87qksbr674emv61tvo6t8ad55591f30a05qiep%26rid%3Dgiphy.gif%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-open-source"&gt;
  &lt;/a&gt;
  What is Open Source!!🤔
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4xBHtob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/mFNCEWjufpRJa8XLCj/200w.webp%3Fcid%3Decf05e47zu7xsa5i21ve97ce7p2t60nx1rkcvq5pnodoebmu%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4xBHtob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/mFNCEWjufpRJa8XLCj/200w.webp%3Fcid%3Decf05e47zu7xsa5i21ve97ce7p2t60nx1rkcvq5pnodoebmu%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly, Lets' understand the meaning of Open Source. So, basically open source is a term that originally referred to open source software (OSS). Open source software is code that is designed to be publicly accessible—anyone can see, modify, and distribute the code as they see fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-contribute-to-open-source"&gt;
  &lt;/a&gt;
  Why you should contribute to Open Source!!🧑‍💻
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BG7bGwbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/dILrAu24mU729pxPYN/200.webp%3Fcid%3Decf05e47m7i0sgsjnict6ehsg1vo3hlym6prqsbgw05hs3wf%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BG7bGwbO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/dILrAu24mU729pxPYN/200.webp%3Fcid%3Decf05e47m7i0sgsjnict6ehsg1vo3hlym6prqsbgw05hs3wf%26rid%3D200.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open source is free and open to all enthusiastic folks who want to contribute to the community while learning something. Open source helps many developers to boost up their tech career. Apart from this, you will get the chance to engage with different like-minded people and share your knowledge. You will get a lot of opportunities to learn new technologies. Nowadays, open source section in the resume catches the eyes of recruiters more easily. So, open source will help you in many ways.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites🗒️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BrRFnqit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/MEySLGjxQak0w/200w.webp%3Fcid%3Decf05e47ekrgpgnsyk0zkqrir0cxht8fpxa0m91ltszl82da%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BrRFnqit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/MEySLGjxQak0w/200w.webp%3Fcid%3Decf05e47ekrgpgnsyk0zkqrir0cxht8fpxa0m91ltszl82da%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my opinion, there are two main prerequisites of open source contribution:-&lt;br&gt;
1) Git and GitHub: You should have atleast a basic knowledge of Git and GitHub before starting to contribute to open source projects.This will definetly help you in the long run.You can find the some amazing tutorials for the same for free.Here's youtube link =&amp;gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hindi: &lt;a href="https://www.youtube.com/playlist?list=PLu0W_9lII9agwhy658ZPA0MTStKUJTWPi"&gt;Complete Git Tutorials For Beginners In Hindi&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;English: &lt;a href="https://www.youtube.com/watch?v=RGOj5yH7evk"&gt;Git and GitHub for Beginners - Crash Course&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2) Your Will: Nothing is possible without your will. So, without wasting any time you should start your journey to open source and stick to it. Learning is not easy but you have to make it by staying consistent and doing hard work(Enough motivation for today😅)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-your-first-open-source-project"&gt;
  &lt;/a&gt;
  Finding Your First Open Source Project😴
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MbUIFawW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/U3IgAwhwINa57mRrL5/200w.webp%3Fcid%3Decf05e471p5ae6dlcwp60auckg2p5t9mmtjtdh40hro215kc%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbUIFawW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/U3IgAwhwINa57mRrL5/200w.webp%3Fcid%3Decf05e471p5ae6dlcwp60auckg2p5t9mmtjtdh40hro215kc%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finding your first open source project is a daunting process in itself. It is because there are so many projects released on GitHub and so many tutorials for finding projects to contribute. But what you need to do is just press the search button on GitHub and search for that topic in which you are comfortable and want to contribute. But the main hack that I want to share with you is to filter the projects based on the least number of stars.&lt;br&gt;
Why? Because greater the number of star, bigger will be the project and complicated for the beginners. The point here is to start with the small projects and contribute. After some time, when you get the taste of open source environment, you can jump into bigger projects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#points-to-ponder"&gt;
  &lt;/a&gt;
  Points to ponder:
&lt;/h3&gt;

&lt;p&gt;🌟 Open Source is not a competition, it's collaboration.&lt;br&gt;
🌟 No working experience is required before contributing to open source.&lt;br&gt;
🌟 Don't be afraid if you don't have hard core coding skills. Remember, editing a readme file is also a contribution to the project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#useful-tips-amp-tricks"&gt;
  &lt;/a&gt;
  Useful Tips &amp;amp; Tricks✍️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uvbDsGoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/mFeNGR1W1O2JYqjsMO/100.webp%3Fcid%3Decf05e47f0v7f6pu0o087hx59yfqvejypv01o6lsx0ltwoxl%26rid%3D100.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uvbDsGoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/mFeNGR1W1O2JYqjsMO/100.webp%3Fcid%3Decf05e47f0v7f6pu0o087hx59yfqvejypv01o6lsx0ltwoxl%26rid%3D100.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Always see the activeness of the project before starting the 
contribution.&lt;/li&gt;
&lt;li&gt;Read the project's guidelines carefully before making a pr(Pull Request).&lt;/li&gt;
&lt;li&gt;Read the readme file to get an overview of the project before starting to contribute to a particular project.&lt;/li&gt;
&lt;li&gt;Join the community involved around the particular project or a topic you are interested in.&lt;/li&gt;
&lt;li&gt;Don't hesitate while asking any question to anyone involved in a particular project. (this is the power of open source. People are always here to help you out).&lt;/li&gt;
&lt;li&gt;Find an open source community to meet some like minded people and seek help from the experienced ones.&lt;/li&gt;
&lt;li&gt;Participate in Open Source Programs like &lt;a href="https://summerofcode.withgoogle.com/"&gt;GSOC(Google Summer Of Code)&lt;/a&gt; ,&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Digital Ocean Hacktoberfest&lt;/a&gt;, &lt;a href="https://fellowship.mlh.io/"&gt;MLH Fellowship&lt;/a&gt; , &lt;a href="https://gssoc.girlscript.tech/#"&gt;GSSOC&lt;/a&gt;(I was part of it) and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro✨
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2F8E7sKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/14e24HVY0wdoJaNDnF/200w.webp%3Fcid%3Decf05e47cm7mtcr6egny37ufzgosd71if728lg0czlhb9u5m%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2F8E7sKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/14e24HVY0wdoJaNDnF/200w.webp%3Fcid%3Decf05e47cm7mtcr6egny37ufzgosd71if728lg0czlhb9u5m%26rid%3D200w.webp%26ct%3Dg" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This blog post concludes that you don't need any work experience or any hard skills. Open source contribution requires your collaboration behaviour towards the project. So, turn on your laptop and find your first open source project to contribute.😉&lt;/p&gt;

&lt;p&gt;So, That's it from my side🙏🙌. I hope you like this blog post and I didn't waste your time. If so, then please give a ❤ and share to your peers who want to jump into open source.🤘&lt;br&gt;
And if I had missed something, kindly comment down below💻.&lt;br&gt;
See you untill next time👋.Connect With Me On &lt;a href="https://www.linkedin.com/in/naman-budhiraja-1906a418b/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/BudhirajaNaman3"&gt;Twitter&lt;/a&gt;. &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "The power of open source is the power of the people.The 
  people rule."

                          Thank You
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>opensource</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>15 HTML5 best practices for beginners to master.</title>
      <author>menomanabdulla</author>
      <pubDate>Sun, 11 Jul 2021 16:42:34 +0000</pubDate>
      <link>https://dev.to/menomanabdulla/15-html5-best-practices-for-beginners-to-master-47fb</link>
      <guid>https://dev.to/menomanabdulla/15-html5-best-practices-for-beginners-to-master-47fb</guid>
      <description>&lt;p&gt;Whether you are a beginner or an expert in Hyper Text Markup Language (HTML) it is important to follow some best practices in order to keep your HTML documents consistent and organized. &lt;/p&gt;

&lt;p&gt;HTML5 has been around for many years now and has been stable and supported at least partially supported by most major browsers since 2014. Here I present list of best coding practices regarding HTML5 markup. Let’s get started: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#file-structure"&gt;
  &lt;/a&gt;
  File Structure
&lt;/h3&gt;

&lt;p&gt;Be concerned to the project file structure from day one. It’s extremely important for mid to large scale application for batter maintenance.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#declare-correct-doctype"&gt;
  &lt;/a&gt;
  Declare correct Doctype
&lt;/h3&gt;

&lt;p&gt;If correct Doctype  is not declared new HTML5-specific tags will not interpreted by the browser.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MikUpwuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkknbrm0ri9ehirr6bg7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MikUpwuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkknbrm0ri9ehirr6bg7.png" alt="Declare correct Doctype"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#write-w3c-valid-markup"&gt;
  &lt;/a&gt;
  Write w3c valid markup
&lt;/h3&gt;

&lt;p&gt;Use validator like w3c validator to check your markup and write error free more structured code. Validator  will suggest you some best practice of  HTML5 coding standard. I strongly recommend you to valid your code by w3c validator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#html5-semantic-elements"&gt;
  &lt;/a&gt;
  HTML5 semantic elements
&lt;/h3&gt;

&lt;p&gt;Make sure correct use of the HTML5 semantic elements like: ,,,.  It’s will help you to write more structured piece of code.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIvKTHNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt2pzl01rto12ppy2zge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIvKTHNz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt2pzl01rto12ppy2zge.png" alt="HTML5 semantic elements"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#meaningful-img-alt-attribute"&gt;
  &lt;/a&gt;
  Meaningful img alt attribute
&lt;/h3&gt;

&lt;p&gt;Always try to use “alt” attribute with meaningful text in img tag. It’s also best practice for SEO purpose.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rohnbQws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj1dihftv0qbmpm1n28i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rohnbQws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj1dihftv0qbmpm1n28i.png" alt="Meaningful img alt attribute"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#kebabcase-class-naming"&gt;
  &lt;/a&gt;
  Kebab-case class naming
&lt;/h3&gt;

&lt;p&gt;Use “kebab-case” while class naming. If you don’t use any structured naming convention like,  BEM convention.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FlYxwAWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjde7gjd4a28bnjep2w0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FlYxwAWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjde7gjd4a28bnjep2w0.png" alt="Kebab-case class naming"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#relevant-selector-naming"&gt;
  &lt;/a&gt;
  Relevant selector naming
&lt;/h3&gt;

&lt;p&gt;Tried to use meaningful class naming relevant to your block of –code .&lt;br&gt;
Tricks: Tried to use “.noun-adjective” format.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QC3XThI7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgowlujz2oe7w805fp3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QC3XThI7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgowlujz2oe7w805fp3c.png" alt="Relevant selector naming"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#type-attribute-with-link-and-script"&gt;
  &lt;/a&gt;
  Type attribute with link and script
&lt;/h3&gt;

&lt;p&gt;Don’t need to use “type” attribute for external styleSheet and script linking in HTML5 structure.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-11y1de--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kur7637iz98osq9c6phy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-11y1de--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kur7637iz98osq9c6phy.png" alt="Type attribute with link and script"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#atomic-class"&gt;
  &lt;/a&gt;
  Atomic Class
&lt;/h3&gt;

&lt;p&gt;Use specific class or atomic class when needed, try to use short meaningful class name.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6NV3c7FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/824axbvkmd8celpvdy8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6NV3c7FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/824axbvkmd8celpvdy8u.png" alt="Atomic Class"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#variant-class-in-parent-element"&gt;
  &lt;/a&gt;
  Variant class  in parent element
&lt;/h3&gt;

&lt;p&gt;Tried to added class in parent element if need give another style to the same block or need same block different style.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eGKnKlci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba8ncgllour69jl8e16h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eGKnKlci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba8ncgllour69jl8e16h.png" alt="Variant class  in parent element"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#complex-wrapping"&gt;
  &lt;/a&gt;
  Complex wrapping
&lt;/h3&gt;

&lt;p&gt;For better performance please tried to avoid unnecessary wrapping. It will create unnecessary node in your HTML tree and reduce performance too.&lt;br&gt;
Bad Practice&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VOZiChke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z27yk65402ey9xb983zs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VOZiChke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z27yk65402ey9xb983zs.png" alt="Complex wrapping bad practice"&gt;&lt;/a&gt;&lt;br&gt;
Good Practice&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2TUsbFt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8gqrfun6ht7nxusf10b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2TUsbFt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p8gqrfun6ht7nxusf10b.png" alt="Complex wrapping good Practice"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#closing-tag"&gt;
  &lt;/a&gt;
  Closing tag
&lt;/h3&gt;

&lt;p&gt;It is best practice to always concern with closing starting tag even if it is self-closing tag.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRTmJ-hB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybo8ge44alvph0nm5d57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRTmJ-hB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybo8ge44alvph0nm5d57.png" alt="Closing tag"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#injecting-external-stylesheet"&gt;
  &lt;/a&gt;
  Injecting external stylesheet
&lt;/h3&gt;

&lt;p&gt;External stylesheet always injects in  tag. Because The HTML5 specification stated a  element must have a “rel” attribute and if the “rel” attribute us used, the element is restricted to the head element.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F-1v2zTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjn26vh6h03pemsc6wb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-1v2zTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjn26vh6h03pemsc6wb2.png" alt="Injecting external styleSheet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#injecting-external-script"&gt;
  &lt;/a&gt;
  Injecting external script
&lt;/h3&gt;

&lt;p&gt;External script always injects at end of the body tag. &lt;br&gt;
As we know that HTML is loaded and execute line by line. So, when the browser encounters a script tag, it loads and executes the JavaScript code on the spot. This may low down the page rendering also JavaScript is often user to manipulate DOM and add new functionality to the webpage if script tag not added at end of the body tag, DOM may not be ready by that time this leading to unknown behavior. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i69FzdGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8a5wyckoh66kycbl1dv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i69FzdGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8a5wyckoh66kycbl1dv.png" alt="HTML5 Injecting external script"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#code-comments"&gt;
  &lt;/a&gt;
  Code Comments
&lt;/h3&gt;

&lt;p&gt;It’s best practice to write human-readable code. Tried to comment your block of code. It will help you or any other developer to refactor the piece of code blocks.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3atDfBhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa2940ff5gcsiyzmsmk9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3atDfBhi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa2940ff5gcsiyzmsmk9.png" alt="HTML5 Code Comments"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#last-words"&gt;
  &lt;/a&gt;
  Last Words
&lt;/h3&gt;

&lt;p&gt;I hope you enjoy this article html5 coding guidelines and front end web development best practices. If you appreciate it or find any errors let me know in comments. Thanks for this journey  &amp;amp; Happy Coding.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A 2021 Comparison of the Best Frontend JavaScript Frameworks</title>
      <author>Allyedge</author>
      <pubDate>Sun, 11 Jul 2021 16:23:38 +0000</pubDate>
      <link>https://dev.to/allyedge/a-2021-comparison-of-the-best-frontend-javascript-frameworks-2n0h</link>
      <guid>https://dev.to/allyedge/a-2021-comparison-of-the-best-frontend-javascript-frameworks-2n0h</guid>
      <description>&lt;p&gt;Which JavaScript framework is the best for you?&lt;/p&gt;

&lt;p&gt;In this story we will review React, Angular and Vue, which are the most popular frontend JavaScript frameworks out there.&lt;/p&gt;

&lt;p&gt;I will also list all the pros, cons and important features of every framework, so you can decide what JavaScript framework you want to learn or use easier.&lt;/p&gt;

&lt;p&gt;Read it now!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#httpsjavascriptplainenglishiobestfrontendjavascriptframework96ecef9791fa"&gt;
  &lt;/a&gt;
  &lt;a href="https://javascript.plainenglish.io/best-frontend-javascript-framework-96ecef9791fa"&gt;https://javascript.plainenglish.io/best-frontend-javascript-framework-96ecef9791fa&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>promotion</category>
    </item>
    <item>
      <title>First month in DevOps</title>
      <author>monotiller</author>
      <pubDate>Sun, 11 Jul 2021 16:12:45 +0000</pubDate>
      <link>https://dev.to/monotiller/first-month-in-devops-ha3</link>
      <guid>https://dev.to/monotiller/first-month-in-devops-ha3</guid>
      <description>&lt;p&gt;So, I've just completed my first month of DevOps training at Sparta and I feel like it's time to reflect. I'm doing this more for personal reasons than any other but hey, if you get something out of these then that's great too!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structure"&gt;
  &lt;/a&gt;
  Structure
&lt;/h2&gt;

&lt;p&gt;Because months are messy, I am planning on doing one of these every four weeks, the course runs for 12 weeks and simply put 

&lt;span class="katex-element"&gt;
  &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;12÷4=312\div4=3&lt;/span&gt;&lt;span class="katex-html"&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;12&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mbin"&gt;÷&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mspace"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="base"&gt;&lt;span class="strut"&gt;&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
 and that's good for me!&lt;/p&gt;

&lt;p&gt;Each post will be broken down week-by-week but this month will be the longest, simply because I'm going to talk a bit about my background too!&lt;/p&gt;

&lt;p&gt;Let's get started shall we?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#me-myself-but-not-i"&gt;
  &lt;/a&gt;
  Me, myself, but not I
&lt;/h2&gt;

&lt;p&gt;I am an Electronic and Computer Systems Engineering (ECS) graduate from Loughborough University, this means that my background is more in hardware rather than software engineering. Whilst there I spent the majority of my time working in C, C++, VHDL, ARM Assembly and MATLAB. This means that I have a lot of experience working with the &lt;a href="https://www.arm.com/products/silicon-ip-cpu/cortex-m/cortex-m3"&gt;ARM Cortex-M3&lt;/a&gt;, &lt;a href="https://www.mbed.com/"&gt;ARM mbed&lt;/a&gt; and &lt;a href="http://zedboard.org"&gt;ZedBoard&lt;/a&gt; platforms&lt;/p&gt;

&lt;p&gt;However, in my final year I had to complete a project and of all the briefs available the one that interested me the most was "Augmented Reality App". From this, my supervisor and I planned out a project that would be in an area of interest to us both and we settled on a social network.&lt;/p&gt;

&lt;p&gt;This gave me the first insight into the world of DevOps, and although it was only a short intro as the majority of my time was spent trying to get the Augmented Reality part of the app working, the use of &lt;a href="https://developer.apple.com/icloud/cloudkit/"&gt;CloudKit&lt;/a&gt; (because it was at no extra cost and integrated directly in to &lt;a href="https://developer.apple.com/xcode/"&gt;Xcode&lt;/a&gt; already) got me thinking about how best to use servers in my workflows.&lt;/p&gt;

&lt;p&gt;Anyway, after a year of trying to find a job in ECS and getting incredibly close multiple times but being blocked by a certain pandemic, some friends and classmates from university had told me that they had been having the same experience and that they had been discussing making the move to DevOps since some of the skills were transferrable and it was a market that needed a lot of new talent considering the aforementioned pandemic had highlighted how unprepared a lot of pre-existing infrastructure was for the increased demand put in place by a lot of everyday life moving online.&lt;/p&gt;

&lt;p&gt;Then over the following few months I started doing research whilst working at my other job that I had picked up to earn some money on the side whilst I was looking for a job in my field and here I am!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-take-a-breather"&gt;
  &lt;/a&gt;
  Let's take a breather
&lt;/h2&gt;

&lt;p&gt;Ok, that was a lot wasn't it? Well, before we move on, check this out:&lt;br&gt;
&lt;a href="https://www.instagram.com/p/CRJaDzIMfoD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3zsaFm53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i1p6t9hstpiy8zn63q5a.JPEG" alt="Two tortoises, one sitting on top of the other"&gt;&lt;/a&gt;&lt;br&gt;
Ok! Onwards we go:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#week-1-business-week"&gt;
  &lt;/a&gt;
  Week 1 - Business Week
&lt;/h2&gt;

&lt;p&gt;The first week focussed a lot on developing consultancy skills, SCRUM and Agile were introduced here and I have to say that I was shocked to learn that I already knew of them. Not on a first name basis but I had accidentally set myself up a similar system for dealing with coursework. Experience with Kanban had also helped with the introduction to SCRUM.&lt;/p&gt;

&lt;p&gt;Personally speaking, SCRUM is a better fit for me since the method of breaking down a big task in to user stories and sprints has helped tremendously in helping me better understand what project requirements mean. And Gherkins 🥒 he he.&lt;/p&gt;

&lt;p&gt;Elevator pitches, profile creation and interview techniques were also covered, this will be useful in selling myself to potential clients or perhaps even later in life if I decide to find a new job. Even so, doing this has really helped to boost my confidence with public speaking since requiring me to do it in front of people I know and strangers alike has been refreshing!&lt;/p&gt;

&lt;p&gt;But that's enough of that, let's scoot on to week 2!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#week-2-python"&gt;
  &lt;/a&gt;
  Week 2 - Python
&lt;/h2&gt;

&lt;p&gt;Week 2 has gotten me started in the world of &lt;a href="https://python.org"&gt;Python&lt;/a&gt;. I had had a little bit of experience with Python before and had completed a DevOps course that Sparta had provided me with over on &lt;a href="https://teamtreehouse.com"&gt;Treehouse&lt;/a&gt;. But I can confidently say that actually, Python ain't that bad. I've had a great time with it all things considered.&lt;/p&gt;

&lt;p&gt;Obviously, having experience with C++ and Object Oriented Programming (OOP) helped (a lot) but a new language can be scary for many and but if there's one that's really good at teaching you the basics whilst still being a very powerful language, Python has to be it.&lt;/p&gt;

&lt;p&gt;You cannot imagine the glee I felt when &lt;code&gt;for x in y&lt;/code&gt; was introduced. Seriously, the amount of times I'd wanted to cycle through an array (or lists as Python groovily calls them) only to have to create a function that counts the amount of entries in said array and then another function to go through that array. Well, no more! Python does them both in one go.&lt;/p&gt;

&lt;p&gt;I love how easy Python has been to pick up in comparison to some of the other languages I've learned, but it's not all roses. One of my colleagues described the way OOP was handled in Python as "a bit of an afterthought." The instructor was inclined to agree with them despite stating that it had been designed with OOP in mind. I wouldn't necessarily go that far but I would have to say that it's not really that much more improved over how C++ does it and I think (from what I've seen) that Java probably has the better implementation.&lt;/p&gt;

&lt;p&gt;For instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Is a regular ol' function&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__function&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Is a private function&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Is used to initialise a class.&lt;/p&gt;

&lt;p&gt;I think it's a little messy, but luckily most IDEs are aware of this and give you the heads up.&lt;/p&gt;

&lt;p&gt;I also think that the indentation system is very weird, and I think that if you're going to require a &lt;code&gt;:&lt;/code&gt; at the end of your loop initialisation, you don't need to worry about indents so much. Do one or the other, but not both, if you get my drift.&lt;/p&gt;

&lt;p&gt;So what I mean is, in some other language you can do this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;
&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
&lt;span class="c1"&gt;///No problem👌👌👌&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;VS in Python&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt;
&lt;span class="c1"&gt;# Nope, won't work
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It just feels weird. But since I have always indented my code anyway, it hasn't been a problem for me.&lt;/p&gt;

&lt;p&gt;This was the week we also started learning Git. I had some experience with it already after having lost some coursework back at university due to a crash, and vowing never again to let that happen! But it was clear that to those people being new to Git, it is a little user unfriendly, but more on that when we get to the first project!&lt;/p&gt;

&lt;p&gt;At this point I also created a directory which grouped together all the lessons and tasks that had been completed so far!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/monotiller"&gt;
        monotiller
      &lt;/a&gt; / &lt;a href="https://github.com/monotiller/engineering89_directory"&gt;
        engineering89_directory
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Quick access to all the lessons and tasks done as part of the DevOps course
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Engineering 89 directory&lt;/h1&gt;
&lt;p&gt;Hi! In order to make finding my repo's easier, I've created this directory, making it the place to go to find my lesson files as well as my completed tasks!&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h2&gt;
Lessons&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_basics"&gt;Python Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_markdown_documentation"&gt;Markdown Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_git_github"&gt;Git &amp;amp; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_collections"&gt;Python Collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_control_flow"&gt;Python Control Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_oop"&gt;Python Object Oriented Programming (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_tdd"&gt;Python Test Driven Development (TDD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_building_packages"&gt;Python building packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_postcode_api"&gt;Python postcodes API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_exception_handling_working_with_files"&gt;Python exception handling and working with files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_exam_practice_1"&gt;Python first exam practice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_concatenation_interpolation_task"&gt;Python Concatenation and Interpolation task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_control_flow_task"&gt;Python Control Flow Task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_birth_year_task"&gt;Python Birth Year Task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_loops_task"&gt;Python Loops Task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/monotiller/engineering89_python_fizzbuzz_task"&gt;Python FizzBuzz&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/monotiller/engineering89_python_fizzbuzz_task/tree/oop"&gt;Python FizzBuzz Object Oriented Programming (OOP)&lt;/a&gt; (Work in progress)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_oop_tasks"&gt;Python Object Oriented Programming (OOP) Tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_tdd_task"&gt;Python Test Driven Development (TDD) Tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/monotiller/engineering89_python_exception_handling_working_with_files_task"&gt;Python exception handling and working with files task&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/monotiller/engineering89_python_exchange_rate_task"&gt;Python exchange rate API task&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/engineering89-plane-project-group-3/project"&gt;Plane project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/monotiller/engineering89_directory"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#week-3-python"&gt;
  &lt;/a&gt;
  Week 3 - Python
&lt;/h2&gt;

&lt;p&gt;This week was more on extending the use of Python with packages, APIs and Test Driven Development (TDD).&lt;/p&gt;

&lt;p&gt;Packages I love, I think they're a great idea and even in small projects it really has helped my brain digest what's going on in a program a little better, but of course, I'd like to wait to see how they work in large projects before I get too excited over them!&lt;/p&gt;

&lt;p&gt;APIs, well, it goes without saying. The ability to call information on demand is really cool and useful, I wish that I had the opportunity to use them more widely but low level programming never really opened them up to me in the same way this DevOps course has.&lt;/p&gt;

&lt;p&gt;TDD has kind of changed the way I look at programming and I think it's something I wish I'd known earlier. So at it's basic core concept, you're working backwards, you have your outcome and you then need to create the code to get said outcome. I feel that this will have the bi-product of leading me to writing cleaner code since as long as the test passes, how you get there is (mostly) irrelevent.&lt;/p&gt;

&lt;p&gt;So an example would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# if 3 + 2 = 5 is True test would pass
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then all we need to write is:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;and the test should pass!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#week-4-model-view-controller-and-plane-project"&gt;
  &lt;/a&gt;
  Week 4 - Model View Controller and Plane Project
&lt;/h2&gt;

&lt;p&gt;Week four had us setting out to do our first project: Create a flight management program. Here's the repository where we stored our code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/engineering89-plane-project-group-3"&gt;
        engineering89-plane-project-group-3
      &lt;/a&gt; / &lt;a href="https://github.com/engineering89-plane-project-group-3/project"&gt;
        project
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The main project repository!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Plane Project&lt;/h1&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/engineering89-plane-project-group-3/project"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zSIy81WT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdzkjjig47g528ux6rv3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zSIy81WT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdzkjjig47g528ux6rv3.png" alt="Bri'ish airways homescreen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is where we brought it all together. Flask was selected as our go between our user facing side and the python code.&lt;/p&gt;

&lt;p&gt;I myself worked primarily on the user accounts side of things, including registration and encryption of sensitive information as well as collaborating with another member of the team (who goes by &lt;a href="https://github.com/Ahhhh-man"&gt;Ahhhh-man&lt;/a&gt; on GitHub) on the flight trip database and the CSS layout of the site.&lt;/p&gt;

&lt;p&gt;The project was definitely a success with our instructor being impressed with the results and team mate &lt;a href="https://github.com/SBenkhelfaSparta"&gt;SBenkhelfaSparta&lt;/a&gt; getting a shout out in our weekly company stand-up for their incredible work with flask.&lt;/p&gt;

&lt;p&gt;That's not to say that it was entirely plain sailing, not just our group but every group did have problems with Git and it kind of dawned on me just how unfriendly Git is to new-commers. Every single team had problems with merge conflicts, branches not being able to be pulled, etc.&lt;/p&gt;

&lt;p&gt;We experienced it when two team members had exchanged files that each other depended on through Discord, they simply replaced the files in their own version of the branch which caused Git to treat them like new files, losing their associations to already existing files. Now this could've been caught had it not been for another innocent decision, one of the team members had decided they wanted to sync their PyCharm environment through Git so it was the same on both their machines, this lead to the creation of 100's of additional files that appeared during the pull request (PR) causing GitHub's PR page to be unusable.&lt;/p&gt;

&lt;p&gt;This unfortunately led to us having up to 3 different versions of each file in different folders and it took nearly an hour to decide which versions of each file were the ones we actually wanted to keep. Now, is Git to blame? Maybe. Are we to blame? Maybe. However, I don't think that this is a mistake that is uncommon and it is very much a flaw of Git to allow such a thing to happen. We absolutely should've as a team cracked down on branch merging, but it's a long winded process and sharing the files between people is soooo much easier.&lt;/p&gt;

&lt;p&gt;But this has definitely been a learning experience and next time we do a group project I am going to make sure that we all double down on securing our file names, &lt;code&gt;.gitignore&lt;/code&gt; and merging techniques right at the start to hopefully prevent us from making the same mistake again. Git is a fantastic tool, but it can be a cruel one for sure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;The first month has been great, I feel like Python and DevOps is a good fit for me. There's still a long way to go, but I'm positive that this is the right path for me to be on!&lt;/p&gt;

&lt;p&gt;Plus it's just dawned on me, I don't actually use Windows in my workflow at all anymore. I don't necessarily have a problem with using Windows over any other operating system (in fact I am using it right now to write this while my games update on Steam), but I had been reliant on it to a certain degree up to this point (some engineering software is still Windows only) but now I am using macOS and Ubuntu exclusively now which is just wild to me.&lt;/p&gt;

&lt;p&gt;But, that's all for now, this series will be back in 4 weeks time, I may do some smaller blogs between now and then but we'll see!&lt;/p&gt;

&lt;p&gt;You may also have noticed that this post is on other sites too. I'm still trying to figure out which is best for me, but that's a post for another day!&lt;/p&gt;

&lt;p&gt;All the best!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>python</category>
      <category>flask</category>
      <category>git</category>
    </item>
    <item>
      <title>Deploying a React app using Min.io</title>
      <author>mikeyGlitz</author>
      <pubDate>Sun, 11 Jul 2021 15:55:23 +0000</pubDate>
      <link>https://dev.to/mikeyglitz/deploying-a-react-app-using-min-io-3gdc</link>
      <guid>https://dev.to/mikeyglitz/deploying-a-react-app-using-min-io-3gdc</guid>
      <description>&lt;p&gt;In previous posts I had written about how to set up a Kubernetes cluster on self-hosted hardware with the purpose of hosting applications on a Local Area Network (LAN) to use as an intranet of sorts. Today I'll cover how to deploy client-side applications onto Kubernetes cluster which was provisioned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#servers-to-cloud-platforms"&gt;
  &lt;/a&gt;
  Servers to Cloud Platforms
&lt;/h2&gt;

&lt;p&gt;First, let's talk about how the deployments would be handled on a cloud platform. During the .com days, a server would have to be provisioned to host web applications (i.e. Apache/Nginx). The static website would then have to be copied into a static HTML folder (i.e. &lt;code&gt;/var/www/html&lt;/code&gt;) in order to be served to clients via the web server.&lt;br&gt;
The process of web hosting was improved with the rise of containerization. Instead of having to set up and manage a web server directly on your server hardware, now you can pull a pre-configured image and mount your static web content onto a container which would drastically improve website deployment times.&lt;br&gt;
The rise of cloud platforms furthers the improvement by abstracting away the deployment environment from the developer entirely so that more focus can be placed on the website assets themselves instead of provisioning and configuring servers.&lt;br&gt;
Cloud platforms implement hosted storage using a standard called Object-Based-Storage. Object-based-storage utilizes web endpoints to control and manage assets uploaded to a server. Site content can be managed and served directly using the HTTP protocol. &lt;a href="https://aws.amazon.com/s3/"&gt;AWS S3&lt;/a&gt; is a perfect example of how object-based-storage works.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#minio"&gt;
  &lt;/a&gt;
  Minio
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://min.io"&gt;Minio&lt;/a&gt; is a self-hosted service which provides object-based-storage using the AWS S3 protocol; meaning that the endpoints which Minio provides are interchangeable with S3. Minio can be used as a gateway to hosted object-based-storage services which reside on multiple cloud platforms (i.e. Google Cloud Platform (GCP), Amazon Web Services (AWS), Microsoft Azure), but for the sake of this deployment, Minio will be used as a frontend for a mounted volume on our Kubernetes cluster.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#deploying-the-services"&gt;
  &lt;/a&gt;
  Deploying the Services
&lt;/h2&gt;

&lt;p&gt;Before we can deploy a static website to our Kubernetes cluster, we will first have to provision a Minio server.&lt;br&gt;
The Minio documentation utilizes a &lt;a href="https://docs.min.io/minio/k8s/deployment/deploy-minio-operator.html#deploy-operator-kubernetes"&gt;Minio Operator&lt;/a&gt; and a &lt;a href="https://krew.sigs.k8s.io/docs/user-guide/setup/install/"&gt;kubectl krew&lt;/a&gt; plugin to provision servers. Utilizing these tools will be covered in a later production release document. For the sake of this tutorial, deploying Minio will be handled with the &lt;a href="https://github.com/bitnami/charts/tree/master/bitnami/minio"&gt;Minio helm chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Utilizing &lt;a href="https://terraform.io"&gt;Terraform&lt;/a&gt;, the Minio server can be deployed to Helm with the following snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"helm"&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"helm_release"&lt;/span&gt; &lt;span class="s2"&gt;"rel_minio"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"files"&lt;/span&gt;
  &lt;span class="nx"&gt;chart&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"minio"&lt;/span&gt;
  &lt;span class="nx"&gt;repository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://charts.bitnami.com/bitnami"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The helm chart can be deployed with the following commands:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;terraform plan
terraform apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Once the helm deployment has been completed, the service will be available from the Kubernetes cluster. In order to interact with the services, the credentials will have to be read in from the Kubernetes secrets which are generated by the helm chart. The following commands retrieve the secrets from Kubernetes and store them in environment variables:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;minio_access_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;kubectl get secret files-minio &lt;span class="nt"&gt;--namespace&lt;/span&gt; econovizer &lt;span class="nt"&gt;-o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;jsonpath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{.data.access-key}'&lt;/span&gt; | &lt;span class="nb"&gt;base64&lt;/span&gt; &lt;span class="nt"&gt;--decode&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;minio_secret_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;kubectl get secret files-minio &lt;span class="nt"&gt;--namespace&lt;/span&gt; econovizer &lt;span class="nt"&gt;-o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;jsonpath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{.data.secret-key}'&lt;/span&gt; | &lt;span class="nb"&gt;base64&lt;/span&gt; &lt;span class="nt"&gt;--decode&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We then have to port-forward the Kubernetes service in order to access it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl port-forward services/files-minio 9000:9000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#configuring-the-minio-client"&gt;
  &lt;/a&gt;
  Configuring the Minio Client
&lt;/h2&gt;

&lt;p&gt;Minio provides a CLI called &lt;a href="https://docs.min.io/docs/minio-client-quickstart-guide.html"&gt;mc&lt;/a&gt; which can be utilized to interact with the Minio server. We have to call the &lt;code&gt;mc&lt;/code&gt; tool with the &lt;code&gt;$minio_secret_key&lt;/code&gt; and the &lt;code&gt;$minio_access_key&lt;/code&gt; environment variables we created earlier.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mc &lt;span class="nb"&gt;alias set local &lt;/span&gt;http://127.0.0.1:9000 &lt;span class="nv"&gt;$minio_access_key&lt;/span&gt; &lt;span class="nv"&gt;$minio_secret_key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With the client configured we can now create a bucket for hosting our static site.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mc mb &lt;span class="nb"&gt;local&lt;/span&gt;/static
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Before assets can be served from the bucket, the bucket needs to be configured for public asses.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mc policy &lt;span class="nb"&gt;set &lt;/span&gt;download &lt;span class="nb"&gt;local&lt;/span&gt;/static
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-react-application"&gt;
  &lt;/a&gt;
  Creating the React Application
&lt;/h2&gt;

&lt;p&gt;With the hosting environment established, we can now create our static website. The easiest way to set up the static website is using &lt;a href="https://create-react-app.dev/"&gt;Create React App&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app my-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This command will create a React application with the name &lt;code&gt;my-app&lt;/code&gt; in the current folder. We need to change into the &lt;code&gt;my-app&lt;/code&gt; folder -- &lt;code&gt;cd my-app&lt;/code&gt;. Build the project with the command &lt;code&gt;npm run build&lt;/code&gt;. The build command creates a new folder &lt;code&gt;build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With the build folder created, we can deploy the build to our bucket with the &lt;code&gt;mc&lt;/code&gt; command&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mc &lt;span class="nb"&gt;cp&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; build/&lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;local&lt;/span&gt;/static/
mc &lt;span class="nb"&gt;ls local&lt;/span&gt;/static &lt;span class="c"&gt;# list the files which were just uploaded to the local/static bucket&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Ideally from this point, you would be able to access the static site from &lt;code&gt;http://localhost:9000/static&lt;/code&gt;, however Minio has a limitation which prevents it from serving up files unless they were referenced directly.&lt;br&gt;
&lt;code&gt;http://localhost:9000/static&lt;/code&gt; will return an XML document containing a &lt;code&gt;ListBucketResult&lt;/code&gt; instead of &lt;code&gt;index.html&lt;/code&gt;. &lt;code&gt;http://localhost:9000/static/index.html&lt;/code&gt; will return the desired web page. Since the URL would end with &lt;code&gt;index.html&lt;/code&gt;, React would be looking for a web root and fail to load.&lt;/p&gt;

&lt;p&gt;Fortunately, the issue could  be fixed with a proxy application: &lt;a href="https://github.com/harshavardhana/s3www"&gt;s3www&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To simplify the deployment of s3www, I created a Terraform template which deploys the following resources to Kubernetes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;s3www pod deployment&lt;/li&gt;
&lt;li&gt;s3www Kubernetes service&lt;/li&gt;
&lt;li&gt;Ingress which proxies the s3www service&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;This file can be run with the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;terraform init
terraform plan &lt;span class="nt"&gt;-var&lt;/span&gt; &lt;span class="s2"&gt;"acces_key=&lt;/span&gt;&lt;span class="nv"&gt;$minio_access_key&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-var&lt;/span&gt; &lt;span class="s2"&gt;"secret_key=&lt;/span&gt;&lt;span class="nv"&gt;$minio_secret_key&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-var&lt;/span&gt; &lt;span class="s1"&gt;'namespace=my-namespace'&lt;/span&gt; &lt;span class="nt"&gt;-out&lt;/span&gt; deployment.plan
terraform apply deployment.plan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once Terraform is complete, the React application will be available from your Kubernetes cluster via Ingress. (i.e. &lt;code&gt;http://host.docker.internal/&lt;/code&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.min.io"&gt;minio docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/harshavardhana/f05b60fe6f96803743f38bea4b565bbf"&gt;Configuring a Static Website with Minio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>kubernetes</category>
      <category>cloud</category>
      <category>selfhosted</category>
    </item>
    <item>
      <title>Docker On AWS | AWS Whitepaper Summary</title>
      <author>Dorra Boukari</author>
      <pubDate>Sun, 11 Jul 2021 15:54:16 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/docker-on-aws-nji</link>
      <guid>https://dev.to/awsmenacommunity/docker-on-aws-nji</guid>
      <description>&lt;p&gt;This content is the summary of the AWS whitepaper entitled “ Docker on AWS “ written by Brandon Chavis and Thomas Jones. It discusses the exploitation of the container’s benefits in AWS. I tried to simplify and to gather the most interesting points from each paragraph, in order to give the readers very brief and effective content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: Although the introduction is always ignored by many readers, I found that the authors provided an excellent set of information as an opening to our subject. This is why I found it fruitful o summarize the introduction as well by an explanative figure. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aayThbUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq8fsb2cvafokwnav2b5.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aayThbUm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq8fsb2cvafokwnav2b5.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#i-container-benefits"&gt;
  &lt;/a&gt;
  I.    Container Benefits:
&lt;/h1&gt;

&lt;p&gt;The benefits of containers reach all the elements of organizations and they are:&lt;br&gt;
    &lt;strong&gt;Speed&lt;/strong&gt;: Helps all the contributors to software development activities to act quickly.&lt;br&gt;
 &lt;strong&gt;Because:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The architecture of containers allows for full process isolation by using the Linux kernel namespaces and cgroups. Containers are independent and  share kernel on host OS(No need for full virtualization or for  hypervisor)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Containers can be created quickly thanks to their modular nature and lightweight. This becomes more observable in development lifecycle. The granularity leads an easy versioning of released applications .Also it leads to a reduction in resource sharing between application components which minimizes compatibility issues.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: The ability to relocate entire development environments by moving a container between systems highlights. &lt;br&gt;
Containers provide predictable, consistent and stable applications in all the stages of their lifecycle (Development, test and production) as it encapsulates the exact dependencies, thus minimizes the risk of bugs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Density and Resource Efficiency&lt;/strong&gt;: The enormous support of the community to the Docker project increased density and modularity of computing resources.&lt;br&gt;
• Containers increase the efficiency and the agility of applications thanks to the abstraction from OS and hardware. Multiple containers run on a single system.&lt;br&gt;
• You can make a compromise between what resources containers need and what are the hardware limits of the host to reach a maximum number of containers: Higher density, increasing efficiency of computing resources, saving money of the excessed capacity, changing the number of assigned containers to a host instead of horizontal scaling to reach optimal utilization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility:&lt;/strong&gt; Based on Docker portability, ease of deployment, and small size.&lt;br&gt;&lt;br&gt;
• Unlike other applications that require intensive instructions, Docker provides (just like Git) a simple mechanism to download and install containers and their subsequent applications using this command:&lt;br&gt;
$  docker pull &lt;br&gt;
• Docker provides a standard interface : It is easy to deploy&lt;br&gt;
wherever you like and it’s portable between different versions of Linux.&lt;br&gt;
• Containers make microservice architecture possible where services are isolated to adjacent service’s failure and errant patches or upgrades.&lt;br&gt;
• Docker provides clean ,reproducible and modular environment &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#ii-containers-in-aws"&gt;
  &lt;/a&gt;
  II.   Containers in AWS:
&lt;/h1&gt;

&lt;p&gt;There are two ways to deploy containers in AWS :&lt;br&gt;
    &lt;strong&gt;AWS Elastic Beanstalk:&lt;/strong&gt; It is a management layer for AWS services like Amazon EC2, Amazon RDS and ELB.&lt;/p&gt;

&lt;p&gt;• It is used to deploy, manage and scale containerized applications &lt;br&gt;
• It can deploy containerized applications to Amazon ECS &lt;br&gt;
• After you specify your requirements (memory, CPU, ports, etc.),it places your containers across your cluster and monitors their health. &lt;br&gt;
• The command-line utility eb can be used to manage AWS Elastic Beanstalk and Docker containers.&lt;br&gt;
• It is used for deploying a limited number of containers&lt;br&gt;
    &lt;strong&gt;Amazon EC2 Container Service&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Amazon ECS is a high performant management system for Docker containers on AWS .&lt;br&gt;
• It helps to launch, manage, run distributed applications and orchestrate thousands of Linux containers on a managed cluster of EC2 instances, without having to build your own cluster management backend.&lt;br&gt;
• It offers multiple ways to manage container scheduling, supporting various applications.&lt;br&gt;
• Amazon ECS container agent is open source and free ,it can be built into any AMI to be used with Amazon ECS&lt;br&gt;
• On a cluster , a task definition is required to define each Docker image ( name ,location, allocated resources,etc.).&lt;br&gt;
• The minimum unit of work in Amazon ECS is ‘a task’ which is a running instance of a task definition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the clusters in this context:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Clusters are EC2 instances running the ECS container agent that communicates instance and container state information to the cluster manager and dockerd .&lt;br&gt;
• Instances register with the default or specified cluster.&lt;br&gt;
• A cluster has an Auto Scaling group to satisfy the needs of the container workloads.&lt;br&gt;
• Amazon ECS allows managing a large cluster of instances and containers programmatically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container-Enabled AMIs:&lt;/strong&gt; The Amazon ECS-Optimized Amazon Linux AMI includes the Amazon ECS container agent (running inside a Docker container), dockerd (the Docker daemon), and removes the not required packages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Management:&lt;/strong&gt;&lt;br&gt;
Amazon ECS provides optimal control and visibility over containers, clusters, and applications with a simple, detailed API. You just need to call the relevant actions to carry out your management tasks.&lt;br&gt;
Here is a list containing examples of available API Operations for Amazon ECS. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXndqEnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vevq3xajvyxf7qu1osf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXndqEnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vevq3xajvyxf7qu1osf.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scheduling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Scheduling ensures that an appropriate number of tasks are constantly running , that tasks are registered against one or more load balancers, and they are rescheduled when a task fails .&lt;br&gt;
• Amazon ECS API actions like StartTask can make appropriate placement decisions based on specific parameters (StartTask decisions are  based on business and application requirements). &lt;br&gt;
• Amazon ECS allows the integration with custom or third-party schedulers.&lt;br&gt;
• Amazon ECS includes two built-in schedulers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;The RunTask:&lt;/strong&gt; randomly distributes tasks across your cluster.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;CreateService:&lt;/strong&gt; ideally suited to long-running stateless services.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Container Repositories&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Amazon ECS is repository-agnostic so customers can use the repositories of their choice.&lt;br&gt;
• Amazon ECS can integrate with private Docker repositories running in AWS or an on-premises data center.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Logging and Monitoring&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon ECS supports monitoring of cluster contents with Amazon CloudWatch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Amazon ECS allows to store and share information between multiple containers using data volumes. They can be shared on a host as:&lt;br&gt;
••  Empty, non-persistent scratch space for containers&lt;/p&gt;

&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;••  Exported volume from one container to be mounted by other containers on mountpoints called containerPaths.&lt;/p&gt;

&lt;p&gt;• ECS task definitions can refer to storage locations (instance storage or EBS volumes) on the host as data volumes. The optional  parameter referencing a directory on the underlying host is called sourcePath.If it is not provided, data volume is treated as scratch space.&lt;br&gt;
• volumesFrom parameter : defines the relationship of storage between two containers .It requires sourceContainer argument to specify which container's data volume should be mounted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Networking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• Amazon ECS allows networking features (port mapping ,container linking ,security groups ,IP addresses and ressources, network interfaces, etc.).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#iii-container-security"&gt;
  &lt;/a&gt;
  III.  Container Security
&lt;/h1&gt;

&lt;p&gt;• AWS  Costumers combine  software capabalities (of Docker, SElinux, iptables,etc) with AWS security measures( IAM, security groups, NACL,VPC) provided in AWS architecture for EC2 and scaled by clusters&lt;br&gt;
• AWS customers maintain, control and configure of the EC2 instances, OS and Docker daemon through AWS deployment &amp;amp;management services.&lt;br&gt;
• Security measures are scaled through clusters.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#iv-container-use-cases"&gt;
  &lt;/a&gt;
  IV.   Container Use Cases
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;1.Batch jobs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Packaging containers that can batch, extract, transform, and load jobs and deploy them into clusters. Jobs then start quickly. Better performance is witnessed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Distributed Applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Containers build:&lt;/p&gt;

&lt;p&gt;• Distributed applications, which provide loose coupling ,elastic and scalable design. They are quick to deploy across heterogeneous servers ,as they are characterized by density ,consistency and flexibility.&lt;/p&gt;

&lt;p&gt;• microservices into adequate encapsulation units. &lt;/p&gt;

&lt;p&gt;• Batch job processes  which can run on a large numbers of containers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Continuous Integration and Deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Containers are a keystone component of continuous integration (CI) and continuous deployment (CD) workflows. It supports streamlined build, test, and deployment from the same container images. As it leverages CI features in tools like GitHub, Jenkins, and DockerHub &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Platform As a Service&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PaaS is a type of service model that presents a set of software, tools and and an underlying infrastructure where the cloud provider manages networking, storage ,OS ,Middleware  and the customer performs resources configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The issue :&lt;/strong&gt; Users and their resources need to be isolated .This is a challenging task for PaaS providers .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution:&lt;/strong&gt; Containers provide the needed isolation concept .they allows also creating and deploying template resources to simplify isolation process.&lt;br&gt;
Also each product offered by the PaaS provider could be built into its own container and deployed on demand quickly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#v-architectural-considerations"&gt;
  &lt;/a&gt;
  V.    Architectural Considerations
&lt;/h1&gt;

&lt;p&gt;All the containers defined in a task are placed onto a single instance in the cluster. So a task represents an application with multiple tiers requiring inter-container communication.&lt;br&gt;
Tasks give users the ability to allocate resources to containers, so containers can be evaluated on resource requirements and collocated.&lt;br&gt;
Amazon ECS provides three API actions for placing containers onto hosts:&lt;br&gt;
    &lt;strong&gt;RunTask :&lt;/strong&gt; allows a specific cluster instance to be passed as a value in the API call&lt;br&gt;
       &lt;strong&gt;StartTask:&lt;/strong&gt; uses Amazon ECS scheduler logic to place a task on an open host&lt;br&gt;
       &lt;strong&gt;CreateService:&lt;/strong&gt; allows for the creation of a Service object, which, combination of a TaskDefinition object and an existing Elastic Load Balancing load.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Service discovery:&lt;/strong&gt; Solves challenges with advertising internal container state, such as current IP address and application status, to other containers running on separate hosts within the cluster. The Amazon ECS describe API actions like describe-service can serve as primitives for service discovery functionality.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vi-walkthrough"&gt;
  &lt;/a&gt;
  VI.   Walkthrough
&lt;/h1&gt;

&lt;p&gt;Since the commands used in this Walkthrough can be exploited in other complex projects, I suggest a bash file that can help to solve repetitive and difficult real-world problems:&lt;br&gt;
                               View: &lt;a href="https://github.com/DorraBoukari/Walkthrough/blob/main/walkthrough.sh"&gt;link&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;1.Create your first cluster named ‘Walkthrough’ with &lt;code&gt;create-cluster&lt;/code&gt; command&lt;br&gt;
    PS: each AWS account is limited to two clusters.&lt;br&gt;
2.Add instances&lt;br&gt;
If you would like to control which cluster the instances register to(not to default cluster), you need to input UserData to populate the cluster name into the &lt;code&gt;/etc/ecs/ecs.config&lt;/code&gt; file.&lt;br&gt;
In this  lab, we will launch a web server ,so we configure the correct security group permissions and allow inbound access from anywhere on port 80.&lt;/p&gt;

&lt;p&gt;3.Run a quick check with  the &lt;code&gt;list-container-instances&lt;/code&gt; command:&lt;br&gt;
PS: To dig into the instances more, use the &lt;code&gt;describe-container-instances&lt;/code&gt; command &lt;/p&gt;

&lt;p&gt;4.Register a task definition before running in on ECS cluster:&lt;/p&gt;

&lt;p&gt;a)Create the task definition:&lt;br&gt;
It is created a the JSON file called ‘nginx_task.json’ . This specific task launches a pre-configured NGINX container from the Docker Hub repository.&lt;/p&gt;

&lt;p&gt;View:   &lt;a href="https://github.com/DorraBoukari/Walkthrough/blob/main/nginx_task.json"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;b)Register the task definition with Amazon ECS:&lt;/p&gt;

&lt;p&gt;5.Run the Task with &lt;code&gt;run-task&lt;/code&gt; command:&lt;br&gt;
                  PS: &lt;br&gt;
• Note of the taskDefinition instance value (Walkthrough:1) returned after task registration in the previous step.&lt;br&gt;
• To obtain the ARN use the &lt;code&gt;aws ecs list-task-definitions&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;6.Test the container: The container port is mapped to the instance port 80, so you can curl the utility to test the public IP address .&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This whitepaper summary can be a useful resource for those interested in the cloud native technologies. It sheds the light on containers generally, and Docker on AWS specifically. It  details the benefits of those technologies especially while using the EC2 cluster, it gives a step-by-step guide for beginners to deploy their first container on a cluster and also provides a bash  Script that helps to automate those tasks in more complex projects.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>aws</category>
      <category>containers</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Download Browser Page as PDF using JavaScript</title>
      <author>Abayomi Ogunnusi</author>
      <pubDate>Sun, 11 Jul 2021 14:54:13 +0000</pubDate>
      <link>https://dev.to/drsimplegraffiti/generate-invoice-pdf-dmd</link>
      <guid>https://dev.to/drsimplegraffiti/generate-invoice-pdf-dmd</guid>
      <description>&lt;p&gt;Hello folks, today we will cover how to save our browser page as pdf. We will generate pdf using Vanilla JavaScript. This functionality can be used to generate invoices or receipts for users. &lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://i.giphy.com/media/F4hprt3JvS1S8/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/F4hprt3JvS1S8/giphy.gif" alt="download"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;🎯 JavaScript&lt;br&gt;
🎯 HTML&lt;br&gt;
🎯 html2pdf.js CDN&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#HTML-1"&gt;HTML code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#JS-1"&gt;JavaScript code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;♣️ I decide to write the whole code in &lt;code&gt;index.html&lt;/code&gt;, feel free to refactor it to your convenience. The invoice template is gotten from &lt;a href="https://bootsnipp.com/snippets/9gjD"&gt;Bootsnip&lt;/a&gt; written by heidilux. I made a little tweaking to the template to tailor it to this project.&lt;/p&gt;

&lt;p&gt;🎯 First of all, add the &lt;code&gt;html2pdf CDN&lt;/code&gt; script to the head of your &lt;code&gt;HTML&lt;/code&gt; boilerplate.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yUNBqwCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33q2td6oe3oou8490a8w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yUNBqwCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33q2td6oe3oou8490a8w.png" alt="carbon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎯 Also, add this to the head&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"bootstrap-css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//code.jquery.com/jquery-1.11.1.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;🎯 Next, Let's flesh out our &lt;code&gt;div container&lt;/code&gt; in &lt;code&gt;index.html&lt;/code&gt; that holds all the data contained in the invoice.&lt;br&gt;
📝 Ensure you wrap the content to display in the &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o78xFoz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv0smt8hh46mwf9ahji0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o78xFoz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv0smt8hh46mwf9ahji0.png" alt="carbon (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎯 We write our button &lt;code&gt;onclick&lt;/code&gt; event&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"generatePDF()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Generate Invoice&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;🎯 Lastly, we write our &lt;code&gt;JavaScript&lt;/code&gt; function.&lt;br&gt;
&lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generatePDF&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;invoice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;html2pdf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;Click on the &lt;code&gt;Generate Invoice&lt;/code&gt; button to test.&lt;br&gt;
&lt;a&gt;&lt;iframe height="600" src="https://codepen.io/drsimplegraffiti/embed/gOWwZyw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I hope this post has been helpful and thought you how to generate pdf. Leave a comment below if you have better ways to generate pdf using &lt;code&gt;JavaScript&lt;/code&gt;.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;🍄&lt;a href="https://www.youtube.com/watch?v=rZr23bMwHsU"&gt;Video Reference&lt;/a&gt; by Code with Voran&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#learn-how-to-send-mail-using-web-socket"&gt;
  &lt;/a&gt;
  Learn how to send mail📬 using Web Socket 👇
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://dev.to/drsimplegraffiti/chat-app-using-socket-io-1hp0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lRVrPC8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tj9psw3y1v1f1pc2kao0.png" alt="Send mail using NodeJS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/drsimplegraffiti"&gt;
        drsimplegraffiti
      &lt;/a&gt; / &lt;a href="https://github.com/drsimplegraffiti/drsimplegraffiti"&gt;
        drsimplegraffiti
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Config files for my GitHub profile.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>html</category>
    </item>
  </channel>
</rss>
