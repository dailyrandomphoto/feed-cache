<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Elaborating Code Journey From Developers to Testers (Code Analysis Tools For Java)</title>
      <author>Priyanshi Sharma</author>
      <pubDate>Fri, 09 Apr 2021 12:59:57 +0000</pubDate>
      <link>https://dev.to/priyanshi_sharma/elaborating-code-journey-from-developers-to-testers-code-analysis-tools-for-java-32dh</link>
      <guid>https://dev.to/priyanshi_sharma/elaborating-code-journey-from-developers-to-testers-code-analysis-tools-for-java-32dh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-Na6QF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9ne0jtvjxekjag6d646.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-Na6QF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9ne0jtvjxekjag6d646.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Delivering projects on time has always been stressful in the software industry. Often, the software doesn’t work due to bugs, the problem in code quality, or other vulnerabilities causing delays continuously. Why do such problems occur, you may ask. While consistently working on the project, developers majorly concentrate on logic and fundamentals to reach the final goals. However, while doing so, some of the bugs and errors remain hidden until the deployment of the code. At the time of code execution, these issues suddenly come into view and lead to a long process of debugging and fixing the code.&lt;/p&gt;

&lt;p&gt;To deliver the product on time to the clients, developers use some tools to monitor and analyze the source code. Code analysis can be performed in one of the two ways, i.e. static analysis and dynamic analysis. Today, we will understand the code analysis tools for Java.&lt;/p&gt;

&lt;p&gt;So, what is code analysis, why it is important to monitor code, and which tools does the developer use? Let’s get into it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-code-analysis-for-java-amp-why-is-it-important"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.decipherzone.com/blog-detail/static-code-analysis-tools-for-java"&gt;What is Code Analysis For Java &amp;amp; Why is it Important?&lt;/a&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Code analysis is a method of analyzing and debugging the source code of the program before actually executing it. However, code analysis is not only limited to static analysis, it goes far beyond that. So, in this article, we will discuss the entire journey of developers till the project reaches the quality analysts/tester for further testing and analysis of the code. Simply, you can think of code analysis as a process that guides developers in maintaining a healthy codebase with best practices by reducing manual effort and increasing the quality while developing the software for the clients.&lt;/p&gt;

&lt;p&gt;But, what actually is the programmer’s journey to write quality code? Let’s check it out in detail here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Linting:&lt;/strong&gt; Initially, a developer starts to test their code using linting tools. These tools help in analyzing source code syntactically and detecting potential bugs, stylistic errors, and invalid constructs.&lt;/li&gt;

&lt;li&gt;
&lt;strong&gt;Unit Testing:&lt;/strong&gt; In unit testing, developers test individual units or components of code. It is performed to check that each unit is working expectedly. Let’s say, you are a developer who needs to add new features to the project. To add this feature, you will have to change the old source code (where you have no idea how many other codes are dependent on). After successfully updating the code for the new feature, you see that this latest feature designed by you is working properly, but what you don’t know is the number of other dependent features of the project that has failed to work. However, with the help of unit testing, if you make any changes in the old code, it will instantly show you other lines of code that need fixing, such a practice will save your efforts, improve the development speed and reduce the chances of creating new bugs. &lt;/li&gt;

&lt;li&gt;
&lt;strong&gt;Code Coverage:&lt;/strong&gt;* Code coverage is one of the white box testings that helps in finding the area of the program not covered by a set of test cases. It helps in measuring the efficiency of test implementation. It is impractical to use breakpoints or step through a program in the debugger to monitor which statements have been executed as you have so many statements in your program. Code coverage is a measure of the degree to which your program source code has been executed, and unless you can prove that your tests have been performed over all of the code in your program, those tests might be missing defects. Some of the common coverage reports that one can acquire using a code coverage tool include statement coverage, condition coverage, branch coverage, and function coverage. &lt;/li&gt;

&lt;li&gt;
&lt;strong&gt;Continuous Inspection:&lt;/strong&gt; Continuous inspection refers to the automated analysis of the source code for potential bugs, coding standard breaches, lack of unit testing, replication of code, a bad distribution of complexity, and highly complex design at the architectural level. While using tools for continuous inspection in IDE, you will get automated build scripts, that will break the build (the method of changing source code files into standalone software artefact that can be run on a server or computer) if the test coverage goes below 80% or there are some severe issues. In such cases where the build fails, as a stakeholder, you will get an instant notification to fix the build immediately. &lt;/li&gt;

&lt;li&gt;
&lt;strong&gt;Vulnerability and Compliance Assessment:&lt;/strong&gt; Vulnerability and compliance testing is a software testing technique that evaluates the number of risks involved in the system. These risks could be anything from injection flaws (enabling user to gain backend access) to broken authentication (allowing passwords, keys, or tokens access), from exposure of sensitive data to XML External Entities (providing access to internal data via external entities), and broken access control to security misconfiguration. Using tools for vulnerability and compliance assessment can help developers in gaining complete reports on such issues so that they can fix them.&lt;/li&gt;

&lt;li&gt;
&lt;strong&gt;Continuous Integration &amp;amp; Continuous Deployment (CI/CD):&lt;/strong&gt; While working on a project, developers continuously need to add new lines of code and features. CI/CD removes the gaps between deployment/operation activities and teams by offering automation in building, testing, and deployment of the code. Let’s assume, we have multiple developers who are working on the same project. Each of them has its feature or bug-fix to work upon while contributing to the project. As they complete the code it eventually gets pushed to the code repository that stores all the different versions of the codes for a feature. From here a build is created for testing the code and validating if it’s creating a bug or not. Once the tests are completed and the build turns out to be successful, the new version of the code is deployed making it available for the users. This complete process of CI/CD can be performed using several different tools that we will discuss later. &lt;/li&gt;

&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#which-open-source-code-analysis-tools-to-use"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.decipherzone.com/blog-detail/code-analysis-tools-java"&gt;Which Open Source Code Analysis Tools To Use?&lt;/a&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With the variety of tools available out there for code analysis, it becomes difficult to opt for the one that suits your requirements. So, for each step that a developer takes for thorough code analysis, here is the list of open-source code analysis tools to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-sonarlint"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. SonarLint&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Linting is the first step in the static code analysis for every programming language. In Java, developers mostly use Sonarlint, an open-source IDE plugin that is available for IntelliJ and Eclipse. It helps in automating the analysis of source code for formatting or programmatic errors. With the help of Sonarlint, a programmer can easily reduce stylistic errors while enhancing the quality of the code. It enables developers to address potential vulnerabilities and bugs before their commitment to the codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-junit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. JUnit&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;JUnit is a unit testing framework for Java developers. It is essential for test unit development and is also considered an instance of X unit architecture. It is used for testing the small chunks of code or a unit by creating a path, function, or method. It promotes the idea of a test first and caught late. It is the most commonly used framework for developers’ IDEs. JUnitEE testing framework allows testing the code within the server’s container.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-jacoco"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. JaCoCo&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;JaCoCo or Java Code Coverage is being used by the developers to check the code coverage of the program. Code coverage is the percentage of code that is covered by automated testing. It is a form of white box testing that finds the areas of the program that does not have a set of test cases. It helps in analyzing the number of codes that we have already tested and what we haven’t covered. With the help of JaCoCo, developers can identify the efficiency of the test implementation, so that they can write additional test code and execute them. Apart from JaCoCo, we have other tools that can be used to check code coverage, like Cobertura and JTest.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-pmd"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. PMD&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;PMD is an open-source static code analysis tool for Java that identifies the issues present in the application code. It contains an in-built set of rules and supports the capacity to write custom code. It helps in detecting common programming errors such as empty catch blocks, unused variables, unnecessary object creation, duplicate code, empty logical statements, possible bugs, and so on. It supports JDeveloper, jEdit, Intellij IDEA, Maven, Jenkins, Eclipse, JBuilder, and SonarQube.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-sonarqube"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. SonarQube&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;SonarQube is an open-source code analysis tool developed by SonarSource. It guides developers in continuous analysis of code quality to provide automated reviews whenever it detects bugs, security vulnerabilities, and code smells. It is sort of a dashboard that offers reports on coding standards, unit tests, duplicated codes, code complexity, bugs, vulnerabilities, and comments. It can easily be integrated with MSBuild, Maven, Ant, Jenkins, Hudson, and other continuous integration tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-qualys"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Qualys&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Qualys is the first company to offer cloud-based vulnerability and compliance management solutions. To continuously detect and protect software from attacks, it is the perfect solution to opt for. It allows you to scan the system from one console anytime as required. With the help of Qualys, one can do a thorough analysis and then create custom reports accordingly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-jenkins"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Jenkins&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Jenkins is a free automation server that assists in automating some development parts including building, testing, and deploying. It facilitates continuous integration, continuous delivery, and continuous deployment. With hundreds of plugins, Jenkins can practically integrate any tool in the CI/CD toolchain. Moreover, Jenkins easily distributes work across different machines to make the process of building, testing and deploying faster.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Every client and developer wants a high-quality Java code for the project that can be delivered in tight deadlines and short sprints. With the help of these code analysis tools for Java integrations, developers can be confident that inadvertent errors will not make their way into the release while disturbing the flow of the code, while clients can get what they need efficiently. So if you are a business owner who wants to develop a high-quality software or web app for your brand, then you can contact us for consultations or hire developers with extensive experience and knowledge in this field. On the other hand, if you are a programmer who gets stuck in the coding execution, try these tools and enhance your skills effectively.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.decipherzone.com/blog-detail/customer-experience-web-design"&gt;Decipher&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>python</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>10 reasons why Twitter is better than LinkedIn for finding work</title>
      <author>Andrew Baisden</author>
      <pubDate>Fri, 09 Apr 2021 12:29:25 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/10-reasons-why-twitter-is-better-than-linkedin-for-finding-work-gbk</link>
      <guid>https://dev.to/andrewbaisden/10-reasons-why-twitter-is-better-than-linkedin-for-finding-work-gbk</guid>
      <description>&lt;p&gt;LinkedIn is a great social network for finding work. Many companies use it for hiring and it is very easy to find a recruiter. However it is not the only social network out there which you can use for finding your next job. Here are 10 reasons why Twitter is better than LinkedIn for finding work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-it-is-more-casual"&gt;
  &lt;/a&gt;
  1. It is more casual
&lt;/h2&gt;

&lt;p&gt;One of the main differences between the two platforms is that Twitter feels more fun and casual whereas LinkedIn is more formal and business orientated. People tend to be themselves when in a more casual scene it is easier to express yourself and meet people. On LinkedIn it has more of a formal strict feel to it and many job seekers get harassing and spam messages from recruiters and some companies which makes the experience feel negative.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-developers-are-more-open-to-connecting-with-their-peers"&gt;
  &lt;/a&gt;
  2. Developers are more open to connecting with their peers
&lt;/h2&gt;

&lt;p&gt;On Twitter it feels far more natural to follow other developers who usually follow you back. Almost everyone is open to it regardless if you know them in real life or not. However the same rules don't always apply when using LinkedIn. Firstly you have to send a connection request which the person you are trying to connect with could easily refuse. So in this sense the platform is more closed than it is open like Twitter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-less-recruiters-more-companies"&gt;
  &lt;/a&gt;
  3. Less recruiters more companies
&lt;/h2&gt;

&lt;p&gt;There are recruiters on Twitter however their main playground is LinkedIn that is where they do most of their work. On Twitter you are more likely to engage with companies who see your work or people who work for those companies. Thats an easy way to make a new connection because Twitter can feel more like a public journal of your current developer journey. Whereas on LinkedIn it feels more like you are trying to force your CV into someone's face in the hope that it gets you an interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-engagement-is-much-higher"&gt;
  &lt;/a&gt;
  4. Engagement is much higher
&lt;/h2&gt;

&lt;p&gt;You are more likely to get noticed on Twitter than you are on LinkedIn. Tweets generally get significantly higher likes because the platform is designed to be more personal and fun. People also tend to spend more time on Twitter because the experience is more enjoyable and they have friends on there. Compared to LinkedIn which feels like a tool specifically designed for work. How many people feel excited to spend hours on LinkedIn all day? Most of the conversations are business focused and there is a lot of spam from recruiters hitting send all and sending you a generic job description. To companies that want you to sign up to their platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-twitter-spaces-is-awesome"&gt;
  &lt;/a&gt;
  5. Twitter Spaces is awesome!!!
&lt;/h2&gt;

&lt;p&gt;Twitter Spaces is an audio only chat room where you are in a room with other users. You can talk about anything you want and it is one of the best ways to engage and connect with your followers. I have been using it for a few months now and the experience is extremely positive. It is like live radio and a conference call all in one. I have been in Twitter Spaces rooms where they talk about the best ways for finding work, different technical stacks and better ways on promoting yourself. It is like getting insider secrets that you can use to boost your career prospects. The casual feel of the rooms is very inviting too. This is a feature which LinkedIn currently does not have.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-it-is-a-good-way-to-gauge-personality-and-culture-fit"&gt;
  &lt;/a&gt;
  6. It is a good way to gauge personality and culture fit
&lt;/h2&gt;

&lt;p&gt;On Twitter you are free to express yourself anyway you want. So the tweets that you do can be a good indication of what your personality is like. In contrast people tend to be more serious and business minded on LinkedIn so they are likely to say things in a more formal manner that is more appropriate for a cover letter or resume. On LinkedIn when you look at a profile you are only looking at someones past experience in most cases. Whereas if you look at Twitter you could see what projects they are currently working on and the type of learning they are doing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-it-is-a-better-learning-tool"&gt;
  &lt;/a&gt;
  7. It is a better learning tool
&lt;/h2&gt;

&lt;p&gt;Yes, I know that LinkedIn Learning exists but hear me out. LinkedIn Learning is only free as a 1 month trial after that you need to pay for it. When compared to what's on offer with Twitter it can't really compete. There are thousands of developers using Twitter and many of them share FREE resources each day as well as giving their own insights into learning strategies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-blogging-opens-up-doors-to-new-opportunities"&gt;
  &lt;/a&gt;
  8. Blogging opens up doors to new opportunities
&lt;/h2&gt;

&lt;p&gt;This is another area where Twitter wins. Because the platform feels more casual people use it for writing articles and blogging. I have been doing this for over 1 year and have grown my network on different platforms. It has even opened up doors to a few freelance jobs as a technical writer. The content you put on Twitter can really help you to grow as a developer. Sure you can post the same content on LinkedIn but we go back to the topic of engagement. The audience is usually not as big and most people tend to have more recruiters as connections than developers so the content you write might not be as applicable for them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-less-ghosting"&gt;
  &lt;/a&gt;
  9. Less ghosting
&lt;/h2&gt;

&lt;p&gt;Connections that you have on Twitter feel more real in my opinion. That's because it is easier to connect with people as you have a common interest and it is socially acceptable to talk about any topic. The same can't be said of LinkedIn where it feels like everyone you connect with is just a business partner. The biggest reason for this is that you are typically going to be connecting with recruiters and they use the platform for work and not socialising. So the topics of conversation are more strict and business focused. Because of this it is hard to form strong connections with people and if you are unsuccessful with a few interviews then you become forgotten and the recruiter moves onto someone else. Twitter feels more supportive as you are going through the same problems other developers have so instead of losing connections you gain them for being more authentic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-twitter-has-a-more-active-community"&gt;
  &lt;/a&gt;
  10. Twitter has a more active community
&lt;/h2&gt;

&lt;p&gt;Twitter has about 335 million monthly active users whereas LinkedIn has 294 million monthly active users. While the difference is not hugely dissimilar it can make a difference. In general people tend to spend far more time on Twitter than they do with LinkedIn which means you have a much higher chance of someone responding or noticing something that you said. You are also likely to see much more posts on Twitter and likely more profile views as well. You also have the added bonus of growing your developer network at a much faster rate. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect on &lt;a href="https://twitter.com/andrewbaisden"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/andrew-baisden/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://github.com/andrewbaisden"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also check out my website &lt;a href="https://andrewbaisden.com/"&gt;https://andrewbaisden.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will just leave you one last easter egg 🥚. These are lyrics from a song lets see if you can find it 😉&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;"If we'll be united&lt;br&gt;
We're stronger together&lt;br&gt;
We always have the high hope&lt;br&gt;
Not all for one but one for all"&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Gestion des erreurs RXJS -NGRX</title>
      <author>Clara Belair</author>
      <pubDate>Fri, 09 Apr 2021 12:28:42 +0000</pubDate>
      <link>https://dev.to/stack-labs/gestion-des-erreurs-rxjs-ngrx-3kci</link>
      <guid>https://dev.to/stack-labs/gestion-des-erreurs-rxjs-ngrx-3kci</guid>
      <description>&lt;p&gt;Dans un projet frontend, lorsqu'on fait un appel HTTP, il ne faut pas oublier la gestion des cas d'erreurs. Un appel HTTP peut être en erreur pour diverses raisons, on peut citer : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;un serveur est inaccessible : le backend est "tombé" à cause d'une erreur interne par exemple&lt;/li&gt;
&lt;li&gt;un timeout si la requête prend plus d'un certain temps à répondre&lt;/li&gt;
&lt;li&gt;une erreur renvoyée par le backend avec un message spécifique : l'utilisateur n'a pas le droit d'accéder à cette ressource par exemple&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dans chaque cas, si le frontend ne gère pas ces erreurs, on se retrouve avec une application qui fonctionne mal ou, dans le pire des cas, plus du tout.&lt;/p&gt;

&lt;p&gt;Dans cet article, je vais vous présenter la façon de gérer vos erreurs lors d'un appel HTTP pour un projet Angular. On verra d'abord la gestion des erreurs dans un &lt;code&gt;subscribe&lt;/code&gt;, puis la gestion des erreurs dans un &lt;code&gt;effect&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Prenons l'exemple d'un service &lt;code&gt;HobbitsService&lt;/code&gt; et de la méthode &lt;code&gt;findHobbits&lt;/code&gt; qui fait un appel HTTP pour retourner un observable d'une liste d'Hobbits.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HobbitsService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpClient&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;api/hobbits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On veut afficher la liste des Hobbits, et pendant que la requête HTTP est en cours, on affiche un loader à l'utilisateur.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#g%C3%A9rer-les-erreurs-dans-un-raw-subscribe-endraw-"&gt;
  &lt;/a&gt;
  Gérer les erreurs dans un &lt;code&gt;subscribe&lt;/code&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#exemple-dune-erreur-non-trait%C3%A9e"&gt;
  &lt;/a&gt;
  Exemple d'une erreur non traitée
&lt;/h3&gt;

&lt;p&gt;Dans le composant &lt;code&gt;HobbitsComponent&lt;/code&gt; une liste d'Hobbits est récupérée à l'initialisation du composant. Un loader est affiché lorsque le booléen &lt;code&gt;isLoading&lt;/code&gt; est à &lt;code&gt;true&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HobbitsComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HobbitsService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Que se passe-t-il si l'appel  &lt;code&gt;findHobbits&lt;/code&gt; échoue ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le loader va être affiché, sans s'arrêter, alors que l'appel est terminé. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pourquoi ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La gestion du statut du loader est placé dans la fonction &lt;code&gt;NEXT&lt;/code&gt; du &lt;code&gt;subscribe&lt;/code&gt;. Quand une erreur survient, on ne passe pas dans &lt;code&gt;NEXT&lt;/code&gt; mais dans la fonction &lt;code&gt;ERROR&lt;/code&gt; du &lt;code&gt;subscribe&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#next-error-complete-les-3-fonctions-dun-raw-subscribe-endraw-"&gt;
  &lt;/a&gt;
  NEXT, ERROR, COMPLETE : les 3 fonctions d'un &lt;code&gt;subscribe&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;subscribe&lt;/code&gt; a 3 fonctions optionnelles : NEXT, ERROR, COMPLETE.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Completed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si l'appel HTTP &lt;strong&gt;réussit&lt;/strong&gt;, on voit les logs suivant :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Next&lt;/span&gt;
&lt;span class="nx"&gt;Completed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;En cas de succès, la valeur est émise dans la fonction &lt;code&gt;NEXT&lt;/code&gt;. Puis l'observable se ferme et il passe dans la fonction &lt;code&gt;COMPLETE&lt;/code&gt;. C'est la fin du lifecycle de l'observable, aucune erreur n'a été émise.&lt;/p&gt;

&lt;p&gt;Si l'appel HTTP &lt;strong&gt;échoue&lt;/strong&gt;, on voit les logs suivant :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;En cas d'erreur, aucune valeur n'est émise dans la fonction &lt;code&gt;NEXT&lt;/code&gt;. On passe dans la fonction &lt;code&gt;ERROR&lt;/code&gt;, c'est la fin du lifecycle de l'observable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A savoir :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Un appel HTTP est un observable qui "complete" après avoir émit une valeur. On a alors deux "chemins" possibles : &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YUfrhIrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cowlhu1tsys9zu43l78z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUfrhIrg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cowlhu1tsys9zu43l78z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On ne peut pas être dans un &lt;code&gt;COMPLETE&lt;/code&gt; et &lt;code&gt;ERROR&lt;/code&gt; dans le lifecycle d'un observable, c'est soit l'un, soit l'autre. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pour-r%C3%A9soudre-le-probl%C3%A8me"&gt;
  &lt;/a&gt;
  Pour résoudre le problème
&lt;/h3&gt;

&lt;p&gt;Pour gérer l'affichage du loader en cas d'erreur, on va traiter son état dans la fonction &lt;code&gt;NEXT&lt;/code&gt; et dans la fonction &lt;code&gt;ERROR&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HobbitsComponent&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnInit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HobbitsService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnInit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si l'appel HTTP réussit ou échoue, on aura le booléen &lt;code&gt;isLoading&lt;/code&gt; à &lt;code&gt;false&lt;/code&gt; et donc on n'aura plus le loader affiché à l'infini.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#traiter-ou-logger-lerreur"&gt;
  &lt;/a&gt;
  Traiter ou logger l'erreur
&lt;/h3&gt;

&lt;p&gt;Dans le cas où on veut utiliser l'erreur pour debugger ou pour afficher un message précis à l'utilisateur par exemple, on peut utiliser l'erreur retournée comme ceci :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Completed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#gestion-les-erreurs-dans-un-raw-effect-endraw-"&gt;
  &lt;/a&gt;
  Gestion les erreurs dans un &lt;code&gt;effect&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Pour gérer vos effets de bord, par exemple vos appels backends, vous pouvez également utiliser la librarie &lt;a href="https://ngrx.io/"&gt;NGRX&lt;/a&gt; et les &lt;a href="https://ngrx.io/guide/effects"&gt;effects&lt;/a&gt;. Personnellement c'est la manière dont je gère ces appels. Je ne donne pas la responsabilité au composant de récupérer les données.&lt;/p&gt;

&lt;p&gt;L'action &lt;code&gt;loadHobbits&lt;/code&gt; met un booléen &lt;code&gt;isLoading&lt;/code&gt; à &lt;code&gt;true&lt;/code&gt; dans le store. L'action &lt;code&gt;loadHobbitsSuccess&lt;/code&gt; passe ce booléen à &lt;code&gt;false&lt;/code&gt; et enregistre la liste des Hobbits dans le store. Le loader est affiché si le booléen &lt;code&gt;isLoading&lt;/code&gt; est à &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exemple-sans-gestion-derreur"&gt;
  &lt;/a&gt;
  Exemple sans gestion d'erreur
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HobbitsEffects&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;loadHobbits$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;ofType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loadHobbits&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;concatMap&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadHobbitsSuccess&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;hobbits&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;actions$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Actions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HobbitsService&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Que se passe-t-il si l'appel  &lt;code&gt;findHobbits&lt;/code&gt; échoue ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le loader va être affiché, sans s'arrêter, alors que l'appel est terminé. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pourquoi ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seul l'action &lt;code&gt;loadHobbitsSuccess&lt;/code&gt; met le booléen &lt;code&gt;isLoading&lt;/code&gt; à &lt;code&gt;false&lt;/code&gt;. Or, en cas d'erreur, on ne passe pas dans le &lt;code&gt;map&lt;/code&gt; qui suit l'appel HTTP. Il faudrait attraper l'erreur à l'aide de l'opérateur &lt;code&gt;catchError&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-catcherror-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;catchError&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;L'opérateur &lt;code&gt;catchError&lt;/code&gt; va permettre, comme son nom l'indique, d'attraper l'erreur et de retourner un nouvel observable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="cm"&gt;/*SUCCESS*/&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;catchError&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/*ERROR*/&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pour-r%C3%A9soudre-le-probl%C3%A8me"&gt;
  &lt;/a&gt;
  Pour résoudre le problème
&lt;/h3&gt;

&lt;p&gt;On va créer une nouvelle action &lt;code&gt;loadHobbitsError&lt;/code&gt; qui va permettre dans notre exemple de mettre le booléen &lt;code&gt;isLoading&lt;/code&gt; à &lt;code&gt;false&lt;/code&gt; et donc d'arrêter d'afficher le loader en cas d'erreur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HobbitsEffects&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;loadHobbits$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;ofType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loadHobbits&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;concatMap&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadHobbitsSuccess&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;hobbits&lt;/span&gt; &lt;span class="p"&gt;})),&lt;/span&gt;
          &lt;span class="nx"&gt;catchError&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loadHobbitsError&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;actions$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Actions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HobbitsService&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;A savoir :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Si vous êtes sur une version antérieure à la version 8  d'&lt;code&gt;NGRX&lt;/code&gt;,  en cas d'erreur "non attrapée" dans l'observable principal à l'aide d'un &lt;code&gt;catchError&lt;/code&gt;, l'&lt;code&gt;effect&lt;/code&gt; est &lt;code&gt;complete&lt;/code&gt;.  Depuis la version 8, si aucune erreur est "attrapée" dans l'observable principal, l'&lt;code&gt;effect&lt;/code&gt; se resouscrit avec une limite maximum d'erreurs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#appels-multiples"&gt;
  &lt;/a&gt;
  Appels multiples
&lt;/h3&gt;

&lt;p&gt;En cas d'appels multiples, on peut choisir de retourner un observable avec des données pour gérer les cas d'appels qui ont échoués.&lt;/p&gt;

&lt;p&gt;Dans l'exemple ci-dessous, on a une liste d'ids d'Hobbits donnée par l'action &lt;code&gt;loadHobbitsBeers&lt;/code&gt;. &lt;br&gt;
Pour chaque id d'Hobbit, on fait un appel HTTP via &lt;code&gt;favoriteBeersByHobbitId&lt;/code&gt; qui va retourner une liste de string qui correspond aux bières préférées d'un Hobbit donné. &lt;br&gt;
Ces appels sont effectués en parallèles, et si l'un d'eux échoue, on enregistre l'id du Hobbit, ainsi que la bière &lt;code&gt;Prancing Pony's Ale&lt;/code&gt; par défaut. Ainsi, les appels qui ont échoué sont traités avec des données par défaut.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Injectable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HobbitsEffects&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;loadHobbitsDetails$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;ofType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loadHobbitsBeers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;mergeMap&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;hobbitsIds&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;forkJoin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;hobbitsIds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbitId&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favoriteBeersByHobbitId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbitId&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;beers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;hobbitId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;beers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;})),&lt;/span&gt;
              &lt;span class="nx"&gt;catchError&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;hobbitId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="na"&gt;beers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;`Prancing Pony's Ale`&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
              &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hobbitsBeers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HobbitsBeers&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadHobbitsBeersSuccess&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;hobbitsBeers&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;actions$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Actions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HobbitsService&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#traiter-ou-logger-lerreur"&gt;
  &lt;/a&gt;
  Traiter ou logger l'erreur
&lt;/h3&gt;

&lt;p&gt;Dans le cas où on veut utiliser l'erreur pour debugger ou pour afficher un message précis à l'utilisateur par exemple, on peut utiliser l'erreur retournée comme ceci :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hobbitsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findHobbits&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hobbits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Hobbit&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="cm"&gt;/*SUCCESS*/&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;catchError&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERROR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/*ERROR*/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>angular</category>
      <category>rxjs</category>
      <category>ngrx</category>
    </item>
    <item>
      <title>Git au quotidien : les seules commandes que j'utilise vraiment</title>
      <author>Clara Belair</author>
      <pubDate>Fri, 09 Apr 2021 12:28:20 +0000</pubDate>
      <link>https://dev.to/stack-labs/git-au-quotidien-les-seules-commandes-que-j-utilise-vraiment-3g74</link>
      <guid>https://dev.to/stack-labs/git-au-quotidien-les-seules-commandes-que-j-utilise-vraiment-3g74</guid>
      <description>&lt;p&gt;Je ne suis pas une experte Git, je ne connais pas toutes les commandes, mais depuis quelques années, j'ai une routine et quelques commandes que j'utilise au quotidien. Ces commandes me permettent de gérer 95% de mes besoins.&lt;/p&gt;

&lt;p&gt;Avec seulement &lt;strong&gt;7 commandes&lt;/strong&gt;, je peux gérer mon projet au quotidien. Voici la liste des commandes que je vais présenter à travers mon workflow de développement :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git fetch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#d%C3%A9marrer-mon-d%C3%A9veloppement"&gt;
  &lt;/a&gt;
  Démarrer mon développement
&lt;/h2&gt;

&lt;p&gt;Je présente deux façons de démarrer mon développement. Je vais commencer par GitLab, un outil ultra répandu, que j'ai toujours connu via mes différentes expériences, chez les petits comme chez les gros clients. Il m'est arrivé de démarrer mon développement sans passer par GitLab, donc je présenterai également cette deuxième option.&lt;/p&gt;

&lt;p&gt;La branche principale de développement de votre projet peut s'appeler &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;main&lt;/code&gt;... Cela dépend de votre projet, et peut importe son nom, c'est la branche sur laquelle toute l'équipe fait partir ses branches pour faire son développement. Dans mon exemple, la branche principale de développement s'appelle &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cas-1-je-d%C3%A9marre-mon-d%C3%A9veloppement-via-gitlab"&gt;
  &lt;/a&gt;
  Cas 1 : je démarre mon développement via GitLab
&lt;/h3&gt;

&lt;p&gt;Quand je démarre un développement, je créé ma branche à partir de l'issue GitLab, il y a un bouton pour créer une branche, et ça la rattachera à votre issue. Ici mon issue s'appelle : "Add new feature", et la branche va s'appeler automatiquement &lt;code&gt;add-new-feature&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Une fois la branche créée via GitLab, je veux tout simplement la récupérer et me placer sur cette branche.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#r%C3%A9cup%C3%A9ration-de-ma-branche"&gt;
  &lt;/a&gt;
  Récupération de ma branche
&lt;/h4&gt;

&lt;p&gt;Je récupère ma branche en local en faisant : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Je peux voir dans ma console, le nom de ma branche apparaître.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#se-d%C3%A9placer-sur-ma-branche"&gt;
  &lt;/a&gt;
  Se déplacer sur ma branche
&lt;/h4&gt;

&lt;p&gt;Pour commencer mon développement, je vais me déplacer sur ma branche. Je fais cette commande : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout add-new-feature&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cas-2-je-d%C3%A9marre-mon-d%C3%A9veloppement-%C3%A0-la-mano"&gt;
  &lt;/a&gt;
  Cas 2 : je démarre mon développement à la mano
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#r%C3%A9cup%C3%A9ration-des-modifications-du-projet"&gt;
  &lt;/a&gt;
  Récupération des modifications du projet
&lt;/h4&gt;

&lt;p&gt;Je fais la commande suivante :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#se-d%C3%A9placer-sur-la-branche-principale"&gt;
  &lt;/a&gt;
  Se déplacer sur la branche principale
&lt;/h4&gt;

&lt;p&gt;Je me place sur la branche principale de développement de mon projet. Pour me déplacer, j'utilise &lt;code&gt;git checkout&lt;/code&gt;. Ici, la branche principale de développement de mon projet s'appelle &lt;code&gt;main&lt;/code&gt;, donc je fais : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout main&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%C3%A9craser-la-branche-principale-pour-la-mettre-%C3%A0-jour"&gt;
  &lt;/a&gt;
  Écraser la branche principale pour la mettre à jour
&lt;/h4&gt;

&lt;p&gt;J'écrase la branche &lt;code&gt;main&lt;/code&gt; locale par la branche distante &lt;code&gt;main&lt;/code&gt; : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git reset --hard origin/main&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A partir de ce moment là, je sais que la branche &lt;code&gt;main&lt;/code&gt; locale est la même que la branche distante. Je m'assure ainsi de créer ma branche à partir de la branche principale à jour.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cr%C3%A9ation-de-ma-branche-et-se-d%C3%A9placer-sur-celleci"&gt;
  &lt;/a&gt;
  Création de ma branche et se déplacer sur celle-ci
&lt;/h4&gt;

&lt;p&gt;Je veux créer ma branche à partir de &lt;code&gt;main&lt;/code&gt; pour faire mon développement et me déplacer sur la branche créée. Je veux appeler ma branche &lt;code&gt;add-new-feature&lt;/code&gt;, je vais donc faire la commande suivante : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout -b add-new-feature&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#en-cours-de-d%C3%A9veloppement"&gt;
  &lt;/a&gt;
  En cours de développement
&lt;/h2&gt;

&lt;p&gt;Je développe sur ma branche, et une fois tout ou partie de mon développement terminé je fais les commandes suivantes :&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jajoute-mes-modifications"&gt;
  &lt;/a&gt;
  J'ajoute mes modifications
&lt;/h3&gt;

&lt;p&gt;J'ajoute toutes mes modifications, je fais : &lt;br&gt;
&lt;code&gt;git add .&lt;/code&gt; &lt;br&gt;
ou&lt;br&gt;
&lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#cas-1-je-commit-pour-la-premi%C3%A8re-fois"&gt;
  &lt;/a&gt;
  Cas 1 : je commit pour la première fois
&lt;/h3&gt;

&lt;p&gt;Je créé mon commit avec ce message &lt;code&gt;feat(example): add new feature&lt;/code&gt;. Je fais la commande suivante : &lt;br&gt;
&lt;code&gt;git commit -m "feat(example): add new feature"&lt;/code&gt;&lt;br&gt;
ou&lt;br&gt;
&lt;code&gt;git commit&lt;/code&gt; (va m'ouvrir l'éditeur de mon choix, vim par défaut)&lt;/p&gt;

&lt;p&gt;Si le &lt;strong&gt;Conventional-Changelog&lt;/strong&gt; ne vous dit rien, voici un &lt;a href="https://blog.stack-labs.com/code/devops_conventional_changelog/"&gt;article pour vous&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#cas-2-jajoute-des-modifications-%C3%A0-mon-commit-pr%C3%A9c%C3%A9dent"&gt;
  &lt;/a&gt;
  Cas 2 : j'ajoute des modifications à mon commit précédent
&lt;/h3&gt;

&lt;p&gt;Si je veux ajouter un développement supplémentaire sur ma branche,  je travaille en général avec un seul commit pour mon développement, donc j'utilise &lt;code&gt;git commit --amend&lt;/code&gt; :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit --amend&lt;/code&gt; &lt;br&gt;
ou&lt;br&gt;
 &lt;code&gt;git commit --amend --no-edit&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Je ne travaille pas avec des commits intermédiaire du genre :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;feat(example): add something
feat(example): delete something
feat(example): update something else
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pour ensuite "squash" ces commits pour avoir 1 seul commit :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;feat(example): add new feature
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Je fais un seul commit, mon commit final, et j'&lt;code&gt;amend&lt;/code&gt; ce commit pour n'avoir qu'un seul commit qui sera mergé sur la branche de développement. C'est une question d'habitude et de préférence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-la-fin-de-mon-d%C3%A9veloppement"&gt;
  &lt;/a&gt;
  A la fin de mon développement
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Prérequis si vous créez vos branches en local : configurez votre git avec cette commande pour ne pas avoir à préciser à chaque fois l'upstream : &lt;code&gt;git config --global push.default current&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#je-pousse-mes-modifications"&gt;
  &lt;/a&gt;
  Je pousse mes modifications
&lt;/h3&gt;

&lt;p&gt;Je fais cette commande pour pousser mon développement :&lt;br&gt;
&lt;code&gt;git push&lt;/code&gt;&lt;br&gt;
ou&lt;br&gt;
&lt;code&gt;git push --force-with-lease&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Si vous n'êtes pas familier avec l'option &lt;code&gt;--force-with-lease&lt;/code&gt;, je vous recommande &lt;a href="https://blog.stack-labs.com/code/git_force_with_lease/"&gt;cet article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mise-%C3%A0-jour-de-ma-branche-par-rapport-%C3%A0-la-branche-principale"&gt;
  &lt;/a&gt;
  Mise à jour de ma branche par rapport à la branche principale
&lt;/h3&gt;

&lt;p&gt;Dans le cas où la branche principale de développement à évoluée par rapport à ma branche de développement, je dois faire un &lt;code&gt;git rebase&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Je récupère toutes les modifications faites par les autres personnes de mon projet : &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Je mets à jour ma branche par rapport à &lt;code&gt;main&lt;/code&gt; (la branche principale).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git rebase origin/main&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Je gère les conflits éventuels via mon IDE pour plus de simplicité. Vous avez également des outils Git qui permettent de gérer les conflits plus facilement.&lt;/p&gt;

&lt;p&gt;Et ensuite je push quand j'ai terminé mon rebase :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push --force-with-lease&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;J'utilise également le rebase interactive &lt;code&gt;-i | --interactive&lt;/code&gt; pour certaines situations. C'est une option que je conseille de regarder même si je ne l'utilise qu'occasionnellement (&lt;a href="https://git-scm.com/docs/git-rebase"&gt;la doc du rebase&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#les-commandes-suppl%C3%A9mentaires"&gt;
  &lt;/a&gt;
  Les commandes supplémentaires
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#utilis%C3%A9es-occasionnellement"&gt;
  &lt;/a&gt;
  Utilisées occasionnellement
&lt;/h3&gt;

&lt;p&gt;Quand je veux voir l'historique des commits sur une branche :&lt;br&gt;
&lt;code&gt;git log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Quand je veux voir mes modifications en cours non commités : &lt;br&gt;
&lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Quand je veux sauvegarder un "brouillon" de mon développement en cours sur une branche :&lt;br&gt;
&lt;code&gt;git stash&lt;/code&gt;&lt;br&gt;
Quelques exemples de &lt;code&gt;stash&lt;/code&gt; sont listés &lt;a href="https://git-scm.com/docs/git-stash/fr#_exemples"&gt;ici&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#utilis%C3%A9es-rarement"&gt;
  &lt;/a&gt;
  Utilisées rarement
&lt;/h3&gt;

&lt;p&gt;Quand je démarre sur un nouveau projet : &lt;br&gt;
&lt;code&gt;git clone&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Quand je définis mon nom d'auteur et l'email associé :&lt;br&gt;
&lt;code&gt;git config --global user.name "Clara Belair"&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git config --global user.email clara.belair@example.com&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pourquoi-je-pr%C3%A9f%C3%A8re-raw-git-fetch-endraw-%C3%A0-raw-git-pull-endraw-pour-r%C3%A9cup%C3%A9rer-les-modifications-distantes-"&gt;
  &lt;/a&gt;
  Pourquoi je préfère &lt;code&gt;git fetch&lt;/code&gt; à &lt;code&gt;git pull&lt;/code&gt; pour récupérer les modifications distantes ?
&lt;/h2&gt;

&lt;p&gt;On me pose souvent la question pourquoi je fais un &lt;code&gt;git fetch&lt;/code&gt; au lieu d'un &lt;code&gt;git pull&lt;/code&gt;. Attention, ce ne sont pas des commandes équivalentes. Si vous faites un &lt;code&gt;git pull&lt;/code&gt;, par défaut, il y a un &lt;code&gt;merge&lt;/code&gt; qui est fait juste après le &lt;code&gt;fetch&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Voici la description de &lt;code&gt;git pull&lt;/code&gt; (&lt;a href="https://git-scm.com/docs/git-pull/fr"&gt;https://git-scm.com/docs/git-pull/fr&lt;/a&gt;) :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Intègre les modifications d’un dépôt distant dans la branche actuelle. Dans son mode par défaut, &lt;code&gt;git pull&lt;/code&gt; est l’abréviation de &lt;code&gt;git fetch&lt;/code&gt; suivi de &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt;."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pour éviter toute mauvaise surprise, je conseille donc de faire un &lt;code&gt;git fetch&lt;/code&gt; pour récupérer les modifications distantes. Ou alors soyez conscient des commandes exécutées derrière &lt;code&gt;git pull&lt;/code&gt; par défaut et de leurs conséquences sur votre branche actuelle.&lt;/p&gt;

</description>
      <category>git</category>
    </item>
    <item>
      <title>Memory Consumption In Linux</title>
      <author>Vu Dao</author>
      <pubDate>Fri, 09 Apr 2021 12:26:01 +0000</pubDate>
      <link>https://dev.to/vumdao/memory-consumption-in-linux-3b55</link>
      <guid>https://dev.to/vumdao/memory-consumption-in-linux-3b55</guid>
      <description>&lt;p&gt;&lt;em&gt;In the world of devops, there are many tools support us to monitor memory usage with metrics such Datadogs, Grafana, etc. but traditional people still asking for the knowledge and skills of monitoring Memory Consumption manually.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This article explains a reasonable method to measure memory consumption of a process on Linux. Linux is equipped with virtual memory management and, therefore, measuring the memory consumption of a single process is not as simple as most users think. This article explains what information you can get from each indicator related to memory consumption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Linux tools most commonly used are the &lt;strong&gt;VSZ (Virtual Memory Size)&lt;/strong&gt; and &lt;strong&gt;RSS (Resident Set Size)&lt;/strong&gt;, and the new one is &lt;strong&gt;PSS (Proportional set size)&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-this-document"&gt;
  &lt;/a&gt;
  What’s In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-Technical-Terms"&gt;Technical Terms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-VSZ-(Virtual-Memory-Size)-and-Demand-Paging"&gt;VSZ (Virtual Memory Size) and Demand Paging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-RSS-(Resident-Set-Size)-and-Shared-Libraries"&gt;RSS (Resident Set Size) and Shared Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-PSS-(Proportional-Set-Size)"&gt;PSS (Proportional Set Size)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Python-script-to-get-PSS-(Proportional-Set-Size)"&gt;Python script to get PSS (Proportional Set Size)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#technical-terms"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Technical Terms&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. page&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a block of memory that is used in memory management on Linux. One page is 4096 bytes in typical Linux systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. physical memory&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is the actual memory, typically the RAM, that is on the computer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3. virtual memory&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a memory space given to a process that lets the process think it has its own continuous memory that is isolated from other processes regardless of the actual memory amount on the computer or the situation of other processes memory consumption. A virtual memory page can be mapped to a physical memory page, and hence, processes only need to think about the virtual memory.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#vsz-virtual-memory-size-and-demand-paging"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;VSZ (Virtual Memory Size) and Demand Paging&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Considering the VSZ (virtual memory size) to measure memory consumption of a process does not make much sense. This is due to the feature called demand paging, which suppresses unnecessary memory consumption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, a text editor named emacs has functions that can handle XML files. These function, however, are not used all the time. Loading these functions on to the physical memory is not necessary when the user just wants to edit a plain text. The demand paging feature does not load pages unless they are used by the process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is how it works. First, when the program starts, Linux gives a virtual memory space to the process but does not actually load pages that have functions on to the physical memory. When the program actually calls a function in the virtual memory, the MMU in the CPU tells Linux that the page is not loaded. Then Linux pauses the process, loads the page on to the physical memory, maps the page to the virtual memory of the process, then lets the process run again from where it got paused. The process, therefore, does not need to know that it got paused, and just simply assume the function was loaded on the virtual memory and use it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VSZ (virtual memory size) describes the entire virtual memory size of the process regardless of pages being loaded on the actual memory or not. This is, therefore, not a realistic indicator to measure memory consumption since it includes pages that are not actually consumed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#rss-resident-set-size-and-shared-libraries"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;RSS (Resident Set Size) and Shared Libraries&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;RSS (Resident Set Size) describes the total amount of the pages for a process that are actually loaded on the physical memory. This may sound like the real amount of memory being consumed by the process, and is better than VSZ (virtual memory size), but it is not that simple due to the feature called shared libraries or dynamic linking libraries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A library is a module that can be used by programs to handle a certain feature. For example, libpng.so takes care of compressing and decompressing PNG image files, and libxml2.so takes care of handling XML files. Instead of making each programmer write these functions, they can use libraries developed by others and achieve the result they want.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A shared object is a library that can be shared by multiple programs or processes. For example, let's say there are two processes running at the same time that want to use XML handling functions that are in the shared library libxml2.so. Instead of loading the pages that have the exact same functions multiple times, Linux loads it once on to the physical memory and maps it to both processes virtual memory. Both processes do not need to care if they are sharing the functions with somebody else because they can access the functions and use them inside their own virtual memory. Due to this feature, Linux suppresses unnecessary duplication of memory pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, let us go back to the same example above. Emacs, a text editor, has functions that can handle XML files. This is taken care of by the shared library libxml2.so. This time, the user that is running emacs is actually working with XML files and emacs is using the functions in libxml2.so. Meanwhile, there are two more process running in the background that are using libxml2.so too. Since libxml2.so is a shared library, Linux only loads it once on the physical memory and maps it to all three processes virtual memory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you see the RSS (Resident Set Size) of emacs, it will include the pages of libxml2.so. This is not wrong because emacs is actually using it. But what about the other two processes? It is not just emacs that is using those functions. If you sum the RSS (Resident Set Size) of all three processes, libxml2.so will be counted three times even though it is only loaded on the physical memory once.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RSS (Resident Set Size), therefore, is an indicator that will show the memory consumption when the process is running by it self without sharing anything with other processes. For practical situations where libraries are being shared, RSS (Resident Set Size) will over estimate the amount of memory being consumed by the process. Using to measure memory consumption of a process is not wrong but you may want to keep in mind of this behaviour.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pss-proportional-set-size"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;PSS (Proportional Set Size)&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PSS (Proportional Set Size) is a relatively new indicator that can be used to measure memory consumption of a single process. It is not be available on all Linux systems yet but if it is available, it may come in handy. The concept is to split the memory amount of shared pages evenly among the processes that are using them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is how PSS (Proportional Set Size) calculates memory consumption: If there are N processes that are using a shared library, each process is consuming one N-th of the shared libraries pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For the example above, emacs and two other processes were sharing the pages of libxml2.so. Since there are three processes, PSS will consider each process is consuming one third of libxml2.so's pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I consider PSS (Proportional Set Size) as a more realistic indicator compared to RSS (Resident Set Size). It works well especially when you want to consider the memory consumption of an entire system all together, and not each process individually. For example, when you are developing a system that has multiple processes and daemons and you want to estimate how much memory you should install on the device, PSS (Proportional Set Size) works better than RSS (Resident Set Size).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#python-script-to-get-pss-proportional-set-size"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Python script to get PSS (Proportional Set Size&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/vumdao/pss-memory-get/pss.py"&gt;https://github.com/vumdao/pss-memory-get/pss.py&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#! /usr/bin/env python3
# coding: utf-8
##-----------------------------------------------------------------------------
## pss.py --- Print the PSS (Proportional Set Size) of accessable processes
##-----------------------------------------------------------------------------
import os, sys, re, pwd
from functools import cmp_to_key as cmp


##-----------------------------------------------------------------------------
def pss_main():
    '''
    Print the user name, pid, pss, and the command line for all accessable
    processes in pss descending order.
    '''
    # Get the user name, pid, pss, and the command line information for all
    # processes that are accessable. Ignore processes where the permission is
    # denied.
    ls = []   # [(user, pid, pss, cmd)]
    for pid in filter(lambda x: x.isdigit(), os.listdir('/proc')):
        try:
            ls.append((owner_of_process(pid), pid, pss_of_process(pid), cmdline_of_process(pid)))
        except IOError:
            pass

    # Calculate the max length of the user name, pid, and pss in order to
    # print them in aligned columns.
    userlen = 0
    pidlen = 0
    psslen = 0
    for (user, pid, pss, cmd) in ls:
        userlen = max(userlen, len(user))
        pidlen = max(pidlen, len(pid))
        psslen = max(psslen, len(str(pss)))

    # Get the width of the terminal.
    with os.popen('tput cols') as fp:
        term_width = int(fp.read().strip())

    # Print the information. Ignore kernel modules since they allocate memory
    # from the kernel land, not the user land, and PSS is the memory
    # consumption of processes in user land.
    fmt = '%%-%ds  %%%ds  %%%ds  %%s' % (userlen, pidlen, psslen)
    print(fmt % ('USER', 'PID', 'PSS', 'COMMAND'))
    for (user, pid, pss, cmd) in sorted(ls, key=cmp(lambda x, y: (y[2] - x[2]))):
        if cmd != '':
            print((fmt % (user, pid, pss, cmd))[:term_width - 1])


##-----------------------------------------------------------------------------
def pss_of_process(pid):
    '''
    Return the PSS of the process specified by pid in KiB (1024 bytes unit)

    @param pid  process ID
    @return     PSS value
    '''
    with open('/proc/%s/smaps' % pid) as fp:
        return sum([int(x) for x in re.findall('^Pss:\s+(\d+)', fp.read(), re.M)])


##-----------------------------------------------------------------------------
def cmdline_of_process(pid):
    '''
    Return the command line of the process specified by pid.

    @param pid  process ID
    @return     command line
    '''
    with open('/proc/%s/cmdline' % pid) as fp:
        return fp.read().replace('\0', ' ').strip()


##-----------------------------------------------------------------------------
def owner_of_process(pid):
    '''
    Return the owner of the process specified by pid.

    @param pid  process ID
    @return     owner
    '''
    try:
        owner_pid = pwd.getpwuid(os.stat('/proc/%s' % pid).st_uid).pw_name
    except Exception:
        return 'docker'
    return owner_pid


##-----------------------------------------------------------------------------
if __name__ == '__main__':
    pss_main()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to run&lt;br&gt;
&lt;code&gt;sudo python pss.py&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the server/instance running &lt;code&gt;docker&lt;/code&gt; then it would show userID &lt;code&gt;999&lt;/code&gt; &lt;a href="https://stackoverflow.com/questions/55241474/why-docker-compose-creates-directories-files-with-usergroup-999999"&gt;ref&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://web.archive.org/web/20120520221529/http://emilics.com/blog/article/mconsumption.html"&gt;Refs&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;🌠 Blog&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/"&gt;Github&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://vumdao.hashnode.dev/"&gt;Web&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter 🌠&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>linux</category>
      <category>devops</category>
      <category>cloudopz</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Get your streak on...!</title>
      <author>Travis Elkins</author>
      <pubDate>Fri, 09 Apr 2021 12:24:58 +0000</pubDate>
      <link>https://dev.to/r4nkt/get-your-streak-on-3fc6</link>
      <guid>https://dev.to/r4nkt/get-your-streak-on-3fc6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#get-your-streak-on"&gt;
  &lt;/a&gt;
  Get your streak on...! 🚀
&lt;/h3&gt;

&lt;p&gt;While this feature wasn't considered necessary for r4nkt's initial release, it was always considered a must-have. Well, over the last week, initial support for streaks has been deployed to production. This makes it very easy for you to define achievement criteria in terms of streaks.&lt;/p&gt;

&lt;p&gt;We are very excited to have rolled this functionality out and hope that you and your users will enjoy the new possibilities that are now available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-streaks"&gt;
  &lt;/a&gt;
  What are streaks? 🤔
&lt;/h3&gt;

&lt;p&gt;In terms of r4nkt achievement criteria, a streak is when a player has performed some sort of action(s) over a consecutive series of time intervals. Some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A salesperson has closed at least one sale for 10 days in a row.&lt;/li&gt;
&lt;li&gt;A student has passed the daily quiz 5 days in a row.&lt;/li&gt;
&lt;li&gt;A user has walked at least 100 steps 8 hours in a row. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work? 😯
&lt;/h3&gt;

&lt;p&gt;R4nkt's streaks are defined on the individual criteria. The criterion resource has a new property: &lt;code&gt;streak&lt;/code&gt;. Like similar properties, it takes a string that matches the following pattern: &lt;code&gt;interval:amount&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;interval&lt;/code&gt; can be one of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;days&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hours&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both require an amount, which indicates the number of days or hours that the streak should be.&lt;/p&gt;

&lt;p&gt;So, if we take some of the examples from above, we can see how easy it is to define streaks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;days:10&lt;/code&gt;: 10 days in a row.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;days:5&lt;/code&gt;: 5 days in a row.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hours:8&lt;/code&gt;: 8 hours in a row. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Very simple and straightforward...! 🤓&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#take-it-to-the-next-level"&gt;
  &lt;/a&gt;
  Take it to the next level
&lt;/h3&gt;

&lt;p&gt;For many, the basic use of streak criteria will be sufficient, but when you combine them with &lt;a href="https://docs.r4nkt.com/concepts/criteria-conditions"&gt;criteria conditions&lt;/a&gt; and &lt;a href="https://docs.r4nkt.com/concepts/custom-data-reference"&gt;custom data references&lt;/a&gt;, then you can really start to come up with very complex and interesting achievements. There are &lt;strong&gt;so&lt;/strong&gt; many possibilities...! 😃&lt;/p&gt;

&lt;p&gt;Imagine that you develop an e-learning application or service and your students are allowed to take a daily quiz. You could define an achievement for students that pass the daily quiz by 95% or more for three straight days.&lt;/p&gt;

&lt;p&gt;To do so, you would need your achievement, which we'll call &lt;a href="https://en.wikipedia.org/wiki/Triple_(baseball)"&gt;The Triple&lt;/a&gt;, your primary &lt;a href="https://docs.r4nkt.com/concepts/criteria-groups"&gt;criteria group&lt;/a&gt;, and a single &lt;a href="https://docs.r4nkt.com/concepts/criteria"&gt;criterion&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You'll also have an &lt;a href="https://docs.r4nkt.com/concepts/actions"&gt;action&lt;/a&gt;, which might be called Pass Quiz and give a custom ID of &lt;code&gt;pass.quiz&lt;/code&gt;. You will &lt;a href="https://docs.r4nkt.com/concepts/activities"&gt;report it&lt;/a&gt; whenever a player passes a quiz. And, you'll want to pass the result in the activity's custom data, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"custom_data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"result"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, your criterion will have the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;custom_action_id&lt;/code&gt;: &lt;code&gt;pass.quiz&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rule&lt;/code&gt;: &lt;code&gt;gte:1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;streak&lt;/code&gt;: &lt;code&gt;days:3&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These properties let r4nkt know that the criterion is met when the player has passed at least one quiz each day for three (or more) consecutive days.&lt;/p&gt;

&lt;p&gt;But what if they don't get a result of 95 or more...?&lt;/p&gt;

&lt;p&gt;Well, that's where criteria conditions come into play. For this scenario, you'll have a criteria condition on either your criteria group or your criterion with the following definition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"conditions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"groups"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"conditions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"activityData:result,gte,95"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, by defining the &lt;code&gt;activityData&lt;/code&gt; criteria condition, you make sure that only activities that have a custom data &lt;code&gt;result&lt;/code&gt; of 95 or greater will be considered. This is applied and then the criterion's rule and streak are considered. That is, once all "Pass Quiz" activities for the player that did &lt;em&gt;not&lt;/em&gt; meet the criteria conditions (result &amp;gt;= 95) have been filtered out, then r4nkt will look to see if at least one such activity exists per day for three (or more) consecutive days.&lt;/p&gt;

&lt;p&gt;That's pretty great, don't you think. 😜&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-want-to-learn-more"&gt;
  &lt;/a&gt;
  I want to learn more
&lt;/h3&gt;

&lt;p&gt;You can check out &lt;a href="https://docs.r4nkt.com/concepts/criteria#streak"&gt;our ever-improving documentation&lt;/a&gt; or you can also join our &lt;a href="https://discord.gg/3gMfd3eyHY"&gt;Discord server&lt;/a&gt; and ask for help or make suggestions. ⚡️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coming-soon"&gt;
  &lt;/a&gt;
  Coming Soon
&lt;/h3&gt;

&lt;p&gt;There are still more streak-related features that are in the pipeline. Obviously, we're going to expand the available time intervals and you will soon have the ability to define streaks in terms of the following time intervals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;weekly&lt;/li&gt;
&lt;li&gt;monthly&lt;/li&gt;
&lt;li&gt;yearly&lt;/li&gt;
&lt;li&gt;minutely...? 😜&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More may be added, but we'll allow your needs to drive those efforts. 🤓&lt;/p&gt;

&lt;p&gt;If you want to be notified when these new features are added, if you'd like to suggest one, or if you'd just like to be kept abreast of what we're doing, then &lt;a href="https://twitter.com/r4nkt"&gt;follow us on twitter&lt;/a&gt;. We'll keep you posted. 😎&lt;/p&gt;

</description>
      <category>saas</category>
      <category>gamification</category>
      <category>achievements</category>
      <category>startup</category>
    </item>
    <item>
      <title>Spring Native: Spring Boot but faster</title>
      <author>Antonio Moreno</author>
      <pubDate>Fri, 09 Apr 2021 12:16:43 +0000</pubDate>
      <link>https://dev.to/antmordel/spring-native-spring-boot-but-faster-4o5h</link>
      <guid>https://dev.to/antmordel/spring-native-spring-boot-but-faster-4o5h</guid>
      <description>&lt;p&gt;While you are reading these lines, there are a few hundreds of Spring Boot applications struggling to load a JVM and start.&lt;/p&gt;

&lt;p&gt;Yet others are running but consuming a huge amount of memory since a JVM needs to be running - supporting the application that is running on top.&lt;/p&gt;

&lt;p&gt;And adding this latency and resource consumption to a more Cloud Native world is just something that... It's NOT a match!&lt;/p&gt;

&lt;p&gt;Some developers just abandoned the idea of using Spring Boot in a world conquered by containers. And they moved far to those battles with Golang. Others stayed with Java, but in another flavour, like Quarkus or Micronaut (i.e. GraalVM powered).&lt;/p&gt;

&lt;p&gt;But in March 2021, something happened in the community of Spring Boot users, and that was the release of the beta program of &lt;a href="https://spring.io/blog/2021/03/11/announcing-spring-native-beta"&gt;Spring Native&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What it was slow and resource consuming 🚚:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tha_L8sx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/antmordel/bookend/main/docs/assets/docker-jvm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tha_L8sx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/antmordel/bookend/main/docs/assets/docker-jvm.gif" alt="bookend-jvm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now is... just awesome 🚀:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lnh5vtAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/antmordel/bookend/main/docs/assets/docker-native.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnh5vtAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/antmordel/bookend/main/docs/assets/docker-native.gif" alt="bookend-jvm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why? Spring Boot applications can be now be compiled using GraalVM. I.e., it can be compiled to &lt;strong&gt;native code&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Image size for an example project can go from ~170MB to ~60MB&lt;/li&gt;
&lt;li&gt;RAM memory consumption can go from ~172MB to ~30MB&lt;/li&gt;
&lt;li&gt;Start-up times can go from 2 seconds to 70 milliseconds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seems awesome.&lt;/p&gt;

&lt;p&gt;I've written a small example that you can take a look and comment on that 🙂&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/antmordel"&gt;
        antmordel
      &lt;/a&gt; / &lt;a href="https://github.com/antmordel/bookend"&gt;
        bookend
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Spring Native Starter App. Spring Boot, just faster.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
🚀 Bookend: Spring Native Starter app&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Example Spring Boot REST application using Spring Native&lt;/li&gt;
&lt;li&gt;Spring Boot, Java 11, Lombok&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Provided a comparison between JVM image build and GraalVM image build.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Spring Native&lt;/strong&gt; ⏳ &lt;code&gt;0.067 seconds&lt;/code&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/antmordel/bookend/main/./docs/assets/docker-native.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUJrhAMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/antmordel/bookend/main/./docs/assets/docker-native.gif" width="1200" alt="Execution for Spring Native"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using the JVM&lt;/strong&gt; ⏳ &lt;code&gt;2.112 seconds&lt;/code&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/antmordel/bookend/main/./docs/assets/docker-jvm.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWfE3StD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/antmordel/bookend/main/./docs/assets/docker-jvm.gif" width="1200" alt="Execution for Spring on top of the JVM"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Get started&lt;/h2&gt;
&lt;h3&gt;
Create the image locally&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;./mvnw clean spring-boot:build-image&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Running the just created local image&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -p 8080:8080 bookend-native:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or just&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/antmordel/bookend"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;And if you are Spanish, I've explained all this in a more multimedia format:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DK2OpCoU6NU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Thanks for reading. I appreciate your comments ❤️.&lt;/p&gt;

</description>
      <category>springboot</category>
      <category>spring</category>
      <category>graalvm</category>
    </item>
    <item>
      <title>Solving the FizzBuzz Interview Question with JavaScript</title>
      <author>Rithik Samanthula</author>
      <pubDate>Fri, 09 Apr 2021 11:59:31 +0000</pubDate>
      <link>https://dev.to/code2rithik/solving-the-fizzbuzz-interview-question-with-javascript-fl</link>
      <guid>https://dev.to/code2rithik/solving-the-fizzbuzz-interview-question-with-javascript-fl</guid>
      <description>&lt;p&gt;Hey There!&lt;/p&gt;

&lt;p&gt;When I was a kid everyone used to play a game called FizzBuzz. I personally loved playing it with my family members.&lt;/p&gt;

&lt;p&gt;Anyways, the game goes like this:&lt;/p&gt;

&lt;p&gt;1, 2, fizz, 4, Buzz, fizz, 7, 8, fizz, Buzz&lt;/p&gt;

&lt;p&gt;For every multiple of 3. you have to replace it with Fizz.&lt;/p&gt;

&lt;p&gt;For every multiple of 5, you have to replace it with Buzz.&lt;/p&gt;

&lt;p&gt;Now, during web development interviews, the most common question that interviewers ask are: "Write a program in JavaScript that prints the order of FizzBuzz"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAAfUeTZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu8rxsfl3yctppsyt24u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAAfUeTZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu8rxsfl3yctppsyt24u.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in this donut chart, 90% of the interviewees fail and 10% pass to do so.&lt;/p&gt;

&lt;p&gt;Don't want to be part of that 90%?&lt;/p&gt;

&lt;p&gt;Today, we will be learning how to write a program that prints FizzBuzz in JavaScript.&lt;/p&gt;

&lt;p&gt;First, create a variable called output, and set it to an empty array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, create a function called fizzBuzz and create a for if condition wrapped around a for loop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fizzBuzz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

 &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then type this in the for and if commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fizzBuzz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

 &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FizzBuzz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, use &lt;code&gt;else if&lt;/code&gt; statements. Like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fizz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Buzz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These else and else if should still be in the fizzbuzz function.&lt;/p&gt;

&lt;p&gt;Finally, console log the output by using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how the final code should look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fizzBuzz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

 &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FizzBuzz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fizz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Buzz&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;



&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Test the output by running the JS Code in the console.&lt;/p&gt;

&lt;p&gt;To run the code, paste the code and hit enter. Then, use &lt;code&gt;fizzBuzz();&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you get an output like this, then HOORAY! It works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6bmr3fxw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01x4h8p6wo4wo5hfmud0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6bmr3fxw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01x4h8p6wo4wo5hfmud0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you've learned how to solve the FizzBuzz challenge and you will not be part of the 90% anymore!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h1&gt;

&lt;p&gt;Here is an alternate and easier way to solve the FizzBuzz challenge:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4CqgjZxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5gglt8za6d0jyh7mrv2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CqgjZxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5gglt8za6d0jyh7mrv2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading and remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All 👨🏻‍💻
&lt;/h1&gt;

</description>
      <category>fizzbuzz</category>
      <category>javascript</category>
      <category>challenge</category>
      <category>solve</category>
    </item>
    <item>
      <title>FREE And Useful Resources for Web Development in 2021⚡</title>
      <author>Satish Naikawadi</author>
      <pubDate>Fri, 09 Apr 2021 11:59:04 +0000</pubDate>
      <link>https://dev.to/satishnaikawadi2001/free-and-useful-resources-for-web-development-in-2021-53in</link>
      <guid>https://dev.to/satishnaikawadi2001/free-and-useful-resources-for-web-development-in-2021-53in</guid>
      <description>&lt;h2&gt;
  &lt;a href="#fontjoy"&gt;
  &lt;/a&gt;
  &lt;a href="https://fontjoy.com/"&gt;Fontjoy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bsaVyXYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dha8jicow6vus5eavaxu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bsaVyXYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dha8jicow6vus5eavaxu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Fontjoy helps designers choose the best font combinations. Mix and match different fonts for the perfect pairing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#freehtml5"&gt;
  &lt;/a&gt;
  &lt;a href="https://freehtml5.co/"&gt;FreeHTML5&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVgtew8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7oo41kcdsjko08b3iqxz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVgtew8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7oo41kcdsjko08b3iqxz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;FreeHTML5&lt;/strong&gt; is dedicated to provide extraordinary and premium-like free html5 bootstrap templates for web designers and developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-fonts"&gt;
  &lt;/a&gt;
  &lt;a href="https://fonts.google.com/"&gt;Google Fonts&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4jmLijGk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x1v05r48h512lvqwcve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4jmLijGk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x1v05r48h512lvqwcve.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Google Fonts makes it easy to bring personality and performance to your websites and products. Our robust catalog of open-source fonts and icons, makes it easy to integrate expressive type and icons seamlessly—no matter where you are in the world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coolors"&gt;
  &lt;/a&gt;
  &lt;a href="https://coolors.co/"&gt;Coolors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WeZmVxtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p363tklo4rmyc4ray22u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WeZmVxtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p363tklo4rmyc4ray22u.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Coolors is the essential tool for creating and collecting color palettes. It allows you to generate perfect matching colors in seconds. Even if you are not so skilled in design!&lt;br&gt;
All you have to do is pressing the spacebar to generate a random color palette, click on the color you like to lock it and repeat both actions until you get the results you need.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uigradients"&gt;
  &lt;/a&gt;
  &lt;a href="https://uigradients.com/"&gt;uiGradients&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p6jEYHJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnjoot59kjlppkqzcbz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6jEYHJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnjoot59kjlppkqzcbz1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
A handpicked collection of beautiful color gradients for designers and developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shadeswash"&gt;
  &lt;/a&gt;
  &lt;a href="https://shadeswash.netlify.app/"&gt;ShadeSwash&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kbJz4EBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6edvjl1bqjbk9gip13p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kbJz4EBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6edvjl1bqjbk9gip13p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Never waste time trying to find the right shade of a color again. With ShadeSwash, every shade you'll ever need is just a click away.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flaticon.com/"&gt;FlatIcon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H308PcUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htt2c268ujyd6av2fq0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H308PcUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htt2c268ujyd6av2fq0z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The largest database of free customizable icons in the world. Flaticon has millions of icons in all formats for all kinds of projects: presentations, apps, websites, catalogs, infographics, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#faviconio"&gt;
  &lt;/a&gt;
  &lt;a href="https://favicon.io/"&gt;Favicon.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mz3UZtiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38awtksn0lwuzsi7banq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mz3UZtiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38awtksn0lwuzsi7banq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
If you already have an image or logo that you want to use for your favicon then use this tool to convert your image to the proper favicon format. If you don't have a logo or image for your website and want to generate a favicon from scratch then use this tool to generate your favicon.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pixabay"&gt;
  &lt;/a&gt;
  &lt;a href="https://pixabay.com/"&gt;Pixabay&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xe1N_-0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wv0c6jncmgvn7ded87h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xe1N_-0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wv0c6jncmgvn7ded87h1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Pixabay is a vibrant community of creatives, sharing copyright free images, videos and music.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#device-shots"&gt;
  &lt;/a&gt;
  &lt;a href="https://deviceshots.com/"&gt;Device Shots&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZasjAQPq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jajcxuk6gonsbnkgsol8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZasjAQPq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jajcxuk6gonsbnkgsol8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Easily design device mockups for presentations or to share on social platforms. Choose between phones, tablets, computers, watches and displays.&lt;/p&gt;

&lt;p&gt;And that is it for this article. You can visit &lt;a href="https://satishnaikawadi.me/posts"&gt;satishnaikawadi.me&lt;/a&gt; for more articles related to programming.Thanks for reading 😇 .&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Spice up your console logs with styling</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 09 Apr 2021 11:46:30 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/spice-up-your-console-logs-with-styling-3moj</link>
      <guid>https://dev.to/dailydevtips1/spice-up-your-console-logs-with-styling-3moj</guid>
      <description>&lt;p&gt;Sometimes normal console logs just don't cut it. You might want to warn people to not paste random scripts they found online like Facebook.&lt;/p&gt;

&lt;p&gt;Or maybe you want to hire them and shout in the console to potential devs?&lt;/p&gt;

&lt;p&gt;Whatever your reasons might be, you can spice up your console logs with some styling!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrzboHhU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617635687647/cXhhoSijg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrzboHhU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617635687647/cXhhoSijg.png" alt="Facebook console log styled"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-some-styles-to-our-console-logs"&gt;
  &lt;/a&gt;
  Adding some styles to our console logs
&lt;/h2&gt;

&lt;p&gt;To get right in, there are several specifiers we can use in the front of our console logs to state whatever it should render.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;%s&lt;/code&gt;: Format as a string&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;%i&lt;/code&gt;/&lt;code&gt;%d&lt;/code&gt;: Format as integer&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;%f&lt;/code&gt;: Format as a float&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;%o&lt;/code&gt;: Format as expendable DOM element&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;%O&lt;/code&gt;: Format as an expendable JavaScript element&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;%c&lt;/code&gt;: Apply CSS rules (taken from the second parameter)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today we will be focussing on the last rule.&lt;/p&gt;

&lt;p&gt;It looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%cI'm blue, da ba dee da ba daa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color: blue;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will result in the following.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZC6sS7o0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617635319039/yruRiKwqe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZC6sS7o0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617635319039/yruRiKwqe.png" alt="Styled console logs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But that's not all. You can write as many rules of CSS as you like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%cI'm so super stylish&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color: #bc2e1e; font-size: 2rem; background: #edde9c; text-shadow: 0 1px 0px #378ab4, 1px 0 0px #5dabcd, 1px 2px 1px #378ab4, 2px 1px 1px #5dabcd, 2px 3px 2px #378ab4, 3px 2px 2px #5dabcd, 3px 4px 2px #378ab4, 4px 3px 3px #5dabcd, 4px 5px 3px #378ab4, 5px 4px 2px #5dabcd, 5px 6px 2px #378ab4, 6px 5px 2px #5dabcd, 6px 7px 1px #378ab4, 7px 6px 1px #5dabcd, 7px 8px 0px #378ab4, 8px 7px 0px #5dabcd;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it will give us this result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rhXskr8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617635620678/srmxcef5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rhXskr8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617635620678/srmxcef5q.png" alt="Fully styled console log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the possibilities are endless, maybe even over the top!&lt;/p&gt;

&lt;p&gt;But it might help you to make your console logs just a bit more appealing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>testing</category>
    </item>
    <item>
      <title>How to deal with  Missing Values in Machine Learning</title>
      <author>atultyagi612</author>
      <pubDate>Fri, 09 Apr 2021 11:15:48 +0000</pubDate>
      <link>https://dev.to/atultyagi612/how-to-deal-with-missing-values-in-machine-learning-hjo</link>
      <guid>https://dev.to/atultyagi612/how-to-deal-with-missing-values-in-machine-learning-hjo</guid>
      <description>&lt;p&gt;When you work on real-world data it is often to have lots of missing values. There is much cause of missing data may be People do not respond to specific questions in the survey, Data entry errors, The individual drops out before sampling or many more reasons. The handling of data is very important during the preprocessing of the dataset because most machine learning algorithms do not support missing values.&lt;/p&gt;

&lt;p&gt;In this article, I try to cover many ways to handle missing values in the dataset.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variable Deletion&lt;/li&gt;
&lt;li&gt;Replacing missing values with Mean/Median/Mode

&lt;ul&gt;
&lt;li&gt;Impute missing values for continuous variable&lt;/li&gt;
&lt;li&gt;Impute missing values for categorical variable&lt;/li&gt;
&lt;li&gt;Assigning An Unique Category&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Predicting The Missing Values&lt;/li&gt;
&lt;li&gt;Using Algorithms that Support missing values&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-variable-deletion"&gt;
  &lt;/a&gt;
  1. Variable Deletion
&lt;/h2&gt;

&lt;p&gt;This method commonly used to handle the null values. In this variable Deletion method, we delete a whole column with missing values and it depends on case to case. We use this method only when there are lots of missing values in a particular column than variables. Let's see it with an example&lt;/p&gt;

&lt;p&gt;For this example, we are going to use the famous Kaggle dataset &lt;a href="https://www.kaggle.com/c/house-prices-advanced-regression-techniques"&gt;house price prediction&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data=pd.read_csv('house_price.csv')
total = data.isnull().sum().sort_values(ascending=False)
percent =total/len(data)*100
pd.concat([total,percent], axis=1, keys=['Total','Percent']).head(5)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3dMlgQvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iku643fhi64cmbnzyg7e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3dMlgQvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iku643fhi64cmbnzyg7e.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Here you can clearly see that 4 columns have Null values higher than 80% so it is good to drop those columns from our data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data=data[data.columns[data.isnull().mean() &amp;lt; 0.80]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also drop specific rows with a higher number of missing values. This may increase the accuracy of your model rather than filling these columns. This is beneficial only when you have a large amount of data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data.isnull().sum(axis=1).sort_values(ascending=False).head()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLgGVMT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ame17io2w1z7zm4vwth.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLgGVMT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ame17io2w1z7zm4vwth.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Complete removal of data with missing values results in a robust and highly accurate model if it does not have a high weightage. But if the column has a high correlation with the output we recommend not to delete it because it may lead to less accuracy and Loss of a lot of information.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-replacing-missing-values-with-meanmedianmode"&gt;
  &lt;/a&gt;
  2. Replacing missing values with Mean/Median/Mode
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#impute-missing-values-for-continuous-variable"&gt;
  &lt;/a&gt;
  Impute missing values for continuous variable
&lt;/h4&gt;

&lt;p&gt;This is another common technique use to handle missing data. In this method we replace missing values of numerical data like age, a salary of a person with the mean/median of the column, that's why it can prevent the loss of data compared to the previous method.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15u2-ICs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scee8g54p46tgz7fwur9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15u2-ICs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scee8g54p46tgz7fwur9.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# The missing values are replaced by the mean value 
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MSSubClass'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MSSubClass'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MSSubClass'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#impute-missing-values-for-categorical-variable"&gt;
  &lt;/a&gt;
  Impute missing values for categorical variable
&lt;/h4&gt;

&lt;p&gt;The above code is only for numerical values for catagirical values we replacing the missing values with the maximum occurred value in a feature.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0rPqKsN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4xsqoug3x8y2cdrp5et.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0rPqKsN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4xsqoug3x8y2cdrp5et.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# The missing values are replaced by the median value.
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SaleCondition'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SaleCondition'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SaleCondition'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#assigning-an-unique-category"&gt;
  &lt;/a&gt;
  Assigning An Unique Category
&lt;/h4&gt;

&lt;p&gt;If the number of missing values is very large then it can be replaced with a new category. Let's understand it with an example&lt;br&gt;
For this example, we are going to use the &lt;a href="https://www.kaggle.com/c/titanic"&gt;Titanic&lt;/a&gt; dataset from Kaggle.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Read data from CSV
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'titanic.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Cabin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4OfCVp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y33as35jbc5b6rdmhy77.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4OfCVp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y33as35jbc5b6rdmhy77.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Replace null values with New category 'U'
&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Cabin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Cabin'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'U'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Cabin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lByAcie3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bw2378xnrf5ujvke2a9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lByAcie3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bw2378xnrf5ujvke2a9.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This method is an approximation that may lead to variance in our data but it is better than dropping a whole column/row that's why it Prevent data loss and work better with a small dataset. this method works better on linear data but may cause data leakage.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-predicting-the-missing-values"&gt;
  &lt;/a&gt;
  3. Predicting The Missing Values
&lt;/h2&gt;

&lt;p&gt;In this method, we use the features which have not null values and train a model to predict missing values. This method may give us better accuracy than replacing it with the mean/mode/median if the null values are less. let see it with an example.&lt;/p&gt;

&lt;p&gt;In this example, we are going to Kaggle the Stroke dataset and train a RandomForestRegressor model using other available features to predict the missing values in 'bmi' feature.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Load dataset 
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'healthcare-dataset-stroke-data.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Find Column with null values
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIaN3hnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fr4k8y5vgeyrg58ixfmt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIaN3hnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fr4k8y5vgeyrg58ixfmt.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Predict null values and replace null values with predicted values in data
&lt;/span&gt;&lt;span class="n"&gt;data1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;span class="n"&gt;data2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;span class="n"&gt;temp1_Y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;temp1_X&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;temp2_X&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.ensemble&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RandomForestRegressor&lt;/span&gt;
&lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;RandomForestRegressor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp1_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;temp1_Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp2_X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;])):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'bmi'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It gives a better result than earlier methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-using-algorithms-that-support-missing-values"&gt;
  &lt;/a&gt;
  4. Using Algorithms that Support missing values
&lt;/h2&gt;

&lt;p&gt;All the machine learning algorithms don’t support missing values but some may. The k-nearest neighbors (KNN) algorithm is a simple, supervised machine learning algorithm that can be used to solve both classification and regression problems. It works on the principle of a distance measure that's why it can ignore a column when a value is missing. Naive Bayes can also support missing values when making a prediction. But in python, The sklearn implementations of naive Bayes and k-Nearest Neighbors do not support missing values. In these both algorithms you no need to handle missing values in each column as ML algorithms will handle them efficiently&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, I discuss many ways to deal with missing values and I try my best to explain these methods but there is no perfect method to handle missing data, all the methods give the best performance on different conditions depend on data. now let it stop here I hope you find this article useful and able to learn new things from it.&lt;/p&gt;

&lt;p&gt;Thank you for reading👏&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Country Code to Flag Emoji </title>
      <author>Jorik</author>
      <pubDate>Fri, 09 Apr 2021 11:03:21 +0000</pubDate>
      <link>https://dev.to/jorik/country-code-to-flag-emoji-a21</link>
      <guid>https://dev.to/jorik/country-code-to-flag-emoji-a21</guid>
      <description>&lt;p&gt;Instead of showing boring country codes like US, CH, NL, it is much nicer to show the flag emojis, 🇺🇸 🇨🇭 and 🇳🇱, right? This isn't hard to do with some JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getFlagEmoji&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;countryCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;codePoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;countryCode&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="mh"&gt;0x1F1E6&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCodePoint&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;codePoints&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The flag emoji is a combination of the two characters, starting at unicode position &lt;code&gt;0x1F1E6&lt;/code&gt; for the letter A. For CH (Switzerland), we want the output to be &lt;code&gt;0x1F1E9 0x1F1ED&lt;/code&gt;. These are hexadecimal numbers, which we can compute just like decimal numbers.&lt;/p&gt;

&lt;p&gt;Run down of what happens in this little function;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, uppercase the country code input.&lt;/li&gt;
&lt;li&gt;Split into an array, to iterate over each character.&lt;/li&gt;
&lt;li&gt;Receive the UTF-16 index from the character using &lt;code&gt;charCodeAt&lt;/code&gt;. We substract the index from the letter A (A = 65) from the returned index to get the index of the character in the alphabet (A = 0). Now, simply add this to the flag starting index (&lt;code&gt;0x1F1E6&lt;/code&gt;) and return this value.&lt;/li&gt;
&lt;li&gt;Finally, the &lt;code&gt;String.fromCodePoint&lt;/code&gt; function will return the emoji characters for the computed indexes.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getFlagEmoji&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;US&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;🇺🇸&lt;/span&gt;
&lt;span class="nx"&gt;getFlagEmoji&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;🇳🇱&lt;/span&gt;
&lt;span class="nx"&gt;getFlagEmoji&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CH&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;🇨🇭&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instant flags without additional resources!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Inspired by the &lt;a href="https://dev.to/younginnovations/get-instant-country-flags-22pe"&gt;Get Instant Country Flags&lt;/a&gt; post.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
