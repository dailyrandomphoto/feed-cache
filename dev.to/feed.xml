<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build a REST API with Golang and MongoDB - Fiber Version</title>
      <author>Demola Malomo</author>
      <pubDate>Mon, 03 Jan 2022 07:20:12 +0000</pubDate>
      <link>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-fiber-version-4la0</link>
      <guid>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-fiber-version-4la0</guid>
      <description>&lt;p&gt;Representational state transfer (REST) is an architectural pattern that guides an Application programming interface(API) design and development. REST APIs have become the standard of communication between the server part of the product and its client to increase performance, scalability, simplicity, modifiability, visibility, portability, and reliability.&lt;/p&gt;

&lt;p&gt;This post will discuss building a user management application with Golang using the &lt;a href="https://github.com/gofiber/fiber"&gt;Fiber&lt;/a&gt; framework and &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;. At the end of this tutorial, we will learn how to structure a Fiber application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;Fiber is an &lt;a href="https://github.com/expressjs/express"&gt;Express&lt;/a&gt; inspired HTTP web framework written in Golang with performance and zero memory allocation support. Fiber is built on top of &lt;a href="https://github.com/valyala/fasthttp"&gt;Fasthttp&lt;/a&gt;, an HTTP engine written in Golang.&lt;/p&gt;

&lt;p&gt;MongoDB is a document-based database management program used as an alternative to relational databases. MongoDB supports working with large sets of distributed data with options to store or retrieve information seamlessly.&lt;/p&gt;

&lt;p&gt;You can find the complete source code in this &lt;a href="https://github.com/Mr-Malomz/fiber-mongo-api"&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;The following steps in this post require Golang experience. Experience with MongoDB isn’t a requirement, but it’s nice to have.&lt;/p&gt;

&lt;p&gt;We will also be needing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://www.mongodb.com/"&gt;MongoDB account&lt;/a&gt; to host database. &lt;a href="https://www.mongodb.com/cloud/atlas/register"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com/downloads/"&gt;Postman&lt;/a&gt; or any API testing application of your choice&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let’s code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;To get started, we need to navigate to the desired directory and run the command below in our terminal &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir fiber-mongo-api &amp;amp;&amp;amp; cd fiber-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command creates a  &lt;code&gt;fiber-mongo-api&lt;/code&gt; folder and navigates into the project directory.&lt;/p&gt;

&lt;p&gt;Next, we need to initialize a Go module to manage project dependencies by running the command below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init fiber-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command will create a &lt;code&gt;go.mod&lt;/code&gt; file for tracking project dependencies.&lt;/p&gt;

&lt;p&gt;We proceed to install the required dependencies with:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get -u github.com/gofiber/fiber/v2 go.mongodb.org/mongo-driver/mongo github.com/joho/godotenv github.com/go-playground/validator/v10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;github.com/gofiber/fiber/v2&lt;/code&gt; is a framework for building web application.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go.mongodb.org/mongo-driver/mongo&lt;/code&gt; is a driver for connecting to MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/joho/godotenv&lt;/code&gt; is a library for managing environment variable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; is a library for validating structs and fields.&lt;/p&gt;

&lt;p&gt;After installing the required dependencies, we might get &lt;code&gt;github.com/klauspost/compress is not in your go.mod filego mod tidy&lt;/code&gt; error in &lt;code&gt;go.mod&lt;/code&gt; file. To fix this, we need to manually install the required package with&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get github.com/klauspost/compress
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#application-entry-point"&gt;
  &lt;/a&gt;
  Application Entry Point
&lt;/h2&gt;

&lt;p&gt;With the project dependencies installed, we need to create &lt;code&gt;main.go&lt;/code&gt; file in the root directory and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Initialize a Fiber application using the &lt;code&gt;New&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;Get&lt;/code&gt; function to route to &lt;code&gt;/&lt;/code&gt; path and an handler function that returns a JSON of &lt;code&gt;Hello from Fiber &amp;amp; mongoDB&lt;/code&gt;. &lt;code&gt;fiber.Map&lt;/code&gt; is a shortcut for &lt;code&gt;map[string]interface{}&lt;/code&gt;, useful for JSON returns.&lt;/li&gt;
&lt;li&gt;Set the application to listen on port &lt;code&gt;6000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kRNk88H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640616832121_Screenshot%2B2021-12-27%2Bat%2B15.39.28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kRNk88H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640616832121_Screenshot%2B2021-12-27%2Bat%2B15.39.28.png" alt="Testing the app" width="880" height="668"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#modularization-in-golang"&gt;
  &lt;/a&gt;
  Modularization in Golang
&lt;/h2&gt;

&lt;p&gt;It is essential to have a good folder structure for our project. Good project structure simplifies how we work with dependencies in our application and makes it easier for us and others to read our codebase.&lt;br&gt;
To do this, we need to create  &lt;code&gt;configs&lt;/code&gt;, &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;responses&lt;/code&gt; and &lt;code&gt;routes&lt;/code&gt; folder in our project directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ldI5sqIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640618264604_Screenshot%2B2021-12-27%2Bat%2B16.17.26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ldI5sqIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640618264604_Screenshot%2B2021-12-27%2Bat%2B16.17.26.png" alt="Updated project folder structure" width="536" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;em&gt;The&lt;/em&gt; &lt;code&gt;go.sum&lt;/code&gt; &lt;em&gt;file contains all the dependency checksums, and is managed by the&lt;/em&gt; &lt;code&gt;go&lt;/code&gt; &lt;em&gt;tools. We don’t have to worry about it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;configs&lt;/code&gt; is for modularizing project configuration files&lt;/p&gt;

&lt;p&gt;&lt;code&gt;controllers&lt;/code&gt; is for modularizing application logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;models&lt;/code&gt; is for modularizing data and database logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;responses&lt;/code&gt; is for modularizing files describing the response we want our API to give. This will become clearer later on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;routes&lt;/code&gt; is for modularizing URL pattern and handler information.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-mongodb"&gt;
  &lt;/a&gt;
  Setting up MongoDB
&lt;/h2&gt;

&lt;p&gt;With that done, we need to log in or sign up into our &lt;a href="https://dev.tohttp://"&gt;MongoDB&lt;/a&gt; account. Click the project dropdown menu and click on the &lt;strong&gt;New Project&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" alt="New Project" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter the &lt;code&gt;golang-api&lt;/code&gt; as the project name, click &lt;strong&gt;Next&lt;/strong&gt;, and click &lt;strong&gt;Create Project..&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" alt="enter project name" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" alt="Create Project" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Build a Database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" alt="" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Shared&lt;/strong&gt; as the type of database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" alt="Shared highlighted in red" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Create&lt;/strong&gt; to setup a cluster. This might take sometime to setup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" alt="Creating a cluster" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to create a user to access the database externally by inputting the &lt;strong&gt;Username&lt;/strong&gt;, &lt;strong&gt;Password&lt;/strong&gt; and then clicking on &lt;strong&gt;Create User&lt;/strong&gt;. We also need to add our IP address to safely connect to the database by clicking on the &lt;strong&gt;Add My Current IP Address&lt;/strong&gt; button. Then click on &lt;strong&gt;Finish and Close&lt;/strong&gt; to save changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" alt="Create user" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" alt="Add IP" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On saving the changes, we should see a Database Deployments screen, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Database Screen" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#connecting-our-application-to-mongodb"&gt;
  &lt;/a&gt;
  Connecting our application to MongoDB
&lt;/h2&gt;

&lt;p&gt;With the configuration done, we need to connect our application with the database created. To do this, click on the &lt;strong&gt;Connect&lt;/strong&gt; button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Connect to database" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Connect your application&lt;/strong&gt;, change the &lt;strong&gt;Driver&lt;/strong&gt; to &lt;code&gt;Go&lt;/code&gt; and the &lt;strong&gt;Version&lt;/strong&gt; as shown below. Then click on the copy &lt;strong&gt;icon&lt;/strong&gt; to copy the connection string.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" alt="connect application" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" alt="Copy connection string" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Environment Variable&lt;/strong&gt;&lt;br&gt;
Next, we must modify the copied connection string with the user's password we created earlier and change the database name. To do this, first, we need to create a &lt;code&gt;.env&lt;/code&gt; file in the root directory, and in this file, add the snippet below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://&amp;lt;YOUR USERNAME HERE&amp;gt;:&amp;lt;YOUR PASSWORD HERE&amp;gt;@cluster0.e5akf.mongodb.net/myFirstDatabese?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Sample of a properly filled connection string below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://malomz:malomzPassword@cluster0.e5akf.mongodb.net/golangDB?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9oPdbnQb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640646363920_Screenshot%2B2021-12-28%2Bat%2B00.05.44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9oPdbnQb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640646363920_Screenshot%2B2021-12-28%2Bat%2B00.05.44.png" alt="Updated folder structure with .env file" width="536" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Load Environment Variable&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a helper function to load the environment variable using the &lt;code&gt;github.com/joho/godotenv&lt;/code&gt; library we installed earlier.  To do this, we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create an &lt;code&gt;env.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create an &lt;code&gt;EnvMongoURI&lt;/code&gt; function that checks if the environment variable is correctly loaded and returns the environment variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Connecting to MongoDB&lt;/strong&gt; &lt;br&gt;
To connect to the MongoDB database from our application, first we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create a &lt;code&gt;setup.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;ConnectDB&lt;/code&gt; function that first configures the client to use the correct URI and check for errors. Secondly, we defined a timeout of 10 seconds we wanted to use when trying to connect. Thirdly, check if there is an error while connecting to the database and cancel the connection if the connecting period exceeds 10 seconds. Finally, we pinged the database to test our connection and returned the &lt;code&gt;client&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;DB&lt;/code&gt; variable instance of the &lt;code&gt;ConnectDB&lt;/code&gt;. This will come in handy when creating collections.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetCollection&lt;/code&gt; function to retrieve and create &lt;code&gt;collections&lt;/code&gt; on the database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to connect to the database when our application startup. To do this, we need to modify &lt;code&gt;main.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#setup-api-route-handler-and-response-type"&gt;
  &lt;/a&gt;
  Setup API Route Handler and Response Type
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Route Handler&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a  &lt;code&gt;user_route.go&lt;/code&gt; file inside the &lt;code&gt;routes&lt;/code&gt; folder to manage all the user-related routes in our application, as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Next, we need to attach the newly created route to the &lt;strong&gt;http.Server&lt;/strong&gt; in &lt;code&gt;main.go&lt;/code&gt; by modifying it as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Response Type&lt;/strong&gt;&lt;br&gt;
Next, we need to create a reusable &lt;code&gt;struct&lt;/code&gt; to describe our API’s response. To do this, navigate to the &lt;code&gt;responses&lt;/code&gt; folder and in this folder, create a &lt;code&gt;user_response.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above creates a &lt;code&gt;UserResponse&lt;/code&gt; struct with &lt;code&gt;Status&lt;/code&gt;, &lt;code&gt;Message&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt; property to represent the API response type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;code&gt;json:"status"&lt;/code&gt;&lt;em&gt;,&lt;/em&gt; &lt;code&gt;json:"message"&lt;/code&gt;&lt;em&gt;, and&lt;/em&gt; &lt;code&gt;json:"data"&lt;/code&gt; &lt;em&gt;are known as&lt;/em&gt; &lt;strong&gt;&lt;em&gt;struct tags&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;. Struct tags allow us to attach meta-information to corresponding struct properties. In other words, we use them to reformat the JSON response returned by the API.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-creating-rest-apis"&gt;
  &lt;/a&gt;
  Finally, Creating REST API’s
&lt;/h2&gt;

&lt;p&gt;Next, we need a model to represent our application data. To do this, we need to navigate to the &lt;code&gt;models&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_model.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;User&lt;/code&gt; struct with required properties. We added &lt;code&gt;omitempty&lt;/code&gt; and &lt;code&gt;validate:"required"&lt;/code&gt; to the struct tag to tell Fiber to ignore empty fields and make the field required, respectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Create a User Endpoint&lt;/strong&gt;&lt;br&gt;
With the model setup, we can now create a function to create a user. To do this, we need to navigate to the &lt;code&gt;controllers&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_controller.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;userCollection&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; variables to create a collection and validate models using the &lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; library we installed earlier on, respectively.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;CreateUser&lt;/code&gt; function that returns an &lt;code&gt;error&lt;/code&gt;. Inside the function, we first defined a timeout of 10 seconds when inserting user into the document, validating both the request body and required field using the validator library. We returned the appropriate message and status code using the &lt;code&gt;UserResponse&lt;/code&gt; struct we created earlier. Secondly, we created a &lt;code&gt;newUser&lt;/code&gt; variable, inserted it using the &lt;code&gt;userCollection.InsertOne&lt;/code&gt; function and check for errors if there are any. Finally, we returned the correct response if the insert was successful.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get a User Endpoint&lt;/strong&gt;&lt;br&gt;
To get the details of a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetAUser&lt;/code&gt; function that returns an &lt;code&gt;error&lt;/code&gt;. Inside the function, we first defined a timeout of 10 seconds when finding a user in the document, a &lt;code&gt;userId&lt;/code&gt; variable to get the user’s &lt;strong&gt;id&lt;/strong&gt; from the URL parameter and a &lt;code&gt;user&lt;/code&gt;  variable. We converted the &lt;code&gt;userId&lt;/code&gt; from a string to a &lt;code&gt;primitive.ObjectID&lt;/code&gt; type,  a BSON type MongoDB uses. Secondly, we searched for the user using the &lt;code&gt;userCollection.FindOne&lt;/code&gt;, pass the &lt;code&gt;objId&lt;/code&gt; as a filter and use the &lt;code&gt;Decode&lt;/code&gt; attribute method to get the corresponding object. Finally, we returned the decoded response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; &lt;em&gt;We also passed a&lt;/em&gt; &lt;code&gt;userId&lt;/code&gt; &lt;em&gt;as a parameter to the URL path. The specified parameter must match the one we specified in the controller.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit a User Endpoint&lt;/strong&gt;&lt;br&gt;
To edit a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;EditAUser&lt;/code&gt; function above does the same thing as the &lt;code&gt;CreateUser&lt;/code&gt; function. However, we included an &lt;code&gt;update&lt;/code&gt; variable to get updated fields and updated the collection using the &lt;code&gt;userCollection.UpdateOne&lt;/code&gt;. Lastly, we searched for the updated user’s details and returned the decoded response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Delete a User Endpoint&lt;/strong&gt;&lt;br&gt;
To delete a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;DeleteAUser&lt;/code&gt; function follows the previous steps by deleting the matched record using the &lt;code&gt;userCollection.DeleteOne&lt;/code&gt;. We also checked if an item was successfully deleted and returned the appropriate response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get List of Users Endpoint&lt;/strong&gt;&lt;br&gt;
To get the list of users, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;GetAllUsers&lt;/code&gt; function follows the previous steps by getting the list of users using the &lt;code&gt;userCollection.Find&lt;/code&gt;. We also read the retuned list optimally using the &lt;code&gt;Next&lt;/code&gt; attribute method to loop through the returned list of users.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_controller.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_route.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With that done, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XapHbJmc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640678631468_Screenshot%2B2021-12-28%2Bat%2B00.18.21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XapHbJmc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640678631468_Screenshot%2B2021-12-28%2Bat%2B00.18.21.png" alt="terminal output" width="880" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kNE3SHSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640692844347_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kNE3SHSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640692844347_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" alt="Create a user endpoint" width="880" height="717"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" alt="Get a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" alt="Edit a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" alt="Delete a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" alt="Get list of users endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" alt="Database with users document" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This post discussed how to structure a Fiber application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;You may find these resources helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gofiber/fiber"&gt;Fiber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/drivers/go/current/"&gt;MongoDB Go Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/go-playground/validator"&gt;Go Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joho/godotenv"&gt;Go Environment Loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>fiber</category>
      <category>mongodb</category>
      <category>restapi</category>
    </item>
    <item>
      <title>Build a REST API with Golang and MongoDB - Echo Version</title>
      <author>Demola Malomo</author>
      <pubDate>Mon, 03 Jan 2022 07:19:19 +0000</pubDate>
      <link>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-echo-version-2gdg</link>
      <guid>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-echo-version-2gdg</guid>
      <description>&lt;p&gt;Representational state transfer (REST) is an architectural pattern that guides an Application programming interface(API) design and development. REST APIs have become the standard of communication between the server part of the product and its client to increase performance, scalability, simplicity, modifiability, visibility, portability, and reliability.&lt;/p&gt;

&lt;p&gt;This post will discuss building a user management application with Golang using the &lt;a href="https://github.com/labstack/echo"&gt;Echo&lt;/a&gt; framework and &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;. At the end of this tutorial, we will learn how to structure an Echo application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;Echo is a Golang-based HTTP web framework with high performance and extensibility. It supports optimized routing, middlewares, templating, data binding and rendering.&lt;/p&gt;

&lt;p&gt;MongoDB is a document-based database management program used as an alternative to relational databases. MongoDB supports working with large sets of distributed data with options to store or retrieve information seamlessly.&lt;/p&gt;

&lt;p&gt;You can find the complete source code in this repository.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;The following steps in this post require Golang experience. Experience with MongoDB isn’t a requirement, but it’s nice to have.&lt;/p&gt;

&lt;p&gt;We will also be needing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://www.mongodb.com/"&gt;MongoDB account&lt;/a&gt; to host database. &lt;a href="https://www.mongodb.com/cloud/atlas/register"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com/downloads/"&gt;Postman&lt;/a&gt; or any API testing application of your choice&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let’s code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;To get started, we need to navigate to the desired directory and run the command below in our terminal &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir echo-mongo-api &amp;amp;&amp;amp; cd echo-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command creates an  &lt;code&gt;echo-mongo-api&lt;/code&gt; folder and navigates into the project directory.&lt;/p&gt;

&lt;p&gt;Next, we need to initialize a Go module to manage project dependencies by running the command below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init echo-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command will create a &lt;code&gt;go.mod&lt;/code&gt; file for tracking project dependencies.&lt;/p&gt;

&lt;p&gt;We proceed to install the required dependencies with:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get -u github.com/labstack/echo/v4 go.mongodb.org/mongo-driver/mongo github.com/joho/godotenv github.com/go-playground/validator/v10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;github.com/labstack/echo/v4&lt;/code&gt; is a framework for building web application.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go.mongodb.org/mongo-driver/mongo&lt;/code&gt; is a driver for connecting to MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/joho/godotenv&lt;/code&gt; is a library for managing environment variable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; is a library for validating structs and fields.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#application-entry-point"&gt;
  &lt;/a&gt;
  Application Entry Point
&lt;/h2&gt;

&lt;p&gt;With the project dependencies installed, we need to create &lt;code&gt;main.go&lt;/code&gt; file in the root directory and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Initialize an Echo application using the &lt;code&gt;New&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;Get&lt;/code&gt; function to route to &lt;code&gt;/&lt;/code&gt; path and an handler function that returns a JSON of &lt;code&gt;Hello from Echo &amp;amp; mongoDB&lt;/code&gt;. &lt;code&gt;echo.Map&lt;/code&gt; is a shortcut for &lt;code&gt;map[string]interface{}&lt;/code&gt;, useful for JSON returns.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;Start&lt;/code&gt; function to run the application on port &lt;code&gt;6000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cahN6G2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640705723363_Screenshot%2B2021-12-28%2Bat%2B16.35.05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cahN6G2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640705723363_Screenshot%2B2021-12-28%2Bat%2B16.35.05.png" alt="Testing the app" width="880" height="717"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#modularization-in-golang"&gt;
  &lt;/a&gt;
  Modularization in Golang
&lt;/h2&gt;

&lt;p&gt;It is essential to have a good folder structure for our project. Good project structure simplifies how we work with dependencies in our application and makes it easier for us and others to read our codebase.&lt;br&gt;
To do this, we need to create  &lt;code&gt;configs&lt;/code&gt;, &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;responses&lt;/code&gt; and &lt;code&gt;routes&lt;/code&gt; folder in our project directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmwWHJna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640705978931_Screenshot%2B2021-12-28%2Bat%2B16.37.13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmwWHJna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640705978931_Screenshot%2B2021-12-28%2Bat%2B16.37.13.png" alt="Updated project folder structure" width="540" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;em&gt;The&lt;/em&gt; &lt;code&gt;go.sum&lt;/code&gt; &lt;em&gt;file contains all the dependency checksums, and is managed by the&lt;/em&gt; &lt;code&gt;go&lt;/code&gt; &lt;em&gt;tools. We don’t have to worry about it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;configs&lt;/code&gt; is for modularizing project configuration files&lt;/p&gt;

&lt;p&gt;&lt;code&gt;controllers&lt;/code&gt; is for modularizing application logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;models&lt;/code&gt; is for modularizing data and database logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;responses&lt;/code&gt; is for modularizing files describing the response we want our API to give. This will become clearer later on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;routes&lt;/code&gt; is for modularizing URL pattern and handler information.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-mongodb"&gt;
  &lt;/a&gt;
  Setting up MongoDB
&lt;/h2&gt;

&lt;p&gt;With that done, we need to log in or sign up into our &lt;a href="https://dev.tohttp://"&gt;MongoDB&lt;/a&gt; account. Click the project dropdown menu and click on the &lt;strong&gt;New Project&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" alt="New Project" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter the &lt;code&gt;golang-api&lt;/code&gt; as the project name, click &lt;strong&gt;Next&lt;/strong&gt;, and click &lt;strong&gt;Create Project..&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" alt="enter project name" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" alt="Create Project" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Build a Database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" alt="" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Shared&lt;/strong&gt; as the type of database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" alt="Shared highlighted in red" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Create&lt;/strong&gt; to setup a cluster. This might take sometime to setup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" alt="Creating a cluster" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to create a user to access the database externally by inputting the &lt;strong&gt;Username&lt;/strong&gt;, &lt;strong&gt;Password&lt;/strong&gt; and then clicking on &lt;strong&gt;Create User&lt;/strong&gt;. We also need to add our IP address to safely connect to the database by clicking on the &lt;strong&gt;Add My Current IP Address&lt;/strong&gt; button. Then click on &lt;strong&gt;Finish and Close&lt;/strong&gt; to save changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" alt="Create user" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" alt="Add IP" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On saving the changes, we should see a Database Deployments screen, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Database Screen" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#connecting-our-application-to-mongodb"&gt;
  &lt;/a&gt;
  Connecting our application to MongoDB
&lt;/h2&gt;

&lt;p&gt;With the configuration done, we need to connect our application with the database created. To do this, click on the &lt;strong&gt;Connect&lt;/strong&gt; button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Connect to database" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Connect your application&lt;/strong&gt;, change the &lt;strong&gt;Driver&lt;/strong&gt; to &lt;code&gt;Go&lt;/code&gt; and the &lt;strong&gt;Version&lt;/strong&gt; as shown below. Then click on the copy &lt;strong&gt;icon&lt;/strong&gt; to copy the connection string.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" alt="connect application" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" alt="Copy connection string" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Environment Variable&lt;/strong&gt;&lt;br&gt;
Next, we must modify the copied connection string with the user's password we created earlier and change the database name. To do this, first, we need to create a &lt;code&gt;.env&lt;/code&gt; file in the root directory, and in this file, add the snippet below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://&amp;lt;YOUR USERNAME HERE&amp;gt;:&amp;lt;YOUR PASSWORD HERE&amp;gt;@cluster0.e5akf.mongodb.net/myFirstDatabese?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Sample of a properly filled connection string below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://malomz:malomzPassword@cluster0.e5akf.mongodb.net/golangDB?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7D0z3uHg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640706662816_Screenshot%2B2021-12-28%2Bat%2B16.50.46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7D0z3uHg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640706662816_Screenshot%2B2021-12-28%2Bat%2B16.50.46.png" alt="Updated folder structure with .env file" width="540" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Load Environment Variable&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a helper function to load the environment variable using the &lt;code&gt;github.com/joho/godotenv&lt;/code&gt; library we installed earlier.  To do this, we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create an &lt;code&gt;env.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create an &lt;code&gt;EnvMongoURI&lt;/code&gt; function that checks if the environment variable is correctly loaded and returns the environment variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Connecting to MongoDB&lt;/strong&gt; &lt;br&gt;
To connect to the MongoDB database from our application, first we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create a &lt;code&gt;setup.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;ConnectDB&lt;/code&gt; function that first configures the client to use the correct URI and check for errors. Secondly, we defined a timeout of 10 seconds we wanted to use when trying to connect. Thirdly, check if there is an error while connecting to the database and cancel the connection if the connecting period exceeds 10 seconds. Finally, we pinged the database to test our connection and returned the &lt;code&gt;client&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;DB&lt;/code&gt; variable instance of the &lt;code&gt;ConnectDB&lt;/code&gt;. This will come in handy when creating collections.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetCollection&lt;/code&gt; function to retrieve and create &lt;code&gt;collections&lt;/code&gt; on the database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to connect to the database when our application startup. To do this, we need to modify &lt;code&gt;main.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#setup-api-route-handler-and-response-type"&gt;
  &lt;/a&gt;
  Setup API Route Handler and Response Type
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Route Handler&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a  &lt;code&gt;user_route.go&lt;/code&gt; file inside the &lt;code&gt;routes&lt;/code&gt; folder to manage all the user-related routes in our application, as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Next, we need to attach the newly created route to the &lt;strong&gt;http.Server&lt;/strong&gt; in &lt;code&gt;main.go&lt;/code&gt; by modifying it as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Response Type&lt;/strong&gt;&lt;br&gt;
Next, we need to create a reusable &lt;code&gt;struct&lt;/code&gt; to describe our API’s response. To do this, navigate to the &lt;code&gt;responses&lt;/code&gt; folder and in this folder, create a &lt;code&gt;user_response.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above creates a &lt;code&gt;UserResponse&lt;/code&gt; struct with &lt;code&gt;Status&lt;/code&gt;, &lt;code&gt;Message&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt; property to represent the API response type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;code&gt;json:"status"&lt;/code&gt;&lt;em&gt;,&lt;/em&gt; &lt;code&gt;json:"message"&lt;/code&gt;&lt;em&gt;, and&lt;/em&gt; &lt;code&gt;json:"data"&lt;/code&gt; &lt;em&gt;are known as&lt;/em&gt; &lt;strong&gt;&lt;em&gt;struct tags&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;. Struct tags allow us to attach meta-information to corresponding struct properties. In other words, we use them to reformat the JSON response returned by the API.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-creating-rest-apis"&gt;
  &lt;/a&gt;
  Finally, Creating REST API’s
&lt;/h2&gt;

&lt;p&gt;Next, we need a model to represent our application data. To do this, we need to navigate to the &lt;code&gt;models&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_model.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;User&lt;/code&gt; struct with required properties. We added &lt;code&gt;omitempty&lt;/code&gt; and &lt;code&gt;validate:"required"&lt;/code&gt; to the struct tag to tell Fiber to ignore empty fields and make the field required, respectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Create a User Endpoint&lt;/strong&gt;&lt;br&gt;
With the model setup, we can now create a function to create a user. To do this, we need to navigate to the &lt;code&gt;controllers&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_controller.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;userCollection&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; variables to create a collection and validate models using the &lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; library we installed earlier on, respectively.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;CreateUser&lt;/code&gt; function that returns an &lt;code&gt;error&lt;/code&gt;. Inside the function, we first defined a timeout of 10 seconds when inserting user into the document, validating both the request body and required field using the validator library. We returned the appropriate message and status code using the &lt;code&gt;UserResponse&lt;/code&gt; struct we created earlier. Secondly, we created a &lt;code&gt;newUser&lt;/code&gt; variable, inserted it using the &lt;code&gt;userCollection.InsertOne&lt;/code&gt; function and check for errors if there are any. Finally, we returned the correct response if the insert was successful.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get a User Endpoint&lt;/strong&gt;&lt;br&gt;
To get the details of a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
  

&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetAUser&lt;/code&gt; function that returns an &lt;code&gt;error&lt;/code&gt;. Inside the function, we first defined a timeout of 10 seconds when finding a user in the document, a &lt;code&gt;userId&lt;/code&gt; variable to get the user’s &lt;strong&gt;id&lt;/strong&gt; from the URL parameter and a &lt;code&gt;user&lt;/code&gt;  variable. We converted the &lt;code&gt;userId&lt;/code&gt; from a string to a &lt;code&gt;primitive.ObjectID&lt;/code&gt; type,  a BSON type MongoDB uses. Secondly, we searched for the user using the &lt;code&gt;userCollection.FindOne&lt;/code&gt;, pass the &lt;code&gt;objId&lt;/code&gt; as a filter and use the &lt;code&gt;Decode&lt;/code&gt; attribute method to get the corresponding object. Finally, we returned the decoded response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; &lt;em&gt;We also passed a&lt;/em&gt; &lt;code&gt;userId&lt;/code&gt; &lt;em&gt;as a parameter to the URL path. The specified parameter must match the one we specified in the controller.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit a User Endpoint&lt;/strong&gt;&lt;br&gt;
To edit a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;EditAUser&lt;/code&gt; function above does the same thing as the &lt;code&gt;CreateUser&lt;/code&gt; function. However, we included an &lt;code&gt;update&lt;/code&gt; variable to get updated fields and updated the collection using the &lt;code&gt;userCollection.UpdateOne&lt;/code&gt;. Lastly, we searched for the updated user’s details and returned the decoded response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Delete a User Endpoint&lt;/strong&gt;&lt;br&gt;
To delete a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;DeleteAUser&lt;/code&gt; function follows the previous steps by deleting the matched record using the &lt;code&gt;userCollection.DeleteOne&lt;/code&gt;. We also checked if an item was successfully deleted and returned the appropriate response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get List of Users Endpoint&lt;/strong&gt;&lt;br&gt;
To get the list of users, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;GetAllUsers&lt;/code&gt; function follows the previous steps by getting the list of users using the &lt;code&gt;userCollection.Find&lt;/code&gt;. We also read the retuned list optimally using the &lt;code&gt;Next&lt;/code&gt; attribute method to loop through the returned list of users.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_controller.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_route.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With that done, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JpweAjRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640726048122_Screenshot%2B2021-12-28%2Bat%2B17.03.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JpweAjRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_59B4FB0BF7F93F4C93C0A682D6A687630719B407B5DC5D5F5AA486DD3C2044DE_1640726048122_Screenshot%2B2021-12-28%2Bat%2B17.03.40.png" alt="terminal output" width="880" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kNE3SHSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640692844347_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kNE3SHSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_97A8BAFA9C176AA31F7FC2C18065AA1FE2F74B0C6537A26A8D511A9956341968_1640692844347_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" alt="Create a user endpoint" width="880" height="717"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" alt="Get a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" alt="Edit a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" alt="Delete a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" alt="Get list of users endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" alt="Database with users document" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This post discussed how to structure an Echo application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;You may find these resources helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/labstack/echo"&gt;Echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/drivers/go/current/"&gt;MongoDB Go Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/go-playground/validator"&gt;Go Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joho/godotenv"&gt;Go Environment Loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>echo</category>
      <category>mongodb</category>
      <category>restapi</category>
    </item>
    <item>
      <title>Build a REST API with Golang and MongoDB - Gorilla/Mux Version</title>
      <author>Demola Malomo</author>
      <pubDate>Mon, 03 Jan 2022 07:18:24 +0000</pubDate>
      <link>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-gorillamux-version-57fh</link>
      <guid>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-gorillamux-version-57fh</guid>
      <description>&lt;p&gt;Representational state transfer (REST) is an architectural pattern that guides an Application programming interface(API) design and development. REST APIs have become the standard of communication between the server part of the product and its client to increase performance, scalability, simplicity, modifiability, visibility, portability, and reliability.&lt;/p&gt;

&lt;p&gt;This post will discuss building a user management application with Golang using the &lt;a href="https://github.com/gorilla/mux"&gt;Mux&lt;/a&gt; package and &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;. At the end of this tutorial, we will learn how to structure a Mux application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;Gorilla/Mux, popularly known as &lt;strong&gt;Mux&lt;/strong&gt;, is a powerful HTTP router and URL matcher for building Go web servers.&lt;/p&gt;

&lt;p&gt;MongoDB is a document-based database management program used as an alternative to relational databases. MongoDB supports working with large sets of distributed data with options to store or retrieve information seamlessly.&lt;/p&gt;

&lt;p&gt;You can find the complete source code in this &lt;a href="https://github.com/Mr-Malomz/mux-mongo-api"&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;The following steps in this post require Golang experience. Experience with MongoDB isn’t a requirement, but it’s nice to have.&lt;/p&gt;

&lt;p&gt;We will also be needing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://www.mongodb.com/"&gt;MongoDB account&lt;/a&gt; to host database. &lt;a href="https://www.mongodb.com/cloud/atlas/register"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com/downloads/"&gt;Postman&lt;/a&gt; or any API testing application of your choice&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let’s code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;To get started, we need to navigate to the desired directory and run the command below in our terminal &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir mux-mongo-api &amp;amp;&amp;amp; cd mux-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command creates a  &lt;code&gt;mux-mongo-api&lt;/code&gt; folder and navigates into the project directory.&lt;/p&gt;

&lt;p&gt;Next, we need to initialize a Go module to manage project dependencies by running the command below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init mux-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command will create a &lt;code&gt;go.mod&lt;/code&gt; file for tracking project dependencies.&lt;/p&gt;

&lt;p&gt;We proceed to install the required dependencies with:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get -u github.com/gorilla/mux go.mongodb.org/mongo-driver/mongo github.com/joho/godotenv github.com/go-playground/validator/v10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;github.com/gorilla/mux&lt;/code&gt; is a package for building web servers.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go.mongodb.org/mongo-driver/mongo&lt;/code&gt; is a driver for connecting to MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/joho/godotenv&lt;/code&gt; is a library for managing environment variable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; is a library for validating structs and fields.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#application-entry-point"&gt;
  &lt;/a&gt;
  Application Entry Point
&lt;/h2&gt;

&lt;p&gt;With the project dependencies installed, we need to create &lt;code&gt;main.go&lt;/code&gt; file in the root directory and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Initialize a Mux router using the &lt;code&gt;NewRouter&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;HandleFunc&lt;/code&gt; function that uses &lt;code&gt;net/http&lt;/code&gt; package as parameters to route to &lt;code&gt;/&lt;/code&gt; path and a handler function that sets the header type to a &lt;strong&gt;JSON&lt;/strong&gt; and returns a JSON of &lt;code&gt;Hello from Mux &amp;amp; mongoDB&lt;/code&gt; using the &lt;code&gt;encoding/json&lt;/code&gt; package. We also attached the HTTP method to this function &lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;http.ListenAndServe&lt;/code&gt; function to run the application on port &lt;code&gt;6000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ccutaY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640683931465_Screenshot%2B2021-12-28%2Bat%2B10.15.17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ccutaY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640683931465_Screenshot%2B2021-12-28%2Bat%2B10.15.17.png" alt="Testing the app" width="880" height="712"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#modularization-in-golang"&gt;
  &lt;/a&gt;
  Modularization in Golang
&lt;/h2&gt;

&lt;p&gt;It is essential to have a good folder structure for our project. Good project structure simplifies how we work with dependencies in our application and makes it easier for us and others to read our codebase.&lt;br&gt;
To do this, we need to create  &lt;code&gt;configs&lt;/code&gt;, &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;responses&lt;/code&gt; and &lt;code&gt;routes&lt;/code&gt; folder in our project directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i-W77t-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640684172740_Screenshot%2B2021-12-28%2Bat%2B10.35.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-W77t-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640684172740_Screenshot%2B2021-12-28%2Bat%2B10.35.59.png" alt="Updated project folder structure" width="536" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;em&gt;The&lt;/em&gt; &lt;code&gt;go.sum&lt;/code&gt; &lt;em&gt;file contains all the dependency checksums, and is managed by the&lt;/em&gt; &lt;code&gt;go&lt;/code&gt; &lt;em&gt;tools. We don’t have to worry about it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;configs&lt;/code&gt; is for modularizing project configuration files&lt;/p&gt;

&lt;p&gt;&lt;code&gt;controllers&lt;/code&gt; is for modularizing application logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;models&lt;/code&gt; is for modularizing data and database logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;responses&lt;/code&gt; is for modularizing files describing the response we want our API to give. This will become clearer later on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;routes&lt;/code&gt; is for modularizing URL pattern and handler information.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-mongodb"&gt;
  &lt;/a&gt;
  Setting up MongoDB
&lt;/h2&gt;

&lt;p&gt;With that done, we need to log in or sign up into our &lt;a href="https://dev.tohttp://"&gt;MongoDB&lt;/a&gt; account. Click the project dropdown menu and click on the &lt;strong&gt;New Project&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" alt="New Project" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter the &lt;code&gt;golang-api&lt;/code&gt; as the project name, click &lt;strong&gt;Next&lt;/strong&gt;, and click &lt;strong&gt;Create Project..&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" alt="enter project name" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" alt="Create Project" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Build a Database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" alt="" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Shared&lt;/strong&gt; as the type of database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" alt="Shared highlighted in red" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Create&lt;/strong&gt; to setup a cluster. This might take sometime to setup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" alt="Creating a cluster" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to create a user to access the database externally by inputting the &lt;strong&gt;Username&lt;/strong&gt;, &lt;strong&gt;Password&lt;/strong&gt; and then clicking on &lt;strong&gt;Create User&lt;/strong&gt;. We also need to add our IP address to safely connect to the database by clicking on the &lt;strong&gt;Add My Current IP Address&lt;/strong&gt; button. Then click on &lt;strong&gt;Finish and Close&lt;/strong&gt; to save changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" alt="Create user" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" alt="Add IP" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On saving the changes, we should see a Database Deployments screen, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Database Screen" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#connecting-our-application-to-mongodb"&gt;
  &lt;/a&gt;
  Connecting our application to MongoDB
&lt;/h2&gt;

&lt;p&gt;With the configuration done, we need to connect our application with the database created. To do this, click on the &lt;strong&gt;Connect&lt;/strong&gt; button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Connect to database" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Connect your application&lt;/strong&gt;, change the &lt;strong&gt;Driver&lt;/strong&gt; to &lt;code&gt;Go&lt;/code&gt; and the &lt;strong&gt;Version&lt;/strong&gt; as shown below. Then click on the copy &lt;strong&gt;icon&lt;/strong&gt; to copy the connection string.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" alt="connect application" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" alt="Copy connection string" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Environment Variable&lt;/strong&gt;&lt;br&gt;
Next, we must modify the copied connection string with the user's password we created earlier and change the database name. To do this, first, we need to create a &lt;code&gt;.env&lt;/code&gt; file in the root directory, and in this file, add the snippet below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://&amp;lt;YOUR USERNAME HERE&amp;gt;:&amp;lt;YOUR PASSWORD HERE&amp;gt;@cluster0.e5akf.mongodb.net/myFirstDatabese?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Sample of a properly filled connection string below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://malomz:malomzPassword@cluster0.e5akf.mongodb.net/golangDB?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5coi5Bq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640685273552_Screenshot%2B2021-12-28%2Bat%2B10.54.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5coi5Bq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640685273552_Screenshot%2B2021-12-28%2Bat%2B10.54.15.png" alt="Updated folder structure with .env file" width="536" height="522"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Load Environment Variable&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a helper function to load the environment variable using the &lt;code&gt;github.com/joho/godotenv&lt;/code&gt; library we installed earlier.  To do this, we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create an &lt;code&gt;env.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create an &lt;code&gt;EnvMongoURI&lt;/code&gt; function that checks if the environment variable is correctly loaded and returns the environment variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Connecting to MongoDB&lt;/strong&gt; &lt;br&gt;
To connect to the MongoDB database from our application, first we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create a &lt;code&gt;setup.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;ConnectDB&lt;/code&gt; function that first configures the client to use the correct URI and check for errors. Secondly, we defined a timeout of 10 seconds we wanted to use when trying to connect. Thirdly, check if there is an error while connecting to the database and cancel the connection if the connecting period exceeds 10 seconds. Finally, we pinged the database to test our connection and returned the &lt;code&gt;client&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;DB&lt;/code&gt; variable instance of the &lt;code&gt;ConnectDB&lt;/code&gt;. This will come in handy when creating collections.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetCollection&lt;/code&gt; function to retrieve and create &lt;code&gt;collections&lt;/code&gt; on the database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to connect to the database when our application startup. To do this, we need to modify &lt;code&gt;main.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#setup-api-route-handler-and-response-type"&gt;
  &lt;/a&gt;
  Setup API Route Handler and Response Type
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Route Handler&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a  &lt;code&gt;user_route.go&lt;/code&gt; file inside the &lt;code&gt;routes&lt;/code&gt; folder to manage all the user-related routes in our application, as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Next, we need to attach the newly created route to the &lt;strong&gt;http.Server&lt;/strong&gt; in &lt;code&gt;main.go&lt;/code&gt; by modifying it as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Response Type&lt;/strong&gt;&lt;br&gt;
Next, we need to create a reusable &lt;code&gt;struct&lt;/code&gt; to describe our API’s response. To do this, navigate to the &lt;code&gt;responses&lt;/code&gt; folder and in this folder, create a &lt;code&gt;user_response.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above creates a &lt;code&gt;UserResponse&lt;/code&gt; struct with &lt;code&gt;Status&lt;/code&gt;, &lt;code&gt;Message&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt; property to represent the API response type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;code&gt;json:"status"&lt;/code&gt;&lt;em&gt;,&lt;/em&gt; &lt;code&gt;json:"message"&lt;/code&gt;&lt;em&gt;, and&lt;/em&gt; &lt;code&gt;json:"data"&lt;/code&gt; &lt;em&gt;are known as&lt;/em&gt; &lt;strong&gt;&lt;em&gt;struct tags&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;. Struct tags allow us to attach meta-information to corresponding struct properties. In other words, we use them to reformat the JSON response returned by the API.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-creating-rest-apis"&gt;
  &lt;/a&gt;
  Finally, Creating REST API’s
&lt;/h2&gt;

&lt;p&gt;Next, we need a model to represent our application data. To do this, we need to navigate to the &lt;code&gt;models&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_model.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;User&lt;/code&gt; struct with required properties. We added &lt;code&gt;omitempty&lt;/code&gt; and &lt;code&gt;validate:"required"&lt;/code&gt; to the struct tag to tell Fiber to ignore empty fields and make the field required, respectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Create a User Endpoint&lt;/strong&gt;&lt;br&gt;
With the model setup, we can now create a function to create a user. To do this, we need to navigate to the &lt;code&gt;controllers&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_controller.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;userCollection&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; variables to create a collection and validate models using the &lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; library we installed earlier on, respectively.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;CreateUser&lt;/code&gt; function that returns a &lt;code&gt;net/http&lt;/code&gt; handler. Inside the returned handler, we first defined a timeout of 10 seconds when inserting user into the document, validating both the request body and required field using the validator library. We returned the appropriate message and status code using the &lt;code&gt;UserResponse&lt;/code&gt; struct we created earlier. Secondly, we created a &lt;code&gt;newUser&lt;/code&gt; variable, inserted it using the &lt;code&gt;userCollection.InsertOne&lt;/code&gt; function and check for errors if there are any. Finally, we returned the correct response if the insert was successful.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;w.WriteHeader&lt;/code&gt; function is used for setting the API status code.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;json.NewDecoder&lt;/code&gt; ‘s &lt;code&gt;Decode&lt;/code&gt; and &lt;code&gt;Encode&lt;/code&gt; methods are used to convert  &lt;strong&gt;JSON&lt;/strong&gt; into a &lt;strong&gt;Go&lt;/strong&gt; value and vice-versa.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get a User Endpoint&lt;/strong&gt;&lt;br&gt;
To get the details of a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetAUser&lt;/code&gt; function that returns a &lt;code&gt;net/http&lt;/code&gt; handler. Inside the returned handler, we first defined a timeout of 10 seconds when finding a user in the document, a &lt;code&gt;userId&lt;/code&gt; variable to get the user’s &lt;strong&gt;id&lt;/strong&gt; from the URL parameter and a &lt;code&gt;user&lt;/code&gt;  variable. We converted the &lt;code&gt;userId&lt;/code&gt; from a string to a &lt;code&gt;primitive.ObjectID&lt;/code&gt; type, a BSON type MongoDB uses. Secondly, we searched for the user using the &lt;code&gt;userCollection.FindOne&lt;/code&gt;, pass the &lt;code&gt;objId&lt;/code&gt; as a filter and use the &lt;code&gt;Decode&lt;/code&gt; attribute method to get the corresponding object. Finally, we returned the decoded response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; &lt;em&gt;We also passed a&lt;/em&gt; &lt;code&gt;userId&lt;/code&gt; &lt;em&gt;as a parameter to the URL path. The specified parameter must match the one we specified in the controller.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit a User Endpoint&lt;/strong&gt;&lt;br&gt;
To edit a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;EditAUser&lt;/code&gt; function above does the same thing as the &lt;code&gt;CreateUser&lt;/code&gt; function. However, we included an &lt;code&gt;update&lt;/code&gt; variable to get updated fields and updated the collection using the &lt;code&gt;userCollection.UpdateOne&lt;/code&gt;. Lastly, we searched for the updated user’s details and returned the decoded response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Delete a User Endpoint&lt;/strong&gt;&lt;br&gt;
To delete a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;DeleteAUser&lt;/code&gt; function follows the previous steps by deleting the matched record using the &lt;code&gt;userCollection.DeleteOne&lt;/code&gt;. We also checked if an item was successfully  deleted and returned the appropriate response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get List of Users Endpoint&lt;/strong&gt;&lt;br&gt;
To get the list of users, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;GetAllUsers&lt;/code&gt; function follows the previous steps by getting the list of users using the &lt;code&gt;userCollection.Find&lt;/code&gt;. We also read the retuned list optimally using the &lt;code&gt;Next&lt;/code&gt; attribute method to loop through the returned list of users.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_controller.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_route.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With that done, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QS5uM2Az--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640698765987_Screenshot%2B2021-12-28%2Bat%2B10.58.17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QS5uM2Az--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_BC8769862BCEA31F821440B3676C5166FE78EC8D4A79B5249E1EA1C793C15DDC_1640698765987_Screenshot%2B2021-12-28%2Bat%2B10.58.17.png" alt="terminal output" width="880" height="294"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kd5NFYMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640692825871_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kd5NFYMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640692825871_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" alt="Create a user endpoint" width="880" height="717"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" alt="Get a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" alt="Edit a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" alt="Delete a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" alt="Get list of users endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" alt="Database with users document" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This post discussed how to structure a Gin-gonic application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;You may find these resources helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gorilla/mux"&gt;Gorilla/Mux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/drivers/go/current/"&gt;MongoDB Go Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/go-playground/validator"&gt;Go Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joho/godotenv"&gt;Go Environment Loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>mux</category>
      <category>mongodb</category>
      <category>restapi</category>
    </item>
    <item>
      <title>Build a REST API with Golang and MongoDB - Gin-gonic Version</title>
      <author>Demola Malomo</author>
      <pubDate>Mon, 03 Jan 2022 07:17:04 +0000</pubDate>
      <link>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-gin-gonic-version-269m</link>
      <guid>https://dev.to/hackmamba/build-a-rest-api-with-golang-and-mongodb-gin-gonic-version-269m</guid>
      <description>&lt;p&gt;Representational state transfer (REST) is an architectural pattern that guides an Application programming interface(API) design and development. REST APIs have become the standard of communication between the server part of the product and its client to increase performance, scalability, simplicity, modifiability, visibility, portability, and reliability.&lt;/p&gt;

&lt;p&gt;This post will discuss building a user management application with Golang using the &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin-gonic&lt;/a&gt; framework and &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;. At the end of this tutorial, we will learn how to structure a Gin-gonic application, build a REST API and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;Gin-gonic, popularly known as &lt;strong&gt;Gin&lt;/strong&gt;, is an HTTP web framework written in Golang with performance and productivity support. Gin uses a custom version of &lt;a href="https://github.com/julienschmidt/httprouter"&gt;HttpRouter&lt;/a&gt;, a lightweight, high-performance HTTP request router that navigates through API routes faster than most frameworks out there.&lt;/p&gt;

&lt;p&gt;MongoDB is a document-based database management program used as an alternative to relational databases. MongoDB supports working with large sets of distributed data with options to store or retrieve information seamlessly.&lt;/p&gt;

&lt;p&gt;You can find the complete source code in this &lt;a href="https://github.com/Mr-Malomz/gin-mongo-api"&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;The following steps in this post require Golang experience. Experience with MongoDB isn’t a requirement, but it’s nice to have.&lt;/p&gt;

&lt;p&gt;We will also be needing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://www.mongodb.com/"&gt;MongoDB account&lt;/a&gt; to host database. &lt;a href="https://www.mongodb.com/cloud/atlas/register"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com/downloads/"&gt;Postman&lt;/a&gt; or any API testing application of your choice&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let’s code
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;To get started, we need to navigate to the desired directory and run the command below in our terminal &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir gin-mongo-api &amp;amp;&amp;amp; cd gin-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command creates a  &lt;code&gt;gin-mongo-api&lt;/code&gt; folder and navigates into the project directory.&lt;/p&gt;

&lt;p&gt;Next, we need to initialize a Go module to manage project dependencies by running the command below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init gin-mongo-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command will create a &lt;code&gt;go.mod&lt;/code&gt; file for tracking project dependencies.&lt;/p&gt;

&lt;p&gt;We proceed to install the required dependencies with:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get -u github.com/gin-gonic/gin go.mongodb.org/mongo-driver/mongo github.com/joho/godotenv github.com/go-playground/validator/v10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;github.com/gin-gonic/gin&lt;/code&gt; is a framework for building web applications.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go.mongodb.org/mongo-driver/mongo&lt;/code&gt; is a driver for connecting to MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/joho/godotenv&lt;/code&gt; is a library for managing environment variables.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; is a library for validating structs and fields.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#application-entry-point"&gt;
  &lt;/a&gt;
  Application Entry Point
&lt;/h2&gt;

&lt;p&gt;With the project dependencies installed, we need to create &lt;code&gt;main.go&lt;/code&gt; file in the root directory and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Initialize a Gin router using the &lt;code&gt;Default&lt;/code&gt; configuration. The &lt;code&gt;Default&lt;/code&gt; function configures Gin router with default middlewares (logger and recovery).&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;Get&lt;/code&gt; function to route to &lt;code&gt;/&lt;/code&gt; path and a handler function that returns a JSON of &lt;code&gt;Hello from Gin-gonic &amp;amp; mongoDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;Run&lt;/code&gt; function to attach the &lt;code&gt;router&lt;/code&gt; to an &lt;strong&gt;http.Server&lt;/strong&gt; and starts listening and serving HTTP requests on &lt;code&gt;localhost:6000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bg8LVv1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640450184129_Screenshot%2B2021-12-25%2Bat%2B17.35.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bg8LVv1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640450184129_Screenshot%2B2021-12-25%2Bat%2B17.35.40.png" alt="Testing the app" width="880" height="745"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#modularization-in-golang"&gt;
  &lt;/a&gt;
  Modularization in Golang
&lt;/h2&gt;

&lt;p&gt;It is essential to have a good folder structure for our project. Good project structure simplifies how we work with dependencies in our application and makes it easier for us and others to read our codebase.&lt;br&gt;
To do this, we need to create  &lt;code&gt;configs&lt;/code&gt;, &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;responses&lt;/code&gt; and &lt;code&gt;routes&lt;/code&gt; folder in our project directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPjoYexz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640510349834_Screenshot%2B2021-12-26%2Bat%2B10.18.46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPjoYexz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640510349834_Screenshot%2B2021-12-26%2Bat%2B10.18.46.png" alt="Updated project folder structure" width="532" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;em&gt;The&lt;/em&gt; &lt;code&gt;go.sum&lt;/code&gt; &lt;em&gt;file contains all the dependency checksums, and is managed by the&lt;/em&gt; &lt;code&gt;go&lt;/code&gt; &lt;em&gt;tools. We don’t have to worry about it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;configs&lt;/code&gt; is for modularizing project configuration files&lt;/p&gt;

&lt;p&gt;&lt;code&gt;controllers&lt;/code&gt; is for modularizing application logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;models&lt;/code&gt; is for modularizing data and database logics.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;responses&lt;/code&gt; is for modularizing files describing the response we want our API to give. This will become clearer later on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;routes&lt;/code&gt; is for modularizing URL pattern and handler information.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-mongodb"&gt;
  &lt;/a&gt;
  Setting up MongoDB
&lt;/h2&gt;

&lt;p&gt;With that done, we need to log in or sign up into our &lt;a href="https://dev.tohttp://"&gt;MongoDB&lt;/a&gt; account. Click the project dropdown menu and click on the &lt;strong&gt;New Project&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XcTSNMP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637365380025_Screenshot%2B2021-11-20%2Bat%2B00.33.27.png" alt="New Project" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter the &lt;code&gt;golang-api&lt;/code&gt; as the project name, click &lt;strong&gt;Next&lt;/strong&gt;, and click &lt;strong&gt;Create Project..&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uune2Wsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449262_Screenshot%2B2021-12-26%2Bat%2B10.35.59.png" alt="enter project name" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGS_XE7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511449329_Screenshot%2B2021-12-26%2Bat%2B10.36.27.png" alt="Create Project" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Build a Database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o3Vw_2qG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640511574285_Screenshot%2B2021-12-26%2Bat%2B10.38.59.png" alt="" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Shared&lt;/strong&gt; as the type of database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n-gcwCkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334670330_Screenshot%2B2021-11-19%2Bat%2B15.59.38.png" alt="Shared highlighted in red" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Create&lt;/strong&gt; to setup a cluster. This might take sometime to setup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwJDLYJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B58C50BB61437E91E681B5825981F54733906EC9A6070DFB4A21109C66F0E3FA_1637334961608_Screenshot%2B2021-11-19%2Bat%2B16.13.28.png" alt="Creating a cluster" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to create a user to access the database externally by inputting the &lt;strong&gt;Username&lt;/strong&gt;, &lt;strong&gt;Password&lt;/strong&gt; and then clicking on &lt;strong&gt;Create User&lt;/strong&gt;. We also need to add our IP address to safely connect to the database by clicking on the &lt;strong&gt;Add My Current IP Address&lt;/strong&gt; button. Then click on &lt;strong&gt;Finish and Close&lt;/strong&gt; to save changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zP-GoZeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512109914_Screenshot%2B2021-12-26%2Bat%2B10.43.36.png" alt="Create user" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgYrk21O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512118747_Screenshot%2B2021-12-26%2Bat%2B10.43.52.png" alt="Add IP" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On saving the changes, we should see a Database Deployments screen, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRNiaxls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512328028_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Database Screen" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#connecting-our-application-to-mongodb"&gt;
  &lt;/a&gt;
  Connecting our application to MongoDB
&lt;/h2&gt;

&lt;p&gt;With the configuration done, we need to connect our application with the database created. To do this, click on the &lt;strong&gt;Connect&lt;/strong&gt; button&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLXpDCQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640512936968_Screenshot%2B2021-12-26%2Bat%2B10.51.34.png" alt="Connect to database" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Connect your application&lt;/strong&gt;, change the &lt;strong&gt;Driver&lt;/strong&gt; to &lt;code&gt;Go&lt;/code&gt; and the &lt;strong&gt;Version&lt;/strong&gt; as shown below. Then click on the copy &lt;strong&gt;icon&lt;/strong&gt; to copy the connection string.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKRof165--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302462_Screenshot%2B2021-12-26%2Bat%2B11.03.40.png" alt="connect application" width="880" height="475"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XsQ4KIjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640513302542_Screenshot%2B2021-12-26%2Bat%2B11.04.29.png" alt="Copy connection string" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup Environment Variable&lt;/strong&gt;&lt;br&gt;
Next, we must modify the copied connection string with the user's password we created earlier and change the database name. To do this, first, we need to create a &lt;code&gt;.env&lt;/code&gt; file in the root directory, and in this file, add the snippet below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://&amp;lt;YOUR USERNAME HERE&amp;gt;:&amp;lt;YOUR PASSWORD HERE&amp;gt;@cluster0.e5akf.mongodb.net/myFirstDatabese?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Sample of a properly filled connection string below:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MONGOURI=mongodb+srv://malomz:malomzPassword@cluster0.e5akf.mongodb.net/golangDB?retryWrites=true&amp;amp;w=majority
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eraqhw92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640514977875_Screenshot%2B2021-12-26%2Bat%2B11.36.06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eraqhw92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640514977875_Screenshot%2B2021-12-26%2Bat%2B11.36.06.png" alt="Updated folder structure with .env file" width="544" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Load Environment Variable&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a helper function to load the environment variable using the &lt;code&gt;github.com/joho/godotenv&lt;/code&gt; library we installed earlier.  To do this, we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create an &lt;code&gt;env.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create an &lt;code&gt;EnvMongoURI&lt;/code&gt; function that checks if the environment variable is correctly loaded and returns the environment variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Connecting to MongoDB&lt;/strong&gt; &lt;br&gt;
To connect to the MongoDB database from our application, first we need to navigate to the &lt;code&gt;configs&lt;/code&gt; folder and in this folder, create a &lt;code&gt;setup.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;ConnectDB&lt;/code&gt; function that first configures the client to use the correct URI and check for errors. Secondly, we defined a timeout of 10 seconds we wanted to use when trying to connect. Thirdly, check if there is an error while connecting to the database and cancel the connection if the connecting period exceeds 10 seconds. Finally, we pinged the database to test our connection and returned the &lt;code&gt;client&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;DB&lt;/code&gt; variable instance of the &lt;code&gt;ConnectDB&lt;/code&gt;. This will come in handy when creating collections.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetCollection&lt;/code&gt; function to retrieve and create &lt;code&gt;collections&lt;/code&gt; on the database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to connect to the database when our application startup. To do this, we need to modify &lt;code&gt;main.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#setup-api-route-handler-and-response-type"&gt;
  &lt;/a&gt;
  Setup API Route Handler and Response Type
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Route Handler&lt;/strong&gt;&lt;br&gt;
With that done, we need to create a  &lt;code&gt;user_route.go&lt;/code&gt; file inside the &lt;code&gt;routes&lt;/code&gt; folder to manage all the user-related routes in our application, as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Next, we need to attach the newly created route to the &lt;strong&gt;http.Server&lt;/strong&gt; in &lt;code&gt;main.go&lt;/code&gt; by modifying it as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Response Type&lt;/strong&gt;&lt;br&gt;
Next, we need to create a reusable &lt;code&gt;struct&lt;/code&gt; to describe our API’s response. To do this, navigate to the &lt;code&gt;responses&lt;/code&gt; folder and in this folder, create a &lt;code&gt;user_response.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above creates a &lt;code&gt;UserResponse&lt;/code&gt; struct with &lt;code&gt;Status&lt;/code&gt;, &lt;code&gt;Message&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt; property to represent the API response type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: &lt;code&gt;json:"status"&lt;/code&gt;&lt;em&gt;,&lt;/em&gt; &lt;code&gt;json:"message"&lt;/code&gt;&lt;em&gt;, and&lt;/em&gt; &lt;code&gt;json:"data"&lt;/code&gt; &lt;em&gt;are known as struct tags. Struct tags allow us to attach meta-information to corresponding struct properties. In other words, we use them to reformat the JSON response returned by the API.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-creating-rest-apis"&gt;
  &lt;/a&gt;
  Finally, Creating REST API’s
&lt;/h2&gt;

&lt;p&gt;Next, we need a model to represent our application data. To do this, we need to navigate to the &lt;code&gt;models&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_model.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;User&lt;/code&gt; struct with required properties. We added &lt;code&gt;omitempty&lt;/code&gt; and &lt;code&gt;validate:"required"&lt;/code&gt; to the struct tag to tell Gin-gonic to ignore empty fields and make the field required, respectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Create a User Endpoint&lt;/strong&gt;&lt;br&gt;
With the model setup, we can now create a function to create a user. To do this, we need to navigate to the &lt;code&gt;controllers&lt;/code&gt; folder, and in this folder, create a &lt;code&gt;user_controller.go&lt;/code&gt; file and add the snippet below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;userCollection&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; variables to create a collection and validate models using the &lt;code&gt;github.com/go-playground/validator/v10&lt;/code&gt; library we installed earlier on, respectively.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;CreateUser&lt;/code&gt; function that returns a Gin-gonic handler. Inside the returned handler, we first defined a timeout of 10 seconds when inserting user into the document, validating both the request body and required field using the validator library. We returned the appropriate message and status code using the &lt;code&gt;UserResponse&lt;/code&gt; struct we created earlier. Secondly, we created a &lt;code&gt;newUser&lt;/code&gt; variable, inserted it using the &lt;code&gt;userCollection.InsertOne&lt;/code&gt; function and check for errors if there are any. Finally, we returned the correct response if the insert was successful.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get a User Endpoint&lt;/strong&gt;&lt;br&gt;
To get the details of a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the required dependencies.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;GetAUser&lt;/code&gt; function that returns a Gin-gonic handler. Inside the returned handler, we first defined a timeout of 10 seconds when finding a user in the document, a &lt;code&gt;userId&lt;/code&gt; variable to get the user’s &lt;strong&gt;id&lt;/strong&gt; from the URL parameter and a &lt;code&gt;user&lt;/code&gt;  variable. We converted the &lt;code&gt;userId&lt;/code&gt; from a string to a &lt;code&gt;primitive.ObjectID&lt;/code&gt; type, a BSON type MongoDB uses. Secondly, we searched for the user using the &lt;code&gt;userCollection.FindOne&lt;/code&gt;, pass the &lt;code&gt;objId&lt;/code&gt; as a filter and use the &lt;code&gt;Decode&lt;/code&gt; attribute method to get the corresponding object. Finally, we returned the decoded response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; &lt;em&gt;We also passed a&lt;/em&gt; &lt;code&gt;userId&lt;/code&gt; &lt;em&gt;as a parameter to the URL path. The specified parameter must match the one we specified in the controller.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit a User Endpoint&lt;/strong&gt;&lt;br&gt;
To edit a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;EditAUser&lt;/code&gt; function above does the same thing as the &lt;code&gt;CreateUser&lt;/code&gt; function. However, we included an &lt;code&gt;update&lt;/code&gt; variable to get updated fields and updated the collection using the &lt;code&gt;userCollection.UpdateOne&lt;/code&gt;. Lastly, we searched for the updated user’s details and returned the decoded response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Delete a User Endpoint&lt;/strong&gt;&lt;br&gt;
To delete a user, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;DeleteAUser&lt;/code&gt; function follows the previous steps by deleting the matched record using the &lt;code&gt;userCollection.DeleteOne&lt;/code&gt;. We also checked if an item was successfully deleted and returned the appropriate response.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Get List of Users Endpoint&lt;/strong&gt;&lt;br&gt;
To get the list of users, we need to modify &lt;code&gt;user_controller.go&lt;/code&gt; as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;GetAllUsers&lt;/code&gt; function follows the previous steps by getting the list of users using the &lt;code&gt;userCollection.Find&lt;/code&gt;. We also read the retuned list optimally using the &lt;code&gt;Next&lt;/code&gt; attribute method to loop through the returned list of users.&lt;/p&gt;

&lt;p&gt;Next, we need to update &lt;code&gt;user_routes.go&lt;/code&gt; with the route API URL and corresponding controller as shown below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_controller.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete user_route.go&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With that done, we can test our application by starting the development server by running the command below in our terminal.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WH1lBkOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566569640_Screenshot%2B2021-12-26%2Bat%2B16.17.02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WH1lBkOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566569640_Screenshot%2B2021-12-26%2Bat%2B16.17.02.png" alt="terminal output" width="880" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kd5NFYMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640692825871_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kd5NFYMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640692825871_Screenshot%2B2021-12-28%2Bat%2B12.59.51.png" alt="Create a user endpoint" width="880" height="717"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dC1m6tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566665581_Screenshot%2B2021-12-26%2Bat%2B20.59.07.png" alt="Get a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-N5xS4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566698763_Screenshot%2B2021-12-27%2Bat%2B00.28.38.png" alt="Edit a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQCOJtbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566729703_Screenshot%2B2021-12-27%2Bat%2B00.49.33.png" alt="Delete a user endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnDA6MG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640566748806_Screenshot%2B2021-12-27%2Bat%2B01.16.15.png" alt="Get list of users endpoint" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUQg6jdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_0E637C74C0D58C5FC3FBA1D21E2CF4F11E7592B7929DAE10790A9D12FE972D1D_1640609703212_Screenshot%2B2021-12-26%2Bat%2B19.39.22.png" alt="Database with users document" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This post discussed how to structure a Gin-gonic application, build a REST API, and persist our data using MongoDB.&lt;/p&gt;

&lt;p&gt;You may find these resources helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gin-gonic/gin"&gt;Gin-gonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/drivers/go/current/"&gt;MongoDB Go Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/go-playground/validator"&gt;Go Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joho/godotenv"&gt;Go Environment Loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>gin</category>
      <category>mongodb</category>
      <category>restapi</category>
    </item>
    <item>
      <title>Top 3 Automation Testing Tools for 2022</title>
      <author>DHEEYANKA PRIYA BOMMISETTY</author>
      <pubDate>Mon, 03 Jan 2022 06:39:49 +0000</pubDate>
      <link>https://dev.to/dheeyankapriya/top-3-automation-testing-tools-for-2022-1dpe</link>
      <guid>https://dev.to/dheeyankapriya/top-3-automation-testing-tools-for-2022-1dpe</guid>
      <description>&lt;p&gt;Using the right automation testing tools is incredibly beneficial to your software testing efforts and delivery success. Right set of tools will have a greater impact on the efforts we put on development &amp;amp; maintenance of automation frameworks. Here is the list of tools that I found and currently using for &lt;strong&gt;UI Automation&lt;/strong&gt;, &lt;strong&gt;API Automation&lt;/strong&gt; and &lt;strong&gt;Performance testing&lt;/strong&gt;. There are other great tools out there in the market but this article doesn't include or compare with them as this list is purely opinionated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ui-automation"&gt;
  &lt;/a&gt;
  UI Automation
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Cypress&lt;/strong&gt; is a powerful testing tool that needs no introduction if you have been developing frontend apps recently. The cypress home page starts with the coolest testing quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The web has evolved. Finally, testing has too.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With its features, cypress truly stands for what it says.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cypress-io"&gt;
        cypress-io
      &lt;/a&gt; / &lt;a href="https://github.com/cypress-io/cypress"&gt;
        cypress
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast, easy and reliable testing for anything that runs in a browser.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://www.cypress.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EmZsSlN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/1268976/20607953/d7ae489c-b24a-11e6-9cc4-91c6c74c5e88.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://on.cypress.io" rel="nofollow"&gt;Documentation&lt;/a&gt; |
  &lt;a href="https://on.cypress.io/changelog" rel="nofollow"&gt;Changelog&lt;/a&gt; |
  &lt;a href="https://on.cypress.io/roadmap" rel="nofollow"&gt;Roadmap&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;

  The web has evolved. Finally, testing has too.
&lt;/h3&gt;

&lt;p&gt;
  Fast, easy and reliable testing for anything that runs in a browser.
&lt;/p&gt;

&lt;p&gt;
  Join us, we're &lt;a href="https://cypress.io/jobs" rel="nofollow"&gt;hiring&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/cypress" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/7d3a4e8732acc4044f314b21635e537d614b18b3ffecfcafea1314b44cfc6382/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f637970726573732e737667" alt="npm"&gt;
  &lt;/a&gt;
  &lt;a href="https://gitter.im/cypress-io/cypress" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/730406499fd7e24967944912e39fec1dbf25d960a78373b541997ef17414f9ef/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f637970726573732d696f2f637970726573732e737667" alt="Gitter chat"&gt;
  &lt;/a&gt;
    &lt;a href="https://stackshare.io/cypress" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8e7acb60c2eb3ac4d9b77bada06705e8a43a726818e92c6713c6d684108b17fa/68747470733a2f2f696d672e737461636b73686172652e696f2f6d6973632f666f6c6c6f772d6f6e2d737461636b73686172652d62616467652e737667" alt="StackShare"&gt;
  &lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
What is Cypress?&lt;/h2&gt;
&lt;p&gt;
  &lt;a href="https://player.vimeo.com/video/237527670" rel="nofollow"&gt;
    &lt;img alt="Why Cypress Video" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Te6AZuC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png" width="75%" height="75%"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Installing&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/js/cypress" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4bc5573c6da1fdafdc5716abb349dfe898b23a4d7f4e4eff1e08b998b94b441c/68747470733a2f2f62616467652e667572792e696f2f6a732f637970726573732e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href="https://docs.cypress.io/guides/getting-started/installing-cypress.html" rel="nofollow"&gt;get started&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install cypress --save-dev&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add cypress --dev&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2KiHmn6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/1271364/31740846-7bf607f0-b420-11e7-855f-41c996040d31.gif" alt="installing-cli e1693232"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://circleci.com/gh/cypress-io/cypress/tree/develop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a081936fd8432ac2f85ca4992435a31f956622f1628c1e5ca823a59529659ea/68747470733a2f2f636972636c6563692e636f6d2f67682f637970726573732d696f2f637970726573732f747265652f646576656c6f702e7376673f7374796c653d737667" alt="CircleCI"&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://circleci.com/gh/cypress-io/cypress/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41d86764321fba461768a0c81a93890325bb8a1a021a454bbe766567354040af/68747470733a2f2f636972636c6563692e636f6d2f67682f637970726573732d696f2f637970726573732f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI"&gt;&lt;/a&gt; - &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see our &lt;a href="https://github.com/cypress-io/cypress./CONTRIBUTING.md"&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/cypress-io/cypress/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/45b4ffbd594af47fe09a3432f9f8e122c6518aa6352b4ce453a1a2563da2905c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667" alt="license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project is licensed under the terms of the &lt;a href="https://github.com/cypress-io/cypress/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Badges&lt;/h2&gt;
&lt;p&gt;Let the world know your project is using Cypress.io to test with this cool badge&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cypress.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16428bf59999e11f6c40a85fd6ac1e6ac7f040065a9107e94647020f3135676b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f746573746564253230776974682d437970726573732d3034433338452e737667" alt="Cypress.io"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cypress-io/cypress"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Cypress makes tests easier as it is interactive and runs alongside your application. This means that the Cypress test runner has full access to your code, and doesn’t run externally like Selenium frameworks do.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#api-automation"&gt;
  &lt;/a&gt;
  API Automation
&lt;/h2&gt;

&lt;p&gt;Our application is powered by numerous micro-services that are communicating with each other through an API interface. Having automated API testing became paramount for us as they represent the entire application logic. Following the traditional approaches to test the API's will no longer work. We need the &lt;strong&gt;next-gen&lt;/strong&gt; tool that aligns with the world of micro-services. After a lot of exploration, we decided to go with &lt;strong&gt;PactumJS&lt;/strong&gt;. Considering its features, I believe it is the &lt;strong&gt;most underrated&lt;/strong&gt; open source testing tool available in the market.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pactumjs"&gt;
        pactumjs
      &lt;/a&gt; / &lt;a href="https://github.com/pactumjs/pactum"&gt;
        pactum
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      REST API Testing Tool for all levels in a Test Pyramid
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;span&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61209e8931a18fd1fc1c40367761b9c979a32faacd2a2d17d299b220dce89afd/68747470733a2f2f70616374756d6a732e6769746875622e696f2f5f6d656469612f6c6f676f2d69636f6e2d736d616c6c2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61209e8931a18fd1fc1c40367761b9c979a32faacd2a2d17d299b220dce89afd/68747470733a2f2f70616374756d6a732e6769746875622e696f2f5f6d656469612f6c6f676f2d69636f6e2d736d616c6c2e737667" alt="logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
PactumJS&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/pactumjs/pactum/workflows/Build/badge.svg?branch=master"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CrgUMJTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/pactumjs/pactum/workflows/Build/badge.svg%3Fbranch%3Dmaster" alt="Build"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f781f113e5665cff6f0f56079cd164ac4174df4b5835840b42bce4a966cb3248/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f636f7665726167652f41536169416e75646565702f70616374756d"&gt;&lt;img src="https://camo.githubusercontent.com/f781f113e5665cff6f0f56079cd164ac4174df4b5835840b42bce4a966cb3248/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f636f7665726167652f41536169416e75646565702f70616374756d" alt="Coverage"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/985ec3a7bbfbd58e0e93a2d600ad082ca889f0710eae24c5edeac684384ccbcb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f70616374756d"&gt;&lt;img src="https://camo.githubusercontent.com/985ec3a7bbfbd58e0e93a2d600ad082ca889f0710eae24c5edeac684384ccbcb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f70616374756d" alt="Downloads"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6cced005661e068f85f7b5fbc9bd1e3071a63f8c1102ce2f471d808b9c9c579f/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f70616374756d"&gt;&lt;img src="https://camo.githubusercontent.com/6cced005661e068f85f7b5fbc9bd1e3071a63f8c1102ce2f471d808b9c9c579f/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f70616374756d" alt="Size"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c5a39924faef1667603859415235f655385662addbce6030d7941a2f2e2a773e/68747470733a2f2f696d672e736869656c64732e696f2f6e6f64652f762f70616374756d"&gt;&lt;img src="https://camo.githubusercontent.com/c5a39924faef1667603859415235f655385662addbce6030d7941a2f2e2a773e/68747470733a2f2f696d672e736869656c64732e696f2f6e6f64652f762f70616374756d" alt="Platform"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pactumjs/pactum/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/d9d21f154f835c3a91a923eb30f79018026b3aa6bf6816abe532c036e788b492/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f70616374756d6a732f70616374756d3f7374796c653d736f6369616c" alt="Stars"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/pactumjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe1b8dffa1edfeb9926570db3cf0b71589a5652aa0a4349f99f9fc53d210fac2/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f70616374756d6a733f6c6162656c3d466f6c6c6f77267374796c653d736f6369616c" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
REST API Testing Tool for all levels in a Test Pyramid&lt;/h4&gt;
&lt;/span&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://pactumjs.github.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mx2rcYWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/pactumjs/pactum/master/assets/demo.gif" alt="PactumJS Demo"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;strong&gt;PactumJS&lt;/strong&gt; is a REST API Testing Tool used to automate e2e, integration, contract &amp;amp; component (&lt;em&gt;or service level&lt;/em&gt;) tests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
⚡ Swift&lt;/li&gt;
&lt;li&gt;
🎈 Lightweight&lt;/li&gt;
&lt;li&gt;
🚀 Simple &amp;amp; Powerful&lt;/li&gt;
&lt;li&gt;
🛠️ Compelling Mock Server&lt;/li&gt;
&lt;li&gt;
💎 Elegant Data Management&lt;/li&gt;
&lt;li&gt;
🔧 Extendable &amp;amp; Customizable&lt;/li&gt;
&lt;li&gt;
📚 Clear &amp;amp; Comprehensive Testing Style&lt;/li&gt;
&lt;li&gt;
🔗 Component, Contract &amp;amp; E2E testing of APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/pactumjs/pactum/master/assets/rainbow.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxNpakPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pactumjs/pactum/master/assets/rainbow.png" alt="----------"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;This readme offers an basic introduction to the library. Head over to the full documentation at &lt;a href="https://pactumjs.github.io" rel="nofollow"&gt;https://pactumjs.github.io&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pactumjs.github.io/#/request-making" rel="nofollow"&gt;API Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pactumjs.github.io/#/integration-testing" rel="nofollow"&gt;Integration Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pactumjs.github.io/#/component-testing" rel="nofollow"&gt;Component Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pactumjs.github.io/#/contract-testing" rel="nofollow"&gt;Contract Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pactumjs.github.io/#/e2e-testing" rel="nofollow"&gt;E2E Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pactumjs.github.io/#/mock-server" rel="nofollow"&gt;Mock Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Need Help&lt;/h2&gt;
&lt;p&gt;We use Github &lt;a href="https://github.com/pactumjs/pactum/discussions"&gt;Discussions&lt;/a&gt; to receive feedback, discuss ideas &amp;amp; answer questions.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install pactum as a dev dependency&lt;/span&gt;
npm install --save-dev pactum
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install a test runner to run pactum tests&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; mocha / jest / cucumber&lt;/span&gt;
npm install --save-dev mocha&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/pactumjs/pactum/master/assets/rainbow.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxNpakPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pactumjs/pactum/master/assets/rainbow.png" alt="----------"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;pactum&lt;/strong&gt; can be used for all levels…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pactumjs/pactum"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;As most of out tech stack was in Node.js, it was simple for developers to contribute to API testing. Instead of having unit tests, developers started writing component tests for their services. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#performance-testing"&gt;
  &lt;/a&gt;
  Performance Testing
&lt;/h2&gt;

&lt;p&gt;For performance testing we want a tool that is scriptable, version controlled and easy for users to adapt. As all our services communicate over HTTP, we don't need a tool that supports wide range of protocols. Keeping that in mind, we came across &lt;strong&gt;k6&lt;/strong&gt;. It is a developer-centric, free and open-source load testing tool built for making performance testing a productive and enjoyable experience.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/grafana"&gt;
        grafana
      &lt;/a&gt; / &lt;a href="https://github.com/grafana/k6"&gt;
        k6
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A modern load testing tool, using Go and JavaScript - https://k6.io
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://k6.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibA2_vOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/grafana/k6assets/k6-logo-with-grafana.svg" alt="k6" width="258" height="210"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Like unit testing, for performance&lt;/h3&gt;
&lt;p&gt;A modern load testing tool for developers and testers in the DevOps era.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://github.com/k6io/k6/releases"&gt;&lt;img src="https://camo.githubusercontent.com/2d0ac62a50e5cd22e52c246f8a96b8b14309398a76086b9c5ed870f7914965f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6b36696f2f6b362e737667" alt="Github release"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/k6io/k6/actions/workflows/all.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfpZ-vqr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/k6io/k6/actions/workflows/all.yml/badge.svg" alt="Build status"&gt;&lt;/a&gt;
  &lt;a href="https://goreportcard.com/report/github.com/k6io/k6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbcdc41de2704f5819bc1ac9603014e72f62f28802b7118aba53ae0c14b65c77/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6b36696f2f6b36" alt="Go Report Card"&gt;&lt;/a&gt;
  &lt;a href="https://codecov.io/gh/k6io/k6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08fc62cf90ab612d5e72242ee934969f7167ffdbcf0d623318d1de9f4c8cd217/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6b36696f2f6b362f6d61737465722e737667" alt="Codecov branch"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://twitter.com/k6_io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/417423c3f1545432d842b0ac12a1a7a439dfbf24a160a444d9395988d80eff74/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d406b365f696f2d3535616365652e737667" alt="@k6_io on Twitter"&gt;&lt;/a&gt;
  &lt;a href="https://k6.io/slack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dc191138d7586b2771594ce3bff93e74e633b069e7ab0b2791f65587eedb508/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d6b362d6666363962342e737667" alt="Slack channel"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    &lt;a href="https://github.com/k6io/k6/releases"&gt;Download&lt;/a&gt; ·
    &lt;a href="https://github.com/grafana/k6#install"&gt;Install&lt;/a&gt; ·
    &lt;a href="https://k6.io/docs" rel="nofollow"&gt;Documentation&lt;/a&gt; ·
    &lt;a href="https://community.k6.io/" rel="nofollow"&gt;Community Forum&lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/grafana/k6assets/github-hr.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l5jyd8jb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/grafana/k6assets/github-hr.png" alt="---"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;k6&lt;/strong&gt; is a modern load testing tool, building on &lt;a href="https://k6.io/about" rel="nofollow"&gt;our&lt;/a&gt; years of experience in the load and performance testing industry. It provides a clean, approachable scripting API, &lt;a href="https://k6.io/docs/getting-started/running-k6" rel="nofollow"&gt;local&lt;/a&gt; and &lt;a href="https://k6.io/docs/cloud" rel="nofollow"&gt;cloud execution&lt;/a&gt;, and flexible configuration.&lt;/p&gt;

&lt;p&gt;This is how load testing should look in the 21st century.&lt;/p&gt;

&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/grafana/k6assets/k6-demo.gif"&gt;&lt;img width="600" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dsQzKTWV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/grafana/k6assets/k6-demo.gif"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Menu&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/k6#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/k6#install"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/k6#running-k6"&gt;Running k6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/k6#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/k6#contributing"&gt;Need help or want to contribute?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Features&lt;/h2&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Scripting in ES6 JS&lt;/strong&gt;: support for &lt;a href="https://k6.io/docs/using-k6/modules" rel="nofollow"&gt;modules&lt;/a&gt; to aid code reusability across an organization&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Everything as code&lt;/strong&gt;: test logic and &lt;a href="https://k6.io/docs/using-k6/options" rel="nofollow"&gt;configuration options&lt;/a&gt; are both in JS for version control friendliness&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Automation-friendly&lt;/strong&gt;: &lt;a href="https://k6.io/docs/using-k6/checks" rel="nofollow"&gt;checks&lt;/a&gt; (like asserts) and &lt;a href="https://k6.io/docs/using-k6/thresholds" rel="nofollow"&gt;thresholds&lt;/a&gt; for easy and flexible CI configuration!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://k6.io/docs/using-k6/http-requests" rel="nofollow"&gt;&lt;strong&gt;HTTP/1.1&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://k6.io/docs/using-k6/protocols/http-2" rel="nofollow"&gt;&lt;strong&gt;HTTP/2&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://k6.io/docs/using-k6/protocols/websockets" rel="nofollow"&gt;&lt;strong&gt;WebSocket&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://k6.io/docs/using-k6/protocols/grpc" rel="nofollow"&gt;&lt;strong&gt;gRPC&lt;/strong&gt;&lt;/a&gt; protocol support&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TLS features&lt;/strong&gt;: &lt;a href="https://k6.io/docs/using-k6/protocols/ssl-tls/ssl-tls-client-certificates" rel="nofollow"&gt;client certificates&lt;/a&gt;, &lt;a href="https://k6.io/docs/using-k6/protocols/ssl-tls/ssl-tls-version-and-ciphers" rel="nofollow"&gt;configurable SSL/TLS versions and ciphers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/grafana/k6"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;Both our UI and API Automation testing tools are in JavaScript. With k6, all our testing needs are met by a single programming language.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cypress&lt;/strong&gt;, &lt;strong&gt;PactumJS&lt;/strong&gt; &amp;amp; &lt;strong&gt;k6&lt;/strong&gt; are the open-source automation testing tools that we have considered as the top 3 for year 2022.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>testing</category>
      <category>automation</category>
      <category>javascript</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Node.js vs Python: Which Backend Technology to choose in 2021?</title>
      <author>Linearloop Private Limited</author>
      <pubDate>Mon, 03 Jan 2022 06:15:31 +0000</pubDate>
      <link>https://dev.to/linearloop/nodejs-vs-python-which-backend-technology-to-choose-in-2021-pmm</link>
      <guid>https://dev.to/linearloop/nodejs-vs-python-which-backend-technology-to-choose-in-2021-pmm</guid>
      <description>&lt;p&gt;Developers cannot decide on any backend technology depending on their choice because it must be as per the demand of the project. While planning for web app development, it may be possible that you find Node.JS beneficial for the project.&lt;/p&gt;

&lt;p&gt;On the other hand, there are many other &lt;a href="https://www.linearloop.io/web-development/"&gt;web development services&lt;/a&gt; that demand Python. Hence depending on the project demand, developers choose the required backend and front technology.&lt;/p&gt;

&lt;p&gt;The ultimate aim is to execute the project on time by meeting the complete requirement.&lt;/p&gt;

&lt;p&gt;In this blog, we will compare Node.JS Vs. Python for backend technology on various parameters. As a result, you will get to know which one is better and when. See, nothing can always be good or bad.&lt;/p&gt;

&lt;p&gt;The same applies to these technical aspects as well. So let’s analyze Node.JS Vs. Python and see which is better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;Architecture is one of the important parameters that is always considered while choosing any backend technology. Hence, Architecture is our first parameter based on which we will compare Node.JS vs. Python.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node.JS:&lt;/strong&gt; The architecture of Node.JS is event-driven that further supports input and output. On execution of any event, the invoked program makes sure that no program should stop the running thread.  Also, there is no need for resources and memory in Node.JS, because here, a single thread can handle multiple requests.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Python:&lt;/strong&gt; The architecture of Python is completely different from Node.JS. With the implementation of certain tools, the technology can be made asynchronous event-driven. With the module “asyncio”, one can write the asynchronous code. Also, there is some extra effort is required because most of the frameworks of Python do not have this feature.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;If we focus on Architecture, here Node.JS will be preferred over Python.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#libraries-amp-dev-tools"&gt;
  &lt;/a&gt;
  Libraries &amp;amp; Dev Tools
&lt;/h2&gt;

&lt;p&gt;Now we will compare the technologies based on their libraries and dev tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node.js:&lt;/strong&gt; If we work on Node.js, we get well-structured and comprehensive libraries through Node Package Manager. Moreover, the technology becomes more advantageous because of 350,000 packages and it is the world’s largest repository of packages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Python:&lt;/strong&gt; Pip Installs Packages (PIP) manage the Python libraries. Few libraries are properly documented and their deployment is simple. As technology evolves, the new libraries are not structured and documented as expected.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Hence based on libraries and development tools, Node.JS becomes the choice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance:
&lt;/h2&gt;

&lt;p&gt;Node.JS Vs Python performance has been analyzed here and a final conclusion is drawn for better performance. Hence if you are planning for web app development, keep this parameter in mind.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node.JS:&lt;/strong&gt; The speed of Node.JS is phenomenal and this is the reason for which Node.JS gets preference. Here, the JavaScript is converted via the V8 engine and hence its speed becomes outstanding. Also, Node.JS executes code outside of your browser as a result of which the application utilizes lesser resources. It also enhances the performance of the application.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Python:&lt;/strong&gt; As we know, JavaScript and Python are interpretive programming languages and they are a little slow in comparison to Node.JS. Also, Python is a single-flow programming language and hence the handling of requests is not as fast as Node.JS. Request handling process is a little sluggish in Python.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Based on the performance, Node.JS wins here. It is fine, Python is simple to understand but speed is the concern here. So if performance is the parameter, the web application development services should go with Node.JS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability:
&lt;/h2&gt;

&lt;p&gt;Now the comparison of Python and Node.JS is done on the basis of their scalability. So let’s have a look.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node.JS:&lt;/strong&gt; Here, the developers will have the flexibility to create a collection of microservices. Each module will use the compact system and also execute its individual operations. Also, one can add any new module anytime that makes the system more flexible and agile. Moreover, Node.JS has more alternatives if we compare it with Python.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Python:&lt;/strong&gt; In order to scale a program, multithreading is mandatory which is not permitted in Python. Although, Python has the libraries for multithreading they are not real. Here, only one thread runs at the given time as per GIL (Global Interpreter Lock).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;When scalability comes, Node.JS should be given preference for web app development.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#final-conclusion"&gt;
  &lt;/a&gt;
  Final Conclusion
&lt;/h4&gt;

&lt;p&gt;As we have stated earlier, the selection of any technology or programming language is completely dependent upon the requirement of the project and the expectation of the client.&lt;/p&gt;

&lt;p&gt;Being leading &lt;strong&gt;&lt;a href="https://www.linearloop.io/web-development/"&gt;web app development company in India&lt;/a&gt;&lt;/strong&gt;, Linearloop always recommends analyzing the requirement properly. Afterward, you should select the best-suited backend technology that can either be Python or Node.JS. Let us know if you are looking to know more.&lt;/p&gt;

</description>
      <category>node</category>
      <category>python</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to update PHP in WordPress?</title>
      <author>aashiya123</author>
      <pubDate>Mon, 03 Jan 2022 06:08:18 +0000</pubDate>
      <link>https://dev.to/aashiya123/how-to-update-php-in-wordpress-5cnc</link>
      <guid>https://dev.to/aashiya123/how-to-update-php-in-wordpress-5cnc</guid>
      <description>&lt;p&gt;As we have discussed earlier, some languages run on web browsers and PHP is one of them. If you own your web server, you will be able to make changes yourself, but if you have hosted your website via a third-party then you need to contact them for making the required changes. But having a third-party, it will not be your job to manage and maintain the updates, they will do it on their own whenever a new version update is available. Same goes with the plugins, themes, and PHP version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Via cPanel&lt;/strong&gt;&lt;br&gt;
It also follows the same steps as login into your web hosting account. Then you can look for the software section where you can check the selected PHP version as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2qv2nMr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/104ykun2uusa98zlffc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2qv2nMr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/104ykun2uusa98zlffc8.png" alt="Image description" width="608" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click it and you can see the next page displaying the PHP version. From there, you can select the latest version for the PHP as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PY3qjLNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qflj1d39l9ohaz91yojh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PY3qjLNx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qflj1d39l9ohaz91yojh.png" alt="Image description" width="601" height="294"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Via WordPress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can follow the below-mentioned simple steps to check the PHP version.&lt;br&gt;
You can look for the plugin “Display PHP Version” and install it. You can find it in the WordPress repository as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vy4dMWab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xufc6989h2uteu7j0zo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vy4dMWab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xufc6989h2uteu7j0zo.png" alt="Image description" width="596" height="228"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now activate the plugin. Then navigate to the WordPress dashboard-&amp;gt; home-&amp;gt; at a glance.&lt;br&gt;
You will be redirected to the new page where you will be able to see the PHP version on which your website is running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kscN_MNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsgumf817dv9najnmwrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kscN_MNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsgumf817dv9najnmwrr.png" alt="Image description" width="593" height="164"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;click the Update option available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contacting host provider&lt;/strong&gt;&lt;br&gt;
If you are using a third-party for hosting your website, then you need to contact them for making the required changes. These host providers have skilled persons for making such changes either via code or via interface depending on the changes. &lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>php</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Data-Oriented Programming is dope</title>
      <author>Xavier Barbosa</author>
      <pubDate>Mon, 03 Jan 2022 06:07:38 +0000</pubDate>
      <link>https://dev.to/xba/data-oriented-programming-is-dope-ma2</link>
      <guid>https://dev.to/xba/data-oriented-programming-is-dope-ma2</guid>
      <description>&lt;p&gt;&lt;small&gt;Photo by &lt;a href="https://unsplash.com/@ravi_roshan_inc?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ravi Roshan&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;.&lt;/small&gt;&lt;br&gt;
&lt;small&gt; This post was published first in &lt;a href="https://techblog.deepki.com/data-oriented-programming/"&gt;https://techblog.deepki.com/data-oriented-programming/&lt;/a&gt;. This is an English translation by the same author.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Data-oriented programming (DOP) is not a new concept. It's a paradigm that can be used by developers in any programming language, it's purpose is to reduce complexity of information system that they are designing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.klipse.tech/"&gt;Yehonathan Sharvit&lt;/a&gt; explains that in his book &lt;a href="https://www.manning.com/books/data-oriented-programming"&gt;Data-oriented programming&lt;/a&gt;.&lt;br&gt;
The book explores tenets of this paradigm, as a dialog between two people.&lt;/p&gt;

&lt;p&gt;The narrator is a junior javascript developer, he develops a Library Management System of a client. Initial features are easy, the software is coded in object oriented. But when the client asks for some new features at the very last moment, everything becomes complicated. He seeks support from a veteran developper, Joe.&lt;/p&gt;

&lt;p&gt;Throughout these pages Joe demonstrates difficulties he encounters, shows him how to confront them. &lt;em&gt;In fine&lt;/em&gt;, he teaches him a new way to organize his source code that is more easy to decipher and to evolve.&lt;/p&gt;



&lt;p&gt;Examples in the book are in Javascript, I wanted to introduce my interpretation in Python on a small part of these rules: code and data separation.&lt;/p&gt;

&lt;p&gt;In the book, the heroes talk about user management. The narrator had to design two types of users, the librarian and the member:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HFgzvTTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85f8ztl3lond67l8wprv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HFgzvTTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85f8ztl3lond67l8wprv.png" alt="Image description" width="539" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once this logic implemented, the client requested him to add super members, then VIP members.&lt;br&gt;
It achieves to be this UML class diagram:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2aEUSZ_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rqxjbq1cpmwzw93tgu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2aEUSZ_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rqxjbq1cpmwzw93tgu5.png" alt="Image description" width="733" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's really hard to manage for the young narrator. Although everything is perfectly logic, the classes hierarchy is hard to work with, mixing inheritance with dependencies.&lt;/p&gt;

&lt;p&gt;Joe understands affirms that is "feelings" are due to « Data encapsulation has its merits and drawbacks: Think about the way you designed the Library Management System. According to DOP, the main cause of the complexity of systems and their lack of flexibility is because code and data are mixed together in objects »&lt;/p&gt;

&lt;p&gt;That's what Yehonathan Sharvit fights all along the book: he depicts the difficulty to just understand something and be able to upgrade it without difficulties.&lt;/p&gt;

&lt;p&gt;Complexity is a thing that have been accumulated insidiously. When it's not kept under control, implementing new features can take weeks instead of days. But DO comes with a radical approch to fight this complexity. To achieve this, data and code must be separated:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_OiO3efa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq2dno3fk7m5117h0w6p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_OiO3efa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq2dno3fk7m5117h0w6p.png" alt="Image description" width="608" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to explain this separation, here is my implementation in python.&lt;/p&gt;

&lt;p&gt;I've followed technics that are described in the book. I started from the client specifications, I've made a list of names that seem to represent Entities of the system, and another list of everything that look like a feature. Then I've organized what I've found:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Two kind of users: &lt;strong&gt;members&lt;/strong&gt; and &lt;strong&gt;librarians&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Users&lt;/strong&gt; &lt;em&gt;log in&lt;/em&gt; to the system via email and password&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Members&lt;/strong&gt; can &lt;em&gt;borrow &lt;strong&gt;books&lt;/strong&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Members&lt;/strong&gt; and &lt;strong&gt;librarians&lt;/strong&gt; can &lt;em&gt;search &lt;strong&gt;books&lt;/strong&gt;&lt;/em&gt; by &lt;strong&gt;title&lt;/strong&gt; or by &lt;strong&gt;author&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Librarians&lt;/strong&gt; can &lt;em&gt;block&lt;/em&gt; and &lt;em&gt;unblock &lt;strong&gt;members&lt;/strong&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Librarians&lt;/strong&gt; can &lt;em&gt;list the &lt;strong&gt;books currently lent&lt;/strong&gt; by a &lt;strong&gt;member&lt;/strong&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;There could be &lt;strong&gt;several copies of a book&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entities classified by groups:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9u888kaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfd0qerc7c5aup9rboud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9u888kaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfd0qerc7c5aup9rboud.png" alt="Image description" width="512" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Features put in several code modules:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IUhVLeDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vizx1mythj76ivmmhedz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IUhVLeDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vizx1mythj76ivmmhedz.png" alt="Image description" width="733" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On this basis, I will implement book lending.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;catalog&lt;/strong&gt;'s data part:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;$schema&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://json-schema.org/draft/2020-12/schema"&lt;/span&gt;
&lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;lendings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;additionalProperties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;object&lt;/span&gt;
      &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="pi"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;user_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;uuid&lt;/span&gt; &lt;span class="pi"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;book_item_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="pi"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;user_email&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;book_item_id&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;propertyNames&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;uuid&lt;/span&gt; &lt;span class="pi"&gt;}&lt;/span&gt;
&lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;lendings&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;user_management&lt;/strong&gt;'s data part:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;$schema&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://json-schema.org/draft/2020-12/schema"&lt;/span&gt;
&lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;members_by_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;object&lt;/span&gt;
    &lt;span class="na"&gt;additionalProperties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;object&lt;/span&gt;
      &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;is_blocked&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;boolean&lt;/span&gt; &lt;span class="pi"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;is_blocked&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;propertyNames&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;uuid&lt;/span&gt; &lt;span class="pi"&gt;}&lt;/span&gt;
&lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;members_by_id&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here I've used JSON Schema, because data does not have to be contained in rigid structures. Only the keys are relevant and need to be specified. In DO, data requires to obey three other rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;all types are generic&lt;/li&gt;
&lt;li&gt;all types are immutable&lt;/li&gt;
&lt;li&gt;shape of data and data schema are separated&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a mock that validates these two schemas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;library_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"catalog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"books_by_isbn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"9781234567897"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Data Oriented Programming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Yehonathan Sharvit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;"book_items_by_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"book-item-1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"isbn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"9781617298578"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s"&gt;"book-item-2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"isbn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"9781617298578"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;"lendings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"user_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"member-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"book_item_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"book-item-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"user_management"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"members_by_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"member-1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"member-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Xavier B."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"xavier@deepki.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"aG93IGRhcmUgeW91IQ=="&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;"is_blocked"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By convention, &lt;code&gt;dict&lt;/code&gt; are used like some &lt;code&gt;Mapping&lt;/code&gt;, and I forbid myself to update them.&lt;/p&gt;

&lt;p&gt;Please note that examples will use the &lt;code&gt;classes+static&lt;/code&gt; method form in order to make this article readable. In a production code, the &lt;code&gt;modules+functions&lt;/code&gt; form is the way to go.&lt;/p&gt;

&lt;p&gt;And now the code part:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;annotations&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TypeVar&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;uuid&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;uuid4&lt;/span&gt;

&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TypeVar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"T"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;user_management_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"user_management"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;UserManagement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_member&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Only members can borrow books"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;UserManagement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_blocked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Member cannot borrow book because he is bloqued"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;catalog_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"catalog"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;Catalog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Book is already borrowed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Catalog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;library_data&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"catalog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;lending&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserManagement&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_member&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"members_by_id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_blocked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"members_by_id"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;"is_blocked"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Catalog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;lendings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"lendings"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lending&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"book_item_id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lendings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;lending_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;uuid4&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lending_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"user_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"book_item_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;lendings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"lendings"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;catalog_data&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"lendings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lendings&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lending&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;lending&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see, code is a series of pure functions.&lt;br&gt;
Functions that modify a state return a new state object rather than upgrading the previous state.&lt;/p&gt;

&lt;p&gt;In each module, functions are made simple and easy to test. They can be reused in any context, like the main module. Globally, they are composed with other existing function. It becomes very easy to adapt them for the client's needs.&lt;/p&gt;

&lt;p&gt;And now, which path will data lead if my alter-ego borrows another copy of the book?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"member-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"book-item-2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Two things occur:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Data is systematically transmitted to every function calls. This object is quite opaque, each level use only a fragment that he knows without worrying about the remaining:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# 1. injects data into Library.checkout module
&lt;/span&gt;&lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;

&lt;span class="c1"&gt;# 2. extracts data from user_management
&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"user_management"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# 3. uses this data fragment into UserManagement module
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;UserManagement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_member&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;UserManagement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_blocked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_management_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;# 4. picks catalog data
&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"catalog"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# 5. uses this data fragment into Catalog module
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;Catalog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Catalog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a function is about to change a state, it returns a new version of data. Every level of the call stack must returns a new version of data:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# 1. handles the request in Catalog.checkout
&lt;/span&gt;&lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;lendings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"lendings"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# 2. creates a new version of catalog_data
&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog_data&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"lendings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lendings&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lending&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# 3. interception of the new catalog_data by Library.checkout
&lt;/span&gt;&lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Catalog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;
&lt;span class="c1"&gt;# 4. creation of a new version of library_data
&lt;/span&gt;&lt;span class="n"&gt;library_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;library_data&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"catalog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Then, this new version of data can be exposed to whole system.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In my example, I don't talk about data consolidation. I suggest you to read the book which gives informations concerning this subject.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-it-pythonic"&gt;
  &lt;/a&gt;
  Is it pythonic?
&lt;/h2&gt;

&lt;p&gt;Broadly speaking, this paradigm fits well in Python if we shelve the object oriented capabilities of the language.&lt;br&gt;
The notion of modules in data-oriented are naturally superimposed on modules in Python, which facilitates adherence.&lt;/p&gt;

&lt;p&gt;Borrowings of functional languages such as &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt; as well as functions from standard &lt;code&gt;operator&lt;/code&gt; module also contribute to make this paradigm quite natural in Python.&lt;/p&gt;

&lt;p&gt;In our example, &lt;a href="https://techblog.deepki.com/typage-en-python/"&gt;standard typing&lt;/a&gt; will not work. However, it is quite easy to do custom typing, such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;annotations&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mapping&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;M&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__or__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;# type: ignore
&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__hash__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;# which can be used as well in the source code
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;member_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;members_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;member_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#code-purity"&gt;
  &lt;/a&gt;
  Code purity
&lt;/h2&gt;

&lt;p&gt;In my implementation my functions are not really pure because I have used exceptions. However, this disgression is acceptable if it is applied under a certain condition. Indeed, exceptions are only used to express illegal operations, in a &lt;em&gt;throw early, catch late&lt;/em&gt; way. Using them this way contributes to the readability of the code. The higher layers of the system will know how to deal with them.&lt;/p&gt;

&lt;p&gt;For example in a &lt;a href="https://flask.palletsprojects.com/en/2.0.x/errorhandling/#error-handlers"&gt;Flask application&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/checkout"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;checkout_view&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p"&gt;...,&lt;/span&gt; &lt;span class="n"&gt;lending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;library_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;book_item_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# la fonction 'checkout' peut lever des exceptions
&lt;/span&gt;        &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lending&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The author is also clear that embracing DO comes at a cost. For example, the fact that DO is relatively agnostic of any programming language undermines the guarantees offered by object modeling (or other tools such as code analysis that some IDEs allow). However, he sometimes offers alternatives for this, such as JSON Schema used here.&lt;/p&gt;

&lt;p&gt;What I presented to you was just a preview of DOP using pure Python. The author gives a lot of details about unit tests, data structures, state management, structural sharing, atomicity, transformation pipeline, etc.&lt;/p&gt;

&lt;p&gt;I highly recommend you to read &lt;a href="https://www.manning.com/books/data-oriented-programming?utm_source=viebel&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=book_sharvit2_data_1_29_21&amp;amp;a_aid=viebel&amp;amp;a_bid=d5b546b7"&gt;Data-oriented programming&lt;/a&gt; by Yehonathan Sharvit, and please follow his approach &lt;a href="https://blog.klipse.tech/visualization/2021/02/16/data-related-paradigms.html"&gt;in his blog&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally"&gt;
  &lt;/a&gt;
  Finally
&lt;/h2&gt;

&lt;p&gt;The author is a multilingual developer and without citing it, many concepts come from the Clojure language. According to its defenders, &lt;a href="https://clojure.org/"&gt;Clojure&lt;/a&gt; is the easiest programming language in the world because it has &lt;a href="https://blog.cleancoder.com/uncle-bob/2019/08/22/WhyClojure.html"&gt;almost no syntax or grammar&lt;/a&gt; and it was designed by Rich Hickey in such a way as to &lt;a href="https://www.youtube.com/watch?v=2V1FtfBDsLU"&gt;facilitate code changes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This language can be inspiring for other languages. To convince yourself, you can consult this other talk &lt;a href="https://www.youtube.com/watch?v=yoUPB62slns"&gt;Design, Composition, and Performance Short&lt;/a&gt; by Rich Hickey.&lt;/p&gt;

&lt;p&gt;It makes me happy to see some of these principles reused in other languages. Indeed, languages must nurture on each other.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bref&lt;/em&gt;, making functional code in Python &lt;em&gt;is dope&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>books</category>
      <category>dataorientedprogramming</category>
    </item>
    <item>
      <title>6 Best ASP .NET Core + MVC Courses for Beginners</title>
      <author>javinpaul</author>
      <pubDate>Mon, 03 Jan 2022 05:48:08 +0000</pubDate>
      <link>https://dev.to/javinpaul/6-best-asp-net-core-mvc-courses-for-beginners-133f</link>
      <guid>https://dev.to/javinpaul/6-best-asp-net-core-mvc-courses-for-beginners-133f</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/developing-applications-with-asp-net-core?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-ywoeja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D600/v2api/collection/10370001/6168973551861760/image/4578688157351936" alt="Developing Applications with ASP.NET Core - Learn Interactively" width="600" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you want to learn the .NET framework and platform and looking for the best resources like books, online courses, and tutorials then you have come to the right place. Earlier, I have shared the &lt;strong&gt;&lt;a href="https://www.java67.com/2019/03/5-free-c-net-courses-to-learn-online.html"&gt;best free C-Sharp courses&lt;/a&gt;&lt;/strong&gt; and in this article, I am going to share the best online courses to learn .NET for Beginners. &lt;/p&gt;

&lt;p&gt;If you don't know, .NET (&lt;a href="https://dotnet.microsoft.com/en-us/learn/dotnet/what-is-dotnet"&gt;dotnet&lt;/a&gt;) is the second most popular platform for application development after Java, and it's used widely across domains including investment banks. These are truly the best resources to learn and master .NET in 2022. &lt;/p&gt;

&lt;p&gt;I have carefully chosen online courses from reputed instructors, who are not only knowledgeable but also engaging as well courses from reputed websites and online learning platforms like &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9409&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy&lt;/a&gt; and &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;But before we jump into that, let's first understand what is .NET and what are the main benefits of learning .NET in 2022?&lt;/p&gt;

&lt;p&gt;In the most basic of terms, .NET is a free and open-source platform for building scalable and high-performance mobile, web, and cloud applications. &lt;/p&gt;

&lt;p&gt;The latest version of .NET is .NET 5.0. Earlier, there were two versions of .NET, .NET Framework and &lt;a href="https://medium.com/javarevisited/7-best-online-courses-to-learn-asp-net-core-and-mvc-in-depth-a68c1b728090"&gt;.NET Core&lt;/a&gt;. But now. both have been merged into one.&lt;/p&gt;

&lt;p&gt;The main advantage that .NET provides is that, in a single platform, you can build desktop, mobile, &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-online-courses-to-learn-cloud-computing-aws.html"&gt;cloud&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-online-courses-to-learn-web-development.html"&gt;web&lt;/a&gt;, gaming, &lt;a href="https://medium.com/javarevisited/my-favorite-courses-to-learn-internet-of-things-iot-in-2020-best-of-lot-8517aa9fc838"&gt;IoT&lt;/a&gt;, and AI apps. &lt;/p&gt;

&lt;p&gt;This is possible because .NET has a large ecosystem comprising of a big common library, runtime, language compilers, and other tools.&lt;/p&gt;

&lt;p&gt;.NET is a unified platform with many components like .NET Standard, frameworks and libraries, Runtime components, and tools like Visual Studio and Command Line Interface. It also has Visual Studio for Mac and Visual Studio Code that can be used to test and deploy applications. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-best-online-courses-to-learn-net-for-beginners-in-2022"&gt;
  &lt;/a&gt;
  6 Best Online Courses to Learn .NET for Beginners in 2022
&lt;/h2&gt;

&lt;p&gt;Now, if you want to learn .NET from scratch but wondering where to start then don't worry. We have scoured the far reaches of the internet looking for the best courses that can teach you more about the. NET. And that is how w came up with this list. There are courses on this list for every type of learner and for all types of budgets. Keep reading to find out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-aspnet-core-mvc-net-5-build-a-complete-ecommerce-app-udemy"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-ecommerce-aspnet-mvc-application%2F"&gt;ASP.NET Core MVC (.NET 5): Build a Complete eCommerce App&lt;/a&gt; [Udemy]
&lt;/h3&gt;

&lt;p&gt;In this course, you will learn how to build a fast and high-performing eCommerce application using ASP.NET MVC and Entity Framework Core. You will start by learning about the basics of .NET MVC, like Models, ViewModels, Views, Controllers, and ViewComponents.&lt;/p&gt;

&lt;p&gt;You will then move on to building Restful Services like dependency injection and generic base repositories. The course also teaches you how to configure the PayPal checkout library for your eCommerce app. When you purchase this course, you will get access to more than 11 hours of on-demand video lectures and 1 practice test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 11 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.7 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Ervis Trupja&lt;/strong&gt;&lt;br&gt;
*&lt;em&gt;Course Price: $16 *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;**Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-ecommerce-aspnet-mvc-application%2F"&gt;ASP.NET Core MVC (.NET 5): Build a Complete eCommerce App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-ecommerce-aspnet-mvc-application%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i7irwmBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-_rFQlfJrUSk/YcHztdeQckI/AAAAAAAAqms/wipx-sbRPpsqT-KfZ7Hmh1S-Fp2RD72zQCNcBGAsYHQ/w438-h223/e-Commerce-MVC-Inline-Preview.webp" alt="Top 5 Courses To Learn .NET for Beginners" width="438" height="222"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-modern-application-development-with-net-on-aws-specialization-on-coursera"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Faws-net-serverless-development"&gt;Modern Application Development with .NET on AWS Specialization on Coursera&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another amazing online course to learn application development with dotnet or .NET on cloud like AWS and become a modern full stack developer in 2022. &lt;/p&gt;

&lt;p&gt;This course is created by none other than AWS itself and its probably the best online class you can get to start your career on building cloud-native applications on AWS&lt;/p&gt;

&lt;p&gt;This is a Coursera specialization which is nothing but a collection of courses to teach you essential skills together. There are 3 courses on this specialization. &lt;/p&gt;

&lt;p&gt;The first course will teach you several AWS compute services, different storage and database offerings that AWS provides, AWS’ networking capabilities, monitoring capabilities and the AWS IAM service. &lt;/p&gt;

&lt;p&gt;The second course will teach you how to build an API driven application using Amazon API Gateway for serverless API hosting, AWS Lambda for serverless computing, and Amazon Cognito for serverless authentication, and the third course will introduces you to NoSQL databases and the challenges they solve. &lt;/p&gt;

&lt;p&gt;This Coursera .NET + AWS course can take 4 months to complete if you can spend 3 hours per week but if you can spend more then you can complete this course in a month or so. &lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Faws-net-serverless-development"&gt;Modern Application Development with .NET on AWS Specialization on Coursera&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Faws-net-serverless-development"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v46RL8_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.amazonaws.com/coursera_assets/meta_images/generated/XDP/XDP%257ESPECIALIZATION%21%257Eaws-net-serverless-development/XDP%257ESPECIALIZATION%21%257Eaws-net-serverless-development.jpeg" alt="Best Courseracourse to learn Modern Application Development with .NET on AWS | " width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, instead of joining these courses and specialization individually, you can also join the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera Plus&lt;/a&gt;, a subscription plan from Coursera which gives you unlimited access to their most popular courses, specialization, professional certificate, and guided projects. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-become-a-fullstack-net-developer-advanced-topics-pluralsight"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Ffull-stack-dot-net-developer"&gt;Become a Full-stack .NET developer - Advanced Topics&lt;/a&gt; [Pluralsight]&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As the title suggests, this is an advanced-level course meant for developers who are already familiar with .NET and want to get into full-stack development. This course will help you improve both your front-end and back-end skills as a .NET developer.&lt;/p&gt;

&lt;p&gt;This course is the second part of the 'Become a Full-stack .NET Developer' course. In this course, you will learn more about advanced concepts like CRUD operations and object-oriented design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 5 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.5 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Mosh Hamedani&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $140 per year for the Premium plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By the way, you would need a Pluralsight membership to join this course which costs around $29 per month or $299 per year (14% discount). I highly recommend this subscription to all programmers as it provides instant access to more than 7000+ online courses to learn any tech skill. &lt;/p&gt;

&lt;p&gt;Alternatively, you can also use their &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpricing%2Ffree-trial"&gt;10-day-free-pass&lt;/a&gt;&lt;/strong&gt; to watch this course for FREE.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Ffull-stack-dot-net-developer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GeYTYHgv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-EuwVW1u2IiE/YcHzJdDjaqI/AAAAAAAAqmk/A0k9Mxc3K4A3J3ymyxXKl84_HJmE9WkTgCNcBGAsYHQ/w383-h216/full-stack-dot-net-developer-fundamentals-v1.jpg" alt="Best Pluralsight courses to learn .NET" width="383" height="215"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-introducing-net-core-linkedin-learning"&gt;
  &lt;/a&gt;
  4. &lt;a href="http://linkedin-learning.pxf.io/c/1193463/449670/8005?u=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Fintroducing-dot-net-core"&gt;Introducing .NET Core&lt;/a&gt; [LinkedIn Learning]
&lt;/h3&gt;

&lt;p&gt;This is one of the expert-led courses on this list. The course has been created by Microsoft, and the instructors are Scott Hanselman and Kendra Havens, who are Program Managers at Microsoft. In this course, you will learn about the basics of .NET Core and how to build your first app.&lt;/p&gt;

&lt;p&gt;You will begin by installing the .NET software development kit (SDK) and Visual Studio on your PC. Then, you will move to a program with C# and the basics of Visual Studio. The course will also teach you how to add a class library to your executable program.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 2 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.6 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Scott Hanselman and Kendra Havens&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $140 per year for the annual plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By the way, you would need a LinkedIn Learning membership to watch this course which costs around $19.99 per month but you can also watch this course for FREE by taking their &lt;strong&gt;&lt;a href="http://linkedin-learning.pxf.io/c/1193463/449670/8005?u=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Fsubscription%2Fproducts"&gt;1-month-free-trail&lt;/a&gt;&lt;/strong&gt; which is a great way to explore their 16000+ online courses on the latest technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://linkedin-learning.pxf.io/c/1193463/449670/8005?u=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Fintroducing-dot-net-core"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KQMGcwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEhMFtCtjQlgEmMFIecHUycqVGwjGOi4NzeTLs5WrHG3doX1Gb2Ez9gmaSLsahxAD6D-rf5Oxi4vAdGSrmm5Kyt7wX8is4-VmZXwO1JF-WY8RFMN4X3NkVQNyOCx8UEHTs5rRu5rg6sqO_jjihMGU0P78LLmltxzKO2IAvsyOvyWXql2gfudPisd9nIW%3Dw351-h197" alt="best linkedin learning course for dotnet" width="300" height="168"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-building-modern-net-applications-on-aws-edx"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;platform=dl&amp;amp;ued=https%3A%2F%2Fwww.edx.org%2Fcourse%2Fbuilding-modern-net-applications-on-aws"&gt;Building Modern .NET Applications on AWS&lt;/a&gt; [edX]&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this course, you will learn how to build agile and scalable cloud-native .NET applications using AWS. As you can see, this is a highly specialized course with a focus on app development in the cloud and is different from the other courses on this list.&lt;/p&gt;

&lt;p&gt;This course will teach you more about stuff like AWS Lambda, Amazon API Gateway, and Amazon Cognito. It is an intermediate-level course and is perfect for developers who are interested in learning about cloud computing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: Estimated 6 weeks&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructors: Russell Sayers, Seph Robinson, and Morgan Willis&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $69&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;platform=dl&amp;amp;ued=https%3A%2F%2Fwww.edx.org%2Fcourse%2Fbuilding-modern-net-applications-on-aws"&gt;Building Modern .NET Applications on AWS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;platform=dl&amp;amp;ued=https%3A%2F%2Fwww.edx.org%2Fcourse%2Fbuilding-modern-net-applications-on-aws"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qnYjHMZb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEjnCI-KUEXZJ5TyYXZSCJ8Y7HkW1thiZIoCJiaKtju5DfVskpzw0BErmqlDAquGIGfKyFEPkmcXFuDEgY3T4fv8DPS4L2HPGwBZnpQzL4RB5VeCdScIav4vhbPKWn3ZkxTRH-Vbja_0tttsSEBK6ZW7EFQGbyIDF9YPA0fUD1YeNa8DsuAnG1uKxfUz%3Dw317-h160" alt="best edX course to learn .NET for beginners" width="200" height="101"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-net-5-and-net-core-31-web-api-and-entity-framework-jumpstart-udemy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fnet-core-31-web-api-entity-framework-core-jumpstart%2F"&gt;.NET 5 and .NET Core 3.1 Web API and Entity Framework Jumpstart&lt;/a&gt; [Udemy]&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this course, you will go through the back-end development of a .NET  or .NET Core 3.1 web application with Web API, Entity Framework, and SQL server. You will also learn how to utilize the different relationships in your database like one-to-one, one-to-many, and many-to-many.&lt;/p&gt;

&lt;p&gt;The course will teach you how to implement a proper structure for your Web API, dependency injection, and asynchronous calls. This will also enable you to seed your data with code-first migrations programmatically. You will also learn more about token authentication with JSON web tokens and roles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 11 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.5 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Patrick God&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $16&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this course - **&lt;/strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fnet-core-31-web-api-entity-framework-core-jumpstart%2F"&gt;NET 5 and .NET Core 3.1 Web API and Entity Framework Jumpstart&lt;/a&gt;**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fnet-core-31-web-api-entity-framework-core-jumpstart%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OGoCH0ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEg0gM08jfkc_vruMv2jyFT3OlGz_ytIVhzEtfZxeO5DQBqr-v2A99YwpO2u4zjsnfPFTKvvYhe8mXEU9dyeJcH56wDbqH5hGAZlCfoS4RpAxLuBFjdla3syoDSelonj_5B5CWcon2pAIinLZfGSYZPR9GTOlz8ETkRZRthQ74-ug5kNYvnQ0ZHF9_cf%3Dw331-h186" alt=" best Udemy course to learn .NET for beginners " width="240" height="135"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#frequently-asked-questions-about-net"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Frequently Asked Questions about .NET&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now that we have seen how to learn .NET in 2022 and the best online courses to learn .NET from &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9409&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy&lt;/a&gt;, &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2F"&gt;Coursera&lt;/a&gt;, &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p="&gt;edX&lt;/a&gt;, &lt;a href="https://www.educative.io/?affiliate_id=5073518643380224"&gt;Educative&lt;/a&gt;, &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight&lt;/a&gt;, and LinkedIn learning, it's time to answer common doubts among people who are learning .NET or want to learn .NET but not sure about it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.  What is .NET and why is it used?&lt;/strong&gt;&lt;br&gt;
In the most basic of terms, .NET is a free and open-source platform for building scalable and high-performance mobile, web, and cloud applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. What is the advantage of learning .NET?&lt;/strong&gt;&lt;br&gt;
The main advantage that .NET provides is that, in a single platform, you can build desktop, mobile, cloud, web, gaming, IoT, and AI apps. This is possible because .NET has a large ecosystem comprising of a big common library, runtime, language compilers, and other tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Is .NET easy to learn?&lt;/strong&gt;&lt;br&gt;
Since it is written primarily in C#, .NET is fairly easy to learn and understand for most programmers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;That's all about the &lt;strong&gt;best online course to learn .NET in 2022 from scratch&lt;/strong&gt;. These are by far the best courses that you can use to learn more about the .NET framework. I have no doubt that these courses will transform you from a complete beginner to a .NET expert within a matter of weeks. So what are you waiting for? Start Learning.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Programming Resources (Free and Paid)&lt;/strong&gt; you may like to check&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-best-coding-course-to-learn-programming-with-zero-experience-in-2020-52f7d0d9cb80"&gt;My favorite courses to learn Programming and Coding&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/05/top-5-java-courses-for-beginners-to-learn-online.html"&gt;5 Free Courses to Learn Java Programming&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-best-online-courses-to-learn-asp-net-core-and-mvc-in-depth-a68c1b728090"&gt;5 Best .NET core online courses for beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/the-java-developer-roadmap.html"&gt;The 2022 Java Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/top-5-courses-to-learn-asp-net-in-2019.html"&gt;Top 5 courses to learn ASP .NET for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/06/top-10-courses-to-learn-javascript-in.html"&gt;Top 10 Courses to learn JavaScript in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/01/top-5-ios-developer-course-to-learn-ios.html"&gt;Top 5 Courses to learn Swift Programming in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/better-programming/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec"&gt;Top 10 Courses to Learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2018/02/5-free-docker-courses-for-java-and-DevOps-engineers.html"&gt;5 Free Docker Courses for Java and DevOps Engineer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2018/04/top-5-free-javascript-courses-to-learn.html"&gt;5 Free JavaScript Courses for Web Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/11/top-5-courses-to-learn-c-programming-in.html"&gt;Top 5 Courses to learn C Programming in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2018/02/5-free-ruby-and-rails-courses-to-learn-online.html"&gt;Top 5 Courses to learn Ruby Programming&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-spring-boot-in-2020-best-of-lot-6ffce88a1b6e"&gt;10 Courses to learn Spring Boot in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/5-free-php-and-mysql-courses-to-learn-web-development-63836cd3e587"&gt;Top 5 Courses to learn PHP and MySQL?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/07/top-10-courses-to-learn-c-in-depth-best.html"&gt;My Favorite Courses to learn C++ in depth&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you liked this list of &lt;em&gt;top 5 Courses to Learn ASP .NET core for beginners&lt;/em&gt;, feel free to share it with your friends and family. Drop a comment if you have any doubts or questions and we will get back to you within an instant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you want to build Microservices using .NET and looking for free online courses then you can also join this &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuilding-your-first-microservice-with-net%2F"&gt;Building Your First Microservice With .NET&lt;/a&gt;&lt;/strong&gt; course on Udemy. This 2-hour long course is completely free and you just need a free udemy account to join this course. More than 9K students have already joined it and you can be next but hurry up before the instructor cover this free udemy course into a paid one.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>webdev</category>
      <category>coding</category>
      <category>development</category>
    </item>
    <item>
      <title>What’s new in React 18?</title>
      <author>Linearloop Private Limited</author>
      <pubDate>Mon, 03 Jan 2022 05:34:49 +0000</pubDate>
      <link>https://dev.to/linearloop/whats-new-in-react-18-4ma4</link>
      <guid>https://dev.to/linearloop/whats-new-in-react-18-4ma4</guid>
      <description>&lt;p&gt;Before knowing the &lt;a href="https://www.linearloop.io/blog/whats-new-in-react-18/"&gt;features of React 18&lt;/a&gt; let’s have a brief introduction for React JS.&lt;/p&gt;

&lt;p&gt;ReactJS helps to build UI-rich web applications that are efficient enough in terms of user engagement and functionalities. You must know, the technology has gained lots of attention because of one of the great reasons that Facebook has designed it.&lt;/p&gt;

&lt;p&gt;Other reasons behind it are its component based approach, Flux &amp;amp; Redux architecture, fast rendering of Virtual DOM and its support for a large number of libraries. &lt;/p&gt;

&lt;p&gt;With React, developers became able to develop a prolific and interactive application using minimal coding. Also it facilitates code reusability as a result of which effort gets reduced. Further, it is an open-source JS library and runs on JSX (JS &amp;amp; HTML).&lt;/p&gt;

&lt;p&gt;Code ref :: &lt;a href="https://reactjs.org/docs/react-without-jsx.html"&gt;https://reactjs.org/docs/react-without-jsx.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Hello extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;Hello {this.props.toWhat}&amp;lt;/div&amp;gt;;
  }
}

ReactDOM.render(
  &amp;lt;Hello toWhat="World" /&amp;gt;,
  document.getElementById('root')
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Moreover, for the past few years, the concept is being used on a large scale. Many startups and business owners are following React because it offers productivity by saving cost and time both.&lt;/p&gt;

&lt;p&gt;Now here we will discuss the new version of it, which we call &lt;a href="https://www.linearloop.io/"&gt;React 18 Developers&lt;/a&gt; seeking to get knowledge about it, stay tuned till the end of the article. It is definitely going to help you in the future.&lt;/p&gt;

&lt;p&gt;The alpha version of React 18 is available, and soon it will be in production for the developers. But till the time it becomes ready for production, we must know about the features obtainable in the new version. We all know, versions are upgraded to bring more comfort  features and productivity to the applications.&lt;/p&gt;

&lt;p&gt;The same goes here as well. React 18 alpha version is made available for the technocrats so that, they could see the same and share their feedback. Here we will put some light on React 18 roadmap to keep the developers aware.&lt;/p&gt;

&lt;p&gt;The new release of React includes out-of-the-box improvisations that will help the developers for sure. &lt;/p&gt;

&lt;p&gt;Also, it will increase the potential of an application. Here you will get to experience a new streaming server renderer that is available with in-built support, automatic batching, and a new API (startTransition).&lt;/p&gt;

&lt;p&gt;So many people are struggling to know the exact React 18 release date, but so far, no specific date is issued by the owners. If we get to know about the exact date of release, we will share it for sure. Till then, let’s learn React 18 new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-features-of-react-18"&gt;
  &lt;/a&gt;
  New Features of React 18
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#improvements-to-root-api"&gt;
  &lt;/a&gt;
  Improvements to Root API
&lt;/h3&gt;

&lt;p&gt;By using React 18, developers will have a new Root API. While working, we follow a common practice of passing ReactDom.render our app component, then document.getElementById and root element in the available version of React.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { StrictMode } from "react";
import ReactDOM from "react-dom";

import App from "./App";

const rootElement = document.getElementById("root");
ReactDOM.render(
 &amp;lt;StrictMode&amp;gt;
   &amp;lt;App /&amp;gt;
 &amp;lt;/StrictMode&amp;gt;,
 rootElement
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now with React 18 version, you will be able to execute the task in a new way. Here, the root variable is equal to a new method that we call “Create Root”. As it passes our root element, its name becomes root.render, and will pass the app component.&lt;/p&gt;

&lt;p&gt;The fundamental concept is the same as the existing versions, but the way of execution is different. The old method is given a new name “Legacy Root API” and if you are worried about whether will it work with the existing version or not, stay relaxed. It works with React 18 as well but there is a possibility of depreciation at some points by the new Root API.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#concurrent-rendering-in-react-18"&gt;
  &lt;/a&gt;
  Concurrent Rendering in React 18
&lt;/h4&gt;

&lt;p&gt;As we have stated earlier, the new version revolves around “concurrent rendering” and it enables React to build various versions of the user interface at the same time.&lt;/p&gt;

&lt;p&gt;All the changes take place in the background or you can say behind-the-scenes but, it offers flexibility to the applications. By seeing the response from the community for “concurrent mode”, the React team has redesigned and upgraded the concept for gradual adoption.&lt;/p&gt;

&lt;p&gt;Despite the feature all-or-nothing, the concept of concurrent rendering will only get enabled when any new feature will trigger updates. In practical terms, here, you get the flexibility to adopt React 18, and there is no need for rewriting.&lt;/p&gt;

&lt;p&gt;Also, one can easily access new features. Further, developers can easily upgrade the version to React 18, either by doing minor or no changes to the code.&lt;/p&gt;

&lt;p&gt;The intent behind the new version is to offer ease to the developers along with a better user experience. Hence the adoption of React 18 is pretty simple, and one can do it conveniently. Also, the concurrent features are successfully delivered to the thousands of components that work for Facebook.&lt;/p&gt;

&lt;p&gt;And it has been noticed, that most of the React components work well even without any change in the code. The owners have committed that React 18 is smooth for all communities, and one can work on it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#suspense-in-react-18"&gt;
  &lt;/a&gt;
  SUSPENSE in React 18
&lt;/h4&gt;

&lt;p&gt;This new version of React has brought full support for SUSPENSE. If you work in React, you must know SUSPENSE refers to the suspension of something till the time it is ready to render, and  we call it Lazy Loading as well. Lazy Loading is also known as on demand loading that refers to loading of the required part only by delaying the rest.&lt;/p&gt;

&lt;p&gt;Code Ref :: &lt;a href="https://reactjs.org/docs/react-api.html#reactsuspense"&gt;https://reactjs.org/docs/react-api.html#reactsuspense&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import { Spinner } from "../Components/Spinner";

// This component is loaded dynamically
const OtherComponent = React.lazy(() =&amp;gt; import("./OtherComponent"));

function MyComponent() {
 return (
   // Displays &amp;lt;Spinner&amp;gt; until OtherComponent loads
   &amp;lt;React.Suspense fallback={&amp;lt;Spinner /&amp;gt;}&amp;gt;
     &amp;lt;div&amp;gt;
       &amp;lt;OtherComponent /&amp;gt;
     &amp;lt;/div&amp;gt;
   &amp;lt;/React.Suspense&amp;gt;
 );
}
export default MyComponent;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the current version of React, the SUSPENSE uses fallback till the time data is  returned from an API call or async component and component rendering is done.&lt;/p&gt;

&lt;p&gt;Now you can experience, even if all the data is not waiting for the component, they wait till call-stack gets empty and then event queue gets executed because the rendering of the entire component is still awaited.&lt;/p&gt;

&lt;p&gt;Here we will share an example to counter the above-stated problem. Suppose you have a web page with sections Navigation Bar, Search Bar, Post Block, and Comment Box. Now if you follow React 18, there is no need to load the comment box before someone reaches that section.&lt;/p&gt;

&lt;p&gt;Hence in the background, developers can suspend the comment section. Once the user reaches,  the comment section will get loaded.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#automatic-batching"&gt;
  &lt;/a&gt;
  Automatic Batching
&lt;/h4&gt;

&lt;p&gt;To attain improved computational performance, React groups multiple updates altogether in a single state as a result which “Batching” occurs.&lt;/p&gt;

&lt;p&gt;Code ref :: &lt;a href="https://react-redux.js.org/api/batch"&gt;https://react-redux.js.org/api/batch&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { batch } from 'react-redux'

function myThunk() {
  return (dispatch, getState) =&amp;gt; {
    // should only result in one combined re-render, not two
    batch(() =&amp;gt; {
      dispatch(increment())
      dispatch(increment())
    })
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The existing React version prevents the components from rendering i.e. Half-Finished state. Under this condition, developers become able to update only one state variable that further may create bugs.&lt;/p&gt;

&lt;p&gt;Also, React favors performing two independent batches, and it will not batch the updates every time.&lt;/p&gt;

&lt;p&gt;Now in React 18, a new concept is added that has increased the overall performance. Here it automatically batches the updates without having any dependency on the origin of library code and the application.&lt;/p&gt;

&lt;p&gt;The way updates, inside the React native, are batched, similarly, the updates inside the timeouts or native events handlers are batched. Hence the concept drives out-of-the-box improvisation to render process, and as a result, the performance improves.&lt;/p&gt;

&lt;p&gt;So, React 18 has resolved the problem of batching and increased the efficiency &amp;amp; consistency of the process.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h5&gt;

&lt;p&gt;By reading the above content you must say, React 18 will bring lots of new possibilities. So many JS concepts seem impossible today but they may get possible with this new foundation.&lt;/p&gt;

&lt;p&gt;Other frameworks of the market will surely get inspired by React 18 and they will also do something in the favor of technology. Linearloop always works for evolving concepts of technology and we keep researching for updates in order to aware our team and clients.&lt;/p&gt;

&lt;p&gt;So far, React 18 is available in alpha mode, and if you are working on any project, do not implement it. For now, you can take the understanding about React 18 new features and share your feedback.&lt;/p&gt;

&lt;p&gt;The owners have put it into Alpha because they are willing to understand the review of technocrats. React 18 will launch within few months. And being a &lt;strong&gt;&lt;a href="https://www.linearloop.io/"&gt;leading React JS company in India&lt;/a&gt;&lt;/strong&gt;, we are really excited, and we know you too! So guys, stay tuned to know about the recent updates.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Deploy Laravel Project with Apache on Ubuntu</title>
      <author>Suresh Ramani</author>
      <pubDate>Mon, 03 Jan 2022 05:18:56 +0000</pubDate>
      <link>https://dev.to/sureshramani/how-to-deploy-laravel-project-with-apache-on-ubuntu-36p3</link>
      <guid>https://dev.to/sureshramani/how-to-deploy-laravel-project-with-apache-on-ubuntu-36p3</guid>
      <description>&lt;p&gt;Hello Developers,&lt;/p&gt;

&lt;p&gt;Laravel is a free and open-source PHP framework based on the Symfony framework and follows the Model-View-Controller design pattern. It comes with tools and resources that help you build robust and modern PHP applications. It offers a rich set of features, including Eloquent ORM, Support MVC Architecture, Template Engine, Libraries &amp;amp; Modular, Multiple back-ends for session and cache storage, and more.&lt;/p&gt;

&lt;p&gt;Laravel powered millions of applications on the internet. But there are very few articles on the internet explaining how you can deploy the Laravel application with Apache on the Ubuntu server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-prerequisites"&gt;
  &lt;/a&gt;
  1. Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The operating system running Ubuntu Linux&lt;/li&gt;
&lt;li&gt;A root or non-root user with Sudo privileges&lt;/li&gt;
&lt;li&gt;Has stable internet connection&lt;/li&gt;
&lt;li&gt;Terminal window / Command line&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-install-apache-on-ubuntu"&gt;
  &lt;/a&gt;
  2. Install Apache On Ubuntu
&lt;/h2&gt;

&lt;p&gt;If you have installed Apache, you can skip this. If you have not installed Apache, then you click on this link: &lt;a href="https://techvblogs.com/blog/install-apache-on-ubuntu-20-04"&gt;Install Apache on Ubuntu 20.04 LTS&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-install-composer-on-ubuntu"&gt;
  &lt;/a&gt;
  3. Install Composer On Ubuntu
&lt;/h2&gt;

&lt;p&gt;There are a few steps that we can follow to deploy Laravel on Apache. The first one is to install all the required dependencies on the server. The second is to clone the git repository or create a new Laravel project inside our project directory.&lt;br&gt;
So, Let's get started with the first step.&lt;/p&gt;

&lt;p&gt;If we are going to clone a git repo, we have to install git on our server. It is straightforward. And, we also have to install composer on the server because we have to install Laravel's dependencies using composer update or composer install command. So, Let's, first of all, install the git and composer on our server.&lt;/p&gt;

&lt;p&gt;Execute the following commands to install git and composer on the Ubuntu server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install git composer -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-install-laravel"&gt;
  &lt;/a&gt;
  4. Install Laravel
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#option-1-clone-a-git-repository"&gt;
  &lt;/a&gt;
  Option 1: Clone a Git Repository
&lt;/h3&gt;

&lt;p&gt;Git is a free and open-source distributed version control system designed to handle small and extensive projects with speed and efficiency.&lt;/p&gt;

&lt;p&gt;Git is the most popular version control system developed by Linux itself, Linus Torvalds. It is straightforward to use, and millions of developers worldwide use git to manage different versions of their code. If you are working your Laravel code with git, go to your site's document root on your server and execute the git clone command.&lt;/p&gt;

&lt;p&gt;I will deploy it inside the default document root of the Apache webserver. It means that I will navigate to /var/www/html and execute the git clone command, just like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/www/html
git clone https://github.com/laravel/laravel.git .
composer install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, I am cloning the Laravel project from the official git repository of Laravel. You can clone your project from the repository you desire. Just replace the URL, and you are good to go. We added the "." at the end of the git clone command to clone the project files in the same directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#option-2-deploy-a-new-laravel-project"&gt;
  &lt;/a&gt;
  Option 2: Deploy a new Laravel Project
&lt;/h3&gt;

&lt;p&gt;If you choose the first option, you can skip this second option. But if you want to deploy a brand new Laravel project on your server, you can use the composer. Execute the following commands in your DocumentRoot to deploy a new Laravel project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/www/html
composer create-project --prefer-dist laravel/laravel .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-update-env-file-and-generate-an-encryption-key"&gt;
  &lt;/a&gt;
  5. Update ENV File and Generate An Encryption Key
&lt;/h2&gt;

&lt;p&gt;To copy the file from .env.example to .env and generate an encryption key, run the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/www/html
cp .env.example .env
php artisan key:generate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, edit the .env file and define your database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/www/html
nano .env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;APP_URL=https://techvblogs.com

DB_CONNECTION=mysql
DB_HOST=YOUR_DB_HOST
DB_PORT=3306
DB_DATABASE=techvblogs
DB_USERNAME=admin
DB_PASSWORD=YOUR_PASSWORD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating your .env file, press CTRL+X, Y, and Enter key to save the .env file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-configure-apache-for-laravel"&gt;
  &lt;/a&gt;
  6. Configure Apache for Laravel
&lt;/h2&gt;

&lt;p&gt;Laravel is tricky. It is because the main index.php file of the project lives in the project's public directory. It means that we have to update our virtual host so that it should route the traffic into the public directory inside our project directory.&lt;/p&gt;

&lt;p&gt;Next, We will need to create an Apache virtual host configuration file for Laravel. Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo nano /etc/apache2/sites-available/techvblogs.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;

    ServerAdmin admin@techvblogs.com
    ServerName techvblogs.com
    DocumentRoot /var/www/html/public

    &amp;lt;Directory /var/www/html/public&amp;gt;
       Options +FollowSymlinks
       AllowOverride All
       Require all granted
    &amp;lt;/Directory&amp;gt;

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating your virtual host file, press CTRL+X, Y, and Enter key to save the updated virtual host file.&lt;/p&gt;

&lt;p&gt;Next, activate the Apache rewrite module and Laravel virtual host configuration using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo a2enmod rewrite
sudo a2ensite techvblogs.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, restart the Apache server to apply the changes. Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service apache2 restart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your Apache server successfully restarts, you will be able to access your Laravel project in the browser.&lt;/p&gt;

&lt;p&gt;Thank you for reading this blog.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>apache</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My Chrome Extension</title>
      <author>Prince Verma</author>
      <pubDate>Mon, 03 Jan 2022 04:57:07 +0000</pubDate>
      <link>https://dev.to/vermaprince123/my-chrome-extension-546</link>
      <guid>https://dev.to/vermaprince123/my-chrome-extension-546</guid>
      <description>&lt;p&gt;It is my first Chrome Extension pls install it and use it, I am 100 % sure it will give you better experience so use it now from the given link !!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNqAnPG---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr56hhk1pkpe3iwh1dcc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNqAnPG---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gr56hhk1pkpe3iwh1dcc.PNG" alt="Image description" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>chrome</category>
      <category>extension</category>
      <category>javascript</category>
      <category>html</category>
    </item>
  </channel>
</rss>
