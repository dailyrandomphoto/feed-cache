<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Bastion Host | Jump Server</title>
      <author>Surya shankar</author>
      <pubDate>Tue, 25 Jan 2022 07:46:48 +0000</pubDate>
      <link>https://dev.to/shankarsurya035/bastion-host-jump-server-295g</link>
      <guid>https://dev.to/shankarsurya035/bastion-host-jump-server-295g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-bastion-host-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;What is a Bastion Host ?&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A bastion host is a server whose purpose is to provide access to a private network from an external network, such as the Internet. Because of its exposure to potential attack, a bastion host must minimize the chances of penetration.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-to-use-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Why to use ?&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If we want to SSH into EC2 instance on the private subnet from our home/office (or using a development machine), currently we can’t. Our instance has no public IP, it is in a Private Subnet (no direct route from the internet). This is where we can use a Bastion Server or Jump server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-purpose-of-a-bastion-host"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;The purpose of a bastion host&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To restrict access to a private network from an external network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now lets us deploy a window server [disable public ip]&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search for Ec2&lt;/li&gt;
&lt;li&gt;Launch instance&lt;/li&gt;
&lt;li&gt;choose T2micro[free tier]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P1rTFgYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6cevoh7lsnfaaqdh34w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P1rTFgYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6cevoh7lsnfaaqdh34w.png" alt="Image description" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Disable public ip. [as we never provide a public ip to our database]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;add storage&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rZhzYv2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcsly6bc8uzbt5ml5g65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZhzYv2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcsly6bc8uzbt5ml5g65.png" alt="Image description" width="880" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yQGAjrmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmjp5e1uk3bxzce4nlrn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQGAjrmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmjp5e1uk3bxzce4nlrn.png" alt="Image description" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Name the instance as Database or anything you want.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;next configure security group&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C1Y8in9m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcfsmim341933gtcnf6z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1Y8in9m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcfsmim341933gtcnf6z.png" alt="Image description" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select all traffic and anywhere [generally this is not a best industry practice , we only allow custom ips]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tjfR-4A_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvsinzx6loz493g720mk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tjfR-4A_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvsinzx6loz493g720mk.png" alt="Image description" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;now download the key pair and launch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fp6-Wqo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvdg4ofj0lymhjx2mrxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fp6-Wqo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvdg4ofj0lymhjx2mrxk.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;decrypt the password&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fjB7Tp3i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxn0wcz4qsoeyuxqlndt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjB7Tp3i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxn0wcz4qsoeyuxqlndt.jpg" alt="Image description" width="880" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;download remote desktop and paste private ip ..&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VvSDIy62--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km9aog3m6ri9upwax4xm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VvSDIy62--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km9aog3m6ri9upwax4xm.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As we see , its not allowing because to ssh into a instance need a public ip.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkuD_tuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3xswhifbhjre3t1hn88.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkuD_tuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3xswhifbhjre3t1hn88.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now lets us deploy a window server/Jump server with in same vpc [enable public ip]&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;launch instance&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;select T2micro&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;enable public ip&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;name it as jump server&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N04B4uy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtdmwusrv3t0ksjtnvky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N04B4uy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtdmwusrv3t0ksjtnvky.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select all traffic anywhere and launch .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OivKBSN6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atqoc8qk7pq4ktyxicer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OivKBSN6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/atqoc8qk7pq4ktyxicer.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zbzyMNRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvzqcut1a3bpow06dx0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zbzyMNRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvzqcut1a3bpow06dx0d.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;launch instance&lt;/li&gt;
&lt;li&gt;view instance&lt;/li&gt;
&lt;li&gt;Check box it [jump server] and try to connect .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b7AbW4i7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/znfvb235xh47xqcyygmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b7AbW4i7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/znfvb235xh47xqcyygmf.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ekgad1JT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mbz1ud35ovwuaf94q95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekgad1JT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mbz1ud35ovwuaf94q95.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HVKQo-_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/728q5e3rdgtrzwnudzdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVKQo-_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/728q5e3rdgtrzwnudzdp.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mYsQFaER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlkm8ob9nrp3byj5kkzr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mYsQFaER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rlkm8ob9nrp3byj5kkzr.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;here we successfully connect to our server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2qcmQKze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qi42m6vmvuk28h5fxe6q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2qcmQKze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qi42m6vmvuk28h5fxe6q.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;now we can access to our database within this server only,here this server acts as a bastion host.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;click Window+r&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;type mstsc&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SXeHd69G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo1q2dlwd8mdnhyzcrzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SXeHd69G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo1q2dlwd8mdnhyzcrzw.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;put private ip of database server and connect &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Axg3x4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6z1hlxbhrfa9rww0sypq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Axg3x4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6z1hlxbhrfa9rww0sypq.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;here we successfully connected to our database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZP6Y9Zp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr3g829tlymn9bc9727c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZP6Y9Zp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr3g829tlymn9bc9727c.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Solve the 3 Top Cloud Cost Optimization Challenges with CAST AI and Usage AI </title>
      <author>CAST AI</author>
      <pubDate>Tue, 25 Jan 2022 07:41:26 +0000</pubDate>
      <link>https://dev.to/castai/how-to-solve-the-3-top-cloud-cost-optimization-challenges-with-cast-ai-and-usage-ai-2hdb</link>
      <guid>https://dev.to/castai/how-to-solve-the-3-top-cloud-cost-optimization-challenges-with-cast-ai-and-usage-ai-2hdb</guid>
      <description>&lt;p&gt;The most common methods of cost optimization like savings plans and spot instances come with some serious downsides (think server downtime or extra engineering effort).&lt;/p&gt;

&lt;p&gt;Novel solutions like automation and resource buy-back are popping up to mitigate these downsides. And if you’ve ever wondered if it’s possible to combine multiple cost optimization approaches, you’ve come to the right place.&lt;/p&gt;

&lt;p&gt;We’ll dig into combining &lt;a href="https://usage.ai/" rel="noreferrer noopener"&gt;Usage AI&lt;/a&gt; and CAST AI to get guaranteed capacity at the lowest price and optimal resource utilization at every point in time.&lt;/p&gt;

&lt;p&gt;Here’s what you need to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-is-it-so-hard-to-reduce-cloud-costs"&gt;Why is it so hard to reduce cloud costs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-if-you-could-enjoy-their-advantages-without-any-of-these-downsides"&gt;What if you could enjoy their advantages without any of these downsides?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-winning-combination-of-cost-optimization-methods"&gt;A winning combination of cost optimization methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-how-it-all-works-in-action"&gt;See how it all works in action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="why-is-it-so-hard-to-reduce-cloud-costs"&gt;Why is it so hard to reduce cloud costs?&lt;/h2&gt;

&lt;h3 id="savings-plans-offer-discounts-but-involve-a-long-term-commitment"&gt;Savings Plans offer discounts but involve a long-term commitment&lt;/h3&gt;

&lt;p&gt;Savings Plans sound great on the surface: flexible long-term commitments without the need to lock yourself into a specific instance type or region. &lt;/p&gt;

&lt;p&gt;However, the “gotcha” comes from its low savings: 27% discount for a 1-year commitment. When picking a Savings Plan, you’re essentially reducing your potential savings in exchange for more flexibility. &lt;/p&gt;

&lt;p&gt;But that’s not everything. &lt;/p&gt;

&lt;p&gt;Savings Plans are very easy to manage compared to other types of savings. But you’re locking yourself in with zero chance of exiting the term early. &lt;/p&gt;

&lt;p&gt;Are you planning to move workloads across clouds or to other services? If you do that too often, your cloud spend could go below your commitment. And once that happens, it starts eating into your already marginal savings. &lt;/p&gt;

&lt;p&gt;Overcommit by too much, and you’ll actually begin to spend more than you need to. &lt;/p&gt;

&lt;h3 id="spot-instances-are-cheap-but-also-unstable"&gt;Spot instances are cheap, but also unstable&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cast.ai/blog/how-to-reduce-cloud-costs-by-90-spot-instances-and-how-to-use-them/"&gt;Spot instances&lt;/a&gt; are spare resources that cloud providers offer at a discount of even up to 90%. &lt;/p&gt;

&lt;p&gt;But there’s a catch: the vendor may reclaim these resources at any time. &lt;/p&gt;

&lt;p&gt;Teams generally pick workloads for spot instances carefully, making sure that they’re fault-tolerant and can be interrupted to cover this scenario. &lt;/p&gt;

&lt;p&gt;But many prefer not to run production workloads on spot instances because they don’t have any mechanisms in place to quickly replace the reclaimed resources and keep their workloads running. &lt;/p&gt;

&lt;h3 id="recommendations-are-helpful-but-inefficient-when-not-automated"&gt;Recommendations are helpful, but inefficient when not automated&lt;/h3&gt;

&lt;p&gt;Using properly optimized on-demand instances is a path to significant savings on its own. However, legacy cost management tools (like CloudHealth or Spotinst) leave a lot to be desired for those seeking a practical cost management solution. &lt;/p&gt;

&lt;p&gt;While these tools do offer qualified and actionable recommendations, the entire implementation effort falls squarely onto the engineers, often adding to an already heavy workload and possibly diverting them away from mission-critical tasks.&lt;/p&gt;

&lt;h2 id="what-if-you-could-enjoy-their-advantages-without-any-of-these-downsides"&gt;What if you could enjoy their advantages without any of these downsides?&lt;/h2&gt;

&lt;p&gt;Modern solutions streamline the cloud cost optimization process, reduce the team’s workload, and allow companies to enjoy the flexibility and scalability of cloud resources without having to deal with costs spiraling out of control.&lt;/p&gt;

&lt;p&gt;This is what you get by combining two such solutions: Usage AI with CAST AI. Here’s how it all works.&lt;/p&gt;

&lt;h3 id="reserved-capacity-discounts-without-the-long-term-commitment-via-usage-ai"&gt;Reserved capacity discounts without the long term commitment via Usage AI&lt;/h3&gt;

&lt;p&gt;Usage AI buys the most lucrative deals from the EC2 RI Marketplace (which are often 3-year Reserved Instances) and passes them off to customers to hold for however long they need them. &lt;/p&gt;

&lt;p&gt;You can hold such a discounted instance to cover a one-hour spike in usage, an entire day full of work, or a month, a year, or longer operation period. &lt;/p&gt;

&lt;p&gt;When you don’t need the extra Reserved Instance capacity anymore, Usage AI will automatically suggest that you sell it back to us to maximize savings. It’s a win-win for everyone involved.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--biNx6Uow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2022/01/DES-97-How-to-Solve-3-Cloud-Cost-Optimization-Challenges-with-CAST-AI-Usage.ai-image2-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--biNx6Uow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2022/01/DES-97-How-to-Solve-3-Cloud-Cost-Optimization-Challenges-with-CAST-AI-Usage.ai-image2-1.png" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zero code change required&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The process takes place at the billing layer of AWS, far from your underlying code base. Benefiting from Usage AI doesn't require any server downtime or engineering work.&lt;/p&gt;

&lt;h3 id="optimization-and-spot-instance-automation-via-cast-ai"&gt;Optimization and spot instance automation via CAST AI&lt;/h3&gt;

&lt;p&gt;CAST AI uses a mix of tactics to optimize cloud costs and you get the performance your application needs: automated instance selection, rightsizing, autoscaling, and use of spot instances.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kFLOW2Jg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2022/01/DES-97-How-to-Solve-3-Cloud-Cost-Optimization-Challenges-with-CAST-AI-Usage.ai-image1-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFLOW2Jg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2022/01/DES-97-How-to-Solve-3-Cloud-Cost-Optimization-Challenges-with-CAST-AI-Usage.ai-image1-1.png" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No need to search for spot instances yourself &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unlike other solutions, CAST AI doesn’t stick to a predefined list of instance types but instead scans workloads for spot suitability and matches their requirements automatically. This is a lot faster than manually selecting the instance types you prefer and picking the workloads that shouldn’t run on spot instances at all. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No risk of interruption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Spot Fallback feature keeps your workloads running even if the cloud provider sells all the capacity and there are no spot instances left for you to use. If no spot instances matching your requirements are available, the autoscaler temporarily adds an on-demand node for your spot-only workloads, so they have a place to run on (including resources coming from reserved capacity). &lt;/p&gt;

&lt;p&gt;Once the inventory of spot instances is available again, the autoscaler replaces the on-demand nodes used during the fallback with actual spot instances. That way, you can still get the benefits of spot instances without having to be anxious about the potential downtime. &lt;/p&gt;

&lt;h2 id="a-winning-combination-of-cost-optimization-methods"&gt;A winning combination of cost optimization methods&lt;/h2&gt;

&lt;p&gt;Bringing together different cost optimization is a sure-fire way to achieving significant cost savings while avoiding the most common optimization pitfalls.&lt;/p&gt;

&lt;p&gt;Modern solutions that rely on automation and AI to make the best optimization choices in real-time are great candidates for such combinations.&lt;/p&gt;

&lt;p&gt;By seamlessly mixing Usage AI and CAST AI, you get guaranteed capacity at a low price and optimal resource utilization at every point in time.&lt;/p&gt;

&lt;h2 id="see-how-it-all-works-in-action"&gt;See how it all works in action&lt;/h2&gt;

&lt;p&gt;We're hosting a joint webinar with Usage AI on the 2nd of February&lt;/p&gt;

&lt;p&gt;You will be able to see how both products work together in a way that allows to get maximum cost savings without any of the downsides.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cast.ai/event/cloud-cost-savings-without-the-downsides-how-to-combine-cast-ai-with-usage-ai/"&gt;Register for the webinar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>kubernetes</category>
      <category>devops</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Higher Order Function in Javascript</title>
      <author>Mysterio</author>
      <pubDate>Tue, 25 Jan 2022 07:39:35 +0000</pubDate>
      <link>https://dev.to/shubhamtiwari909/higher-order-function-in-javascript-1i5h</link>
      <guid>https://dev.to/shubhamtiwari909/higher-order-function-in-javascript-1i5h</guid>
      <description>&lt;p&gt;Hello Guys today i am going to discuss Higher order function in javascript.&lt;br&gt;
Lets get started...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-higher-order-function"&gt;
  &lt;/a&gt;
  What is Higher Order Function?
&lt;/h2&gt;

&lt;p&gt;A “higher-order function” is a function that accepts another functions as parameters and/or returns another function.&lt;/p&gt;

&lt;p&gt;Lets understand the importance of Higher order function with a beautiful example - &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#we-are-going-to-calculate-area-circumference-and-diameter-of-4-circles-using-functions"&gt;
  &lt;/a&gt;
  We are going to calculate area , circumference and Diameter of 4 circles using functions.
&lt;/h3&gt;
&lt;h2&gt;
  &lt;a href="#example-using-normal-approach-"&gt;
  &lt;/a&gt;
  Example - Using Normal approach -
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Normal Functions&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculateArea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculateCircumference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculateDiameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;calculateArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;calculateCircumference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;calculateDiameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
  78.53981633974483,
  201.06192982974676,
  314.1592653589793,
  615.7521601035994
]
[
  31.41592653589793,
  50.26548245743669,
  62.83185307179586,
  87.96459430051421
]
[ 10, 16, 20, 28 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#explaination-"&gt;
  &lt;/a&gt;
  Explaination -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Here first we have created an array of 4 elements , these elements represent radius of circles.&lt;/li&gt;
&lt;li&gt;Then we have created 3 functions namely "calculateArea" , "calculateCircumference" and "calculateDiameter" to calculate area , circumference and diameter of these 4 circles.&lt;/li&gt;
&lt;li&gt;Inside every function we have created a output empty array and then iterate over the radius array and push the value to the empty output array after applying the logic related to that function .&lt;/li&gt;
&lt;li&gt;But it violates the DRY - "Dont Repeat Yourself" principal as you can see the functions are almost 90% same just the logic part is different and we repeating that 90% part again and again.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#to-solve-this-problem-we-are-going-to-use-higher-order-function-approach"&gt;
  &lt;/a&gt;
  To solve This problem , we are going to use higher order function approach.
&lt;/h4&gt;
&lt;h3&gt;
  &lt;a href="#example-higher-order-function-approach"&gt;
  &lt;/a&gt;
  Example - Higher order function approach
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//logic for area&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circumference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//logic for circumference&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//logic for diamter&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//passing the logic function as an argument&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//using the logic function passed in the parameter&lt;/span&gt;
        &lt;span class="c1"&gt;//and inside the logic function , we have passed&lt;/span&gt;
        &lt;span class="c1"&gt;// radius array values&lt;/span&gt;
        &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//passing the area function as an argument&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;area&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;//passing the circumference function as an argument&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;circumference&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;//passing the diamtere function as an argument&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
  78.53981633974483,
  201.06192982974676,
  314.1592653589793,
  615.7521601035994
]
[
  31.41592653589793,
  50.26548245743669,
  62.83185307179586,
  87.96459430051421
]
[ 10, 16, 20, 28 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;As you can see , we have created 3 functions for area, circumference and diamter with the logic part and passed these function as an argument to calculate function.&lt;/li&gt;
&lt;li&gt;It makes our code more reusable and more cleaner and easy to read.&lt;/li&gt;
&lt;li&gt;This is the beauty of higher order functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#there-are-some-inbuilt-higher-order-functions-in-javascript-like-reduce-filter-map-etc"&gt;
  &lt;/a&gt;
  There are some inbuilt higher order functions in javascript like reduce , filter , map etc.
&lt;/h3&gt;
&lt;h2&gt;
  &lt;a href="#example-using-map-function"&gt;
  &lt;/a&gt;
  Example - Using map function
&lt;/h2&gt;

&lt;p&gt;If you see the example above more closely what we are doing is mapping the array with some logic , let me explain it with an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//We can implement the same logic above in the example&lt;/span&gt;
&lt;span class="c1"&gt;// like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circumference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//mapping the value with the logics using &lt;/span&gt;
&lt;span class="c1"&gt;//map function by passing the logic as an&lt;/span&gt;
&lt;span class="c1"&gt;//arguments like we did in the above example&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;area&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;circumference&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
  78.53981633974483,
  201.06192982974676,
  314.1592653589793,
  615.7521601035994
]
[
  31.41592653589793,
  50.26548245743669,
  62.83185307179586,
  87.96459430051421
]
[ 10, 16, 20, 28 ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;As you can see, the map functions produces the same result like in the example above.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#thats-it-for-this-post"&gt;
  &lt;/a&gt;
  Thats it for this post.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-this-post-and-if-you-find-any-mistake-or-wants-to-give-any-suggestion-please-mention-it-in-the-comment-section"&gt;
  &lt;/a&gt;
  THANK YOU FOR READING THIS POST AND IF YOU FIND ANY MISTAKE OR WANTS TO GIVE ANY SUGGESTION , PLEASE MENTION IT IN THE COMMENT SECTION.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#you-can-help-me-by-some-donation-at-the-link-below-thank-you-"&gt;
  &lt;/a&gt;
  ^^You can help me by some donation at the link below Thank you👇👇 ^^
&lt;/h2&gt;

&lt;p&gt;☕ --&amp;gt; &lt;a href="https://www.buymeacoffee.com/waaduheck"&gt;https://www.buymeacoffee.com/waaduheck&lt;/a&gt; &amp;lt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#also-check-these-posts-as-well"&gt;
  &lt;/a&gt;
  Also check these posts as well
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/introduction-to-tailwind-best-css-framework-1gdj"&gt;https://dev.to/shubhamtiwari909/introduction-to-tailwind-best-css-framework-1gdj&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3"&gt;https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml"&gt;https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22"&gt;https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to convert column index of a spreadsheet into letters</title>
      <author>All Stacks Developer</author>
      <pubDate>Tue, 25 Jan 2022 07:38:24 +0000</pubDate>
      <link>https://dev.to/all_stacks_developer/how-to-convert-column-index-of-a-spreadsheet-into-letters-31k0</link>
      <guid>https://dev.to/all_stacks_developer/how-to-convert-column-index-of-a-spreadsheet-into-letters-31k0</guid>
      <description>&lt;p&gt;In a spreadsheet, rows are indexed numerically, starting from 1, but columns are indexed alphabetically, starting from A. Hence, it is pretty straightforward to work with rows and trickier to work with columns as we need to convert between column index and corresponding letters. For example, what are the letters of column 999th in a spreadsheet? In this post, we will look at how to convert programmatically a column index into its corresponding letters.&lt;/p&gt;

&lt;p&gt;In a spreadsheet, columns are indexed alphabetically, starting from A.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Obviously, the first 26 columns correspond to 26 alphabet characters, A to Z.&lt;/li&gt;
&lt;li&gt;The next 676 columns (&lt;strong&gt;26*26&lt;/strong&gt;), from 27th to 702nd, are indexed with 2 letters. [AA, AB, ... AY, AZ], [BA, BB, ... BY, BZ], ... [MA, MB, ... MY, MZ], ... [ZA, ZB, ... ZY, ZZ]. Each alphabet character takes a turn (in order) to precede all 26 alphabet characters.&lt;/li&gt;
&lt;li&gt;The next 17576 columns (&lt;strong&gt;26*26*26&lt;/strong&gt;), from 703rd to 18278th, are indexed with 3 letters. [AAA, AAB, ... AAY, AAZ], [ABA, ABB, ... ABY, ABZ], ... [ZZA, ZZB, ... ZZY, ZZZ]. Each letter AA to ZZ above takes a turn (in order) to precede all 26 alphabet characters.&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above observation suggests a recursive pattern. Columns with 3 letters depend on columns with 2 letters, columns with 2 letters depend on columns with 1 letter. Moreover, the number of letters for a column depends on its index divided by 26. It suggests that we need to divide column index by 26 to apply the recursive pattern. So, here are the steps of the algorithm:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;let ALPHABETS=['A', 'B', 'C', 'D', ... 'X', 'Y', 'Z']&lt;/li&gt;
&lt;li&gt;if k &amp;lt;= 26, then return &lt;strong&gt;ALPHABETS[k - 1]&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;else return &lt;strong&gt;getColumnLetters(k / 26)&lt;/strong&gt; + &lt;strong&gt;ALPHABETS[(k % 26) - 1]&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;Column Index&lt;/td&gt;
&lt;td&gt;Column Letters&lt;/td&gt;
&lt;td&gt;Divide by 26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;=12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;=13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;=26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;AA&lt;/td&gt;
&lt;td&gt;=1*26+1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;AK&lt;/td&gt;
&lt;td&gt;=1*26+11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;AL&lt;/td&gt;
&lt;td&gt;=1*26+12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;BA&lt;/td&gt;
&lt;td&gt;=2*26+1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;75&lt;/td&gt;
&lt;td&gt;BW&lt;/td&gt;
&lt;td&gt;=2*26+23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;988&lt;/td&gt;
&lt;td&gt;AKZ&lt;/td&gt;
&lt;td&gt;=37*26+26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;989&lt;/td&gt;
&lt;td&gt;ALA&lt;/td&gt;
&lt;td&gt;=38*26+1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1390&lt;/td&gt;
&lt;td&gt;BAL&lt;/td&gt;
&lt;td&gt;=53*26+12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1963&lt;/td&gt;
&lt;td&gt;BWM&lt;/td&gt;
&lt;td&gt;=75*26+13&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Let's take the column 1963rd as an example: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As &lt;strong&gt;1963=75*26+13&lt;/strong&gt;, the 1963rd column letters are the concatenation of the 75th column letters and the 13th column letters.

&lt;ul&gt;
&lt;li&gt;As &lt;strong&gt;13 &amp;lt; 26&lt;/strong&gt;, the 13rd column's letter is the 13rd alphabet character that is &lt;strong&gt;M&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;As &lt;strong&gt;75 = 2 * 26 + 23&lt;/strong&gt;, the 75th column letters are the concatenation of the 2nd column letters and the 23rd column letters.&lt;/li&gt;
&lt;li&gt;As &lt;strong&gt;2 &amp;lt; 26&lt;/strong&gt;, the 2nd column letter is the 2nd alphabet character that is &lt;strong&gt;B&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;As &lt;strong&gt;23 &amp;lt; 26&lt;/strong&gt;, the 23rd column letter is the 23rd alphabet character that is &lt;strong&gt;W&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The 75th column letters are hence &lt;strong&gt;B&lt;/strong&gt; + &lt;strong&gt;W&lt;/strong&gt; = &lt;strong&gt;BW&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The 1963rd column letters are hence &lt;strong&gt;BW&lt;/strong&gt; + &lt;strong&gt;M&lt;/strong&gt; = &lt;strong&gt;BWM&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's analyze the column 988th that is a little bit trickier because 988 is divisible by 26:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As &lt;strong&gt;988=38*26+0&lt;/strong&gt;, the 988th column letters are the concatenation of the 38th column letters and the 0th column letters. &lt;strong&gt;But wait, column index starts from 1, doesn't it?&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;In fact, as 988 is divisible by 26, it can be expressed as &lt;strong&gt;988=37*26+26&lt;/strong&gt;. That means the 988th column letters are the concatenation of the 37th column letters and the 26th column letters.&lt;/li&gt;
&lt;li&gt;As &lt;strong&gt;26 = 26&lt;/strong&gt;, the 26th column letter is the 26th alphabet character that is &lt;strong&gt;Z&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;As &lt;strong&gt;37 = 1 * 26 + 11&lt;/strong&gt;, the 37th column letters are the concatenation of the 1st column's letter and the 11th column's letter.&lt;/li&gt;
&lt;li&gt;Because, &lt;strong&gt;1 &amp;lt; 26&lt;/strong&gt;, the 1st column letter is the 1st alphabet character that is &lt;strong&gt;A&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;As &lt;strong&gt;11 &amp;lt; 26&lt;/strong&gt;, the 11th column letter is the 11th alphabet character that is &lt;strong&gt;K&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The 37th column letters are hence &lt;strong&gt;A&lt;/strong&gt; + &lt;strong&gt;K&lt;/strong&gt; = &lt;strong&gt;AK&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The 988th column letters are hence &lt;strong&gt;AK&lt;/strong&gt; + &lt;strong&gt;Z&lt;/strong&gt; = &lt;strong&gt;AKZ&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To implement this algorithm in javascript, we need to pay attention to certain points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The column index, which is the input of the function, starts from 1, while the array in javascript starts from 0.&lt;/li&gt;
&lt;li&gt;When dividing the column index by 26, we need to round the result down.&lt;/li&gt;
&lt;li&gt;If the column index is divisible by 26, the residual is 0. To apply the next recursive call, we need to reduce the result by one while increasing the residual by 26.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, you can find below an example of code to convert column index into corresponding letters in javascript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getColumnLetters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columnIndexStartFromOne&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ALPHABETS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;D&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;E&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;F&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;G&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;H&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;I&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;J&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;K&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;L&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;M&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;N&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;O&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;P&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Q&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;R&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;S&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;T&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;U&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;V&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;W&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;X&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Z&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columnIndexStartFromOne&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ALPHABETS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;columnIndexStartFromOne&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;columnIndexStartFromOne&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columnIndexStartFromOne&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;getColumnLetters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;ALPHABETS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-create-personal-stock-portfolio-tracker-with-google-sheets-google-apps-script-and-google-data-studio"&gt;
  &lt;/a&gt;
  How to create personal stock portfolio tracker with Google Sheets, Google Apps Script and Google Data Studio
&lt;/h2&gt;

&lt;p&gt;In this post I explain how to create a beautiful personal stock portfolio tracker with Google Sheets, Google Apps Script and Google Data Studio, please check out &lt;a href="https://www.allstacksdeveloper.com/p/lion-stock-portfolio-tracker.html"&gt;this post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-fJaQmukBW40/YHdGI2pc67I/AAAAAAAAALI/x27ehQa3IDo7xHlCF6xlo2EPOSu8RfcPwCPcBGAsYHg/s1910/Screenshot%2B2021-04-14%2Bat%2B21.42.39.png"&gt;&lt;img alt="LION stock portfolio tracker dashboard in Google Data Studio" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HczXthFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-fJaQmukBW40/YHdGI2pc67I/AAAAAAAAALI/x27ehQa3IDo7xHlCF6xlo2EPOSu8RfcPwCPcBGAsYHg/w605-h640/Screenshot%252B2021-04-14%252Bat%252B21.42.39.png" title="LION stock portfolio tracker dashboard in Google Data Studio" width="604" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.allstacksdeveloper.com/p/lion-stock-portfolio-tracker.html"&gt;https://www.allstacksdeveloper.com/p/lion-stock-portfolio-tracker.html&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-dividend-income-tracker-with-google-sheets-and-google-data-studio"&gt;
  &lt;/a&gt;
  How to create dividend income tracker with Google Sheets and Google Data Studio
&lt;/h2&gt;

&lt;p&gt;In &lt;a href="https://www.allstacksdeveloper.com/2021/11/create-dividend-tracker-with-google-sheets.html"&gt;this post&lt;/a&gt;, I explain how to create a dividend income tracker by simply using pivot tables of Google Sheets.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://www.allstacksdeveloper.com/2021/12/create-dividend-income-tracker-google-data-studio.html"&gt;this post&lt;/a&gt;, I explain how to create a dividend income tracker with Google Data Studio. &lt;/p&gt;

&lt;p&gt;Don't forget to check them out!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.allstacksdeveloper.com/2021/11/create-dividend-tracker-with-google-sheets.html"&gt;https://www.allstacksdeveloper.com/2021/11/create-dividend-tracker-with-google-sheets.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.allstacksdeveloper.com/2021/12/create-dividend-income-tracker-google-data-studio.html"&gt;https://www.allstacksdeveloper.com/2021/12/create-dividend-income-tracker-google-data-studio.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PqPpoFHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjwxlvp9pai4b4mq8313.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PqPpoFHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjwxlvp9pai4b4mq8313.png" alt="Create dividend income tracker with Google Data Studio" width="880" height="1173"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>googlesheets</category>
      <category>javascript</category>
    </item>
    <item>
      <title>11 DevOps Predictions Every Developer Should Know</title>
      <author>Pavan Belagatti</author>
      <pubDate>Tue, 25 Jan 2022 07:15:32 +0000</pubDate>
      <link>https://dev.to/harness/11-devops-predictions-every-developer-should-know-8ie</link>
      <guid>https://dev.to/harness/11-devops-predictions-every-developer-should-know-8ie</guid>
      <description>&lt;p&gt;Time to pull out our crystal ball again! Here are Harness’ top 11 DevOps predictions for 2022. What’s inside: IaC, Service Meshes, &amp;amp; more.&lt;/p&gt;

&lt;p&gt;Today, every company is powered by software. To be competitive, they must quickly deliver new features and products while keeping security and governance in mind. Using DevOps principles, Development and Operations teams make software delivery more agile, error-free, and fast. Their impact on software delivery cannot be overstated. DevOps is one of the fastest-growing and most disruptive trends in technology these days.&lt;/p&gt;

&lt;p&gt;With the evolution of microservices and cloud-native technologies, adoptions such as hybrid cloud, zero-touch automation, artificial intelligence (AI), DevSecOps, and modern ways to debug and monitor the CI/CD pipelines have gained tremendous momentum. In addition, the collaborative principles of DevOps have enabled software companies to survive in challenging times like COVID.&lt;/p&gt;

&lt;p&gt;As we close out 2021, it is a good time to consider what’s coming down the road. We may not be able to predict specific events with certainty, but we can make a guess and be prepared for them. With that in mind, here are 11 DevOps predictions that are likely to happen in 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-1-container-registries-will-proliferate"&gt;
  &lt;/a&gt;
  Prediction 1 – Container Registries Will Proliferate
&lt;/h2&gt;

&lt;p&gt;The emergence of containers made DevOps principles easier for companies to adopt. As a result, we saw a complete revolution with the packaging and shipping of software. This enabled Dev and Ops to work together with genuine cooperation and get the software delivered smoothly to the end customer. &lt;/p&gt;

&lt;p&gt;One of the results of embracing DevOps principles is &lt;a href="https://harness.io/blog/continuous-delivery-vs-continuous-deployment/"&gt;Continuous Delivery and Deployment&lt;/a&gt;, which helps DevOps engineers &amp;amp; SREs significantly reduce release times and get their products and services to market faster.&lt;/p&gt;

&lt;p&gt;Why will DevOps adoption continue to grow? The old ways of deploying software are being challenged from all sides by new approaches, technologies, and talents. In other words, it’s time to embrace change and move ahead of your competitor to win with a significant margin, and to do that, you need DevOps. &lt;/p&gt;

&lt;p&gt;Containers have been a popular choice among Developers for quite some time. They’re an efficient way to package software to move quickly from one environment to another. In the past, containers were mainly used by Developers as a way to ensure that their code could be tested in different environments before it was officially released. But as containers become more mature and easier to use, they increasingly get used in production, which means they’ll be more accessible by organizations of all kinds. Along with this, we also see so many companies setting up their own container registries to help customers store their images. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-2-hybrid-cloud-will-climb-the-ladder"&gt;
  &lt;/a&gt;
  Prediction 2 – Hybrid Cloud Will Climb the Ladder
&lt;/h2&gt;

&lt;p&gt;As more companies adopt a cloud-based infrastructure, they’ll need to develop a strategy for managing their servers on-premises and in the cloud. Many companies find that this needs to be done with a hybrid cloud strategy that combines onsite infrastructure with public cloud infrastructure.&lt;/p&gt;

&lt;p&gt;Also, most businesses have a mix of private and public cloud services. The best way to ensure that your data is protected is with a hybrid cloud deployment. A hybrid cloud deployment will help you streamline your operations by using the benefits of both public and private clouds. By using the right features for both, you can give your business their advantages.&lt;/p&gt;

&lt;p&gt;When you use a hybrid cloud deployment, it’s easy to move your workloads from one type of cloud to another when necessary. Likewise, if there are any problems with one type of cloud, you can quickly switch to another. With this kind of flexibility, it’s easier to scale up or down in order to accommodate growth or changes in demand. In addition, this makes it easier to maintain control over your business’s workflow while still taking advantage of the best features available.&lt;/p&gt;

&lt;p&gt;You’re not limited to choosing just one type of cloud either! You can use multiple types for different purposes in order to get the most of your data protection efforts. So, even if you want to take advantage of the many security features offered by traditional private clouds, you’ll still be able to take advantage of cheaper prices and new technologies on public clouds like AWS, Azure, or GCP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-3-the-scope-of-ai-ml-and-automation-will-evolve"&gt;
  &lt;/a&gt;
  Prediction 3 – The Scope of AI, ML, and Automation Will Evolve
&lt;/h2&gt;

&lt;p&gt;AI and automation will become even more important than they already are. AI is already used to automate tasks like security scans, bug fixes, and quality assurance testing, but it’s expected that AI will continue to evolve to automate more complicated tasks. For example, robots can now create code automatically without human intervention, and machine learning (ML) is used in Continuous Delivery to fix your pipeline. One such example is Harness CI – we introduced a feature called &lt;a href="https://harness-1.wistia.com/medias/jm9mbfmj6o?mkt_tok=OTI0LUNRTy0yMjQAAAGBjCUJDc5dwO5uBx9MCtsOIdF8dfqy4SR0F8T4F1Hg7xQyomeiso2XzgM7rAPF5a4Givn3nyhSM4dYRZ8kYcK3ynjK5__rHE6Bzio_ABMNWew"&gt;Test Intelligence&lt;/a&gt;, which uses ML to select and prioritize the execution of unit tests. &lt;/p&gt;

&lt;p&gt;Both AI and ML help DevOps teams deliver faster, but the industry has been slow to adopt the many benefits AI and ML have to offer. With ML, DevOps teams can inject multiple test suites into CI/CD pipeline and repeat them to find bugs, detect antipatterns, and uncover unique insights. In your &lt;a href="https://harness.io/blog/software-development-life-cycle/"&gt;SDLC&lt;/a&gt;, you can use ML to prioritize event-driven alerts, perform root cause analysis, and recommend actionsL. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-4-devops-engineer-jobs-will-enrich-and-expand"&gt;
  &lt;/a&gt;
  Prediction 4 – DevOps Engineer Jobs Will Enrich and Expand
&lt;/h2&gt;

&lt;p&gt;DevOps is not just for Developers anymore. As more organizations adopt it’s principles, there will be more job opportunities for DevOps engineers. Due to the rise in DevOps adoption, there will be a significant increase in demand for professionals with DevOps skills. &lt;/p&gt;

&lt;p&gt;A survey conducted by the DevOps Institute on &lt;a href="https://thellpa.com/news/the-2021-upskilling-enterprise-devops-skills-report/"&gt;upskilling the DevOps enterprise skills&lt;/a&gt; in 2021 concluded that DevOps teams are vital for a successful software-powered organization, and they remain critical to ongoing IT and business operations. &lt;/p&gt;

&lt;p&gt;The demand for professionals with necessary DevOps engineering skillsets (automation skills, collaboration skills, technical skills, functional skills, etc.) is growing exponentially because of the growing number of SaaS startups and their increased reliance on automation tools by software development teams. This trend will only continue as automation tools get even better at simplifying the entire software development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-5-cloudnative-technologies-will-increase-market-share"&gt;
  &lt;/a&gt;
  Prediction 5: Cloud-Native Technologies Will Increase Market Share
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://harness.io/blog/kubecon-2020-recap-maturity-in-cloud-native/"&gt;Cloud-native tools and technologies&lt;/a&gt; provide companies with a wide variety of options to build scalable software and maintain them with high availability. Developing in the cloud is not a new idea. In fact, the first-ever web browser was created for a cloud-based operating system. But this new generation of cloud native tools makes it possible to do more than ever. For example, Docker (2013) made a huge impact with containerization that made collaborating, distributing and testing software much easier. And thenKubernetes (2014) was crowned king of container orchestration where it significantly influenced the developer market by orchestrating and scaling containers, and deploying them smoothly. Then came Terraform (2014), Helm (2015), Prometheus(2012) and  Pulumi (2017), etc., along with existing technologies such as NGINX and Promethius which help companies build out their own cloud-native stacks. &lt;/p&gt;

&lt;p&gt;In particular, Kubernetes deployments will become the most popular framework for deploying applications and will continue to gain market share.  Products from companies likeompanies like VMware, Red Hat, Suse, Microsoft, Google and event AWS  use Kubernetes to manage containers, clusters, and microservices. It’s no surprise that Kubernetes deployments will continue to rise.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-6-gitops-will-flourish"&gt;
  &lt;/a&gt;
  Prediction 6: GitOps Will Flourish
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://harness.io/blog/what-is-gitops/"&gt;GitOps&lt;/a&gt; is an evolution of the DevOps movement. It is an extension of the traditional Git workflow where Git is considered as the single source of truth. GitOps relies on Continuous Delivery and Deployment to allow organizations to react more quickly to changes in their business landscape, market, or customer needs. It offers a more collaborative and adaptive way to manage software releases to reduce risk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://harness.io/blog/what-is-continuous-integration/"&gt;Continuous Integration&lt;/a&gt; and Deployment have been a software development process since 2009. They are designed to help Developers create, test, and deliver software continuously instead of the slower waterfall model, where teams would focus on doing all of these tasks in one long development cycle.&lt;/p&gt;

&lt;p&gt;GitOps builds on this concept of Continuous Integration and Deployment where companies can achieve increased speed, transparency, security, reliability, and collaboration through automation, while benefiting from a single source of truth for infrastructure and application configuration details. Think of GitOps as a way for organizations to implement DevOps practices for their SDLC and operations life cycle. Git plus Continuous Integration, plus Continuous Deployment, plus automation equals GitOps. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-7-devops-security-will-become-the-priority"&gt;
  &lt;/a&gt;
  Prediction 7: DevOps Security Will Become the Priority
&lt;/h2&gt;

&lt;p&gt;Practicing DevOps can be a speedy game where things might go wrong. While speed is necessary, we also need to insert security checkpoints at every stage of our SDLC. With some significant advancements in security, such as &lt;a href="https://searchsecurity.techtarget.com/news/252500765/Biden-signs-executive-order-to-modernize-cyberdefenses"&gt;Biden’s executive order on cybersecurity&lt;/a&gt;, there is a lot of light on security when it comes to DevOps and securing your DevOps pipeline. One best approach is the &lt;a href="https://thenewstack.io/cisa-lays-out-security-rules-for-zero-trust-clouds/"&gt;zero-trust security framework&lt;/a&gt; that grants individuals with the least privileged access to the IT resources as it treats everything and everyone as hostile. &lt;/p&gt;

&lt;p&gt;The cost of fixing any error or a bug in production will cost your company more and impact the brand and morale of your developers. Hence, shifting security left as early as possible in your development pipeline and making everyone aware that security is everyone’s job is a must. With so many cyberattacks last year, companies have learned to take aggressive actions with their security setup. In 2022, &lt;a href="https://harness.io/blog/security-vulnerabilities/"&gt;DevOps and security&lt;/a&gt; are expected to work together hand-in-hand to tackle the various security issues that arise. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-8-security-breaches-will-continue-to-soar"&gt;
  &lt;/a&gt;
  Prediction 8: Security Breaches Will Continue to Soar
&lt;/h2&gt;

&lt;p&gt;Security breaches will continue to rise if companies don’t take security seriously. As we have seen, &lt;a href="https://harness.io/blog/automated-devsecops/"&gt;DevSecOps&lt;/a&gt; has just become another buzzword with a lack of implementation ideas. There were many high-profile security breaches in 2021, which shows the companies’ negligence and poor security policies. It is also because of the lack of highly skilled security professionals and rapid technology growth in recent years.&lt;/p&gt;

&lt;p&gt;Cybersecurity is not just limited to firewalls and secured networks; instead, it is an ongoing effort that demands continuous attention to your SDLC and the whole infrastructure. Keeping your pipelines, secrets, environments, and clusters safe and secure with the least privilege access, having &lt;a href="https://harness.io/blog/rbac/"&gt;role-based access&lt;/a&gt;, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-9-jamstack-will-drive-modern-web-development"&gt;
  &lt;/a&gt;
  Prediction 9: JAMstack Will Drive Modern Web Development
&lt;/h2&gt;

&lt;p&gt;Web development is constantly changing. The responsive design revolution of the early 2010s ushered in a new era of website development but has shown its limitations. JAMstack is a recent web development toolkit that lets you leverage client-side JavaScript frameworks, preprocessors, and serverless technologies to create powerful websites.&lt;/p&gt;

&lt;p&gt;The JAMstack flips the traditional approach on its head by combining static site generators, JavaScript, and CSS into one package. These tools give you the flexibility and scalability for modern web projects. JAMstack’s goal is to provide developers with an all-inclusive platform with no restrictions on how you can code your application. With The JAMstack, it’s possible for teams using different languages and frameworks to collaborate without any friction. JAMstack is becoming the new standard for web development in 2022 and beyond. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-10-infrastructure-as-code-will-become-the-devops-norm"&gt;
  &lt;/a&gt;
  Prediction 10: Infrastructure as Code Will Become the DevOps Norm
&lt;/h2&gt;

&lt;p&gt;A DevOps culture enables developers to get closer to the user by gaining a better understanding of user requirements and needs. As a result, DevOps aims to make agile software delivery more efficient, shorten lead times and deliver high-quality features without sacrificing quality and reliability. After the wide acceptance of DevOps culture, there was a need for IT automation The concept of &lt;a href="https://harness.io/blog/infrastructure-as-code/"&gt;Infrastructure as Code (IaC)&lt;/a&gt; has made this possible with tools like Terraform, Ansible, CloudFormation, Pulumi, etc.&lt;/p&gt;

&lt;p&gt;For &lt;a href="https://harness.io/blog/dora-metrics/"&gt;DevOps teams to scale&lt;/a&gt;, they need tools that provide repeatable, scalable, and transparent ways of managing their cloud infrastructure. IaC and the tools mentioned before will accomplish this. IaC helps teams quickly manage their infrastructure and enriches developer experience by mitigating the burden of unwanted manual tasks. In addition, IaC boosts the DevOps culture of blurring the lines between Dev and Ops with increased collaboration. This year, we will see a rise in the adoption of IaC and this particular approach becoming a DevOps standard by teams that embrace DevOps. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prediction-11-service-meshes-will-gain-traction"&gt;
  &lt;/a&gt;
  Prediction 11: Service Meshes Will Gain Traction
&lt;/h2&gt;

&lt;p&gt;Whether big or small, every company desires to move fast and embrace the DevOps path. The DevOps landscape is moving closer towards cloud-native technologies where the influence of microservices is huge. However, we all agree that microservices come with their own limitations of connectivity, security, and monitoring as the number of microservices grow.&lt;/p&gt;

&lt;p&gt;To tackle this, the concept of service mesh has gained tremendous attention lately. Service meshes help companies that employ a vast number of microservices to automate networking, monitoring, and security. In addition, &lt;a href="https://harness.io/blog/what-is-a-service-mesh/"&gt;service meshes aid developers&lt;/a&gt; in deploying new services and making changes to the existing ones without worrying about how this will impact the other microservices and their operational properties. Service mesh tools like &lt;a href="https://harness.io/blog/istio-service-mesh-deployment/"&gt;Istio&lt;/a&gt; and Linkerd have gained massive awareness, but it is this year that we will gain traction. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;While buzzwords come and go, companies are constantly looking for technological advances to enable their teams to increase innovation, and make their customers and partners happy. Sometimes the trends can be surprising. Either way, DevOps engineers will be needed to figure it out and implement them. &lt;/p&gt;

&lt;p&gt;All of these trends – containerization, hybrid cloud adoption, AI and automation, cloud-native development, GitOps, security, JAMstack, IaC, service meshes – will have a major impact on the software industry. As DevOps methodologies continue to mature, Developers and DevOps professionals need to be up to date with what’s happening around this space. The following are recommended articles from Harness:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://harness.io/blog/pipeline-security-devsecops-catalyst/"&gt;CI/CD Pipeline Security – DevSecOps Catalyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://harness.io/blog/devops-adoption/"&gt;DevOps Adoption At Harness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://harness.io/blog/software-delivery-pipeline/"&gt;How To Improve Your Software Delivery Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://harness.io/blog/microservices-deployment-strategies/"&gt;The Journey To Microservices &amp;amp; Deployment Strategies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
    </item>
    <item>
      <title>Dorm Room Doorbell: Web Sockets &amp; Detection</title>
      <author>Jacob Woods</author>
      <pubDate>Tue, 25 Jan 2022 07:06:21 +0000</pubDate>
      <link>https://dev.to/jacobwoods45/dorm-room-doorbell-1b3i</link>
      <guid>https://dev.to/jacobwoods45/dorm-room-doorbell-1b3i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#detection-stabilization"&gt;
  &lt;/a&gt;
  Detection Stabilization
&lt;/h2&gt;

&lt;p&gt;First things first, we needed to keep the face detector from doing some sort of action every time the loop runs. So to keep the detector from continuing to detect faces I used two tricks: 1.) Use an array to look at previous frames and see if it detected a face. If we see that the last 40 or so frames detected a face then we can determine that there is in fact a face there. The Cascade Classifier that comes with OpenCV can be a bit buggy and I didn't want a new event happening should the detection not detect a person in one frame. 2.) If we detected a face in the last pass of the frame loop then we don't want to do a new event because we know a face is already there. Super neat stuff!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-socket-server"&gt;
  &lt;/a&gt;
  Web Socket Server
&lt;/h2&gt;

&lt;p&gt;I knew for this project I would need to pickup web sockets so I started up on that. I have never used web sockets so I used a Tech With Tim &lt;a href="https://www.youtube.com/watch?v=3QiPPX-KeSc"&gt;video&lt;/a&gt; Still learning and processing it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def handle_cleint(conn, addr):
    print(f"[NEW CONNECTION] {addr} connected.") 
    connected = True
    while connected == True:
        message_length = conn.recv(HEADER).decode(FORMAT) # Receive message
        if message_length:
            message_length = int(message_length)
            msg = conn.recv(message_length).decode(FORMAT) # Receive message
         # Print message
            if msg == DISCONNECT_MESSAGE:
                connected = False
            print(f"[{addr}] {msg}")
            conn.send(f"Message received: | {msg} |".encode(FORMAT))
    print(f"[{addr}] ** Has left the chat.**")
    conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the handle client function in the server.py script&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def start():
    server.listen() 
    print(f"SEVER IS LISTENING ON {SERVER}") # Listen for incoming connections
    while True:
        conn, addr = server.accept() # Accept connection

        thread = threading.Thread(target=handle_cleint, args=(conn, addr))
        print("[ACTIVE CONNECTIONS] ", threading.activeCount() - 1 ) # Show active connections
        thread.start()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the start function, also using threading (YAY!)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    if len(array_cache) &amp;gt;= 39:
        array_cache.pop(0)
        if face_detected == False:
            if check_array_cache_sum(array_cache) &amp;gt;= 38:
                print("Face Detected")
                face_detected = True
                web_hook.send("Face Detected")
                array_cache = []
        if check_array_cache_sum(array_cache) &amp;lt;= 38 and (len(array_cache) != 0):
            print("Face Not Detected")
            face_detected = False
            array_cache = []
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is some of the code for smoothing out the detection.&lt;/p&gt;

</description>
      <category>python</category>
      <category>diy</category>
      <category>student</category>
    </item>
    <item>
      <title>CSS Pseudo-classes: Other states</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 25 Jan 2022 06:13:22 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/css-pseudo-classes-other-states-2l8p</link>
      <guid>https://dev.to/dailydevtips1/css-pseudo-classes-other-states-2l8p</guid>
      <description>&lt;p&gt;This is the last series in the CSS pseudo-class exploration.&lt;br&gt;
These are pseudo-classes that did not fit any of the previous categories.&lt;/p&gt;

&lt;p&gt;I've split this up into a series of four, where this is the last part about other pseudo-states.&lt;/p&gt;

&lt;p&gt;The other parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://daily-dev-tips.com/posts/css-pseudo-classes-links/"&gt;Link pseudo-states&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daily-dev-tips.com/posts/css-pseudo-classes-forms/"&gt;Form pseudo-states&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daily-dev-tips.com/posts/css-pseudo-classes-element-states/"&gt;Element state selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Other pseudo states&lt;/em&gt; (this one 💖)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#other-state-selectors"&gt;
  &lt;/a&gt;
  Other state selectors
&lt;/h2&gt;

&lt;p&gt;As for the other ones, we have the following that we can explore.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:is&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:not&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:has&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-is-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:is&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This selector can be used to match multiple elements on the go.&lt;/p&gt;

&lt;p&gt;You might have seen the following in standards CSS before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hotPink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make all strong and italic elements in a div pink.&lt;br&gt;
However, we can leverage the &lt;code&gt;:is&lt;/code&gt; selector to make this a bit more cleaner.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nd"&gt;:is&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hotPink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I really like this selector and have been using it more lately. It cleans up classes.&lt;/p&gt;

&lt;p&gt;Try it out in this CodePen.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/xxXMBOq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-not-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:not&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Much like the above &lt;code&gt;:is&lt;/code&gt; selector, this one does the opposite and fires if it's NOT one of the mentioned elements.&lt;/p&gt;

&lt;p&gt;We want to style all elements, but the strong and italic ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hotPink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And another cool thing we can do with this selector is validating on even more queries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="nt"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above example will put a big red outline around images missing the &lt;code&gt;alt&lt;/code&gt; attribute.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: check out this article for more information about &lt;a href="https://daily-dev-tips.com/posts/css-attribute-selectors/"&gt;CSS attribute selectors&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Try both out in this CodePen.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/NWaoJbV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I also have a complete article on the &lt;a href="https://daily-dev-tips.com/posts/css-not-selector/"&gt;CSS &lt;code&gt;:not&lt;/code&gt; selector&lt;/a&gt; if you want some more details.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-has-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:has&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This is not a stable solution yet, but super excited this is coming out!&lt;/p&gt;

&lt;p&gt;So far, you can only use this in the Safari Technology preview version.&lt;br&gt;
But it's super exciting to see what we can do with it.&lt;/p&gt;

&lt;p&gt;We can target a parent that contains certain children.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:has&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would select all divs that have paragraph elements.&lt;/p&gt;

&lt;p&gt;Some use-cases would be to remove margin from a header if it has a subtitle, for instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.header&lt;/span&gt;&lt;span class="nd"&gt;:has&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.subtitle&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep an eye out for this one, as it will become a big change for what we can do with CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Add a Team Poll to Any Rocket.Chat Channel</title>
      <author>Rohan Lekhwani</author>
      <pubDate>Tue, 25 Jan 2022 05:31:10 +0000</pubDate>
      <link>https://dev.to/rohanlekhwani/add-a-team-poll-to-any-rocketchat-channel-35fj</link>
      <guid>https://dev.to/rohanlekhwani/add-a-team-poll-to-any-rocketchat-channel-35fj</guid>
      <description>&lt;p&gt;Have you ever wished to measure your team’s sentiments on a topic with a live poll? There is a free Rocket.Chat app for that!&lt;/p&gt;

&lt;p&gt;As many of you discovered already, you can easily use the poll app to perform basic polls. But most of you found the existing poll app rather limiting. We heard you!&lt;/p&gt;

&lt;p&gt;We’ve launched a new app — the &lt;a href="https://rocket.chat/apps/poll-plus"&gt;Poll Plus&lt;/a&gt; app that can do much more than the old app on Rocket.Chat. It’s ability to allow user-defined options, post word clouds, conduct live polls and re-use poll templates make it a Poll App with superpowers!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-not-me-allow-everyone-to-add-options"&gt;
  &lt;/a&gt;
  Why You Not Me — Allow Everyone to Add Options!
&lt;/h2&gt;

&lt;p&gt;Earlier, poll options could not be changed after the poll creator posted the poll in a room. While this works fine, Poll Plus does this better and further engages your community by allowing room members to add options after posting the poll!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oRKS9tK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AheEyYhjhSrkhLGBD" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oRKS9tK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AheEyYhjhSrkhLGBD" alt="Allow room members to add options 🙌" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#live-polls-unlimited-timed-polls"&gt;
  &lt;/a&gt;
  Live Polls — Unlimited, Timed Polls
&lt;/h2&gt;

&lt;p&gt;What if you could conduct standup or retro feedback for your teams right within Rocket.Chat? Or, perhaps, could schedule live quizzes for your class to be retrieved on the test day? Introducing Live Polls. Live Polls are a collection of polls with a customizable end time-limit for each poll.&lt;/p&gt;

&lt;p&gt;Create a live poll by sending &lt;code&gt;/poll live &amp;lt;number of polls&amp;gt;&lt;/code&gt; within any room. For example, if you want a total of two questions, send &lt;code&gt;/poll live 2&lt;/code&gt;, which opens up the poll creator modal.&lt;/p&gt;

&lt;p&gt;Each poll within a Live Poll has a time limit to vote upon after which the current Poll ends and the next one is posted. Poll creators can also click on the “Next Poll” button to trigger a pre-scheduled finish of the current Poll.&lt;/p&gt;

&lt;p&gt;The “Time limit to vote” each poll is set as the number of seconds you want that poll to be active.&lt;/p&gt;

&lt;p&gt;Let’s take a look at the Live Poll in action!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Soi4VGvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AkI4OgOfFq4UTLkuA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Soi4VGvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AkI4OgOfFq4UTLkuA" alt="Live Polls 🚀" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#save-poll-template-and-reuse-later"&gt;
  &lt;/a&gt;
  Save Poll Template and Reuse Later
&lt;/h3&gt;

&lt;p&gt;Speaking of teachers using Rocket.Chat for exams, the Live Poll Late Retrieval feature proves an excellent tool for teachers to create quizzes even weeks before and then schedule the quiz on D-day with ease. All this while having control over the time limit to answer each question.&lt;/p&gt;

&lt;p&gt;To use the Late Retrieval feature make use of the save subcommand in the format: &lt;code&gt;/poll live save &amp;lt;number of polls&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Post-creation of the Live Poll, a message along with the poll id to retrieve it will be visible only to the poll creator like in the following image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FHzru8Pv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik85wjzr3fslrej2plrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHzru8Pv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik85wjzr3fslrej2plrr.png" alt="Save Polls and Retrieve Later" width="674" height="64"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make use of the &lt;code&gt;/poll live &amp;lt;id&amp;gt;&lt;/code&gt; command to “play” the Live Poll. Here  is the poll id that was visible to the poll creator.&lt;/p&gt;

&lt;p&gt;You can find more information about this feature within its documentation &lt;a href="https://docs.rocket.chat/guides/app-guides/poll-plus/guides/live-poll#late-retrieval"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#word-clouds-visualize-your-polls-better"&gt;
  &lt;/a&gt;
  Word Clouds — Visualize Your Polls Better!
&lt;/h2&gt;

&lt;p&gt;Imagine a better way to visualize your poll results. No we’re not talking about adding colors to bar graphs (we did that already in Poll Plus xD ), we‘re talking about word clouds! Bar graphs are okay, word clouds are awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rljAH3uU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7kg8kb9i5v6qgvna0dr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rljAH3uU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7kg8kb9i5v6qgvna0dr.png" alt="Visualize your poll results better with word clouds ☁️" width="700" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Poll Plus requires a word cloud API that returns image results to actually post the word cloud. The URL to the API can be set by the Rocket.Chat administrator from the Poll Plus settings menu.&lt;/p&gt;

&lt;p&gt;By default, the &lt;a href="https://quickchart.io/documentation/word-cloud-api/"&gt;Quickchart&lt;/a&gt; word cloud API is pre-filled. A limitation of using the free version of Quickchart API is a rate-limitation of 60 requests per min per IP and requirement of public Internet access. If your Rocket.Chat server is hosted on-premise or if you require more customizations than Quickchart, we’ve open-sourced a word cloud API &lt;a href="https://github.com/RonLek/wordcloud-api"&gt;here&lt;/a&gt;. It’s usage can also be seen in the settings menu image above.&lt;/p&gt;

&lt;p&gt;In the event you leave the endpoint field blank or the API doesn’t return a valid result, the Poll Plus app would instead display the poll summary when the word cloud is set to enabled.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-based-polls"&gt;
  &lt;/a&gt;
  Template Based Polls
&lt;/h2&gt;

&lt;p&gt;Tired of repetitively filling out the same options to your Poll? Just use template based polls. The Poll Plus App includes pre-filled templates for five most commonly used poll types — 1-to-5 poll, 1-to-10 poll, Agree/Disagree polls, Overrated/Underrated polls, Emoji Rank polls. Just type your questions and let Poll Plus do the cumbersome job of filling in the options.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wiO8Q0tr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AU8VnO0jTl-LkuF5-" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wiO8Q0tr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AU8VnO0jTl-LkuF5-" alt="Emoji Rank Poll 😎" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mixed-visibility-polls"&gt;
  &lt;/a&gt;
  Mixed Visibility Polls
&lt;/h2&gt;

&lt;p&gt;Don’t want to hurt someone’s feelings on a Men In Black 3 like/dislike poll? Just make the dislike option Anonymous with Mixed Visibility Poll mode.&lt;/p&gt;

&lt;p&gt;In addition to completely revealing or veiling the identities of voters through the open and confidential visibilities mode, Poll Plus gives you the middle way out. With Poll Plus poll creators have the flexibility of customizing which options should not reveal voter identities. Here’s how it works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyWatarZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AKNM3zBvECVOSp7-_" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyWatarZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AKNM3zBvECVOSp7-_" alt="Mixed Visibility Poll Options 👀" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upgrade-your-polling-experience-with-poll-plus-today"&gt;
  &lt;/a&gt;
  Upgrade Your Polling Experience with Poll Plus Today!
&lt;/h2&gt;

&lt;p&gt;Poll Plus is a major upgrade over the older Poll App. Conduct team activities like stand-up, retro or opinion polls without leaving Rocket.Chat. Plan quizzes for your students and post them on the exam day or just post polls to know what your friends think of your favorite movie!&lt;/p&gt;

&lt;p&gt;Poll Plus is completely free and open-source, forever. Download Poll Plus from the &lt;a href="https://rocket.chat/apps/poll-plus"&gt;Rocket.Chat App Marketplace&lt;/a&gt;. On-premise users can directly clone the &lt;a href="https://github.com/Poll-Plus/rocket.chat.app-poll"&gt;Poll Plus repository&lt;/a&gt; and install it for their servers using the Rocket.Chat Apps-Engine.&lt;/p&gt;

&lt;p&gt;Get started with the feature-by-feature installation, set-up and usage &lt;a href="https://docs.rocket.chat/guides/app-guides/poll-plus"&gt;documentation&lt;/a&gt; for the Poll Plus app.&lt;/p&gt;

&lt;p&gt;Want to see a feature we missed including within Poll Plus? Raise an &lt;a href="https://github.com/Poll-Plus/rocket.chat.app-poll/issues"&gt;issue&lt;/a&gt; or start a &lt;a href="https://github.com/Poll-Plus/rocket.chat.app-poll/discussions"&gt;discussion&lt;/a&gt; on the Poll Plus repository and we’ll be in touch!&lt;/p&gt;




&lt;p&gt;Like what I do? Help me pull my next all-nighter. Consider &lt;a href="https://www.buymeacoffee.com/rohanlekhwani"&gt;buying me a coffee&lt;/a&gt;.🥤&lt;/p&gt;

&lt;p&gt;Rohan Lekhwani is an open source contributor and enthusiast. You can connect with him on &lt;a href="https://www.linkedin.com/in/rohanlekhwani/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="http://github.com/RonLek"&gt;GitHub&lt;/a&gt;, &lt;a href="https://twitter.com/Rohanlekhwani"&gt;Twitter&lt;/a&gt;, and his &lt;a href="https://ronlek.github.io/"&gt;website&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>opensource</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploy JMeter on AWS using Terraform</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Tue, 25 Jan 2022 04:43:37 +0000</pubDate>
      <link>https://dev.to/aws-builders/deploy-jmeter-on-aws-using-terraform-448k</link>
      <guid>https://dev.to/aws-builders/deploy-jmeter-on-aws-using-terraform-448k</guid>
      <description>&lt;p&gt;Maintaining JMeter infrastructure for performance testing, CI/CD integration with the enterprise pipeline, and managing are cumbersome tasks. By leveraging the Infrastructure as Code solution, Terraform is one of the excellent ways to build, manage, and deploy JMeter infrastructure quickly and efficiently. In this blog, we are going to dive deeper into spinning up an AWS infrastructure with JMeter using Terraform.&lt;/p&gt;

&lt;h2&gt;What is Infrastructure as Code?&lt;/h2&gt;

&lt;p&gt;Infrastructure as Code (IaC) helps to build, change, and version infrastructure safely and efficiently. &lt;/p&gt;

&lt;h2&gt;What is Terraform?&lt;/h2&gt;

&lt;p&gt;Terraform is an IaC tool from HashiCorp. It comes with three flavors: CLI, Cloud, and Enterprise. Terraform's mantra is: Write, Plan, and Apply.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Terraform is an open-source infrastructure as code software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies cloud APIs into declarative configuration files.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This blog post will not enlighten you about Terraform. But it focuses on how to deploy the vanilla JMeter and JMeter plugins on AWS.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;The following are the prerequisites required to deploy JMeter on AWS using Terraform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Console access to create relevant IAM roles, access keys, and secrets&lt;/li&gt;
&lt;li&gt;Terraform CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;AWS Setup&lt;/h2&gt;

&lt;h3&gt;Key Pair&lt;/h3&gt;

&lt;p&gt;To access EC2 instances, we need to create a key pair in AWS. To create a new key pair, follow the below steps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Log into AWS console&lt;/li&gt;
&lt;li&gt;Navigate to EC2 -&amp;gt; Key Pairs&lt;/li&gt;
&lt;li&gt;Create a new key pair w/ RSA and Private Key format (PEM)&lt;/li&gt;
&lt;li&gt;Save the private key to a file in a secure location&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2022/01/image-14.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IWKcTEuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2022/01/image-14.png" alt="Creating a new key pair on AWS" width="820" height="725"&gt;&lt;/a&gt;Creating a new key pair on AWS&lt;/p&gt;

&lt;h3&gt;IAM User&lt;/h3&gt;

&lt;p&gt;To manage the AWS resources on Terraform, it is recommended to create a new IAM user with Access key credential type. To create a new IAM user, go to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IAM Dashboard on AWS&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Users -&amp;gt; Add users&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Enter valid user name and select &lt;strong&gt;&lt;code&gt;Access key - Programmatic access&lt;/code&gt;&lt;/strong&gt;. &lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next: Permissions&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Attach existing policies directly&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Check &lt;a href="https://console.aws.amazon.com/iam/home#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAdministratorAccess"&gt;&lt;code&gt;AdministratorAccess&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;AmazonEC2FullAccess&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next: Tags&lt;/strong&gt;. Enter the appropriate tags.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next: Review&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Create user&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Store the Access Key ID and secret access key in a secured location. We need this info to configure it into AWS CLI.&lt;/p&gt;

&lt;h3&gt;AWS CLI&lt;/h3&gt;

&lt;p&gt;Download the AWS CLI from https://aws.amazon.com/cli/ &lt;/p&gt;

&lt;p&gt;Based on your operating system, launch the AWS CLI program and validate the version.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws --version&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To configure AWS CLI, enter &lt;code&gt;aws configure&lt;/code&gt; and press the enter key in the terminal. Enter the access key, secret, and other required details and configure it properly.&lt;/p&gt;

&lt;h3&gt;Terraform&lt;/h3&gt;

&lt;p&gt;To download Terraform, head to https://www.terraform.io/downloads and follow the instructions to download it for your operating system. In this demo, I am going to use Ubuntu 20.04 in WSL.&lt;/p&gt;

&lt;p&gt;To validate the Terraform installation, enter &lt;code&gt;terraform --version&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To install, auto complete &lt;code&gt;terraform -install-autocomplete&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To spin the EC2 instances for JMeter, make a new directory &lt;code&gt;mkdir JMeter-AWS-Terraform&lt;/code&gt;. We are going to use this directory to write some basic HCL. Terraform uses a declarative language called HashiCorp Configuration Language, which tells Terraform how to manage the resources.&lt;/p&gt;

&lt;h2&gt;JMeter on AWS using Terraform&lt;/h2&gt;

&lt;h3&gt;Terraform Write&lt;/h3&gt;

&lt;p&gt;Inside &lt;code&gt; JMeter-AWS-Terraform &lt;/code&gt;, create a new file &lt;code&gt;main.tf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Copy and paste the below &lt;a href="https://registry.terraform.io/modules/QAInsights/jmeter/aws/latest" rel="noreferrer noopener"&gt;Terraform module&lt;/a&gt; into &lt;code&gt;main.tf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT: &lt;em&gt;We are going to spin &lt;code&gt;t2.small&lt;/code&gt; instance type in this demo which is NOT under FREE TIER. &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module "jmeter" {
  source  = "QAInsights/jmeter/aws"
  version = "1.1.2"

  aws_ami           = "ami-001089eb624938d9f"
  aws_instance_type = "t2.small"
  aws_key_name      = "terraform"
  jmeter_version    = "5.4.3"
  jmeter_plugins    = ["jpgc-casutg"]
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above configuration leverages the Terraform module which I have published in the Terraform registry. It expects four inputs: ami, instance type, key name, and JMeter plugins. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://registry.terraform.io/modules/QAInsights/jmeter/aws/latest" rel="noreferrer noopener"&gt;JMeter Terraform Module&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;p&gt;By default, it installs JMeter 5.4.3 and &lt;a href="https://registry.terraform.io/modules/QAInsights/jmeter/aws/latest?tab=inputs" rel="noreferrer noopener"&gt;other variables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get started, enter &lt;code&gt;terraform init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will download the Terraform plugins, modules, and other dependencies.&lt;/p&gt;

&lt;h3&gt;Terraform Plan&lt;/h3&gt;

&lt;p&gt;The next step is to plan the resources. The output of the below command will help us to see the resources' that will get created or changed.&lt;/p&gt;

&lt;p&gt;Enter &lt;code&gt;terraform plan&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is the partial output of plan command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.jmeter.module.jmeter_server.aws_instance.this will be created
  + resource "aws_instance" "this" {
      + ami                                  = "ami-001089eb624938d9f"  
      + arn                                  = (known after apply)      
      + associate_public_ip_address          = (known after apply)      
      + availability_zone                    = (known after apply)      
      + cpu_core_count                       = (known after apply)      
      + cpu_threads_per_core                 = (known after apply)      
      + disable_api_termination              = (known after apply)      
      + ebs_optimized                        = (known after apply)      
      + get_password_data                    = false


...
...
...

Plan: 1 to add, 0 to change, 0 to destroy.&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Terraform Apply&lt;/h3&gt;

&lt;p&gt;The last step in provisioning the infrastructure on AWS is to send &lt;code&gt;terraform apply&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will prompt you to review and enter &lt;code&gt;yes&lt;/code&gt; to start provisioning. For automation purpose, you can use &lt;code&gt;terraform apply --auto-approve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Terraform will make changes to the AWS infrastructure based on the current state. As we are spinning up the new instances, after less than a minute, a new EC2 instance will be up and running. &lt;/p&gt;

&lt;p&gt;Launch the EC2 Instances page, navigate to the Ohio region where you can see an EC2 instance is up and running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2022/01/image-15.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dG9pCtaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2022/01/image-15.png" alt="Deploy JMeter on AWS using Terraform" width="880" height="217"&gt;&lt;/a&gt;Deploy JMeter on AWS using Terraform&lt;/p&gt;

&lt;p&gt;Copy the public IP address of that instance to ssh into it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -i &amp;lt;pem-key&amp;gt; ec2-user@&amp;lt;public-IP-address&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JMeter has been installed in the home directory. To validate it, enter `jmeter -v`&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2022/01/image-16.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YHlxAUbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2022/01/image-16.png" alt="JMeter 5.4.3 on AWS" width="880" height="184"&gt;&lt;/a&gt;JMeter 5.4.3 on AWS&lt;/p&gt;

&lt;p&gt;The Terraform module also installs JMeter plugin &lt;code&gt;jpgc-casutg&lt;/code&gt;. This can be configured in the &lt;code&gt;main.tf&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;To validate, &lt;code&gt;sudo cat /var/log/cloud-init-output.log&lt;/code&gt; to view the log.&lt;/p&gt;

&lt;p&gt;Within a few minutes, you have an EC2 instance with Java, JMeter, and JMeter plugins for performance testing. Terraform allows us to configure all the parameters under the hood, e.g. AWS region, VPC, instance types, and more. This Terraform module uses a lot of default values for AWS. If you are looking for anything specific to configure, please let me know in the GitHub repo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/QAInsights/terraform-aws-jmeter" rel="noreferrer noopener"&gt;JMeter Terraform Module Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;p&gt;In this example, we have spun up a &lt;code&gt;t2.small&lt;/code&gt; type. If you keep running, your AWS bill is going to hit the roof. &lt;/p&gt;

&lt;p&gt;To destroy the resources, enter &lt;code&gt;terraform destroy --auto-approve&lt;/code&gt;. CAUTION: This command is non-reversible.&lt;/p&gt;

&lt;p&gt;Within a minute, EC2 instance will be deleted.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Integrating performance tests in the enterprise pipeline is crucial for shift-left and adopting DevOps practice. Managing the infrastructure for performance tests is time-consuming and error-prone. By leveraging IaC tools like Terraform, it is easy and quick to spin up the resources and destroy them once the need is done. In the next blog post, we are going to see how to deploy JMeter distributed load test infrastructure on AWS using Terraform.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>terraform</category>
      <category>performance</category>
      <category>jmeter</category>
    </item>
    <item>
      <title>UseState is asynchronous: Learn how to use useState and useEffect properly</title>
      <author>Fidal Mathew</author>
      <pubDate>Tue, 25 Jan 2022 04:16:01 +0000</pubDate>
      <link>https://dev.to/fidalmathew/usestate-is-asynchronous-learn-how-to-use-usestate-and-useeffect-properly-1m1m</link>
      <guid>https://dev.to/fidalmathew/usestate-is-asynchronous-learn-how-to-use-usestate-and-useeffect-properly-1m1m</guid>
      <description>&lt;p&gt;Hello readers, today I’m gonna talk about one of the issues I faced when I was making projects using React js.&lt;/p&gt;

&lt;p&gt;UseState is asynchronous, let me show you what I mean via a small example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;


    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setVal&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;effect &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;


    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;addVal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;ADD&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are having a state variable named &lt;strong&gt;val&lt;/strong&gt; initialized with 0.&lt;/p&gt;

&lt;p&gt;We also have a button, which on click, calls a function addVal()&lt;/p&gt;

&lt;p&gt;addVal() has the following functions -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Set the state of val by incrementing it. &lt;br&gt;
It is done by &lt;code&gt;setVal(val+1)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Console.log(val);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also have a useEffect that is triggered when state of val changes.&lt;/p&gt;

&lt;p&gt;Let’s look at the console after clicking the button once.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NxNSyELz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzfycreq49et39oy52px.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NxNSyELz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzfycreq49et39oy52px.png" alt="console.log" width="654" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. First&lt;/strong&gt; - The first console is of useEffect when the page first loads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Second&lt;/strong&gt; - The second console is due to the addVal function. &lt;br&gt;
After, we update the state of val. &lt;/p&gt;

&lt;p&gt;But, the value which gets printed remains the same i.e &lt;strong&gt;0&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;So, what happening? The value of &lt;em&gt;val&lt;/em&gt; isn’t updated immediately, useState is asynchronous. It takes time to update so it allows rest of the program to continue and updates the value later. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Third&lt;/strong&gt; - The third console log is due to the useEffect, which displays the value of &lt;em&gt;val&lt;/em&gt; after the state is updated i.e &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I hope you understood the concept and remember to manage your state changes using useEffect. I have made a lot of mistakes, not knowing the concept completely. I hope you don’t make them too.&lt;/p&gt;

&lt;p&gt;Keep learning and thanks for reading :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feel free to connect with me on -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/fidalmathew10"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FidalMathew"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/fidal-mathew-82aba7200/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Is Angular Dead in 2022?</title>
      <author>Jonathan Gamble</author>
      <pubDate>Tue, 25 Jan 2022 04:13:29 +0000</pubDate>
      <link>https://dev.to/jdgamble555/is-angular-dead-in-2022-bh9</link>
      <guid>https://dev.to/jdgamble555/is-angular-dead-in-2022-bh9</guid>
      <description>&lt;p&gt;In case you're unaware, Google has had an interesting track record in the Framework category. Not all of these are technically frameworks, but can be used as such.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frameworks"&gt;
  &lt;/a&gt;
  Frameworks
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; - DEAD Recently&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://angular.io/"&gt;Angular 2&lt;/a&gt; - Every version up until 13, not confusing at all&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://polymer-library.polymer-project.org/"&gt;Polymer&lt;/a&gt; - DEAD Recently&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://angularjs.org/"&gt;Lit&lt;/a&gt; - Replaced Polymer for web components&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://angular.io/guide/universal"&gt;Angular Universal&lt;/a&gt; - A package for Angular 2 to add SSR functionality&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/angulardart"&gt;Angular Dart&lt;/a&gt; - DEAD Recently, although still used at Google internally for certain Google Apps&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ionicframework.com/"&gt;Ionic&lt;/a&gt; - Not Google, worth mentioning because mainly used with Angular to build multi-platform apps&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://flutter.dev/"&gt;Flutter&lt;/a&gt; - IMHO best multi-platform app builder, arguably except for the web (DART instead of JS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have been paying attention to the latest Framework features, particularly NextJS and Sveltekit (NUXT too), you see these new ideas and features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Incredibly small bundle sizes&lt;/li&gt;
&lt;li&gt;Small build times&lt;/li&gt;
&lt;li&gt;Easy SSR Deployment to different hosting environments&lt;/li&gt;
&lt;li&gt;Incremental Static Regeneration (ISR)&lt;/li&gt;
&lt;li&gt;Automatic Static Optimization&lt;/li&gt;
&lt;li&gt;SSR Streaming&lt;/li&gt;
&lt;li&gt;File System API with Dynamic Routing&lt;/li&gt;
&lt;li&gt;ESLint Built-in&lt;/li&gt;
&lt;li&gt;Edge Functions (Middleware)&lt;/li&gt;
&lt;li&gt;Edge Network&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what's going on with Angular? Well, let's take the cases one-by-one, including what you didn't know Angular &lt;strong&gt;CAN&lt;/strong&gt; do, or partly do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The bundle sizes and built times are terrible in Angular, even with the newer IVY compiler. This desperately needs work. It took me 15 min to compile my &lt;a href="https://fireblog.io"&gt;fireblog.io&lt;/a&gt; site, although I admit there are probably many ways I could tweak it. Lazy-loading is pretty much your only option here.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deployment - This is actually not an issue. There are plugins for Angular Universal for all hosting environments except Vercel. However, you &lt;a href="https://dev.to/jdgamble555/how-to-deploy-angular-universal-to-vercel-31d0"&gt;can deploy&lt;/a&gt; to Vercel, as long as you don't have a package bigger than 50MB, which could be a problem.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ISR and Static Optimization - I am not a fan of this in NextJS. You're basically creating a static page with JavaScript on it. You could manually write this code, but why would you. Your meta data would not dynamically update. I also don't want to automatically generate a static page, as I would prefer to chose it myself. However, I could definitely see the use of this depending on your site.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://nextjs.org/docs/advanced-features/react-18"&gt;SSR Streaming&lt;/a&gt;. I have seen on REDIT arguments why this is overkill. This is basically using HTTP Streaming to send asynchronous data (promises) to the server. This is potentially against the HTTP protocol from my understanding, and you're creating a promise with the browser to only get resolved when finished. It is in Alpha mode in NextJS, but very interesting. A stream is different from an observable in that it can be run only once, but here the promise &lt;em&gt;IS&lt;/em&gt; the browser since it is technically a promise which uses the http protocol. This is also on Rich Harris's list for SvelteKit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;File System API - This uses the dynamic routing feature from React, and serverless functions in SSR mode. This was emulated for Svelte and Vue. NextJS and Nuxt (soon SvelteKit) compile each route to its own serverless function. This explains why Vercel only allows 50MB lambdas.  While this sounds good, I am not a fan of this at all. React just does routing differently than Angular. The extra-function will create another cold start on each route. I suggest loading just the original route via server, and then client lazy-load the other routes (if you use Angular or any of them). Cold starts are the problem. That being said, this seems to be a norm Angular is ignoring, although Google creates its own norms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Angular will eventually have es-lint built-in like it used to have TS Lint, right?  Well, until then, the semi-official solution seems to be &lt;a href="https://github.com/angular-eslint/angular-eslint#readme"&gt;this package&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Edge - So, if you host on Google, it recently has an &lt;a href="https://peering.google.com/"&gt;edge network&lt;/a&gt; with all the great features a CDN should have. However, even though it is not too difficult to configure, you still have to configure and pay for it; it does not work out-of-the box. There is also &lt;a href="https://cloud.google.com/blog/topics/hybrid-cloud/announcing-google-distributed-cloud-edge-and-hosted"&gt;edge computing&lt;/a&gt; for those micro calculations. This is pretty much exactly what Vercel's Middleware is. Unfortunately it is not built into Angular, and I don't even know if you could configure it for SSR purposes. This could be a way to do my &lt;a href="https://dev.to/jdgamble555/the-best-frameworks-and-servers-for-2022-on-the-edge-mmj"&gt;puppeteer&lt;/a&gt; idea.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#roadmap"&gt;
  &lt;/a&gt;
  Roadmap
&lt;/h2&gt;

&lt;p&gt;You can view the &lt;a href="https://angular.io/guide/roadmap"&gt;Angular Roadmap&lt;/a&gt;. A few things of note:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://angular.io/guide/roadmap#investigate-micro-frontend-architecture-for-scalable-development-processes"&gt;Micro frontend architecture&lt;/a&gt;. Well, more automatic lazy-loading separated components. This is absolutely the most important thing that I see. Sounds interesting.&lt;/li&gt;
&lt;li&gt;Zone.js opt-out... the reason async await doesn't work like you think for components, I am pro this&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://angular.io/guide/roadmap#ergonomic-component-level-code-splitting-apis"&gt;Code-splitting&lt;/a&gt; - nuff said&lt;/li&gt;
&lt;li&gt;New Angular Material 3 built-in... freaking cool here&lt;/li&gt;
&lt;li&gt;Optional NgModules with Standalone pipes and directives - See &lt;a href="https://www.youtube.com/watch?v=H7ujja2TxEo"&gt;this video&lt;/a&gt;. This will help the speed with less coding, although some might not like this.&lt;/li&gt;
&lt;li&gt;Lots of more diagnostics and tools you would expect from Google&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Obviously the answer here is NO. A big fat no. It is not dead, and it will continue to strive for a long long time. However, I don't think it is trying to be something it is not. It does not have experimental features like HTTP Streaming, and it is not in-style using ISR and the File System API. I suspect if HTTP Streaming catches on, it will &lt;em&gt;eventually&lt;/em&gt; incorporate it. ISR is cool, but probably not at the top of the list. I believe that is a fad just for React. The File System API, I am not so sure about. I think it depends on what the Angular team "discovers" while doing code-splitting and micro frontend architecture research.&lt;/p&gt;

&lt;p&gt;That being said the build time and build size are disastrous... for a reason: Angular is a beast. Angular has all of these items all enterprise apps have to add, built-in. Angular may have a much smaller package size for larger apps, since it has incorporated these packages within Angular.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reasons-to-choose-angular"&gt;
  &lt;/a&gt;
  Reasons to Choose Angular
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It is Polished&lt;/li&gt;
&lt;li&gt;Testing, Typescript, Build Options, Logic&lt;/li&gt;
&lt;li&gt;You are building a serious app, enterprise grade&lt;/li&gt;
&lt;li&gt;You learned Angular through &lt;a href="//fireship.io"&gt;fireship.io&lt;/a&gt;, although he now prefers React (SMH)&lt;/li&gt;
&lt;li&gt;Reliability&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.madewithangular.com/categories/google/"&gt;Google and Microsoft&lt;/a&gt; build most of their apps with it. Yes, those two small companies you may have heard of.&lt;/li&gt;
&lt;li&gt;You want to deploy your app somewhere besides Vercel (unless your app is small)&lt;/li&gt;
&lt;li&gt;You hate bootstrap and want to use the latest, best Material UI package&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The key word is here, &lt;strong&gt;enterprise&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;But I'm currently building my app in SvelteKit, despite the framework being ready for production builds... I guess I am my own leader...&lt;/p&gt;

&lt;p&gt;J&lt;/p&gt;

</description>
      <category>angular</category>
      <category>angularuniversal</category>
      <category>framework</category>
      <category>javascript</category>
    </item>
    <item>
      <title>In-depth of tnpm rapid mode - how we managed to be 10 second faster than pnpm</title>
      <author>TZ | 天猪</author>
      <pubDate>Tue, 25 Jan 2022 03:37:16 +0000</pubDate>
      <link>https://dev.to/atian25/in-depth-of-tnpm-rapid-mode-how-could-we-fast-10s-than-pnpm-3bpp</link>
      <guid>https://dev.to/atian25/in-depth-of-tnpm-rapid-mode-how-could-we-fast-10s-than-pnpm-3bpp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;As a front-end veteran, I have to point out that the increasing complexity of front-end projects nowadays makes the dependency installation slower and slower.&lt;/p&gt;

&lt;p&gt;At Alibaba and Ant Group, Engineering Productivity is an important metric for engineers, and the speed of installation of front-end dependencies is a big negative impact factor. &lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We are the team responsible for front-end infrastructure in Ant Group.&lt;/strong&gt; We mainly focus on building the Node.js community within the company and maintaining many open-source projects like &lt;a href="https://github.com/eggjs"&gt;eggjs&lt;/a&gt; and &lt;a href="https://github.com/cnpm"&gt;cnpm&lt;/a&gt;.&lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;We started an initiative in 2021, one of its goals was to optimize the installation speed of dependencies. We managed to speed up the dependency installation by 3 times.&lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In this article, we'd like to share with you the ideas and results of 'tnpm rapid mode'.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8B4ieAWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txp5r13jdas28ebdfnmy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8B4ieAWY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txp5r13jdas28ebdfnmy.png" alt="tnpm rapid" width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thank &lt;a href="https://github.com/sodatea"&gt;@sodatea&lt;/a&gt;,  &lt;a href="https://github.com/HerringtonDarkholme/"&gt;@nonamesheep&lt;/a&gt;, @Sikang Bian(RichSFO), &lt;a href="https://github.com/geekdada"&gt;@geekdada&lt;/a&gt; so much for the translation of &lt;a href="https://www.yuque.com/egg/nodejs/tnpm-rapid-en"&gt;this article&lt;/a&gt;, the &lt;a href="https://zhuanlan.zhihu.com/p/455809528"&gt;original article&lt;/a&gt; was written by &lt;a href="https://github.com/atian25"&gt;@atian25&lt;/a&gt; and published on Zhihu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;TL;DR&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-is-npm-soooo-slow"&gt;
  &lt;/a&gt;
  Why is npm soooo slow?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a94lWuc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mofif0st4p300fqi55f3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a94lWuc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mofif0st4p300fqi55f3.png" alt="npm-so-slow" width="286" height="222"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the modern front-end ecosystem, the number of total modules has been exploding and the dependency graphs are becoming increasingly complex.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are a galaxy of modules in the ecosystem. With &lt;a href="http://www.modulecounts.com/"&gt;over 1.8 million npm packages in total&lt;/a&gt;, npm has several times as many modules as in other languages by the end of 2021. &lt;/li&gt;
&lt;li&gt;Module relationships are becoming exceedingly complex. Duplicate dependencies and lots of small files are wasting disk space and slowing down disk writes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The front-end module system prefers small and well-crafted modules. While this brought unprecedented prosperity to the community, it also resulted in complex dependencies which directly led to slower installation. There are trade-offs to be made. &lt;/p&gt;

&lt;p&gt;Whether the ecological status quo is correct or not is way beyond the scope of our discussion today, so let's focus on how to improve installation speed for the time being.&lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hSCC6HTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwvwkicvc8iubzsbv0hl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hSCC6HTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwvwkicvc8iubzsbv0hl.jpg" alt="how-npm-install-works" width="880" height="230"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The dependencies installation process for an application is briefly illustrated as above, with the &lt;strong&gt;key operations&lt;/strong&gt; including:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Query the package information of the child dependencies and then get the download address. &lt;/li&gt;
&lt;li&gt;Download the tgz package locally, unzip it, then install it.&lt;/li&gt;
&lt;li&gt;Create the 'node_modules' directory and write the downloaded files under it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dependencies-installation"&gt;
  &lt;/a&gt;
  Dependencies Installation
&lt;/h3&gt;

&lt;p&gt;Let's take &lt;code&gt;vuepress@1.9.2&lt;/code&gt; as an example. It has about &lt;strong&gt;1000 distinct dependencies&lt;/strong&gt;, taking up 170MB disk spaces with 18542 files.&lt;/p&gt;

&lt;p&gt;But if we install the dependencies in a nested way following npm@2's implementation, we'll end up installing as many as 3626 dependency packages. There are more than &lt;strong&gt;2000 redundant dependencies&lt;/strong&gt;. And the actual disk footprint is 523MB with 60257 files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File I/O operations are very costly, especially for reading/writing large numbers of small files.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;npm@3 first came up with an optimization idea to solve the problem of duplicated dependencies + unnecessarily deep hierarchies: the &lt;a href="https://npm.github.io/how-npm-works-docs/npm3/how-npm3-works.html"&gt;flattening dependency&lt;/a&gt; capability, where all child dependencies are slapped flat under &lt;em&gt;node_modules&lt;/em&gt; in the root directory.&lt;/p&gt;

&lt;p&gt;However, this optimization ended up introducing new problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rushjs.io/pages/advanced/phantom_deps"&gt;Phantom dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://rushjs.io/pages/advanced/npm_doppelgangers"&gt;NPM doppelgangers&lt;/a&gt;. It might still result in several copies of the same package (e.g. there are still 183 duplicate packages in the abovementioned example)&lt;/li&gt;
&lt;li&gt;Non-deterministic dependency structure (though this is solvable via dependencies graph)&lt;/li&gt;
&lt;li&gt;The performance penalty from a complex flattening algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given so many side effects of the 'flattening dependencies', &lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt; proposed an alternative solution, by means of &lt;strong&gt;symbolic + hard links&lt;/strong&gt;.&lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IWWejqec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k65f7i6zz2t3i93zdbol.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IWWejqec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k65f7i6zz2t3i93zdbol.png" alt="pnpm" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This approach works great because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It reduces package duplications while staying compatible with the resolution algorithm of Node.js. The method does not introduce side effects like phantom dependencies, doppelgangers, etc. &lt;/li&gt;
&lt;li&gt;The hard linking approach with global caching reduces file duplication and saves disk footprint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The resulting data speaks for itself: 1109 modules, 18747 files, 5435 directories, 3150 symlinks, 175M disk footprint.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Similarly inspired by pnpm, we've refactored and implemented &lt;code&gt;cnpm/npminstall&lt;/code&gt;in cnpm to utilize symlinks. But it didn't make use of hard links, neither did it hoist transitive dependencies.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, it is worth noting that there are some potential issues of this approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We've observed symbolic linking could cause &lt;strong&gt;indexing problems&lt;/strong&gt; with dead loops in some IDEs (like WebStorm and VSCode) several years ago. This issue, which might not be fully resolved, should've been mitigated with IDE optimizations nowadays.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Compatibility&lt;/strong&gt;. Relative paths need to be adapted for plug-in loading logic like EggJS and Webpack as they &lt;strong&gt;may not follow the Node.js standard resolving strategy&lt;/strong&gt;, which looks modules up in the directory structure till the root of the disk.&lt;/li&gt;
&lt;li&gt;The dependencies of different applications are hard-linked to the same file, so modifying the file while debugging may inadvertently affect other projects. &lt;/li&gt;
&lt;li&gt;Hard links cannot be used across the file system. And the implementation of symlinks varies among different operating systems. Moreover, there is still some performance loss due to disk IO on non-SSD hard disks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, yarn also proposed other optimizations such as Plug'n'Play. Since it is too radical to be compatible with the existing Node.js ecosystem, we will not discuss those optimizations further here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#metadata-requests"&gt;
  &lt;/a&gt;
  Metadata Requests
&lt;/h3&gt;

&lt;p&gt;Let's take a look at the dependencies installation process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each dependency needs one metadata query and one tgz download, resulting in a total of 2 HTTP requests;&lt;/li&gt;
&lt;li&gt;If there are different versions of the same package, the metadata is queried only once, and then the tgz for each version is downloaded separately.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since the number of dependencies is typically very large, the total number of HTTP requests is subsequently magnified, resulting in a significant increase in time consumption. In the above example, npm@2 will make more than 2500 HTTP requests.&lt;/p&gt;

&lt;p&gt;A common optimization strategy is to &lt;strong&gt;calculate the dependencies graph in advance&lt;/strong&gt;, so that package managers can download 'tgz's directly without querying the package metadata. As a result, much of the network requests can be avoided.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NPM is the first to come up with the idea of &lt;em&gt;shrinkwrap&lt;/em&gt;. It was soon superseded by the idea of &lt;em&gt;lockfile&lt;/em&gt; from yarn. There're similar concepts in pnpm but different formats.&lt;br&gt;
Although lockfile was meant to &lt;em&gt;lock the dependency versions&lt;/em&gt;, people discovered that the lockfile could also be used as a &lt;em&gt;dependencies graph&lt;/em&gt; to speed up installations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, there are unsolved problems like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first installation will not speed up unless the lockfile was pre-stored in source code management. &lt;/li&gt;
&lt;li&gt;Locking version would lead to some governance problems in large-scale projects in practice.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-brief-summary"&gt;
  &lt;/a&gt;
  A Brief Summary
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fPEY_kzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akdlfq5iuc96v2c8qmtn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fPEY_kzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akdlfq5iuc96v2c8qmtn.jpg" alt="installation-process-summary" width="880" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To summarize, to speed up the installation process, we need to think about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;how to get the dependencies graph faster? (Parsing Strategy)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;how to make tgz downloads faster? (Network I/O)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;how to make to disk faster? How to deal with the duplicated dependencies? (File I/O)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The community was able to reach some common ground where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Utilizations of the &lt;em&gt;dependencies graph&lt;/em&gt; lead to more efficient concurrent downloads because the requests are better scheduled.&lt;/li&gt;
&lt;li&gt;Simplified &lt;em&gt;node_modules&lt;/em&gt; directory leads to less time in File I/O operations because of fewer duplicate dependencies.&lt;/li&gt;
&lt;li&gt;Global caching can reduce the number of download requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Still existing problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lockfile will increase maintenance costs. Neither locking nor unlocking version is a silver bullet. &lt;/li&gt;
&lt;li&gt;Flat dependencies and symbolic links (symlinks in short) have their own compatibility issues. &lt;/li&gt;
&lt;li&gt;There is no consensus on the best implementation of global caching. The "uncompressed copy" approach would generate a lot of file IO, and the hard linking approach would cause potential conflict issues. So there are trade-offs to be made. &lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-are-tnpm-and-cnpm"&gt;
  &lt;/a&gt;
  What are tnpm and cnpm?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UfDkcx89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yut57x9lpoizracfhir0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UfDkcx89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yut57x9lpoizracfhir0.jpg" alt="tnpm-cnpm" width="880" height="286"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As shown in the above diagram, briefly speaking:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/cnpm"&gt;cnpm&lt;/a&gt; is our open-source implementation of npm, which supports mirror synchronization with the official npm registry and private package capabilities. &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://npmmirror.com/"&gt;npmmirror&lt;/a&gt; is a community-deployed project based on cnpm, which provides mirroring services for Chinese front-end developers. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tnpm&lt;/code&gt; is our enterprise service for Alibaba and Ant Group, which is also based on cnpm, with additional enterprise-level customization.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#optimization-results"&gt;
  &lt;/a&gt;
  Optimization Results
&lt;/h2&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-scenario"&gt;
  &lt;/a&gt;
  Test Scenario
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;If you can't measure it, you can't improve it.  - Peter Drucker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3g4c-mZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmoxq347byh1pl5vom44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3g4c-mZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmoxq347byh1pl5vom44.png" alt="Test Scenario" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS: We are probably the first company in the industry to re-install Mac mini m1 with Linux OS to form a front-end build cluster. This reinstallation itself doubled our overall build speed on top of all the other optimizations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-results"&gt;
  &lt;/a&gt;
  Test Results
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9ZC54s8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9bbryanhb6i54z6jnst.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9ZC54s8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9bbryanhb6i54z6jnst.png" alt="Test Results" width="880" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will not interpret the result for now. You'll get more in-depth feeling and understanding after we systematically discuss the optimization ideas for tnpm rapid mode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-supporting-data"&gt;
  &lt;/a&gt;
  The Supporting Data
&lt;/h3&gt;

&lt;p&gt;Recall the data we gave earlier at the beginning of our analysis about the reasons behind the overall slowdown. The complete datasets are shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UaueePKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcb3izi3lwc7pcnqtxxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UaueePKq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcb3izi3lwc7pcnqtxxy.png" alt="The Supporting Data" width="880" height="332"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We collect the relevant data, without lock or cache, by  &lt;a href="https://strace.io/"&gt;strace&lt;/a&gt; and &lt;a href="https://www.charlesproxy.com/"&gt;charles&lt;/a&gt;. We also counted the corresponding file counts and sizes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the brief interpretation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Number of files: the number of 'flat dependencies' and 'symbolic and hard links' are basically the same. They both reduce the disk footprint significantly. &lt;/li&gt;
&lt;li&gt;Disk IO: an important indicator, the number of file writes is directly related to the installation speed.&lt;/li&gt;
&lt;li&gt;Network speed: reflects whether the installation process can run as full bandwidth as possible, the greater the better.&lt;/li&gt;
&lt;li&gt;Number of requests: includes the number of tgz downloads and the number of query package information. The number can be approximated as the number of overall modules.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the data, we can see that tnpm is more optimized for both Disk IO and Network IO.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-were-the-optimizations-achieved"&gt;
  &lt;/a&gt;
  How were the optimizations achieved?
&lt;/h2&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#network-io"&gt;
  &lt;/a&gt;
  Network I/O
&lt;/h3&gt;

&lt;p&gt;We only have one goal in optimizing the network I/O: how do we &lt;strong&gt;maximize the network utilization&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YKkQcSo4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vef13iz30ekalgynuov1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKkQcSo4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vef13iz30ekalgynuov1.jpg" alt="Network I/O" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The first optimization comes from '&lt;em&gt;dependencies graph'&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The common practice is using dependencies graph to avoid requesting every package's metadata on the client-side, thus significantly reducing the number of HTTP requests;&lt;/li&gt;
&lt;li&gt;What's special in our approach is that: we generate the dependencies graph on the server-side, with a multi-level caching strategy;&lt;/li&gt;
&lt;li&gt;It's based on &lt;code&gt;@npmcli/arborist&lt;/code&gt;, so it's npm-compatible.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Our experience and philosophy in our enterprise-scale projects are that we do not advocate locking versions locally but only reuse the dependencies graph from the previous phase in the iteration workflows, such as from development environments to test environments (or emergency iterations). (Locking version vs not locking version is a common topic for debates. There is no common consensus. Finding the respective balance based on the enterprise team's situation is generally recommended. We will not discuss it here.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;The second optimization is HTTP request warm-ups&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tgz download process will first visit the registry, and then be redirected 302 to the OSS(&lt;a href="https://www.alibabacloud.com/product/object-storage-service?spm=a3c0i.23458820.2359477120.2.26a77d3fqk39SG"&gt;Alibaba Cloud Object Storage Service&lt;/a&gt;) download address. &lt;/li&gt;
&lt;li&gt;We can improve concurrency by warming up in advance and thus reduce the overall HTTP time consumption.&lt;/li&gt;
&lt;li&gt;It is worth mentioning that we encountered an issue of intermittent DNS &lt;a href="https://unix.stackexchange.com/questions/290987/resolving-hostname-takes-5-seconds"&gt;5 second delay&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;There's no such 302 redirection in the official npm registry. We separated the download traffic from the registry by redirecting them to CDN-cached OSS addresses, which improved the stability of the registry service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;The third optimization is to combine the files:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We found during testing that we could not utilize full bandwidth. Through analysis, we found that: with a huge number of dependency packages, frequent writing small files often leads to file IO bottlenecks. &lt;/li&gt;
&lt;li&gt;Simply extracting tgz files to tar files made it easy to properly merge files when writing to disk, given that tar is an archive file format.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repeated testing showed that combining 1000 tgz files into 40 tarball files is ideal.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The fourth optimization is to use Rust to reimplement the download and decompressing process:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forty concurrent threads were used to download, decompress and merge the original packages into 40 tarball files, all in a streaming manner.(The value comes from repeated testing)&lt;/li&gt;
&lt;li&gt;Rust was used to implement this feature as an experiment. It showed some potential in decompressing files but not enough to let us believe it’s a silver bullet for solving every performance issue. We used neon to bridge the gap between Rust and Node.js,  and planned to rewrite it to napi modules by &lt;a href="https://github.com/napi-rs/napi-rs"&gt;napi-rs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#fuse-technology"&gt;
  &lt;/a&gt;
  FUSE Technology
&lt;/h3&gt;

&lt;p&gt;We believe the original &lt;em&gt;nested directory&lt;/em&gt; approach is better than the &lt;em&gt;flattening&lt;/em&gt; node_modules one. But we don't want the compatibility issues caused by symlinks. How can we hit two birds with one stone?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First, let's introduce a "black technology": FUSE (FileSystem in Userspace).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sounds abstract? Let's think of an analogy that front-end developers are familiar with: using ServiceWorker to refine and customize HTTP Cache-Control Logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Similarly. We can think of FUSE as the file system counterpart of ServiceWorker,  from the perspective of front-end developers. We can take over a directory’s file system operation logic via FUSE.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rL0PkmvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7e0j1nfj44yf9ki1e4k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rL0PkmvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7e0j1nfj44yf9ki1e4k.jpg" alt="FUSE" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As shown above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We implemented the &lt;code&gt;npmfs&lt;/code&gt; as a FUSE daemon on top of &lt;a href="https://github.com/dragonflyoss/image-service"&gt;nydus&lt;/a&gt;, it would mount one directory for one project.&lt;/li&gt;
&lt;li&gt;When the OS needs to read the files in that directory, our daemon process would take care of that.&lt;/li&gt;
&lt;li&gt;The daemon process would look up the dependencies graph to retrieve the corresponding file contents from the global cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this way, we were able to achieve that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All system calls for files and directories would treat this directory as a real directory.&lt;/li&gt;
&lt;li&gt;Files are independent of each other. Modifications made in one file would not result in changes in other projects (unlike the hard-links approach).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;nydus doesn't support macOS at the moment, so we implemented an adapter of nydus to macfuse. We'll open source it when it's ready.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Trivia: &lt;strong&gt;Nydus&lt;/strong&gt; is a Zerg structure in StarCraft, which is used to move units quickly around the map. &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#overlayfs"&gt;
  &lt;/a&gt;
  OverlayFS
&lt;/h3&gt;

&lt;p&gt;We may need to temporarily modify the code inside node_modules during our day-to-day development for debugging. Editing files within a module can inadvertently lead to changes in another module because of how symbolic and hard linking solutions work.&lt;/p&gt;

&lt;p&gt;FUSE supports custom write operations, but the implementation is more verbose. &lt;strong&gt;So we directly use a union mount filesystem &lt;a href="https://en.wikipedia.org/wiki/OverlayFS"&gt;OverlayFS&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OverlayFS can aggregate multiple different mount points into a single directory. &lt;/li&gt;
&lt;li&gt;A common scenario is to overlay a read-write layer on top of a read-only layer to enable the read-write layer.&lt;/li&gt;
&lt;li&gt;This is how Docker images are implemented, where the layers in the image can be reused in different containers without affecting each other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hQyRPDhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68198m126q64y6jr04ya.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hQyRPDhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68198m126q64y6jr04ya.jpg" alt="OverlayFS" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we further implement:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using the FUSE directory as the Lower Dir of OverlayFS, we construct a read-write filesystem and mount it as the &lt;em&gt;node_modules&lt;/em&gt; directory of the application. &lt;/li&gt;
&lt;li&gt;Using its COW (copy-on-write) feature, we can reuse the underlying files to save space and support independent file modifications, isolate different applications to avoid interference, and reuse one copy of the global cache independently.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#file-io"&gt;
  &lt;/a&gt;
  File I/O
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Next, let's talk about the global cache.&lt;/strong&gt; There are two main options in the industry:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npm&lt;/code&gt;: Unpack tgz into tar as a global cache, and unpack it into node_modules when installing dependencies again. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pnpm&lt;/code&gt;: Unpack tgz into files, and cache them globally as hash, so that different versions of the same package can share the same file, and hard link it directly when installing again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What they both have in common is that at some point, the tgz files would be decompressed to standalone files and written to the disk. As we mentioned above, huge amount of small files generated by decompression can cause a huge amount of I/O operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One day, it occurs to us that, maybe we can just skip decompressing&lt;/strong&gt;? 🤔 🤔 🤔&lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EYAOXKUy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjzbh8km9qkg0ks6n4ey.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EYAOXKUy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjzbh8km9qkg0ks6n4ey.jpg" alt="File I/O" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, we went one step further:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;node_modules&lt;/em&gt; are directly mapped to tar archives via FUSE + dependencies graph, eliminating the need for File I/O operations happened in decompression.&lt;/li&gt;
&lt;li&gt;At the same time, the highly controllable nature of FUSE allows us to easily support both nested directories and flat structures, switching between them on demand. &lt;/li&gt;
&lt;li&gt;Even better: How can we further improve the performance of cloud storage access in the future so that we don't even have to download tgz?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Some other attempts: we tried to use stargz + lz4 instead of tar + gzip, but the benefits were not significant: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stargz has more indexing capabilities than tar. But in fact a separate dependencies graph would serve a similar purpose, and there is no need to package them together.&lt;/li&gt;
&lt;li&gt;lz4 has a huge performance gain over gzip, but we have found that the ROI is not high in our current practice.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#extra-costs"&gt;
  &lt;/a&gt;
  Extra Costs
&lt;/h3&gt;

&lt;p&gt;No solution can be perfect, and there are some extra costs to our solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The first one is the cost of FUSE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We need to be aware of the cross-system compatibility issues. Although there are support libraries for every operating system, it takes time to test their compatibility. &lt;/li&gt;
&lt;li&gt;We need to support privileged containers for scenarios used within the enterprise. &lt;/li&gt;
&lt;li&gt;Community scenarios like CI/CD rely on whether GitHub Actions and Travis support FUSE.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The second one is the maintenance burden of the registry server&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The capability to generate dependencies graph analysis can only be turned on in the private enterprise registry due to server-side resource constraints. &lt;/li&gt;
&lt;li&gt;Public mirror services will fall back to the CLI side to generate a dependencies graph.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;PS: Community's solution, including ours, cannot solve the problem of multiple "require cache" for the same dependency. Maybe it can be solved by ESM Loader but it is beyond our discussion today.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#key-ideas"&gt;
  &lt;/a&gt;
  Key Ideas
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhWXbDAw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0v63n2ev7fmcgh9qgwd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhWXbDAw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0v63n2ev7fmcgh9qgwd.jpg" alt="TNPM Summary" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In conclusion, the core advantages of our solution are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Network I/O

&lt;ul&gt;
&lt;li&gt;Skipping the metadata requests by using server-generated dependencies graph. This saves &lt;code&gt;Number of packages * Metadata request duration&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The performance gain from using Rust language, and increased concurrency due to download process optimization.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;File I/O

&lt;ul&gt;
&lt;li&gt;Reducing disk writes by storing the combined tar files. This saves &lt;code&gt;(Number of packages - 40) * Disk operation duration&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Reducing disk writes by not unpacking files but using FUSE mounting instead in the projects. This saves &lt;code&gt;(Number of files + Number of directories + Number of symlinks and hard links) * Disk operation duration&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Compatibility

&lt;ul&gt;
&lt;li&gt;Standard Node.js directory structure. No symlinks, no issues caused by flattening &lt;em&gt;node_modules.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;tnpm is not only a local command-line interface, but also a remote registry service that allows deeper optimization compare to other package managers.&lt;br&gt;
​&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The difference between &lt;a href="https://en.wikipedia.org/wiki/Black_magic"&gt;black magic&lt;/a&gt; and&lt;a href="https://fullmetalpanic.fandom.com/wiki/Black_Technology"&gt; black technology&lt;/a&gt; is that the former is a pile of "&lt;a href="https://knowyourmeme.com/memes/this-is-fine"&gt;this-is-fine&lt;/a&gt;" dirty hacks to achieve the goal, while the latter is a cross-disciplinary juggernaut to solve challenges once and for all.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-interpretation"&gt;
  &lt;/a&gt;
  Data Interpretation
&lt;/h3&gt;

&lt;p&gt;From the above analysis, one might already fully understand the optimization idea of tnpm rapid mode. Now let's go back and interpret the data of the previous test results.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: 'tnpm rapid mode' is still under small-scale testing, and improvement is expected in future iterations. So the test data is for reference only.&lt;br&gt;
Also, yarn in the table is slower than &lt;a href="mailto:npm@8"&gt;npm@8&lt;/a&gt;. We don't know why for now, but we've tested it many times with pnpm benchmark, and the same results kept showing up.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X8mdijbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/260pmav56c2gu9ygc3ty.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X8mdijbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/260pmav56c2gu9ygc3ty.png" alt="Test Data" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are the brief interpretations:&lt;/p&gt;

&lt;p&gt;(1) The time taken to generate the dependencies graph.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The difference between test 1 and test 5 is the time taken by the corresponding package manager. &lt;/li&gt;
&lt;li&gt;pnpm analyzes the graph by client-side HTTP request, which is about 4 seconds or so (querying package information and downloading are parallel). &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tnpm analyzes the graph by server-side calculation, which currently takes 5 seconds. (when hitting remote cache, this should cost less than 1 second).&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The speed is the same now, but since tnpm has less network latency than pnpm, we still need to optimize this in the future.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the enterprise scenario, the dependency modules are relatively convergent, so most of the time,  the first test of tnpm should take 5 seconds in case of hitting the cache(the dependencies graph generation of tnpm has a caching mechanism).&lt;/p&gt;

&lt;p&gt;(2) File I/O overhead&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Test 5 is closer to CI/CD scenarios which have dependencies graph + no global cache. &lt;/li&gt;
&lt;li&gt;The primary time consumption observed was from tgz download time + File IO time. As the tgz download time was alike, the time gap was mainly from file IO. &lt;/li&gt;
&lt;li&gt;What we concluded from the data is that &lt;strong&gt;tnpm is 4 seconds faster than pnpm. FUSE helped save the decompress + file write time, as well as the TAR merge time.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(3) Local development&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Both dependencies graph and global cache are made available for local development.&lt;/li&gt;
&lt;li&gt;This corresponds to Test 2 (dependency is not new, second development), Test 3 (second development, reinstallation of dependencies) and Test 4 (first development of new application). &lt;/li&gt;
&lt;li&gt;In principle, time used = dependencies graph update + writing to node_modules file + few package downloads and updates. &lt;/li&gt;
&lt;li&gt;Since tnpm is still under development, we couldn't test it this time, but from the above formula analysis, tnpm has IO advantage over pnpm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To summarize: the speed advantage of tnpm over pnpm is 5 seconds for dependencies graph + 4 seconds for FUSE free decompression.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#future-planning"&gt;
  &lt;/a&gt;
  Future planning
&lt;/h2&gt;

&lt;p&gt;Front-end package management has been developing for nearly a decade. Npm was once the trailblazer who kept innovating and advancing this area. However, the advancement was somewhat stagnated after npm won against all the other alternatives like bower. Soon after, Yarn became the challenger and rejuvenated the overall competition, pushing further innovation on npm. Pnpm raised from the new challenge and led the innovation again.&lt;/p&gt;

&lt;p&gt;We believe that for front-end dependency optimization and governance, there is still a long way to go. We hope to continue strengthening cooperation with our domestic and international colleagues to keep pushing the advancement of package managers together.&lt;/p&gt;

&lt;p&gt;Therefore, our subsequent plan is to give our experience gathered from enterprise-level private deployment and governance back to the community as much as we can.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Currently &lt;a href="https://github.com/cnpm/cnpmcore"&gt;cnpm/npmcore&lt;/a&gt; is under refactoring to better support private deployments. (We sincerely welcome contributions from the open source community to further expedite this effort.)&lt;/li&gt;
&lt;li&gt;After the tnpm rapid model is refined, we will open-source the corresponding capabilities, as well as the npmfs suite. Unfortunately, there's currently no way for the community to experience it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the meantime, it would be highly beneficial for the community if we could work together to standardize the front-end package management:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We need a standard like ECMAScript to regulate the behavior of each package manager.&lt;/li&gt;
&lt;li&gt;We need a conformance test suite like "Test262".&lt;/li&gt;
&lt;li&gt;We should accelerate the transition from CommonJS to ES modules.&lt;/li&gt;
&lt;li&gt;We should find a way to fully resolve the chaotic situation resulting from the deltas among different dependency scenarios of frontend and Node.js.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;

&lt;p&gt;I'm TZ(&lt;a href="https://github.com/atian25"&gt;atian25&lt;/a&gt;), currently work for Ant Group, mainly focused on building and optimizing front-end Node.js infrastructure. I love open-source and am the main maintainer of &lt;a href="https://github.com/eggjs"&gt;eggjs&lt;/a&gt;, &lt;a href="https://github.com/cnpm"&gt;cnpm&lt;/a&gt;.&lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;Node.js is an indispensable infrastructure in the field of front-end. Maybe the future changes of front-end would make all existing engineering problems irrelevant. Nonetheless, no matter what will happen, I just hope that I can seriously record what I see and think in this field. I'd like to exchange ideas with colleagues who are experiencing the evolution of the current "front-end industrialization" and are equally troubled by it. &lt;br&gt;
​&lt;/p&gt;

&lt;p&gt;In the enterprise application scenario, optimization of front-end build execution speed is a system engineering challenge. Dependency resolution and installation is only one of the many challenges we are facing. The opportunities are abundant. We are continuously looking for talented engineers to join us, and keep pushing the innovation forward. We look forward to hearing from you. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>npm</category>
    </item>
  </channel>
</rss>
