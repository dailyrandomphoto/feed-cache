<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What if Stripe was the next Google?</title>
      <author>swyx</author>
      <pubDate>Fri, 14 May 2021 14:54:25 +0000</pubDate>
      <link>https://dev.to/swyx/what-if-stripe-was-the-next-google-g9d</link>
      <guid>https://dev.to/swyx/what-if-stripe-was-the-next-google-g9d</guid>
      <description>&lt;p&gt;A while ago, Paul Graham made a big call:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I'm going to risk calling it. The feeling of deja vu is too strong. Stripe is the next Google." (&lt;a href="https://twitter.com/paulg/status/1314948607662010374"&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At the time, Stripe had last raised at a &lt;a href="https://www.cnbc.com/2020/04/16/stripe-raises-600-million-funding-round-at-36-billion-valuation.html"&gt;$36 billion valuation&lt;/a&gt; - a later, it was making headlines at &lt;a href="https://www.cnbc.com/2021/03/14/stripe-valued-at-95-billion-in-600-million-funding-round.html"&gt;$95 billion&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This would be a lifetime peak valuation for most exited startups (Uber changed transportation and Airbnb changed hotels, and both are currently worth $80b), so what Paul was really doing here is making an active prediction that the ceiling for Stripe is &lt;em&gt;much higher&lt;/em&gt;. Google is valued at $1500 billion at time of writing — and Paul thinks they will "probably" be bigger ("&lt;a href="https://twitter.com/paulg/status/1314951673203359756?s=20"&gt;There is more money in money than search&lt;/a&gt;").&lt;/p&gt;

&lt;p&gt;It isn't a given by any means (though Paul has had a &lt;a href="https://twitter.com/paulg/status/1391865950769659907"&gt;decent streak in calls&lt;/a&gt; lately). Stripe does face competition in established payment processors, as well as Adyen, though momentum &lt;a href="https://twitter.com/GergelyOrosz/status/1352188920025522177"&gt;appears weak&lt;/a&gt;. You could handicap its odds of being "the next Google" at, say, a fairly conservative 50%.&lt;/p&gt;

&lt;p&gt;That means &lt;strong&gt;the expected return of betting on Stripe for the next decade is ~10x&lt;/strong&gt; (it's more like 8x, but who's counting). You don't get this fat a pitch in this league.&lt;/p&gt;

&lt;p&gt;So given that you have a &lt;a href="https://www.anthonyjcampbell.com/blog/optimism"&gt;definite optimist&lt;/a&gt; approach to the future, what do you do with this information?&lt;/p&gt;

&lt;p&gt;I think about this question a lot. The simple first order answer, of course, is to join Stripe. Most engineers will be millionaires 10x-ing on option grants.&lt;/p&gt;

&lt;p&gt;But that may not even be the best use of time for you. Stripe aims to be a &lt;a href="https://stratechery.com/2020/stripe-platform-of-platforms/"&gt;platform of platforms&lt;/a&gt;. The &lt;a href="https://twitter.com/swyx/status/1360729115372920832"&gt;Mullenweg-Gates Line&lt;/a&gt; notes that effective platforms capture only about 5% of the total value they create. There's approximately $14 trillion ((EV of 800b - Current Valuation 100b)/5%) in value of platform to be built atop Stripe.&lt;/p&gt;

&lt;p&gt;Stripe currently lists 10 products on its home page, from the classic Payments and Billing to the newer Atlas and Climate. The vast majority of developers have only a narrow view of Stripe's world. I would explore ways to explore and exploit the capabilities opened up by Stripe's newer products — in particular the recently launched &lt;a href="https://stripe.com/capital"&gt;Capital&lt;/a&gt; and &lt;a href="https://stripe.com/treasury"&gt;Treasury&lt;/a&gt; services.&lt;/p&gt;

&lt;p&gt;You could also become a domain expert in &lt;em&gt;optimizing for Stripe&lt;/em&gt;. Platforms tend to reward this behavior greatly. There is no Stripe podcast. No Stripe newsletter. No "Stripe Enterprise Optimization" cottage industry. The room for the "&lt;a href="https://en.wikipedia.org/wiki/Danny_Sullivan_(technologist)"&gt;Danny Sullivan&lt;/a&gt; of Stripe" exists.&lt;/p&gt;

&lt;p&gt;There's also the challenger status - figure out what Stripe is philosophically prevented from doing, and &lt;a href="https://jppandith.substack.com/p/33-counter-positioning-3rd-of-the"&gt;counter-position&lt;/a&gt; in that exact thing. &lt;a href="https://duckduckgo.com/traffic"&gt;DuckDuckGo is growing &amp;gt;50% a year&lt;/a&gt; being the credible anti-Google. The obvious angle here is that Stripe is very traditional-economy oriented (with &lt;a href="https://news.ycombinator.com/item?id=24291790"&gt;attendant frustrations&lt;/a&gt;): what is the decentralized, permissionless, equivalent of Stripe? The reason I don't love this as much is it feels like too much of a "bank shot", but surely there's a few billion of value in here for the patient and ideologically committed.&lt;/p&gt;

&lt;p&gt;What else?&lt;/p&gt;

</description>
      <category>reflections</category>
    </item>
    <item>
      <title>Heart diseases prediction app creation using cloud platforms &amp; MLOps tools</title>
      <author>Sachin Kumar</author>
      <pubDate>Fri, 14 May 2021 14:15:42 +0000</pubDate>
      <link>https://dev.to/hackcoderr/heart-diseases-prediction-app-creation-using-cloud-platforms-mlops-tools-15gp</link>
      <guid>https://dev.to/hackcoderr/heart-diseases-prediction-app-creation-using-cloud-platforms-mlops-tools-15gp</guid>
      <description>&lt;p&gt;Welcome back to my another projet based staff. Here I am going to discuss all this project from the very beginning to the end. So Hopefully, you will really enjoy it. So let's get started.&lt;/p&gt;

&lt;p&gt;As it's clear from the name &lt;strong&gt;Heart diseases prediction app creation using cloud platforms &amp;amp; MLOps tools&lt;/strong&gt;, I am going to create a health-related application with an industry approach. So let's see step by step all my activities for deploying this project in the production environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#required-knowledge"&gt;
  &lt;/a&gt;
  Required knowledge
&lt;/h2&gt;

&lt;p&gt;To create this project, having good knowledge of the following tools and platforms is a prerequisite.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;li&gt;Cloud Platforms

&lt;ul&gt;
&lt;li&gt;Amazon Web Services (AWS)&lt;/li&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Ansible&lt;/li&gt;
&lt;li&gt;Kubernetes&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Git and Github&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;these all tools and platforms will help us how we can automate this project. So let's see the usages of all mentioned staff one by one and why we are using them here. So let's started with terraform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#terraform"&gt;
  &lt;/a&gt;
  Terraform
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; is an open-source infrastructure as a code software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies cloud APIs into declarative configuration files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-im-using-terraform-here"&gt;
  &lt;/a&gt;
  Why I'm using Terraform here.
&lt;/h3&gt;

&lt;p&gt;As it's mentioned in the above introduction of &lt;em&gt;Terraform&lt;/em&gt; that we use this to manage the cloud services So I want to use some cloud platforms (AWS, Azure, and GCP) here so that I can create the below-mentioned reproducible infrastructure.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--723wsJZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s37k5nv4xqs2m4yxjbd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--723wsJZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s37k5nv4xqs2m4yxjbd2.png" alt="Terraform  infrastructure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now it's time to install the terraform. So let see its installation.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-terraform"&gt;
  &lt;/a&gt;
  Install terraform.
&lt;/h3&gt;

&lt;p&gt;If you're using Linux os as terraform workstation then run the below commands otherwise go with the mentioned link and install terraform according to your OS.&lt;br&gt;
&lt;a href="https://www.terraform.io/downloads.html"&gt;https://www.terraform.io/downloads.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo yum install wget -y
sudo wget https://releases.hashicorp.com/terraform/0.15.3/terraform_0.15.3_linux_amd64.zip 
sudo yum install unzip -y
sudo unzip terraform_0.15.3_linux_amd64.zip 
sudo mv terraform /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now check to terraform version with &lt;code&gt;terraform -version&lt;/code&gt; command.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKb6Ywoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ii1264fa9h3ldzffei1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKb6Ywoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ii1264fa9h3ldzffei1l.png" alt="terraform -version"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚠️ Hopefully now it's clear what I am going to do with the help of Terraform as it's clearly mentioned in the above diagram. I'm going to use 2 cloud platforms (AWS and Azure). So let start with AWS Cloud then I will go with Azure.&lt;/p&gt;

&lt;p&gt;Before going onward, let me create a workspace where I will save all the things related to this project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iPzKibuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ityumun4ssxlnk14xe3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iPzKibuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ityumun4ssxlnk14xe3k.png" alt="workspace"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#amazon-web-services-aws"&gt;
  &lt;/a&gt;
  Amazon Web Services (AWS)
&lt;/h1&gt;

&lt;p&gt;Amazon web service is an online platform that provides scalable and cost-effective cloud computing solutions. It is a broadly adopted cloud platform that offers several on-demand operations like compute power, database storage, content delivery, etc., to help corporates scale and grow.&lt;/p&gt;

&lt;p&gt;But if you want to more about it then visit the below link.&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Amazon_Web_Services"&gt;https://en.wikipedia.org/wiki/Amazon_Web_Services&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#aws-iam"&gt;
  &lt;/a&gt;
  AWS IAM
&lt;/h2&gt;

&lt;p&gt;AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS resources. You use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources.&lt;/p&gt;

&lt;p&gt;Now we will need &lt;code&gt;access key&lt;/code&gt; and &lt;code&gt;secret key&lt;/code&gt; for creating VPC and launch AWS instances by terraform tool that why we have to create &lt;strong&gt;AWS IAM User&lt;/strong&gt; with &lt;code&gt;AmazonVPCFullAccess&lt;/code&gt; and &lt;code&gt;AmazonEC2FullAccess&lt;/code&gt;. So download your IAM credential file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FoQfibZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k06uaahwv0oztqjkos59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FoQfibZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k06uaahwv0oztqjkos59.png" alt="AWS IAM"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-aws-cli"&gt;
  &lt;/a&gt;
  Install AWS CLI
&lt;/h3&gt;

&lt;p&gt;Now install AWS CLI in your terraform workstation that will help to create making AWS profile and other staff. So if you are using linux then run the below commands and for others os visit the mentioned link.&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-aws-profile"&gt;
  &lt;/a&gt;
  Creating AWS Profile
&lt;/h3&gt;

&lt;p&gt;Now you can easily make an AWS CLI profile which we will use in &lt;code&gt;aws.tf&lt;/code&gt; file as a profile. So let's see.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all log in with AWS CLI.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws configure
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;After running the above command, give your &lt;code&gt;access key&lt;/code&gt; &amp;amp; &lt;code&gt;secret key&lt;/code&gt; which you downloaded during the creating &lt;strong&gt;AWS IAM User&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nRcdgN2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/984ec7wjbdv082nsoojg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nRcdgN2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/984ec7wjbdv082nsoojg.png" alt="aws configure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now run the below command to make your profile and the same is here, give your access and secret key.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws configure --profile profilename
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1Ek5y5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbbtvxpj91ste4oocdxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1Ek5y5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbbtvxpj91ste4oocdxc.png" alt="aws profile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚠️ Also, you can check your profile with the help of the below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws configure --list-profiles
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now time is to move towards terraform code so make your workspace.&lt;br&gt;
Note: I am following mentioned workspace for terraform staff for easy understanding so you also can follow this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/root/hdp-project/terraform/aws/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;So create &lt;code&gt;aws.tf&lt;/code&gt; file inside above mentioned and write the below code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;provider "aws" {
  region = "ap-south-1"
  profile = "hackcoderr"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can set any &lt;code&gt;region&lt;/code&gt; at the place &lt;code&gt;ap-south-1&lt;/code&gt; according to your need and give your profile name instead of my profile &lt;code&gt;hakcoderr&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initializing-terraform-code"&gt;
  &lt;/a&gt;
  Initializing terraform code
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;terraform init&lt;/code&gt; command is used to initialize a working directory containing Terraform configuration files. This is the first command that should be run after writing a new Terraform configuration or cloning an existing one from version control. It is safe to run this command multiple times. You can initialize using &lt;code&gt;terraform init&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-Mm6GIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hs1tmttqc7h73e79nrp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-Mm6GIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hs1tmttqc7h73e79nrp.png" alt="terraform-init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-amazon-vpc"&gt;
  &lt;/a&gt;
  Creating Amazon VPC
&lt;/h3&gt;

&lt;p&gt;Amazon Virtual Private Cloud (Amazon VPC) enables you to launch AWS resources into a virtual network that you’ve defined. This virtual network closely resembles a traditional network that you’d operate in your own data center, with the benefits of using the scalable infrastructure of AWS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_vpc" "vpc" {
  cidr_block       = "192.168.0.0/16"
  instance_tenancy = "default"
  enable_dns_support   = "true"
  enable_dns_hostnames = "true"
  tags = {
    Name = "aws-heart-disease-predictor-vpc"
    Environment = "Production"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, you can choose Classless Inter-Domain Routing &lt;strong&gt;(CIDR)&lt;/strong&gt; block range according to your desired and if you don't want to &lt;strong&gt;DNS&lt;/strong&gt; support then you can write &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;enable_dns_support&lt;/code&gt;. and give any &lt;code&gt;tag&lt;/code&gt; as you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--frXmIxp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojyuseglxaya894ht3f9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frXmIxp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojyuseglxaya894ht3f9.png" alt="AWS VPC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-subnet"&gt;
  &lt;/a&gt;
  Creating subnet
&lt;/h3&gt;

&lt;p&gt;Subnetwork or subnet is a logical subdivision of an IP network. The practice of dividing a network into two or more networks is called subnetting. AWS provides two types of subnetting one is Public which allows the internet to access the machine and another is private which is hidden from the internet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_subnet" "subnet-1a" {
  vpc_id     = aws_vpc.vpc.id
  cidr_block = "192.168.0.0/24"
  availability_zone = "ap-south-1a"
  map_public_ip_on_launch = "true"

  tags = {
    Name = "aws-heart-disease-predictor-sunbet"
    Environment = "Production"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;CIDR&lt;/code&gt; range should be under your &lt;strong&gt;VPC CIDR&lt;/strong&gt; range otherwise it doesn't work and &lt;code&gt;map_public_ip_on_launch&lt;/code&gt; is used to assign public IP to instance after launching, choose any &lt;code&gt;availability_zone&lt;/code&gt; available your selected &lt;code&gt;region&lt;/code&gt;. You can give tags for easy recognition after creating subnets.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3cmdLVVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zir7lz04482x878t4ie2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3cmdLVVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zir7lz04482x878t4ie2.png" alt="AWS subnet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-internet-gateway"&gt;
  &lt;/a&gt;
  Creating Internet Gateway
&lt;/h3&gt;

&lt;p&gt;An internet gateway serves two purposes: to provide a target in your VPC route tables for internet-routable traffic and to perform network address translation (NAT) for instances that have been assigned public IPv4 addresses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.vpc.id

  tags = {
    Name = "aws-heart-disease-predictor-internet-gateway"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the above code will create your respective internet gateway. you need to specify on which VPC you want to create an internet gateway. Also, you can give a name using a tag block.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--evlyxJ_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odkofru6ov119mm5qidg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evlyxJ_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odkofru6ov119mm5qidg.png" alt="internet gateway"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-route-table"&gt;
  &lt;/a&gt;
  Creating route table
&lt;/h3&gt;

&lt;p&gt;A routing table contains a set of rules, called routes, that are used to determine where network traffic from your subnet or gateway is directed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_route_table" "route_table" {
  vpc_id = aws_vpc.vpc.id

  route {

gateway_id = aws_internet_gateway.gw.id
    cidr_block = "0.0.0.0/0"
  }

    tags = {
    Name = "aws-heart-disease-predictor-route-table"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to create a routing table for the internet gateway you have created above. Here, I am allowing all the IP rage. So my ec2 instances can connect to the internet world. we need to give the vpc_id so that we can easily allocate the routing table to the respective VPC. You can specify the name of the routing table using a tag block.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TR6g2F16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97k3npq2td2unofqt2fs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TR6g2F16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97k3npq2td2unofqt2fs.png" alt="Route table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#route-table-association-to-subnets"&gt;
  &lt;/a&gt;
  Route Table Association To Subnets
&lt;/h3&gt;

&lt;p&gt;We need to connect the routing table created for internet gateways to the respective subnets inside the vpc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Route Table Association
resource "aws_route_table_association" "route-association" {
  subnet_id      = aws_subnet.subnet-1a.id
  route_table_id = aws_route_table.route_table.id
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to specify which subnets you want to take to the public world. As if the subnets get associated(connected) to the Internet Gateway it will be a public subnet. But if you don’t associate subnets to the Internet gateway routing table then it will be known as private subnets. The instances which are launched in the private subnet are not able to connect from outside as it will not having public IP, also it will not be connected to the Internet Gateway. You need to specify the routing table for the association of the subnets. If you don’t specify the routing table in the above association block then the subnet will take the vpc’s route table. So if you want to take the ec2 instances to the public world then you need to specify the router in the above association block. It's upon you which IP range you want your ec2 instances to connect. Here I have to give 0.0.0.0/0 means I can access anything from the ec2 instances.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-security-group"&gt;
  &lt;/a&gt;
  Creating Security Group
&lt;/h3&gt;

&lt;p&gt;A security group acts as a virtual firewall for your EC2 instances to control incoming and outgoing traffic. If you don’t specify a security group, Amazon EC2 uses the default security group. You can add rules to each security group that allows traffic to or from its associated instances.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_security_group" "SG" {
  name = "Heart-SG"
  vpc_id = "${aws_vpc.vpc.id}"
  ingress {
      from_port   = 0
      to_port     = 0
      protocol    = "-1"
      cidr_blocks = ["0.0.0.0/0"]
  }

 egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags ={
    Environment = "Production"
    Name= "aws-heart-disease-predictor-SG"
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above will create a security group that works as a firewall. So which type of traffic want to &lt;code&gt;engress&lt;/code&gt;&amp;amp; &lt;code&gt;ingress&lt;/code&gt; you can set here. But I want to all types of traffic SO  here I have given &lt;code&gt;all traffic&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; means all. &lt;code&gt;from_port= 0&lt;/code&gt; &lt;code&gt;to_port=0&lt;/code&gt; &lt;code&gt;(0.0.0.0)&lt;/code&gt; that means we have disabled the firewall and(0.0.0.0/0) means all traffic I can able to access from this outbound rule. You can give the name of the respective Security Group.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9r57hKKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj8fvzp5oc8upv94xcgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9r57hKKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj8fvzp5oc8upv94xcgm.png" alt="aws sg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-code-for-aws-instances"&gt;
  &lt;/a&gt;
  Creating code for AWS Instances
&lt;/h3&gt;

&lt;p&gt;An EC2 instance is nothing but a virtual server in Amazon Web services terminology. It stands for Elastic Compute Cloud. It is a web service where an AWS subscriber can request and provision a compute server in the AWS cloud. AWS provides multiple instance types for the respective business needs of the user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_instance" "AWS-HDP-instance" {
  ami    = "ami-0a9d27a9f4f5c0efc"
  count  = "3"
  instance_type = "t2.micro"
  subnet_id = "${aws_subnet.subnet-1a.id}"
  vpc_security_group_ids = ["${aws_security_group.SG.id}"]
  key_name = "key"
 tags ={
    Environment = "Production"
    Name= "AWS-HDP-Instance"
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above will launch EC2 instance so &lt;code&gt;ami&lt;/code&gt; &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;instance_type&lt;/code&gt; you can choose according to your desired and write &lt;code&gt;tags&lt;/code&gt; as you want. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to see complete code at a time then go through my git repo.&lt;br&gt;
&lt;a href="https://github.com/hackcoderr/heart-diseases-predictor/blob/master/terraform/aws/aws.tf"&gt;https://github.com/hackcoderr/heart-diseases-predictor/blob/master/terraform/aws/aws.tf&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#microsoft-azure"&gt;
  &lt;/a&gt;
  Microsoft Azure
&lt;/h1&gt;

&lt;p&gt;It's also a public cloud provider and provides resources and services as AWS provides. So hopefully, you have an idea about it otherwise you want to more about it then visit mentioned link. &lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Microsoft_Azure"&gt;https://en.wikipedia.org/wiki/Microsoft_Azure&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-azure-cli"&gt;
  &lt;/a&gt;
  Install Azure CLI
&lt;/h3&gt;

&lt;p&gt;Here, we have to also install Azure CLI for the Azure profile So that run the terraform code for azure. So If you're using RHEL, CentOS, or Fedora as a linux then run the below commands otherwise follow this &lt;a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"&gt;link&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
echo -e "[azure-cli]
name=Azure CLI
baseurl=https://packages.microsoft.com/yumrepos/azure-cli
enabled=1
gpgcheck=1
gpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/azure-cli.repo
sudo dnf install azure-cli -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's check the Azure CLI version just for confirmation.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZDm_ZrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1hnuq67fsnv20lmpdd8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZDm_ZrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1hnuq67fsnv20lmpdd8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#login-with-azure-through-cli"&gt;
  &lt;/a&gt;
  Login with Azure through CLI
&lt;/h3&gt;

&lt;p&gt;When we will work terraform, we have to provide the azure credentials for the Azure profile so that we can login with azure. so there are many ways to login with it and Azure CLI is one of them that I am going to use. So let's move ahead and login.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;az login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kgu3T65C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsifhg2y4g9ra7ppy4yv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kgu3T65C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsifhg2y4g9ra7ppy4yv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
As you will type the above command, yellow-colored instructions will come up. So browse the given URL that I have underlined with red color. After it, a window will pop up and give the given Code. Now you can see your azure credentials on your CLI. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you get more than one subscription id then you can simply select one id with the below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;az account set --subscription "My Demos"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now time is to move towards writing the terraform code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-the-microsoft-azure-provider"&gt;
  &lt;/a&gt;
  Configure the Microsoft Azure Provider
&lt;/h3&gt;

&lt;p&gt;The provider section tells Terraform to use an Azure provider. It will use your azure credentials like &lt;code&gt;subscription_id&lt;/code&gt;, &lt;code&gt;client_id&lt;/code&gt;, &lt;code&gt;client_secret&lt;/code&gt;, and &lt;code&gt;tenant_id&lt;/code&gt; behind the scene.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;provider "azurerm" {
    features {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-resource-group"&gt;
  &lt;/a&gt;
  Create a resource group
&lt;/h3&gt;

&lt;p&gt;A resource group is a container that holds related resources for an Azure solution. The resource group can include all the resources for the solution, or only those resources that you want to manage as a group.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_resource_group" "hdp-rg" {
    name     = "Azure-HDP-ResourceGroup"
    location = "Central India"

    tags = {
        Name = "Azure-HDP-RG"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a resource group named &lt;code&gt;Azure-HDP-ResourceGroup&lt;/code&gt; in the &lt;code&gt;Central India&lt;/code&gt; location. But these things you can manage according to your desire.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ekn43MTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fql45jzbdwyju7uub0pl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekn43MTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fql45jzbdwyju7uub0pl.png" alt="hdp-rg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-virtual-network"&gt;
  &lt;/a&gt;
  Create a virtual network
&lt;/h3&gt;

&lt;p&gt;It has the same concept as AWS VPC so let understand the template code for it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_virtual_network" "hdp-vnet" {
    name                = "Azure-HDP-Vnet"
    address_space       = ["192.168.0.0/16"]
    location            = azurerm_resource_group.hdp-rg.location
    resource_group_name = azurerm_resource_group.hdp-rg.name

    tags = {
        Name = "Azure-HDP-VNet"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a virtual network named &lt;code&gt;Azure-HDP-Vnet&lt;/code&gt; in the &lt;code&gt;192.168.0.0/16&lt;/code&gt; address space.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4e26zhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmmg5xvy60otmojxptt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4e26zhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmmg5xvy60otmojxptt4.png" alt="VNet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-subnet"&gt;
  &lt;/a&gt;
  Create subnet
&lt;/h3&gt;

&lt;p&gt;It also works as AWS Subnet so let's see code directly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_subnet" "hdp-subnet" {
    name                 = "Azure-HDP-Subnet"
    resource_group_name  = azurerm_resource_group.hdp-rg.name
    virtual_network_name = azurerm_virtual_network.hdp-vnet.name
    address_prefixes       = ["192.168.0.0/24"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a subnet named &lt;code&gt;Azure-HDP-Subnet&lt;/code&gt; in the &lt;code&gt;Azure-HDP-Vnet&lt;/code&gt; virtual network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uCQavjkd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q98puxfomtvly55goxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uCQavjkd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q98puxfomtvly55goxi.png" alt="azure-subnet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-public-ip-address"&gt;
  &lt;/a&gt;
  Create public IP address
&lt;/h3&gt;

&lt;p&gt;To access resources across the Internet, create and assign a public IP address to your VM. So I'm going to 3 VM's that's why I will need 3 Public IPs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_public_ip" "hdp-publicip-1" {
    name                         = "Azure-HDP-PublicIP-1"
    location                     = azurerm_resource_group.hdp-rg.location
    resource_group_name          = azurerm_resource_group.hdp-rg.name
    allocation_method            = "Dynamic"

    tags = {
        Name = "HDP-Public-IP-1"
        environment = "Production"
    }
}

resource "azurerm_public_ip" "hdp-publicip-2" {
    name                         = "Azure-HDP-PublicIP-2"
    location                     = azurerm_resource_group.hdp-rg.location
    resource_group_name          = azurerm_resource_group.hdp-rg.name
    allocation_method            = "Dynamic"

    tags = {
        Name = "HDP-Public-IP-2"
        environment = "Production"
    }
}

resource "azurerm_public_ip" "hdp-publicip-3" {
    name                         = "Azure-HDP-PublicIP-3"
    location                     = azurerm_resource_group.hdp-rg.location
    resource_group_name          = azurerm_resource_group.hdp-rg.name
    allocation_method            = "Dynamic"

    tags = {
        Name = "HDP-Public-IP-3"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates 3 public IP address named &lt;code&gt;Azure-HDP-PublicIP-1&lt;/code&gt; and so on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-network-security-group"&gt;
  &lt;/a&gt;
  Create Network Security Group
&lt;/h3&gt;

&lt;p&gt;Network Security Groups control the flow of network traffic in and out of your VM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_network_security_group" "hdp-sg" {
    name                = "Azure-HDP-SG"
    location            = azurerm_resource_group.hdp-rg.location
    resource_group_name = azurerm_resource_group.hdp-rg.name

    security_rule {
        name                       = "SSH"
        priority                   = 1001
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "22"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
    }

    tags = {
        Name = "Azure-HDP-SG"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a network security group named &lt;code&gt;Azure-HDP-SG&lt;/code&gt; and defines a rule to allow SSH traffic on &lt;code&gt;TCP port 22&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-virtual-network-interface-card"&gt;
  &lt;/a&gt;
  Create virtual network interface card.
&lt;/h3&gt;

&lt;p&gt;A virtual network interface card (NIC) connects your VM to a given virtual network, public IP address, and network security group.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_network_interface" "hdp-nic-1" {
    name                      = "myNIC-1"
    location                  = azurerm_resource_group.hdp-rg.location
    resource_group_name       = azurerm_resource_group.hdp-rg.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.hdp-subnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.hdp-publicip-1.id
    }

    tags = {
        Name = "HDP-NIC-1"
        Environment = "Production"
    }
}

resource "azurerm_network_interface" "hdp-nic-2" {
    name                      = "myNIC-2"
    location                  = azurerm_resource_group.hdp-rg.location
    resource_group_name       = azurerm_resource_group.hdp-rg.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.hdp-subnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.hdp-publicip-2.id
    }

    tags = {
        Name = "HDP-NIC-2"
        Environment = "Production"
    }
}

resource "azurerm_network_interface" "hdp-nic-3" {
    name                      = "myNIC-3"
    location                  = azurerm_resource_group.hdp-rg.location
    resource_group_name       = azurerm_resource_group.hdp-rg.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.hdp-subnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.hdp-publicip-3.id
    }

    tags = {
        Name = "HDP-NIC-3"
        Environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section in a Terraform template creates 3 virtual NIC named &lt;code&gt;myNIC-1&lt;/code&gt; and so no, connected to the virtual networking resources you've created.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-the-security-group-to-the-network-interface"&gt;
  &lt;/a&gt;
  Connect the security group to the network interface
&lt;/h3&gt;

&lt;p&gt;Now you can connect your nic cards with the security group which you have created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_network_interface_security_group_association" "hdp-nic-sg-1" {
    network_interface_id      = azurerm_network_interface.hdp-nic-1.id
    network_security_group_id = azurerm_network_security_group.hdp-sg.id
}

resource "azurerm_network_interface_security_group_association" "hdp-nic-sg-2" {
    network_interface_id      = azurerm_network_interface.hdp-nic-2.id
    network_security_group_id = azurerm_network_security_group.hdp-sg.id
}

resource "azurerm_network_interface_security_group_association" "hdp-nic-sg-3" {
    network_interface_id      = azurerm_network_interface.hdp-nic-3.id
    network_security_group_id = azurerm_network_security_group.hdp-sg.id
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section in a Terraform template creates 3 security group associations connected to the nic cards you've created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bq7qMHKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyy6wuzs80f20ts9kibx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bq7qMHKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyy6wuzs80f20ts9kibx.png" alt="nic card"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-virtual-machines"&gt;
  &lt;/a&gt;
  Create the virtual machines
&lt;/h3&gt;

&lt;p&gt;The final step is to create  VMs and use all the resources created. So you see here 3 VMs named as &lt;code&gt;az-hdp-vm-1&lt;/code&gt; and so no.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; resource "azurerm_virtual_machine" "main-1" {
  name                  = "az-hdp-vm-1"
  location              = azurerm_resource_group.hdp-rg.location
  resource_group_name   = azurerm_resource_group.hdp-rg.name
  network_interface_ids = [azurerm_network_interface.hdp-nic-1.id]
  vm_size               = "Standard_DS1_v2"
  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "8.1"
    version   = "latest"
  }
  storage_os_disk {
    name              = "hdp-disk-1"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
  os_profile {
    computer_name  = "hostname"
    admin_username = "hdpAdmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }

  tags = {
    Name = "Az-HDP-Slave-1"
    Environment = "Production"
  }
}


resource "azurerm_virtual_machine" "main-2" {
  name                  = "az-hdp-vm-2"
  location              = azurerm_resource_group.hdp-rg.location
  resource_group_name   = azurerm_resource_group.hdp-rg.name
  network_interface_ids = [azurerm_network_interface.hdp-nic-2.id]
  vm_size               = "Standard_DS1_v2"
  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "8.1"
    version   = "latest"
  }
  storage_os_disk {
    name              = "hdp-disk-2"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
  os_profile {
    computer_name  = "hostname"
    admin_username = "hdpAdmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }
  tags = {
    Name = "Az-HDP-Slave-2"
    Environment = "Production"
  }
}


resource "azurerm_virtual_machine" "main-3" {
  name                  = "az-hdp-vm-3"
  location              = azurerm_resource_group.hdp-rg.location
  resource_group_name   = azurerm_resource_group.hdp-rg.name
  network_interface_ids = [azurerm_network_interface.hdp-nic-3.id]
  vm_size               = "Standard_DS1_v2"
  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "8.1"
    version   = "latest"
  }
  storage_os_disk {
    name              = "hdp-disk-3"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
 os_profile {
    computer_name  = "hostname"
    admin_username = "hdpAdmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }
  tags = {
    Name = "Az-HDP-Slave-3"
    Environment = "Production"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates  3 VMs named &lt;code&gt;az-hdp-vm-1&lt;/code&gt; and &lt;code&gt;az-hdp-vm-2&lt;/code&gt; and &lt;code&gt;az-hdp-vm-3&lt;/code&gt; and attaches the virtual NICs named &lt;code&gt;myNIC-1&lt;/code&gt;, &lt;code&gt;myNIC-2&lt;/code&gt; and &lt;code&gt;myNIC-3&lt;/code&gt; respectlly. The latest &lt;code&gt;RHEL 8.1&lt;/code&gt; image is used, and a user named &lt;code&gt;azureuser&lt;/code&gt; is created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2VEHB7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5ugpjr0i52c6wjhy2m2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2VEHB7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5ugpjr0i52c6wjhy2m2.png" alt="azure vm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-and-deploy-the-infrastructure"&gt;
  &lt;/a&gt;
  Build and deploy the infrastructure
&lt;/h3&gt;

&lt;p&gt;With your Terraform template created, the first step is to initialize Terraform. This step ensures that Terraform has all the prerequisites to build your template in Azure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to have Terraform review and validate the template. This step compares the requested resources to the state information saved by Terraform and then outputs the planned execution. The Azure resources aren't created at this point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform plan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you execute the previous command, you should see something like the following screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;write output
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything looks correct and you're ready to build the infrastructure in Azure, apply the template in Terraform.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once Terraform completes, your VM infrastructure is ready.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-machine-learning-model"&gt;
  &lt;/a&gt;
  Creating Machine learning Model:
&lt;/h1&gt;

&lt;p&gt;Here now, we have to create a machine learning model. As the dataset is of classification problem then we have to choose classification algorithms. Here i trained the model with &lt;code&gt;Logistic Regression&lt;/code&gt;, &lt;code&gt;RandomForestClassifier&lt;/code&gt;, &lt;code&gt;DecisionTree Classsifier&lt;/code&gt;, &lt;code&gt;GradientBoostingClassifier&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#logistic-regression"&gt;
  &lt;/a&gt;
  Logistic Regression:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.linear_model import LogisticRegression
lr_model=LogisticRegression()
lr_model.fit(X_train, y_train)
lr_y_model= lr_model.predict(X_test)
lr_y_model
from sklearn.metrics import accuracy_score
print("Logistic Regression Accuracy: ", accuracy_score(y_test, lr_y_model))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Logistic Regression Accuracy:  0.9180327868852459/opt/conda/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#randomforestclassifier"&gt;
  &lt;/a&gt;
  RandomForestClassifier:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.ensemble import RandomForestClassifier
rfc_model = RandomForestClassifier(n_estimators=10000, max_depth=100)
rfc_model
rfc_model.fit(X_train, y_train)
rfc_y_pred = rfc_model.predict(X_test)
rfc_y_pred
from sklearn.metrics import accuracy_score
print("Random Forest Accuracy: ", accuracy_score(y_test, rfc_y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Random Forest Accuracy: 0.7704918032786885&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#decisiontreeclasssifier"&gt;
  &lt;/a&gt;
  DecisionTreeClasssifier:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.tree import DecisionTreeClassifier
dt_model = DecisionTreeClassifier()
dt_model.fit(X_train, y_train)
dt_y_pred=dt_model.predict(X_test)dt_y_pred
from sklearn.metrics import accuracy_score
print("Decision Tree Accuracy: ", accuracy_score(y_test, dt_y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Decision Tree Accuracy: 0.6721311475409836&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gradientboostingclassifier"&gt;
  &lt;/a&gt;
  GradientBoostingClassifier:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.ensemble import GradientBoostingClassifier
GB_model = GradientBoostingClassifier(n_estimators=1000)
GB_model.fit(X_train, y_train)
y_pred_GB = GB_model.predict(X_test)
y_pred_GB
from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred_GB)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;GradientBoostingClassifer Accuracy: 0.7868852459016393&lt;/code&gt;&lt;br&gt;
From the above model creation and comparision &lt;code&gt;Logistic Regression&lt;/code&gt; is giving much accuracy but i am taking model of &lt;code&gt;Random Forest&lt;/code&gt; and saving it to &lt;code&gt;.h5&lt;/code&gt; extension.&lt;/p&gt;

&lt;p&gt;
     &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRl-S0_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/amit17133129/Heart_Diseases_Prediction_App_Creation_Using_MLOps_Tools/main/Images/2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRl-S0_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/amit17133129/Heart_Diseases_Prediction_App_Creation_Using_MLOps_Tools/main/Images/2.gif"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#saving-randomforestclassifier-model"&gt;
  &lt;/a&gt;
  Saving RandomForestClassifier Model:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import joblib
joblib_file = "RandomForest_Heart_Prediction.h5"
joblib.dump(lr_model, joblib_file)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This above code will create a file named &lt;code&gt;RandomForest_Heart_Prediction.h5&lt;/code&gt; and we have to use this model while create a docker image in which flask we have to install. Below is the code for &lt;code&gt;dockerfile&lt;/code&gt;. &lt;code&gt;Code link&lt;/code&gt;→ &lt;a href="https://colab.research.google.com/drive/1_PkhVlrW5rC45Ehccxloosl2-gYPcklN?usp=sharing"&gt;https://colab.research.google.com/drive/1_PkhVlrW5rC45Ehccxloosl2-gYPcklN?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can watch below video to for refernce for creating Machine learning model. &lt;a href="https://youtu.be/Du9mFr226I4"&gt;https://youtu.be/Du9mFr226I4&lt;/a&gt;&lt;br&gt;
Now we need to build the image using below &lt;code&gt;dockerfile code&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM centos:latestRUN yum install python3  python3-devel   gcc-c++ -y &amp;amp;&amp;amp; \
    python3 -m pip install --upgrade --force-reinstall pip &amp;amp;&amp;amp; \
    yum install sudo -y &amp;amp;&amp;amp; \
    yum install --assumeyes  python3-pip &amp;amp;&amp;amp; \
    pip install keras &amp;amp;&amp;amp; \
    pip install tensorflow --no-cache-dir  tensorflow &amp;amp;&amp;amp; \
    pip install --upgrade pip tensorflow &amp;amp;&amp;amp; \
    pip3 install flask &amp;amp;&amp;amp; \
    pip3 install joblib &amp;amp;&amp;amp; \
    pip3 install sklearn &amp;amp;&amp;amp; \
    mkdir  /heart_app &amp;amp;&amp;amp;  \
    mkdir /heart_app/templatesCOPY  Randorm_Forest_Heart_Prediction.h5    /heart_app
COPY  app.py  /heart_app
COPY  myform.html  /heart_app/templates
COPY  result.html   /heart_app/templates
EXPOSE  4444WORKDIR  /heart_app
CMD export FLASK_APP=app.pyENTRYPOINT flask  run --host=0.0.0.0    --port=4444
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To build the docker image use below command.  &lt;code&gt;docker build -t image_name:version   .&lt;/code&gt; You can watch enlow video for reference &lt;a href="https://youtu.be/bUBOI-5Ya6U"&gt;https://youtu.be/bUBOI-5Ya6U&lt;/a&gt;&lt;br&gt;
Now we need to configure epel repository so that ansible installation would be easy.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#ansible"&gt;
  &lt;/a&gt;
  Ansible
&lt;/h1&gt;

&lt;p&gt;Ansible is an open-source software provisioning, configuration management, and application-deployment tool enabling infrastructure as code.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-ansible"&gt;
  &lt;/a&gt;
  Install Ansible
&lt;/h3&gt;

&lt;p&gt;I'm going to install an ansible setup AWS Instance named &lt;code&gt;ansible-controller-node&lt;/code&gt;  which I have launched before. So run mentioned commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo yum install python3 git -y
git clone https://github.com/hackcoderr/Ansible-Setup.git
cd Ansible-Setup/
python3 script.py
sudo hostnamectl set-hostname ansible-controller
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to know more about it then you can visit my &lt;a href="https://github.com/hackcoderr/Ansible-Setup"&gt;Ansible Steup Repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>devops</category>
      <category>machinelearning</category>
      <category>webdev</category>
    </item>
    <item>
      <title>[Video] Introduction to Git and GitHub Crash Course + Giveaway ⭐</title>
      <author>Bobby Iliev</author>
      <pubDate>Fri, 14 May 2021 14:10:29 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/video-introduction-to-git-and-github-crash-course-giveaway-3jjh</link>
      <guid>https://dev.to/bobbyiliev/video-introduction-to-git-and-github-crash-course-giveaway-3jjh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Hello everybody! Welcome to this Introduction to Git and GitHub video series, where you will learn the basics of Git and start using it for your day-to-day tasks.&lt;/p&gt;

&lt;p&gt;My name is Bobby and I've been working as a Linux system administrator for the past 7 years and a few months ago I wrote an opensource eBook on how to get started with Git and GitHub.&lt;/p&gt;

&lt;p&gt;You can find a link to the GitHub project where you can Download the eBook for free here:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Opensource eBook on how to get started with Git and GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this video series we are going to cover the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to Git&lt;/li&gt;
&lt;li&gt;Version Control&lt;/li&gt;
&lt;li&gt;Basic Shell Commands&lt;/li&gt;
&lt;li&gt;Git Configuration&lt;/li&gt;
&lt;li&gt;Introduction to GitHub&lt;/li&gt;
&lt;li&gt;Initializing a Git project&lt;/li&gt;
&lt;li&gt;Git Status&lt;/li&gt;
&lt;li&gt;Git Add&lt;/li&gt;
&lt;li&gt;Git Commit&lt;/li&gt;
&lt;li&gt;Git Diff&lt;/li&gt;
&lt;li&gt;Git Log&lt;/li&gt;
&lt;li&gt;Gitignore&lt;/li&gt;
&lt;li&gt;SSH Keys&lt;/li&gt;
&lt;li&gt;Git Push&lt;/li&gt;
&lt;li&gt;Git Pull&lt;/li&gt;
&lt;li&gt;Git Branches&lt;/li&gt;
&lt;li&gt;Git Merge&lt;/li&gt;
&lt;li&gt;Reverting changes&lt;/li&gt;
&lt;li&gt;Git Clone&lt;/li&gt;
&lt;li&gt;Forking in Git&lt;/li&gt;
&lt;li&gt;Git Workflow&lt;/li&gt;
&lt;li&gt;Pull Requests&lt;/li&gt;
&lt;li&gt;Wrap up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UpdhourKi3c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#playlist"&gt;
  &lt;/a&gt;
  Playlist
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=UpdhourKi3c&amp;amp;list=PLY7SzAmnEqp7P6KHmBKBVNIjZkXMKh_fn"&gt;Introduction to Git and GitHub video crash course playlist&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  Giveaway
&lt;/h1&gt;

&lt;p&gt;I've got those awesome stickers here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2Uj75y6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jcd2ao7925c258inutip.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2Uj75y6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jcd2ao7925c258inutip.jpg" alt="Free stickers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One way to support me is by clicking the subscribe button! I will send out a sticker to everyone who does so! 🙏&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;As I am very new to the whole video creation process any feedback will be appreciated 🙌&lt;/p&gt;

&lt;p&gt;Useful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;The Introduction to Git and GitHub Opensource eBook&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m.do.co/c/2a9bba940f39%E2%80%8B"&gt;Free $100 Credit For DigitalOcean&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://git.bobby.sh%E2%80%8B"&gt;Website with interactive training&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>linux</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>My Portfolio</title>
      <author>Alonso Diaz</author>
      <pubDate>Fri, 14 May 2021 14:09:58 +0000</pubDate>
      <link>https://dev.to/alonxx/my-portfolio-2i99</link>
      <guid>https://dev.to/alonxx/my-portfolio-2i99</guid>
      <description>&lt;p&gt;Hello! thanks for entering.&lt;/p&gt;

&lt;p&gt;I wanted to share my first version of my portfolio, made with React.js and Styled-Component. I would love if you could give me feedback no matter what it is, to improve it.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.alonsodiaz.dev"&gt;www.alonsodiaz.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtJAV1ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1foi2hz5hcefgzljchq5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtJAV1ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1foi2hz5hcefgzljchq5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>portfolio</category>
      <category>react</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Modern Shopify Themes Development with Nx-Shopify</title>
      <author>Sebastián Duque G</author>
      <pubDate>Fri, 14 May 2021 14:03:18 +0000</pubDate>
      <link>https://dev.to/trafilea/modern-shopify-themes-development-with-nx-shopify-31ho</link>
      <guid>https://dev.to/trafilea/modern-shopify-themes-development-with-nx-shopify-31ho</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;p&gt;Nx-Shopify is an &lt;a href="https://nx.dev"&gt;Nx&lt;/a&gt; plugin for developing Shopify themes with performance, modern tooling, and ergonomics in mind.&lt;/p&gt;

&lt;p&gt;Check the Getting Started guide and the full docs at the &lt;a href="https://trafilea.github.io/nx-shopify/"&gt;Nx-Shopify&lt;/a&gt; official website.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trafilea"&gt;
        trafilea
      &lt;/a&gt; / &lt;a href="https://github.com/trafilea/nx-shopify"&gt;
        nx-shopify
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Nx plugin for developing performance-first Shopify themes 🚀
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jb9Lhn94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png" width="80" height="50"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  Nx-Shopify
&lt;/h1&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aACIdpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml/badge.svg" alt="e2e"&gt;&lt;/a&gt;
&lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://github.com/trafilea/nx-shopify/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/26c4a32a07e084cf4fb601f4fdcf75e21581d61fbe62817c8e5b575595a3ee2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f74726166696c65612f6e782d73686f70696679" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2765536d59dec1fd959a17cf6bd417b1e052808c78a9243d83dcafc77ab0667e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4074726166696c65612f6e782d73686f70696679" alt="npm (scoped)"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54040f02fc63434d45706c0b913b1d352bc9667f12e55c4cca2ce3ae549881f3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f4074726166696c65612f6e782d73686f70696679" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/c0486311910977832125780d8ef9ac681614939bd1b9328678007156a4648896/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="code style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trafilea/nx-shopify/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/87951bc87eb4d4e9f8a51c8d25c37f5a579ab214ff609b5dbf7d273271daad18/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;🔎 &lt;strong&gt;An &lt;a href="https://nx.dev" rel="nofollow"&gt;Nx&lt;/a&gt; plugin for developing performance-first Shopify themes 🚀&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be it you need to build a custom Shopify store theme, develop a generic theme or even maintain multiple stores/themes with shared code across them, this Nx plugin helps you power-up your development experience&lt;/p&gt;




&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;Install the Nx CLI globally&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --global nx

# yarn
$ yarn add --global nx

# pnpm
$ pnpm install --global nx
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Create an empty Nx workspace (or use an existing one)&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ npx create-nx-workspace my-org --preset=empty
$ cd ./my-org
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Install the Nx-Shopify plugin as a devDependency&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --save-dev @trafilea/nx-shopify

# yarn
$ yarn add --save-dev @trafilea/nx-shopify

# pnpm
$ pnpm install --save-dev @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Generate a Shopify theme using the Nx CLI&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx generate @trafilea/nx-shopify:theme my-theme
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Check the generators and executors provided by the plugin&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx list @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🤓 Read the full…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trafilea/nx-shopify"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#a-little-history-shopify-slate-amp-themekit"&gt;
  &lt;/a&gt;
  A little history: Shopify Slate &amp;amp; Themekit
&lt;/h1&gt;

&lt;p&gt;Before being &lt;a href="https://github.com/Shopify/slate/pull/1091"&gt;deprecated in January 2020&lt;/a&gt;, Shopify's official toolkit for developing Shopify themes was &lt;a href="https://github.com/Shopify/slate"&gt;Slate&lt;/a&gt;. Slate provided a theme development environment that enabled the developer to have a better project structure than the regular directories found in a Shopify theme. With the deprecation of Slate, the only official tool for theme development left is &lt;a href="https://shopify.dev/tools/theme-kit"&gt;Themekit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Themekit acts like a bridge between the developer's local files and the files found in a Shopify store's theme. The folder structure of a Themekit theme is meant more for the theme rendering process than for code maintainability or multiple developers constantly working on the same code base. Additionally, a Themekit project provides little to zero build tooling for the application code. &lt;/p&gt;

&lt;p&gt;This is how a basic Themekit project looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tjq_bn2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zd9i6v38g40jnm5x1ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tjq_bn2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zd9i6v38g40jnm5x1ep.png" alt="Themekit Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Given the context above, the need to have a well-defined project structure, dev ergonomics, high-quality code, and use of modern web technologies, were limited due to lack of tooling.&lt;/p&gt;

&lt;p&gt;At &lt;a href="https://trafilea.com"&gt;Trafilea&lt;/a&gt;, we heavily use Shopify themes and are constantly making changes to them according to our business needs and growth. Providing our developers a functional, stable, and feature-rich development experience is crucial, this why we built and open-sourced &lt;a href="https://github.com/trafilea/nx-shopify"&gt;Nx-Shopify&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#nxshopify"&gt;
  &lt;/a&gt;
  Nx-Shopify 🚀
&lt;/h1&gt;

&lt;p&gt;Nx-Shopify is an Nx plugin that adds support for modern Shopify Themes development to an Nx workspace. It comes with various features including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TypeScript based.&lt;/li&gt;
&lt;li&gt;Styling with SASS and PostCSS.&lt;/li&gt;
&lt;li&gt;Out of the box unit testing with Jest.&lt;/li&gt;
&lt;li&gt;Out of the box code formatting using Prettier and ESLint.&lt;/li&gt;
&lt;li&gt;Multiple application and Themekit environments.&lt;/li&gt;
&lt;li&gt;Code lazy loading.&lt;/li&gt;
&lt;li&gt;Code generator for creating new themes with separate configs.&lt;/li&gt;
&lt;li&gt;Code generators for creating theme blocks such as layouts, templates, sections, and snippets.&lt;/li&gt;
&lt;li&gt;React integration via &lt;code&gt;@nrwl/react&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Webpack extended configuration.&lt;/li&gt;
&lt;li&gt;➕ all features included in an Nx workspace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nx-Shopify makes use of Shopify Themekit under the hood, so every project built with Nx-Shopify will be compliant with the themekit project format, in case you need to run specific themekit commands in your project. &lt;strong&gt;TIP:&lt;/strong&gt; you can add custom targets for your projects using the &lt;a href="http://nx.dev/workspace/run-commands-executor"&gt;Nx run commands executor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok, but...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-nx"&gt;
  &lt;/a&gt;
  What is Nx?
&lt;/h2&gt;

&lt;p&gt;Nx is a set of dev tools for monorepos designed to provide a great development experience in a plug-and-play way. According to their website: "&lt;strong&gt;Nx&lt;/strong&gt; is a suite of powerful, extensible dev tools to help you architect, test, and build at any scale — integrating seamlessly with modern technologies and libraries while providing a robust CLI, caching, dependency management, and more."&lt;/p&gt;

&lt;p&gt;Watch this 35 seconds video to have a general overview of some of the things Nx does:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BIeQTWLyAqc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;(We ❤️ Nx)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-generators"&gt;
  &lt;/a&gt;
  Code Generators
&lt;/h2&gt;

&lt;p&gt;Most Nx plugins include code generators to facilitate developers' life so they can focus on what really matters. Nx-Shopify includes generators for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/fundamentals/creating-a-theme"&gt;New themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/layout"&gt;Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/template"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/section"&gt;Sections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/snippet"&gt;Snippets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A fresh generated Shopify theme would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--71m40zOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnm046v355dupw99pdh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--71m40zOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnm046v355dupw99pdh5.png" alt="Nx-Shopify Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every theme block is organized in a component-based/cohesive design with its respective Liquid, styles, Typescript, and test files. You can also nest blocks under another block's directory if that makes sense to you. You have control of your theme project architecture. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cli-commands"&gt;
  &lt;/a&gt;
  CLI commands
&lt;/h2&gt;

&lt;p&gt;The CLI commands that can be executed against a theme are known in Nx as executors. The list of executors included with Nx-Shopify are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/build"&gt;build&lt;/a&gt; - Builds the theme to a Themekit compliant structure ready to be deployed to Shopify&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/serve"&gt;serve&lt;/a&gt; - Runs a local web &amp;amp; assets server for local theme development&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/test"&gt;test&lt;/a&gt; - Runs Jest tests against the theme code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/deploy"&gt;deploy&lt;/a&gt; - Deploys a built theme to Shopify according to the Themekit environment configured in the &lt;code&gt;config.yml&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get a list of all plugin's generators and executors by running the following command in your workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nx list @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#react-integration-via-raw-nrwlreact-endraw-"&gt;
  &lt;/a&gt;
  React integration via &lt;code&gt;@nrwl/react&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Do not miss the &lt;a href="https://trafilea.github.io/nx-shopify/docs/guides/using-react"&gt;React integration step-by-step guide&lt;/a&gt; on our docs site.&lt;/p&gt;



&lt;p&gt;Star ⭐ the repo, check the &lt;a href="https://trafilea.github.io/nx-shopify/"&gt;docs&lt;/a&gt;, and power up your Shopify themes development experience!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trafilea"&gt;
        trafilea
      &lt;/a&gt; / &lt;a href="https://github.com/trafilea/nx-shopify"&gt;
        nx-shopify
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Nx plugin for developing performance-first Shopify themes 🚀
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jb9Lhn94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png" width="80" height="50"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
  Nx-Shopify
&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aACIdpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml/badge.svg" alt="e2e"&gt;&lt;/a&gt;
&lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://github.com/trafilea/nx-shopify/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/26c4a32a07e084cf4fb601f4fdcf75e21581d61fbe62817c8e5b575595a3ee2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f74726166696c65612f6e782d73686f70696679" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2765536d59dec1fd959a17cf6bd417b1e052808c78a9243d83dcafc77ab0667e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4074726166696c65612f6e782d73686f70696679" alt="npm (scoped)"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54040f02fc63434d45706c0b913b1d352bc9667f12e55c4cca2ce3ae549881f3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f4074726166696c65612f6e782d73686f70696679" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/c0486311910977832125780d8ef9ac681614939bd1b9328678007156a4648896/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="code style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trafilea/nx-shopify/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/87951bc87eb4d4e9f8a51c8d25c37f5a579ab214ff609b5dbf7d273271daad18/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;🔎 &lt;strong&gt;An &lt;a href="https://nx.dev" rel="nofollow"&gt;Nx&lt;/a&gt; plugin for developing performance-first Shopify themes 🚀&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be it you need to build a custom Shopify store theme, develop a generic theme or even maintain multiple stores/themes with shared code across them, this Nx plugin helps you power-up your development experience&lt;/p&gt;




&lt;h2&gt;
Getting Started&lt;/h2&gt;

&lt;p&gt;Install the Nx CLI globally&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --global nx

# yarn
$ yarn add --global nx

# pnpm
$ pnpm install --global nx
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Create an empty Nx workspace (or use an existing one)&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ npx create-nx-workspace my-org --preset=empty
$ cd ./my-org
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Install the Nx-Shopify plugin as a devDependency&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --save-dev @trafilea/nx-shopify

# yarn
$ yarn add --save-dev @trafilea/nx-shopify

# pnpm
$ pnpm install --save-dev @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Generate a Shopify theme using the Nx CLI&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx generate @trafilea/nx-shopify:theme my-theme
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Check the generators and executors provided by the plugin&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx list @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;


&lt;ul&gt;
&lt;li&gt;
🤓 Read the full…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trafilea/nx-shopify"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>shopify</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 14th May 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 14 May 2021 13:57:46 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-14th-may-2021-1mkd</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-14th-may-2021-1mkd</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-slidev"&gt;
  &lt;/a&gt;
  1. Slidev
&lt;/h3&gt;

&lt;p&gt;Presentation Slides for Developers&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/slidevjs"&gt;
        slidevjs
      &lt;/a&gt; / &lt;a href="https://github.com/slidevjs/slidev"&gt;
        slidev
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Presentation Slides for Developers (Public Beta 🎉)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;br&gt;
&lt;p&gt;
&lt;a href="https://sli.dev" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/fb0c6af9dd783d6e51acde314b22a15c0b3a862eb674989ce45b36734de97578/68747470733a2f2f736c692e6465762f6c6f676f2d7469746c652e706e67" alt="Slidev" height="250" width="250"&gt;
&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Presentation &lt;b&gt;slide&lt;/b&gt;s for &lt;b&gt;dev&lt;/b&gt;elopers 🧑‍💻👩‍💻👨‍💻
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://www.npmjs.com/package/@slidev/cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dd6861696fae20dac25a04793f8b2ad8e960fc385bb025daebb23dd1b73ab477/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40736c696465762f636c693f636f6c6f723d324239304236266c6162656c3d" alt="NPM version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@slidev/cli" rel="nofollow"&gt;&lt;img alt="NPM Downloads" src="https://camo.githubusercontent.com/e63d72154fa5168c033f07c04168d5607c47caae9d60a1681e56cc821bc66f87/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f40736c696465762f636c693f636f6c6f723d333439646265266c6162656c3d"&gt;&lt;/a&gt;
&lt;a href="https://sli.dev/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/232131761c5c39a98c2734b6ceefc4814847dda8f162f54f0ae19eea7338e71b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d646f637325323025323625323064656d6f7326636f6c6f723d343562386364" alt="Docs &amp;amp; Demos"&gt;&lt;/a&gt;
&lt;a href="https://sli.dev/themes/gallery.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5fee232431b9ca0e218c8958cb0a5c3909422751ebc9f32f1a4613ca8d7c226/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d7468656d657326636f6c6f723d346563356434" alt="Themes"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;&lt;img alt="GitHub stars" src="https://camo.githubusercontent.com/a89af6f141f6bd83e4f775113039bbb5ef1bb0b94991e478daf337b085ef4755/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f736c696465766a732f736c696465763f7374796c653d736f6369616c"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://twitter.com/antfu7/status/1389604687502995457" rel="nofollow"&gt;Video Preview&lt;/a&gt;
&lt;/p&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/slidevjs/slidev/main/"&gt;&lt;img width="2000" height="0" src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6QBBlDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/slidevjs/slidev/main/"&gt;&lt;/a&gt;&lt;br&gt;
Status: &lt;b&gt;Public Beta 🎉&lt;/b&gt;&lt;br&gt;
Made possible by my &lt;a href="https://github.com/sponsors/antfu"&gt;Sponsor Program 💖&lt;/a&gt;&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/slidevjs/slidev/main/"&gt;&lt;img width="2000" height="0" src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6QBBlDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/slidevjs/slidev/main/"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;
&lt;a href="https://www.producthunt.com/posts/slidev?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-slidev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a030a4831de10c164ea710acf3693c16b7c32289452e8aa697f68cb464e307bb/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323934393038267468656d653d6461726b" alt="Slidev - Presentation Slides for Developers | Product Hunt" width="200"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Motivation&lt;/h2&gt;
&lt;p&gt;I always found myself spending too much time styling and layouting slides when using apps like PowerPoint / Keynote / Google Slides. Whenever I need to share code snippets, I would also need to use other tools to generate the highlighted code as images over and over again.&lt;/p&gt;
&lt;p&gt;So as a frontend developer, why not solve it the way that fits better with what I am good at?&lt;/p&gt;
&lt;p&gt;Documentations and guides on &lt;strong&gt;&lt;a href="https://sli.dev" rel="nofollow"&gt;Sli.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
📝 &lt;a href="https://sli.dev/guide/syntax.html" rel="nofollow"&gt;&lt;strong&gt;Markdown-based&lt;/strong&gt;&lt;/a&gt; - use your favorite editors and workflow&lt;/li&gt;
&lt;li&gt;
🧑‍💻 &lt;a href="https://sli.dev/guide/syntax.html#code-blocks" rel="nofollow"&gt;&lt;strong&gt;Developer Friendly&lt;/strong&gt;&lt;/a&gt; - built-in syntax highlighting, live coding, etc.&lt;/li&gt;
&lt;li&gt;
🎨 &lt;a href="https://sli.dev/themes/gallery.html" rel="nofollow"&gt;&lt;strong&gt;Themable&lt;/strong&gt;&lt;/a&gt; - theme can be shared and used with npm packages&lt;/li&gt;
&lt;li&gt;
🌈 &lt;a href="https://sli.dev/guide/syntax.html#embedded-styles" rel="nofollow"&gt;&lt;strong&gt;Stylish&lt;/strong&gt;&lt;/a&gt; - &lt;a href="https://windicss.org/" rel="nofollow"&gt;Windi CSS&lt;/a&gt; on-demand utilities, easy-to-use embedded stylesheets&lt;/li&gt;
&lt;li&gt;
🤹 &lt;a href="https://sli.dev/custom/directory-structure.html#components" rel="nofollow"&gt;&lt;strong&gt;Interactive&lt;/strong&gt;&lt;/a&gt; - embedding Vue components seamlessly&lt;/li&gt;
&lt;li&gt;
🎙 &lt;a href="https://sli.dev/guide/presenter-mode.html" rel="nofollow"&gt;&lt;strong&gt;Presenter Mode&lt;/strong&gt;&lt;/a&gt; - use…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/slidevjs/slidev"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-serverless-nextjs-component"&gt;
  &lt;/a&gt;
  2. Serverless Next.js Component
&lt;/h3&gt;

&lt;p&gt;Deploy your Next.js apps on AWS Lambda@Edge via Serverless Components&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/serverless-nextjs"&gt;
        serverless-nextjs
      &lt;/a&gt; / &lt;a href="https://github.com/serverless-nextjs/serverless-next.js"&gt;
        serverless-next.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚡ Deploy your Next.js apps on AWS Lambda@Edge via Serverless Components
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Serverless Next.js Component&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/./img/logo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8zKk4LI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/./img/logo.gif" alt="logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.serverless.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcd998f0b6567f17873812fa9bcc9767d63c056862c19024ccbfe5ec7cefe2eb/687474703a2f2f7075626c69632e7365727665726c6573732e636f6d2f6261646765732f76332e737667" alt="serverless"&gt;&lt;/a&gt;
&lt;a href="https://github.com/serverless-nextjs/serverless-next.js/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/a0b243709b9f31443114a4cb1fd69d3cd20c2b8f30d61b7cfa11b5106c26f3cf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f7365727665726c6573732d6e6578746a732f7365727665726c6573732d6e6578742e6a73" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/serverless-nextjs-plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc246fad2e045394a0ae19bf17f36f3e9978c673ed3ef136fce34e87ab3cd4b1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7365727665726c6573732d6e6578746a732d706c7567696e2f616c6c2f62616467652e7376673f6c6162656c3d6261636b657273" alt="Financial Contributors on Open Collective"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@sls-next/serverless-component?activeTab=versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f106f64b712ccb5a634426656615ae12826c87d9762655e51bf4d0bd10b6257e/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f40736c732d6e6578742f7365727665726c6573732d636f6d706f6e656e742f6c6174657374" alt="npm latest"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@sls-next/serverless-component?activeTab=versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cac9368b84594aa6212166cac57852f9da86ba571e5a51d89a109698fba1e0f3/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f40736c732d6e6578742f7365727665726c6573732d636f6d706f6e656e742f616c706861" alt="npm alpha"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/serverless-nextjs/serverless-next.js/workflows/CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xQ6Yk0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/serverless-nextjs/serverless-next.js/workflows/CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/serverless-nextjs/serverless-next.js/workflows/End-to-end%20Tests/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqeTHB_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/serverless-nextjs/serverless-next.js/workflows/End-to-end%2520Tests/badge.svg" alt="End-to-end Tests"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/manual/danielcondemarin/serverless-nextjs/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=serverless-nextjs/serverless-next.js&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/610cfd902398aeec5ab71993cfa14ebb9bc22fe3db3ee30316a3b873435f961c/68747470733a2f2f6170702e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6330643361613261383663623463653938373732613032303135663436333134" alt="Codacy Badge"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/serverless-nextjs/serverless-next.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/94f553480c47f646c88c2acd8c103c825b20fd2f8ed9526b0aef79fcf695273c/68747470733a2f2f636f6465636f762e696f2f67682f7365727665726c6573732d6e6578746a732f7365727665726c6573732d6e6578742e6a732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/568a20970b6e5f1b4a754e1dfcc9f29c284cedcc6c4a30b7b43e36123aaab833/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7465737465642532306e6578742e6a7325323076657273696f6e732d392e352e7825323025374325323031302e302e782d626c7565"&gt;&lt;img src="https://camo.githubusercontent.com/568a20970b6e5f1b4a754e1dfcc9f29c284cedcc6c4a30b7b43e36123aaab833/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7465737465642532306e6578742e6a7325323076657273696f6e732d392e352e7825323025374325323031302e302e782d626c7565" alt="Tested Next.js versions"&gt;&lt;/a&gt;
&lt;a href="https://www.cypress.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16428bf59999e11f6c40a85fd6ac1e6ac7f040065a9107e94647020f3135676b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f746573746564253230776974682d437970726573732d3034433338452e737667" alt="Cypress.io"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2a06959703790803bbc9f7fa68f116c09856814c946b4268615a738ccbcd8f64/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d6177732d626c7565"&gt;&lt;img src="https://camo.githubusercontent.com/2a06959703790803bbc9f7fa68f116c09856814c946b4268615a738ccbcd8f64/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d6177732d626c7565" alt="Platforms"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A zero configuration Next.js 9.0 &lt;a href="https://github.com/serverless-components/"&gt;serverless component&lt;/a&gt; for AWS Lambda@Edge aiming for full feature parity.&lt;/p&gt;
&lt;p&gt;Please review &lt;a href="https://github.com/serverless-nextjs/serverless-next.js#features"&gt;features&lt;/a&gt; for a list of currently supported features.&lt;/p&gt;
&lt;h2&gt;
Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#motivation"&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#design-principles"&gt;Design principles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#lambda-at-edge-configuration"&gt;Lambda@Edge configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#custom-domain-name"&gt;Custom domain name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#custom-cloudfront-configuration"&gt;Custom CloudFront configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#static-pages-caching"&gt;Static pages caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#public-directory-caching"&gt;Public directory caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#aws-permissions"&gt;AWS Permissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#inputs"&gt;Inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#cdk-construct"&gt;CDK Construct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/serverless-nextjs/serverless-next.js/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠️ This README reflects the latest changes on the &lt;code&gt;master&lt;/code&gt; branch. It may or may not yet be published to the &lt;code&gt;latest&lt;/code&gt; (stable) or &lt;code&gt;alpha&lt;/code&gt; release in npm. Please go to &lt;a href="https://github.com/serverless-nextjs/serverless-next.js/releases"&gt;Releases&lt;/a&gt;, find the correct &lt;code&gt;@sls-next/serverless-component&lt;/code&gt; version you are using, and open the README for that release for more accurate information. If a feature is listed in this README but not working, please first try upgrading to the most recent &lt;code&gt;alpha&lt;/code&gt; release in npm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
Motivation&lt;/h3&gt;
&lt;p&gt;Since Next.js 8.0, &lt;a href="https://nextjs.org/blog/next-8#serverless-nextjs" rel="nofollow"&gt;serverless mode&lt;/a&gt; was introduced which provides a new low level API which projects like this…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/serverless-nextjs/serverless-next.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-prism"&gt;
  &lt;/a&gt;
  3. Prism
&lt;/h3&gt;

&lt;p&gt;Lightweight, robust, elegant syntax highlighting.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/PrismJS"&gt;
        PrismJS
      &lt;/a&gt; / &lt;a href="https://github.com/PrismJS/prism"&gt;
        prism
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightweight, robust, elegant syntax highlighting.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://prismjs.com/" rel="nofollow"&gt;Prism&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/PrismJS/prism/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4lYpvDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/PrismJS/prism/workflows/CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/prismjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddea640c524285ecf1248751b10d0a0a77b2eeba4e596e6efda657b93e7260fb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f707269736d6a732e737667" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prism is a lightweight, robust, and elegant syntax highlighting library. It's a spin-off project from &lt;a href="https://dabblet.com/" rel="nofollow"&gt;Dabblet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can learn more on &lt;a href="https://prismjs.com/" rel="nofollow"&gt;prismjs.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lea.verou.me/2012/07/introducing-prism-an-awesome-new-syntax-highlighter/#more-1841" rel="nofollow"&gt;Why another syntax highlighter?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/PrismJS/prism-themes"&gt;More themes for Prism!&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Contribute to Prism!&lt;/h2&gt;
&lt;p&gt;Prism depends on community contributions to expand and cover a wider array of use cases. If you like it, consider giving back by sending a pull request. Here are a few tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href="https://prismjs.com/extending.html" rel="nofollow"&gt;documentation&lt;/a&gt;. Prism was designed to be extensible.&lt;/li&gt;
&lt;li&gt;Do not edit &lt;code&gt;prism.js&lt;/code&gt;, it’s just the version of Prism used by the Prism website and is built automatically. Limit your changes to the unminified files in the &lt;code&gt;components/&lt;/code&gt; folder. &lt;code&gt;prism.js&lt;/code&gt; and all minified files are also generated automatically by our build system.&lt;/li&gt;
&lt;li&gt;The build system uses &lt;a href="https://github.com/gulpjs/gulp"&gt;gulp&lt;/a&gt; to minify the files and build &lt;code&gt;prism.js&lt;/code&gt;. With all of Prism's dependencies installed, you just need to run the command &lt;code&gt;npm run&lt;/code&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/PrismJS/prism"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-mediumzoom"&gt;
  &lt;/a&gt;
  4. medium-zoom
&lt;/h3&gt;

&lt;p&gt;A JavaScript library for zooming images like Medium&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/francoischalifour"&gt;
        francoischalifour
      &lt;/a&gt; / &lt;a href="https://github.com/francoischalifour/medium-zoom"&gt;
        medium-zoom
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔎🖼 A JavaScript library for zooming images like Medium
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://medium-zoom.francoischalifour.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7i651MrJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/logo.svg" alt="Demo" width="64"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
medium-zoom&lt;/h3&gt;
  &lt;p&gt;A JavaScript library for zooming images like Medium&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/medium-zoom" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/2e6a0a5834acb7727feaf4999e8b487f5f4feb6c21b15704126b0bef6a02e700/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d656469756d2d7a6f6f6d2e7376673f7374796c653d666c61742d737175617265" alt="version"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/francoischalifour/medium-zoom/blob/master/LICENSE"&gt;
    &lt;img src="https://camo.githubusercontent.com/37bc9dd0c1d1a0f76f8367fdcc9dfea201384edba9628265f28acc6ec46a8b39/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f6d656469756d2d7a6f6f6d2e7376673f7374796c653d666c61742d737175617265" alt="MIT license"&gt;
  &lt;/a&gt;
  &lt;a href="http://npmcharts.com/compare/medium-zoom" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/af7dc9043e6b7447dbe31123de52387efb991d4f23bd54431af0c523bc235fe9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f6d656469756d2d7a6f6f6d2e7376673f7374796c653d666c61742d737175617265" alt="downloads"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://unpkg.com/medium-zoom/dist/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/bcd558d8b1b7c1215dbb45a3f3842f9a72a7d31f8b4fd8e3dbd074ff20eec6d9/687474703a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f6d656469756d2d7a6f6f6d2f646973742f6d656469756d2d7a6f6f6d2e6d696e2e6a733f636f6d7072657373696f6e3d677a6970266c6162656c3d677a697025323073697a65267374796c653d666c61742d737175617265" alt="gzip size"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/francoischalifour/medium-zoom/blob/master/package.json"&gt;
    &lt;img src="https://camo.githubusercontent.com/a3cc1360fb091c82e392eb985b34d0b6d0a2b698c1ac82e56389a993c17820ac/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d6e6f6e652d6c69676874677265792e7376673f7374796c653d666c61742d737175617265" alt="no dependencies"&gt;
  &lt;/a&gt;
  &lt;a href="https://travis-ci.org/francoischalifour/medium-zoom" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/0d221b7c8f22eb3e29eeacc5591dcb2bd825bf09eb78b98b47ac77f3aa9a345a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6672616e636f69736368616c69666f75722f6d656469756d2d7a6f6f6d2e7376673f7374796c653d666c61742d737175617265" alt="travis"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://medium-zoom.francoischalifour.com" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-L_GR9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/6137112/43369906-7623239a-9376-11e8-978b-6e089be499fb.gif" alt="Medium Zoom Demo"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;strong&gt;
  &lt;a href="https://codesandbox.io/s/github/francoischalifour/medium-zoom/tree/master/website" rel="nofollow"&gt;🔬 Playground&lt;/a&gt; ・
  &lt;a href="https://medium-zoom.francoischalifour.com" rel="nofollow"&gt;🔎 Demo&lt;/a&gt; ・
  &lt;a href="https://medium-zoom.francoischalifour.com/storybook" rel="nofollow"&gt;📚 Storybook&lt;/a&gt;
  &lt;/strong&gt;
&lt;/p&gt;

  &lt;strong&gt;Contents&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#api"&gt;API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#selectors"&gt;Selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#methods"&gt;Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#attributes"&gt;Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#events"&gt;Events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#browser-support"&gt;Browser support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/francoischalifour/medium-zoom/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
📱 &lt;strong&gt;Responsive&lt;/strong&gt; — &lt;em&gt;scale on mobile and desktop&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
🚀 &lt;strong&gt;Performant and lightweight&lt;/strong&gt; — &lt;em&gt;should be able to reach 60 &lt;a href="https://en.wikipedia.org/wiki/Frame_rate" rel="nofollow"&gt;fps&lt;/a&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
⚡️ &lt;strong&gt;High definition support&lt;/strong&gt; — &lt;em&gt;load the HD version of your image on zoom&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
🔎 &lt;strong&gt;Flexibility&lt;/strong&gt; — &lt;em&gt;apply the zoom to a selection of images&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
🖱 &lt;strong&gt;Mouse, keyboard and gesture friendly&lt;/strong&gt; — &lt;em&gt;click anywhere, press a key or scroll away to close the zoom&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
🎂 &lt;strong&gt;Event handling&lt;/strong&gt; — &lt;em&gt;trigger events when the zoom enters a new state&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
📦 &lt;strong&gt;Customization&lt;/strong&gt; — &lt;em&gt;set your own margin, background and scroll offset&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
🔧 &lt;strong&gt;Pluggable&lt;/strong&gt; — &lt;em&gt;add your own features to the zoom&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
💎 &lt;strong&gt;Custom templates&lt;/strong&gt; — &lt;em&gt;extend the default look to match the UI of your app&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;The module…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/francoischalifour/medium-zoom"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-gestalt"&gt;
  &lt;/a&gt;
  5. Gestalt
&lt;/h3&gt;

&lt;p&gt;A set of React UI components that supports Pinterest’s design language&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pinterest"&gt;
        pinterest
      &lt;/a&gt; / &lt;a href="https://github.com/pinterest/gestalt"&gt;
        gestalt
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A set of React UI components that supports Pinterest’s design language
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Gestalt&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/gestalt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3db388e444afa9b91af7f4717f529f16e8c59942bd9716190f29844fc55c4d1d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f67657374616c742e737667" alt="NPM Version"&gt;&lt;/a&gt; &lt;a href="https://dashboard.cypress.io/projects/x99ctf/runs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e15f85a738bde79d2b1cf9f9683a51dfd7a995a6af65562b43a0922f13ab633/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f64617368626f6172642e637970726573732e696f2f62616467652f73696d706c652f7839396374662f6d6173746572267374796c653d666c6174266c6f676f3d63797072657373" alt="gestalt"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gestalt is a set of React UI components that enforces Pinterest’s design language. We use it to streamline communication between designers and developers by enforcing a bunch of fundamental UI components. This common set of components helps raise the bar for UX &amp;amp; accessibility across Pinterest.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gestalt.netlify.app/" rel="nofollow"&gt;Visit the official Gestalt Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;The package can be installed via npm:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i gestalt --save
npm i gestalt-datepicker --save&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Or via yarn:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add gestalt
yarn add gestalt-datepicker&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    
    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Gestalt exports each component as ES6 modules and a single, precompiled CSS file:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Text&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'gestalt'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;'gestalt/dist/gestalt.css'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;That syntax is Webpack specific (and will work with Create React App), but you can use Gestalt anywhere that supports ES6 module bundling and global CSS.&lt;/p&gt;
&lt;h2&gt;
Development&lt;/h2&gt;
&lt;p&gt;Gestalt is a &lt;a href="https://yarnpkg.com/lang/en/docs/workspaces/" rel="nofollow"&gt;multi-project monorepo&lt;/a&gt;. The docs and components are all organized as separate packages that share similar tooling.&lt;/p&gt;
&lt;p&gt;Install project…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pinterest/gestalt"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-katex"&gt;
  &lt;/a&gt;
  6. KaTeX
&lt;/h3&gt;

&lt;p&gt;KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/KaTeX"&gt;
        KaTeX
      &lt;/a&gt; / &lt;a href="https://github.com/KaTeX/KaTeX"&gt;
        KaTeX
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast math typesetting for the web.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://katex.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a55acc8f6ae7a3f325697c43b46ea038a5c1b2c691764672096992bacbcd365/68747470733a2f2f6b617465782e6f72672f696d672f6b617465782d6c6f676f2d626c61636b2e737667" width="130" alt="KaTeX"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/katex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f54c4fc00e457225744e8e6d27c2b5a1bf65dd87dd79eb312c4a86eeaf0788f9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6b617465782e737667" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/KaTeX/KaTeX/actions?query=workflow%3ACI"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjEnTXF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/KaTeX/KaTeX/workflows/CI/badge.svg%3Fbranch%3Dmaster%26event%3Dpush" alt="CI"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/KaTeX/KaTeX" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e71e852249665019a30ec25b7abe548d9718233cd29d965e0958256d82be71fe/68747470733a2f2f636f6465636f762e696f2f67682f4b615465582f4b615465582f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://github.com/KaTeX/KaTeX/discussions"&gt;&lt;img src="https://camo.githubusercontent.com/1899d56dfa58eec52c38f3e664795278a881dc9b37eba02eaf443bedaf18afa5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f44697363757373696f6e732d6a6f696e2d627269676874677265656e" alt="Discussions"&gt;&lt;/a&gt;
&lt;a href="https://www.jsdelivr.com/package/npm/katex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63499cdc0306891c791b17157310d728583934a29d8e1bd7643db6f980f6a116/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f6b617465782f62616467653f7374796c653d726f756e646564" alt="jsDelivr"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5d77b81c3d80fd7a198ef796121c0723c32e6b957658fd44268528f5003b7368/68747470733a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f6b617465782f646973742f6b617465782e6d696e2e6a733f636f6d7072657373696f6e3d677a6970"&gt;&lt;img src="https://camo.githubusercontent.com/5d77b81c3d80fd7a198ef796121c0723c32e6b957658fd44268528f5003b7368/68747470733a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f6b617465782f646973742f6b617465782e6d696e2e6a733f636f6d7072657373696f6e3d677a6970" alt="katex.min.js size"&gt;&lt;/a&gt;
&lt;a href="https://gitpod.io/#https://github.com/KaTeX/KaTeX" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/daadb4894128d1e19b72d80236f5959f1f2b47f9fe081373f3246131f0189f6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d626c75653f6c6f676f3d676974706f64" alt="Gitpod ready-to-code"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fast:&lt;/strong&gt; KaTeX renders its math synchronously and doesn't need to reflow the page. See how it compares to a competitor in &lt;a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php" rel="nofollow"&gt;this speed test&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Print quality:&lt;/strong&gt; KaTeX's layout is based on Donald Knuth's TeX, the gold standard for math typesetting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Self contained:&lt;/strong&gt; KaTeX has no dependencies and can easily be bundled with your website resources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server side rendering:&lt;/strong&gt; KaTeX produces the same output regardless of browser or environment, so you can pre-render expressions using Node.js and send them as plain HTML.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KaTeX is compatible with all major browsers, including Chrome, Safari, Firefox, Opera, Edge, and IE 11.&lt;/p&gt;
&lt;p&gt;KaTeX supports much (but not all) of LaTeX and many LaTeX packages. See the &lt;a href="https://katex.org/docs/supported.html" rel="nofollow"&gt;list of supported functions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Try out KaTeX &lt;a href="https://katex.org/#demo" rel="nofollow"&gt;on the demo page&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;h3&gt;
Starter template&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c1"&gt;&amp;lt;!DOCTYPE html&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&amp;lt;!-- KaTeX requires the&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/KaTeX/KaTeX"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-rooks"&gt;
  &lt;/a&gt;
  7. Rooks
&lt;/h3&gt;

&lt;p&gt;Essential hooks to super charge your components!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/imbhargav5"&gt;
        imbhargav5
      &lt;/a&gt; / &lt;a href="https://github.com/imbhargav5/rooks"&gt;
        rooks
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Essential hooks ⚓  to super charge your components!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e86a6303b03328f4b63ec85287c7f4a19abd1a31f01f98ea2747222bfe71011/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3736313132363436333435373436303233342f3737353236323237383032363738383838352f46696e616c5f436f70795f382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5e86a6303b03328f4b63ec85287c7f4a19abd1a31f01f98ea2747222bfe71011/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3736313132363436333435373436303233342f3737353236323237383032363738383838352f46696e616c5f436f70795f382e706e67" height="auto" width="100%"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/imbhargav5/rooks/workflows/Node%20CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcMrnehi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/imbhargav5/rooks/workflows/Node%2520CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://github.com/imbhargav5/rooks/workflows/Release%20script/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qWOrRpjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/imbhargav5/rooks/workflows/Release%2520script/badge.svg" alt="Release script"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/imbhargav5/rooks/main/#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/4ea8e9719765b87755bc27d22aa2723fcb09d3b9533fbb48e9a5296a76e95b72/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d31352d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;A super awesome collection of regularly used custom hooks as utils for React.&lt;/p&gt;
&lt;h2&gt;
&lt;a href="https://react-hooks.org/" rel="nofollow"&gt;Complete Documentation&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gyazo.com/742dc22ec370af0a96322427b6a32a9b" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/516afbe465f254dfb2bee87f1bebefd2b9062c108dd6f2f294f09aadedc1b8b7/68747470733a2f2f692e6779617a6f2e636f6d2f37343264633232656333373061663061393633323234323762366133326139622e676966" alt="Image from Gyazo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
List of all hooks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useBoundingclientrect" rel="nofollow"&gt;useBoundingclientrect&lt;/a&gt; - getBoundingClientRect hook for React.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useBoundingclientrectRef" rel="nofollow"&gt;useBoundingclientrectRef&lt;/a&gt; - A hook that tracks the boundingclientrect of an element. It returns a callbackRef so that the element node if changed is easily tracked.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useCountdown" rel="nofollow"&gt;useCountdown&lt;/a&gt; - Count down to a target timestamp and call callbacks every second (or provided peried)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useCounter" rel="nofollow"&gt;useCounter&lt;/a&gt; - Counter hook for React.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useDebounce" rel="nofollow"&gt;useDebounce&lt;/a&gt; - Debounce hook for react&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useDidMount" rel="nofollow"&gt;useDidMount&lt;/a&gt; - componentDidMount hook for React&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useDidUpdate" rel="nofollow"&gt;useDidUpdate&lt;/a&gt; - componentDidUpdate hook for react&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useDocumentEventListener" rel="nofollow"&gt;useDocumentEventListener&lt;/a&gt; - A react hook to an event listener to the document object&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useEffectOnceWhen" rel="nofollow"&gt;useEffectOnceWhen&lt;/a&gt; - Runs a callback effect atmost one time when a condition becomes true&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useEventListenerRef" rel="nofollow"&gt;useEventListenerRef&lt;/a&gt; - A react hook to add an event listener to a ref&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useForkRef" rel="nofollow"&gt;useForkRef&lt;/a&gt; - A hook that can combine two refs(mutable or callbackRefs) into a single callbackRef&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-hooks.org/docs/useFreshRef" rel="nofollow"&gt;useFreshRef&lt;/a&gt; - Avoid stale state…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/imbhargav5/rooks"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-colorscss"&gt;
  &lt;/a&gt;
  8. colors.css
&lt;/h3&gt;

&lt;p&gt;Better default colors for the web. A collection of skin classes for faster prototyping and nicer looking sites.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mrmrs"&gt;
        mrmrs
      &lt;/a&gt; / &lt;a href="https://github.com/mrmrs/colors"&gt;
        colors
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Smarter defaults for colors on the web.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="http://clrs.cc/" rel="nofollow"&gt;colors.css 3.0.0&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Better default colors for the web. A collection of skin classes for faster prototyping and nicer looking sites.&lt;/p&gt;
&lt;h4&gt;
Stats&lt;/h4&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;903&lt;/th&gt;
&lt;th&gt;85&lt;/th&gt;
&lt;th&gt;85&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bytes&lt;/td&gt;
&lt;td&gt;selectors&lt;/td&gt;
&lt;td&gt;declarations&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h4&gt;
With &lt;a href="https://npmjs.com" rel="nofollow"&gt;npm&lt;/a&gt;
&lt;/h4&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;npm install --save-dev colors.css
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;
With Git&lt;/h4&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/tachyons-css/colors.css
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;h4&gt;
Using with &lt;a href="https://github.com/postcss/postcss"&gt;PostCSS&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Import the css module&lt;/p&gt;
&lt;div class="highlight highlight-source-css position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;@import&lt;/span&gt; &lt;span class="pl-s"&gt;"colors.css"&lt;/span&gt;;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Then process the CSS using the &lt;a href="https://github.com/tachyons-css/tachyons-cli"&gt;&lt;code&gt;tachyons-cli&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ npm i -g tachyons-cli
$ tachyons-cli path/to/css-file.css &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; dist/t.css&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;h4&gt;
Using the CSS&lt;/h4&gt;
&lt;p&gt;The built CSS is located in the &lt;code&gt;css&lt;/code&gt; directory. It contains an unminified and minified version.
You can either cut and paste that css or link to it directly in your html.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;link&lt;/span&gt; &lt;span class="pl-c1"&gt;rel&lt;/span&gt;="&lt;span class="pl-s"&gt;stylesheet&lt;/span&gt;" &lt;span class="pl-c1"&gt;href&lt;/span&gt;="&lt;span class="pl-s"&gt;path/to/module/css/colors.css&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;h4&gt;
Development&lt;/h4&gt;
&lt;p&gt;The source CSS files can be found in the &lt;code&gt;src&lt;/code&gt; directory.
Running &lt;code&gt;$ npm start&lt;/code&gt; will process the source CSS and place the built CSS in the &lt;code&gt;css&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;
The CSS&lt;/h2&gt;
&lt;div class="highlight highlight-source-css position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;
&lt;span class="pl-c"&gt;  COLORS&lt;/span&gt;
&lt;span class="pl-c"&gt;  Better default colors&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mrmrs/colors"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-draftail"&gt;
  &lt;/a&gt;
  9. Draftail
&lt;/h3&gt;

&lt;p&gt;A configurable rich text editor built with Draft.js. Draftail aims for a mouse-free, keyboard-centric experience. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/springload"&gt;
        springload
      &lt;/a&gt; / &lt;a href="https://github.com/springload/draftail"&gt;
        draftail
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📝🍸 A configurable rich text editor built with Draft.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://www.draftail.org/" rel="nofollow"&gt;Draftail&lt;/a&gt; &lt;a href="https://www.draftail.org/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFbxZStp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thibaudcolas/draftail.org/main/.github/draftail-logo.svg%3Fsanitize%3Dtrue" width="90" height="90"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/draftail" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2571e633e48ea155cf94d8edc422c6ffb8e299a9dc08decd06c61e1f42a7d57a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f647261667461696c2e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://github.com/springload/draftail/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHyyKvFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/springload/draftail/workflows/CI/badge.svg" alt="Build status"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/springload/draftail" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6ee9c5df993cc79dc47dd70097e75bbbe0bea5b8eba2ee69b0ea812eefaa742/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f737072696e676c6f61642f647261667461696c2f62616467652e737667" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/draftail-demos/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/371156a86c1d5bf3fae7e8740f4c550e5f3f2bb8bcf6eb222caed3f6158cbad5/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f63623466323733322d633163352d343536362d623232652d6365343931663530346138322f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📝🍸 A configurable rich text editor built with &lt;a href="https://draftjs.org/" rel="nofollow"&gt;Draft.js&lt;/a&gt;. Check out our &lt;a href="https://www.draftail.org/examples" rel="nofollow"&gt;demos&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.draftail.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/725269ecd65e3e37205078d8f03ce83610b7eb1f9c20fe9b2278d08ceefa9839/68747470733a2f2f7777772e647261667461696c2e6f72672f696d672f647261667461696c2d75692d73637265656e73686f742e706e67" alt="Screenshot of Draftail"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;Draftail aims for a mouse-free, keyboard-centric experience. Here are important features worth highlighting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for &lt;a href="https://www.draftail.org/docs/keyboard-shortcuts" rel="nofollow"&gt;keyboard shortcuts&lt;/a&gt;. Lots of them!&lt;/li&gt;
&lt;li&gt;Paste from Word. Or any other editor. It just works.&lt;/li&gt;
&lt;li&gt;Autolists – start a line with &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;1.&lt;/code&gt; to create a list item.&lt;/li&gt;
&lt;li&gt;Shortcuts for heading levels &lt;code&gt;##&lt;/code&gt;, code blocks &lt;code&gt;```&lt;/code&gt;, text formats &lt;code&gt;**&lt;/code&gt;, and more.&lt;/li&gt;
&lt;li&gt;Undo / redo – until the end of times.&lt;/li&gt;
&lt;li&gt;Common text types: headings, paragraphs, quotes, lists.&lt;/li&gt;
&lt;li&gt;Common text styles: Bold, italic, and many more.&lt;/li&gt;
&lt;li&gt;API to build custom controls for links, images, and more.&lt;/li&gt;
&lt;li&gt;Compatibility with the &lt;a href="https://www.draft-js-plugins.com" rel="nofollow"&gt;&lt;code&gt;draft-js-plugins&lt;/code&gt;&lt;/a&gt; ecosystem to build more advanced extensions.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;

&lt;p&gt;This project adheres to &lt;a href="http://semver.org/spec/v2.0.0.html" rel="nofollow"&gt;Semantic Versioning&lt;/a&gt;, and measures performance and &lt;a href="https://coveralls.io/github/springload/draftail" rel="nofollow"&gt;code coverage&lt;/a&gt;. It uses &lt;a href="https://flow.org/" rel="nofollow"&gt;Flow&lt;/a&gt; types. We also try to follow accessibility best…&lt;/p&gt;


&lt;/blockquote&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/springload/draftail"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#10-supercons"&gt;
  &lt;/a&gt;
  10. Supercons
&lt;/h3&gt;

&lt;p&gt;A friendly, open source React iconset&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lachlanjc"&gt;
        lachlanjc
      &lt;/a&gt; / &lt;a href="https://github.com/lachlanjc/supercons"&gt;
        supercons
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A friendly, open source React iconset
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Supercons&lt;/h1&gt;
&lt;p&gt;A friendly set of open source React icons.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://supercons.vercel.app" rel="nofollow"&gt;→ &lt;strong&gt;Preview &amp;amp; search the iconset&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Massive credit to &lt;a href="https://github.com/superbryntendo"&gt;@superbryntendo&lt;/a&gt; for the original set of icons &amp;amp; aesthetic inspiration.&lt;/p&gt;
&lt;p&gt;Predecessor projects: &lt;a href="https://github.com/lachlanjc/spectrum-icons"&gt;spectrum-icons&lt;/a&gt;, &lt;a href="https://github.com/hackclub/icons"&gt;@hackclub/icons&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b8c11a569c6adcb36d5b47e56b2b60bb1e66b9d38535e4526f245324ad3d690d/68747470733a2f2f636c6f75642d6c37696a786b7976672e76657263656c2e6170702f323032312d30322d30325f32313031307a38637766756e70646e336a70353964376e70347a3671356b646a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b8c11a569c6adcb36d5b47e56b2b60bb1e66b9d38535e4526f245324ad3d690d/68747470733a2f2f636c6f75642d6c37696a786b7976672e76657263656c2e6170702f323032312d30322d30325f32313031307a38637766756e70646e336a70353964376e70347a3671356b646a2e706e67" alt="Banner with fun styling of Supercons"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add supercons
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; npm i supercons&lt;/span&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;Icon&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'supercons'&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;default&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;style&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;color&lt;/span&gt;: &lt;span class="pl-s"&gt;'magenta'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Icon&lt;/span&gt; &lt;span class="pl-c1"&gt;glyph&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;"like"&lt;/span&gt; &lt;span class="pl-c1"&gt;size&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;128&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Icon&lt;/span&gt; &lt;span class="pl-c1"&gt;glyph&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;"cloud"&lt;/span&gt; &lt;span class="pl-c1"&gt;size&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;32&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Built with/supports TypeScript.&lt;/p&gt;
&lt;h3&gt;
Props&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Prop&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Details&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;glyph&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;String, required&lt;/td&gt;
&lt;td&gt;&lt;code&gt;like&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;See &lt;a href="https://supercons.vercel.app" rel="nofollow"&gt;docs&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number or string&lt;/td&gt;
&lt;td&gt;&lt;code&gt;32&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Sets width &amp;amp; height&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;React component&lt;/td&gt;
&lt;td&gt;&lt;code&gt;svg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Must render &lt;code&gt;svg&lt;/code&gt; tag&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;You can also pass any other props. Remember to make your icons accessible with &lt;code&gt;aria-label&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt;, use &lt;code&gt;aria-hidden&lt;/code&gt; if they’re purely…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lachlanjc/supercons"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +1,630 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt; +1,572 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The Book of Secret Knowledge&lt;/a&gt; +1,447 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;30 seconds of code&lt;/a&gt; +1,330 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +1,209 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/mantinedev/mantine"&gt;Mantine&lt;/a&gt; +63%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +49%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/JP1016/react-icon-blur"&gt;react-icon-blur&lt;/a&gt; +46%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nextapps-de/winbox"&gt;WinBox&lt;/a&gt; +32%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/thoughtspile/grafar"&gt;Grafar&lt;/a&gt; +24%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +6,612 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +6,491 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Web Developer Roadmap&lt;/a&gt;  +4,995 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,799 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/supabase"&gt;Supabase&lt;/a&gt; +4,753 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/github/github-elements"&gt;github-elements&lt;/a&gt; +116%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wbkd/react-flow"&gt;React Flow&lt;/a&gt; +97%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pankod/superplate"&gt;superplate&lt;/a&gt; +95%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/arnelenero/simpler-state"&gt;SimpleR State&lt;/a&gt; +63%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/supabase/supabase"&gt;Supabase&lt;/a&gt; +62%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>news</category>
      <category>react</category>
    </item>
    <item>
      <title>Sharpen your Ruby: Hash</title>
      <author>Eric Chapman</author>
      <pubDate>Fri, 14 May 2021 13:55:27 +0000</pubDate>
      <link>https://dev.to/ericchapman/sharpen-your-ruby-hash-32kn</link>
      <guid>https://dev.to/ericchapman/sharpen-your-ruby-hash-32kn</guid>
      <description>&lt;p&gt;I develop in Javascript, Python, PHP and Ruby. By far Ruby is my favorite programming language. &lt;/p&gt;

&lt;p&gt;Together let start a journey and revisit our Ruby foundations. &lt;/p&gt;

&lt;p&gt;Each post will include some theory but also exercise and solution.&lt;/p&gt;

&lt;p&gt;If you have any questions/comments or your are new and need help, you can comment below or send me a message.&lt;/p&gt;

&lt;h2&gt;What is a Hash&lt;/h2&gt;

&lt;p&gt;A Hash is a collection of key-value pairs for example: "product" =&amp;gt; "price". &lt;/p&gt;

&lt;p&gt;It is similar to an Array, except that indexing is done via a keys of any object type, not an integer index like array.&lt;/p&gt;

&lt;h2&gt;Create a Hash&lt;/h2&gt;

&lt;p&gt;Here how to create a Hash in Ruby&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'iPhone'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'iPad'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;799&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Macbook Pro'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1899&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# or same but newer syntax&lt;/span&gt;
&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'iPhone'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'iPad'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;799&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Macbook Pro'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1899&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's create a Hash with 3 entry (keys / values):&lt;br&gt;
iPhone      : 699&lt;br&gt;
iPad        : 799&lt;br&gt;
Macbook Pro : 1899&lt;/p&gt;

&lt;p&gt;You can search / access any item by specifying the key name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:iPad&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 799&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can search / access any item with default value if key not present&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:iPhone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 699&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:iWatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# not found so 0&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;Remove item from a Hash&lt;/h2&gt;

&lt;p&gt;You can remove a item from a Hash with this syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:iPhone&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="c1"&gt;# {"iPad"=&amp;gt;799, "Macbook Pro"=&amp;gt;1899}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;Add item to a Hash&lt;/h2&gt;

&lt;p&gt;To add a new item just use this syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:iPad2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;899&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="c1"&gt;# {"iPad"=&amp;gt;799, "Macbook Pro"=&amp;gt;1899, :iPad2=&amp;gt;899}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;Iterate over a Hash&lt;/h2&gt;

&lt;p&gt;To iterate over key/value pair&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; 
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To iterate only over values&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; 
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To iterate only over keys&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; 
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;Array of Hash&lt;/h2&gt;

&lt;p&gt;Often you will have to work with an array of hash. Here an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'iPhone12'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'iPad'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;799&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'iWatch'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;899&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a array so you can access an item like an array&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;product_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# {id: 100, name: 'iPhone12', price: 699}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can extract info from hash like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:price&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 699&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Select only product with a price greater than 750$&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;high_price_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:price&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That's it for today. The journey just started, stay tune for the next post very soon. (later today or tomorrow)&lt;/p&gt;

&lt;p&gt;If you have any comments or questions please do so here or send me a message on twitter. &lt;/p&gt;

&lt;p&gt;I am new on twitter so if you want to make me happy&lt;br&gt;
Follow me: &lt;a href="https://twitter.com/justericchapman?ref_src=twsrc%5Etfw"&gt;Follow @justericchapman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Five tips about React hooks</title>
      <author>Fabien Schlegel</author>
      <pubDate>Fri, 14 May 2021 13:54:17 +0000</pubDate>
      <link>https://dev.to/le_humch/five-tips-about-react-hooks-fik</link>
      <guid>https://dev.to/le_humch/five-tips-about-react-hooks-fik</guid>
      <description>&lt;p&gt;Today, when you use React and functional components, you need hooks.&lt;/p&gt;

&lt;p&gt;Work with hooks is easier than lifecycle methods in class components, but I've encountered some issues and today, I want to share my solutions with you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-cut-your-code"&gt;
  &lt;/a&gt;
  1. Cut your code
&lt;/h2&gt;

&lt;p&gt;I like to cut my code in small pieces for a better understanding. I make four blocks in reading's order. Usually, I use the same layout between functional and class components. In this article, I will only get into functional components.&lt;/p&gt;

&lt;p&gt;The first block is for all the hooks and variables. I begin with all datas like state, variables or context and next all effects.&lt;/p&gt;

&lt;p&gt;The second block is for events.&lt;/p&gt;

&lt;p&gt;The third block is for cases : Sometimes your break your jsx in small pieces or you have a ternary condition. Separate some parts can be a good idea to maintain readability.&lt;/p&gt;

&lt;p&gt;The last one contain the return statement with the main jsx part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ReloadButton&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ReloadPageButtonProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTranslation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MyContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Reload&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Refresh&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ReloadButton&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-use-custom-hooks"&gt;
  &lt;/a&gt;
  2. Use custom hooks
&lt;/h2&gt;

&lt;p&gt;If you have only one state and one effect, you can keep all the things in the component. But if you have more, It's better to create a custom hook.&lt;/p&gt;

&lt;p&gt;Your custom hook must  begin with use and respect &lt;a href="https://reactjs.org/docs/hooks-rules.html"&gt;React hook's rules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Keep in mind : you can use custom hooks in custom hook.&lt;/p&gt;

&lt;p&gt;The good example is an hook to populate the options of a select input field. A first hook fetch data from an API and the second build the options.&lt;/p&gt;

&lt;p&gt;On your form component, you have the options hook only. Another variables and functions are hidden. The options hook launch the fetch hook on mount and display only the options when there are ready and the loading state of the fetch hook.&lt;/p&gt;

&lt;p&gt;Yes ! A custom hook can display variables of another hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nx"&gt;SelectedOption&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;boolean&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setOptions&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SelectedOption&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;optionsResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="nx"&gt;setOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;optionsResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setOptions&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useOptions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-use-destructuring-to-display-variables-of-a-custom-hook"&gt;
  &lt;/a&gt;
  3. Use destructuring to display variables of a custom hook
&lt;/h2&gt;

&lt;p&gt;If you have a big custom hook with many variables to expose, like a complicated form to post, you can pack all the variables in an object.&lt;/p&gt;

&lt;p&gt;When you want to update a value of the object, use the previous state, merge it with the new values and return it inside the updater function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tomato&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fruit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.72&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.99&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;

&lt;span class="c1"&gt;// in your form component&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-prefer-simple-useeffect"&gt;
  &lt;/a&gt;
  4. Prefer simple useEffect
&lt;/h2&gt;

&lt;p&gt;Use the DRY principle on effect hook. If you create only one effect hook with many dependencies, your hook will run each time a dependency is updated. It may result in unwanted sides effects or conditional loops in the hook.&lt;/p&gt;

&lt;p&gt;When you can, split it in smaller ones will make one thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-combine-the-context-and-the-reducer-hooks"&gt;
  &lt;/a&gt;
  5. Combine the context and the reducer hooks
&lt;/h2&gt;

&lt;p&gt;If you need to share variables between components and  you doesn't want to use Redux, you can combine this two hooks.&lt;/p&gt;

&lt;p&gt;You initialize a reducer hook with an initial state and a reducer function. You give the state and dispatch function as value for a context provider, the job is done. Every children of the context provider can access to the state and dispatch actions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Context component&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ContextWrapper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ContextWrapperProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Context.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ContextWrapper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Context file with reducer&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ContextStateType&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;Types&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET_DATA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Update&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UPDATE_DATA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Update&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ActionType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContextStateType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// [...] file is cut&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContextStateType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ActionType&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;ContextStateType&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;newState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContextStateType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;newState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;newState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;updateData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unknown action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newState&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContextStateType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ActionType&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Usually, I used Redux as a single store of data at the root of the app and React context when I need to share some variables between few components.&lt;/p&gt;

&lt;p&gt;React hooks are great tools easier to use than lifecycle methods in class components.&lt;/p&gt;

&lt;p&gt;This is my first article in plain English. Old articles are in french and available on my blog. If you want me to translate them, make a comment or contact me on &lt;a href="https://twitter.com/fabienschlegel"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>react</category>
    </item>
    <item>
      <title>Using Design Patterns in Node.js</title>
      <author>Sujay Kundu</author>
      <pubDate>Fri, 14 May 2021 13:47:27 +0000</pubDate>
      <link>https://dev.to/sujaykundu777/using-design-patterns-in-node-js-58oj</link>
      <guid>https://dev.to/sujaykundu777/using-design-patterns-in-node-js-58oj</guid>
      <description>&lt;p&gt;This article was first published at my Blog &lt;a href="https://sujaykundu.com/blog/using-design-patterns-in-nodejs/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-design-patterns-in-nodejs-programming"&gt;
  &lt;/a&gt;
  Using Design Patterns in Node.js Programming
&lt;/h1&gt;

&lt;p&gt;When we code or create programs, we always want our written code to be adaptable, optimized and reusable. And often while building software's, we want that - changes in our code should not affect the other features or create bugs, or the impact of the change to be low. &lt;/p&gt;

&lt;p&gt;Some say, coding is like a art - you can be creative. Yes, certainly but when it comes to building real-world software's, our code should always follow a design / technique that helps in solving the common problems while we code. Design patterns help in writing better, maintainable software which minimizes the impact, and also makes your code look beautiful .For those who believe in practicing quality code and engineering ethics, you should definitely checkout and follow Design Patterns !&lt;/p&gt;

&lt;p&gt;So In, this article , lets understand all the design patterns that you can use in Nodejs.&lt;/p&gt;

&lt;p&gt;Tip : Recommended Books to Read on Design Patterns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Head First Design Patterns&lt;/li&gt;
&lt;li&gt;Design Patterns : Elements of Reusable Object Oriented Software &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#types-of-design-patterns"&gt;
  &lt;/a&gt;
  Types of Design Patterns
&lt;/h2&gt;

&lt;p&gt;There are about 26 patterns. These 26 can be classified in to 3 types:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creational Patterns &lt;/li&gt;
&lt;li&gt;Structural Patterns&lt;/li&gt;
&lt;li&gt;Behavioral Patterns &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#creational-patterns"&gt;
  &lt;/a&gt;
  Creational Patterns
&lt;/h3&gt;

&lt;p&gt;A creational design pattern basically solves a problem by controlling the creation process of an object.  There are 4 creational design patterns :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Singleton &lt;/li&gt;
&lt;li&gt;Prototype&lt;/li&gt;
&lt;li&gt;Factory&lt;/li&gt;
&lt;li&gt;Builder &lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#singleton-design-pattern"&gt;
  &lt;/a&gt;
  Singleton Design Pattern
&lt;/h4&gt;

&lt;p&gt;Ensure a class only has one instance, and provide a global point of access to it. Sometimes you need to make sure that you have one and only one instance of an object. This is where singleton pattern can be useful. &lt;br&gt;
The singleton represents a single instance of an object.&lt;/p&gt;

&lt;p&gt;eg.&lt;br&gt;
Suppose we want to create our own Logger, that will log all our project messages. Usually creating a logger and calling it every other file creating new instances will coz for multiple instantiation of same class. But using singleton we can solve this problem by instantiating only 1 time, and reusing it everywhere :&lt;/p&gt;

&lt;p&gt;Let's create a logger singleton instance :&lt;br&gt;
Logger.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Logger&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="c1"&gt;// check if instance is created already&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="c1"&gt;// no instance created yet&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
          &lt;span class="nx"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="c1"&gt;// save our logs to output&lt;/span&gt;
   &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Log =&amp;gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// count for logs&lt;/span&gt;
    &lt;span class="nx"&gt;printLogCount&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;logs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="c1"&gt;// Actual instance of singleton &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are ready to use our "logger" singleton anywhere in our application, all we need to do is call the logger. &lt;/p&gt;

&lt;p&gt;app.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Logger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logMe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;printLogCount&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World ... &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;printLogCount&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#prototype-design-pattern"&gt;
  &lt;/a&gt;
  Prototype Design Pattern
&lt;/h4&gt;

&lt;p&gt;Javascript is a Prototype-based language. We specify the kinds of objects to create using prototypical instance (blueprints) and create new objects by copying this prototype. It does this through what's called prototypal inheritance. &lt;/p&gt;

&lt;p&gt;An object that supports cloning is called a prototype. Using the prototype pattern, we can instantiate new objects based on a template of an existing object through cloning.  When object creation is time consuming and costly operation, so we create object with existing object itself.&lt;/p&gt;

&lt;p&gt;One significant benefit of using this design pattern is that functions defined in objects are created by reference. That means all objects point to the same function instead of having their copies of that function. In simpler terms, the prototype's functions are available to all the objects  inherited from the prototype.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  A function defined on the prototype is inherited by all new classes.&lt;/li&gt;
&lt;li&gt;  The new classes point to the same function, rather than having individual copies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg. &lt;br&gt;
Suppose we want to create cars  objects , lets define a car prototype or(blueprint of a car)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can create new cars using the above prototype:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ATV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Honda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rincon 650&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2018&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also create new objects by cloning the prototype using "Object.create" feature defined by ES5 standard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Prototype class&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;noOfWheels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;started&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stopped&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// using Object.create to create clones &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myNewCar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myNewCar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__proto__&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#factory-design-pattern"&gt;
  &lt;/a&gt;
  Factory Design Pattern
&lt;/h4&gt;

&lt;p&gt;Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory method lets a class defer instantiation to subclasses.&lt;/p&gt;

&lt;p&gt;Instead of using a class constructors or new keyword to create an object of a class, we can abstract this process. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Factory pattern provides an interface/abstract class for creating objects.&lt;/li&gt;
&lt;li&gt;  You can create different objects by using the same interface/abstract class.&lt;/li&gt;
&lt;li&gt;  It improves the structure of the code and makes it easier to maintain it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg. &lt;br&gt;
Suppose we want to create a shape factory that will return different shapes object like rectangle, square, circle or triangle and its associated function, by passing the name of that shape.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Factory method for creating new shap instances&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;shapeFactory&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createShape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shapeType&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shapeType&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
         &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rectangle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
             &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
             &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;square&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
             &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Square&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
             &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
              &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;triangle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
               &lt;span class="nx"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Constructor for defining new Rectangle&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is a Rectangle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Constructor for defining new Square&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Square&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is a Square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Constructor for defining new Circle&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is a Circle);
    }
};

// Constructor for defining new Triangle
var Triangle = function(){
    this.draw = function () {
        console.log(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;Triangle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;shapeFactory&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Creating instance of factory that makes rectange, square, circle, triangle respectively&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;rectangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createShape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rectangle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createShape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;square&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createShape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createShape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;triangle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cm"&gt;/*
  OUTPUT

  This is a Rectangle
  This is a Square
  This is a Circle

*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets take another example of Vehicle, &lt;/p&gt;

&lt;p&gt;If we want to create vehicles, a can be several different types and categories. Suppose we have cars and bikes - that comes under the category of Motorvehicle, and similarly we have airplane that comes under AircraftCategory and also trains in Railvehicle category. &lt;/p&gt;

&lt;p&gt;Let's create this category classes, &lt;/p&gt;

&lt;p&gt;Motorvehicle.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// motorvehicle factory &lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Motorvehicle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;createVehicle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;vehicle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;car&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nx"&gt;vehicle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nx"&gt;vehicle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Bike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;default&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nx"&gt;vehicle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;vehicle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// constructor for defining new car &lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Car&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// constructor for defining new bike&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Bike&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Motorvehicle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly we can create for Aircraft and Railvehicle category factories&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// importing the vehicle categories factories&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Motorvehicle&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Motorvehicle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Aircraft&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Aircraft&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Railvehicle&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Railvehicle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// factory to create a new vehicle based on the vehicle type and details&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;VehicleFactory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createNewVehicle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;vehicle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;car&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Motorvehicle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createVehicle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;car&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Motorvehicle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createVehicle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;airplane&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Aircraft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAircraft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;airplane&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Railvehicle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRailVehicle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;train&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VehicleFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create  our vehicle&lt;/p&gt;

&lt;p&gt;createVehicle.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;VehicleFactory&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./vehiclefactory&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Audi101&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VehicleFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createNewVehicle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;car&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;101 All Road&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="c1"&gt;// now Audi101 is a car &lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Audi101&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Audi101&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#builder-design-pattern"&gt;
  &lt;/a&gt;
  Builder Design Pattern
&lt;/h4&gt;

&lt;p&gt;As a programmer creating objects is one of the most common things that you will do. It is so common that many of us never think twice about how we do it, but this can lead to incredibly messy code. This is where the builder pattern comes in. The builder pattern is one of the best creational design patterns for creating complex objects without complicating your constructors or code. The best part about the builder pattern is that the new changes to JavaScript allow us to create extremely concise builders compared to the traditional way of creating builders.&lt;/p&gt;

&lt;p&gt;The Builder design pattern allows us to seperate the construction of objects from their representation. Thus it simplifies the code that creates complex objects. &lt;/p&gt;

&lt;p&gt;eg. &lt;br&gt;
Let say we want to build cars for an car inventory. In this example, we would have the Car and CarBuilder classes supposing isForSale and isInStock are our optional parameters.&lt;/p&gt;

&lt;p&gt;Car.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isForSale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isInStock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isForSale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isForSale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isInStock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isInStock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create our CarBuilder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Car&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;notForSale&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;  &lt;span class="c1"&gt;// to set value of isForSale&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isForSale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;addInStock&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; &lt;span class="c1"&gt;// to set value of isInStock&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isInStock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; &lt;span class="c1"&gt;// build the car&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isForSale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isInStock&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can create cars using the CarBuilder class instead of the Car class. We do it as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./CarBuilder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bmw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bmw&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addInStock&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;audi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;notForSale&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mercedes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mercedez-benz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c-class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you might have noticed, we used the functions notForSale and addInStock, to declare the optional parameters like isForSale and isInstock, which really is very easy to understand and reduces complexity.If dont pass them, by default it applies that isForSale to be true and isInStock = false. &lt;/p&gt;

&lt;p&gt;Using the Builder design pattern makes the creation of complex objects less prone to errors because you can easily understand what each parameter does. For contrast, here is how we would create cars without the CarBuilder class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bmw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CarBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bmw&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see it can become confusing. What do those two boolean values ("true") mean? Now imagine the object is more complex; creating the object would be confusing, and the chances of introducing errors would be higher.&lt;/p&gt;

&lt;p&gt;Thus, the Builder design pattern is useful to separate the creation and representation of complex objects.&lt;/p&gt;

&lt;p&gt;Luckily, in javascript, we can also build patterns also like this using the empty object as optional parameters in the constructor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isInStock&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isForSale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;make&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;make&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isForSale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isForSale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isInStock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isInStock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mercedez-benz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c-class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isInStock&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isForSale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;car&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this were the Creational Design Patterns, next article we gonna check at Structural Design Patterns. &lt;/p&gt;

&lt;p&gt;Peace out !&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Operating Systems -Scheduling Algorithms Made Easy : FCFS </title>
      <author>code_bts</author>
      <pubDate>Fri, 14 May 2021 13:40:21 +0000</pubDate>
      <link>https://dev.to/nagasaisriya/operating-systems-scheduling-algorithms-made-easy-fcfs-51nm</link>
      <guid>https://dev.to/nagasaisriya/operating-systems-scheduling-algorithms-made-easy-fcfs-51nm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;First come first served (FCFS) is the simplest operating system scheduling algorithm which supports both preemptive and non-preemptive scheduling, implemented with a FIFO queue. It automatically executes queued requests and processes them by order of their arrival,the processes which requests the CPU first get the CPU allocation first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;First in first out (FIFO) simply queues processes in the order that they arrive in the ready queue. For managing the tasks, as the processes come they are kept at the end of the queue. As CPU finishes each task, it removes it from the start of the queue and heads onto the next task.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rtI0TUa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.preprogrammer.com/wp-content/uploads/2016/03/C-program-for-First-Come-First-Served-Scheduling.jpg%3Ffit%3D728%252C546%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rtI0TUa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.preprogrammer.com/wp-content/uploads/2016/03/C-program-for-First-Come-First-Served-Scheduling.jpg%3Ffit%3D728%252C546%26ssl%3D1" alt="FCFS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;From the above Gantt chart, if the processes arrive in the order P1,P2,P3, and are served in FCFS order,we get the result shown above. The waiting time is 0 milliseconds for process P1, 24 milliseconds for process P2, and 27 milliseconds for process P3. Thus, the average waiting time is (0+ 24 + 27)/3 = 17 milliseconds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advantage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The code for FCFS scheduling is simple to write and understand.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Disadvantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The process will run to the completion and there are high chances of starvation, as it is non preemtive.&lt;/li&gt;
&lt;li&gt;There is a convoy effect as all the other processes wait for the one big process to get off the CPU. This effect results in lower CPU and device utilization than might be possible if the shorter processes were allowed to go first.&lt;/li&gt;
&lt;li&gt;It is poor in performance since the average waiting time is higher as compared to other scheduling algorithms.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#algorithm"&gt;
  &lt;/a&gt;
  Algorithm
&lt;/h2&gt;

&lt;p&gt;Non-preemptive scheduling without arrival time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firstly, take inputs as number of processes &lt;code&gt;n&lt;/code&gt;, processes &lt;code&gt;pn&lt;/code&gt;, and burst times &lt;code&gt;bt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Find the waiting time &lt;code&gt;wt&lt;/code&gt; for all processes.&lt;/li&gt;
&lt;li&gt;The first process has no waiting time so waiting time for process 1 will be 0 i.e. &lt;code&gt;wt[0] = 0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Find waiting time for all other processes i.e. for

&lt;ul&gt;
&lt;li&gt;process i -&amp;gt; &lt;code&gt;wt[i] = bt[i-1] + wt[i-1]&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Calculate the turnaround time, it is given as &lt;code&gt;tat= wt + bt&lt;/code&gt; for all processes.

&lt;ul&gt;
&lt;li&gt;Compute sum of waiting time and turnaround times,

&lt;ul&gt;
&lt;li&gt;Sum of waiting time, &lt;code&gt;sum1 = sum1 + wt[i]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Sum of turnaround time, &lt;code&gt;sum2 = sum2 + tat[i]&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Calculate average waiting time, &lt;code&gt;avg1 = sum1 / n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Similarly, find average turnaround time, &lt;code&gt;avg2 = sum2 / n&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This is my code implemented in C++
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;fcfs&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sum1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;avg1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avg2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter number of processes:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;scanf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter processes and burst times:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;scanf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;pn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;scanf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;bt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;wt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;wt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;bt&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;wt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;tat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;wt&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;bt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//display all processes and details&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PN&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;BT&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;WT&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;TAT&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//compute sum of waiting time and turnaround time&lt;/span&gt;
        &lt;span class="n"&gt;sum1&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;wt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;sum2&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;tat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;pn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;bt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;wt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;tat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// calculate average waiting time and turnaround time&lt;/span&gt;
    &lt;span class="n"&gt;avg1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sum1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;avg2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sum2&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Average waiting time = %.2f&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avg1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Average turnaround time = %.2f&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avg2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sample-input-and-output"&gt;
  &lt;/a&gt;
  Sample Input and Output
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Enter number of processes:                                                                                                                    
3                                                                                                                                             
Enter processes and burst &lt;span class="nb"&gt;times&lt;/span&gt;:                                                                                                              
1 24                                                                                                                                          
2 3                                                                                                                                           
3 3 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;PN      BT      WT      TAT                                                                                                                   
1       24      0       24                                                                                                                    
2       3       24      27                                                                                                                    
3       3       27      30                                                                                                                    
Average waiting &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 17.00                                                                                                                  
Average turn around &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 27.00 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity-analysis"&gt;
  &lt;/a&gt;
  Complexity Analysis
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Time Complexity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Best Case&lt;/strong&gt; : O(n)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Average Case&lt;/strong&gt; : O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Worst Case&lt;/strong&gt; : O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Space Complexity : O(1)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>computerscience</category>
      <category>cpuscheduling</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Building a Budget Manager with Django and Fauna</title>
      <author>Chukslord</author>
      <pubDate>Fri, 14 May 2021 13:28:38 +0000</pubDate>
      <link>https://dev.to/chukslord1/building-a-budget-manager-with-django-and-fauna-56o5</link>
      <guid>https://dev.to/chukslord1/building-a-budget-manager-with-django-and-fauna-56o5</guid>
      <description>&lt;p&gt;&lt;em&gt;Written in connection with the &lt;a href="https://fauna.com/blog/write-with-fauna"&gt;Write with Fauna&lt;/a&gt; program&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;This article will guide you to build a simple budget management application using the Django web framework and implement the database with Fauna. This budget manager would allow users to calculate their expenditures, keep track of their savings and get financial advice based on their budget reports.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;To fully understand this tutorial, you are required to have the following in place:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python 3.7 or newer.&lt;/li&gt;
&lt;li&gt;Basic understanding of Fauna.&lt;/li&gt;
&lt;li&gt;Basic understanding of Django.&lt;/li&gt;
&lt;li&gt;A text editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the above prerequisites out of the way, we can now begin building our budget management application.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introduction-to-fauna"&gt;
  &lt;/a&gt;
  Introduction to Fauna
&lt;/h1&gt;

&lt;p&gt;If this is the first time you hear about Fauna, visit my previous article &lt;a href="https://dev.to/chukslord1/building-an-appointment-scheduler-app-with-django-and-fauna-2n9o"&gt;here&lt;/a&gt; for a brief introduction.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-the-budget-report-database"&gt;
  &lt;/a&gt;
  Creating The Budget Report Database
&lt;/h1&gt;

&lt;p&gt;To create a Fauna database, you have to first sign up &lt;a href="https://dashboard.fauna.com/accounts/register?utm_source%3DDevTo%26utm_medium%3Dreferral%26utm_campaign%3DWritewithFauna_ApptScheduler_Ochuku"&gt;for an account&lt;/a&gt;. After signing up, you can create a new database by clicking on the &lt;code&gt;CREATE DATABASE&lt;/code&gt; button on the dashboard.&lt;/p&gt;

&lt;p&gt;After clicking on the button as shown in the image above, you need to give your database a name then save it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-the-collections"&gt;
  &lt;/a&gt;
  Creating The Collections
&lt;/h1&gt;

&lt;p&gt;You need to create a collection in your database, the &lt;code&gt;Budget_Report&lt;/code&gt; collection. The &lt;code&gt;Budget_Report&lt;/code&gt; collection will store the documents for all the reports created on the application. For the &lt;code&gt;History days&lt;/code&gt; and &lt;code&gt;TTL&lt;/code&gt;, use the default values provided and save.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jqjlj4pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbunbzu4vo7uogxk2dyb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jqjlj4pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbunbzu4vo7uogxk2dyb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After saving, your collection should be similar to the one in the image below. However, you don’t have data stored in your collection yet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJOcPKqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rh6tfx6qdekpplxfa8c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJOcPKqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rh6tfx6qdekpplxfa8c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-the-indexes"&gt;
  &lt;/a&gt;
  Creating The Indexes
&lt;/h1&gt;

&lt;p&gt;You will create two indexes for your collections; &lt;code&gt;report_index&lt;/code&gt;, and &lt;code&gt;report_previous_index&lt;/code&gt;. The &lt;code&gt;report_index&lt;/code&gt; index will allow you to scroll through data in the &lt;code&gt;Budget_Report&lt;/code&gt; collection. It has one term, which is the &lt;code&gt;date&lt;/code&gt; field. This term will enable you to match data with the username for easy querying. The date field is unique.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;budget_previous_index&lt;/code&gt; also allows you to scroll through data in the &lt;code&gt;Budget_Report&lt;/code&gt; collection. However, this index allows matching with the &lt;code&gt;report&lt;/code&gt; field to perform queries.&lt;/p&gt;

&lt;p&gt;Below are what your indexes will look like after saving them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3vnihC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfw491g4zffwdcf4o4dy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3vnihC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfw491g4zffwdcf4o4dy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-an-api-key"&gt;
  &lt;/a&gt;
  Creating an API key
&lt;/h1&gt;

&lt;p&gt;To create an API key, go to the security tab on the left side of your dashboard, then click &lt;code&gt;New Key&lt;/code&gt; to generate a key. You will then be required to provide a database to connect to the key. After providing the information required, click the &lt;code&gt;SAVE&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TBPAcXCy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ypeu9n0k67wqpfh75ud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TBPAcXCy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ypeu9n0k67wqpfh75ud.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will be presented with your secret key as in the image above (hidden here for privacy) after saving your key. Make sure to copy your secret key from the dashboard and save it somewhere you can easily retrieve it for later use.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-the-django-app"&gt;
  &lt;/a&gt;
  Building the Django App
&lt;/h1&gt;

&lt;p&gt;Now you will be learning how to implement the various functionalities of the budget management application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloning-the-app"&gt;
  &lt;/a&gt;
  Cloning the App
&lt;/h2&gt;

&lt;p&gt;Run the code below in your command line to clone the repo containing the Django app on Github.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/Chukslord1/FAUNA_BUDGET_MANAGER.git 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#importing-the-%C2%A0required-libraries"&gt;
  &lt;/a&gt;
  Importing the  Required Libraries
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shortcuts&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;messages&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;HttpResponseNotFound&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;faunadb&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;faunadb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ref&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;faunadb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;FaunaClient&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initializing-fauna-client"&gt;
  &lt;/a&gt;
  Initializing Fauna Client
&lt;/h2&gt;

&lt;p&gt;To initialize the Fauna client, copy the code below and replace &lt;code&gt;secret_key&lt;/code&gt; with the API key you created earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"secret_key"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-budget-manager-logic"&gt;
  &lt;/a&gt;
  The Budget Manager Logic
&lt;/h2&gt;

&lt;p&gt;This application will allow the user to enter his monthly allowance, then calculate his budget report. This report will include the user’s; expenditure rate, extra funds, and a bit of financial advice from the system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-the-application-logic"&gt;
  &lt;/a&gt;
  Implementing the Application Logic
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;income&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"income"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;rent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"rent"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"food"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"utilities"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;insurance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"insurance"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;income&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rent&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;insurance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;income&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;advice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your expenditure rate is very good keep it up 😉. At this rate you going to be rich 💸💸. You have an extra $"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;advice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your expenditure rate is just fine 😀. You have $"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" . You should try to save atleast "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" $"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;advice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your expenditure rate is very poor 😣 . At this rate you might go broke. You have $"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" . You should try to save atleast "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" $"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;report_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"report_index"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Report Already Exists'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"App:index"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Budget_Report"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s"&gt;"monthly_income"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;income&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"rent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"food"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"utilities"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"insurance"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;insurance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"extra"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"advice"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;advice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s"&gt;"report"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"True"&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}))&lt;/span&gt;
            &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Report Created Successfully'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"App:index"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;check_report&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"report_index"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%Y-%m"&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
        &lt;span class="n"&gt;previous_report&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"report_previous_index"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"True"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="n"&gt;all_reports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;previous_reports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;check_report&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;all_reports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Budget_Report"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;())))&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;previous_report&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Budget_Report"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;all_reports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;previous_reports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Budget_Report"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;())))&lt;/span&gt;
        &lt;span class="n"&gt;reports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;all_reports&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;previous_reports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;previous_reports&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"reports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;reports&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"previous_reports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;previous_reports&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the python code above, we collected the user’s monthly income and other required information in the POST request sent. From this information, we calculated the extra funds and the amount the user needs to save. We then created an advice for the user based on the value of the &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; variables. To add a report to the &lt;code&gt;Budget_Report&lt;/code&gt; collection, we first checked if any report exists in the database carrying the date provided by making a request to the Fauna client with the &lt;code&gt;report_index&lt;/code&gt;. If the data does not exist, you create a report and send a success message to the dashboard page. &lt;/p&gt;

&lt;p&gt;Now we need to render the reports created on the dashboard for the user to see. The user needs to see all the reports for both the current month and other months. For the current month, we made a query to the Fauna client using the &lt;code&gt;report_index&lt;/code&gt; to match all data for the current month, then saved it in the &lt;code&gt;all_reports&lt;/code&gt; list to be queried and passed to the dashboard. While for the other months, we simply made a query to the Fauna client using the &lt;code&gt;report_previous_index&lt;/code&gt; to match all active reports, stored the data in the &lt;code&gt;previous_reports&lt;/code&gt; list, then eliminated the reports for the current month. Finally, we queried the &lt;code&gt;previous_reports&lt;/code&gt; list then passed the data to be displayed on the dashboard.&lt;/p&gt;

&lt;p&gt;After submitting the required information, the budget report will be displayed to you, as seen in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNCvOKpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/gjmqbzh4bnh06p-yibc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNCvOKpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/gjmqbzh4bnh06p-yibc6.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-app-urls"&gt;
  &lt;/a&gt;
  The App URLs
&lt;/h2&gt;

&lt;p&gt;Here, we imported the required modules and defined our app’s urls connected to our created views.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls.static&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;

&lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"App"&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;

    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"index"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="p"&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, you learned how to build a budget management application with &lt;a href="https://fauna.com/"&gt;Fauna's serverless database&lt;/a&gt; and Django. We saw how easy it is to integrate Fauna into a Python application and got the chance to explore some of its core features and functionalities.&lt;/p&gt;

&lt;p&gt;The source code of our budget manager application is available on &lt;a href="https://github.com/Chukslord1/FAUNA_BUDGET_MANAGER"&gt;Github&lt;/a&gt;. If you have any questions, don't hesitate to contact me on Twitter: &lt;a href="https://twitter.com/LordChuks3"&gt;@&lt;/a&gt;&lt;a href="https://twitter.com/LordChuks3"&gt;LordChuks3&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>serverless</category>
      <category>faunadb</category>
    </item>
    <item>
      <title>How I built a simple 'word guessing game' using Javascript ( for Beginners )</title>
      <author>fawazsullia</author>
      <pubDate>Fri, 14 May 2021 13:10:30 +0000</pubDate>
      <link>https://dev.to/fawazsullia/how-i-built-a-simple-word-guessing-game-using-javascript-for-beginners-448j</link>
      <guid>https://dev.to/fawazsullia/how-i-built-a-simple-word-guessing-game-using-javascript-for-beginners-448j</guid>
      <description>&lt;p&gt;I wanted to build something fun for my portfolio. After spending sometime thinking, I decided to code a game that was popular in my childhood.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hangman&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Players will have to fill the dashes with letters, until they guess the word. The game ends if the player guesses the correct word or if he chooses the wrong letter 5 times.&lt;/p&gt;

&lt;p&gt;Here’s how the game looks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8hKgOu9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf405aexymb4io1tubdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8hKgOu9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf405aexymb4io1tubdw.png" alt="Word guessing game"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we start building, let's see what the game needs to do.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate a random word&lt;/li&gt;
&lt;li&gt;Generate dashes for the players to fill letters&lt;/li&gt;
&lt;li&gt;Provide letters for the players to choose&lt;/li&gt;
&lt;li&gt;End the game when the player loses or wins&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, with that sorted, lets start building.&lt;/p&gt;

&lt;p&gt;Also, you might want to keep &lt;a href="https://fawazsullia.github.io/guesstheword.github.io/game.html"&gt;the game&lt;/a&gt; and the &lt;a href="https://github.com/fawazsullia/guesstheword.github.io"&gt;source code&lt;/a&gt; open for reference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML:
&lt;/h2&gt;

&lt;p&gt;The basic structure of the game is quite simple.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A section for the title : This section contains the title and the number of chances a player has left&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A section for the word: The blank space for the word is displayed here. We will dynamically display this, depending on the word length&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A section for the letters: English alphabet to select will be displayed here. You can create a span tag for each letter, but it is much easier to do this with Javascript.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h2&gt;

&lt;p&gt;Styling entirely depends on your preferences, but to get started, here’s the link to my &lt;a href="https://github.com/fawazsullia/guesstheword.github.io/blob/master/game.css"&gt;stylesheet&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-dynamics-of-the-game-javascript-"&gt;
  &lt;/a&gt;
  The dynamics of the game ( Javascript )
&lt;/h2&gt;

&lt;p&gt;As I said earlier, we need to create a &lt;strong&gt;section of alphabets&lt;/strong&gt; that the players can select. &lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an array of alphabets, from a - z&lt;/li&gt;
&lt;li&gt;Map through this array with array.map&lt;/li&gt;
&lt;li&gt;For each alphabet on the array, create a span node, set the id to the alphabet and set a common classname ("alphabet")&lt;/li&gt;
&lt;li&gt;Create a text node with the letter as the inner text&lt;/li&gt;
&lt;li&gt;Append the textnode to the span and the span to our div ( alphabet section)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It should look something like this ( after styling )&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IS71_7fH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdcqxklapl706yn6gkeu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IS71_7fH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdcqxklapl706yn6gkeu.png" alt="alphabet section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fetching-a-random-word"&gt;
  &lt;/a&gt;
  Fetching a random word.
&lt;/h3&gt;

&lt;p&gt;I’m sure you have heard about the acronym &lt;strong&gt;API&lt;/strong&gt; before. We will be using an API called ‘&lt;strong&gt;Random word Api&lt;/strong&gt;’ by M C Naveen, to generate a random word. &lt;/p&gt;

&lt;p&gt;The endpoint we are going to use is &lt;a href="https://random-words-api.vercel.app/word"&gt;https://random-words-api.vercel.app/word&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fetch request at endpoint&lt;/li&gt;
&lt;li&gt;Resolve the promise with .then. &lt;/li&gt;
&lt;li&gt;Resolve the json promise returned&lt;/li&gt;
&lt;li&gt;Inside the callback, invoke a function that adds functionality to the game. By doing this, we make sure that the game becomes functional only after the fetch is successful &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-game-function"&gt;
  &lt;/a&gt;
  The game function:
&lt;/h3&gt;

&lt;p&gt;Let’s split the fetched word into an array and store it.&lt;/p&gt;

&lt;p&gt;To create empty spaces for the players to fill in, we use a similar method we used to create alphabets, but instead of an alphabet, the textnode will be an empty string.&lt;/p&gt;

&lt;p&gt;Let’s then append it the div called word section.&lt;/p&gt;

&lt;p&gt;It should ook like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QS2KVZCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1gpe5cy8i60b3jjlzd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QS2KVZCT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1gpe5cy8i60b3jjlzd2.png" alt="letter section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, using foreach, we add an event listener to each alphabet.&lt;/p&gt;

&lt;p&gt;We now define a call back for the event listener (click) we added in each letter, so that whenever a player clicks a letter, the call back is executed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inside-the-callback"&gt;
  &lt;/a&gt;
  Inside the callback
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Select the letter with event.taget.innertext&lt;/li&gt;
&lt;li&gt;Check if the letter is in the word we fetched with array.includes&lt;/li&gt;
&lt;li&gt;Mark the letter as selected in the DOM ( for styling )&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, the conditional. We have 2 conditions. \&lt;br&gt;
a. The selected letter is in the word fetched. &lt;br&gt;
b. The selected letter isn’t.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selected-letter-is-in-the-word"&gt;
  &lt;/a&gt;
  Selected letter is in the word
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Check where the selected letter is in the word and store it in an array(indexes). This lets us store multiple values.&lt;/li&gt;
&lt;li&gt;With DOM manipulation, add the letter in position stored in the array indexes&lt;/li&gt;
&lt;li&gt;Store the number of elements in the indexes array in a variable.&lt;/li&gt;
&lt;li&gt;If the variable becomes equal to word length, the player wins the game.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#selected-letter-is-not-in-the-word"&gt;
  &lt;/a&gt;
  Selected letter is not in the word
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Increase the false count by 1&lt;/li&gt;
&lt;li&gt;When false count is 5, game over&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it! You successfully created a Word Game. &lt;/p&gt;

&lt;p&gt;Feel free to build this on your own and modify it as you see fit.&lt;/p&gt;

&lt;p&gt;If you have questions or improvements, feel free to ping me here.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
    </item>
  </channel>
</rss>
