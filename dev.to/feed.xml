<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Logging to a Docker Container stdout from a Background Process</title>
      <author>Anna Aitchison</author>
      <pubDate>Sun, 02 May 2021 17:05:13 +0000</pubDate>
      <link>https://dev.to/ara225/logging-to-a-docker-container-stdout-from-a-background-process-3dkg</link>
      <guid>https://dev.to/ara225/logging-to-a-docker-container-stdout-from-a-background-process-3dkg</guid>
      <description>&lt;p&gt;Background processes in Docker containers can be a bit of a pain for logging, however they can't always be avoided. For instance, I was working on a container for a legacy CGI application at work recently, which required both a FastCGI wrapper and a Nginx webserver in the same container, with Nginx running as the foreground process and logging to the container's stdout. The CGI application does a lot of logging and we didn't really want to have to manage those logs separately from the Nginx logs. The CGI wrapper we were stuck with doesn't pass on stderr (with CGI stdout goes to the browser so that's pointless also) so we had to resort to more devious means.&lt;/p&gt;

&lt;p&gt;Linking a file/logging to /dev/stdout (or /dev/stderr) doesn't work because these are merely references to the current process's stdout/stderr and logging to a terminal device similarly doesn't work because in production, there won't really be a terminal. &lt;/p&gt;

&lt;p&gt;So, I was stuck and gave up on the idea for a bit until I realized that in Linux process can write to other processs' stdin and stderr. There are 'files' in  /proc/TARGET_PROCESS_PID/fd that represent stdin and stderr for that process, and you can write to them just like any other file if you have the right permissions. Processes can only write to these 'files' if they're running under the same user and group as the target process, and if the user is not root, you might have to change the permissions of the 'files' further down the link chain. Of course, in in my situation, the master nginx process was owned by root and the CGI scripts were running under an unprivileged user. However, I worked around this by writing to the stdout of a nginx worker processes, which would then be picked up by the master process. &lt;/p&gt;

&lt;p&gt;Unfortunately, due to the way we set up the container in the end, this solution hasn't found it's way into production, but I hope it's useful to you.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>container</category>
      <category>logging</category>
    </item>
    <item>
      <title>Get an Awesome website! üòÑÔ∏è</title>
      <author>CristoferK</author>
      <pubDate>Sun, 02 May 2021 17:01:51 +0000</pubDate>
      <link>https://dev.to/cristoferk/get-an-awesome-website-kjd</link>
      <guid>https://dev.to/cristoferk/get-an-awesome-website-kjd</guid>
      <description>&lt;p&gt;Get an Awesome website! üòÑÔ∏è&lt;/p&gt;

&lt;p&gt;The Fiverr link: &lt;a href="https://www.fiverr.com/cristoferk29/make-an-awesome-website-for-you"&gt;https://www.fiverr.com/cristoferk29/make-an-awesome-website-for-you&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>website</category>
      <category>webdev</category>
      <category>awesome</category>
    </item>
    <item>
      <title>Web components in 2021: the Good, the Bad and the Ugly</title>
      <author>√âmile Perron</author>
      <pubDate>Sun, 02 May 2021 16:42:47 +0000</pubDate>
      <link>https://dev.to/emileperron/web-components-in-2021-the-good-the-bad-and-the-ugly-3kg</link>
      <guid>https://dev.to/emileperron/web-components-in-2021-the-good-the-bad-and-the-ugly-3kg</guid>
      <description>&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web components&lt;/a&gt; are a native set of features that provides outstanding scoping of styles and functionalities. They can be used in a regular, framework-free web page, but also with any Javascript framework of your choice (e.g. React, Vue, Angular, Svelte, etc.). This makes web components excellent for building reusable elements that need to be shared publicly or reused across multiple projets. At least, in theory.&lt;/p&gt;

&lt;p&gt;In reality, there are some drawbacks that can make web components almost unusable in some projects. &lt;/p&gt;

&lt;p&gt;In this article, I will explain what makes web components great, what their drawbacks are, and I will provide some guidance to help you decide whether or not you should use them in your projects.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-good"&gt;
  &lt;/a&gt;
  The Good
&lt;/h2&gt;

&lt;p&gt;The two main features that make web components powerful are the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements"&gt;Custom Elements API&lt;/a&gt;, and the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM"&gt;Shadow DOM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Custom Elements API is what allows you to create and register your components as new HTML elements. It also allows you to define lifecycle callbacks for your new element. Overall, it is pretty great and fairly simple to understand and get into, for both novice and experienced developers alike.&lt;/p&gt;

&lt;p&gt;The Shadow DOM is what provides all of the encapsulation of styles. It gives your components their own DOM, which is separate from the rest of your document. This means that global styles cannot affect it (except for CSS custom properties / variables), and that its own styles cannot affect other elements in the parent document. &lt;/p&gt;

&lt;p&gt;The HTML &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; elements are also used in most custom elements, allowing you to easily create templates with dynamic content without having to reach for a third-party templating system or language.&lt;/p&gt;

&lt;p&gt;Browser support for all of these features is great: unless you're still supporting Internet Explorer, you're unlikely to run into any deal-breakers. There is one exception to this, which will be explained later in "The Bad" section.&lt;/p&gt;

&lt;p&gt;Plus, as mentioned at the start of the article, not only are web components compatible with just about every Javascript framework out there, but they can also be used in good old vanilla Javascript, without a framework. That's because web components are basically just ES6 classes extending the native HTMLElement. That means you can share components across your project or your company's entire ecosystem.&lt;/p&gt;

&lt;p&gt;Additionally, there are some &lt;a href="https://www.webcomponents.org/introduction#libraries-for-building-web-components"&gt;great libraries and packages to make building web components easier&lt;/a&gt;, as well as an online platform where you can find and share web components with others: &lt;a href="https://www.webcomponents.org/"&gt;webcomponents.org&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-bad"&gt;
  &lt;/a&gt;
  The Bad
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#flash-of-unstyled-content"&gt;
  &lt;/a&gt;
  Flash of Unstyled Content
&lt;/h3&gt;

&lt;p&gt;Let's start with the Custom Elements API. The only drawback I have experienced with custom elements is the potential for a Flash of Unstyled Content. Since custom elements are declared and registered in Javascript, it can take a few milliseconds for them to be loaded, processed, registered, and finally rendered. While this is happening, your custom element are left unstyled or hidden.&lt;/p&gt;

&lt;p&gt;This could be a major drawback for a marketing website where you have just a few seconds to engage with your visitors in order to keep their attention, but in web applications, it's not really a deal-breaker, especially since your browser's cache dramatically dampens the issue after the initial loading.&lt;/p&gt;

&lt;p&gt;Here's an example of FOUC with a "tabbed container" web component on a reload without cache (on a local development server):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BaET009X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7k4mxzjahpuz0rjf3gp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BaET009X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7k4mxzjahpuz0rjf3gp.gif" alt="Web component flashing unstyled content for a few milliseconds before rendering correctly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the same component rendering on reload, with browser cache (still on a local development server):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3E3Yc2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjd21un6mf1lbnjz4ay5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3E3Yc2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjd21un6mf1lbnjz4ay5.gif" alt="Web component loading immediately without any visual glitches or FOUC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, browser cache makes this a non-issue for repeat visits.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shadow-dom-doesnt-play-well-with-native-forms"&gt;
  &lt;/a&gt;
  Shadow DOM doesn't play well with native forms
&lt;/h3&gt;

&lt;p&gt;The biggest issue I have encountered with web components is the fact that they do not play well at all with native form functionalities. This is due to two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Custom elements cannot extend elements other than &lt;code&gt;HTMLElement&lt;/code&gt; &lt;em&gt;(without tedious workarounds and major drawbacks)&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Form elements inside the Shadow DOM are not considered as such by the component's parent form.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Remember how the Shadow DOM doesn't use global styles? This means that if you want to use a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; inside a web component, you will have to re-define the styles of every &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;, and more, within your component's styles.&lt;/p&gt;

&lt;p&gt;Of course, you could make each of these elements their own web component, so they each encapsulate their own styles. However, because form elements such as &lt;code&gt;HTMLInputElement&lt;/code&gt; cannot be extended by custom elements, your custom input component has to include the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; in its Shadow DOM. And this is where you run into the next issue: inputs (and other form elements) within the Shadow DOM are not considered part of the form.&lt;/p&gt;

&lt;p&gt;For example, if a form's submit button is inside the Shadow DOM, the form cannot be submitted by pressing Enter inside an input anymore, unless you add your own &lt;code&gt;keydown&lt;/code&gt; event listener to replicate this feature yourself. &lt;/p&gt;

&lt;p&gt;Here is another example that is a little more complex and telling. If you want to make a custom input, you have three solutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can generate a &lt;code&gt;&amp;lt;input type="hidden"&amp;gt;&lt;/code&gt; in the regular DOM, beside your custom element, and manually replicate a bunch of built-in features to ensure your input is synchronized correctly at all times, triggers the right events, is validated correctly, is accessible, looks good, and works well.&lt;/li&gt;
&lt;li&gt;You can make every form element, including the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; itself, its own web component, and forego native &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; elements for your entire project.&lt;/li&gt;
&lt;li&gt;Handle every form who uses this custom input element with Javascript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are already in a Javascript-heavy environment, where every single form is handled via Javascript, and every component implementation already requires a lot of work in order to be usable and accessible, this might not seem like a major issue.&lt;/p&gt;

&lt;p&gt;However, if you are more vanilla-oriented, newer to web development, or simply like simple solutions and environments, this is likely to be a MAJOR deal-breaker.&lt;/p&gt;

&lt;p&gt;A non-negligible percentage of the web components I would like to build are meant to work with forms or form elements in one way or an other, and I expect it is the same for most other developers. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-ugly"&gt;
  &lt;/a&gt;
  The Ugly
&lt;/h2&gt;

&lt;p&gt;The worst part is that there isn't much information on the web about what is being done to fix or circumvent this issue of incompatibility with native forms. &lt;/p&gt;

&lt;p&gt;Web component libraries like &lt;a href="https://shoelace.style/"&gt;Shoelace&lt;/a&gt; simply implement their own custom form element, which must be handled manually in Javascript.&lt;/p&gt;

&lt;p&gt;Librairies that aim to help build web components, such as Google's &lt;a href="https://lit.dev"&gt;Lit&lt;/a&gt;, cannot allow extending built-in elements &lt;a href="https://github.com/lit/lit-element/issues/879#issuecomment-575236461"&gt;because Safari doesn't support customization of built-ins&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#where-we-stand-and-whether-should-you-use-them"&gt;
  &lt;/a&gt;
  Where we stand, and whether should you use them
&lt;/h2&gt;

&lt;p&gt;Overall, just a few weeks/months after embarking on my web component journey with a big smile and sparkling eyes, I find myself not pessimistic, but slightly disappointed about the current state of web components and their future outside of Javascript framework projects and ecosystems.&lt;/p&gt;

&lt;p&gt;I still believe the idea and general implementation of web components is great. But the drawbacks when it comes to native forms make them much less easy to learn and to implement into. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-should-use-web-components"&gt;
  &lt;/a&gt;
  You should use web components...
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;if you're already handling all your forms manually in Javascript&lt;/li&gt;
&lt;li&gt;if you have (or plan on having) multiple projects or ecosystems with different technology stacks in which you need to share/reuse components&lt;/li&gt;
&lt;li&gt;if you don't mind taking a lot of time to reimplement built-in functionalities and accessibility before you can really start working on your own business-related features (or if you can use an existing component library like &lt;a href="https://shoelace.style/"&gt;Shoelace&lt;/a&gt; to save on the initial development time and costs)&lt;/li&gt;
&lt;li&gt;... or if you don't need your components to interact with forms or form elements&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#you-should-not-use-web-components"&gt;
  &lt;/a&gt;
  You should not use web components...
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;if you want to retain the ability to use native forms &lt;/li&gt;
&lt;li&gt;if you need to support legacy browsers&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#one-last-thing"&gt;
  &lt;/a&gt;
  One last thing...
&lt;/h2&gt;

&lt;p&gt;If you are not in a Javascript-heavy environment but would still like to use web components for your forms (e.g.: you're building a Laravel or Symfony web app), you always have to possibility of developing a universal form handler to overcome the problems that are described in this article.&lt;/p&gt;

&lt;p&gt;Sure, it's more complicated than just using native forms, and it will require you to do some more development and testing before you can get started, but it's probably the simplest workaround.&lt;/p&gt;

&lt;p&gt;If you do have any other workaround or solutions in mind, I'd love to see them here in the comments or on Twitter. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webcomponents</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Have you experimented with CSS container queries?</title>
      <author>Stephanie Eckles</author>
      <pubDate>Sun, 02 May 2021 16:26:55 +0000</pubDate>
      <link>https://dev.to/5t3ph/have-you-experimented-with-css-container-queries-3goh</link>
      <guid>https://dev.to/5t3ph/have-you-experimented-with-css-container-queries-3goh</guid>
      <description>&lt;p&gt;CSS container queries have landed as an experiment in Chrome Canary! You can enable them under &lt;code&gt;chrome://flags&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have you had a chance to experiment with them yet&lt;/strong&gt;? How do you feel about them being available in CSS?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xrZNX1Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cyo7o480u92lqe4ed6b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xrZNX1Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cyo7o480u92lqe4ed6b.gif" alt="demo of using container queries within a flexbox grid layout, using color and CSS content to note when flex children are rendered as small, medium, or large container sizes."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resources if you're just hearing about them now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Miriam Suzanne is the proposal author, and you should &lt;a href="https://css.oddbird.net/rwd/query/explainer/"&gt;start with her explainer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Check out her &lt;a href="https://codepen.io/collection/XQrgJo"&gt;CodePen collection of demos&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You might like highlights from &lt;a href="https://www.twitch.tv/collections/8k9OzUpxdxb9VA"&gt;my Twitch stream of exploring them&lt;/a&gt; for the first and second time&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oddbird.net/2021/04/05/containerqueries/"&gt;A quick start guide&lt;/a&gt; from David A. Herron&lt;/li&gt;
&lt;li&gt;Ahmad Shadeed's excellent &lt;a href="https://ishadeed.com/article/say-hello-to-css-container-queries/"&gt;overview with practical examples&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;And links to more within Stu Robson's repo &lt;a href="https://github.com/sturobson/Awesome-Container-Queries"&gt;Awesome-Container-Queries&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Content &amp; Community- A Cheatsheet for Open Source projects. ( Part 1: Content üé®)</title>
      <author>Mathew J Padayatty</author>
      <pubDate>Sun, 02 May 2021 16:16:26 +0000</pubDate>
      <link>https://dev.to/aviyel/content-community-a-cheatsheet-for-open-source-projects-part-1-content-5he7</link>
      <guid>https://dev.to/aviyel/content-community-a-cheatsheet-for-open-source-projects-part-1-content-5he7</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;‚ÄúSoftware built on pride and love of the subject is superior to software built for profit.‚Äù&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
- Ravi Simhambhatla&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are over 80 million repos on Github, open stack has over 49 teams working on 1,525 project repos.  Every Open Source project is trying to capture the attention and resources of the developer community in a crowded and attention-deficit world.&lt;/p&gt;

&lt;p&gt;To rise above the noise, You need to be able to communicate what your project is doing, attract independent contributors and companies that offer material support. In Open Source, you‚Äôre selling &lt;strong&gt;&lt;em&gt;ideas not stuff&lt;/em&gt;&lt;/strong&gt; and you need users and contributors to spend their &lt;strong&gt;&lt;em&gt;time and attention&lt;/em&gt;&lt;/strong&gt; on your projects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;‚ÄúIn Open Source, marketing is about getting people to exchange their time &amp;amp; attention for your ideas.‚Äù&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
- Deirdre Straughan, AWS, Open Source lead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Conventional marketing tactics, slick ads, videos and other materials don‚Äôt have the same impact when it comes to the Open Source community. Authenticity, transparency, and a real solution to a real problem carry more weight in the community. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;‚ÄúEverything that touches your customer, everything! Is marketing.‚Äù&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So where do you begin? How can a small crew leverage content marketing around Open Source projects to grow a community in the early days? The steps are pretty straightforward, as with most things execution is the key differentiator.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#understand-your-key-content-levers"&gt;
  &lt;/a&gt;
  Understand your key content levers.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;p&gt;Open source doesn‚Äôt have as great a set of training manuals and resources as the paid-and-packaged stuff. The OSS documentation is the &lt;strong&gt;SALES PITCH&lt;/strong&gt;. It‚Äôs what will convince the engineers, at first glance that your project is worth contributing to and what will convince users of its advantages. &lt;/p&gt;

&lt;p&gt;The documentation needs to convey&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to install the library.&lt;/li&gt;
&lt;li&gt;The background behind the project.&lt;/li&gt;
&lt;li&gt;Code examples.&lt;/li&gt;
&lt;li&gt;Deep dive into underlying software logic.&lt;/li&gt;
&lt;li&gt;Effective benchmarking versus nearest neighbor libraries. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#visualization-gallery"&gt;
  &lt;/a&gt;
  Visualization Gallery
&lt;/h3&gt;

&lt;p&gt;Product visualizations/ Walkthroughs in the forms of videos and .gifs with appropriate feature shout-outs, and accompanying use case descriptions can be an effective way to get the user's buy-in.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emphasis on reliability, access, and ease of use.&lt;/li&gt;
&lt;li&gt;Guides the eyes to moot points along with the landing page.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#comparison-charts"&gt;
  &lt;/a&gt;
  Comparison charts
&lt;/h3&gt;

&lt;p&gt;A chart/ table capturing the pros and cons of the OSS software in comparison with other players OSS and proprietary is invaluable to a developer's decision-making. A full picture on the product stack with features and its advantages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nudge-content"&gt;
  &lt;/a&gt;
  Nudge Content
&lt;/h3&gt;

&lt;p&gt;Content beyond the product capabilities, useful for the ideal user profile in the form of Tips, insights, case studies, podcasts and webinars can further drive resonance and inclination to spend more time on the website...which in turn correlates to product adoption and product evangelism. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#build-a-content-strategy"&gt;
  &lt;/a&gt;
  Build a content strategy.
&lt;/h2&gt;

&lt;p&gt;Now that you have your levers in place let's look at breaking down the different components of an effective OSS content strategy-&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Building your content strategy.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Education &amp;amp; Support Category&lt;/li&gt;
&lt;li&gt;Product Showcase &lt;/li&gt;
&lt;li&gt;Validation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#education-amp-support-category"&gt;
  &lt;/a&gt;
  Education &amp;amp; Support Category
&lt;/h3&gt;

&lt;p&gt;This is the most crucial aspect of the effectiveness of any OSS content strategy. There is a list of hygiene requirements here that is an absolute must. Which includes User guides, architecture guides, Online courses, documentation, and engineering blogs.&lt;/p&gt;

&lt;p&gt;A key thing to note here is although a lot of OSS platforms make this available, the real challenge here is the seamless accessibility and user-friendliness of the content. The ‚ÄòNudge content‚Äô around case studies, user stories, podcasts, Industry reports, comparison charts, and webinars also come within this segment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#product-showcase"&gt;
  &lt;/a&gt;
  Product Showcase
&lt;/h3&gt;

&lt;p&gt;The most underutilized segment within OSS content is the proper visualization of the product and highlighting all its unique features, UI, and maneuverability. This can include product demos, product screenshots, product .gifs, etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h3&gt;

&lt;p&gt;Community, user, and Industry validation is a crucial aspect of building trust and confidence in the user.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#optimise-using-tools"&gt;
  &lt;/a&gt;
  Optimise using tools.
&lt;/h2&gt;

&lt;p&gt;After putting together a content strategy, use content tools to execute and A/B test different content for the cohorts you're reaching out to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#content-creation-tools"&gt;
  &lt;/a&gt;
  Content creation tools
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hemingwayapp.com/"&gt;&lt;strong&gt;Hemingway app (Text)&lt;/strong&gt;&lt;/a&gt; - For Written content, it helps review your blog post and highlights readability aspects that can be useful in making your blog post or content more accessible. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.canva.com/photos/"&gt;&lt;strong&gt;Canva (Image &amp;amp; Video)&lt;/strong&gt;&lt;/a&gt; - One of the easiest design platforms out there, making designing posts videos for quick content creation seamless.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://placeit.net/"&gt;&lt;strong&gt;Placeit(Image &amp;amp; Video)&lt;/strong&gt;&lt;/a&gt; - Create logos, freebies and other content on the go from a large repository of mockups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://nimbusweb.me/screenshot.php"&gt;&lt;strong&gt;Nimbus Screenshot and Screen Video Recording Chrome Extension&lt;/strong&gt;&lt;/a&gt; - A useful tool while you‚Äôre making ‚ÄòHow-to‚Äô and ‚ÄòDIY‚Äô or ‚ÄòProduct walkthroughs‚Äô videos to helps users understand how to navigate your product.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://unsplash.com/"&gt;&lt;strong&gt;Unsplash&lt;/strong&gt;&lt;/a&gt; - Find usable images for your content. A great repository that's a good alternative to Shutterstock.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://piktochart.com/"&gt;&lt;strong&gt;Picktochart&lt;/strong&gt;&lt;/a&gt; - Data visualizations are always helpful when you're trying to communicate certain aspects of product usage in relation to something else.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.audacityteam.org/download/"&gt;&lt;strong&gt;Audacity&lt;/strong&gt;&lt;/a&gt; - Podcasting tool, is an easy-to-use multitrack audio recording and editing platform that can help you get started on your first podcast.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://streamyard.com/"&gt;&lt;strong&gt;Streamyard&lt;/strong&gt;&lt;/a&gt; - A great tool for webinars and hosting live sessions that helps you to go live across Facebook, YouTube, LinkedIn, and other platforms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://carbon.now.sh/"&gt;&lt;strong&gt;Carbon&lt;/strong&gt;&lt;/a&gt; - Carbon is the easiest way to create and share beautiful images of your source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://codeimg.io/"&gt;&lt;strong&gt;CodeImg&lt;/strong&gt;&lt;/a&gt; -Create and share beautiful images of your source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://getterms.io/"&gt;&lt;strong&gt;Getterms&lt;/strong&gt;&lt;/a&gt; - Generate a simple Terms of Service and Privacy Policy statement for your website&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://beefree.io/"&gt;&lt;strong&gt;Beefree&lt;/strong&gt;&lt;/a&gt; - BEE is an email editor to build beautiful, responsive emails quickly and easily. Our objective is to build the Best Email Editor. Use it online or embed it into your application.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#content-management-amp-analytics"&gt;
  &lt;/a&gt;
  Content management &amp;amp; Analytics
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tweetdeck.twitter.com/"&gt;&lt;strong&gt;Tweetdeck&lt;/strong&gt;&lt;/a&gt; - Schedule your content on Twitter, engage your twitter profile, messages and trends through a comprehensive dashboard.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://buzzsumo.com/"&gt;&lt;strong&gt;Buzzsumo&lt;/strong&gt;&lt;/a&gt;- A cloud-based platform that helps you discover new keywords, trending stories, customer questions, and content success.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.semrush.com/"&gt;&lt;strong&gt;Semrush&lt;/strong&gt;&lt;/a&gt; ‚Äì Keyword Research, SEO, PPC, SMM, PR, Content Marketing, Competitive Research, Campaign Management, Semrush is an all-in-one for improve visibility and discovered marketing insight.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ahrefs.com/"&gt;&lt;strong&gt;Ahrefs&lt;/strong&gt;&lt;/a&gt; ‚Äì Ahrefs is one of the largest database for live link because it is know for its backlink checker. it helps for understanding your website so you can optimize your website for search engine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://neilpatel.com/ubersuggest/"&gt;&lt;strong&gt;Ubersuggest&lt;/strong&gt;&lt;/a&gt; ‚Äì Ubersuggest is a free SEO tool that can be used to analyze search engine optimization. Its current version is provided by Neil Patel, a well-known SEO expert from around the world.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are a few tools to help you get started, Open Source deserves amazing content on par with it's pro-profit and SaaS equivalents.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Open source to us is the right way to build the future of the web- Transparent and empowering smaller groups of developers rather than large monolithic cooperations.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We've been building tools to help Open source projects create and manage their content, community, and code. &lt;br&gt;
Check out &lt;a href="http://aviyel.com/"&gt;&lt;strong&gt;Aviyel&lt;/strong&gt;&lt;/a&gt; and sign up for early access.&lt;/p&gt;

&lt;p&gt;We'd love to hear from you and work towards making Open Source sustainable.&lt;/p&gt;

&lt;p&gt;May the FOSS be with you! :)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>startup</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Why is /usr/bin/test 4Kb smaller than /usr/bin/[?</title>
      <author>Mags Guru</author>
      <pubDate>Sun, 02 May 2021 15:50:12 +0000</pubDate>
      <link>https://dev.to/magsguru/why-is-usr-bin-test-4kb-smaller-than-usr-bin-491g</link>
      <guid>https://dev.to/magsguru/why-is-usr-bin-test-4kb-smaller-than-usr-bin-491g</guid>
      <description>&lt;p&gt;A Reddit user named mathisweirdaf shared some interesting observations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ ls -lh /usr/bin/{test,[}
-rwxr-xr-x 1 root root 59K  Sep  5  2019 '/usr/bin/['
-rwxr-xr-x 1 root root 55K  Sep  5  2019  /usr/bin/test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;[ and test should be aliases of each other, and yet there is a 4Kb difference between the GNU coreutils that execute them. Why?&lt;/p&gt;

&lt;p&gt;First of all, for all those who were wondering: yes, there is /usr/bin/[. On this topic I have a separate article, but I will explain briefly:&lt;br&gt;
When you write if [ -e /etc/passwd ]; then . this parenthesis does not act as a shell syntax, but just a standard command with a fancy name. It is usually built into the shell, but can sometimes be implemented through /usr/bin/[. This explains much of its mysterious behavior, such as why it is sensitive to spaces: [1=2] turns out to be no more valid than ls-l/tmp.&lt;/p&gt;

&lt;p&gt;Nevertheless, where does the difference in size come from? You can compare the objdump output to see where the data fits. Here is an excerpt from objdump -h /usr/bin/[:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              size                                          offset
15 .text         00006e82  0000000000002640  0000000000002640  00002640  2**4
16 .fini         0000000d  00000000000094c4  00000000000094c4  000094c4  2**2
17 .rodata       00001e4c  000000000000a000  000000000000a000  0000a000  2**5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But objdump -h /usr/bin/test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;15 .text         000068a2  0000000000002640  0000000000002640  00002640  2**4
16 .fini         0000000d  0000000000008ee4  0000000000008ee4  00008ee4  2**2
17 .rodata       00001aec  0000000000009000  0000000000009000  00009000  2**5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we see that the .text segment (the compiled executable code) is 1504 bytes larger, while the .rodata (constant values and strings) is 864 bytes larger.&lt;/p&gt;

&lt;p&gt;The bottom line is that the increased size of the .text segment forces it to move from 8000 to 9000, crossing the page size boundary of 0x1000 (4096) and therefore shifting all other segments by 4096 bytes. It is this difference in size that we observe.&lt;/p&gt;

&lt;p&gt;The only nominal difference between [ and test is that [ requires ] as a final argument. Testing this would require a minimal amount of code, so why are those ~1500 bytes used after all?&lt;/p&gt;

&lt;p&gt;Since it's hard to review compiled binaries, I put together a copy of coreutils and compared the list of functions in each:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ diff -u &amp;lt;(nm -S --defined-only src/[ | cut -d ' ' -f 2-) &amp;lt;(nm -S --defined-only src/test | cut -d ' ' -f 2-)
--- /dev/fd/63      2021-02-02 20:21:35.337942508 -0800
+++ /dev/fd/62      2021-02-02 20:21:35.341942491 -0800
@@ -37,7 +37,6 @@
 D __dso_handle
 d _DYNAMIC
 D _edata
-0000000000000099 T emit_bug_reporting_address
 B _end
 0000000000000004 D exit_failure
 0000000000000008 b file_name
@@ -63,7 +62,7 @@
 0000000000000022 T locale_charset
 0000000000000014 T __lstat
 0000000000000014 t lstat
-0000000000000188 T main
+00000000000000d1 T main
 000000000000000b T make_timespec
 0000000000000004 d nslots
 0000000000000022 t one_argument
@@ -142,16 +141,10 @@
 0000000000000032 T umaxtostr
 0000000000000013 t unary_advance
 00000000000004e5 t unary_operator
-00000000000003d2 T usage
+0000000000000428 T usage
 0000000000000d2d T vasnprintf
 0000000000000013 T verror
 00000000000000ae T verror_at_line
-0000000000000008 D Version
-00000000000000ab T version_etc
-0000000000000018 T version_etc_ar
-000000000000042b T version_etc_arn
-000000000000002f R version_etc_copyright
-000000000000007a T version_etc_va
 000000000000001c r wide_null_string.2840
 0000000000000078 T x2nrealloc
 000000000000000e T x2realloc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main contributors are the version_etc* functions. What do they do?&lt;br&gt;
Let's take a look:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/* The three functions below display the --version information the
   standard way [...]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the 260 lines of expanded, internalized, conditional data formatting methods that make up the --version output. All together they take up about bc &amp;lt;&amp;lt; "ibase=16; 7A+2F+42B+18+AB+8+99" = 1592 bytes.&lt;/p&gt;

&lt;p&gt;What does it mean? It's simple. The extra 4Kb goes to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ /usr/bin/[ --version
[ (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Kevin Braunsdorf and Matthew Bradburn.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;[ --version is missing the final ], so the call is invalid and the result is determined by the implementation. GNU quietly allows version information to be output.&lt;/p&gt;

&lt;p&gt;Meanwhile, /usr/bin/test --version turns out to be a valid call and POSIX dictates that it should return success when the first parameter (--version) is a nonempty string.&lt;/p&gt;

&lt;p&gt;This difference is even mentioned in the documentation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Note: [ is responsible for --help and --version options, while test is not.
test treats each of them simply as a non-empty string.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The puzzle is solved!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>unix</category>
      <category>bash</category>
    </item>
    <item>
      <title>Front-end v/s Back-end</title>
      <author>Kaiwalya Koparkar</author>
      <pubDate>Sun, 02 May 2021 15:49:45 +0000</pubDate>
      <link>https://dev.to/kaiwalyakoparkar/front-end-v-s-back-end-2fkk</link>
      <guid>https://dev.to/kaiwalyakoparkar/front-end-v-s-back-end-2fkk</guid>
      <description>&lt;p&gt;Hello everyone, are you amongst the ones who really get confused while listening to this term. No worries today I am going to explain this to you super quickly using a story. After the end of this blog you will understand the following :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Front-end&lt;/li&gt;
&lt;li&gt;Api's&lt;/li&gt;
&lt;li&gt;Server (Back-end)&lt;/li&gt;
&lt;li&gt;Database (Back-end)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#pushpin-storytime"&gt;
  &lt;/a&gt;
  üìå Storytime!
&lt;/h2&gt;

&lt;p&gt;Okay! so take a daily life example of you being hungry and there's no food at home (Or you are super bored to cook one yourself). So you get your phone give an order to the delivery boy (of any food delivery application). That boy delivery boy goes to the hotel asks the manager for your order. The kitchen prepares your order and hands it over to the manager. Then the manager does the billing tasks and hands it over to the delivery boy. Then the delivery boy delivers it to you and you enjoy your food. üòÉ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-how-is-this-story-relevant-to-frontend-and-backend"&gt;
  &lt;/a&gt;
  Now how is this story relevant to Front-end and Back-end?
&lt;/h3&gt;

&lt;p&gt;Replace the entities of this story with the techs.&lt;/p&gt;

&lt;p&gt;You -&amp;gt; Front-end&lt;br&gt;
Delivery boy -&amp;gt; API&lt;br&gt;
Hotel - Backend (Manager -&amp;gt; server , Kitchen -&amp;gt; Database)&lt;/p&gt;

&lt;p&gt;Front-end gives a call to API. Then API asks the server for the required data is received from the call. The server processes the information and fetches the data from the database. Then server returns the data to the API call. Then the frontend fetches the data from the API.&lt;/p&gt;

&lt;p&gt;Hopefully, you have got a clear picture of how this thing actually works.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If I have explained anything wrong, please do let me know in the comments below. I am still learning and would love to improve my knowledge üòÑ&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  ‚ù§Ô∏è Thank you for reading ‚ù§Ô∏è
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;üåè Like | Follow | Share üåè&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>todayilearned</category>
      <category>programming</category>
      <category>weeklylearning</category>
    </item>
    <item>
      <title>üí™ "#ComeAtMeBro" tag suggestion and üìà "filter by top comments" - two  quick dev.to suggestions! üí°</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 02 May 2021 15:42:07 +0000</pubDate>
      <link>https://dev.to/inhuofficial/comeatmebro-tag-suggestion-and-filter-by-top-comments-two-quick-dev-to-suggestions-44o5</link>
      <guid>https://dev.to/inhuofficial/comeatmebro-tag-suggestion-and-filter-by-top-comments-two-quick-dev-to-suggestions-44o5</guid>
      <description>&lt;p&gt;The title is a bit tongue in cheek, but I do have two serious suggestions and wanted to see what people thought!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-comeatmebro-tag"&gt;
  &lt;/a&gt;
  1. The "ComeAtMeBro" tag
&lt;/h2&gt;

&lt;p&gt;The idea is a tag that you can add to your posts that says "I am open to criticism, in fact I welcome it". (or better yet a checkbox you can tick when creating an article so you don't have to waste a precious tag!) &lt;/p&gt;

&lt;p&gt;This lets people know that they can make suggestions to your posts or even call you out on things you have gotten wrong and you won't delete their comment as it offended you.&lt;/p&gt;

&lt;p&gt;You see for me I find I learn best when I make an assertion ("The Earth is flat") and someone calls me out as an idiot and shows me a load of information that proves me wrong. &lt;/p&gt;

&lt;p&gt;Thanks to people correcting me I now believe, like most people, that the Earth is a sphere (although some girl keeps trying to tell me the Earth is actually an oblate spheroid! I mean she doesn't seriously think I am going to fall for that doe she? üòâ)&lt;/p&gt;

&lt;p&gt;Now I am not actually suggesting we use "#ComeAtMeBro" but something more inclusive, slightly less combatitve and more descriptive like "#OpenToCriticism" or "#AllCommentsWelcome". (Although I have to admit the child in me really wants to see a feed scattered with #comeAtMeBro tags!!)&lt;/p&gt;

&lt;p&gt;This idea was brought about after a few comments I made got deleted, but in particular after I posted a comment on this article (go give the author some love as they are the sort of person we need writing on this site!!):&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/koolkishan" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V39YyZy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--YFtqQq5H--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/521478/00d5a904-1821-4368-80d6-6a63e6f7469f.jpg" alt="koolkishan image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/koolkishan/what-is-virtual-dom-how-virtual-dom-works-what-is-reconciliation-what-is-diffing-algorithm-what-makes-react-so-fast-327a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is Virtual DOM? How Virtual DOM works ? What is Reconciliation ? What is diffing algorithm? What makes React so fast ?&lt;/h2&gt;
      &lt;h3&gt;Kishan Sheth „Éª Apr 27 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;My comment was deleted (the "tone" of my comment did look like I was attacking the author to be fair). Now luckily I reposted with a disclaimer at the start to say I enjoyed the article and the author left it up, but it made me wonder how many good comments (not trying to be big headed üòã) get deleted as the author is offended by them.&lt;/p&gt;

&lt;p&gt;I may be part of a dying breed but I would prefer you call me out on being wrong so that I don't spread misinformation. (something dev.to sadly has a lot of, without any mechanism other than comments to point out incorrect information it is down to people to do their own fact checking....and I am sick of looking like an a$$hole when I try and point it out...I promise I am not actually as much of an a$$hole as I appear to be in my comments! ü§£)&lt;/p&gt;

&lt;p&gt;Anyway that is idea one, a tag for people who want to engage with people who disagree / they can learn from! That leads me nicely on to idea 2:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sort-by-most-commented"&gt;
  &lt;/a&gt;
  2. Sort by most commented
&lt;/h2&gt;

&lt;p&gt;Now this one I imagine will be more popular, I can't be the only one who wants to see "where the action is at". &lt;/p&gt;

&lt;p&gt;I might have missed it but as far as I can tell there is no way to sort posts on dev.to by "most commented".&lt;/p&gt;

&lt;p&gt;Now personally I think the comments are where the real magic happens most of the time. &lt;/p&gt;

&lt;p&gt;Someone will make a one line suggestion that completely changes the way you think about something.&lt;/p&gt;

&lt;p&gt;I also find it a great way to "get a barometer" of how people feel about something.&lt;/p&gt;

&lt;p&gt;Take this post from yesterday I wrote:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/w1y-d2s-a11y-h2e-to-be-so-b4y-c9d-a1d-i10e-38no" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;ü§∑‚Äç‚ôÇÔ∏è W1y d2s a11y h2e to be so b4y c9d a1d i10e? üëø&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª May  1 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;There are some great insights into the problems we have in accessibility and inclusion, the sort of knowledge that I find invaluable! Now the post itself was only mildly popular (which is fine) so some people may miss it and people who want to add to the discussion might just pass it by.&lt;/p&gt;

&lt;p&gt;On the flip side if an article has 200 likes and no comments it makes me think it is a good resource to bookmark but not something that I can "get involved with" (which is great to add to my reading list depending on my mood!)&lt;/p&gt;

&lt;p&gt;More than anything though, I like a "good fight", by which I mean a productive and well structured argument between two people with opposing viewpoints, not a slanging match! Lots of comments normally means "a healthy debate" is going on (and I am aware of the #healthydebate tag, but a lot of the good debates happen where they are not intended!)&lt;/p&gt;

&lt;p&gt;A "good fight" can really be an eye opener no matter which side of the argument you personally agree with, especially when people smarter than me are arguing those points!&lt;/p&gt;

&lt;p&gt;So that is why I want an "order by most commented" option as I think it points to interesting and entertaining articles as well as seeing where the interesting discussions are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h2&gt;

&lt;p&gt;That is it, I only have two ideas floating around in my empty skull at the moment! &lt;/p&gt;

&lt;p&gt;I look forward to seeing what you all think!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>healthydebate</category>
      <category>writing</category>
    </item>
    <item>
      <title>SPACE INVADERS GAME</title>
      <author>Arwaz Khan </author>
      <pubDate>Sun, 02 May 2021 15:38:06 +0000</pubDate>
      <link>https://dev.to/arwazkhan189/space-invaders-game-2hi7</link>
      <guid>https://dev.to/arwazkhan189/space-invaders-game-2hi7</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello Dev's&lt;/strong&gt;&lt;br&gt;
Finally Completed the SPACE INVADERS Game ...&lt;br&gt;
Download the game from this link: &lt;a href="https://arwazkhan189.github.io/SPACE-INVADERS/"&gt;https://arwazkhan189.github.io/SPACE-INVADERS/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQjxFv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bbo3rajqyhl1tbhh6d2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQjxFv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bbo3rajqyhl1tbhh6d2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please give your feedback to improve the game.&lt;/p&gt;

</description>
      <category>python</category>
      <category>pygame</category>
      <category>spaceinvaders</category>
    </item>
    <item>
      <title>Cloud Computing, an Introduction‚Ä¶
</title>
      <author>Marita Thushari</author>
      <pubDate>Sun, 02 May 2021 15:29:38 +0000</pubDate>
      <link>https://dev.to/ucscmozilla/cloud-computing-an-introduction-27ik</link>
      <guid>https://dev.to/ucscmozilla/cloud-computing-an-introduction-27ik</guid>
      <description>&lt;p&gt;In this era of technology everyone tends to search for the best solution or resource for an affordable cost. The concept of Cloud Computing paves the way for this search easily and it has been a great solution for many during this pandemic as well. In this article a brief introduction will be discussed on the concept of Cloud Computing and how it becomes an easy &amp;amp; affordable solution in many situations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cloud-computing"&gt;
  &lt;/a&gt;
  What is Cloud Computing?
&lt;/h2&gt;

&lt;p&gt;Cloud Computing is the concept that delivers computing services over the Internet using the ‚ÄòPay-as-you-go‚Äô pricing model, which means payment is done only for the usage of the services provided. Therefore, this is also called ‚ÄòConsumption-based model‚Äô. Due to this model it becomes typically cheaper when compared to purchasing the required hardware components for computing.&lt;/p&gt;

&lt;p&gt;The main services provided by Cloud computing are Computing power and Storage. There are other services provided such as Networking, Database management, etc. These cloud services are provided by various Cloud Service providers and the users who are called the Cloud tenants pay for the services they use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features‚Ä¶
&lt;/h2&gt;

&lt;p&gt;Cloud Computing holds various advantages such as Reliability &amp;amp; High availability as it is accessible from multiple devices across the globe, Scalability as resources can be increased to cater the demand accordingly, Elasticity as resources can be allocated and deallocated for users, Agility, Geo distribution as devices that are distributed across the globe are connected with each other which also provides Fault Tolerance and Disaster recovery.&lt;/p&gt;

&lt;p&gt;Cost savings is one of the major advantage due to the ability of paying only for the service used which also means that there is no Capital cost needed. High speed and Ability to deploy more new services easily than when using them on-premises are also some other available advantages.&lt;/p&gt;

&lt;p&gt;The disadvantages are that complexity may be increased when migrating the data &amp;amp; apps that are already existing to cloud platforms and Internet connectivity is required to use &amp;amp; access the cloud services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-service-models"&gt;
  &lt;/a&gt;
  Cloud Service Models‚Ä¶
&lt;/h2&gt;

&lt;p&gt;The main Cloud Service models are Infrastructure as a Service (IaaS), Platform as a Service (PaaS) and Software as a Service (SaaS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IaaS&lt;/strong&gt; - Produces the computer infrastructure (hardware components) as the cloud service, Cloud tenant should be responsible for OS maintenance and Network configurations. Eg: Virtual Machines&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PaaS&lt;/strong&gt; - Produces the platforms required for applications as the cloud service by managing the hosting environment, Cloud tenant is only required to deploy their applications. Eg: Azure App Services&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS&lt;/strong&gt; - Manages all aspects of the application environment therefore Cloud tenant only needs to provide the required data that is to be processed or stored. Eg: Office 365 from Microsoft, Google Drive&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-deployment-models"&gt;
  &lt;/a&gt;
  Cloud Deployment Models‚Ä¶
&lt;/h2&gt;

&lt;p&gt;The main Cloud deployment models are Public cloud, Private cloud and Hybrid cloud. The describe on how the cloud services are provided and used by the users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public cloud&lt;/strong&gt; ‚Äì Cloud services are provided to anyone over the public Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Private cloud&lt;/strong&gt; ‚Äì Cloud services are exclusively used by users of a business or an organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hybrid cloud&lt;/strong&gt; ‚Äì Builds a connectivity between the Public and Private clouds allowing the data to be shared between them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--93gzZLoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.24slides.com/templates/upload/templates-previews/QDznvaI0e4zdUjeG0xAaIBZmvxn6P2Rm1n58jMM6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--93gzZLoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.24slides.com/templates/upload/templates-previews/QDznvaI0e4zdUjeG0xAaIBZmvxn6P2Rm1n58jMM6.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-the-cloud-services-can-be-accessed"&gt;
  &lt;/a&gt;
  How can the Cloud Services can be accessed?
&lt;/h2&gt;

&lt;p&gt;There are many Cloud Service providers at present and there can be more in the near future as well. These Cloud Service Providers provide many services that can be used by anyone through internet. Some of the main Cloud Service providers are AWS from Amazon, Microsoft Azure from Microsoft, Google Cloud from Google and many more. Each of these solutions have their own unique and common characteristics in their available cloud services. And the costs related to each service can also differ among the various service providers. Therefore, it would be easy for anyone to practice these solutions first and then select the most suitable one for their implementation purposes. Most of these Cloud Service providers provide a free trial for this purpose.&lt;/p&gt;

&lt;p&gt;For more details about Microsoft Azure click on &lt;br&gt;
&lt;a href="https://azure.microsoft.com/en-us/"&gt;https://azure.microsoft.com/en-us/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details about AWS click on &lt;br&gt;
&lt;a href="https://aws.amazon.com/"&gt;https://aws.amazon.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more details about Google Cloud click on&lt;br&gt;
&lt;a href="https://cloud.google.com/"&gt;https://cloud.google.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--esAjjThn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://csharpcorner.azureedge.net/article/top-10-cloud-service-providers/Images/Top%2520cloud%2520providers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--esAjjThn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://csharpcorner.azureedge.net/article/top-10-cloud-service-providers/Images/Top%2520cloud%2520providers.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Due to the above existing features of Cloud computing, it is obvious to consider that most of the next-gen businesses will be built on this platform.&lt;/p&gt;

</description>
      <category>cloudcomputing</category>
      <category>technology</category>
      <category>article</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>What is Output ‚Äî Webpack 5
</title>
      <author>Yadhunandan S</author>
      <pubDate>Sun, 02 May 2021 15:27:20 +0000</pubDate>
      <link>https://dev.to/yadhus/what-is-output-webpack-5-cho</link>
      <guid>https://dev.to/yadhus/what-is-output-webpack-5-cho</guid>
      <description>&lt;p&gt;&lt;strong&gt;Before continuing the article, please refer to the below link if you have missed the introduction to webpack 5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yadhus/introduction-to-webpack-5-5fhm"&gt;https://dev.to/yadhus/introduction-to-webpack-5-5fhm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/yadhus/what-is-entry-webpack-5-1cb5"&gt;https://dev.to/yadhus/what-is-entry-webpack-5-1cb5&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-output"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Output&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Output is a property that tells webpack where to emit / save the bundles it creates and how to name these bundled files. By default the main output file gets stored in &lt;code&gt;./dist/main.js&lt;/code&gt; and other generated files are stored in &lt;code&gt;./dist&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#single-or-multimain-entry-points"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Single or Multi-main entry points&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Though the &lt;a href="https://dev.to/yadhus/what-is-entry-webpack-5-1cb5"&gt;entry property&lt;/a&gt; can have one or multi paths, there can be only one output configuration specified.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dist /
 - main.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h4&gt;

&lt;p&gt;The webpack‚Äôs default configuration for the output property looks something like this&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

 &lt;span class="c1"&gt;// default output configuration&lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;[name]&lt;/code&gt; resolves to the dynamic name of the bundle. Here it resolves to &lt;code&gt;main.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want the default configuration, it is not required to mention the output property. Webpack understands and apply it implicitly.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#object-entry-points"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Object entry points&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;While webpack can have multiple different &lt;a href="https://dev.to/yadhus/what-is-entry-webpack-5-1cb5"&gt;entry points&lt;/a&gt;, only one output configuration can be specified.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;adminApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/admin.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;homeApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;

 &lt;span class="c1"&gt;// default output configuration &lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dist /
 - adminApp.js
 - homeApp.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#advanced"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Advanced&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Apart from path and filename sub properties of the Output property. There are few other sub properties that are used often in the build process (like &lt;a href="https://create-react-app.dev/"&gt;CRA&lt;/a&gt; etc.). Some of them are listed below.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pathinfo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;PathInfo&lt;/strong&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;adminApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/admin.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;homeApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;pathInfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This tells webpack to include comments in bundles with information about the contained modules (filename comments). It also adds some info about &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Tree_shaking"&gt;tree shaking&lt;/a&gt; to the generated bundle.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#chunkfilename"&gt;
  &lt;/a&gt;
  &lt;strong&gt;ChunkFilename&lt;/strong&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;adminApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/admin.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;homeApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;pathInfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;chunkFilename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="na"&gt;contenthash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;contenthash:8&lt;/code&gt; generates a dynamic hash value based on the contents of the files and the ‚Äò&lt;code&gt;:8&lt;/code&gt;‚Äô represents the length of the hash value. If the contents of the files are not changed, then the same hash value is generated.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;chunkFilename&lt;/code&gt; determines the name of the non-initial chunk files (like lazy loaded or dynamically imported modules). These filenames need to be generated at runtime to send request for the chunks.&lt;/p&gt;

&lt;p&gt;Because of this, placeholders like &lt;code&gt;[name]&lt;/code&gt; and &lt;code&gt;[contenthash]&lt;/code&gt; need to add a mapping from chunk id (&lt;code&gt;[id]&lt;/code&gt;) to placeholder value (&lt;code&gt;[name].[contenthash:8].chunk.js&lt;/code&gt;) to the output bundle with the webpack runtime. This increases the size and may invalidate the bundle when placeholder value for any chunk changes.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#publicpath"&gt;
  &lt;/a&gt;
  &lt;strong&gt;PublicPath&lt;/strong&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;adminApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/admin.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;homeApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;pathInfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;chunkFilename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="na"&gt;contenthash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://server.com/assets/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; 
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;publicPath&lt;/code&gt; is where you have uploaded the bundled files. This is an important option when using on-demand-loading or loading external resources like images, files, etc.&lt;/p&gt;

&lt;p&gt;This option specifies the public URL of the output directory when referenced in a browser. A relative URL is resolved relative to the HTML page (or &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag). Server-relative URLs, protocol-relative URLs or absolute URLs are also possible and sometimes required, i.e. when hosting assets on a CDN.&lt;/p&gt;

&lt;p&gt;In the above code snippet, the request to the chunk file will look something like this &lt;code&gt;https://server.com/assets/1.a345ersd.chunk.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The webpack-dev-server also takes a hint from &lt;code&gt;publicPath&lt;/code&gt;, using it to determine where to serve the output files from.&lt;/p&gt;

&lt;p&gt;By default, the publicPath value is set to ‚Äò/‚Äô.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#globalobject"&gt;
  &lt;/a&gt;
  &lt;strong&gt;GlobalObject&lt;/strong&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;adminApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/admin.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;homeApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/home.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;pathInfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;chunkFilename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;].[&lt;/span&gt;&lt;span class="na"&gt;contenthash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://server.com/assets/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;globalObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;this&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When targeting a library, especially when &lt;code&gt;libraryTarget&lt;/code&gt; is '&lt;code&gt;umd&lt;/code&gt;', this option indicates what global object will be used to mount the library.&lt;/p&gt;

&lt;p&gt;To make &lt;a href="https://github.com/umdjs/umd"&gt;UMD&lt;/a&gt; build available on both browsers and Node.js, set &lt;code&gt;globalObject&lt;/code&gt; option to '&lt;code&gt;this&lt;/code&gt;'.&lt;/p&gt;

&lt;p&gt;Defaults to &lt;code&gt;self&lt;/code&gt; / &lt;code&gt;window&lt;/code&gt; for Web-like targets.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#the-webpack-configuration-file-specifically-to-highlight-output-property"&gt;
  &lt;/a&gt;
  The webpack configuration file specifically to highlight output property:
&lt;/h4&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#github-repo-link"&gt;
  &lt;/a&gt;
  &lt;strong&gt;GitHub Repo Link&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/yadhus/What-is-Output-Webpack-5"&gt;https://github.com/yadhus/What-is-Output-Webpack-5&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://webpack.js.org/configuration/output/"&gt;https://webpack.js.org/configuration/output/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webpack.js.org/concepts/#output"&gt;https://webpack.js.org/concepts/#output&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webpack</category>
      <category>javascript</category>
      <category>react</category>
      <category>angular</category>
    </item>
    <item>
      <title>Contactless Attendance System based on Face Recognition</title>
      <author>Dhruv Panchal</author>
      <pubDate>Sun, 02 May 2021 15:14:23 +0000</pubDate>
      <link>https://dev.to/dhhruv/contactless-attendance-system-based-on-face-recognition-hah</link>
      <guid>https://dev.to/dhhruv/contactless-attendance-system-based-on-face-recognition-hah</guid>
      <description>&lt;p&gt;&lt;strong&gt;A Contactless Attendance System where your face is identified for Attendance.&lt;/strong&gt; ‚ú®&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#motivation-astonished"&gt;
  &lt;/a&gt;
  Motivation üò≤
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This Repository was created as a part of MINeD Hackathon, a national level hackathon organized by Centre of Excellence in Data Science at the CSE Department of Nirma University.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We seek to provide a valuable attendance service for employees. Reduce manual process errors by provide automated and a reliable attendance system uses facial recognition technology.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#features-clipboard"&gt;
  &lt;/a&gt;
  Features üìã
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check Camera&lt;/li&gt;
&lt;li&gt;Capture Faces&lt;/li&gt;
&lt;li&gt;Train Faces&lt;/li&gt;
&lt;li&gt;Recognize Faces &amp;amp; Attendance&lt;/li&gt;
&lt;li&gt;Automatic Email


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#screenshots-camera"&gt;
  &lt;/a&gt;
  Screenshots üì∑
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#1-gui"&gt;
  &lt;/a&gt;
  1. GUI
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fUCyVPp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ckdgl54fep049z00p21.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fUCyVPp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ckdgl54fep049z00p21.PNG" alt="GUI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-command-line-interface"&gt;
  &lt;/a&gt;
  2. Command Line Interface
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CaIdtTWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b39w5v9gmngxkm2nvamh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CaIdtTWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b39w5v9gmngxkm2nvamh.PNG" alt="Command Line Interface"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-checking-camera"&gt;
  &lt;/a&gt;
  3. Checking Camera
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qTlGG9UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnvt5fzwovwo0us1fjz6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTlGG9UY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnvt5fzwovwo0us1fjz6.jpg" alt="Checking Camera"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-recognize-image"&gt;
  &lt;/a&gt;
  4. Recognize Image
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nTEfbWY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2tjf7bhz0y7ayb3w3f7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTEfbWY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2tjf7bhz0y7ayb3w3f7.jpg" alt="Recognize Image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-automail"&gt;
  &lt;/a&gt;
  5. Automail
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMKyyeQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uabe7cx3joih0g3e50pe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMKyyeQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uabe7cx3joih0g3e50pe.jpeg" alt="Automail"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#tech-stack-used-computer"&gt;
  &lt;/a&gt;
  Tech Stack Used üíª
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Build With -&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python 3.8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Modules Used -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenCV Contrib&lt;/li&gt;
&lt;li&gt;Pillow&lt;/li&gt;
&lt;li&gt;Numpy&lt;/li&gt;
&lt;li&gt;Pandas&lt;/li&gt;
&lt;li&gt;Shutil&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;li&gt;yagmail&lt;/li&gt;
&lt;li&gt;Tkinter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Facial Recognition Algorithms -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Haar Cascade&lt;/li&gt;
&lt;li&gt;LBPH (Local Binary Pattern Histogram)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Softwares Used -&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pycharm 2019.2&lt;/li&gt;
&lt;li&gt;VS CODE &lt;/li&gt;
&lt;li&gt;Jupyter Notebook&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installation-key"&gt;
  &lt;/a&gt;
  Installation üîë
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#create-environment"&gt;
  &lt;/a&gt;
  Create Environment
&lt;/h3&gt;

&lt;p&gt;First open the terminal or command line in the IDE and copy the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m venv venv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then activate the virtual enviroment using the code below for windows.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.\venv\Scripts\activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note: If your pc don't have virtual enviroment or pip install the follow this link. &lt;a href="https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/"&gt;How to create Virtual Enviroment&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#installing-the-packages"&gt;
  &lt;/a&gt;
  Installing the Packages
&lt;/h3&gt;

&lt;p&gt;After creating the enviroment on your project, let's install the necessary packages. &lt;/p&gt;

&lt;p&gt;To install those package open the terminal or command line and paste the code from below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note: During the package installation, sometimes it shows errors due to package dependencies and to avoid those error you can install those packages as admin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#test-run-bicyclist"&gt;
  &lt;/a&gt;
  Test Run üö¥
&lt;/h2&gt;

&lt;p&gt;After creating the virtual environment and installing the packages, open the IDE terminal to run the program.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To use Command Line Version Use:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;py main.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;To use GUI Version Use:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;py main_gui.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Test Run for CAS as shown below:-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4OUS7lT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60m9wd8dj0ggrc998vfc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4OUS7lT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60m9wd8dj0ggrc998vfc.gif" alt="Test Run"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use-pencil"&gt;
  &lt;/a&gt;
  How To Use? üìù
&lt;/h2&gt;

&lt;p&gt;If you want to use it then follow the steps below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First download or clone the repository.&lt;/li&gt;
&lt;li&gt;Import the project to your preferable IDE.
Recommended : PyCharm&lt;/li&gt;
&lt;li&gt;Create a python virtual environment.&lt;/li&gt;
&lt;li&gt;Install all the packages from &lt;a href="https://github.com/dhhruv/Contactless-Attendance-System/blob/master/requirements.txt"&gt;requirements.txt&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Change the mail information in the &lt;a href="https://github.com/dhhruv/Contactless-Attendance-System/blob/master/Info.py"&gt;Info.py&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Run the project using the Command Prompt or PowerShell or your IDE Terminal Button.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#for-more-updates-check-the-github-repository"&gt;
  &lt;/a&gt;
  For more Updates check the GitHub Repository:
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dhhruv"&gt;
        dhhruv
      &lt;/a&gt; / &lt;a href="https://github.com/dhhruv/Contactless-Attendance-System"&gt;
        Contactless-Attendance-System
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚ú® A Contactless Attendance System where your face is identified for Attendance. 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#team-"&gt;
  &lt;/a&gt;
  Team :
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/Neelshah997"&gt;Neel Shah&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dhhruv"&gt;Dhruv Panchal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/urvesh254"&gt;Urvesh Patel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nirami98"&gt;Nirja Desai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/msCurious28"&gt;Payal Devalia&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>python</category>
    </item>
  </channel>
</rss>
