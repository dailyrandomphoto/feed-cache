<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Update on Windows 11 in React Js 💻🌈 (Unofficial)</title>
      <author>Blue edge</author>
      <pubDate>Fri, 12 Nov 2021 15:49:36 +0000</pubDate>
      <link>https://dev.to/blueedgetechno/update-on-windows-11-in-react-js-unofficial-2m87</link>
      <guid>https://dev.to/blueedgetechno/update-on-windows-11-in-react-js-unofficial-2m87</guid>
      <description>&lt;p&gt;Hello devs,&lt;/p&gt;

&lt;p&gt;So this is a follow up of my &lt;a href="https://dev.to/blueedgetechno/windows-11-in-react-js-hd3"&gt;previous post&lt;/a&gt; about the remaking of windows 11 in ReactJs.&lt;/p&gt;

&lt;p&gt;Visit: &lt;a href="http://win11.blueedge.me"&gt;win11.blueedge.me&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/blueedgetechno/win11React"&gt;blueedgetechno/win11React&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/qmEZwUhb4b"&gt;discord.gg/qmEZwUhb4b&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a few months of regular updates and huge support from the community, we have been able to add dozens of features and lots of enhancements.&lt;/p&gt;

&lt;p&gt;This version presents you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Dark mode and ton of CSS optimizations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A fully featured and community-backed store system to download external applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New apps like Spotify, Discord, Camera, Store (updated), and a lot more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Native features like Context menu, Action center, Lockscreen, Boot Screen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lot more responsive for mobile and tablets.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And a lot more on my bucket list ...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  Preview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9Gf_wv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj0nd5np1l4wypdqarfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9Gf_wv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj0nd5np1l4wypdqarfn.png" alt="winvslight" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mO9GybdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lidaz7e00jf96o03xcrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mO9GybdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lidaz7e00jf96o03xcrr.png" alt="store&amp;amp;spotify" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyFx8H1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/con4vecc2hzpaxssy3hn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyFx8H1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/con4vecc2hzpaxssy3hn.png" alt="contextmenu" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEEZei8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5b9ghwwgoxr6ujpys9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEEZei8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5b9ghwwgoxr6ujpys9u.png" alt="widget" width="880" height="558"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, There were a lot of hiccups during the development of this project. We even faced a backlash from Microsoft for trademark violation but we managed our way through.&lt;/p&gt;

&lt;p&gt;Special thanks to &lt;a class="mentioned-user" href="https://dev.to/andrewstech"&gt;@andrewstech&lt;/a&gt;
 for being so helpful during the entire process.&lt;/p&gt;

&lt;p&gt;Visit: &lt;a href="http://win11.blueedge.me"&gt;win11.blueedge.me&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/blueedgetechno/win11React"&gt;blueedgetechno/win11React&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/qmEZwUhb4b"&gt;discord.gg/qmEZwUhb4b&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>javascript</category>
      <category>design</category>
    </item>
    <item>
      <title>How to make a TailwindCSS SaaS Landing Page in record time</title>
      <author>Haris#</author>
      <pubDate>Fri, 12 Nov 2021 15:38:11 +0000</pubDate>
      <link>https://dev.to/harishash/how-to-make-a-tailwindcss-saas-landing-page-in-record-time-152b</link>
      <guid>https://dev.to/harishash/how-to-make-a-tailwindcss-saas-landing-page-in-record-time-152b</guid>
      <description>&lt;p&gt;Hi everyone,&lt;br&gt;
My name is Haris and today I’ll be showing you how to make a SaaS Landing Page with TailwindCSS within 5 minutes, and the best part is that it’ll be totally free! So, let’s jump right in!&lt;/p&gt;

&lt;p&gt;To make this Landing Page, we’ll be using the blox extension for VS Code. You can grab it for free &lt;a href="https://bit.ly/30mBC4U"&gt;here&lt;/a&gt; on VS Code Marketplace.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WTory9Xm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ewcnfm70vt4oo8gormd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTory9Xm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ewcnfm70vt4oo8gormd.png" alt="blox VS code Marketplace" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start things off with a hero section. I'll be using &lt;code&gt;Center Aligned with Image&lt;/code&gt; for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgKvdweL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa6bunkbuvgvi7z4xhtj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgKvdweL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa6bunkbuvgvi7z4xhtj.png" alt="Hero Section" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up we’ll add a Feature section. Here you can highlight the main features of your product. For that purpose &lt;code&gt;Feature 7&lt;/code&gt; will work just fine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KIv3uZfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0x4kf4kyjuesaf08b5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIv3uZfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0x4kf4kyjuesaf08b5x.png" alt="Feature Section" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the feature section, we can add a Pricing section to showcase the offerings of the product. We’ll go with &lt;code&gt;3 Cards with Yellow Hover&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teqPu1aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c835amv64wjaf7brufuy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teqPu1aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c835amv64wjaf7brufuy.png" alt="Pricing Section" width="512" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ll close things off with a CTA and I think &lt;code&gt;Right Aligned Avatars with Gradient&lt;/code&gt; will look perfect for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2PBJoxQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkwfp8smrv0awm9zhu25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2PBJoxQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkwfp8smrv0awm9zhu25.png" alt="CTA Section" width="512" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And just like that, we’re done with the first draft of the SaaS Landing Page. Here’s how the end product looks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aapitohd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghls655z95zhezz62ov4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aapitohd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghls655z95zhezz62ov4.gif" alt="Final Preview GIF" width="600" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since blox offers support for other frameworks like React, Angular and Vue, the same page can be developed for those projects as well. So with just a couple of clicks, we can set up the structure for our TailwindCSS landing page and make modifications according to the project from that point onwards. Hope this helps you save your precious developer hours.&lt;/p&gt;

&lt;p&gt;You can access the page that I made here at: &lt;a href="https://github.com/vs-blox/examples"&gt;https://github.com/vs-blox/examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Developing!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Editing API Driver API Profiles </title>
      <author>Jerod Johnson</author>
      <pubDate>Fri, 12 Nov 2021 15:28:44 +0000</pubDate>
      <link>https://dev.to/jerodimusprime/editing-api-driver-api-profiles-m63</link>
      <guid>https://dev.to/jerodimusprime/editing-api-driver-api-profiles-m63</guid>
      <description>&lt;p&gt;RESTful APIs offer a straightforward way for businesses to work with external data and offer access to their own data. With more than 24,000 public APIs providing access to limitless data and the typical enterprise leveraging more than 200 applications, teams and developers need more efficient ways to query API data. With the CData API Driver, it is easier than ever to integrate with APIs at scale for data analytics and application development. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-the-api-driver"&gt;
  &lt;/a&gt;
  Why use the API Driver?
&lt;/h2&gt;

&lt;p&gt;Use simple SQL to access and work with data anywhere there’s an API. Like all &lt;a href="https://www.cdata.com/drivers/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=editing-api-driver-api-profiles"&gt;CData Drivers&lt;/a&gt;, the CData API Driver makes it easier to work with your data. With the API Driver and the available API Profiles, you can instantly and codelessly query dozens of APIs (including any APIs built using the &lt;a href="https://www.cdata.com/apiserver/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=editing-api-driver-api-profiles"&gt;CData API Server&lt;/a&gt;) from BI, data integration, and custom applications.  &lt;/p&gt;

&lt;p&gt;Thanks to its extensible design, organizations and developers can modify API Profiles from API Server to customize integrations and even create their own API Profiles. Easily expand the connectivity offered by API Driver to any RESTful API. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#editing-an-api-profile"&gt;
  &lt;/a&gt;
  Editing an API Profile
&lt;/h1&gt;

&lt;p&gt;By default, existing API Profiles grant read access to APIs. We can edit the API Profiles to gain write access to APIs (where supported). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unzip-the-existing-profile"&gt;
  &lt;/a&gt;
  Unzip the Existing Profile
&lt;/h2&gt;

&lt;p&gt;API Profiles (.apip files) are compressed folders that contain a collection of schema files representing the endpoints available for the API. When you decompress (unzip) the file, you can edit the schema files individually to extend the functionality. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkDkVzQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqum8t6f0dh5zojgao37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkDkVzQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqum8t6f0dh5zojgao37.png" alt="Image description" width="854" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-the-schema-file"&gt;
  &lt;/a&gt;
  Open the Schema File
&lt;/h2&gt;

&lt;p&gt;Once the Profile is decompressed, open the schema file for the API endpoint you wish to modify (in your preferred text editor). Each schema file has several parts that define how SQL access is enabled for an API endpoint. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;api:info: This keyword maps API fields to table columns through scripted column definitions. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;attr: This element represents a column definition (details are below). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;api:set attr="...": This keyword (attribute) sets various parameters for the API integration, including paging functionality and information on how to parse the API response (via the RepeatElement attribute). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;api:script method="...": This keyword defines how read and write functionality is implemented for the API endpoint, including which internal operation is called and how specific functionality like filtering is managed. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the full contents of a the schema file for retrieving Zoom Meetings. &lt;/p&gt;

&lt;p&gt;Meetings.rsd &lt;/p&gt;































&lt;p&gt;&lt;a href="/api:info"&gt;/api:info&lt;/a&gt; &lt;/p&gt;

























&lt;p&gt;&lt;a&gt;api:push/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:call"&gt;/api:call&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update-column-definitions"&gt;
  &lt;/a&gt;
  Update Column Definitions
&lt;/h2&gt;

&lt;p&gt;If we are going to implement write functionality, we need to modify the schema to allow write permissions to the appropriate columns. Before we update a column definition for the Profile, let's examine a single column definition and discuss the different attributes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#id-column-definition"&gt;
  &lt;/a&gt;
  Id Column Definition
&lt;/h2&gt;



&lt;h2&gt;
  &lt;a href="#column-definition-attributes"&gt;
  &lt;/a&gt;
  Column Definition Attributes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;name: The name of the column in the SQL interface for the API endpoint &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xs:type: The data type associated with the column (e.g.: string, datetime, int, etc.) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;readonly: Whether the column allows writes (by default, this is always true) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;key: Whether a column is intended to be a unique identifier for the elements in a table/view &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;other:xPath: The path (exact or relative to theRepeatElement) in the API response to the column value &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can see from the schema file that most of the columns (which correspond to various API fields) are flagged as read-only. The first edit we need to make is to change those columns so the API Driver can write to them (based on the API specification) by removing the read-only flags: &lt;/p&gt;

&lt;p&gt;... &lt;/p&gt;





















&lt;p&gt;... &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-insert-functionality"&gt;
  &lt;/a&gt;
  Add INSERT Functionality
&lt;/h2&gt;

&lt;p&gt;In this section, we walk through modifying the Schema file to support INSERT statements like the following: &lt;/p&gt;

&lt;p&gt;INSERT INTO Meetings &lt;/p&gt;

&lt;p&gt;(Topic,Type,StartTime,Duration,TimeZone,UserId) &lt;/p&gt;

&lt;p&gt;VALUES &lt;/p&gt;

&lt;p&gt;('Test Meeting',2,'2019-12-31T00:00:00',60,'EST','&lt;a href="mailto:user@domain.com"&gt;user@domain.com&lt;/a&gt;') &lt;/p&gt;

&lt;p&gt;NOTE: Topic, Type, StartTime, Duration, and TimeZone are all columns in our schema. The UserId attr is a pseudocolumn, which behaves like a table column but is not actually stored in the table. In this case, the UserId is used to POST the new meeting to a specific user account. &lt;/p&gt;

&lt;p&gt;In the schema file, the SELECT functionality is implemented in the  element: &lt;/p&gt;







&lt;p&gt;&lt;a&gt;api:push/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:call"&gt;/api:call&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To implement INSERT functionality, we need to modify the  element, setting the method attribute value to "POST", setting the input values in a data attribute and calling the appropriate operation (apisadoExecuteJSONGet in this case). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-the-method-attribute"&gt;
  &lt;/a&gt;
  Setting the method Attribute
&lt;/h3&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-the-data-attribute"&gt;
  &lt;/a&gt;
  Setting the data Attribute
&lt;/h3&gt;

&lt;p&gt;The Zoom Meetings API endpoint allows you to create a new meeting by submitting a JSON object with various fields for the new meeting. Values from an INSERT statement are mapped to corresponding fields in an _input object and are used to create the data attribute, which will be POSTed to the Zoom API. &lt;/p&gt;



&lt;p&gt;{ &lt;/p&gt;

&lt;p&gt;"topic": "[_input.Topic]", &lt;/p&gt;

&lt;p&gt;"type": [_input.Type], &lt;/p&gt;

&lt;p&gt;"start_time": "[_input.StartTime]", &lt;/p&gt;

&lt;p&gt;"duration": "[_input.Duration]", &lt;/p&gt;

&lt;p&gt;"timezone": "[_input.TimeZone]" &lt;/p&gt;

&lt;p&gt;} &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:set"&gt;/api:set&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calling-the-apisadoexecutejsonget-operation"&gt;
  &lt;/a&gt;
  Calling the apisadoExecuteJSONGet Operation
&lt;/h3&gt;

&lt;p&gt;Once the data attribute is set, call the apisadoExecuteJSONGet operation using an api:call keyword and push the operation to the API Driver with an api:push keyword. &lt;/p&gt;



&lt;p&gt;... &lt;/p&gt;



&lt;p&gt;&lt;a&gt;api:push&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:push"&gt;/api:push&lt;/a&gt;&lt;a href="/api:call"&gt;/api:call&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-edited-profile"&gt;
  &lt;/a&gt;
  Using the Edited Profile
&lt;/h2&gt;

&lt;p&gt;With the edits made to the schema file, you are ready to start INSERTing Meetings to a Zoom account. Save the schema file, recompress (zip) the schema files, and change the extension of the compressed file to .apip. Use an application that supports standard connectivity to connect to the API Profile using the API Driver, then submit your INSERT statement. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#insert-statement"&gt;
  &lt;/a&gt;
  INSERT Statement
&lt;/h1&gt;

&lt;p&gt;INSERT INTO Meetings &lt;/p&gt;

&lt;p&gt;(Topic,Type,StartTime,Duration,TimeZone,UserId) &lt;/p&gt;

&lt;p&gt;VALUES &lt;/p&gt;

&lt;p&gt;('Test Meeting (Edited Profile)',2,'2019-12-31T00:00:00',60,'EST','&lt;a href="mailto:user@domain.com"&gt;user@domain.com&lt;/a&gt;') &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#meeting-in-zoom"&gt;
  &lt;/a&gt;
  Meeting in Zoom
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKdAq0iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmk4l5de7ss46ftb1wa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKdAq0iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmk4l5de7ss46ftb1wa.png" alt="Image description" width="725" height="762"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More Information
&lt;/h1&gt;

&lt;p&gt;The CData API Drivers simplify data connectivity for a wide range of popular data tools. Connect BI, Reporting, &amp;amp; ETL tools to live data from any application, database, or Web API. Built on the same robust SQL engine that powers other CData Drivers, the &lt;a href="https://www.cdata.com/apidriver/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=editing-api-driver-api-profiles"&gt;CData API Driver&lt;/a&gt; enables simple codeless query access to APIs through a single client interface. &lt;/p&gt;

</description>
      <category>automation</category>
      <category>connectivity</category>
      <category>database</category>
      <category>integration</category>
    </item>
    <item>
      <title>A React Material UI Library to Build Any Form With Only JSON Config</title>
      <author>Jeremy</author>
      <pubDate>Fri, 12 Nov 2021 15:26:13 +0000</pubDate>
      <link>https://dev.to/jeremyling/a-react-material-ui-library-to-build-any-form-with-only-json-config-5ck5</link>
      <guid>https://dev.to/jeremyling/a-react-material-ui-library-to-build-any-form-with-only-json-config-5ck5</guid>
      <description>&lt;p&gt;Suppose we want to create a form to collect shipping address. Here's how we can replicate the form below with just JSON config and the open-source library I built &lt;a href="https://github.com/jzcling/react-material-ui-form-builder"&gt;&lt;code&gt;@jeremyling/react-material-ui-form-builder&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/shipping-address-yjslw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-json-config"&gt;
  &lt;/a&gt;
  The JSON Config
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shipping Address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;display-text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;titleProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;userSelect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;fontVariant&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;small-caps&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;marginBottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;First Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firstName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;First Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Last Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lastName&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Last Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Address Line 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;address1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Address 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Address Line 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;address2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Address 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;City&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;City&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;State&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;state&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;State&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Postcode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;postcode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Postcode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;validationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Same as Billing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;optionConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sameAsBilling&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;checkbox-group&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#standard-code-for-all-forms"&gt;
  &lt;/a&gt;
  Standard Code For All Forms
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FormBuilder&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@jeremyling/react-material-ui-form-builder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@mui/material&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isEmpty&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;refs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ShippingAddress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setForm&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;refs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateForm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updates&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;setForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleNext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;refs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FormBuilder&lt;/span&gt;
        &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;updateForm&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updateForm&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;refs&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;refs&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;
        &lt;span class="na"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"contained"&lt;/span&gt;
        &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary"&lt;/span&gt;
        &lt;span class="na"&gt;sx&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleNext&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Next
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h3&gt;

&lt;p&gt;Here, we only use a few components from the library, &lt;code&gt;display-text&lt;/code&gt;, &lt;code&gt;text-field&lt;/code&gt; and &lt;code&gt;checkbox-group&lt;/code&gt;. There are many more you can use. You can view the &lt;a href="https://github.com/jzcling/react-material-ui-form-builder#field-props"&gt;documentation here&lt;/a&gt;. Just note, in general, all input components would have these core field props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;State&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Display text above the input&lt;/span&gt;
  &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;State&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Input label&lt;/span&gt;
  &lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;state&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Attribute of the form to set/control&lt;/span&gt;
  &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Type of component&lt;/span&gt;
  &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Breakpoints and corresponding width (1 - 12)&lt;/span&gt;
    &lt;span class="nl"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;sm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;validations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Any validations accepted by yup&lt;/span&gt;
    &lt;span class="nl"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/[a-z]/i&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Can only contain letters&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding Remarks
&lt;/h3&gt;

&lt;p&gt;I actually created the form above with 3 clicks and a few renames on &lt;a href="https://build.formblob.com/builder"&gt;FormBlob&lt;/a&gt;. Try it out and make building forms a breeze. If you're a developer, &lt;a href="https://build.formblob.com/p/05f25c5d-0f7b-446b-931c-afd2d876499b"&gt;contact us&lt;/a&gt; and I'll turn on a feature for you to export the forms you build into your own project. Alternatively, you can even build and deploy a hosted form entirely on FormBlob and embed the form in your own domain. If you use this method, you don’t have to use React in your app and it still works out of the box!&lt;/p&gt;

&lt;p&gt;If data privacy is a concern, you can define webhooks to call on each submission to pass the form data to your own backend. If you choose, FormBlob does not store any data on our servers beyond the form structure.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Understanding Transitional JavaScript Apps</title>
      <author>Ryan Carniato</author>
      <pubDate>Fri, 12 Nov 2021 15:19:34 +0000</pubDate>
      <link>https://dev.to/this-is-learning/understanding-transitional-javascript-apps-27i2</link>
      <guid>https://dev.to/this-is-learning/understanding-transitional-javascript-apps-27i2</guid>
      <description>&lt;p&gt;Transitional JavaScript Apps? What? Well honestly I'm not sure I know completely myself. It is an umbrella term for the progress that has been happening in JavaScript frameworks the past few years to represent that things are changing. Single Pages as a technology have existed now for over 10 years and Single Page apps today are not the same as they were decade ago, or even 6 years ago. We've embraced server-side rendering and taking responsibility for the side effects of what abusing the technology looks like.&lt;/p&gt;

&lt;p&gt;As usual this isn't a new idea, but sometimes it just takes someone to put a name on it, and who better than &lt;a class="mentioned-user" href="https://dev.to/richharris"&gt;@richharris&lt;/a&gt;
 in his recent talk at JamStack conf:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/860d8usGC0o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now as some of you know this has been an area of focus for me the last couple years both with &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; and even to some degree with &lt;a href="https://solidjs.com/"&gt;Solid&lt;/a&gt;. In fact it's kind of been on everyone's mind:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1YgPzW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336281436685541376/fRSl8uJP_normal.jpg" alt="Dan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dan_abramov"&gt;@dan_abramov&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      This hits the nail on the head. And is 100% matching our long term thinking. Client-side-only is not sustainable. We need to move more stuff to the server, but without sacrificing seamless composition of interactive pieces. &lt;a href="https://t.co/O4LX8JacRo"&gt;twitter.com/tmcw/status/12…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:39 PM - 10 May 2020
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Tom MacWright
          &lt;/span&gt;
          @tmcw
        &lt;/div&gt;
        okay i mulled over this idea in my head for a month and then just sat down and wrote this in one pass without switching tabs so here it is, raw and extra spicy:

"Second guessing the modern web" https://t.co/NWt1oYF54M
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1259614150386425858" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1259614150386425858" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1259614150386425858" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I've written countless articles about the technologies around these topics but maybe it's time to step back and really appreciate what this means for the average web developer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#death-of-single-page-apps"&gt;
  &lt;/a&gt;
  Death of Single Page Apps?
&lt;/h2&gt;

&lt;p&gt;Well not exactly. Every time you touch this topic some Rails developer jumps out of the back of the crowd to tell us DHH had this all figured out in 2005. And honestly, that developer would probably wish we spent our time building time machines rather than move the web forward. But that's not why we are here.&lt;/p&gt;

&lt;p&gt;No. Server rendering has been part of the equation for frontend JavaScript frameworks for years now. What has changed? Why are these suddenly transitional? Well very little from a technology perspective. It boils down to the fact that in many ways Single Page Apps have set poor expectations for the frontend ecosystem. We built them originally to mimic the behavior of mobile applications, but in reality not all experiences need to be that way. But like any tooling with great Developer Experience people naturally want to use it everywhere.&lt;/p&gt;

&lt;p&gt;The problem is this directs people to pull in tons of JavaScript and often to replace functionality that might already be present natively in the browser. And it isn't just people not selecting lean enough libraries. It's architectural. The new hot library like Svelte or Solid doesn't change the equation on its own. Yes I'm author of Solid and I'm saying this without reservation. They are huge improvements and have been able to learn from the lessons of the past but their pedigree is inherent.&lt;/p&gt;

&lt;p&gt;So here is thing. Server Side rendering in itself never did anything to reduce the JavaScript bloat. If anything it only adds to it as the code to hydrate tends to be larger than the code to render. We've found ways to statically generate pages, but the second we need JavaScript bam there is the whole bundle. Now for small sites and small framework like Svelte, Solid, or Preact I mean seriously who cares, but we aren't talking silver bullets. &lt;/p&gt;

&lt;p&gt;We are more conscious now than in the past about accessibility and the importance of progressive enhancement, allowing for pages to work fine without any JavaScript present. But these are implementation considerations and not architectural. These are characteristics of being a good citizen of the web and our tools should support this.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lost-in-translation"&gt;
  &lt;/a&gt;
  Lost in Translation
&lt;/h2&gt;

&lt;p&gt;I've publically been a bit critical of the term Transitional Apps, mostly because while SPA frameworks are finding ways they can play nicer, there has been research and development going into actually solving the problem of sending too much JavaScript. And I don't mean resurrecting Rails. I mean full JavaScript frameworks designed for this use case. No need to juggle multiple apps or not be able to leverage the latest tooling.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1YgPzW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336281436685541376/fRSl8uJP_normal.jpg" alt="Dan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dan_abramov"&gt;@dan_abramov&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      A “disappearing framework” is certainly cool and worth striving for. But it doesn’t help much when the framework is 5% of your code. Say “disappearing app” and I’m listening.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:57 PM - 10 May 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1259618524751958016" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1259618524751958016" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1259618524751958016" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Dan is right on the money again. Right now on this front there are only a couple games in town. &lt;a href="https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html"&gt;React Server Components&lt;/a&gt; might be a consideration once you are in the larger side of things. But React and related infrastructure is too large for what I'm driving at. Let's talk frameworks that can start from nearly 0kb of JavaScript and disappear your app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://iles-docs.netlify.app/"&gt;iles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Elderjs/elderjs"&gt;Elder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These have one thing in common. They only send the JavaScript you need to the browser. They do so in different ways but if you want to live the promise of disappearing app here it is. And the reason? Because regardless of the authoring experience they don't view the application as a single top down system.&lt;/p&gt;

&lt;p&gt;These solutions also have something else in common. They tend to be used as what is being referred to as Multi Page Apps(MPAs). Yes your next-gen static site generator(Next, Nuxt, Gatsby, SvelteKit, VuePress, VitePress, SolidStart) can generate multiple pages but it is not this. Your SPA framework still treats each page as part of the whole and still can't isolate the pieces. Before you say but what about ____? If the framework isn't in the list above and it was created before 2022, 99% chance it is not doing this.&lt;/p&gt;

&lt;p&gt;Aren't MPAs bad? Surprisingly not really so much these days. There are a lot of technologies and the browsers themselves that make these experiences quite nice. Sure there are certain things you can only do when you can preserve the browser state through navigation but for many things they are kind of great. See &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;
' &lt;a href="https://dev.to/swyx/svelte-for-sites-react-for-apps-2o8h"&gt;Svelte for Sites, React for Apps&lt;/a&gt;. This article is actually more a case for Elder than Svelte and it applies to all frameworks above.&lt;/p&gt;

&lt;p&gt;The problem is this conversation is still being had between SPA enthusiasts and, our stranded in time, classic MPA proponents missing the fact that the world has moved on from this argument. MPAs are not old fashioned anymore. If anything JavaScript MPAs are as cutting edge as it gets. But they aren't your grandfather's MPAs.&lt;/p&gt;

&lt;p&gt;And here's the thing. This is a distinction so technical in nature that authors of these MPA JavaScript frameworks are struggling to tell the story in a way their value can be understood by an ecosystem flooded with SPAs. The last thing they want to be associated with is SPAs. I've received criticism for misinterpreting Rich Harris' intent and for being divisive rather than inclusive. But is something inclusive when some of the many of defining parties don't want to be included?&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-eASH3w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1389683812968194049/MhsEUijj_normal.jpg" alt="Misko Hevery profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Misko Hevery
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mhevery"&gt;@mhevery&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Thanks! Glad to see that you understand the difference. ♥️ &lt;a href="https://t.co/GAwQ750kpy"&gt;twitter.com/RyanCarniato/s…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:42 PM - 11 Nov 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Ryan Carniato
          &lt;/span&gt;
          @RyanCarniato
        &lt;/div&gt;
        Unpopular opinion: There is currently only one #transitionalapps framework I'm aware of in existence today, @QwikDev. And any attempts of trying to paint SvelteKit or Next (or Solid) as somehow different than any SPA is basically hollow marketing.
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1458882912779046912" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1458882912779046912" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1458882912779046912" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--98OzHyGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1182612538606919680/2CADdAoD_normal.jpg" alt="Matthew Phillips profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Matthew Phillips
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @matthewcp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Transitional apps is 💯 an attempt to rebrand SPA given the poor reputation it has been building the last few years. Don't let anyone fool you, these are the same old SPAs you've grown to hate. &lt;a href="https://t.co/V7igh1gS8d"&gt;twitter.com/RyanCarniato/s…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:47 PM - 11 Nov 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Ryan Carniato
          &lt;/span&gt;
          @RyanCarniato
        &lt;/div&gt;
        Unpopular opinion: There is currently only one #transitionalapps framework I'm aware of in existence today, @QwikDev. And any attempts of trying to paint SvelteKit or Next (or Solid) as somehow different than any SPA is basically hollow marketing.
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1458899129292234756" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1458899129292234756" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1458899129292234756" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Now there is no ill intent here. We're all fighting different battles. Rich is rallying the troops to fend off the time travelers. I'm just standing up for the little guy. Maybe this is a technical distinction that doesn't mean anything. But it does to some of us.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#long-live-spas-transitional-apps"&gt;
  &lt;/a&gt;
  Long Live &lt;del&gt;SPAs&lt;/del&gt; Transitional Apps
&lt;/h2&gt;

&lt;p&gt;Didn't I just say SPAs are dead, and MPAs are the future. Not quite. Dan Abramov had it right when he said the future is hybrid. Hell, Rich had it right when he suggested in an ideal future there is no need for MPAs.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wXIoAAJO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/557940120184041473/bFyXy8Pu_normal.jpeg" alt="Rich Harris profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Rich Harris
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @rich_harris
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/JakeDohm"&gt;@JakeDohm&lt;/a&gt; &lt;a href="https://twitter.com/brianleroux"&gt;@brianleroux&lt;/a&gt; &lt;a href="https://twitter.com/jaffathecake"&gt;@jaffathecake&lt;/a&gt; &lt;a href="https://twitter.com/barelyreaper"&gt;@barelyreaper&lt;/a&gt; &lt;a href="https://twitter.com/BenLesh"&gt;@BenLesh&lt;/a&gt; &lt;a href="https://twitter.com/AdamRackis"&gt;@AdamRackis&lt;/a&gt; Exactly - and in the default case a great SPA should also _be_ an MPA (insofar as it's SSR'd etc) so the real question isn't even 'what can MPA do that SPA can't?', it's 'does adding SPA capabilities have intrinsic downsides?'
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:37 PM - 02 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1433438931555688448" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1433438931555688448" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1433438931555688448" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;It's just that future is not something that is here yet. There are currently unreconciled downsides alongside the numerous benefits. Which is why I dislike the term Transitional Apps now because it jumps the gun a bit. When we have truly Transitional Apps it'd be cool to market them as such. But I didn't coin the term so that isn't my call.&lt;/p&gt;

&lt;p&gt;I want to take moment to talk about &lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt; again (and this is also relevant to the next version of &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt;). These frameworks support automatic independent hydration without manual islands, and hydrating children before for their parent. They can deliver experiences with all the benefits of Multi-Page apps and scale to Single page experiences seamlessly. &lt;/p&gt;

&lt;p&gt;That is a &lt;em&gt;Transitional App&lt;/em&gt; in my view. An application that literally can transition from a minimal page to an interactive client navigated experience on demand. This is a unique challenge with a whole slew of new tradeoffs. You don't get to pick up an existing framework and just do this. Maybe this deserves a new term. Then next year we can debate the merits of &lt;em&gt;Transitional Apps&lt;/em&gt; vs &lt;em&gt;Transformative Apps&lt;/em&gt;. Is that the better outcome?&lt;/p&gt;

&lt;p&gt;Now there is nothing wrong with any of this inherently so far as that any of these can't be the right solution. You have many options. This really should start from your requirements of what you are building rather than building what your favorite tool enables you to do. When did JavaScript frameworks become the Highlander?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTLv-BV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp7hxc9dx5x9jpwjpmh0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTLv-BV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp7hxc9dx5x9jpwjpmh0.png" alt="There can be only one" width="570" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I might generally be pessimistic about framework agnostic endeavors but I'm all for celebrating our differences. Each framework is different and that's a good thing.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>frameworks</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Electron Adventures: Episode 96: Pywebview Terminal App</title>
      <author>Tomasz Wegrzanowski</author>
      <pubDate>Fri, 12 Nov 2021 15:09:07 +0000</pubDate>
      <link>https://dev.to/taw/electron-adventures-episode-96-pywebview-terminal-app-5chp</link>
      <guid>https://dev.to/taw/electron-adventures-episode-96-pywebview-terminal-app-5chp</guid>
      <description>&lt;p&gt;Now that we've done some hello worlds in &lt;a href="https://pywebview.flowrl.com/"&gt;Pywebview&lt;/a&gt;, let's try to build something more complicated - a terminal app.&lt;/p&gt;

&lt;p&gt;As I mentioned previously, Pywebview lacks any sort of debugging tools on the frontend, so it would be a terrible idea to try writing any serious code in it. Fortunately we already have a working terminal app, and we just need to port it to Pywebview.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-terminalhtml-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;terminal.html&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The document is nearly identical to what we had many times before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"./terminal.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Very amazing terminal app&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"terminal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"history"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input-line"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prompt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./terminal.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-terminalcss-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;terminal.css&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;As so is the styling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#444&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#terminal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.input-line&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.input-line&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.input-line&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.prompt&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.output&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.output&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#afa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;white-space&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#444&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-terminaljs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;terminal.js&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Only one thing is new:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;terminalHistory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#history&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createInputLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inputLine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;inputLine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input-line&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;promptSpan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;promptSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prompt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;promptSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inputSpan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;span&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;inputSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;inputSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;inputLine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;promptSpan&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;inputLine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputSpan&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;inputLine&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createTerminalHistoryEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;commandOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inputLine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createInputLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;output&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commandOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;terminalHistory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;terminalHistory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pywebview&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;createTerminalHistoryEntry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollIntoView&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That thing being &lt;code&gt;let output = await window.pywebview.api.execute(command)&lt;/code&gt;. The &lt;code&gt;execute(command)&lt;/code&gt; function needs to be exposed by the Python backend.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-terminal-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;terminal&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;And finally the Python code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env python3
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webview&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;capture_output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webview&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;"Terminal App"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"terminal.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;js_api&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;webview&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We just expose a single method. We need to remember to convert it to &lt;code&gt;string&lt;/code&gt; (with &lt;code&gt;encoding="utf-8"&lt;/code&gt;), as pywebview can't send &lt;code&gt;bytes&lt;/code&gt; over, even though technically that's a valid JavaScript types these days (&lt;code&gt;Uint8Array&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;And here's the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7WG6LnPm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jlg7oifyjbnxoqqvypw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7WG6LnPm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jlg7oifyjbnxoqqvypw.png" alt="Episode 96 Screenshot" width="880" height="687"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh wait, what is this crap in the middle? As it turns out, our shitty OS specific webview decided to automatically turn "--" into a long dash, something nobody ever asked it to do. Neither Chrome nor Safari does that, nor any other program I've seen, it's just whichever crappy frontend Pywebview is using.&lt;/p&gt;

&lt;p&gt;I already mentioned all the other problems with Pywebview, but this just shows again what a terrible idea it is to use whatever happens to be bundled with the OS. People often whine about Electron apps being big due to bundled browser, but that those few MBs avoid all such issues at once.&lt;/p&gt;

&lt;p&gt;As usual, &lt;a href="https://github.com/taw/electron-adventures/tree/master/episode-96-pywebview-terminal-app"&gt;all the code for the episode is here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>electron</category>
      <category>python</category>
      <category>qt</category>
    </item>
    <item>
      <title>AWS Redshift (Part 1)</title>
      <author>Dorra B. </author>
      <pubDate>Fri, 12 Nov 2021 15:03:25 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-redshift-part-1-4nnk</link>
      <guid>https://dev.to/aws-builders/aws-redshift-part-1-4nnk</guid>
      <description>&lt;p&gt;As an AWS solutions architect, you must set up a solution that helps the data analysts in your company to process large historical data for some released products. The data scientists and the developers suggest collecting all the results of the queries for additional analytics with Amazon EMR, Athena and SageMaker. What AWS solution can you use in this context?&lt;/p&gt;

&lt;p&gt;To answer this question, you need first to know what type of database you are dealing with.&lt;/p&gt;

&lt;p&gt;Generally, we can classify databases into two groups, according to the approach that they use, which affects the type of data we want to extract eventually:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-online-transactional-processing-databasesoltp-"&gt;
  &lt;/a&gt;
  1.      On-Line Transactional Processing databases(OLTP) :
&lt;/h4&gt;

&lt;p&gt;Like RDS, it has a high transaction volume of simple and short queries. OLTP databases rely on four main operations: Create, Read, Update and Delete.&lt;/p&gt;

&lt;p&gt;For example, with RDS you can CREATE a table containing products and their corresponding prices, you can READ the content of the table, UPDATE the names or the prices of the products and DELETE a product that you will no longer sell for the customers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-online-analytical-processing-databasesolap"&gt;
  &lt;/a&gt;
  2.     On-Line Analytical Processing Databases(OLAP):
&lt;/h4&gt;

&lt;p&gt;It has a relatively low transaction volume of sophisticated and long queries that urge aggregations. OLAP DBs are used mainly for analytics.  &lt;/p&gt;

&lt;p&gt;Through the previous definitions, it became obvious that an OLAP is required in our context. An example of an OLAP database on AWS is Redshift.&lt;/p&gt;

&lt;p&gt;Redshift is fully managed by AWS. It is a petabyte-scale data warehouse service.&lt;/p&gt;

&lt;p&gt;Unlike RDS and many other OLTP databases which use rows, Redshift uses columns to store data. It also uses advanced compression and Massive parallel processing of data . This makes it ten times faster than SQL databases.&lt;/p&gt;

&lt;p&gt;Redshift helps to report visualize and analyze collected data. You can save the results of your queries to an S3 data lake so you can do additional analytics with services provided by AWS like Athena and SageMaker.&lt;/p&gt;

&lt;p&gt;Although Redshift is fully managed by AWS, it is set up ONLY in ONE availability zone and can’t take large data ingestion in real-time.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>redshift</category>
      <category>database</category>
    </item>
    <item>
      <title>The ultimate guide to cloud cost optimization</title>
      <author>CAST AI</author>
      <pubDate>Fri, 12 Nov 2021 15:03:17 +0000</pubDate>
      <link>https://dev.to/castai/the-ultimate-guide-to-cloud-cost-optimization-mb6</link>
      <guid>https://dev.to/castai/the-ultimate-guide-to-cloud-cost-optimization-mb6</guid>
      <description>&lt;p&gt;The cloud’s scalability is both a blessing and a curse. Sure, you can experiment with new ideas without having to worry about getting another rack of servers. But if you’re reading this, you know there’s a price to pay for this comfort.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Overprovisioning and cloud sprawl are real. They will make even a tech giant CFO’s eye twitch at the end of the quarter.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Take Pinterest as an example. During one holiday season, &lt;strong&gt;the company’s cloud bill &lt;/strong&gt;&lt;a href="https://www.theinformation.com/articles/as-aws-use-soars-companies-surprised-by-cloud-bills" rel="noreferrer noopener"&gt;&lt;strong&gt;went way over the initial estimates&lt;/strong&gt;&lt;/a&gt; because of increased usage and Pinterest had to pay AWS $20 million on top of the $170 million worth of reserved resources. &lt;/p&gt;

&lt;p&gt;The only way you can deal with the long-term cost implications of the cloud is by implementing cloud cost optimization. And if you don't want optimization to become a drag on your engineering team, automating it is the only move that gets you there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out this guide to optimizing cloud costs step-by-step:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#knowwhatyoucanwinbyoptimizingcloudcosts"&gt;Know what you can win by optimizing cloud costs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#startbyunderstandingyourcloudbill"&gt;Start by understanding your cloud bill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#choosethebestcomputeresources"&gt;Choose the best compute resources for your application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#achievegreatersavingswithspotinstances"&gt;Achieve greater savings with spot instances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dontgetluredbythepromiseofsavingsplans"&gt;Don’t get lured by the promise of savings plans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#picktherighttoolforthejob"&gt;Pick the right tool for the job&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cloudautomationopensthedoorstogreatestsavings"&gt;Cloud automation opens the doors to the greatest savings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whatyouredoinginthecloudcouldbedonefor50percentless"&gt;What you’re doing in the cloud could be done for 50% less&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="knowwhatyoucanwinbyoptimizingcloudcosts"&gt;1. Know what you can win by optimizing cloud costs &lt;/h2&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NbnwgY7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1200x500-Gains-Across-Industries.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NbnwgY7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1200x500-Gains-Across-Industries.jpg" alt="cloud cost optimization gains" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is optimizing cloud costs worth your time? Take a look at ​​the optimization gains reported by companies in communication, entertainment, SaaS, and e-commerce:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Q1 2021, &lt;strong&gt;Zoom&lt;/strong&gt; reported that its &lt;a href="https://www.cnbc.com/2021/06/01/zoom-zm-earnings-q1-2022.html" rel="noreferrer noopener"&gt;gross margin widened to 73.9%&lt;/a&gt; from 69.4% in the previous quarter primarily because of the effort invested in optimizing public cloud resources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spotify&lt;/strong&gt; built a custom tool called Cost Insights to track cloud expenses and encourage engineers to take ownership of the cloud spend, reducing its annual cloud spend by &lt;a href="https://redmonk.com/jgovernor/2021/04/28/shifting-cost-optimisation-left-spotify-backstage-cost-insights/" rel="noreferrer noopener"&gt;millions of dollars&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;By making some smart incremental optimization of infrastructure decisions, &lt;strong&gt;Segment&lt;/strong&gt; &lt;a href="https://t.co/kuPRZZg4uK?amp=1" rel="noreferrer noopener"&gt;increased its gross margin by 20%&lt;/a&gt; and reduced its infrastructure costs by 30% despite experiencing a 25% larger traffic volume - all within three months. &lt;/li&gt;
&lt;li&gt;The e-commerce startup &lt;strong&gt;La Fourche&lt;/strong&gt; saw its cloud bill rise dramatically and ran the CAST AI Savings Report to find optimization opportunities. By &lt;a href="https://cast.ai/case-study/la-fourche/" rel="noreferrer noopener"&gt;turning automated optimization on&lt;/a&gt;, the company reduced its monthly cloud bill by 69.9% without increasing engineer workload.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you know that it’s worth playing the optimization game, let’s see what methods teams choose to prevent their cloud costs from spiraling out of control.&lt;/p&gt;

&lt;h2 id="startbyunderstandingyourcloudbill"&gt;2. Start by understanding your cloud bill&lt;/h2&gt;

&lt;p&gt;Take a look at your cloud bill and you’re likely to get lost. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--geCqJXMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/nWUsDaDc5SMptsI9JnvOsvw_y6ttQf8I3YGP_7MBggoSTCWe_rs_DRJ3S_MFNXAYsOeG4-wZEc5sRPy3-FsBgpxQaTluheQhnfddjMHu8JF10BquvSXqr1tjIBcSJ2yErQVSlJqB" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--geCqJXMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/nWUsDaDc5SMptsI9JnvOsvw_y6ttQf8I3YGP_7MBggoSTCWe_rs_DRJ3S_MFNXAYsOeG4-wZEc5sRPy3-FsBgpxQaTluheQhnfddjMHu8JF10BquvSXqr1tjIBcSJ2yErQVSlJqB" alt="" width="880" height="651"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bills are long, complex, and hard to unpack because every service has a defined billing metric. Understanding your usage to the point where you can make a decision confidently is next to impossible.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And we’re talking about analyzing costs for only one cloud and one team. Try billing for multiple teams or clouds!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is where cost allocation comes in and reveals who is using which resources. How else can you make anyone accountable for these costs? Cost allocation is especially challenging in &lt;a href="https://cast.ai/blog/keep-your-aws-kubernetes-costs-in-check-with-intelligent-allocation/" rel="noreferrer noopener"&gt;dynamic infrastructures running on Kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why is it worth examining and allocating costs based on your cloud bill? Because it’s &lt;strong&gt;a treasure trove of data that will help you forecast your requirements better&lt;/strong&gt; and secure the right amount of resources (and avoid the curse of overprovisioning!).&lt;/p&gt;

&lt;p&gt;But estimating your future resource demands&lt;strong&gt; is no small feat&lt;/strong&gt;. &lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xFMur319--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Resource-Demands.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xFMur319--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Resource-Demands.png" alt="how to estimate future cloud resource demands" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s an example sequence you may follow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Gain visibility and analyze your usage reports to identify any patterns in spending.&lt;/li&gt;
&lt;li&gt;Detect peak resource usage scenarios with the help of periodic analytics and crunching your historical usage data.&lt;/li&gt;
&lt;li&gt;Take seasonal customer demand patterns into account and check if they correlate with your peak resource usage. If you see that, identifying them in advance might get just a tiny bit easier.&lt;/li&gt;
&lt;li&gt;Make sure to monitor resource usage reports regularly and set up alerts to keep cloud costs in check.&lt;/li&gt;
&lt;li&gt;Create an application-level cost plan by measuring application- or workload-specific costs. This will also open the doors to calculating the total cost of ownership of your cloud infrastructure. &lt;/li&gt;
&lt;li&gt;Next, take a look at the pricing models of your cloud providers and plan capacity requirements over time. Putting all of this data in one place makes understanding your costs easier.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;The tasks listed above aren’t one-off jobs. You need to do that on a regular basis to get results. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learn more about how to analyze your cloud bill here: &lt;a href="https://cast.ai/blog/how-to-solve-the-costliest-cloud-bill-issues/" rel="noreferrer noopener"&gt;Surprised by your cloud bill? 5 common issues &amp;amp; how to deal with them&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="choosethebestcomputeresources"&gt;3. Choose the best compute resources for your application&lt;/h2&gt;

&lt;p&gt;Choosing the right virtual machine can be a huge game-changer if your application relies on compute. But AWS has &lt;a href="https://cast.ai/blog/400-ec2-instance-types-the-good-the-bad-and-the-ugly/" rel="noreferrer noopener"&gt;almost 400 different instances&lt;/a&gt;. Similar instance types deliver different performance across cloud providers - and even in the same cloud, a more expensive instance doesn't equal higher performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WZ2qLeqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Workload.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WZ2qLeqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Workload.png" alt="how to choose the best virtual machine for your workload" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Define your minimum requirements&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Make sure to do it across all compute dimensions including CPU (architecture, count, choice of processor), Memory, SSD, and network connectivity. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Select the right instance type&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;You can choose from various combinations of CPU, memory, storage, and networking capacities that come packaged in instance types that are optimized for one such capability. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Set the size of your instance&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Remember that the instance should have enough capacity to accommodate your workload’s requirements and include options like bursting if necessary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Examine different pricing models&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The three major cloud providers offer different rates: on-demand (pay-as-you-go), reserved capacity, spot instances, and dedicated hosts. Each of these options has its advantages and drawbacks. They’re covered in detail in this guide: &lt;a href="https://cast.ai/blog/how-to-choose-the-best-vm-for-the-job/" rel="noreferrer noopener"&gt;How to choose the best VM type for the job and save on your cloud bill&lt;/a&gt; &lt;/p&gt;

&lt;h2 id="achievegreatersavingswithspotinstances"&gt;4. Achieve greater savings with spot instances&lt;/h2&gt;

&lt;p&gt;It's smart to buy idle capacity from AWS and other large cloud providers because spot instances are up to 90% cheaper than on-demand ones. However, there is a catch: the vendor reserves the right to reclaim these resources at any moment. You need to make sure that your application is prepared for that before jumping on the spot bandwagon.&lt;/p&gt;

&lt;p&gt;Here’s how to use spot instances:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Examine your workload to see if it's ready for a spot instance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Can withstand interruptions? How long will it take to complete the job? Is this a mission-critical workload? These and other questions aid in the qualification of a workload for Spot Instances.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n1P3ltgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Spot-Instances.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n1P3ltgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Spot-Instances.png" alt="is your workload ready for spot instances" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Examine the services of your cloud provider&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's a good idea to look at less popular instances because they're less likely to be interrupted and can operate for longer periods of time. Check the frequency of interruption of an instance before settling on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Now it’s time to bid&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Set the highest amount you're prepared to pay for your chosen spot instance. Note that it will only run as long as the market price meets your offer (or is lower). Setting the maximum price at the level of on-demand pricing is the rule of thumb here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Manage spot instances in groups&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That way, you’ll be able to request numerous instance types at once, increasing your chances of landing a spot instance.&lt;/p&gt;

&lt;p&gt;To make all of the above work well, prepare to spend a lot of time on configuration, setup, and maintenance tasks (unless you decide to automate it).&lt;/p&gt;

&lt;p&gt;Want to learn more about spot instances? Here’s a complete guide: &lt;a href="https://cast.ai/blog/how-to-reduce-cloud-costs-by-90-spot-instances-and-how-to-use-them/" rel="noreferrer noopener"&gt;Spot instances: How to reduce AWS, Azure, and GCP costs by 90%&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="dontgetluredbythepromiseofsavingsplans"&gt;5. Don’t get lured by the promise of savings plans&lt;/h2&gt;

&lt;p&gt;Reserving capacity for one or three years in advance at a much cheaper rate seems like an interesting option. Why not buy capacity in advance when you know that you’ll be using the service anyway?&lt;/p&gt;

&lt;p&gt;But like anything else in the world of the cloud, this only seems easy.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You already know that forecasting cloud costs is hard. Even companies that have entire teams dedicated to cloud cost optimization miss the mark here. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How are you meant to plan ahead for capacity when you have no clue how much your teams will require in one or three years? This is the main issue with products like reserved instances and savings plans.&lt;/p&gt;

&lt;p&gt;Here are a few things you should know about reserving capacity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A reserved instance works by &lt;strong&gt;"use it or lose it" &lt;/strong&gt;- every hour that it sits idle is an hour lost to your team (with any financial benefits you might have secured).&lt;/li&gt;
&lt;li&gt;When you commit to specific resources or levels of consumption, &lt;strong&gt;you assume that your needs won't change&lt;/strong&gt; throughout the contract's duration. But even one year of commitment is an eternity in the cloud. And when your requirements go beyond what you reserved, you’ll have to pay the price - just like &lt;a href="https://www.theinformation.com/articles/as-aws-use-soars-companies-surprised-by-cloud-bills"&gt;Pint&lt;/a&gt;&lt;a href="https://www.theinformation.com/articles/as-aws-use-soars-companies-surprised-by-cloud-bills" rel="noreferrer noopener"&gt;e&lt;/a&gt;&lt;a href="https://www.theinformation.com/articles/as-aws-use-soars-companies-surprised-by-cloud-bills"&gt;rest&lt;/a&gt; did. &lt;/li&gt;
&lt;li&gt;When confronted with a new issue, your team may be forced to commit to even more resources. Or you’ll find yourself with underutilized capacity that you've already paid for. In both scenarios, &lt;strong&gt;you're on the losing end of the game&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;By entering into this type of contract with a cloud service provider, &lt;strong&gt;you&lt;/strong&gt; &lt;strong&gt;risk &lt;/strong&gt;&lt;a href="https://cast.ai/blog/vendor-lock-in-and-how-to-break-free/" rel="noreferrer noopener"&gt;&lt;strong&gt;vendor lock-in&lt;/strong&gt;&lt;/a&gt; - i.e. becoming dependent on that provider (and whatever changes they introduce) for the next year or three. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Selecting optimal resources&lt;/strong&gt; for reservation is complex (just check out point 3 above in this article).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above is just &lt;strong&gt;the&lt;/strong&gt; &lt;strong&gt;tip of the iceberg&lt;/strong&gt;. We wrote an entire article that dives into the details of reserved instances: &lt;a href="https://cast.ai/blog/do-aws-reserved-instances-and-savings-plans-really-reduce-costs/" rel="noreferrer noopener"&gt;Do AWS Reserved Instances and Savings Plans really reduce costs?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="picktherighttoolforthejob"&gt;6. Pick the right tool for the job&lt;/h2&gt;

&lt;p&gt;To gain control over their cloud expenses, companies apply various cost management and optimization strategies and solutions in tandem:&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;
&lt;strong&gt;Cost visibility and allocation&lt;/strong&gt; - Using a variety of cost allocation, monitoring, and reporting tools, you can figure out where the expenses are coming from. Real-time cost monitoring is especially useful here since it instantly alerts you when you’re going over a set threshold. A computing operation left running on Azure resulted in an unanticipated cloud &lt;strong&gt;charge of &lt;a href="https://www.teampay.co/insights/manage-cloud-costs/" rel="noreferrer noopener"&gt;over 500k&lt;/a&gt; for one of Adobe's teams&lt;/strong&gt;. One alert could have prevented this.&lt;/li&gt;&lt;/ol&gt;

&lt;ol start="2"&gt;&lt;li&gt;
&lt;strong&gt;Cost budgeting and forecasting&lt;/strong&gt; - You can estimate how many resources your teams will need and plan your budget if you crunched enough historical data and have a fair idea of your future requirements. Sounds simple? It’s anything but - &lt;a href="https://www.theinformation.com/articles/as-aws-use-soars-companies-surprised-by-cloud-bills" rel="noreferrer noopener"&gt;Pinterest’s story&lt;/a&gt; shows that really well.&lt;/li&gt;&lt;/ol&gt;

&lt;ol start="3"&gt;&lt;li&gt;
&lt;strong&gt;Legacy cost optimization solutions&lt;/strong&gt; - This is where you combine all of the information you got in the first two points to create a complete picture of your cloud spend and discover potential candidates for improvement. Many solutions on the market can assist with that, like Cloudability or VMware's CloudHeath. But most of the time, all they give you is &lt;strong&gt;static recommendations for engineers to implement manually&lt;/strong&gt;.&lt;/li&gt;&lt;/ol&gt;

&lt;ol start="4"&gt;&lt;li&gt;
&lt;strong&gt;Automated, cloud native cost optimization&lt;/strong&gt; - This is &lt;strong&gt;the most powerful solution for reducing cloud costs &lt;/strong&gt;you can use. This type of optimization doesn’t require any extra work from teams and results in round-the-clock savings of 50% and more, even if you’ve been doing a great job optimizing manually. A fully autonomous and automated solution that can react quickly to changes in resource demand or pricing is the best approach here. &lt;/li&gt;&lt;/ol&gt;

&lt;blockquote&gt;&lt;p&gt;Should we continue to rely on software engineers to do all the management and optimization tasks manually? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not with so many automation options at hand!&lt;/p&gt;

&lt;h2 id="cloudautomationopensthedoorstogreatestsavings"&gt;7. Cloud automation opens the doors to the greatest savings&lt;/h2&gt;

&lt;p&gt;As you can tell from the points above, manual cost optimization is a complex and time-consuming process. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And regardless of the skill level of engineers, many of the cost optimization tasks are just not suited for humans. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Allocate, comprehend, analyze, and anticipate cloud expenses and you’ll see how hard that is. Then you need to make infrastructure adjustments, investigate pricing plans, spin up more instances, and do a variety of other tasks to create a cost-effective infrastructure.&lt;/p&gt;

&lt;p&gt;Automation takes many of these tasks off your plate:&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yw0-7HQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Cloud-Native.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yw0-7HQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/11/1080x1080-Cloud-Native.png" alt="cloud native cloud cost optimization" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from getting rid of all the tasks above, an automated solution adds more value because it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Selects the most cost-effective instance types and sizes to meet your application’s needs.&lt;/li&gt;
&lt;li&gt;Automatically scales your cloud resources up and down to cope with demand spikes and drops.&lt;/li&gt;
&lt;li&gt;Removes resources that aren’t in use to eliminate waste.&lt;/li&gt;
&lt;li&gt;Makes use of spot instances and gracefully manages disruptions.&lt;/li&gt;
&lt;li&gt;Automates storage and backups, security and compliance management, and changes to configurations and settings to help you save money in other areas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Most importantly, an automated platform implements all of these modifications in real time, mastering the point-in-time nature of cloud cost optimization.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Automation takes advantage of things you’d never imagine to check&lt;/h3&gt;

&lt;p&gt;We used a combination of AWS On-Demand and spot instances to operate our application running on 8 CPUs and 16 GB of RAM. &lt;/p&gt;

&lt;p&gt;Then we decided to run it through CAST AI to check if our configuration was optimized. The platform suggested moving to a spot instance INF1. But wait, isn’t that a pricey, ML-specialized GPU instance? &lt;/p&gt;

&lt;p&gt;As it turned out, that instance was at that time actually cheaper than the general-purpose compute instances we were using. We would have lost out on this hidden gem without automation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a9N8eCTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/l4u7VM1nk7eks4jXZtS87mHetG_CjAmTPGjAuLiZIUkeL72MUaa4LWzvXcybZ2XR5rZWjYCh2xPN7_l7-RszFz3oZK-MmSdLVA44Antu5TVKUx4OATi8AkRkjkU_e7vSVF3DkdhC" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9N8eCTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/l4u7VM1nk7eks4jXZtS87mHetG_CjAmTPGjAuLiZIUkeL72MUaa4LWzvXcybZ2XR5rZWjYCh2xPN7_l7-RszFz3oZK-MmSdLVA44Antu5TVKUx4OATi8AkRkjkU_e7vSVF3DkdhC" alt="" width="880" height="101"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="whatyouredoinginthecloudcouldbedonefor50percentless"&gt;8. What you’re doing in the cloud could be done for 50% less&lt;/h2&gt;

&lt;p&gt;You already learned from examples like &lt;strong&gt;Zoom&lt;/strong&gt;, &lt;strong&gt;Spotify&lt;/strong&gt; or &lt;strong&gt;La Fourche&lt;/strong&gt; that reducing cloud costs can have a significant impact on your bottom line.&lt;/p&gt;

&lt;p&gt;The low-hanging fruit here is cloud cost optimization. But standard tactics such as expense monitoring and reporting &lt;strong&gt;will only get you halfway there at a significant engineer time cost&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Discover what automated cloud cost optimization can do for your business. Book a quick call with CAST AI - the #1 cloud optimization platform for Kubernetes.&lt;/p&gt;





&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; You can always check the product out on your own terms and even run a free report. &lt;a href="https://console.cast.ai/?screen_hint=SIGNUP" rel="noreferrer noopener"&gt;Simply register here to get started.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>cloudnative</category>
      <category>kubernetes</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Making the most boring website ever with TypeScript, NestJs, React and others. Part 8. </title>
      <author>NordicBeaver</author>
      <pubDate>Fri, 12 Nov 2021 15:01:19 +0000</pubDate>
      <link>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-8-1pjo</link>
      <guid>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-8-1pjo</guid>
      <description>&lt;p&gt;&lt;em&gt;This series is about making a generic website for a local business with TypeScript, NodeJs, NestJs, Prisma, React and NextJs. I'm trying to make my videos quite short, about 10 minutes each (except for the first one), while putting as much content there as I can. &lt;a href="https://www.youtube.com/playlist?list=PL7b0cPjh8z6K_4qLNu_QdE3RpiU6omViC"&gt;Here&lt;/a&gt; is the full playlist.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this videos we'll create a User model to store users data on the server and discuss why we need password hashing and salt. We'll also add new forms and pages to manage users in the Admin panel.&lt;/p&gt;

&lt;p&gt;Enjoy :)&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Svblmsp0Hn4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Amazon EKS Distro (EKS-D)</title>
      <author>Dorra B. </author>
      <pubDate>Fri, 12 Nov 2021 14:58:30 +0000</pubDate>
      <link>https://dev.to/aws-builders/amazon-eks-distro-eks-d-1jkk</link>
      <guid>https://dev.to/aws-builders/amazon-eks-distro-eks-d-1jkk</guid>
      <description>&lt;p&gt;Since June 2018, AWS has provided Amazon Elastic Kubernetes Service (EKS) to its customers. It is an upstream and certified conformant version of Kubernetes. This service helped to manage containerized workloads and services in the AWS Cloud and in on-premises. Amazon EKS have always guaranteed scalability, reliability, performance and high availability.&lt;/p&gt;

&lt;p&gt;This service was satisfying for many users as they have enjoyed applying it effeciently to their projects.&lt;/p&gt;

&lt;p&gt;On the 1st of December 2020, AWS announced their new service Amazon EKS Distro (EKS-D) to the audience interested in Kubernetes, the portable, extensible and open-source platform of orchestration. As everyone was curious about this concept, a myriad of questions immerged: What is EKS-D? Why Amazon created this product? What is the advantage of EKS-D?&lt;/p&gt;

&lt;p&gt;To answer those questions, we have to explain first the meaning of "Kubernetes distribution" to avoid any confusion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-kubernetes-distribution"&gt;
  &lt;/a&gt;
  What is a Kubernetes Distribution?
&lt;/h3&gt;

&lt;p&gt;The Cloud Native Computing Foundation (CNCF) defined this term a long time ago, as the pieces that an end-user needs to install and run Kubernetes on the public cloud or on the on-premises. Here is a spreadsheet that details Kubernetes Distributions and Platforms: &lt;a href="https://docs.google.com/spreadsheets/d/1LxSqBzjOxfGx3cmtZ4EbB_BGCxT_wlxW_xgHVVa23es/edit#gid=0"&gt;https://docs.google.com/spreadsheets/d/1LxSqBzjOxfGx3cmtZ4EbB_BGCxT_wlxW_xgHVVa23es/edit#gid=0&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-eksd"&gt;
  &lt;/a&gt;
  What is EKS-D?
&lt;/h3&gt;

&lt;p&gt;EKS-D is a Kubernetes distribution that relies basically on Amazon EKS and holds the same benefits that his 'ancestor' has. At this point, I found it useful to use the word 'Ancestor' because it is crystal clear that EKS-D is just an evolution and exploitation of the Amazon EKS service. But it is more sophisticated since it creates reliable and secure clusters to host Kubernetes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-eks-distro"&gt;
  &lt;/a&gt;
  Why EKS Distro?
&lt;/h3&gt;

&lt;p&gt;Amazon EKS is convenient for many users, but not all users can take advantage of it. To explain that, you have to consider the Amazon EKS responsibility model in the figure below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dmXGEyfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i6slf8d0or89lpio9n0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dmXGEyfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i6slf8d0or89lpio9n0.png" alt="Image description" width="763" height="663"&gt;&lt;/a&gt;&lt;br&gt;
AWS wants to simplify Kubernetes managing for the customers who may not find the right approach to leverage their applications. Customers must spend a minimal duration on operating Kubernetes. Instead, they need to focus on their business. This is the reason why Amazon EKS takes responsibility for Tactical Operations. This sounds great, but in fact, it deprives a considerable number of customers of using Amazon EKS.&lt;/p&gt;

&lt;p&gt;Some users need for example to apply their custom tools on the control plane as their applications require a customization of the control plane flags. Another category of customers may have specific security patches to apply according to their compliance. Others have a wide variety of computing requirements (Hardware, CPU, environment, etc.)&lt;/p&gt;

&lt;p&gt;Those considerable requirements urged the appearance of EKS Distro. It aims to help users get consistent Kubernetes builds and have a more reliable and secure distribution for an extended number of versions. Customers can now run Kubernetes on your own self-provisioned hardware infrastructure, on bare-metal or on cloud environment.&lt;/p&gt;

&lt;p&gt;For more details about the subject , visit:&lt;br&gt;
 &lt;a href="https://aws.amazon.com/eks/eks-distro/"&gt;https://aws.amazon.com/eks/eks-distro/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>kubernetes</category>
      <category>devops</category>
      <category>microservices</category>
    </item>
    <item>
      <title>YOU are helping Google build Self Driving cars! 🤯</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 12 Nov 2021 14:57:09 +0000</pubDate>
      <link>https://dev.to/inhuofficial/you-are-helping-google-build-self-driving-cars-4fa4</link>
      <guid>https://dev.to/inhuofficial/you-are-helping-google-build-self-driving-cars-4fa4</guid>
      <description>&lt;p&gt;That might sound like a clickbait title, but it really isn't. You have with 99.9999% certainty helped Google in building self driving cars without knowing it. &lt;/p&gt;

&lt;p&gt;Oh and probably helped Google with Optical Character Recognition (OCR), Google Images and Google Street Maps too (if you are as old as me 🤣)!&lt;/p&gt;

&lt;p&gt;In the interests of speed, you are doing this every time you fill out a Captcha.&lt;/p&gt;

&lt;p&gt;Now if you already knew that, before you leave, I would suggest you read the last couple of sections on &lt;a href="https://dev.to/inhuofficial/you-are-helping-google-build-self-driving-cars-4fa4#is-captcha-actually-a-terrible-idea"&gt;why you should stop using Captcha on your site&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#captchas-more-than-spam-filtering"&gt;
  &lt;/a&gt;
  Captchas - more than spam filtering
&lt;/h2&gt;

&lt;p&gt;Did you ever wonder why Captchas ask you to identify cars, buses etc?&lt;/p&gt;

&lt;p&gt;Most people would probably think that this is because they are things that are hard for a computer to identify automatically (and they are - kind of) and so it helps stop spam.&lt;/p&gt;

&lt;p&gt;But the truth is that Google shows you whatever it's image recognition system is struggling to identify at the moment, and feeds the information you provide back into the system to improve it's accuracy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nothing-new"&gt;
  &lt;/a&gt;
  Nothing new
&lt;/h2&gt;

&lt;p&gt;This isn't something new in case your were wondering. &lt;/p&gt;

&lt;p&gt;Google has been doing this since 2009 when they used Captcha to digitise printed materials.&lt;/p&gt;

&lt;p&gt;They started with digitising the New York Times archives in 2009, before moving on to Google Books in 2011.&lt;/p&gt;

&lt;p&gt;Captcha back then was two words that you had to type into a box, designed to be difficult for computers to recognise and stop bots from submitting the form. &lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rQqjRgL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2ayesl2b5dydoizr5uu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rQqjRgL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2ayesl2b5dydoizr5uu.png" alt="Catpcha with two words that are difficult to read for a computer" width="312" height="123"&gt;&lt;/a&gt;&lt;/p&gt;
Image By Scooooly - Own work, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=47265558





&lt;p&gt;The thing is, one of those words was &lt;strong&gt;also&lt;/strong&gt; used to help Google's Optical Character Recognition (OCR) system when it couldn't identify a word correctly.&lt;/p&gt;

&lt;p&gt;So for example, you would type "Woodward peacock" into the text box and the first word would be used to check that the computer had guessed the word correctly in the text it was scanning (or tell it what word it didn't understand).&lt;/p&gt;

&lt;p&gt;If enough people agreed it would then add that to it's algorithm (if it guessed correctly) and use that to find further uses of the word "Woodward". If it guessed wrong it would also take that into account as something that needed further improvement (This is massively simplified).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#then-you-helped-with-image-identification-for-google-images"&gt;
  &lt;/a&gt;
  Then you helped with image identification for Google images
&lt;/h3&gt;

&lt;p&gt;Google wanted to identify pictures of cats. &lt;/p&gt;

&lt;p&gt;The exact same principle applied, they asked you to identify pictures of cats to help train their model.&lt;/p&gt;

&lt;p&gt;Obviously it wasn't just cats, it was everything. And so Google used Captcha to help identify pictures it wasn't sure about.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#then-you-helped-with-google-street-view"&gt;
  &lt;/a&gt;
  Then you helped with Google Street View
&lt;/h3&gt;

&lt;p&gt;Once Google had nailed Optical Character Recognition and recognising images of cats and such, a new challenge appeared.&lt;/p&gt;

&lt;p&gt;How do you recognise house numbers in Google Street View? These are massively complex images that may have random numbers anywhere (phone numbers on signage etc.)&lt;/p&gt;

&lt;p&gt;Captcha to the rescue once again!&lt;/p&gt;

&lt;p&gt;This time you would be presented with blurry pictures of numbers to identify. This helped Google identify house numbers on Street View and increase the accuracy of it's results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-are-you-helping-with-autonomous-cars"&gt;
  &lt;/a&gt;
  So how are you helping with autonomous cars?
&lt;/h2&gt;

&lt;p&gt;Nowadays they are showing you pictures of buses, street signs, trains etc.&lt;/p&gt;

&lt;p&gt;But as far as Google is concerned you are feeding it's training set and model with valuable information. &lt;/p&gt;

&lt;p&gt;Their ML model isn't quite sure if that thing is a bus or a train, you complete the captcha and tell it what it is, the model learns and improves.&lt;/p&gt;

&lt;p&gt;Ultimately you are partially responsible for teaching this model how to identify things.&lt;/p&gt;

&lt;p&gt;Why would a model need to identify trains, buses, fire hydrants etc? So that when it is used to make decisions in a self driving car, the decisions are accurate!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-captcha-actually-a-terrible-idea"&gt;
  &lt;/a&gt;
  Is Captcha actually a terrible idea?
&lt;/h2&gt;

&lt;p&gt;Personally I think Captcha is one of the &lt;strong&gt;worst&lt;/strong&gt; things that happened to the web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#not-very-effective"&gt;
  &lt;/a&gt;
  Not very effective
&lt;/h3&gt;

&lt;p&gt;Nowadays Captcha isn't very effective. &lt;/p&gt;

&lt;p&gt;While these images may still be difficult for computers to identify, they are a lot easier than they used to be. &lt;/p&gt;

&lt;p&gt;Google tells you "identify the buses in these pictures".&lt;/p&gt;

&lt;p&gt;Feed what you are looking for (a bus) into a (relatively) basic Machine Learning algorithm and it would soon be able to pick those out when it knows what it is looking for.&lt;/p&gt;

&lt;p&gt;For this reason captcha is not as effective as it once was.&lt;/p&gt;

&lt;p&gt;And don't forget that you can pay about $5 to get actual humans to complete captchas for you. That is &lt;a href="https://anti-captcha.com/"&gt;$5 for 1000 solves&lt;/a&gt; by the way, which isn't much money if someone really wants to spam a service!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#they-ruin-accessibility"&gt;
  &lt;/a&gt;
  They ruin accessibility
&lt;/h3&gt;

&lt;p&gt;They are still, to this day, one of the least accessible parts of the web and exclude people with disabilities on a daily basis. &lt;/p&gt;

&lt;p&gt;I am still not sure how someone hasn't brought a lawsuit against Google for Captcha, but I wouldn't be surprised if it happens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-ruins-your-conversions"&gt;
  &lt;/a&gt;
  It ruins your conversions
&lt;/h3&gt;

&lt;p&gt;It gets even worse though, not only do Captchas offer little protection from spam and make your site less accessible, captchas also introduce a lot of friction into completing forms etc.&lt;/p&gt;

&lt;p&gt;How many times have you faced a captcha and got annoyed? &lt;/p&gt;

&lt;p&gt;Someone getting annoyed is the last thing you want if somebody is signing up to your newsletter or signing up to create an account.&lt;/p&gt;

&lt;p&gt;We invest hours into optimising sales processes, trying to squeeze every last conversion out of visitors to our sites and then introduce an "are you a robot" roadblock that is significant enough to cost a sale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rounding-up"&gt;
  &lt;/a&gt;
  Rounding Up
&lt;/h2&gt;

&lt;p&gt;I personally believe that if you are using Captcha you should stop.&lt;/p&gt;

&lt;p&gt;Not because it is feeding our Alphabet (Google) overlord, as avoiding that is next to impossible! &lt;/p&gt;

&lt;p&gt;No, you should ditch it as it is a massive accessibility problem still and will add an extra hurdle into any conversion process.&lt;/p&gt;

&lt;p&gt;It is also pretty ineffectual nowadays, if somebody really wants to spam you they will find a way. You only have to look at the number of bot accounts on YouTube to realise Captcha doesn't stop bots!&lt;/p&gt;

&lt;p&gt;What do you think? Should we still be using Captcha?&lt;/p&gt;

&lt;p&gt;Let me know in the comments!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps-my-shower-thought-on-captcha"&gt;
  &lt;/a&gt;
  P.S. My "Shower Thought" on Captcha
&lt;/h2&gt;

&lt;p&gt;Just as an aside, I wonder how Captcha is legal?&lt;/p&gt;

&lt;p&gt;I didn't agree for Google to use my image recognition abilities to train its algorithms? You would imagine there would be something in the law about that? &lt;/p&gt;

&lt;p&gt;Anyway, I know nothing about that and the legal side of it, it was just a thought I had that perhaps someone can educate me on (is there something in the terms that site owners are meant to have on their site policies?)!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pps"&gt;
  &lt;/a&gt;
  P.P.S.
&lt;/h2&gt;

&lt;p&gt;Starting in December my content is changing (for the better I hope!)&lt;/p&gt;

&lt;p&gt;My new series on building perfect UI components is massive, and will be released on a Tuesday every week! &lt;/p&gt;

&lt;p&gt;So be sure to follow me for more on that!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#see-you-soon"&gt;
  &lt;/a&gt;
  See you soon!
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed this article!&lt;/p&gt;

&lt;p&gt;Have a great weekend everybody!&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>watercooler</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Make your Windows 10 look like MacOS.</title>
      <author>Md.Junaid</author>
      <pubDate>Fri, 12 Nov 2021 14:51:36 +0000</pubDate>
      <link>https://dev.to/junaid_dev/make-your-windows-10-look-like-macos-4ejk</link>
      <guid>https://dev.to/junaid_dev/make-your-windows-10-look-like-macos-4ejk</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This process is safe without any Rainmaker,winToPc, etc and No harmfull softwares.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;-&amp;gt; Theses softwares you want to install :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TaskbarX : &lt;a href="https://github.com/ChrisAnd1998/TaskbarX"&gt;https://github.com/ChrisAnd1998/TaskbarX&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(optional) GroupedTaskbar:&lt;a href="https://github.com/tjackenpacken/taskbar-groups"&gt;https://github.com/tjackenpacken/taskbar-groups&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WinDynamicDesktop : &lt;a href="https://www.microsoft.com/en-in/p/windynamicdesktop/9nm8n7dq3z5f?cid=storebadge&amp;amp;ocid=badge&amp;amp;rtc=1#activetab=pivot:overviewtab"&gt;https://www.microsoft.com/en-in/p/windynamicdesktop&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PowerToys: &lt;a href="https://github.com/microsoft/PowerToys"&gt;https://github.com/microsoft/PowerToys&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;QuickLook: &lt;a href="https://www.microsoft.com/en-in/p/quicklook/9nv4bs3l1h4s?ocid=badge&amp;amp;rtc=1&amp;amp;activetab=pivot:overviewtab"&gt;https://www.microsoft.com/en-in/p/quicklook&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ModernFlyouts:&lt;a href="https://modernflyouts-community.github.io"&gt;https://modernflyouts-community.github.io&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windows Terminal: &lt;a href="https://www.microsoft.com/en-in/p/windows-terminal/9n0dx20hk701?rtc=1&amp;amp;activetab=pivot:overviewtab"&gt;(https://www.microsoft.com/en-in/p/windows-terminal&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;7-Zip: &lt;a href="https://www.7-zip.org/download.html"&gt;https://www.7-zip.org/download.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#download-winmac-cursor"&gt;
  &lt;/a&gt;
  Download WinMac Cursor
&lt;/h2&gt;

&lt;p&gt;WinMac Cursor made by Junaid.It is combined Cursors of macOS and Windows 11.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/junaidcodingmaster/DevTheme/tree/main/Cursors/WinMac#winmac"&gt;WinMac github repo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://github.com/junaidcodingmaster/DevTheme/tree/main/win10LikeMacOS#make-your-windows-10-look-like-macos"&gt;win10LikeMacOS github repo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;It is Safe , No harm to your computer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written By&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Junaid&lt;/em&gt;&lt;/strong&gt; .&lt;/p&gt;

</description>
      <category>windows</category>
      <category>macos</category>
    </item>
  </channel>
</rss>
