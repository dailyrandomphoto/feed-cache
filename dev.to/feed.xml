<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Streaming Data Solutions on AWS with Amazon Kinesis | AWS White Paper Summary</title>
      <author>Adit Modi</author>
      <pubDate>Thu, 28 Oct 2021 11:03:56 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/streaming-data-solutions-on-aws-with-amazon-kinesis-aws-white-paper-summary-5f47</link>
      <guid>https://dev.to/awsmenacommunity/streaming-data-solutions-on-aws-with-amazon-kinesis-aws-white-paper-summary-5f47</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Businesses today receive data at massive scale and speed due to the explosive growth of data sources that continuously generate streams of data. Whether it is log data from application servers, clickstream data from websites and mobile apps, or telemetry data from Internet of Things (IoT) devices, it all contains information that can help you learn about what your customers, applications, and products are doing right now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#realtime-and-nearrealtime-application-scenarios"&gt;
  &lt;/a&gt;
  Real-time and near-real-time application scenarios
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can use streaming data services for real-time and near-real-time applications such as application monitoring, fraud detection, and live leaderboards. Real-time use cases require millisecond end-to-end latencies– from ingestion, to processing, all the way to emitting the results to target data stores and other systems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, Netflix uses Amazon Kinesis Data Streams to monitor the communications between all its applications so it can detect and fix issues quickly, ensuring high service uptime and availability to its customers. While the most commonly applicable use case is application performance monitoring, there are an increasing number of real-time applications in ad tech, gaming, and IoT that fall under this category.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#difference-between-batch-and-stream-processing"&gt;
  &lt;/a&gt;
  Difference between batch and stream processing
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You need a different set of tools to collect, prepare, and process real-time streaming data than those tools that you have traditionally used for batch analytics. With traditional analytics, you gather the data, load it periodically into a database, and analyze it hours, days, or weeks later. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analyzing real-time data requires a different approach. Stream processing applications process data continuously in real-time, even before it is stored. Streaming data can come in at a blistering pace and data volumes can vary up and down at any time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stream data processing platforms have to be able to handle the speed and variability of incoming data and process it as it arrives, often millions to hundreds of millions of events per hour.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#stream-processing-challenges"&gt;
  &lt;/a&gt;
  Stream processing challenges
&lt;/h1&gt;

&lt;p&gt;building and operating your own custom streaming data pipelines is complicated and resource-intensive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have to build a system that can cost-effectively collect, prepare, and transmit data coming simultaneously from thousands of data sources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You need to fine-tune the storage and compute resources so that data is batched and transmitted efficiently for maximum throughput and low latency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have to deploy and manage a fleet of servers to scale the system so you can handle the varying speeds of data you are going to throw at it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Version upgrade is a complex and costly process. After you have built this platform, you have to monitor the system and recover from any server or network failures by catching up on data processing from the appropriate point in the stream, without creating duplicate data. You also need a dedicated team for infrastructure management.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#streaming-data-solutions-examples"&gt;
  &lt;/a&gt;
  Streaming data solutions: examples
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#scenario-1-internet-offering-based-on-location"&gt;
  &lt;/a&gt;
  Scenario 1: Internet offering based on location
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4HMadNo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0c84wqpnqb86ajor393.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4HMadNo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0c84wqpnqb86ajor393.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Company InternetProvider leveraged Amazon Kinesis Data Streams to stream user details and location. The stream of record was consumed by AWS Lambda to enrich the data with bandwidth options stored in the function’s library. After the enrichment, AWS Lambda published the bandwidth options back to the application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Kinesis Data Streams and AWS Lambda handled provisioning and management of servers, enabling company InternetProvider to focus more on business application development. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-2-nearrealtime-data-for-security-teams"&gt;
  &lt;/a&gt;
  Scenario 2: Near-real-time data for security teams
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIps8PXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk8940ee3sob5xnmvz3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIps8PXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk8940ee3sob5xnmvz3t.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Kinesis Data Firehose can persistently deliver your streaming data to a supported destination. It’s a fully-managed solution, requiring little or no development. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For Company ABC2Badge, using Kinesis Data Firehose was a natural choice. They were already using Amazon Redshift as their data warehouse solution. Because their data sources continuously wrote to transaction logs, they were able to leverage the Amazon Kinesis Agent to stream that data without writing any additional code. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now that company ABC2Badge has created a stream of sensor records and are receiving these records via Kinesis Data Firehose, they can use this as the basis for the security team use case.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-3-preparing-clickstream-data-for-data-insights-processes"&gt;
  &lt;/a&gt;
  Scenario 3: Preparing clickstream data for data insights processes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFzMU5ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8soujtj9z0donbpd5xh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFzMU5ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8soujtj9z0donbpd5xh.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Kinesis Data Streams makes it easy to collect, process, and analyze real-time, streaming data so you can get timely insights and react quickly to new information. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Combined with the AWS Glue serverless data integration service, you can create real-time event streaming applications that prepare and combine data for ML.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because both Kinesis Data Streams and AWS Glue services are fully managed, AWS takes away the undifferentiated heavy lifting of managing infrastructure for your big data platform, letting you focus on generating data insights based on your data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fast Sneakers can utilize real-time event processing and ML to enable their website to make fully automated real-time price adjustments, to maximize their product stock. This brings the most value to their business while avoiding the need to create and maintain a big data platform.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-4-device-sensors-realtime-anomaly-detection-and-notifications"&gt;
  &lt;/a&gt;
  Scenario 4: Device sensors real-time anomaly detection and notifications
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nV4jYk09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x35n8vmwgd7oo6tl261.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nV4jYk09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x35n8vmwgd7oo6tl261.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;By making use of the AWS streaming services Amazon Kinesis Data Streams, Amazon Kinesis Data Analytics, and Amazon Kinesis Data Firehose,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ABC4Logistics can detect anomalous patterns in temperature readings and notify the driver and the fleet management team in real-time, preventing major accidents such as complete vehicle breakdown or fire. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#scenario-5-real-time-telemetry-data-monitoring-with-apache-kafka"&gt;
  &lt;/a&gt;
  Scenario 5: Real time telemetry data monitoring with Apache Kafka
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8jAJmaUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgreo2ppy3sedjl6hg72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8jAJmaUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgreo2ppy3sedjl6hg72.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With Apache Kafka offered as a managed service on AWS, you can focus on consumption rather than on managing the coordination between the brokers, which usually requires a detailed understanding of Apache Kafka. Features such as high availability, broker scalability, and granular access control are managed by the Amazon MSK platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ABC1Cabs utilized these services to build production application without needing infrastructure management expertise. They could focus on the processing layer to consume data from Amazon MSK and further propagate to visualization layer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spark Streaming on Amazon EMR can help real-time analytics of streaming data, and publishing on OpenSearch Dashboards on Amazon OpenSearch Service for the visualization layer. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This document reviewed several scenarios for streaming workflows. In these scenarios, streaming data processing provided the example companies with the ability to add new features and functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By analyzing data as it gets created, you will gain insights into what your business is doing right now. AWS streaming services enable you to focus on your application to make time-sensitive business decisions, rather than deploying and managing the infrastructure.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/streaming-data-solutions-amazon-kinesis/streaming-data-solutions-amazon-kinesis.pdf#conclusion-and-contributors"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Building a Search UI with Typesense</title>
      <author>Farhan Hasin Chowdhury</author>
      <pubDate>Thu, 28 Oct 2021 10:43:06 +0000</pubDate>
      <link>https://dev.to/fhsinchy/building-a-search-ui-with-typesense-1ki2</link>
      <guid>https://dev.to/fhsinchy/building-a-search-ui-with-typesense-1ki2</guid>
      <description>&lt;p&gt;If you've been working as a web developer for some time, then you may have worked on a search feature in one of your projects. Search bars are one of the most common components of any website and depending on the type of website you're working on, not having a fast and powerful search feature can be a deal breaker.&lt;/p&gt;

&lt;p&gt;As easy to find on the web as they may be, creating a search functionality that's fast and works flawlessly is hard, and that's where &lt;a href="https://aviyel.com/projects/typesense"&gt;Typesense&lt;/a&gt; can make your life a lot easier. According to their &lt;a href="https://typesense.org/about/"&gt;About Us&lt;/a&gt; page, "Typesense is an open source, typo tolerant search engine optimized for instant sub-50ms searches while providing an intuitive developer experience."&lt;/p&gt;

&lt;p&gt;It's similar to Elastic Search or Algolia but free and open source. &lt;a href="https://typesense.org/"&gt;Typesense&lt;/a&gt; is written in C++ and comes as a Docker image, making it very straightforward to self-host. They also have a managed service aptly called &lt;a href="https://cloud.typesense.org"&gt;Typesense Cloud&lt;/a&gt;. In this article, I'll guide you through building a robust search functionality using Typesense and Vue.&lt;/p&gt;

&lt;p&gt;You can read the entire write-up on &lt;a href="https://aviyel.com/post/1288/building-a-search-ui-with-typesense"&gt;Aviyel&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>docker</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>7 Qualitative Metrics to Measure Code Quality Engineer Should Know</title>
      <author>Alex Omeyer</author>
      <pubDate>Thu, 28 Oct 2021 10:14:59 +0000</pubDate>
      <link>https://dev.to/alexomeyer/7-qualitative-metrics-to-measure-code-quality-engineer-should-know-odd</link>
      <guid>https://dev.to/alexomeyer/7-qualitative-metrics-to-measure-code-quality-engineer-should-know-odd</guid>
      <description>&lt;p&gt;High-quality code is critical to creating functional error and bug-free software that is easy to edit and understand. But while we sometimes spot our own errors, we need to really dig a little deeper.&lt;/p&gt;

&lt;p&gt;Measuring code quality lets Engineers troubleshoot effectively, prioritise their time and run better &lt;a href="https://www.stepsize.com/blog/how-to-run-an-effective-sprint-planning-meeting"&gt;sprint planning meetings&lt;/a&gt;. With these code quality metrics, engineering teams can see trends and patterns of the problem areas that need fixing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-measure-code-quality-the-7-most-critical-qualitative-metrics"&gt;
  &lt;/a&gt;
  How to measure code quality: The 7 most critical qualitative metrics
&lt;/h2&gt;

&lt;p&gt;Do a bunch of reading on code quality, and seven things appear consistently as a way to measure your code quality. You can ask yourself these questions that are as much about how you code, as your bigger workplace priorities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Can your code be easily read by even beginner developers?&lt;/li&gt;
&lt;li&gt;Is your code extensible, can it be edited by developers who aren't the original author?&lt;/li&gt;
&lt;li&gt;Is your code easy to maintain? &lt;/li&gt;
&lt;li&gt;How's the code for portability?&lt;/li&gt;
&lt;li&gt;Is your code well tested for quality and bugs?&lt;/li&gt;
&lt;li&gt;Does regularly updated documentation accompany your code?&lt;/li&gt;
&lt;li&gt;Is your code &lt;a href="https://www.stepsize.com/blog/when-to-refactor-code-and-how-to-get-buy-in"&gt;refactored&lt;/a&gt; regularly to reduce the problem of technical debt? &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to track these qualitative metrics, try out editor-fist tool &lt;a href="https://www.stepsize.com/?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=code%20quality%20metrics"&gt;Stepsize&lt;/a&gt;. You can create &amp;amp; prioritise technical issues and gradually improve your codebase quality.&lt;/p&gt;

&lt;p&gt;It’ll help you answer questions such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does this issue slow down your development? Will the next sprint be affected by it?&lt;/li&gt;
&lt;li&gt;How difficult is it to work with this code? Can other Engineers understand and change it quickly?&lt;/li&gt;
&lt;li&gt;How does this issue affect our customers?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These metrics are impossible to automate but you can create a habit in your Engineering team to report and address technical issues on a regular basis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxjFd10u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v90e6gi5ykba2xwf59os.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxjFd10u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v90e6gi5ykba2xwf59os.png" alt="Image description" width="872" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-quantitative-metrics"&gt;
  &lt;/a&gt;
  What about quantitative metrics?
&lt;/h2&gt;

&lt;p&gt;The 1970s were a big time for software development, and two key schools of thought emerged that aim to improve code quality by reducing code complexity, especially regarding maintainability: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#halstead-complexity-measures"&gt;
  &lt;/a&gt;
  Halstead Complexity Measures
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8FVro1bX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh2okyskzxr1g3cwf1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FVro1bX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh2okyskzxr1g3cwf1f.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.stepsize.com/blog/how-to-measure-code-quality-7-metrics-every-engineer-should-know#:~:text=The-,Halstead%20Complexity%20Measures,-offer%20an%20algorithmic"&gt;Halstead Complexity&lt;/a&gt; Measures offer an algorithmic way of identifying the measurable properties of software and their relationships with each other. These metrics include vocabulary, program length, the number of bugs, and testing time. They are primarily used to measure maintainability. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cyclomatic-complexity"&gt;
  &lt;/a&gt;
  Cyclomatic Complexity
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"&gt;Cyclomatic complexity&lt;/a&gt; counts the number of linearly independent paths within your source code. The hypothesis is that the higher the cyclomatic complexity, the more chance of errors. A modern use of cyclomatic complexity is to improve software testability. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yes-you-can-automate-that-shiz"&gt;
  &lt;/a&gt;
  Yes, you can automate that shiz:
&lt;/h3&gt;

&lt;p&gt;If your eyes are blurring over as you slept through the quantitative metrics class at university, don't stress. There's plenty of tools available that help teams automate the code review process: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeclimate.com/quality/"&gt;Code Climate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codegrip.tech/"&gt;CodeGrip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codescene.io/"&gt;CodeScene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reviewboard.org/"&gt;Reviewboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smartbear.com/"&gt;Smartbear&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sonarqube.org/"&gt;SonarQube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.veracode.com/"&gt;Veracode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A static code analyser can help you highlight possible vulnerabilities within 'static' (non-running) source code, such as security vulnerabilities. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.stepsize.com/blog/how-to-measure-code-quality-7-metrics-every-engineer-should-know#:~:text=as%20security%20vulnerabilities.%C2%A0-,OWASP,-keeps%20a%20great"&gt;OWASP&lt;/a&gt; keeps a great list of Source Code Analysis Tools. There's also a &lt;a href="https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis"&gt;mammoth list&lt;/a&gt; on Wikipedia, including tools suitable for more esoteric programming languages. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-on-how-to-improve-code-quality"&gt;
  &lt;/a&gt;
  Tips on how to improve code quality
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qD7GYdX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwqzjyn8ws95onyds6zu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qD7GYdX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwqzjyn8ws95onyds6zu.png" alt="Image description" width="880" height="697"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A &lt;a href="https://static1.smartbear.co/smartbearbrand/media/pdf/the-2020-state-of-code-review.pdf"&gt;2020 Code Review&lt;/a&gt; survey by Smart Bear found that the number one way a company can improve code quality is through Code Review. Results also indicated that Unit Testing is the second most important at 20% of responses, followed by Continuous Integration and Continuous Testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mlYTXs3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6jtcevs9t34nc5uqfmd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mlYTXs3T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6jtcevs9t34nc5uqfmd.jpeg" alt="Image description" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's significant about the top six tasks is that they require intention (they don't just magically happen). Even better, you can largely automate them. &lt;/p&gt;

&lt;p&gt;Automating tasks makes it easy to incorporate them into your everyday work tasks rather than something that involves a mammoth undertaking to fix. &lt;/p&gt;

&lt;p&gt;Would you rather deal with tasks like &lt;a href="https://www.stepsize.com/blog/how-to-convince-people-to-deal-with-a-tech-debt"&gt;technical debt&lt;/a&gt; and code refactoring in small increments or have to block out large chunks of time to fix them because your code smells? Has &lt;a href="https://www.stepsize.com/blog/engineers-guide-to-legacy-code-and-technical-debt"&gt;legacy code&lt;/a&gt; your team should have dealt with stopped you from bug fixing, and are project deadlines pushed back time and time again? &lt;/p&gt;

&lt;p&gt;Then there are things like style guides, documentation, and clear version control. How a company prioritises these often depends on their turnover - a short-staffed team with high turnover is unlikely to make these a priority, nor training and onboarding. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-code-quality-metrics-for-your-team"&gt;
  &lt;/a&gt;
  How to choose the right code quality metrics for your team
&lt;/h2&gt;

&lt;p&gt;Ultimately, what metrics serve you best will depend on a range of factors. These include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The size of the team.&lt;/li&gt;
&lt;li&gt;The level of experience in your team.&lt;/li&gt;
&lt;li&gt;Passion projects (some people love code refactoring while others are happy writing documentation, for example).&lt;/li&gt;
&lt;li&gt;Company values - does your company prioritise code quality, or is it simply ship fast and fix later only if more than a handful of people complain?&lt;/li&gt;
&lt;li&gt;Time management: How often do you allocate time to work on bug fixing and technical debt.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#start-tracking-code-issues-and-reducing-technical-debt"&gt;
  &lt;/a&gt;
  Start tracking code issues and reducing technical debt
&lt;/h2&gt;

&lt;p&gt;Many great tools help measure code quality. However, there are technical issues that affect your code quality that these tools simply can't catch. &lt;/p&gt;

&lt;p&gt;The simplest way to start improving your code quality is to install Stepsize &lt;a href="https://www.stepsize.com/r/vscode?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=code%20quality%20metrics"&gt;VS Code&lt;/a&gt; and &lt;a href="https://www.stepsize.com/r/jetbrains?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=code%20quality%20metrics"&gt;JetBrains&lt;/a&gt; extensions and start tracking codebase issues with your team. You will quickly see how much information you already have to improve your code quality and ship functional software faster.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>tooling</category>
      <category>programming</category>
      <category>vscode</category>
    </item>
    <item>
      <title>P42 for GitHub is now P42+</title>
      <author>Lars Grammel</author>
      <pubDate>Thu, 28 Oct 2021 09:53:08 +0000</pubDate>
      <link>https://dev.to/p42/p42-for-github-is-now-p42-59g3</link>
      <guid>https://dev.to/p42/p42-for-github-is-now-p42-59g3</guid>
      <description>&lt;p&gt;Over the last five months, P42 has grown from a code modernization tool for GitHub to a programming assistant for JavaScript and TypeScript with VS Code integration. The modernization included a significant update for &lt;a href="https://p42.ai/p42-plus"&gt;P42+&lt;/a&gt; (previously P42 for GitHub). &lt;/p&gt;

&lt;p&gt;What has changed?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#p42-javascript-assistant-for-vs-code-replaces-pull-request-creation"&gt;
  &lt;/a&gt;
  P42 JavaScript Assistant for VS Code Replaces Pull Request Creation
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=p42ai.refactor"&gt;P42 JavaScript Assistant&lt;/a&gt; adds 46 refactorings, cleanups, and code actions for JavaScript and TypeScript to VS Code. It replaces the previous pull request creation by P42. You now have complete control and flexibility to update single files and folders, test and review the changes, and land them in version control without being limited to P42-generated GitHub pull requests. As a bonus, P42+ now only needs read access to your GitHub repository.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#analysis-results-on-repository-page"&gt;
  &lt;/a&gt;
  Analysis Results on Repository Page
&lt;/h4&gt;

&lt;p&gt;All analysis results are shown on a single repository page for each of your repositories now. P42 organizes the results by file so that you can find all suggestions for a single file in one place.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#21-additional-code-analyses"&gt;
  &lt;/a&gt;
  21 Additional Code Analyses
&lt;/h4&gt;

&lt;p&gt;P42+ adds 21 code analyses that look for improvement opportunities in your codebase. For example, modernizations such as &lt;a href="https://p42.ai/documentation/code-action/add-numeric-separator"&gt;adding numeric separators&lt;/a&gt; and simplifications such as &lt;a href="https://p42.ai/documentation/code-action/merge-nested-if"&gt;merging nested if statements&lt;/a&gt;. In total, P42+ has 32 analyses now. You can configure them in the "configure" tab of the repository page. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#public-p42-results-for-public-repositories"&gt;
  &lt;/a&gt;
  Public P42+ Results for Public Repositories
&lt;/h4&gt;

&lt;p&gt;Starting Nov 15, the P42+ analysis results for public GitHub repositories will be available publicly on the P42 website. Analysis results for private repositories remain private (and cannot be publicly shared for security reasons).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#new-p42-team-plan-pricing"&gt;
  &lt;/a&gt;
  New P42+ Team Plan Pricing
&lt;/h4&gt;

&lt;p&gt;The new price for the P42+ Team plan is $9 per active contributor per month (previously $19). The price for the Personal plan is $4 per active contributor per month. P42+ is free for public open-source GitHub repositories. See the &lt;a href="https://p42.ai/p42-plus"&gt;P42+ page&lt;/a&gt; for pricing plan details.&lt;/p&gt;

&lt;p&gt;I hope the new features of P42+ will make your work easier!&lt;/p&gt;

&lt;p&gt;Happy refactoring!&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Cost to Create Real Estate App like Zillow</title>
      <author>WebClues Infotech</author>
      <pubDate>Thu, 28 Oct 2021 09:53:05 +0000</pubDate>
      <link>https://dev.to/idrishwebclues/cost-to-create-real-estate-app-like-zillow-25dm</link>
      <guid>https://dev.to/idrishwebclues/cost-to-create-real-estate-app-like-zillow-25dm</guid>
      <description>&lt;p&gt;The traditional way of buying or selling a real estate property used to be with the help of an agent or broker. The broker is generally familiar with all of the builders in the city/town they work in and are being regularly updated by the builders of the available properties for selling/buying.&lt;/p&gt;

&lt;p&gt;So whenever a new customer wishes to buy the real estate property they contact the brokers. The broker depending on the budget &amp;amp; requirement of the customer shows different properties for a physical tour.&lt;/p&gt;

&lt;p&gt;Usually, a buyer and seller have taken time out of their busy schedule to take the property tour and after checking out multiple properties the customer decides on one property to be purchased.&lt;/p&gt;

&lt;p&gt;On finalization of the deal, the broker is paid a certain percentage of the transaction value as brokerage fees by both the buyer and seller. These brokerage fees are an extra dent in the customer's pocket be it a buyer or a seller.&lt;/p&gt;

&lt;p&gt;As mentioned earlier this method is a traditional one and the millennial generation believes in breaking the tradition of the past and inventing easy and convenient options for everything that can be accessed or fulfilled with the help of the internet.&lt;/p&gt;

&lt;p&gt;Real estate app like Zillow is one such making of the internet revolution that swapped the world with the easy and convenient option in buying and selling real estate properties.&lt;/p&gt;

&lt;p&gt;So the question here is how does a real estate app like Zillow work?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hOyI3BPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w98ko2i1yhl7sdm84p1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOyI3BPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w98ko2i1yhl7sdm84p1a.png" alt="Real Estate App Development" width="880" height="517"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-zillow-app-work"&gt;
  &lt;/a&gt;
  How does Zillow App Work
&lt;/h1&gt;

&lt;p&gt;Zillow app connects buyers and sellers without the need of the broker in between for the transaction. A property seller registers on the platform uploads the details of the property like the land area, build-up area, condition, how old is the property, maintenance cost, uploads pictures of the property, creates a virtual video tour, expected cost, etc.&lt;/p&gt;

&lt;p&gt;Now once the properties are registered on the platform the buyer who is looking for good property registers on the platform. Searches for property types like flats, bungalows, and office spaces in the designated location. The properties available on the location are shown to the buyer on their web or app screen. Based on the icon images the user checks out the property details along with a virtual tour and if the property is worth consideration they contact the seller directly within the app for a physical tour of the property.&lt;/p&gt;

&lt;p&gt;On real estate property meeting the desired requirement the deal is finalized and the brokerage cost is highly saved by the buyer and seller which is the benefit of both the parties&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mindblowing-facts-about-online-real-estate"&gt;
  &lt;/a&gt;
  Mind-Blowing Facts about Online Real Estate
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bob4UEO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw2b6a9swzgdegqb90dt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bob4UEO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw2b6a9swzgdegqb90dt.png" alt="Facts about Online Real Estate" width="880" height="1245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we are going to &lt;a href="https://www.webcluesinfotech.com/how-to-create-a-real-estate-marketplace-like-zillow/"&gt;develop a real estate app like Zillow&lt;/a&gt; then it is important to understand the competitors in the space. So let us look at some of the online real estate competitors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-other-real-estate-platforms-like-zillow"&gt;
  &lt;/a&gt;
  What are the other real estate platforms like Zillow?
&lt;/h2&gt;

&lt;p&gt;Zillow is considered to be one of the front runners in the online real estate space. Be it launching new properties or creating a better user experience for the property buyers.&lt;/p&gt;

&lt;p&gt;The list of competitors of real estate app Zillow that are fast trying to cover the market and are head to head with Zillow are&lt;/p&gt;

&lt;p&gt;• Trulia (Now acquired by Zillow)&lt;br&gt;
• Yahoo Homes&lt;br&gt;
• Realtor&lt;br&gt;
• Redfin&lt;br&gt;
• Homes&lt;br&gt;
• Apartment Guide&lt;br&gt;
• Curbed&lt;/p&gt;

&lt;p&gt;There are many other real estate apps operating in the USA but the major share of the market is covered by this real estate website and apps.&lt;/p&gt;

&lt;p&gt;Once you are aware of the competitors in real estate apps it is time to study each in detail and list out the features that help them stand apart from their competitors in terms of unique offerings and user experience.&lt;/p&gt;

&lt;p&gt;So let us briefly understand the features required in real estate app like Zillow as features are the direct &lt;a href="https://www.webcluesinfotech.com/how-to-create-a-real-estate-marketplace-like-zillow/"&gt;cost affecting factors behind developing an app like Zillow&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-in-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Features in Real Estate App like Zillow
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. User Registration &amp;amp; Login&lt;/strong&gt;&lt;br&gt;
If the user visiting the app is a first-time visitor then they should be easily able to register themselves or is a repeating user then should be able to login with the login credential unique to each user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Search with Filters&lt;/strong&gt;&lt;br&gt;
A user once registered will start looking for properties by filtering the results with location, type of property, budget range, amenities, buy/rent, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Access to Property &amp;amp; Neighbourhood Info&lt;/strong&gt;&lt;br&gt;
On the results/listing page, the user should be able to check the basic details like image, price, location, and type of properties. The user should be able to get detailed info on the property like the space details, neighborhood details like nearby hospitals, schools, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Property submission feature for Seller&lt;/strong&gt;&lt;br&gt;
A buyer would not be able to find anything if there are no properties listed by sellers. So a property listing features for sellers should be available for people who wish to sell their properties on the platform.&lt;/p&gt;

&lt;p&gt;The seller should be able to submit high-quality images that assist in the decision-making process of the buyers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Geolocation&lt;/strong&gt;&lt;br&gt;
Geo-location features help the user filter properties based on location as well as find navigation routes when physically visiting properties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. CRM Integration for Builders&lt;/strong&gt;&lt;br&gt;
Most properties listed on real estate platforms are by the builders of the properties. So a feature to integrate the platform with the CRM system of the builder will make managing the properties and customers convenient for the builder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Heat Maps&lt;/strong&gt;&lt;br&gt;
Heat maps are an analytics feature that helps the seller and knows which part of the property is deeply researched by the buyer. This feature helps the marketing team to focus on the area of properties most searched by the buyers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Cost Calculator&lt;/strong&gt;&lt;br&gt;
The cost calculator is used when the property allows customizations in the amenities offered. The cost calculator should be automatically able to find the cost involved for certain amenities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Notifications&lt;/strong&gt;&lt;br&gt;
Notifications are one of the primary reasons some businesses prefer to develop an app. Notifications help you in keeping your customers updated about the promotions or any other event that be of use to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;I Want to Build with my Own Feature Set&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advanced-features-in-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Advanced Features in Real Estate app like Zillow
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Video Walk Through&lt;/strong&gt;&lt;br&gt;
This feature lets the buyer take a video walk-through uploaded by the seller. The video walk-through reduces the time of checking put each property physically by the buyer and the seller.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Satellite / Map / Street View&lt;/strong&gt;&lt;br&gt;
This feature lets the buyer check out the nearby areas in all of the views which makes the decision-making process quick and satisfying. This feature can easily be integrated with the use of map API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. In-App Message &amp;amp; Call Feature&lt;/strong&gt;&lt;br&gt;
To maintain the privacy of the user and the builder, the app should offer an in-app chat/call feature so that the personal data of both the individuals involved is not shared.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Dark Mode&lt;/strong&gt;&lt;br&gt;
This is not the must-have feature but now a day’s people find browsing in the dark mode less tiresome as it reduces the screen impact on the eyes. The dark mode also reduces the battery usage of the mobile phone and tablet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Home Loans&lt;/strong&gt;&lt;br&gt;
This feature can be a game-changer for 2 businesses at once. The online real estate business should partner with the housing loan providers like banks, NBFCs, etc. to offer loan options to their prospective buyers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Homes on rent&lt;/strong&gt;&lt;br&gt;
The app should offer options for users to purchase or rent the property or filter based on the properties available for rent. This is an added advantage to attract more users to the platform like those looking to rent the properties.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELTyri-K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgwjp8nzl46fp5u261q3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELTyri-K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgwjp8nzl46fp5u261q3.png" alt="Real Estate App Development Company" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technology-stack-used-for-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Technology Stack used for real estate app like Zillow
&lt;/h2&gt;

&lt;p&gt;The technology stack used for the high performance of real estate app like Zillow is the major factor that is directly proportional to the cost. The highly advanced technology means the greater cost involved in development.&lt;/p&gt;

&lt;p&gt;• Location Tracker&lt;br&gt;
• Google Places API&lt;br&gt;
• Realm Framework&lt;br&gt;
• Zillow API&lt;br&gt;
• Facebook SDK&lt;br&gt;
• SimplyRets&lt;br&gt;
• iHome Finder&lt;br&gt;
• Spark API&lt;br&gt;
• Firebase SDK&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monetization-models-of-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Monetization models of real estate app like Zillow
&lt;/h3&gt;

&lt;p&gt;The monetization model is a subjective thing that depends on each entrepreneur’s model of the app. There are various ways through which you can monetize the services you offer with real estate app like Zillow. Some of the suggested and common monetization models for real estate app like Zillow are&lt;/p&gt;

&lt;p&gt;• Advertisements revenue from property owners&lt;br&gt;
• Property management solution for builders&lt;br&gt;
• Commission model on Buy/Sell &amp;amp; Rent&lt;br&gt;
• Fix cost of listing for property owners&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost-to-build-a-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Cost to Build a Real Estate App like Zillow
&lt;/h3&gt;

&lt;p&gt;Considering all of the above-explained points like basic + advanced features, business model, and technology stack, for developing a real estate app like Zillow. The cost to build an app like Zillow can somewhere be derived in the range of $30,000 — $75,000.&lt;/p&gt;

&lt;p&gt;The above costing is just the ballpark view of the cost involved in building a real estate app like Zillow. For a detailed and exact cost involved in developing an app like Zillow feel free to ask for a free quote from the team of WebClues Infotech.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;Get Me My Customized Quote&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#suggestion-on-ways-to-compete-in-the-real-estate-app-market"&gt;
  &lt;/a&gt;
  Suggestion on ways to compete in the real estate app market
&lt;/h4&gt;

&lt;p&gt;One of the most important factors in deciding the agency that can build your real estate app like Zillow is the creative suggestions they offer that can improve as well as reduce the time duration for the app to be successful.&lt;/p&gt;

&lt;p&gt;• Use Blockchain Technology&lt;br&gt;
• AR/VR for a virtual tour of the Property&lt;br&gt;
• AI for personalized suggestions&lt;br&gt;
• Update the details in real-time&lt;br&gt;
• Exclusive properties only available on your app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion-on-developing-real-estate-app-like-zillow"&gt;
  &lt;/a&gt;
  Conclusion on Developing real estate app like Zillow
&lt;/h4&gt;

&lt;p&gt;The explanation offered in this article to develop a real estate app like Zillow has many assumptions to it. So it is important to get a personalized explanation based on your requirement to develop a real estate app like Zillow.&lt;/p&gt;

&lt;p&gt;I hope the article helps you get a clear picture of the factors involved in developing an app like Zillow. For a further detailed guide read our guide on &lt;a href="https://www.webcluesinfotech.com/how-to-create-a-real-estate-marketplace-like-zillow/"&gt;How to create a real estate marketplace like Zillow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://webcluesinfotech.com/get-quote/"&gt;Get Quote&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>realestateappdevelopment</category>
      <category>zillowappdevelopment</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Recursive list rendering with React and Vue</title>
      <author>Shuvo</author>
      <pubDate>Thu, 28 Oct 2021 09:52:52 +0000</pubDate>
      <link>https://dev.to/0shuvo0/recursive-list-rendering-with-react-and-vue-45i5</link>
      <guid>https://dev.to/0shuvo0/recursive-list-rendering-with-react-and-vue-45i5</guid>
      <description>&lt;p&gt;Sometimes your list may have a sublist inside it which again may have another sublist in it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4koD6R6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hw4utav8rnpy79q9r4tj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4koD6R6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hw4utav8rnpy79q9r4tj.jpeg" alt="Twitter thread tree demo" width="814" height="377"&gt;&lt;/a&gt;&lt;br&gt;
In that case simple loop won't work. You have to use recursion.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#so-lets-see-how-we-can-render-recursive-list-using-react-js"&gt;
  &lt;/a&gt;
  So let's see how we can render recursive list using React JS.
&lt;/h2&gt;

&lt;p&gt;Since react supports JSX and we can use regular JavaScript functions so we can simply use a recursive function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//App.js&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wakeup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Fresh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Make game using OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study NodeJs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;renderList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listTree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list-item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;border&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;renderList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;listTree&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;My&lt;/span&gt; &lt;span class="nx"&gt;Nested&lt;/span&gt; &lt;span class="nx"&gt;ToDo&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="o"&gt;-&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;renderList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now depending on how you style it in CSS it should look something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" alt="Recursive list demo" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#now-lets-see-how-to-render-recursive-list-in-vue-js"&gt;
  &lt;/a&gt;
  Now let's see how to render recursive list in Vue JS.
&lt;/h2&gt;

&lt;p&gt;Now we can't use recursive JavaScript function in Vue like we did in react but We can use recursive component.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-be-able-to-use-component-recursively-it-must-have-a-name-properly"&gt;
  &lt;/a&gt;
  To be able to use component recursively it must have a name properly!!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;App.vue&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My Nested ToDo List-&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;RenderList&lt;/span&gt; &lt;span class="na"&gt;:list=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;RenderList&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/RenderList.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;RenderList&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wakeup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Fresh&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Make game using OOP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Study NodeJs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;RenderList.vue&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in list"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.title"&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{'list': item.type == 'list', 'list-item': item.type == 'item'}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"item.type == 'item'"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"border"&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{background: item.color}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"item.type == 'item'"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ item.title }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;RenderList&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"item.type == 'list'"&lt;/span&gt; &lt;span class="na"&gt;:list=&lt;/span&gt;&lt;span class="s"&gt;"item.items"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RenderList&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Again depending on how you style it in CSS it should look something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QmhSk4cE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2p0jvobuw34n2dpwgkd.png" alt="Recursive list demo" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure to check out my other articles and YouTube channel.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__728097"&gt;
  
    .ltag__user__id__728097 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/0shuvo0" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/0shuvo0"&gt;Shuvo&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/0shuvo0"&gt;Frontend Developer and YouTuber.
Channel link: https://www.youtube.com/c/AngleBrace&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>vue</category>
    </item>
    <item>
      <title>code everyday with me</title>
      <author>duccanhole</author>
      <pubDate>Thu, 28 Oct 2021 09:43:44 +0000</pubDate>
      <link>https://dev.to/coderduck/code-everyday-with-me-2f86</link>
      <guid>https://dev.to/coderduck/code-everyday-with-me-2f86</guid>
      <description>&lt;h2&gt;
  &lt;a href="#day-10"&gt;
  &lt;/a&gt;
  --DAY 10--
&lt;/h2&gt;

&lt;p&gt;Hi, I am going to make #100DaysOfCode Challenge. Everyday I will try solve 1 problem from leetcode or hackerrank. Hope you can go with me until end.&lt;br&gt;
&lt;strong&gt;Now let's solve problem today:&lt;/strong&gt;&lt;br&gt;
-Problem: Subarray Division&lt;br&gt;
-Detail: &lt;a href="https://www.hackerrank.com/challenges/the-birthday-bar/problem"&gt;https://www.hackerrank.com/challenges/the-birthday-bar/problem&lt;/a&gt;&lt;br&gt;
-My solution (javascript):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function birthday(arr, d, m) {
    let ans=0,s=0;
    for(let i=0;i&amp;lt;arr.length;i++){
        for(let j=i;j&amp;lt;(i+m);j++) s+=arr[j];
        if(s==d) ans++;
        s=0;
    }
    return ans;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;--&amp;gt;&lt;em&gt;If you have better solution or any question, please comment below. I will appreciate.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>100daysofcode</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>VOLDER v2.0.0 npm package coming soon</title>
      <author>alguerocode</author>
      <pubDate>Thu, 28 Oct 2021 09:24:44 +0000</pubDate>
      <link>https://dev.to/alguercode/volder-v200-package-coming-soon-2p91</link>
      <guid>https://dev.to/alguercode/volder-v200-package-coming-soon-2p91</guid>
      <description>&lt;h2&gt;
  &lt;a href="#version-200-in-the-road-with-more-features-and-better-documents"&gt;
  &lt;/a&gt;
  ⚠️ ⚠️  version 2.0.0 in the road with more features and better documents
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#support-me-by-adding-a-star-to-github-volder-repository"&gt;
  &lt;/a&gt;
  support me by adding a star to github volder repository
&lt;/h3&gt;

&lt;p&gt;link:&lt;a href="https://github.com/devSupporters/volder"&gt;https://github.com/devSupporters/volder&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>npm</category>
      <category>schemabuilder</category>
    </item>
    <item>
      <title>Adding a dark mode to your website using SCSS</title>
      <author>Dominik</author>
      <pubDate>Thu, 28 Oct 2021 09:20:02 +0000</pubDate>
      <link>https://dev.to/wgnrd/adding-a-dark-mode-to-your-website-using-scss-4pdc</link>
      <guid>https://dev.to/wgnrd/adding-a-dark-mode-to-your-website-using-scss-4pdc</guid>
      <description>&lt;p&gt;Most developers are using and loving it for years. After the release of iOS 13 it was introduced to people outside the development bubble. &lt;br&gt;
The &lt;strong&gt;✨dark mode✨&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For a long time I wanted my own website to feature a dark mode. So I started gathering my own requirements for that feature.&lt;/p&gt;

&lt;p&gt;It should be working with my current setup of using SCSS and the colors defined within it. Also, the site should detect the preferred color-scheme and initialize that way. Lastly, you should always be able to switch the color-scheme independent of your preferred scheme.&lt;/p&gt;

&lt;p&gt;So let's get started:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-creating-colorschemes"&gt;
  &lt;/a&gt;
  Step 1: Creating color-schemes
&lt;/h2&gt;

&lt;p&gt;In my setup, the colors are already defined in a single &lt;code&gt;SCSS&lt;/code&gt; file like this. All the other files are referencing these colors by name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nv"&gt;$onyx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#404040&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$cultured&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#f5f5f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since these colors are static, we need to transform them into CSS variables which are globally accessible. This way we can switch out the value of the colors which are referenced.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// creating a light and a dark theme on html level&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"light"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;--color-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$onyx&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="na"&gt;--color-background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$cultured&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"dark"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;--color-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$cultured&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="na"&gt;--color-background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nv"&gt;$onyx&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see in the light theme, we are using the dark text-color with a light background. And it is reversed in the dark theme.&lt;/p&gt;

&lt;p&gt;The last step to set up the color-scheme is to reference the CSS variables where they are needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;color-text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;color-background&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to add this &lt;code&gt;data-theme&lt;/code&gt; attribute used in the scheme definition to the &lt;code&gt;html&lt;/code&gt; tag. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-add-the-attribute"&gt;
  &lt;/a&gt;
  Step 2: Add the attribute
&lt;/h2&gt;

&lt;p&gt;To add the attribute we can use this short JS line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With only this line, we would always be seeing the dark theme.&lt;/p&gt;

&lt;p&gt;But we can dynamically set the attribute based on this checkbox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"theme_switch"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// switch theme if checkbox is engaged&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[name=theme_switch]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the checkbox actually switches the &lt;code&gt;data-theme&lt;/code&gt; attribute. And the attribute switches the CSS variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-initialize-with-the-preferred-theme"&gt;
  &lt;/a&gt;
  Step 3: Initialize with the preferred theme
&lt;/h2&gt;

&lt;p&gt;The final step is to initialize the &lt;code&gt;data-theme&lt;/code&gt; during the first load with the preferred theme.&lt;br&gt;
To find out which theme is preferred by the user, we can use the following condition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(prefers-color-scheme: dark)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This returns &lt;code&gt;true&lt;/code&gt; if the preferred theme is dark. &lt;br&gt;
Now we add all together:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;checkbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[name=theme_switch]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(prefers-color-scheme: dark)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// switch theme if checkbox is engaged&lt;/span&gt;
&lt;span class="nx"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-feature"&gt;
  &lt;/a&gt;
  Final Feature
&lt;/h2&gt;

&lt;p&gt;Here is the working CodePen of the work we did today. In the next part, we are going to style this checkbox to feel like an actual toggle.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/wgnrd/embed/KKvqdjy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>scss</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What will be the Url to get list of books based on author?</title>
      <author>Bharat Sharma</author>
      <pubDate>Thu, 28 Oct 2021 09:19:18 +0000</pubDate>
      <link>https://dev.to/bharatsharma77/what-will-be-the-url-to-get-list-of-books-based-on-author-2np9</link>
      <guid>https://dev.to/bharatsharma77/what-will-be-the-url-to-get-list-of-books-based-on-author-2np9</guid>
      <description>&lt;p&gt;I m building an book API project. Have some confusion related to URL. I put this but not received output (&lt;a href="http://localhost:3000/auth/12345abc"&gt;http://localhost:3000/auth/12345abc&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I have attached an index.js and database.js file ss to help you to get solution to help me!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Kotlin In Appwrite</title>
      <author>Oshi Gupta</author>
      <pubDate>Thu, 28 Oct 2021 09:16:28 +0000</pubDate>
      <link>https://dev.to/oshi36/kotlin-in-appwrite-7n2</link>
      <guid>https://dev.to/oshi36/kotlin-in-appwrite-7n2</guid>
      <description>&lt;p&gt;&lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; is an &lt;strong&gt;end-to-end backend server&lt;/strong&gt; that is aiming to abstract the complexity of common, complex, and repetitive tasks required for building a modern app.&lt;/p&gt;

&lt;p&gt;Appwrite is both cross-platform and technology agnostic, meaning it can run on any operating system, coding language, framework, or platform. Although Appwrite can easily fit the definition of serverless technology, it's designed to run well in multiple configurations. &lt;br&gt;
It provides various libraries for major programming languages and platforms so you don't have to write code for interacting with our HTTP APIs from scratch.&lt;/p&gt;

&lt;p&gt;Appwrite has divided &lt;a href="https://appwrite.io/docs/sdks"&gt;SDKs&lt;/a&gt; into two categories &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Client SDKs&lt;/li&gt;
&lt;li&gt;Server SDKs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#client-sdks"&gt;
  &lt;/a&gt;
  Client SDKs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Web SDK&lt;/li&gt;
&lt;li&gt;Flutter SDK&lt;/li&gt;
&lt;li&gt;Apple SDK&lt;/li&gt;
&lt;li&gt;Android SDK&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#server-sdks"&gt;
  &lt;/a&gt;
  Server SDKs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Kotlin SDK&lt;/li&gt;
&lt;li&gt;Dart SDK&lt;/li&gt;
&lt;li&gt;Swift SDK&lt;/li&gt;
&lt;li&gt;Python SDK&lt;/li&gt;
&lt;li&gt;Ruby SDK and etc&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#here-we-will-be-seeing-how-to-use-kotlin-in-appwrite-functions"&gt;
  &lt;/a&gt;
  Here we will be seeing how to use kotlin in Appwrite functions
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;So what is Kotlin?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kotlinlang.org/"&gt;Kotlin&lt;/a&gt; is a cross-platform, statically typed, general-purpose programming language with type inference.&lt;/p&gt;

&lt;p&gt;Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin's standard library depends on the Java Class Library, but type inference allows its syntax to be more concise. &lt;/p&gt;

&lt;p&gt;So how to write kotlin in appwrite function and for this install &lt;a href="https://github.com/appwrite/sdk-for-kotlin"&gt;Kotlin SDK&lt;/a&gt; by following the below instructions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gradle"&gt;
  &lt;/a&gt;
  GRADLE
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Appwrite's Kotlin SDK is hosted on Maven Central. In order to fetch the Appwrite SDK, add this to your root-level build.gradle(.kts) file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;repositories {      
    mavenCentral()
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, add the dependency to your project's build.gradle(.kts) file:
&lt;code&gt;implementation("io.appwrite:sdk-for-kotlin:0.1.1")&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#maven"&gt;
  &lt;/a&gt;
  MAVEN
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add this to your &lt;strong&gt;pom.xml&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;io.appwrite&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;sdk-for-kotlin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;0.1.1&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-the-function"&gt;
  &lt;/a&gt;
  Add the function
&lt;/h3&gt;

&lt;p&gt;You can add a new function from your Appwrite project's dashboard. Access your Functions settings from your project's left navigation panel. Click the &lt;strong&gt;Add Function&lt;/strong&gt; button and choose your function name and code runtime.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#init-your-sdk"&gt;
  &lt;/a&gt;
  Init your SDK
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Initialize your SDK with your Appwrite server API endpoint and project ID which can be found in your project settings page and your new API secret Key project API keys section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This can be found out when you &lt;a href="https://appwrite.io/docs/installation"&gt;install&lt;/a&gt; Appwrite according to the Operating System and access the &lt;strong&gt;Appwrite Console UI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OamSXA1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7vezepgtche0pmkl3qk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OamSXA1r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7vezepgtche0pmkl3qk.PNG" alt="setting project" width="825" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-your-first-request"&gt;
  &lt;/a&gt;
  Make your First Request
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe1Kkce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehok40nei3xy9u7aunjy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe1Kkce5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ehok40nei3xy9u7aunjy.PNG" alt="first request" width="416" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of now, we have seen how to set up the functions and Kotlin SDK. &lt;br&gt;
Now, we will be seeing different operations which can be performed on these functions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;List functions&lt;/strong&gt; :
To get a list of all the project's functions. You can use the query params to filter your results.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import io.appwrite.Client
import io.appwrite.services.Functions
suspend fun main() { 
val client = Client(context) 
.setEndpoint("https://[HOSTNAME_OR_IP]/v1") // Your API Endpoint .setProject("5df5acd0d48c2") // Your project ID .setKey("919c2d18fb5d4...a2ae413da83346ad2") // Your secret API key 
val functions = Functions(client) 
val response = functions.list( ) 
val json = response.body?.string() }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Get function&lt;/strong&gt; :
It will get a function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.get( functionId = "[FUNCTION_ID]" )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update function&lt;/strong&gt; :
It will update the function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.update( 
functionId = "[FUNCTION_ID]",
name = "[NAME]", 
execute = listOf(), 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Delete function&lt;/strong&gt; :
It will delete a function by its unique ID.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.delete( functionId = "[FUNCTION_ID]" ) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Create execution&lt;/strong&gt; :
Trigger a function execution. The returned object will return you the current execution status. You can ping the Get Execution endpoint to get updates on the current execution status. Once this endpoint is called, your function execution process will start asynchronously.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val response = functions.createExecution( functionId = "[FUNCTION_ID]", )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the basic idea of how to create functions in the Appwrite using the Kotlin SDK.&lt;br&gt;
For more you can always refer to &lt;a href="https://appwrite.io/docs/getting-started-for-server"&gt;appwrite&lt;/a&gt; &lt;a href="https://appwrite.io/docs/functions"&gt;docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank You&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>appwrite</category>
      <category>android</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Everything I learned as a freelancer</title>
      <author>Pasca Vlad</author>
      <pubDate>Thu, 28 Oct 2021 09:07:39 +0000</pubDate>
      <link>https://dev.to/pascavld/everything-i-learned-as-a-freelancer-3dip</link>
      <guid>https://dev.to/pascavld/everything-i-learned-as-a-freelancer-3dip</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You want to start freelancing?&lt;/p&gt;

&lt;p&gt;I started doing this 2 months ago when I knew nothing&lt;/p&gt;

&lt;p&gt;Now I'm on my way to building a successful freelancing business&lt;/p&gt;

&lt;p&gt;Here is everything I learned&lt;/p&gt;

&lt;p&gt;First, here is what I achieved in these 2 months of freelancing&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;my strategy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://twitter.com/VladPasca5/status/1450801786261020674?s=20"&gt;https://twitter.com/VladPasca5/status/1450801786261020674?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's continue with the good stuff:&lt;/p&gt;

&lt;p&gt;Freelancing it's a lot easier than you think&lt;/p&gt;

&lt;p&gt;You don't need to be an expert to succeed as a freelancer&lt;/p&gt;

&lt;p&gt;If you can get results for your clients that's more than enough&lt;/p&gt;

&lt;p&gt;If you're thinking about starting freelancing, you are probably ready&lt;/p&gt;

&lt;p&gt;Freelancing is all about getting results for your clients&lt;/p&gt;

&lt;p&gt;If you can do that, they will pay you&lt;/p&gt;

&lt;p&gt;But first, focus on getting results&lt;/p&gt;

&lt;p&gt;The money will come after&lt;/p&gt;

&lt;p&gt;Social proof is everything&lt;/p&gt;

&lt;p&gt;When you're just starting out, no one will trust you&lt;/p&gt;

&lt;p&gt;That's why you need to work for free at the beginning&lt;/p&gt;

&lt;p&gt;By doing this you will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get more experience&lt;/li&gt;
&lt;li&gt;Get social proof&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Outreach is the one that gets you clients&lt;/p&gt;

&lt;p&gt;In the beginning, no one will come to you&lt;/p&gt;

&lt;p&gt;You need to find those clients and contact them&lt;/p&gt;

&lt;p&gt;More outreach = more clients&lt;/p&gt;

&lt;p&gt;In the beginning focus only on one channel of outreach&lt;/p&gt;

&lt;p&gt;Don't do Twitter DMs, cold emails, and LinkedIn all at once&lt;/p&gt;

&lt;p&gt;Start with one of them and master it&lt;/p&gt;

&lt;p&gt;Always ask for a testimonial&lt;/p&gt;

&lt;p&gt;You never have enough social proof&lt;/p&gt;

&lt;p&gt;Build a simple portfolio where you can show your past work and the social proof you have&lt;/p&gt;

&lt;p&gt;Add a link to it in your bio&lt;/p&gt;

&lt;p&gt;Talk about your business&lt;/p&gt;

&lt;p&gt;If you don't do it, no one else will do it for you&lt;/p&gt;

&lt;p&gt;Overdeliver&lt;/p&gt;

&lt;p&gt;In the beginning, this is key&lt;/p&gt;

&lt;p&gt;This will make people come back to you&lt;/p&gt;

&lt;p&gt;Don't focus on money&lt;/p&gt;

&lt;p&gt;You won't make a lot of money at the beginning&lt;/p&gt;

&lt;p&gt;But that is obvious&lt;/p&gt;

&lt;p&gt;Wait until things start to compound&lt;/p&gt;

&lt;p&gt;Don't use platforms like Fiverr or Upwork&lt;/p&gt;

&lt;p&gt;Use social media instead&lt;/p&gt;

&lt;p&gt;Don't fight for $5 projects&lt;/p&gt;

&lt;p&gt;Build rapport first&lt;/p&gt;

&lt;p&gt;Before you reach out to a potential client engage a bit with their stuff&lt;/p&gt;

&lt;p&gt;Buy their products&lt;/p&gt;

&lt;p&gt;Learn more about them&lt;/p&gt;

&lt;p&gt;Build something for them for free&lt;/p&gt;

&lt;p&gt;This will boost your chances of closing that client&lt;/p&gt;

&lt;p&gt;Do something to stand up&lt;/p&gt;

&lt;p&gt;Why would someone hire you instead of anyone else on the internet?&lt;/p&gt;

&lt;p&gt;Find an answer to this question asap&lt;/p&gt;

&lt;p&gt;Follow up&lt;/p&gt;

&lt;p&gt;If someone doesn't reply to your message/email after a few days follow up&lt;/p&gt;

&lt;p&gt;It's mindblowing how many clients I closed after following up&lt;/p&gt;

&lt;p&gt;Aim for monthly recurrent revenue&lt;/p&gt;

&lt;p&gt;Offer a service like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facebook ads&lt;/li&gt;
&lt;li&gt;Web maintenance&lt;/li&gt;
&lt;li&gt;Email marketing&lt;/li&gt;
&lt;li&gt;Social media marketing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to your main one&lt;/p&gt;

&lt;p&gt;Share your work online&lt;/p&gt;

&lt;p&gt;Join a community of freelancing&lt;/p&gt;

&lt;p&gt;Connect with them&lt;/p&gt;

&lt;p&gt;Refer clients to them and build a network&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;._let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
