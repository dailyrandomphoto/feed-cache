<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Fetching the Github API</title>
      <author>Francesco Menghi</author>
      <pubDate>Fri, 19 Nov 2021 15:36:55 +0000</pubDate>
      <link>https://dev.to/menghif/fetching-the-github-api-119e</link>
      <guid>https://dev.to/menghif/fetching-the-github-api-119e</guid>
      <description>&lt;p&gt;This week my latest &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2466"&gt;PR&lt;/a&gt; for &lt;a href="https://github.com/Seneca-CDOT/telescope"&gt;telescope&lt;/a&gt; was merged. It all started with an &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2417"&gt;issue&lt;/a&gt; to add Github stats to the new &lt;a href="https://api.telescope.cdot.systems/v1/status"&gt;Telescope dashboard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The dashboard is currently showing the &lt;a href="https://github.com/creativetimofficial/material-dashboard"&gt;material-dashboard&lt;/a&gt; template and we are going to add relevant information to it one PR at the time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4p1MYKdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94he3xv7yj6ydjlpzrj9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4p1MYKdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94he3xv7yj6ydjlpzrj9.png" alt="Material Dashboard" width="880" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To add relevant stats I had to go through the &lt;a href="https://docs.github.com/en/rest"&gt;Github API&lt;/a&gt; to see what data I could get from it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commit-count"&gt;
  &lt;/a&gt;
  Commit count
&lt;/h3&gt;

&lt;p&gt;I first found a way to get the weekly and yearly &lt;a href="https://docs.github.com/en/rest/reference/repos#get-the-weekly-commit-count"&gt;commit count&lt;/a&gt;. This request returns and array of the number of commits per week over the last year.&lt;/p&gt;

&lt;p&gt;Here is the request using &lt;code&gt;curl&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/vnd.github.v3+json"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  https://api.github.com/repos/Seneca-CDOT/telescope/stats/participation
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is with &lt;code&gt;fetch&lt;/code&gt; in Javascript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://api.github.com/repos/Seneca-CDOT/telescope/stats/participation`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/vnd.github.v3+json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// use received data&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#weekly-commits-activity"&gt;
  &lt;/a&gt;
  Weekly commits activity
&lt;/h3&gt;

&lt;p&gt;The second data I wanted was the total lines added and lines removed for the week. I found this by fetching the &lt;a href="https://docs.github.com/en/rest/reference/repos#get-the-weekly-commit-count"&gt;weekly commit activity&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://api.github.com/repos/Seneca-CDOT/telescope/stats/code_frequency"&gt;https://api.github.com/repos/Seneca-CDOT/telescope/stats/code_frequency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Taking the last element of the array gives us the &lt;a href="https://en.wikipedia.org/wiki/Unix_time"&gt;UNIX timestamp&lt;/a&gt;, the lines added and the lines removed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;[
  1636848000,
  876,
  -349
]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#latest-author"&gt;
  &lt;/a&gt;
  Latest author
&lt;/h3&gt;

&lt;p&gt;To get the author of the latest commit, I had to fetch the &lt;a href="https://docs.github.com/en/rest/reference/repos#list-commits"&gt;list of commits&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://api.github.com/repos/Seneca-CDOT/telescope/commits"&gt;https://api.github.com/repos/Seneca-CDOT/telescope/commits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The response includes a lot of information about each commit, so I only focused on the information I needed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;profile picture
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;{
  "commit": {
    "author": {
      "name": "Francesco Menghi",
    },
  },
  "author": {
    "login": "menghif",
    "avatar_url": "https://avatars.githubusercontent.com/u/53121061?v=4",
  },
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#total-contributors"&gt;
  &lt;/a&gt;
  Total Contributors
&lt;/h3&gt;

&lt;p&gt;Finally I wanted a way to get the total number of contributors of the repo. I fetched the &lt;a href="https://docs.github.com/en/rest/reference/repos#list-repository-contributors"&gt;repository contributors&lt;/a&gt; with 1 result per page and then retrieved the number of pages returned in the response header. &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2466#issuecomment-968177583"&gt;Thanks David!&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://api.github.com/repos/Seneca-CDOT/telescope/contributors?per_page=1`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/vnd.github.v3+json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contributors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/.*"next".*&amp;amp;page=&lt;/span&gt;&lt;span class="se"&gt;([&lt;/span&gt;&lt;span class="sr"&gt;0-9&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;.*"last".*/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h3&gt;

&lt;p&gt;This is the end result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---tzgbwGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/53121061/141859036-cce90833-054c-494d-8e63-69902aeb85a7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---tzgbwGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/53121061/141859036-cce90833-054c-494d-8e63-69902aeb85a7.png" alt="Telescope Dashboard" width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Javascript code with all the fetch requests is available &lt;a href="https://github.com/Seneca-CDOT/telescope/blob/master/src/api/status/public/js/github-stats.js"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am pleased with the result, but it is only the first step. I am sure that other students will find bugs to fix and will have more to contribute to it. I'm looking forward to how the dashboard will look once "finished".&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Windows Subsystem for Linux (WSL)</title>
      <author>KenjiGoh</author>
      <pubDate>Fri, 19 Nov 2021 15:28:32 +0000</pubDate>
      <link>https://dev.to/kenji_goh/windows-subsystem-for-linux-wsl-2d63</link>
      <guid>https://dev.to/kenji_goh/windows-subsystem-for-linux-wsl-2d63</guid>
      <description>&lt;p&gt;Writing here for sharing and also for my personal reference as I have very poor memory on and tend to forget some commands.&lt;/p&gt;

&lt;p&gt;For windows users, you can download WSL (Windows Subsystem for Linux) on powershell. WSL lets developers run a Linux environment directly on windows &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/about"&gt;Read more here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing, in Command Prompt or PowerShell, type &lt;strong&gt;wsl&lt;/strong&gt; and it will open the WSL terminal window:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wsl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To open a VS Code, type code . from the ubuntu terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go back to root directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mounting"&gt;
  &lt;/a&gt;
  Mounting
&lt;/h2&gt;

&lt;p&gt;/mnt is a standard subdirectory of the root directory on Linux. The /mnt/c/ directory basically means mounting on Windows C drive. Therefore if u see this path, it means u are accessing a folder that resides in Windows. &lt;a href="https://code.visualstudio.com/docs/remote/wsl"&gt;Read more here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/mnt/c/&amp;lt;file_path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w3s7IUDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbgt28rp0zac4ornjsl3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w3s7IUDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbgt28rp0zac4ornjsl3.png" alt="Windows-WSL" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sudo&lt;/strong&gt; means "super user do" - a Linux command that allows you to executedddd programs as a super user (aka root user)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before we go into installing new packages, lets cover some of the essential commands to help with troubleshooting.&lt;br&gt;
Key terminologies to know:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;postgres is one of the default PostgreSQL database&lt;/li&gt;
&lt;li&gt;postgres is also the default admin user in PostgreSQL&lt;/li&gt;
&lt;li&gt;psql - interactive commandline tool&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#basic-commands-to-know"&gt;
  &lt;/a&gt;
  Basic Commands to Know:
&lt;/h2&gt;

&lt;p&gt;To check status of database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service postgresql status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start running your database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service postgresql start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To stop running your database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service postgresql stop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#installation-of-packages"&gt;
  &lt;/a&gt;
  Installation of Packages
&lt;/h2&gt;

&lt;p&gt;To update &amp;amp; upgrade our Ubuntu to latest packages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To install package such as node, python or postgresql&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check  version, e.g. postgreSQL, you type either one of this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql -V
psql --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see all the command documentations, you can either type one of the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-?
--help
man postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Show information about all PostgreSQL clusters&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; pg_lsclusters
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#default-databases-of-postgres-server"&gt;
  &lt;/a&gt;
  Default Databases of Postgres server
&lt;/h2&gt;

&lt;p&gt;Most Postgres servers have three databases defined by default: &lt;strong&gt;template0, template1&lt;/strong&gt; and &lt;strong&gt;postgres&lt;/strong&gt;. &lt;em&gt;(yes it is a little confusing for first-timer, default user is postgres and one of the default database name is also postgres)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The default admin user, postgres, needs a password assigned in order to connect to a database. Therefore, to set a password:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo passwd postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see the command line change to &lt;em&gt;postgres=#&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To exit the &lt;em&gt;postgres=#&lt;/em&gt;, enter &lt;strong&gt;\q&lt;/strong&gt; or &lt;strong&gt;Ctrl+D&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\q
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To switch from root user to the default admin user, postgres.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;su - postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see something like this. You can now run commands as the PostgreSQL superuser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a new user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;createuser --interactive --pwprompt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be prompt the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$ createuser --interactive --pwprompt
Enter name of role to add: kenji
Enter password for new role: 
Enter it again: 
Shall the new role be a superuser? (y/n) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I (postgres user in this case) have created a new user called kenji.&lt;/p&gt;

&lt;p&gt;To create a new database called simple_blog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;createdb simple_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To destroy a database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dropdb simple_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-psql-interactive-shell-as-default-postgres-user"&gt;
  &lt;/a&gt;
  Using psql Interactive Shell as default postgres user
&lt;/h2&gt;

&lt;p&gt;To run Postgres with psql interactive shell(you can also just type &lt;strong&gt;psql&lt;/strong&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo -u postgres psql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be greeted with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql (12.9 (Ubuntu 12.9-0ubuntu0.20.04.1))
Type "help" for help.

postgres=#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press &lt;strong&gt;Ctrl+D&lt;/strong&gt; to exit and we will return to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we can switch to the new user we have just created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$ su - kenji
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will then see this instead (after password prompt):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji@DESKTOP-ORMQU9O:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can enter the psql command line by typing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji@DESKTOP-ORMQU9O:~$ psql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql (12.9 (Ubuntu 12.9-0ubuntu0.20.04.1))
Type "help" for help.

kenji=#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;psql&lt;/em&gt; is an interactive terminal program that allows you to interactively enter, edit and execute SQL commands. Remember to put ';' to end the SQL statement.&lt;/p&gt;

&lt;p&gt;With psql shell open, to see what user accounts have been created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \du
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see all other available backslash commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To exit the help log, type '\q' and press Enter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \q
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also check connection info to see port which database, which user and which port you are connected to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \conninfo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;You are connected to database "kenji" as user "kenji" via socket in "/var/run/postgresql" at port "5432".
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#start-psql-to-specific-database-you-have-created"&gt;
  &lt;/a&gt;
  Start psql to specific database you have created
&lt;/h2&gt;

&lt;p&gt;When not in psql shell, You can also startup psql to a specific database with the below commaned:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql simple_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be greeted with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql (12.9 (Ubuntu 12.9-0ubuntu0.20.04.1))
Type "help" for help.

simple_blog=#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see all database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\l
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can write SQL statement directly, remember to end with semi-colon:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;simple_blog=# CREATE TABLE my_table (
simple_blog(# first integer not null default 0,
simple_blog(# second text)
simple_blog-# ;
CREATE TABLE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you type '\d my_table', you will see the created table&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;simple_blog=# \d my_table
              Table "public.my_table"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 first  | integer |           | not null | 0
 second | text    |           |          | 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As always, to learn more, it is best to read the &lt;a href="https://www.postgresql.org/docs/"&gt;documentation&lt;/a&gt;, as some solutions shared by others might be outdated.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Best Python Courses for Beginners to Learn Online</title>
      <author>javinpaul</author>
      <pubDate>Fri, 19 Nov 2021 15:25:16 +0000</pubDate>
      <link>https://dev.to/javinpaul/10-best-python-courses-for-beginners-to-learn-online-4ok8</link>
      <guid>https://dev.to/javinpaul/10-best-python-courses-for-beginners-to-learn-online-4ok8</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.educative.io/courses/learn-python-from-scratch?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAI2O9AT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D620/v2api/collection/10370001/5550095527313408/image/5568089526632448" alt="Learn Python 3 from Scratch - Free Interactive Course" width="620" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello devs, Python is one of the best programming languages in the tech world and a great tool if you want to become a Software Developer, Data Scientist, Web Developer, or Machine Learning Engineer.&lt;/p&gt;

&lt;p&gt;Because of its ever-increasing popularity, more and more people are learning Python but at the same time, they are also struggling to find the &lt;strong&gt;&lt;em&gt;best resources to learn Python&lt;/em&gt;&lt;/strong&gt; in a guided and structured manner.&lt;/p&gt;

&lt;p&gt;Being an author of a technical blog, I often receive queries like how do I learn Python, &lt;em&gt;what is the best way to learn Python?&lt;/em&gt; Could you please suggest the best resource to learn Python, or should I join an online course from Udemy or Coursera to learn Python or not, etc.?&lt;/p&gt;

&lt;p&gt;After answering them individually, I found that online courses are the best way to learn Python and if you want to learn the Python programming language in 2022 and looking for the &lt;em&gt;best Python courses&lt;/em&gt; then you have come to the right place.&lt;/p&gt;

&lt;p&gt;I the past, I have also shared a lot of free sources like these &lt;a href="https://www.java67.com/2017/05/top-7-free-python-programming-books-pdf-online-download.html"&gt;free Python books&lt;/a&gt;, &lt;a href="https://dev.to/javinpaul/top-5-places-to-learn-python-programming-for-free-m4c"&gt;tutorials&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2018/12/10-free-python-courses-for-programmers.html"&gt;courses&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;specialization&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/10-best-python-certification-courses-from-coursera-4576890eb6b3"&gt;certification&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;Python projects&lt;/a&gt;, etc, but many of you asked for more comprehensive and advanced Python courses to master this key programming skill in 2022.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javarevisited.blogspot.com/2019/09/5-websites-to-learn-python-for-free.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fTuk4vE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/609/1%2Aaxds4g-oiL6bYQy55x7l5w.png" alt="" width="609" height="282"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a *lot of resources to learn Python on the interne*t, like these &lt;a href="https://medium.com/javarevisited/best-python-books-a93d1a0d842d"&gt;&lt;em&gt;best Python books&lt;/em&gt;&lt;/a&gt;, tutorials, &lt;a href="https://javarevisited.blogspot.com/2019/09/5-websites-to-learn-python-for-free.html"&gt;platforms&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;websites&lt;/a&gt;, including free and paid online courses, the only problem is finding the right course because it's very easy to get stuck with outdated resources.&lt;/p&gt;

&lt;p&gt;That's why we have selected a &lt;strong&gt;few advanced Python online training courses&lt;/strong&gt; from platforms like &lt;a href="https://javarevisited.blogspot.com/2019/08/top-10-udemy-courses-and-certifications-for-programmers.html"&gt;Udemy&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/pluralsight-or-udemy-d9a94d2e8ee"&gt;Coursera&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/10-free-best-edx-certifications-and-courses-to-learn-online-3473d466f968"&gt;edX&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2017/12/top-10-pluralsight-courses-java-and-web-developers.html"&gt;Pluralsight&lt;/a&gt; to help you learn Python from the best resources.&lt;/p&gt;

&lt;p&gt;If you are learning python from scratch or you have some knowledge of the Python programming language but want to take your Python skills to the next level, these online training courses can help you.&lt;/p&gt;

&lt;p&gt;These courses have been created by Python experts and trusted by more than 1 million &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;&lt;em&gt;Python developers&lt;/em&gt;&lt;/a&gt; around the world. These are simply the best of the best courses to learn Python in depth. They are equally good for beginners and experienced Python developers.&lt;/p&gt;

&lt;p&gt;According to various websites like StackOverflow, survey &lt;a href="https://medium.com/swlh/5-free-python-courses-for-beginners-to-learn-online-e1ca90687caf"&gt;&lt;strong&gt;Python&lt;/strong&gt; &lt;/a&gt;is among the most successful coding languages of the last years. There is a high demand for Python developers or all kinds of experience because of the versatile nature of the Python programming language.&lt;/p&gt;

&lt;p&gt;For example, simultaneously with being a high-level programming language and also used for general purposes like &lt;a href="https://www.java67.com/2019/11/top-5-artificial-intelligence-courses.html"&gt;AI&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2019/09/top-5-courses-to-learn-d3js-best.html"&gt;Data visualization&lt;/a&gt; and building web applications. Python is also an object-oriented language and open source so it has a large community that works together to develop a beautiful programming language.&lt;/p&gt;

&lt;p&gt;Many developers right now over the world are jumping to use &lt;a href="https://www.java67.com/2017/05/top-7-free-python-programming-books-pdf-online-download.html"&gt;Python&lt;/a&gt; for its simplicity like creating GUI applications, websites, and mobile apps.&lt;/p&gt;

&lt;p&gt;I have also selected &lt;strong&gt;hands-on&lt;/strong&gt; and &lt;strong&gt;project-based courses&lt;/strong&gt; where you will &lt;a href="https://dev.to/javinpaul/9-projects-you-can-do-to-become-a-python-master-in-2020-1om"&gt;&lt;strong&gt;learn Python by creating real work projects&lt;/strong&gt;&lt;/a&gt;. This is probably the best method to learn any new technology including Python 3 and it works really well. You won't realize that you have learned so many Python concepts while developing those projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-best-python-online-courses-to-learn-python-in-depth"&gt;
  &lt;/a&gt;
  10 Best Python Online Courses to Learn Python in depth
&lt;/h2&gt;

&lt;p&gt;Now in this article, we will see 5 of the advanced python courses that take you from a beginner to an expert and will make you a professional programmer whether in creating GUI applications or a data visualization expert, or an AI specialist.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-100-days-of-code-the-complete-python-pro-bootcamp-for-2022"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;100 Days of Code --- The Complete Python Pro Bootcamp for 2022&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to learn Python in 2022 and looking for a project-based course then this is the best course you can join on Udemy. Created by Angela Yu, instructor of the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fios-13-app-development-bootcamp%2F"&gt;&lt;strong&gt;iOS Bootcamp course&lt;/strong&gt;&lt;/a&gt;, this online course will teach you Python by building 100 projects in 100 days.&lt;/p&gt;

&lt;p&gt;You will learn to build websites, games, apps, plus scraping and data science, and become a Python professional. After completing this course you will also have a portfolio of 100 Python projects to apply for developer jobs which will make you a standout candidate.&lt;/p&gt;

&lt;p&gt;Also, this is one of the massive courses with 60+ hours of content and 229 articles but you can buy in just $9.9 on Udemy sales which happens every now and then. If you want to learn Python in 2022, I strongly recommend you to join this course on Udemy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this best Python course&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;100 Days of Code --- The Complete Python Pro Bootcamp for 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q7HUj9ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/609/1%2Aynze9qj9-qx1H72o-6h0CQ.jpeg" alt="Best project based Python course for beginners" width="609" height="342"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-complete-python-developer-in-2022-zero-to-mastery"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-developer-zero-to-mastery%2F"&gt;Complete Python Developer in 2022: Zero to Mastery&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;There is no doubt that Udemy is one of the best learning platforms out there and probably is the most famous among students who want to learn skills in many different things such as programming, design, and many more fields.&lt;/p&gt;

&lt;p&gt;The platform has tens of courses about python programming language and some of them take you from beginner to advanced level.&lt;/p&gt;

&lt;p&gt;This is clearly the best Python course on Udemy. I have attended many Python courses on Udemy like &lt;a href="http://bit.ly/2ysqzDa"&gt;&lt;strong&gt;The Complete Python 3 Bootcamp&lt;/strong&gt;&lt;/a&gt; by Jose Portal which is really great but this course is even better with lots of exercises, quizzes, and hands-on projects.&lt;/p&gt;

&lt;p&gt;The Complete Python Course: Beginner to Advanced course has more than 3-.5 hours of video content and shows you how to create programs like a web scraper, web application with Django framework, GUI application, Data visualization, Machine learning, and much more.&lt;/p&gt;

&lt;p&gt;Here is the link to join this Python course --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-developer-zero-to-mastery%2F"&gt;Complete Python Developer in 2022: Zero to Mastery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-developer-zero-to-mastery%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFE0izPQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Awh4Gvp6C3G0t9Vi1iCOrGw.jpeg" alt="Best Python course for beginners" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you love Udemy courses and looking for the best Python course on Udemy, join this course, and if you like Andrei's teaching style then you may want to consider joining his &lt;a href="https://academy.zerotomastery.io/p/complete-python-developer-zero-to-mastery?affcode=441520_zytgk2dn"&gt;&lt;strong&gt;Zero To Mastery Academy&lt;/strong&gt;&lt;/a&gt;where he offers unlimited access to all of his courses, including this one. If you do, use code FRIENDS10 to get the 10% discount, exclusive for you.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-python-for-everybody-specialization"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;Python for Everybody Specialization&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Many programming online learning platforms have recognized the power and the future of this beautiful programming language and they have created courses on how to use it and be a professional programmer and of these platforms is Coursera.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;Python for Everybody&lt;/a&gt; is a specialization offered by one of the best universities called Michigan university and the instructor is one of the best teachers on this platform.&lt;/p&gt;

&lt;p&gt;This course will show you how to start from the beginning and be an advanced python programmer by many projects such as web crawler and using SQL databases with Python and &lt;a href="https://www.java67.com/2020/07/top-5-data-visualization-tools-every.html"&gt;data visualization&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the link to join this best Python course on Coursera --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;Python for Everybody&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2L5yy4xo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AfoI88hNJSxvjPf6XeAwPiQ.jpeg" alt="Best Coursera Python course for beginners" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And, if you find Coursera courses useful, you should consider joining the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;&lt;strong&gt;Coursera Plus&lt;/strong&gt;&lt;/a&gt;, a subscription plan from Coursera which gives you unlimited access to their most popular courses, specialization, professional certificate, and guided projects. It cost around $399/year but it's completely worth your money as you get &lt;strong&gt;unlimited certificates.&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-the-python-mega-course"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-mega-course%2F"&gt;The Python Mega Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is one of the Best Project Based Course to learn Python in depth. Python has many libraries that you can use to create useful things like AI applications or visualize some data or create web applications.&lt;/p&gt;

&lt;p&gt;If you don't want just to learn python and how you create just a basic program you can take The Python Mega Course: Build 10 Real World Applications course.&lt;/p&gt;

&lt;p&gt;This course will take you through the basic syntax of the python programming language like data types and the for loops then will show you how to use these libraries to create GUI applications, visualize data, create web applications, visualize data on a map, process images and videos with &lt;a href="https://www.java67.com/2020/07/top-5-courses-to-learn-computer-vision-opencv-python.html"&gt;OpenCV&lt;/a&gt;, and much more exciting projects.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is the link to join this project-based Python course&lt;/em&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-mega-course%2F"&gt;The Python Mega Course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-mega-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aVFzGT----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AifW8EbMz1tcG5n6kDbm-jw.jpeg" alt="Best Python course online" width="750" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-introduction-to-python-programming-best-edx-course"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fprofessional-certificate%2Fintroduction-to-python-programming"&gt;Introduction to Python Programming&lt;/a&gt; [ Best edX course]
&lt;/h3&gt;

&lt;p&gt;If you want to learn python programming from professional universities or big institutes you can take a look at another alternative of Coursera called Edx. The platform offers many python courses created by universities and many big companies like Microsoft and the Georgia Institute of Technology.&lt;/p&gt;

&lt;p&gt;All you have to do is go to &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p="&gt;edx.org&lt;/a&gt; and search for tens of python classes but to save you some time I'm going to give you one of the best python courses out there.&lt;/p&gt;

&lt;p&gt;Introduction to Python Programming is a course offered on this wonderful platform and created by the Georgia Institute of Technology.&lt;/p&gt;

&lt;p&gt;Instructor David Joyner is a Senior Research Associate at the College of Computing walk you in this course from beginner to advanced and how to use the object-oriented programming method (&lt;a href="https://medium.com/swlh/5-free-object-oriented-programming-online-courses-for-programmers-156afd0a3a73"&gt;OOP&lt;/a&gt;) in your python program which is an essential skill if you want to get a job in this field since it shows you how to work as a team.&lt;/p&gt;

&lt;p&gt;Here is the link to join this best edX Python course --- &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fprofessional-certificate%2Fintroduction-to-python-programming"&gt;Introduction to Python Programming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fprofessional-certificate%2Fintroduction-to-python-programming"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vmh8AiIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AhsnLpEON4O3nzM8VE0RZTw.jpeg" alt="Best edX course to learn Python" width="880" height="524"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-build-a-job-board-with-python-amp-flask-pluralsight-best-course"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fprojects%2Fbuild-a-job-board-with-python-flask"&gt;Build a Job Board with Python &amp;amp; Flask&lt;/a&gt; [Pluralsight best course]
&lt;/h3&gt;

&lt;p&gt;Many programmers and learners don't know that Pluralsight also has projects which you can join to build real-world projects and apply all the knowledge you have learned. This project is created by Tom Bell and it will show you how to use &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;Python&lt;/a&gt; &amp;amp; &lt;a href="https://javarevisited.blogspot.com/2020/01/top-5-courses-to-learn-flask-for-web-development-with-python.html"&gt;Flask&lt;/a&gt; to build a simple website.&lt;/p&gt;

&lt;p&gt;In this project, you'll use them to build a simple job board. The main page of the site will show all jobs and each job and employer will have dedicated pages. Users will also be able to review each employer.&lt;/p&gt;

&lt;p&gt;This project-based course will first teach you how to set up your local environment for projects and then walk you through everything you need to know, including how to install and configure your environment to be able to complete all of the tasks.&lt;/p&gt;

&lt;p&gt;This step-by-step guidance really helps you to move along swiftly and create a product that you can be proud of. The feeling of accomplishment you get will further boost your learning appetite and also help you to become a better Python developer.&lt;/p&gt;

&lt;p&gt;This project-based Pluralsight course is good for both beginners and intermediate Python programmers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is the link to join this hands-on Python course&lt;/em&gt; --- &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fprojects%2Fbuild-a-job-board-with-python-flask"&gt;Build a Job Board with Python &amp;amp; Flask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fprojects%2Fbuild-a-job-board-with-python-flask"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vsBk7zx---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AJoIHVp9CDBOhEpXpSoxeew.png" alt="Best Pluralsight course to learn Python" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Btw, you would need a Pluralsight membership to join this course which costs around $29 per month or $299 per year (14% discount). I highly recommend this subscription plan as you not only gain access to this project but also more than 40 such projects, 7000+ online courses, and interactive exercises. Alternatively, you can also use their &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt;10-day-free-trial&lt;/strong&gt;&lt;/a&gt; to access this course for FREE.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-learn-python-programming-masterclass-udemy"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-the-complete-python-developer-course%2F"&gt;Learn Python Programming Masterclass --- Udemy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another great course to learn Python in depth from Udemy. While the first course is great for beginners this course covers some advanced concepts which make it useful for experienced Python developers.&lt;/p&gt;

&lt;p&gt;Getting the best program to learn such a beautiful language like python can be a difficulty sometimes with that many courses available online. In Udemy, you can get the right Python course for you bypassing a short test but I'm going to suggest one of the &lt;a href="https://medium.com/better-programming/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec?"&gt;&lt;strong&gt;best Python courses&lt;/strong&gt;&lt;/a&gt; you can join on Udemy.&lt;/p&gt;

&lt;p&gt;Learn Python Programming Masterclass course is designed to take you from the beginning stage to be an advanced python developer with more than 50 hours of video content and 24 coding exercises that will enhance your coding skills by practice and also you can show these projects on your LinkedIn portfolio to attract job offers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is the link to join this Python coding course&lt;/em&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-the-complete-python-developer-course%2F"&gt;Learn Python Programming Masterclass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-the-complete-python-developer-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ln3mOKMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A07Lqu3l9Cb6m62lRcJGYIQ.jpeg" alt="Best Udemy course to learn Python" width="750" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-google-it-automation-with-python-on-coursera"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;Google IT Automation with Python on Coursera&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another great specialization offered by Google targeted people who want to be Python developers showing taking them from beginner to expert throughout many small courses teaching you the basic syntax of python, &lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-data-structure-and-algorithms-d5379ae2588"&gt;data structure,&lt;/a&gt; automation, &lt;a href="https://medium.com/javarevisited/my-favorite-courses-to-learn-object-oriented-programming-and-design-in-2019-197bab351733"&gt;object-oriented programming&lt;/a&gt;, how to use Git and Github, and much more topics included in this specialization.&lt;/p&gt;

&lt;p&gt;This certificate can be completed in about 6 months and is designed to prepare you for a variety of roles in IT, like more advanced IT Support Specialist or Junior Systems Administrator positions. Upon completion, you can share your information with potential employers, like Walmart, Sprint, Hulu, Bank of America, Google (of course!), and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this certification&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;Google IT Automation with Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_Jad5y8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/525/0%2ALxH5GurIrRw32Kg3.jpeg" alt="" width="525" height="274"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-learn-python-3-on-codecademy"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://bit.ly/learnpython3codecademy"&gt;Learn Python 3 on Codecademy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another interesting and interactive online course to learn Python 3 for beginners. I really like the curriculum and Codecademy platform for learning Python. The examples are shorter and to-the-point and provide quick feedback which is quite important for learners. &lt;/p&gt;

&lt;p&gt;This course also provide great introduction to both fundamental programming concepts and the Python programming language. Python 3 is the most up-to-date version of the language with many improvements made to increase the efficiency and simplicity of the code that you write.&lt;/p&gt;

&lt;p&gt;This is also a comprehensive course with more than 25 hours of content. Btw you would need a &lt;a href="https://bit.ly/codecademypro"&gt;Codecademy PRO subscription&lt;/a&gt; to join this course which cost around $15.9 on annual plan but its totally worth it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/learnpython3codecademy"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpXRdAD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aws1.discourse-cdn.com/codecademy/original/5X/0/b/2/9/0b29ee29b14c9481e04de9ea06de1b1cc95615d1.png" alt="Python 3 quiz incorrect answers? - Python - Codecademy course" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10-python-201-interactively-learn-advanced-concepts-in-python-3-on-educative"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.educative.io/courses/python-201-interactively-learn-advanced-concepts-in-python-3?affiliate_id=5073518643380224"&gt;Python 201 - Interactively Learn Advanced Concepts in Python 3 on Educative&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another awesome interactive course for Python developers to learn Python in depth. This course is created by Educative, a text-based interactive learning platform, to  help take you to the next level in your programming journey. &lt;/p&gt;

&lt;p&gt;It will also demonstrate to you some of the many ways you can use Python in your day-to-day work. I will be covering intermediate and some advanced level material in this course.&lt;br&gt;
Python 201 is split into four parts:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Part one covers intermediate modules&lt;br&gt;
Part two covers topics such as unicode, generators and iterators&lt;br&gt;
Part three covers web related tasks with Python&lt;br&gt;
Part four covers testing code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's expected that you have some basic knowledge of Python before joining this course as its an intermediate level Python course. &lt;/p&gt;

&lt;p&gt;And, if you find Educative platform and their interactive courses like this one and famous &lt;a href="https://www.educative.io/collection/5668639101419520/5649050225344512?affiliate_id=5073518643380224"&gt;Grokking the System Design&lt;/a&gt; course then consider getting &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative Unlimited&lt;/a&gt; which provides access to their 100+ courses in just $14.9 per month. It's very cost-effective and great for preparing for coding interviews. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/python-201-interactively-learn-advanced-concepts-in-python-3?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIh4mGrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D620/v2api/collection/6237007991275520/6500415600852992/image/5866506968104960%3Faffiliate_id%3D5073518643380224" alt="Python 201 - Interactively Learn Advanced Concepts in Python 3 - Learn  Interactively" width="620" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about some of the &lt;strong&gt;best courses to learn Python in-depth&lt;/strong&gt; and become an expert Python Developer. As I said, Python skills are in great demand and there is always a shortage of people who knowns Python really well.&lt;/p&gt;

&lt;p&gt;As an experienced Python developer you are expected to be familiar with not only essential Python concepts but also have good hands-on knowledge of them so that you can use the right tools at the right place and deliver better software quicker.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Python Programming and Development Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/05/10-reasons-to-learn-python-programming.html"&gt;10 Reasons to Learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/@javinpaul/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Python Projects for Beginners and Intermediate Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;Free Python Tutorials from Google and Microsoft&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2019/08/top-5-books-to-learn-python-for-beginners.html"&gt;Top 5 Books to learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/swlh/5-free-python-courses-for-beginners-to-learn-online-e1ca90687caf"&gt;15 Free courses to learn Python for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/@javinpaul/my-favorite-courses-to-learn-django-for-beginners-2020-ac172e2ab920?source=rss------web_development-5"&gt;My favorite courses to learn Django for beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://becominghuman.ai/9-data-science-and-machine-learning-courses-by-harvard-ibm-udemy-and-others-12a0c7c23ec1"&gt;9 Data Science courses from Harvard and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/python-or-java-which-programming-language-beginners-should-learn-in-2020-de992b2650ec"&gt;Python vs Java --- Which is better to start with&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;10 Courses to learn Python for Web Development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-python-books-for-data-science-and-machine-learning.html"&gt;5 Books to learn Python for Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;10 Best Python Specialization and Certificates from Coursera&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/01/top-5-courses-to-learn-flask-for-web-development-with-python.html"&gt;Top 5 Courses to learn Flask in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/10/top-8-python-libraries-for-data-science-machine-learning.html"&gt;8 Python Libraries for Machine Learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.sg/2018/01/10-unit-testing-and-integration-tools-for-java-programmers.html"&gt;10 Testing Libraries Every Java Developer Should Know&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/04/top-5-python-web-development-frameworks.html"&gt;5 Python Frameworks you can learn for Web development&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you find these &lt;em&gt;best Python coding courses useful in 2022&lt;/em&gt; then please share them with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. ---&lt;/strong&gt; If you want to learn Python programming but can't afford these online training courses or looking for a free resource to start with Python programming then I also suggest you take a look at &lt;a href="http://bit.ly/2D5vvnV"&gt;&lt;strong&gt;Introduction To Python Programming&lt;/strong&gt;&lt;/a&gt; from Udemy. It's completely free and all you need is a free Udemy account to enroll in this course. More than 490,000 students have already learned Python from this course.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Rust from the beginning, variables</title>
      <author>Chris Noring</author>
      <pubDate>Fri, 19 Nov 2021 15:19:42 +0000</pubDate>
      <link>https://dev.to/azure/rust-from-the-beginning-variables-3g7c</link>
      <guid>https://dev.to/azure/rust-from-the-beginning-variables-3g7c</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TLDR; this is the second part on Rust. In this part we'll cover variables, how to work with them, change values and so on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/rust-from-the-beginning-your-first-program-30cp"&gt;Your first program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Variables, &lt;strong&gt;you are here&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;IO, read and write from the console&lt;/li&gt;
&lt;li&gt;Rust projects with Cargo&lt;/li&gt;
&lt;li&gt;Control flow&lt;/li&gt;
&lt;li&gt;Error handling&lt;/li&gt;
&lt;li&gt;Working with files
Advanced&lt;/li&gt;
&lt;li&gt;Ownership &amp;amp; Borrowing&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0resources"&gt;
  &lt;/a&gt;
   Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/modules/rust-introduction?wt.mc_id=academic-0000-chnoring"&gt;What is Rust, module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/modules/rust-create-program?wt.mc_id=academic-0000-chnoring"&gt;Create your first Rust program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rust-lang.org/learn"&gt;Rust Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-variables"&gt;
  &lt;/a&gt;
  Why variables
&lt;/h2&gt;

&lt;p&gt;We use variables to store a value that we want to use later. Additionally, having a variable, a named reference, we're able to better understand what's going on. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Your account balance {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine you didn't have &lt;code&gt;account_balance&lt;/code&gt; but referred to 4000 in your code, you wouldn't know at first glance what 4000 is about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declare-variables"&gt;
  &lt;/a&gt;
  Declare variables
&lt;/h2&gt;

&lt;p&gt;To declare a variable in Rust, we need to give it a name and a value, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how we start with the keyword &lt;code&gt;let&lt;/code&gt;, a name for the variable &lt;code&gt;name&lt;/code&gt;, and a value, "Chris". &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-is-inferred-by-value"&gt;
  &lt;/a&gt;
  Type is inferred by value
&lt;/h3&gt;

&lt;p&gt;Values in Rust have type, and this type is decided at first assignment of a value to the variable. In the below case, &lt;code&gt;name&lt;/code&gt; is of type string and &lt;code&gt;age&lt;/code&gt; of type &lt;code&gt;i32&lt;/code&gt; an integer type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a variable gets a type like this, we call it as type is &lt;em&gt;inferred&lt;/em&gt;, meaning that Rust observes what value it's being assigned and makes conclusions based on the assignment.&lt;/p&gt;

&lt;p&gt;The type it's inferred is a &lt;em&gt;default&lt;/em&gt; type. So numbers, lacking fraction becomes &lt;code&gt;i32&lt;/code&gt;, 32 bit integer (whole numbers lacking decimals) for example. If you want to check what default data types, here's some nice code you can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;type_of&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;any&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;type_name&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nf"&gt;type_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nf"&gt;type_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will print &lt;code&gt;i32&lt;/code&gt; and &lt;code&gt;string&lt;/code&gt; when run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables-are-immutable"&gt;
  &lt;/a&gt;
  Variables are immutable
&lt;/h3&gt;

&lt;p&gt;Variable values can't be change by default. You might start assigning a value to a variable like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then later you want to change it to say 4500 and attempt to write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, you will get an error back, that you can't do this, because it's immutable. At this point you will see just how awesome the Rust compiler is by providing you not only with the error message, but what to do about it as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; let account_balance = 4000;
  |       ---------------
  |       |
  |       first assignment to `account_balance`
  |       help: make this binding mutable: `mut account_balance`
7 |   account_balance = 4500;
  |   ^^^^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The error message suggest we make this &lt;em&gt;mutable&lt;/em&gt;. Let's explain what that means in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-variable-value"&gt;
  &lt;/a&gt;
  Change variable value
&lt;/h2&gt;

&lt;p&gt;Variables are immutable but there are ways to change them. There are two major approaches to change their values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;make them mutable&lt;/strong&gt;, this involves using the keyword &lt;code&gt;mut&lt;/code&gt; when declaring the variable. Like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;   &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;shadowing&lt;/strong&gt;, what we do here is declare a variable later down in the code with the exact same variable name but with a new variable name. What happens is that the old variable is "shadowed over" by the name variable and can no longer be referenced to:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;   &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c"&gt;// other code&lt;/span&gt;
   &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;// this version of account_balance shadows the first declared version.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#constants"&gt;
  &lt;/a&gt;
  Constants
&lt;/h2&gt;

&lt;p&gt;So far we've been using the the &lt;code&gt;let&lt;/code&gt; keyword to declare variables. Another way to declare variables is by using the &lt;code&gt;const&lt;/code&gt; keyword. &lt;code&gt;const&lt;/code&gt; means something different than &lt;code&gt;let&lt;/code&gt; though, with &lt;code&gt;const&lt;/code&gt; you declare a variable that should never change. What you are saying in the code is that here's a variable that we don't expect to ever change like the value of PI or C for the speed of light.&lt;/p&gt;

&lt;p&gt;To declare such a variable, we can type like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;f32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the usage of &lt;code&gt;const&lt;/code&gt; and that we explicitly need to set a type, &lt;code&gt;:f32&lt;/code&gt;, a 32-bit floating-point type. In this case, we choose &lt;code&gt;f32&lt;/code&gt;, but the default would be &lt;code&gt;f64&lt;/code&gt; per below compiler recommendation. &lt;/p&gt;

&lt;p&gt;Where you to skip the type, you would get an error like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  |
6 |   const PI = 3.14;
  |         ^^ help: provide a type for the item: `PI: f64`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's also another type of constant, &lt;code&gt;static&lt;/code&gt;, but it's outside the scope of this article, if you want to learn more about that one, &lt;a href="https://doc.rust-lang.org/rust-by-example/custom_types/constants.html"&gt;check the docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;In summary, we've learned about bit more on why variables, how to declare them and assign different types of values to them. Additionally, we've seen how variables are immutable but can be changed either by using &lt;code&gt;mut&lt;/code&gt; keyword or shadowing, declare a varible by the same name.&lt;/p&gt;

</description>
      <category>rust</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Flutter: Google’s Most Ambitious Framework</title>
      <author>Harshu Incorporation</author>
      <pubDate>Fri, 19 Nov 2021 15:17:27 +0000</pubDate>
      <link>https://dev.to/harshuinc/flutter-googles-most-ambitious-framework-4fe0</link>
      <guid>https://dev.to/harshuinc/flutter-googles-most-ambitious-framework-4fe0</guid>
      <description>&lt;p&gt;19th Century was about the Industrial Revolution. The 20th Century was about Science and Engineering. And the 21st Century is all about Technology. The era in which we are living right now is called the Digital Age.&lt;/p&gt;

&lt;p&gt;Today Technology is everywhere. From the Smartphone that is in your pocket to the Smartwatch that is on your wrist right now. Today Televisions are Smart, Refrigerators are smart, Air Conditioners are smart, even the car you are driving is also smart.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since our every devices are smart and connected with each other, we need ONE PLATFORM FOR ALL DEVICES. Whether its our Smartphone, Smartwatch, Smart TV, Smart AC, Smart Car, Smart Home Products, One Platform for all of Them....&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This idea is really similar to the terminology &lt;strong&gt;&lt;em&gt;Write Once Run Everywhere&lt;/em&gt;&lt;/strong&gt;, which is introduced in the late 70s. The first languages based on this terminology were Java and Python.&lt;/p&gt;

&lt;p&gt;Since then every major company tried to release their platforms based on this terminology whether it is Ionic, React Native, Xamarin, PhoneGap or any other framework. On May 2017, Tech Giant Google Introduced one framework named Flutter which is capable of delivering native Android and iOS apps from a single code base. This was an alpha release of Flutter.&lt;/p&gt;

&lt;p&gt;So you might have some Questions that commonly arise when anyone thinks to switch from React Native to flutter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If React Native is pretty dominating in the market right now then why you should give a chance to flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If every major company including Facebook, Instagram, Bloomberg, Uber, Skype, and Wix uses React Native then why you should give a chance to Flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On Big Job Portals including Nokri.com, Indeed.com, Careerbuilder.com, Dice.com, and Monster.com, there are hundreds of jobs available for React Native developers but still, very less amount of jobs are available for flutter developers then why you should give a chance to flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Native is based on the most popular tech stack JavaScript, So tutorials and community support are amazing for JavaScript, and there are lots of JavaScript developers already available in the market then why you should invest your time in learning a pretty unknown language Dart for developing apps on flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Native is here from quite some time. So the support for react native is amazing on community sites like Stack Overflow, Quora and over the internet.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So if everything is fine with React Native why you should give a chance to flutter ?? So now Let me give the answer to your &lt;strong&gt;WHY ?&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-just-like-others-flutter-is-not-just-for-android-and-ios"&gt;
  &lt;/a&gt;
  1. Just like others, Flutter is not just for Android and iOS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After the 1.0 release, flutter is evolving really fast. On the 1.0 release, it was only used for targeting Android and iOS just like others.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But with the release of Flutter 1.5, flutter team amazed everyone. They officially announced that from now, flutter will not only available for Android and iOS, but it will also available for Web, Desktop, and Embedded devices. Yaa they are in Preview right now, that means they are gonna launch it really soon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So if you learn flutter you will become One Man Army, because from just one framework you will able to target every major platform. You just need to master one framework. Just imagine the power that flutter gives you. 🔥&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you wanna develop for Web flutter is here to help you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you wanna develop Native Android and iOS apps flutter is here to help you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you wanna develop apps for Windows, macOS, or Linux flutter is available for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And at the end, if you wanna develop apps for embedded devices such as smartwatches and smart home products, here also flutter is available for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-fuchsia-os-the-most-powerful-beast-in-the-game"&gt;
  &lt;/a&gt;
  2. Fuchsia OS: The Most Powerful beast in the Game.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The second and the most amazing reason to learn flutter is that in future &lt;strong&gt;&lt;em&gt;Entire App development in Fuchsia will be done in a flutter.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We all know that Google is working on a really secret Operating System named Fuchsia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Only the Core Google team knows the real power of Fuchsia OS. But there are really strong rumors that Fuchsia will be the cross-platform OS. That means whether it will mobile, desktop, or embedded devices, ONE OS EVERYWHERE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And for developing apps for Fuchsia, &lt;strong&gt;&lt;em&gt;Flutter is the way for you.&lt;/em&gt;&lt;/strong&gt; And as of rumors, if fuchsia is the successor of Android then you can only imagine the wider market and high demand for flutter developers that will be coming in the next couple of years. So that’s why learning flutter really worth of your time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-faster-app-development"&gt;
  &lt;/a&gt;
  3. Faster App Development
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Another important reason for learning flutter is the development speed that it provides to you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While designing the flutter framework, Google developers have a one really big advantage and challenge. They have almost 10 years of experience in App Development. So they know every pain and problem that comes in the traditional native app development.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Having experience and knowledge of the market problems is their advantage. But how to overcome those problems and create a framework that makes app development faster was a big challenge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Today You Just ask any developer who codes one or two apps in a flutter that how fast it is to create apps in a flutter. He/she will tell you only one thing that &lt;strong&gt;&lt;em&gt;no one can beat flutter in faster app development.&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-the-partnership-of-dart-and-flutter-team"&gt;
  &lt;/a&gt;
  4. The Partnership of Dart and Flutter team
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dart is a language created by Google. And also Flutter is created by Google. In Google, both teams work together to optimize dart for flutter and Fuchsia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the recent versions of the dart, you can understand how dart team is working hard to optimize the language for Flutter. This is a really big advantage for Flutter that dart team is always there to help them in making flutter more powerful and feature-rich. None of the frameworks have this kind of advantage. That makes flutter more Powerful and Unique from others.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-features-of-flutter"&gt;
  &lt;/a&gt;
  5. Features of Flutter
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;And Finally, let’s discuss the features of flutter. Flutter has four main features.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Stateful Hot Reload&lt;/li&gt;
&lt;li&gt;Beautiful Apps&lt;/li&gt;
&lt;li&gt;Productive&lt;/li&gt;
&lt;li&gt;High Performance&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;let’s discuss each topic in detail.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#stateful-hot-reload"&gt;
  &lt;/a&gt;
  Stateful Hot Reload
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Flutter provides you stateful hot reload. If you have experience with the native app development then you must know how much time-consuming it is to compile the whole app.&lt;/li&gt;
&lt;li&gt;But flutter provides you the facility of stateful hot reload. So in just fraction of seconds, you can view your changes. Just like in web development you refresh the webpage to see your changes, the same concept goes here.&lt;/li&gt;
&lt;li&gt;For providing stateful hot reload flutter uses Dart Virtual Machine in debug mode builds to quickly inject new code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#beautiful-apps"&gt;
  &lt;/a&gt;
  Beautiful Apps
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;You can give any look you want from a design language of your choice. Flutter supports both Material Design and Cupertino Based Widgets. So apps build with flutter are naturally beautiful, you will not need much of the hard work to make them beautiful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#productive"&gt;
  &lt;/a&gt;
  Productive
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Flutter has rich-set of in-built function that will make your development faster and sweeter.&lt;/li&gt;
&lt;li&gt;It has a rich set of widgets that will make your life easier and your development faster. Just try it once, you’ll love the crazy power that flutter gives you right in the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#high-performance"&gt;
  &lt;/a&gt;
  High Performance
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For rendering widgets, Flutter uses its own high-performance 2D rendering engine named Skia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the help of Skia, flutter is able to provide performance over 60fps. So your animations look smoother, and your UI behaves naturally faster.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;So I hope you get the answer to your WHY FLUTTER?? But still If you have any questions please feel free to ask me. And If I misses something please tell me that, I’ll love to learn from you. And believe me learning flutter will be one of the best choices you ever make.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>flutter</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Higher-order Functions</title>
      <author>kanaka raj</author>
      <pubDate>Fri, 19 Nov 2021 15:10:51 +0000</pubDate>
      <link>https://dev.to/kanakaraju/higher-order-functions-374b</link>
      <guid>https://dev.to/kanakaraju/higher-order-functions-374b</guid>
      <description>&lt;h5&gt;
  &lt;a href="#a-function-takes-another-function-has-an-argument-or-returns-a-function-is-called-as-higherorder-functions"&gt;
  &lt;/a&gt;
  A function takes another function has an argument (or) returns a function is called as Higher-Order functions
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; function X(){
       console.log("Hey Luffy");               
      }

 function Y(X){
  x();
 }
 y()(); // Prints Hey Luffy 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, function Y is accepting X() as an argument, Hence Y becomes a &lt;em&gt;Higher-order function&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understanding the purpose of Higher-order functions with an example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Consider the array of radius &lt;code&gt;const radius = [3,4,5,1];&lt;/code&gt;&lt;br&gt;
And the objective is to calculate the Area, Circumference and Diameter&lt;br&gt;
Normal functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const calculateArea = function(radius){
const output = [];
   for(let i = 0; i &amp;lt; radius.length ; i++){
   output.push(Math.pi*radius[i]*radius[i]);
   }
return output;
}

const calculateCircuference = function(radius){
const output = [];
   for(let i = 0; i &amp;lt; radius.length ; i++){
   output.push(Math.pi*2*radius[i]);
   }
return output;
}

const calculateDiameter = function(radius){
const output = [];
   for(let i = 0; i &amp;lt; radius.length ; i++){
   output.push(2*radius[i]);
   }
return output;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above 3 functions work perfectly, but there's a problem.&lt;br&gt;
can you spot the problem? If you spot it, we will try to solve the problem, else the problem is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Repetitive code =&amp;gt; There's a principle in software Engineering, DRY principle which stands for Don't repeat yourself.
the above 3 functions have almost 90% of the same code, and what changes is the logic of Area, Circumference, Diameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Optimized Approach:&lt;/strong&gt;&lt;br&gt;
   After Observing the functions, we are repeating the array declaration, iterating loop, returning array again and again. And the logic is the only thing which is changing.&lt;br&gt;
and why  don't we just extract the logic outside the function and writing it as an separate function.&lt;br&gt;
Eg:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const area = function(radius){
return Math.pi*radius[i]*radius[i];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us write a generic function which the accepts the Array, and the logic function as argument, and just perform array initialization, loop iteration, logic function call, and return array.&lt;br&gt;
Yeah, we are writing a Higher order function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const calculate = function(radius, logic){
 const output = [];
   for(let i = 0; i &amp;lt; radius.length ; i++){
   output.push(logic(radius[i])); // every time the logic is called with new array value.
   }
return output;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we call the calculate function &lt;code&gt;calculate(radius,area);&lt;/code&gt; it returns the array of Areas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;THE BEAUTY:&lt;/strong&gt;&lt;br&gt;
 Lets see how amazing the calculate function is.&lt;br&gt;
Now we need to calculate the circumference, diameter. we no longer need to copy paste the code. But we can just write the logic function circumference and diameter or any value you want to find.&lt;br&gt;
just write the logic in a function and pass it to calculate function as a second argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const circumference = (radius){
return 2*Math.pi*radius;
}
const daimeter = (radius){
return 2*radius;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;just call the calculate function with these two passed as second argument. &lt;code&gt;calculate(radius,circumference)&lt;/code&gt; &lt;code&gt;calculate(radius,daimeter)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt;&lt;br&gt;
Functional programming is huge in itself but as a small part of it say that "Think in smaller functions". Whenever you're giving a coding round Interview then try to write the code in Higher-order functions.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>higherorderfunctions</category>
      <category>example</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why You Should Learn JavaScript As Your First Programming Language</title>
      <author>Zahra Khan</author>
      <pubDate>Fri, 19 Nov 2021 15:10:10 +0000</pubDate>
      <link>https://dev.to/zahrakhadijha/why-you-should-learn-javascript-as-your-first-programming-language-2c8g</link>
      <guid>https://dev.to/zahrakhadijha/why-you-should-learn-javascript-as-your-first-programming-language-2c8g</guid>
      <description>&lt;p&gt;If you're thinking about learning to program but don't know where to start, JavaScript is &lt;strong&gt;THE&lt;/strong&gt; language of the web. The three core technologies of web development are HTML, CSS and JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C9F1Bsl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zbzp48jtzhegteohzrs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C9F1Bsl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zbzp48jtzhegteohzrs.png" alt="HTML &amp;amp; CSS" width="719" height="608"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They work together to build beautiful, interactive and dynamic webpages.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;HTML&lt;/strong&gt; is the skeleton of the website. It's where the content of your web page lives, such as the text, buttons, headings, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CSS&lt;/strong&gt; is &lt;em&gt;how&lt;/em&gt; your web page &lt;em&gt;looks&lt;/em&gt;. It's the presentation, the visually pleasing side of web development.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;JavaScript&lt;/strong&gt; is your functionality. This is what allows you to interact with your webpage. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you go to a website or platform you love, you can almost always guarantee that it's built on JavaScript. It's everywhere and with good reason. So let's get into it: &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-javascript"&gt;
  &lt;/a&gt;
  What IS JavaScript?
&lt;/h2&gt;

&lt;p&gt;According to the &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;official definition&lt;/a&gt;, JavaScript is a high-level, object-oriented, multi-paradigm programming language. &lt;/p&gt;

&lt;p&gt;But what does that even mean? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V2Cm0L8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyqojk9h7ykyi0knr0ng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V2Cm0L8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyqojk9h7ykyi0knr0ng.png" alt="JavaScript Deconstructed" width="880" height="433"&gt;&lt;/a&gt; &lt;br&gt;
Jonas Schmedtmann's deconstructs this definition in his &lt;a href="https://www.udemy.com/course/the-complete-javascript-course/"&gt;The Complete JavaScript Course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's a great programming language to start with because:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can start coding right now in this exact moment, using only your browser.&lt;/li&gt;
&lt;li&gt;JavaScript is extremely versatile. You can use it for web development, mobile development, desktop apps, frontend, backend, VR apps, and you can even use it for robotics. &lt;/li&gt;
&lt;li&gt;Every company has an app or website and most companies use JavaScript to build those apps. So there are a TON of job postings that require JavaScript knowledge, making you more marketable. &lt;/li&gt;
&lt;li&gt;You can visually see your code come to life.&lt;/li&gt;
&lt;li&gt;The JavaScript community is huge so there will always be help when needed. You can also find a lot of articles and tutorials on the topic. Having issues with a code? Stack Overflow is your friend. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-start-with-javascript-in-the-browser"&gt;
  &lt;/a&gt;
  How to start with JavaScript in the browser
&lt;/h2&gt;

&lt;p&gt;If you want to take this route and learn to program in JavaScript (and you absolutely should!) you don't need anything else except for your browser. You can open up your developer tools in Google Chrome and start writing JavaScript. Let's do it together:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to your web browser, type in &lt;code&gt;about:blank&lt;/code&gt; and (if you're on a Mac) type &lt;code&gt;cmd + option + j&lt;/code&gt; and it'll open up your console directly. (&lt;code&gt;ctrl+shift+j&lt;/code&gt; for Windows users).&lt;/li&gt;
&lt;li&gt;Now in your console, type in &lt;code&gt;alert("hello world!")&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You've written your first line of code in JavaScript!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#versatility"&gt;
  &lt;/a&gt;
  Versatility
&lt;/h2&gt;

&lt;p&gt;JavaScript is worth learning because it's versatile. One of the most useful and powerful features of the language is that you can go beyond just building web applications. You can use it for hardware, like robots, you can develop games with it, you can build full-stack applications, dive into mobile development, and the list can go on.&lt;/p&gt;

&lt;p&gt;Most modern frameworks that you're going to use or encounter (React, React Native, Vue, etc) are built on JavaScript. So understanding the language and the fundamentals will help you get a better understanding of how the frameworks are implemented in an application. &lt;/p&gt;

&lt;p&gt;You open more doors with JavaScript because you're not limiting yourself to one thing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-is-in-demand"&gt;
  &lt;/a&gt;
  JavaScript is in demand
&lt;/h2&gt;

&lt;p&gt;When you search up the popularity of JavaScript on google, the results will show that there are over 1.8 Billion websites in the world and JavaScript is used on 95% of them. According to  &lt;a href="https://octoverse.github.com/#top-languages-over-the-years"&gt;GitHub 2021 Octoverse Report&lt;/a&gt;, JavaScript remains the most popular language used amongst developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mTUP92po--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mth6gwnz5q2371j2rw9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mTUP92po--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mth6gwnz5q2371j2rw9r.png" alt="Github Octoverse Report" width="880" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#photo-taken-from-octoversegithubcom"&gt;
  &lt;/a&gt;
  (Photo taken from octoverse.github.com)
&lt;/h3&gt;

&lt;p&gt;Since the language is popular, you won't have issues searching for a job that needs people with your skillset. You'll be employable easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seeing-your-code-come-to-life"&gt;
  &lt;/a&gt;
  Seeing your code come to life
&lt;/h2&gt;

&lt;p&gt;When you're building a web application with JavaScript, you can visually see the results in the browser right away. You can see what you're building, how you're interacting with it, how the website is performing, and what it looks like. HTML/CSS work together to build a page but JavaScript allows it to come to life. When you add your functionality, you can see what you're doing in the live-server and in the developer tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;There is a MASSIVE JavaScript community. The language has been around for such a long time so if you have issues solving something, you can bet you'll find someone to help you when you need it. If you have a question, it's likely that a variation of it has been asked before, so you are able to google it and find solutions to your problems.&lt;/p&gt;

&lt;p&gt;You won't have a problem finding tutorials or articles on the language. There are a TON of free courses to learn JavaScript and you can get started right now. 😏&lt;/p&gt;

&lt;p&gt;SO if you are interesting and if my article has convinced you, I have some resources for you 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;Most people would start with  &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;  because it is an INCREDIBLE learning tool for beginners. However, there are a few other resources that are not usually mentioned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://scrimba.com/"&gt;Scrimba&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.theodinproject.com/"&gt;The Odin Project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Web Docs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And my personal favorite is a paid course but if you can afford it, I highly recommend investing in it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://www.udemy.com/course/the-complete-javascript-course/"&gt;The Complete JavaScript Course 2022: Zero to Expert!&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I would suggest is picking one course and sticking to just THAT course. Don't let noise stray you away, you'll master the language in a focused way if you don't get distracted. There's always going to be more to learn but stick to one thing, complete it and then move on to diving deeper. &lt;/p&gt;

&lt;p&gt;Hopefully this article has convinced you to start your programming journey with JavaScript. Let me know if you've started and what you're building 👩🏽‍💻&lt;/p&gt;

&lt;p&gt;I am also on  &lt;a href="https://twitter.com/zahrakhadijha"&gt;Twitter&lt;/a&gt;, let's connect and chat there!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Small fixes, reviewing things</title>
      <author>Alex Romanova</author>
      <pubDate>Fri, 19 Nov 2021 14:55:42 +0000</pubDate>
      <link>https://dev.to/sirinoks/small-fixes-reviewing-things-29eo</link>
      <guid>https://dev.to/sirinoks/small-fixes-reviewing-things-29eo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#fixing-a-bug"&gt;
  &lt;/a&gt;
  Fixing a bug!
&lt;/h2&gt;

&lt;p&gt;I have chosen an &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2454"&gt;issue&lt;/a&gt; that looked innocent and important at the same time. The most trouble I had with it was.... RUNNING THE DAMN PROJECT!&lt;br&gt;
I followed an &lt;a href="https://github.com/Seneca-CDOT/telescope/blob/master/docs/environment-setup.md"&gt;environment setup guide&lt;/a&gt; which was pretty damn long. At some point I got stuck, it wanted me to install something that was too advanced to my Windows version. I would need to reinstall my Windows to really fix that, and that would take at least a weak and a shit ton of irritation (Because my windows has no updates.. which never backfired for 10 years until this moment. I'd say still a good trade off.) &lt;/p&gt;

&lt;p&gt;In any case, I was offered a solution:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lQEvAPPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911267678256250910/Screenshot_142.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQEvAPPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.discordapp.com/attachments/353432193730871296/911267678256250910/Screenshot_142.png" width="355" height="779"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! I had a magical browser environment that I could use to do fix my chosen issue.&lt;br&gt;
One problem tho.&lt;br&gt;
You needed to run it localhost to reproduce the bug.&lt;br&gt;
-_-&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;It took me a while to figure out that I only needed to do the npm installs to run only the part my issue related to. &lt;/p&gt;

&lt;p&gt;It then took me a while to understand why the issue even occured. I didn't fully understand the document structure they had. It still is a mystery to me how they got&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;PATH_PREFIX&lt;/code&gt;&lt;br&gt;
From a totally different place - &lt;a href="https://github.com/Seneca-CDOT/telescope/blob/master/src/api/status/env.local#L2"&gt;env.local&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They didn't import anything, they didn't read the file... Idk man. Oh well. Magic it is. It works - it works. I don't touch.&lt;/p&gt;

&lt;p&gt;What caused issues basically was the undefined variable. In env.local you had some local variables, where you specified where you should be redirected by default. However, when the page would not read that variable, or did not have it specified, it gave 404.&lt;/p&gt;

&lt;p&gt;This part would redirect to the specified variable in env.local:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;br&gt;
Here it decides which path to use. If PATH_PREFIX is undefined, it goes for '/'.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PATH_PREFIX&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;br&gt;
This small part does a similar thing. If we didn't specify API_HOST, it goes for 'localhost'.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_HOST&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;localhost&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This way when we do get undefined variables, our webpages don't crash, but go for a different option. My &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2494"&gt;PR&lt;/a&gt; didn't seem big, however I needed to understand how the whole thing worked before I could add those lines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-reviews"&gt;
  &lt;/a&gt;
  Code reviews
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-small-versioning-upgrade"&gt;
  &lt;/a&gt;
  A small versioning upgrade
&lt;/h3&gt;

&lt;p&gt;This one was a fresh &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2495"&gt;PR&lt;/a&gt; that was really simple. A version of &lt;a href="https://github.com/traefik/traefik"&gt;traefik&lt;/a&gt; was upgraded to a newer one. I just needed to see if stuff still works when it was. And, well... it did still work. No fancy magic here. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#formatting"&gt;
  &lt;/a&gt;
  Formatting
&lt;/h3&gt;

&lt;p&gt;My second review was also on a fresh &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/108"&gt;PR&lt;/a&gt;. It was a simple formatting upgrade, which I checked. It was okay. However, I noticed something. In the requirements it was mentioned that people should improve images used to look good in dark versions. I checked and saw an image that would have its text not readable on a black background. I thought - I can fix that, I know photoshop! So I did. And I sent &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/108#issuecomment-973865260"&gt;my result&lt;/a&gt; in the PR so that its author can add it to their changes. Hopefully I did it right.  Well, if not - they can just decide to not use it.&lt;/p&gt;

&lt;p&gt;I generally didn't enjoy reviewing code as much. But I suppose someone has to do it.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Strive for short-lived synchronous communication</title>
      <author>Bohdan Stupak</author>
      <pubDate>Fri, 19 Nov 2021 14:51:16 +0000</pubDate>
      <link>https://dev.to/bohdanstupak1/strive-for-short-lived-synchronous-communication-a74</link>
      <guid>https://dev.to/bohdanstupak1/strive-for-short-lived-synchronous-communication-a74</guid>
      <description>&lt;p&gt;When interacting with a service asynchronous communication often is a preferred way. "Enterprise integration patterns" book puts it that way (which also might be a TL;DR; for the rest of the article)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With synchronous communication, the caller must wait for the receiver to finish processing the call before the caller can receive the result and continue. In this way, the caller can only make calls as fast as the receiver can perform them. On the other hand, asynchronous communication allows the sender to batch requests to the receiver at its own pace, and for the receiver to consume the requests at its own different pace. This allows both applications to run at maximum throughput and not waste time waiting on each other (at least until the receiver runs out of messages to process).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, there might be scenarios when synchronous communication is unavoidable. Let's have a look at the example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communication-between-services"&gt;
  &lt;/a&gt;
  Communication between services
&lt;/h2&gt;

&lt;p&gt;Let's imagine we have a system that uploads and processes files. It consists of a legacy module upon which we have no control. This module takes a file from the file system, uploads it to the given endpoint via HTTP and if the upload is successful it uploads a supplementary metadata file.&lt;/p&gt;

&lt;p&gt;Since we have no control over the legacy module we have no other option than to stick with synchronous communication. Once the file is uploaded to our system we perform numerous processing activities which consume a considerable amount of time.&lt;/p&gt;

&lt;p&gt;We can summarize the current state of affairs with the following diagram.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VyLjI_FJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VyLjI_FJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/1.png" width="880" height="763"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extracting-long-running-task-into-separate-job"&gt;
  &lt;/a&gt;
  Extracting long running task into separate job
&lt;/h3&gt;

&lt;p&gt;As always, there's nothing wrong with this design unless you apply some scale to it. But once the requirement to upload a big amount of files arrived it appears evident that the bottleneck is the legacy module waits every time until our code is done saving and processing the file before it can upload the additional file. So in order to fulfill the requirement we need to reduce interaction time. Then you start noticing how wasteful is to wait until processing is done on every HTTP request. The remedy is to return the response early and perform processing in the background.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yq9pN9iR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yq9pN9iR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/2.png" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here asynchronous communication is denoted with the dashed arrow. Once we persist the file we send a message that the file is saved to the processor module. To enable this we might employ AMQP implementation of our taste. Since a message is asynchronous we don't have to wait for processor response and are able to return the response to our legacy uploader component way earlier.&lt;/p&gt;

&lt;p&gt;Notice that both components communicate inside a single process. There's the reason for this which I'll cover in the next section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scaling-solution-horizontally"&gt;
  &lt;/a&gt;
  Scaling solution horizontally
&lt;/h3&gt;

&lt;p&gt;Up to this point, some of the readers might bear a question: "why leave both components inside a single service when you could separate them?"&lt;/p&gt;

&lt;p&gt;While microservices were a hot topic couple of years ago, nowadays more organizations start realizing that doing microservices correctly is hard. It requires certain engineering capabilities (distributed logging, failure recovery) as well organizational capabilities (code ownership separation, maintaining up-to-date contracts between services, robust deployment strategy). All this should serve as a precaution for those who use microservices solely as a tool to split their codebase into more manageable pieces. And this is why I've decided to stick with inter-process communication as the default architectural style.&lt;/p&gt;

&lt;p&gt;Still, there might be cases when due to high load you have to scale the solution to endure even bigger loads. So the natural solution would be to handle file upload in parallel. However, parallelizing process on a single server instance has its own limits so eventually, you'll come up with deploying service on multiple services (horizontal scaling). In such a case, the IO-intensive part that persists files to the database might benefit from horizontal scaling, while processor part may benefit from vertical scaling (say, adding more powerful processor to perform computation-intensive logic).&lt;/p&gt;

&lt;p&gt;The ability to scale part of the system independently is one of the key reasons to use the microservices architectural style. (Another one is &lt;a href="https://www.thoughtworks.com/radar/techniques/inverse-conway-maneuver"&gt;inverse Conway maneuver&lt;/a&gt; but it is beyond the scope of the article).&lt;/p&gt;

&lt;p&gt;In such a case, both parts of the system are deployed independently and are communicating via message queue as on the figure below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5hs7Ubo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5hs7Ubo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wkalmar.github.io/10/3.png" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reducing-http-request-duration"&gt;
  &lt;/a&gt;
  Reducing HTTP request duration
&lt;/h2&gt;

&lt;p&gt;Another area of interest is customer-facing UI applications. Numerous studies reveal how an increase in page load time leads to customer dissatisfaction. Since HTTP call duration is an integral part of page load time naturally we want to reduce it too.&lt;/p&gt;

&lt;p&gt;Let's have a look at the following hypothetical code responsible for registering users in the application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;FlushTemporary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsValid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_mailingService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendConfirmationEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the code above leverages a feature named &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/"&gt;asynchronous programming model&lt;/a&gt; in fact from the callers perspective it's synchronous since the caller needs to wait until user is persisted in DB and confirmation email is sent!&lt;/p&gt;

&lt;p&gt;Needless to say that this leads to an extra wait for a customer during a registration step. Here again as in the example above we should extract confirmation email into the background job that will be executed after the registration step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Synchronous communication introduces wait times that might be redundant during inter-system communication or in customer-facing applications. It's crucial to understand which part of synchronous communication is unavoidable and which part might be done later. For the latter part, background processors are a neat trick to handle the issue.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Mi experiencia de como llegue a ser frontend.</title>
      <author>Axel Valdez</author>
      <pubDate>Fri, 19 Nov 2021 14:42:58 +0000</pubDate>
      <link>https://dev.to/axelvaldez13/mi-experiencia-de-como-llegue-a-ser-frontend-2na1</link>
      <guid>https://dev.to/axelvaldez13/mi-experiencia-de-como-llegue-a-ser-frontend-2na1</guid>
      <description>&lt;p&gt;Bienvenidos a este post donde voy a contarles como fue mi inicio en el rubro IT. Mi nombre es Axel Valdez, licenciado en diseño de interacción y multimedia en la UADE,  actualmente UI designer y frontend developer en Circular.&lt;/p&gt;

&lt;p&gt;La intención de este post es &lt;strong&gt;alentar a aquellos/as que buscan insertarse en el rubro&lt;/strong&gt; contando mi experiencia personal. Si bien, el rubro IT es amplio, hay miles de caminos que uno puede tomar para poder insertarse. En mi caso, &lt;strong&gt;empecé desde el lado del diseño,&lt;/strong&gt; ya que la carrera que estaba cursando tenía contenidos que se relacionaban desde el lado del front-end.&lt;/p&gt;

&lt;p&gt;Quiero que sepan que &lt;strong&gt;no es requisito excluyente saber de diseño para ser frontend pero, aprenderlo, es un muy buen plus&lt;/strong&gt; para entender los procesos de diseño.&lt;/p&gt;

&lt;p&gt;Mi primer paso fue &lt;strong&gt;aprender correctamente HTML.&lt;/strong&gt; Piensen que, independientemente de que sean etiquetas, &lt;strong&gt;cumplen funciones como mejorar el SEO, brindar seguridad y ayudar a las personas con discapacidades.&lt;/strong&gt; Eso es solo el esqueleto de nuestras interfaces, acompañado a esto, &lt;strong&gt;aprendí correctamente CSS&lt;/strong&gt; ya que van a chocarse con muchas realidades como &lt;strong&gt;pensar en navegadores con problemas de compatibilidad y pensar en mobile first.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En 2016 en adelante mis únicos skills de aquel entonces era HTML y CSS, acompañado de ellos, un framework de CSS que era &lt;strong&gt;Bootstrap&lt;/strong&gt; del cual me generó &lt;strong&gt;dependencia&lt;/strong&gt; ya que solo me guiaba de sus clases y no de mi propio css. A esto hay que sumarle jQuery como otra dependencia para hacer mi página de manera dinámica (anteriormente BS solo trabajaba con esa libreria). Hoy en dia Bootstrap es otra cosa a lo que era en el pasado y &lt;strong&gt;puedo recomendarles su uso a aquellas personas que buscan hacer una página sin saber de diseño.&lt;/strong&gt; Para evitar dependencia de frameworks o UI de terceros aprendan CSS !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friendly reminder:&lt;/strong&gt; jamás subestimen tanto HTML como CSS porque sino no van a mejorar como desarrolladores. Es más, aprenderlas correctamente les &lt;strong&gt;puede ahorrar tiempo de lógica aprendiendo el siguiente lenguaje que es JavaScript.&lt;/strong&gt; Recomiendo que siempre aprendan las bases y, una vez que entiendan los fundamentos, prueben aprendiendo un framework de preferencia. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conseguir-trabajo-sin-experiencia-laboral-previa-se-puede"&gt;
  &lt;/a&gt;
  Conseguir trabajo sin experiencia laboral previa. ¿Se puede?
&lt;/h2&gt;

&lt;p&gt;Obvio! Mi primera experiencia laboral &lt;strong&gt;la conseguí presentando un buen portfolio&lt;/strong&gt; con trabajos prácticos de la facultad. Él mismo era tanto físico como digital y fueron realizados para una materia en la facultad donde hablaba un poco de mis valores y detalles del proceso que llevó a cabo los productos que diseñe/desarrolle durante mi carrera. &lt;strong&gt;Cuenten historias que convenzan a las personas de que saben afrontar desafíos, les recomiendo hacer storytelling de ustedes mismos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Otro tip, y muy fundamental para poder conseguir trabajo rapido, &lt;strong&gt;es el networking.&lt;/strong&gt; Mejorar nuestras redes tanto Linkedin como Twitter puede hacer conexiones con muchos desarrolladores que se encuentran presentes en las RRSS. Hay casos de éxito donde &lt;strong&gt;muchos/as encontraron su primera experiencia laboral por twitter&lt;/strong&gt; como también personas que perdieron su trabajo y, gracias al networking, se reinsertaron al mercado laboral en poco tiempo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#experiencias-laborales"&gt;
  &lt;/a&gt;
  Experiencias laborales
&lt;/h2&gt;

&lt;p&gt;Tuve la oportunidad de poder trabajar en 3 lugares, del cual a nivel profesional y personal, nutrió mi formación y mi consejo fundamental para crecer es que &lt;strong&gt;NO tener miedo a preguntar.&lt;/strong&gt; No se dejen intimidar, piensen que lo peor es perder el tiempo sin hacer nada que preguntar y colaborar en equipo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Si ante alguna duda les responden "eso lo deberías tenerlo claro" o "es algo básico", salgan de ahí, urgentemente. O avisenle a su lead asi le pone los puntos 😜&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En el rubro IT siempre van a encontrar alguna documentación de cualquier tipo de lenguaje que están trabajando y es totalmente válido querer aclarar sus dudas haciendo preguntas concretas tanto a sus compañeros como a google.&lt;/p&gt;

&lt;p&gt;Para aquellos que buscan un nuevo rumbo o están queriendo obtener su primera experiencia, &lt;strong&gt;busquen un lugar que sea su escuela y les aporte conocimiento.&lt;/strong&gt; Busquen enseñar y acompañar a sus colegas ya que es un detalle fundamental que sirve para nutrir nuestra formación. No tengan miedo en querer cambiar de rumbo o si sienten un ciclo finalizado, no se sientan impostores cuando sientan que están haciendo algo mal y sepan decir basta cuando se sientan presionados.&lt;/p&gt;

&lt;p&gt;Levanten la mano cuando algo no está saliendo bien o si están trabados porque la clave para crecer es preguntar, preguntar y preguntar. Dicho esto, si llegaron hasta acá, espero que se sientan un poco aliviados y sepan que jamás van a estar solos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comunidades"&gt;
  &lt;/a&gt;
  Comunidades
&lt;/h2&gt;

&lt;p&gt;En caso de no contar con experiencia laboral, o no tener un equipo que los respalde, busquen entrar a comunidades de desarrollo que brinden mentorias como las de Goncy Pozzo (&lt;a href="https://discord.com/invite/rAmPWU6eHg"&gt;https://discord.com/invite/rAmPWU6eHg&lt;/a&gt;) o Frontend Cafe(&lt;a href="https://frontend.cafe/"&gt;https://frontend.cafe/&lt;/a&gt;). Alli van a encontrar personas que les brinde ayuda y aclaren sus dudas. &lt;/p&gt;

&lt;p&gt;Un abrazo enorme y happy coding 🙌🏽👨🏽‍💻&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Flask CRUD API</title>
      <author>Francesco Ciulla</author>
      <pubDate>Fri, 19 Nov 2021 14:39:17 +0000</pubDate>
      <link>https://dev.to/tinystacks/flask-crud-api-3pl2</link>
      <guid>https://dev.to/tinystacks/flask-crud-api-3pl2</guid>
      <description>&lt;p&gt;Welcome back on the Docker and AWS series by &lt;a href="https://www.tinystacks.com/"&gt;TinyStacks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this Article, we will create a simple CRUD API using a Flask Application , Docker, Postgres&lt;/p&gt;

&lt;p&gt;Video Version:&lt;br&gt;
&lt;a href="https://youtu.be/QEaM4b3AliY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1Ej02X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637327689060/5p6OFW87m.png" alt="image.png" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a folder&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;requirements.txt&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create app (~50 loc)&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;Dockerfile&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;docker-compose.yml&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run database&lt;/li&gt;
&lt;li&gt;Check database&lt;/li&gt;
&lt;li&gt;Run python app&lt;/li&gt;
&lt;li&gt;Check that the table has been created&lt;/li&gt;
&lt;li&gt;Test endpoints (Postman)&lt;/li&gt;
&lt;li&gt;Test Get All endpoint&lt;/li&gt;
&lt;li&gt;Create a record(x3)&lt;/li&gt;
&lt;li&gt;Get a record&lt;/li&gt;
&lt;li&gt;Update record&lt;/li&gt;
&lt;li&gt;Delete record&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#create-folder-and-step-into-it"&gt;
  &lt;/a&gt;
  Create folder and step into it
&lt;/h2&gt;

&lt;p&gt;You can create a folder in anyway that you prefer. If you use a terminal you can type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir  flask-crud-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, step into the folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd flask-crud-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, open this folder with your favorite IDE.  If you use Visual Studio Code, you can type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-BJDjmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010432249/jgGtdkqO0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-BJDjmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010432249/jgGtdkqO0.png" alt="image.png" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we’re ready to get started coding our Flask Crud API application with the help of GitHub Copilot!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-requirementstxt"&gt;
  &lt;/a&gt;
  Create requirements.txt
&lt;/h2&gt;

&lt;p&gt;First of all, we need to define the dependent Python libraries for our application. The standard method in Python is to create a &lt;code&gt;requirements.txt&lt;/code&gt; file and list  our dependencies there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HVU_HrNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010529696/ErUVIgItV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVU_HrNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010529696/ErUVIgItV.png" alt="image.png" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So create this file called "requirements.txt". (If you have the Material Icon Theme, it will show a nice little Python icon. It’s a nice to spot typos!)&lt;/p&gt;

&lt;p&gt;Then we can type the dependencies for our project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flask
psycopg2-binary
Flask-SQLAlchemy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Those dependencies are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flask: The Python Framework&lt;/li&gt;
&lt;li&gt;psycopg2-binary: To create the connection with the Postgres Database
&lt;/li&gt;
&lt;li&gt;Flask-SQLAlchemy: Help generate SQL queries without writing them manually&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-app-50-loc"&gt;
  &lt;/a&gt;
  Create app (~50 loc)
&lt;/h3&gt;

&lt;p&gt;At the root level, create a file called &lt;code&gt;app.py&lt;/code&gt;.  We will write our crud API app in about 50 lines of code!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2bSwDwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010900333/8uDE_DLCm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2bSwDwW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637010900333/8uDE_DLCm.png" alt="image.png" width="880" height="605"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s specify the libraries we’ll use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SQLAlchemy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, define the Flask app and how to run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Define an environment variable as a string and initialize the SQLAlchemy instance to handle the Postgres database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SQLALCHEMY_DATABASE_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DATABASE_URL'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SQLAlchemy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's define our data model. We’ll create a class named Item with just &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; as properties. We’ll also add an auto-incremental Integer named &lt;code&gt;id&lt;/code&gt;. This will act as the primary key for our table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now a little bit of magic: with this line we let SQLAlchemy to synchronize with the Postgres database. This will create our databasetable automatically for us!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#define-rest-endpoints"&gt;
  &lt;/a&gt;
  Define  REST endpoints
&lt;/h3&gt;

&lt;p&gt;Now we need to implement our CRUD endpoints. CRUD stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CREATE&lt;/li&gt;
&lt;li&gt;READ&lt;/li&gt;
&lt;li&gt;UPDATE&lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the basic functions of every application.&lt;/p&gt;

&lt;p&gt;To retrieve a singleitem, we define this function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items/&amp;lt;id&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'_sa_instance_state'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get all the items in the database, we define this function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'_sa_instance_state'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a new item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_item&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"item created"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To update an existing item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items/&amp;lt;id&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'PUT'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"item updated"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To delete an existing item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/items/&amp;lt;id&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'DELETE'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"item deleted"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! and in less than 60 lines of coding (included new lines)!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-dockerfile"&gt;
  &lt;/a&gt;
  Create Dockerfile
&lt;/h3&gt;

&lt;p&gt;A Dockerfile is a text file to define a set of commands to create an image. Starting from this image, we will run our python containers&lt;/p&gt;

&lt;p&gt;Let's create a file called &lt;code&gt;Dockerfile&lt;/code&gt; (capital D, no extension).&lt;/p&gt;

&lt;p&gt;We could create of course a file with a different name.But this is the default one that Docker uses. If we use it, we don't have to specify a name for the file when we build our Docker container image.&lt;/p&gt;

&lt;p&gt;This is the final file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;FROM python:3.6-slim-buster

COPY requirements.txt &lt;span class="nb"&gt;.&lt;/span&gt;

RUN pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt

COPY &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;

EXPOSE 80

CMD &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"flask"&lt;/span&gt;, &lt;span class="s2"&gt;"run"&lt;/span&gt;, &lt;span class="s2"&gt;"--host=0.0.0.0"&lt;/span&gt;, &lt;span class="s2"&gt;"--port=80"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's explain briefly what's going on here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;FROM&lt;/code&gt;: Set the baseImage to use for subsequent instructions. FROM must be the first instruction in a Dockerfile.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;COPY&lt;/code&gt;: Copy files or folders from source to the dest path in the image's filesystem. The first &lt;code&gt;COPY&lt;/code&gt; copies the requirements.txt file inside the filesystem of the image; the second one copies everything else. &lt;/li&gt;
&lt;li&gt;RUN&lt;code&gt;: Execute any commands on top of the current image as a new layer and commit the results. In this case, we are running&lt;/code&gt;pip` to install the Python libraries we need.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;EXPOSE&lt;/code&gt;: Informs Docker of the port we will use at runtime. (PRO tip: this line is not really needed. It makes the intent of the Dockerfile clear and facilitates the translation to the docker-compose.yml file)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;CMD&lt;/code&gt;: Provide defaults for an executing container. If an executable is not specified, then &lt;code&gt;ENTRYPOINT&lt;/code&gt; must be specified as well. There can only be one &lt;code&gt;CMD&lt;/code&gt; instruction in a Dockerfile.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-dockercomposeyml"&gt;
  &lt;/a&gt;
  Create docker-compose.yml
&lt;/h3&gt;

&lt;p&gt;Now that we have created the Dockerfile, let's create the &lt;code&gt;docker-compose.yml&lt;/code&gt; file to make our life easier.&lt;/p&gt;

&lt;p&gt;This is the final file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;`yml&lt;br&gt;
version: '3.9'&lt;/p&gt;

&lt;p&gt;services:&lt;br&gt;
  pythonapp:&lt;br&gt;
    container_name: pythonapp&lt;br&gt;
    image: pythonapp&lt;br&gt;
    build: .&lt;br&gt;
    ports:&lt;br&gt;
      - "80:80"&lt;br&gt;
    environment:&lt;br&gt;
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres&lt;br&gt;
    depends_on:&lt;br&gt;
      - db&lt;/p&gt;

&lt;p&gt;db:&lt;br&gt;
    container_name: db&lt;br&gt;
    image: postgres:12&lt;br&gt;
    ports:&lt;br&gt;
      - "5432:5432"&lt;br&gt;
    environment:&lt;br&gt;
      - POSTGRES_PASSWORD=postgres&lt;br&gt;
      - POSTGRES_USER=postgres&lt;br&gt;
      - POSTGRES_DB=postgres&lt;br&gt;
    volumes:&lt;br&gt;
      - pgdata:/var/lib/postgresql/data&lt;/p&gt;

&lt;p&gt;volumes:&lt;br&gt;
  pgdata: {}&lt;br&gt;
`&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's explain what's happening line by line:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;version&lt;/code&gt;: '3.9' is the current version of the docker-compose.yml file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;services&lt;/code&gt;: The top-level entry of our &lt;code&gt;docker-compose.yml&lt;/code&gt; file. The services are basically the containers.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pythonapp&lt;/code&gt;: The Python application we just wrote&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;container_name&lt;/code&gt;: Defines a custom name for our application. It’s the equivalent of using the &lt;code&gt;--name&lt;/code&gt; option at the command line when we run &lt;code&gt;docker run&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;image&lt;/code&gt;: Rhe image for this service (container). Here, we are defining a custom name just to use it locally. If we want to push our containerto a public or private registry (a place to store Docker Images, e.g. Docker hub), we need to change the tag of the image (basically the name). We don’t need to do that now.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;build&lt;/code&gt;: We need this option if we are using our custom image and not an existing one. The dot after the semicolon is the path of the Dockerfile, and it means "here is where I’mrunning the &lt;code&gt;docker-compose.yml&lt;/code&gt; file". Please note that the &lt;code&gt;docker-compose.yml&lt;/code&gt; file and the &lt;code&gt;Dockerfile&lt;/code&gt; are at the same level.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ports&lt;/code&gt;: A list of ports we want to expose to the outside. A good practice is to make the content a quoted string.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;environment&lt;/code&gt;: Key-value pairs. Here, we use them to define our custom URL to connect to the Postgres database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;depends_on&lt;/code&gt;: Express dependency between services. Service dependencies cause the following behaviors:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;docker-compose up&lt;/code&gt; starts services in dependency order. In the following example, db and redis are started before web.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker-compose up&lt;/code&gt; automatically includes a service’s dependencies. In the example below, &lt;code&gt;docker-compose up web&lt;/code&gt; also creates and starts &lt;code&gt;db&lt;/code&gt;and &lt;code&gt;redis&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker-compose stop&lt;/code&gt; stops services in dependency order. In the following example, &lt;code&gt;web&lt;/code&gt; is stopped before &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;redis&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;db&lt;/code&gt;: Service for the Postgres database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;container_name&lt;/code&gt;: The default name for this service, also called &lt;code&gt;db&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;image: postgres:12&lt;/code&gt; : We will not use our custom image in this case but an existing one, the one the Postgres team has created and pushed for us on Docker Hub. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ports&lt;/code&gt;: A list of ports we want to expose to the outside. A good practice is to wrap this content in a quoted string. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;environment&lt;/code&gt;: Here we define three environment variables for the Postgres service. The keys are &lt;strong&gt;not&lt;/strong&gt; arbitrary, but are the ones defined in the official Postgres image. We can, of course, define the values of these environment variables (this is why the Postgres team has given them to us, to use them!). &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;volumes&lt;/code&gt;: Here we use a named volume called pgdata. the part before the ':' is the name of the volume, and the part on the right of the ':' is the destination path&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the end of the file, we define the actual volume named &lt;code&gt;pgdata&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-database-service-locally"&gt;
  &lt;/a&gt;
  Run the database service locally
&lt;/h2&gt;

&lt;p&gt;To run the database service locally, we can type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;bash&lt;br&gt;
docker compose up -d db&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;the &lt;code&gt;-d&lt;/code&gt; option stands for &lt;code&gt;detached&lt;/code&gt;, to leave out terminal available after running this container.&lt;/p&gt;

&lt;p&gt;You can check the status of the running container by typing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker ps&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYDMaptT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637013928114/EoG4cVYnU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYDMaptT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637013928114/EoG4cVYnU.png" alt="image.png" width="880" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-the-database"&gt;
  &lt;/a&gt;
  Check the database
&lt;/h3&gt;

&lt;p&gt;To step inside the Postgres container we will use 2 different approaches.&lt;/p&gt;

&lt;p&gt;First approach: directly from the Command line&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker exec -it db psql -U postgres&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQuD_C6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014045457/-fnIlwiPL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQuD_C6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014045457/-fnIlwiPL.png" alt="image.png" width="647" height="213"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if we type &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
\dt&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We will see this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;did not find any relations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is correct, because we haven't run our Python container yet.&lt;/p&gt;

&lt;p&gt;To exit the psql process, type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
exit&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Or alternatively, just&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
\q&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-python-app"&gt;
  &lt;/a&gt;
  Run Python app
&lt;/h2&gt;

&lt;p&gt;To run your Python application, type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker compose up --build pythonapp&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--build&lt;/code&gt; option is to build your application before running it. It's not useful the first time you run this command because Docker is going to build the image anyway. It becomes useful after you run &lt;code&gt;docker compose up&lt;/code&gt; multiple times and you’ve made some changes on your app. &lt;/p&gt;

&lt;p&gt;Note: If you build an image using the same tag (name), the previous image will become a so-called "dangling image", with &lt;code&gt;&amp;lt;none&amp;gt; &amp;lt;none&amp;gt;&lt;/code&gt; as the repository and tag. To remove them, you can type &lt;code&gt;docker image prune&lt;/code&gt; and then &lt;code&gt;y&lt;/code&gt; to confirm.&lt;/p&gt;

&lt;p&gt;if you see something like this, you have successfully launched your Python Flask application:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ye3e6Ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014793254/ivWAYWNP0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ye3e6Ll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014793254/ivWAYWNP0.png" alt="image.png" width="880" height="161"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can once again check the running containers:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker ps -a&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LAyaMhvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014876203/HIwEP-X5C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LAyaMhvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637014876203/HIwEP-X5C.png" alt="image.png" width="880" height="99"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Side note: don't mind the "created" value, it's just me removing/stopping the containers for demo-purposes! You should see them both running with a status of &lt;code&gt;some minutes ago&lt;/code&gt;.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-the-table-has-been-created"&gt;
  &lt;/a&gt;
  Check the table has been created
&lt;/h2&gt;

&lt;p&gt;If you step again inside the Postgres container now, using the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker exec -it db psql -U postgres&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;and you type:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
\dt&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you will see the table has been created automatically, without calling any endpoint!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95vn2tlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015055167/07hpDberE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95vn2tlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015055167/07hpDberE.png" alt="image.png" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was possible because of the line (around 22) on the app.py file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;python&lt;br&gt;
db.create_all()&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-endpoints-using-postman"&gt;
  &lt;/a&gt;
  Test endpoints (using Postman)
&lt;/h3&gt;

&lt;p&gt;Let's test this simple application! We will use Postman, but you can use any REST API testing tool that you prefer. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-all"&gt;
  &lt;/a&gt;
  Get All
&lt;/h3&gt;

&lt;p&gt;Let's get all the items:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ntKS8oW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015219195/wQ4KJaSYH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntKS8oW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015219195/wQ4KJaSYH.png" alt="image.png" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-one-x3"&gt;
  &lt;/a&gt;
  Create one (x3)
&lt;/h3&gt;

&lt;p&gt;Now let's create some new items&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bcW7XGiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015240051/sSZR1Fejl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bcW7XGiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015240051/sSZR1Fejl.png" alt="image.png" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qs0nnMlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015814122/u777mydoK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qs0nnMlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015814122/u777mydoK.png" alt="image.png" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N0WN-qBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015831869/zVkDdi3gj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N0WN-qBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015831869/zVkDdi3gj.png" alt="image.png" width="880" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apologies for my lack of imagination :) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-one"&gt;
  &lt;/a&gt;
  Get one
&lt;/h3&gt;

&lt;p&gt;To get a single item, you can just make a GET request at the endpoint &lt;code&gt;/item/&amp;lt;id&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; is the unique ID of the item that you previously created. &lt;/p&gt;

&lt;p&gt;For example, to get the item with id 2:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLYPauYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015878799/hr5c1Jyo-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLYPauYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015878799/hr5c1Jyo-.png" alt="image.png" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Please note that we are not handling errors correctly in this example. If that id doesn't exist, we’ll get an error directly from the application and we won’t show an error message to the end-user.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update-one"&gt;
  &lt;/a&gt;
  Update one
&lt;/h3&gt;

&lt;p&gt;To update an existing item, you can make a PUT request using the &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; of the item in the body:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CE7LlGdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015924460/clErYQqml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CE7LlGdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015924460/clErYQqml.png" alt="image.png" width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delete-one"&gt;
  &lt;/a&gt;
  Delete one
&lt;/h3&gt;

&lt;p&gt;Finally, we can delete an existing item from the database. We can make a DELETE request and appending an existing &lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; at the end of the url:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qDHI1UgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015962974/ipkCqs1rT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDHI1UgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637015962974/ipkCqs1rT.png" alt="image.png" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you get all the items again, this will be the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ULJ53F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016179841/G7ArATt4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4ULJ53F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016179841/G7ArATt4f.png" alt="image.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-the-final-status-using-the-prompt"&gt;
  &lt;/a&gt;
  Test the final status using the prompt
&lt;/h3&gt;

&lt;p&gt;You can test the final status also directly on the db:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
docker exec -it db psql -U postgres&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and then run the psql command (don't forget the final ';'):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
select * from item;&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BFkcJfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016059557/SJI7gwyec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BFkcJfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637016059557/SJI7gwyec.png" alt="image.png" width="560" height="230"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;&lt;/code&gt;`&lt;/p&gt;

&lt;p&gt;All the code is available at this url: &lt;a href="https://github.com/FrancescoXX/flask-crud-api-pg"&gt;https://github.com/FrancescoXX/flask-crud-api-pg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Version:&lt;br&gt;
&lt;a href="https://youtu.be/QEaM4b3AliY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1Ej02X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637327689060/5p6OFW87m.png" alt="image.png" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video offered by &lt;a href="https://www.tinystacks.com/"&gt;TinyStacks&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>docker</category>
      <category>postgres</category>
      <category>programming</category>
    </item>
    <item>
      <title> Game Dev Digest — Issue #119 - Old School</title>
      <author>Game Dev Digest - The Newsletter On Unity Game Dev</author>
      <pubDate>Fri, 19 Nov 2021 14:38:57 +0000</pubDate>
      <link>https://dev.to/gamedevdigest/game-dev-digest-issue-119-old-school-11jc</link>
      <guid>https://dev.to/gamedevdigest/game-dev-digest-issue-119-old-school-11jc</guid>
      <description>&lt;h3&gt;
  &lt;a href="#issue-119-old-school"&gt;
  &lt;/a&gt;
  Issue #119 - Old School
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://gamedevdigest.com/digests/issue-119-old-school.html"&gt;GameDevDigest.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-loMK_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-119.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-loMK_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/social-posts/issue-119.png" alt="Issue #119 - Old School" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out some posts on how they did it back in the day, but also catch up on what's new today, enjoy!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=29127098&amp;amp;utm_source=pocket_mylist"&gt;&lt;strong&gt;How were video games from the 90s so efficient?&lt;/strong&gt;&lt;/a&gt;  - Title says it all. I am interested in discovering how games like roller coaster tycoon, sim city 2000, warcraft II, and descent (blown away by this one) managed to be created and function on computers that had 500 MB HDD, 300 MHz CPU, and 4 MB RAM. &lt;em&gt;[A Hacker News discussion]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://news.ycombinator.com/item?id=29127098&amp;amp;utm_source=pocket_mylist"&gt;&lt;em&gt;news.ycombinator.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://80.lv/articles/80-level-ratings-old-school-books-on-animation/"&gt;&lt;strong&gt;80 Level Ratings: Old-School Books on Animation&lt;/strong&gt;&lt;/a&gt;  - In this article, we collected 10 books that will help you kick off your career as an animator.&lt;br&gt;
&lt;a href="https://80.lv/articles/80-level-ratings-old-school-books-on-animation/"&gt;&lt;em&gt;80.lv&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gamefromscratch.com/volumetric-clouds-in-unity-2021-2/"&gt;&lt;strong&gt;Volumetric Clouds in Unity 2021.2&lt;/strong&gt;&lt;/a&gt;  - Unity have just added volumetric clouds to Unity 2021.2 using the HDRP, and in this post we will walk through the process of using them.&lt;br&gt;
&lt;a href="https://gamefromscratch.com/volumetric-clouds-in-unity-2021-2/"&gt;&lt;em&gt;gamefromscratch.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.unity.com/technology/whats-new-in-shader-graph-20212"&gt;&lt;strong&gt;What’s new in Shader Graph 2021.2&lt;/strong&gt;&lt;/a&gt;  - With the release of Unity 2021.2, we introduced some exciting new features in Shader Graph such as Surface Options support in the Universal Render Pipeline (URP), Custom Interpolators, and Blackboard Categories, which greatly improve artist workflows and shader performance.&lt;br&gt;
&lt;a href="https://blog.unity.com/technology/whats-new-in-shader-graph-20212"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thegamedev.guru/unity-professional-performance/kiss-command-pattern/"&gt;&lt;strong&gt;The "KISS" Command Pattern for Unity&lt;/strong&gt;&lt;/a&gt;  - In this post, you will learn about the lovely KISS Command Pattern in Unity I can’t live without in my games. This pattern will empower you to easily connect your gameplay systems without all the complexity that comes from asynchronous systems. Best of all: it is truly KISSimple!&lt;br&gt;
&lt;a href="https://thegamedev.guru/unity-professional-performance/kiss-command-pattern/"&gt;&lt;em&gt;The Gamedev Guru&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unitycoder.com/blog/2021/11/18/run-unity-cloud-build-based-on-github-commit-message-using-github-actions/"&gt;&lt;strong&gt;Run Unity Cloud Build based on Github commit message using Github Actions&lt;/strong&gt;&lt;/a&gt;  - This should had been easy, but unity cloud build system has every secret id hidden in different places and using different names..&lt;br&gt;
&lt;a href="https://unitycoder.com/blog/2021/11/18/run-unity-cloud-build-based-on-github-commit-message-using-github-actions/"&gt;&lt;em&gt;unitycoder.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unity3d.com/unity/alpha/2022.1.0a15"&gt;&lt;strong&gt;Unity 2022.1.0 Alpha 15&lt;/strong&gt;&lt;/a&gt;  - Unity 2022.1.0 Alpha 15 has been released.&lt;br&gt;
&lt;a href="https://unity3d.com/unity/alpha/2022.1.0a15"&gt;&lt;em&gt;unity3d.com&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=uOhWT6TxZgE"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIsPTDtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/4142cd6f540877a0a8d59c7cfab716a0.png" alt="Unity Shader Graph - Toxic Waterfall Effect Tutorial" width="640" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=uOhWT6TxZgE"&gt;&lt;strong&gt;Unity Shader Graph - Toxic Waterfall Effect Tutorial&lt;/strong&gt;&lt;/a&gt;  - In this Unity tutorial we are going to see how to create a Toxic Waterfall effect, a Radioactive shader. We are going to use Blender to model the waterfall and then Shader Graph to create the toxic effect. We also have an overview of the other elements.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=uOhWT6TxZgE"&gt;&lt;em&gt;Gabriel Aguiar Prod.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=sHE5ubsP-E8"&gt;&lt;strong&gt;How to Create a Whiteboard in Unity VR&lt;/strong&gt;&lt;/a&gt;  - Ever since Half Life: Alyx, I KNOW you've imagined playing around with a whiteboard in your games. Well today is the day! In this tutorial I'll show you how to set up whiteboards and markers using Unity VR. (This will work for any Unity VR framework too!)&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=sHE5ubsP-E8"&gt;&lt;em&gt;Justin P Barnett - VR Game Dev&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=PxudQmMTLkg"&gt;&lt;strong&gt;NavMeshObstacle and NavMeshAgent - Together! | AI Series Part 33 | Unity Tutorial&lt;/strong&gt;&lt;/a&gt;  - Learn how to control NavMeshAgents and NavMeshObstacles on the same GameObject! Sometimes the NavMeshAgent obstacle avoidance isn't enough, and you need an Agent to fully block the path so other Agents will find a new path. In this tutorial we'll look at how to combine the NavMeshAgent and NavMeshObstacle components so they work together without teleporting issues.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=PxudQmMTLkg"&gt;&lt;em&gt;LlamAcademy&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=FcHaWycqIJg&amp;amp;t=1s"&gt;&lt;strong&gt;Volumetric "Darkness" &amp;amp; Lighting | Outer Wilds EotE *spoilers&lt;/strong&gt;*&lt;/a&gt;  - Spoilers for Echoes of the Eye ahead! We look at how the team created their own occlusion volumes to simulate darkness without the excessive use of lights. Join Unity and Mobius Digital as we explore the solar systems of Outer Wilds one planet at a time!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=FcHaWycqIJg&amp;amp;t=1s"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=X9RR7DdOwmY"&gt;&lt;strong&gt;REALISTIC REFLECTIONS in Unity with Gloss and Roughness Maps&lt;/strong&gt;&lt;/a&gt;  - In this video, we talk about how to use gloss and roughness maps in order to create realistic shiny, reflective materials in Unity!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=X9RR7DdOwmY"&gt;&lt;em&gt;The RealTime Essentials&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=reLBZdbXbwU"&gt;&lt;strong&gt;New Contextual Workflows for Faster Prototyping | SIGGRAPH 2021&lt;/strong&gt;&lt;/a&gt;  - Make sure others can see your vision as clearly as you do. Prototyping, blockout, and level design are all critical components to the successful liftoff of an idea, and they rely heavily on a fast and intuitive workflow. Join Gabriel Williams as he shares new contextual workflows in Unity to enable creators of all kinds to prototype faster. This session will cover overlays, in-scene creation tools, tools ecosystem, splines, and ProBuilder improvements. Creators can learn how to leverage these enhancements so they can better build out their wild ideas.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=reLBZdbXbwU"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assets"&gt;
  &lt;/a&gt;
  Assets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDC-EuSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/f5c434d6-9c9b-9294-dd4e-eac957d12129.jpg" alt="Unity Black Friday Sale" width="600" height="362"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;strong&gt;Unity Black Friday Sale&lt;/strong&gt;&lt;/a&gt;  - Unity's Black Friday sale will begin November 14 and continues through December 4. More than 500 of the very best and most popular assets on the Asset Store will be available for 50% off.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://assetstore.unity.com/?lightningDeal=true&amp;amp;aid=1011l8NVc"&gt;Lightning Deals&lt;/a&gt;&lt;br&gt;
New for this sale are Lightning Deals! Each Lightning Deal asset will be available at a deep discount for a limited number of users. During Black Friday, there are 20 licenses available at 90% off, 50 at 80% off, and 400 at 70% off. Once those have been claimed, the asset will no longer be a Lightning Deal, and will remain 50% off through the end of the sale. The following 16 assets will be marked as &lt;a href="https://assetstore.unity.com/?lightningDeal=true&amp;amp;aid=1011l8NVc"&gt;Lightning Deals&lt;/a&gt; at the start of the sale on 11/14/21 21:00:00 PT.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/189093?aid=1011l8NVc"&gt;POLYGON Dungeon Realms - Low Poly 3D Art by Synty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/116514?aid=1011l8NVc"&gt;Animancer Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/52739?aid=1011l8NVc"&gt;CCG Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/53895?aid=1011l8NVc"&gt;Dungeon Architect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/192456?aid=1011l8NVc"&gt;Expanse - Volumetric Skies, Clouds, and Atmospheres in HDRP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/157625?aid=1011l8NVc"&gt;Fantastic City Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/196648?aid=1011l8NVc"&gt;Low Poly Terrain - Polaris 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/98823?aid=1011l8NVc"&gt;Match 3 Sweet Sugar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/180688?aid=1011l8NVc"&gt;Medieval Kingdom UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/38532?aid=1011l8NVc"&gt;Modern Loft Full Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/92579?aid=1011l8NVc"&gt;POLYGON Pirates - Low Poly 3D Art by Synty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/188953?aid=1011l8NVc"&gt;POP BLOCKS Puzzle Game Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/52837?aid=1011l8NVc"&gt;Pro Radar Builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/63772?aid=1011l8NVc"&gt;RPG Character Mecanim Animation Pack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/package/id/89126?aid=1011l8NVc"&gt;Total Music Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://assetstore.unity.com/packages/package/id/126124?aid=1011l8NVc"&gt;UFE 2 SOURCE&lt;/a&gt;
&lt;a href="https://assetstore.unity.com?aid=1011l8NVc"&gt;&lt;em&gt;Unity&lt;/em&gt;&lt;/a&gt; &lt;strong&gt;Affiliate&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/CandyCoded/CandyCoded?"&gt;&lt;strong&gt;CandyCoded&lt;/strong&gt;&lt;/a&gt;  - Custom Unity Components that are delightful. CandyCoded is a collection of useful components and extensions for building in Unity. Whether you are building a quick prototype or a production-ready experience, CandyCoded will help you get there.&lt;br&gt;
&lt;a href="https://github.com/CandyCoded/CandyCoded?"&gt;&lt;em&gt;CandyCoded&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rfadeev/pump-editor?"&gt;&lt;strong&gt;Pump Editor&lt;/strong&gt;&lt;/a&gt;  - Collection of Unity editor helpers to boost productivity.&lt;br&gt;
&lt;a href="https://github.com/rfadeev/pump-editor?"&gt;&lt;em&gt;rfadeev&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/marijnz/unity-editor-spotlight?"&gt;&lt;strong&gt;unity-editor-spotlight&lt;/strong&gt;&lt;/a&gt;  - Simple macOS-like Spotlight file search in Unity. It shows your most opened files first. The more you use it, the better it gets. Use it with cmd+k on macOS, ctrl+k on Windows.&lt;br&gt;
&lt;a href="https://github.com/marijnz/unity-editor-spotlight?"&gt;&lt;em&gt;marijnz&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nowsprinting/blender-like-sceneview-hotkeys?"&gt;&lt;strong&gt;Blender-like SceneView Hotkeys&lt;/strong&gt;&lt;/a&gt;  - This Unity Editor Extensions allows you to select the viewing direction for a SceneView with the Blender -like hotkeys.&lt;br&gt;
&lt;a href="https://github.com/nowsprinting/blender-like-sceneview-hotkeys?"&gt;&lt;em&gt;nowsprinting&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Arvtesh/UnityFx.Outline?"&gt;&lt;strong&gt;UnityFx.Outline&lt;/strong&gt;&lt;/a&gt;  - Screen-space outlines for Unity3d.&lt;br&gt;
&lt;a href="https://github.com/Arvtesh/UnityFx.Outline?"&gt;&lt;em&gt;Arvtesh&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mob-sakai/CSharpCompilerSettingsForUnity?"&gt;&lt;strong&gt;C# Compiler Settings For Unity&lt;/strong&gt;&lt;/a&gt;  - hange the C# compiler (csc) used on your Unity project, as you like!&lt;br&gt;
&lt;a href="https://github.com/mob-sakai/CSharpCompilerSettingsForUnity?"&gt;&lt;em&gt;mob-sakai&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/RomanZhu/FixedPoint-Sharp"&gt;&lt;strong&gt;FixedPoint-Sharp&lt;/strong&gt;&lt;/a&gt;  - About Fixed point math with 48.16 precision.&lt;br&gt;
&lt;a href="https://github.com/RomanZhu/FixedPoint-Sharp"&gt;&lt;em&gt;RomanZhu&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/UniDi/UniDi?"&gt;&lt;strong&gt;UniDi&lt;/strong&gt;&lt;/a&gt;  - UniDi is a Dependency Injection container for Unity based on Zenject.&lt;br&gt;
&lt;a href="https://github.com/UniDi/UniDi?"&gt;&lt;em&gt;UniDi&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dre0dru/LocalStorage?"&gt;&lt;strong&gt;LocalStorage&lt;/strong&gt;&lt;/a&gt;  - Configurable generic classes for managing local data saved on device.&lt;br&gt;
&lt;a href="https://github.com/dre0dru/LocalStorage?"&gt;&lt;em&gt;dre0dru&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Renge-Games/UnityRadialHealthBars?"&gt;&lt;strong&gt;Ultimate Circular Health Bars Light&lt;/strong&gt;&lt;/a&gt;  - A segmented radial health bar shader for Unity URP/HDRP 2019 and up.&lt;br&gt;
&lt;a href="https://github.com/Renge-Games/UnityRadialHealthBars?"&gt;&lt;em&gt;Renge-Games&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fairygui/FairyGUI-unity?"&gt;&lt;strong&gt;FairyGUI for Unity&lt;/strong&gt;&lt;/a&gt;  - FairyGUI is a Cross Platform UI Editor &amp;amp; UI framework.&lt;br&gt;
&lt;a href="https://github.com/fairygui/FairyGUI-unity?"&gt;&lt;em&gt;fairygui&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Mukarillo/UnityDynamicScrollRect?"&gt;&lt;strong&gt;UnityDynamicScrollRect&lt;/strong&gt;&lt;/a&gt;  - An optimized approach to lists with dozens of elements.&lt;br&gt;
&lt;a href="https://github.com/Mukarillo/UnityDynamicScrollRect?"&gt;&lt;em&gt;Mukarillo&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Sov3rain/Messager?"&gt;&lt;strong&gt;Messager&lt;/strong&gt;&lt;/a&gt;  - This implementation of the event aggregator pattern tries to overcome the limitations of traditional event handling by providing a central place to publish and subscribe for events. It takes care of registering, unregistering and invoking events and thus decoupling publishers and subscribers.&lt;br&gt;
&lt;a href="https://github.com/Sov3rain/Messager?"&gt;&lt;em&gt;Sov3rain&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hecomi/uShaderTemplate?"&gt;&lt;strong&gt;uShaderTemplate&lt;/strong&gt;&lt;/a&gt;  - uShaderTemplate is an editor asset to create shaders from templates.&lt;br&gt;
&lt;a href="https://github.com/hecomi/uShaderTemplate?"&gt;&lt;em&gt;hecomi&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/keijiro/ProcAmp?"&gt;&lt;strong&gt;ProcAmp&lt;/strong&gt;&lt;/a&gt;  - ProcAmp is a utility shader for adjusting videos.&lt;br&gt;
&lt;a href="https://github.com/keijiro/ProcAmp?"&gt;&lt;em&gt;keijiro&lt;/em&gt;&lt;/a&gt; &lt;em&gt;Open Source&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spotlight"&gt;
  &lt;/a&gt;
  Spotlight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://monoflauta.itch.io/puppet-manor?utm_source=pocket_mylist"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eW5_yewQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gamedevdigest.com/assets/images/a9fd75d99afc2f2fd0e2673200a19f2a.png" alt="Puppet Manor" width="640" height="360"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://monoflauta.itch.io/puppet-manor?utm_source=pocket_mylist"&gt;&lt;strong&gt;Puppet Manor&lt;/strong&gt;&lt;/a&gt;  - Puppet Manor is a horror game where you try to escape from a monster spider who can control the mannequins that live there. Grabbing tools which will help you open doors while making sure neither the spider nor its mannequins get you will be your primary goal. Will you be able to escape without getting grabbed?&lt;br&gt;
&lt;em&gt;[Also check out their &lt;a href="https://monoflauta.com/2021/11/11/how-to-make-a-camera-wobble-effect/"&gt;How to make a camera wobble effect&lt;/a&gt; post]&lt;/em&gt;&lt;br&gt;
&lt;a href="https://monoflauta.itch.io/puppet-manor?utm_source=pocket_mylist"&gt;&lt;em&gt;MonoFlauta&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You can subscribe to the free weekly newsletter on &lt;a href="https://gamedevdigest.com"&gt;GameDevDigest.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>unity</category>
      <category>csharp</category>
      <category>news</category>
    </item>
  </channel>
</rss>
