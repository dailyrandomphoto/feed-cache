<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>🤯 How to Get More Stars on GitHub!</title>
      <author>William McGonagle</author>
      <pubDate>Fri, 31 Dec 2021 16:01:59 +0000</pubDate>
      <link>https://dev.to/williammcgonagle/how-to-get-more-stars-on-github-5a66</link>
      <guid>https://dev.to/williammcgonagle/how-to-get-more-stars-on-github-5a66</guid>
      <description>&lt;p&gt;I’ve been working on &lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;my open-source backend server&lt;/a&gt; for about a week now, and it already has about 12 stars, 9 forks, and nearly 10 outside contributors. That might not sound like a lot, but the project is only a week old and it isn’t a package or anything that can be used by outside people. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, how did I do it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most important thing has been issues. When GitHub was developing issues, they secretly made the most overpowered label that there is, “good first issue”. I can guarantee that if you create a new issue every two hours on your repository that has “good first issue” on it, you will get outside collaborators. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;Don’t forget to Star the Backend Server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What else can help with your labels? If you use emojis in the title, anyone that sees your issue will be instantly drawn to it because it is more colorful. This will increase the amount of views on your issue, and increase the likelihood of someone to help you with it as well. &lt;/p&gt;

&lt;p&gt;Finally, if you create a todo list in every issue, this tricks the GitHub system into thinking it’s a bigger issue, and it also tricks the websites, like ‘goodfirstissues.com’ into moving it higher in the rankings. &lt;/p&gt;

&lt;p&gt;There will be more tips like this coming tomorrow and the day after, so if you liked hearing this, make sure to follow me, so you can see more tips as they come out. &lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>discuss</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>How I built my portfolio inspired by Visual Studio Code Editor</title>
      <author>FourLineCode</author>
      <pubDate>Fri, 31 Dec 2021 15:29:39 +0000</pubDate>
      <link>https://dev.to/fourlinecode/how-i-built-my-portfolio-inspired-by-visual-studio-code-editor-kmb</link>
      <guid>https://dev.to/fourlinecode/how-i-built-my-portfolio-inspired-by-visual-studio-code-editor-kmb</guid>
      <description>&lt;p&gt;Today i want to share with you guys my portfolio that i built using &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt;. The design is inspired by popular code editor Visual Studio Code with my favourite theme One Dark Pro.&lt;/p&gt;

&lt;p&gt;Portfolio Site - &lt;a href="https://akmalhossain.vercel.app"&gt;Akmal Hossain&lt;/a&gt;&lt;br&gt;
My Github - &lt;a href="https://github.com/FourLineCode"&gt;FourLineCode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I would really appreciate if you would check out some of my top projects. Also github stars are really appreciated 😊&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My portfolio contains some of my personal informations, my favourite projects that I worked on and also some of my socials links. Each of these informations are in a separate tab. And all the informations are displayed as javascript code. It even has syntax highlighting similar to &lt;code&gt;One Dark Pro&lt;/code&gt; theme.&lt;/p&gt;

&lt;p&gt;The project is built using React and Nextjs with TailwindCSS for styling. I absolutely love and recommend tailwind as it makes it so much easier to style my projects without having to worry about consistency in design.&lt;/p&gt;

&lt;p&gt;Each of the token types in my portfolio is a separate custom component designed with tailwindcss. For example - comments, keys, strings, numbers etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CommentCode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;CodeProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-600"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;KeyCode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;CodeProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-600"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;StringCode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;CodeProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-green-600"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;NumCode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;CodeProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-yellow-500"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PropertyCode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;CodeProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text-red-500"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These components are wrapped around by a parent &lt;code&gt;Code&lt;/code&gt; component that represents each line of the code editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex py-0.5 space-x-4 text-gray-300"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-end flex-shrink-0 w-12 text-gray-600 select-none"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
                        &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;classNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex-shrink-0 w-2 h-2 mr-2 bg-opacity-60 rounded-full&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-red-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bg-yellow-400&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                        &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
                    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;classNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex-shrink-0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="nx"&gt;error&lt;/span&gt;
                            &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-red-500 text-opacity-60&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;warning&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-yellow-400 text-opacity-60&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
                    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;classNames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-opacity-60&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-red-500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-yellow-400&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="ni"&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
                    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;◼ &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So each line of code looks something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Code&lt;/span&gt; &lt;span class="na"&gt;line&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;lineCount&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;KeyCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;let&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;KeyCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; name = &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StringCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;quot;&lt;/span&gt;Akmal Hossain&lt;span class="ni"&gt;&amp;amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StringCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Code&lt;/span&gt; &lt;span class="na"&gt;line&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;lineCount&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;KeyCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;let&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;KeyCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; age = &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NumCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;21&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;NumCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BaseCode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As for the tabs, they are all custom written components as I did not want to add an entire javascript library for only a single component. These components are easy to implement with some react fundamentals.&lt;/p&gt;

&lt;p&gt;For a portfolio websites its also important to add &lt;a href="https://developers.google.com/search/docs/beginner/seo-starter-guide"&gt;SEO&lt;/a&gt; tags as this type of websites are shared in a lot of places. So I added some common tags such as -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"og:type"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"website"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"og:url"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"your url"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"og:title"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"og:description"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"twitter:card"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"summary_large_image"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"twitter:url"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"your url"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"twitter:title"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"twitter:description"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that basically is a short summary of how I built my portfolio. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Originally. I got the idea from Robin Malfait, who is a developer from tailwindlabs. He built his protfolio inspired by Neovim which is his code editor of choice. So I decided to build my own with the similar idea. My portfolio even has some similar jokes and easter eggs as his (I will change when I can come up with some of my own 😜).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am still a beginner level developer and also this is my first post, So try to go easy on me. Any suggestions or helpful criticisms are also welcome.&lt;/p&gt;

&lt;p&gt;Thank you, if you actually read through the entire thing (I highly doubt that as I wouldn't myself 😆).&lt;/p&gt;

</description>
      <category>portfolio</category>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>How to style console.log();</title>
      <author>SnowBit</author>
      <pubDate>Fri, 31 Dec 2021 15:07:57 +0000</pubDate>
      <link>https://dev.to/snowbit/how-to-style-consolelog-3g2o</link>
      <guid>https://dev.to/snowbit/how-to-style-consolelog-3g2o</guid>
      <description>&lt;p&gt;I guess that your first code of JS was&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;even, mine was the same 🤏&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UyDN4-Sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ilui6ee59n6vv17trqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UyDN4-Sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ilui6ee59n6vv17trqz.png" alt="same" width="475" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, have you wondered about styling it? 🤔&lt;/p&gt;

&lt;p&gt;nevermind...&lt;/p&gt;

&lt;p&gt;I am going to take the Discord warning message into account as an example&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#discord-console-warning-message"&gt;
  &lt;/a&gt;
  Discord Console Warning Message
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydVHDnM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz0lygc4zz8st6nfiv9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydVHDnM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz0lygc4zz8st6nfiv9m.png" alt="Discord warning msg" width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you have ever opened &lt;strong&gt;developer tools&lt;/strong&gt; in Discord, you will find this warning msg from Discord... Check it out right now if you haven't (and listennn, don't paste any malicious code there)&lt;/li&gt;
&lt;li&gt;So let's recreate the same warning message&lt;/li&gt;
&lt;li&gt;Write some necessary HTML to link a JS file to it&lt;/li&gt;
&lt;li&gt;Create a JS file and name it whatever you want&lt;/li&gt;
&lt;li&gt;Now follow the steps below
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;styling&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When you style there will be two things you need to take note of.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;text&lt;/strong&gt; - Every text message starts with a prefix - &lt;code&gt;%c&lt;/code&gt;; and it is a very important thing and without it, styling will not apply to the text&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;styling&lt;/strong&gt; - Simple CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's head up to the code,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;%cHold Up&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color: #404EED; font-size: 60px; font-weight: bold;-webkit-text-stroke: 1px black;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%cIf someone told you to copy/paste something here you have an 11/10 chance you're being scammed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color: black; font-size: 18px;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%cPasting anything in here could give attackers access to your Discord account.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color: red; font-size: 18px; font-weight: bold;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/snowbit-coderboi/embed/mdBxVqb?height=600&amp;amp;default-tab=js,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So, found this simple? If not you can dive into comments to ask questions...&lt;/p&gt;

&lt;p&gt;Why not share your styling to the &lt;strong&gt;console.log()&lt;/strong&gt;, I am very excited to see yours&lt;/p&gt;

&lt;p&gt;Make sure to subscribe to my &lt;a href="https://www.youtube.com/channel/UCNTKqF1vhFYX_v0ERnUa1RQ?view_as=subscriber&amp;amp;sub_confirmation=1"&gt;YouTube Channel&lt;/a&gt; I regularly upload some amazing web development videos...&lt;/p&gt;

&lt;p&gt;Your support gives me motivation 💪&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How I center a div</title>
      <author>David Frempong</author>
      <pubDate>Fri, 31 Dec 2021 14:45:06 +0000</pubDate>
      <link>https://dev.to/davidfrempong/how-i-center-a-div-2ijb</link>
      <guid>https://dev.to/davidfrempong/how-i-center-a-div-2ijb</guid>
      <description>&lt;p&gt;This is one of the most commonly asked questions, so here's how I do it.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .div{
      justify-content: center; 
      (justify's content in center of page)
      text-align: center;
      (any text will be aligned to center of page)
      margin: 0 auto;
      (creates an equal amount of margin on each side, centering the object)
      padding: 0;
      (I do this if necessary to help center the object)
     }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>html</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Showcasing my new website + Five coding hacks that will change your life.</title>
      <author>IroncladDev</author>
      <pubDate>Fri, 31 Dec 2021 14:37:39 +0000</pubDate>
      <link>https://dev.to/ironcladdev/showcasing-my-new-website-five-coding-hacks-that-will-change-your-life-32lm</link>
      <guid>https://dev.to/ironcladdev/showcasing-my-new-website-five-coding-hacks-that-will-change-your-life-32lm</guid>
      <description>&lt;p&gt;I just remade my website for probably the third time this year.  I used Next.js, React, Express, and lots of CSS to build this.  &lt;/p&gt;

&lt;p&gt;In this post, I'll show you how to do everything from the robot drawing animation to sending custom emails in NodeJS for free.&lt;/p&gt;

&lt;p&gt;Oh and also, if you were previously following me, I changed my name from LeviathanProgramming (The golden dragon) to Ironclad Dev.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.connerow.dev/"&gt;https://www.connerow.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-the-animated-robot"&gt;
  &lt;/a&gt;
  1. The animated robot
&lt;/h3&gt;

&lt;p&gt;Literally, you could watch this animation for hours on end and not get tired of it.  Or, at least I could.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1khdpgxr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/orunyil7jkawj553tje2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1khdpgxr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/orunyil7jkawj553tje2.gif" alt="Robot Animation" width="320" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The good news?  It's not a gif, not a video, and does &lt;strong&gt;not require javascript to run&lt;/strong&gt;!&lt;br&gt;
It's plain SVG and CSS.&lt;/p&gt;

&lt;p&gt;If you're wondering how I drew that, &lt;a href="https://boxy-svg.com/"&gt;Boxy Svg&lt;/a&gt; is the best svg editor I've found so far.  It's super easy to use, runs offline if you download the app, and lets you do so much more!&lt;/p&gt;

&lt;p&gt;Oh, and if your free trial runs out, just copy-paste the svg elements.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bDiZnBuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2t5owf6xy1g0l621o9g8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bDiZnBuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2t5owf6xy1g0l621o9g8.png" alt="Copying the raw svg output" width="880" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just to let you know, the svg &lt;em&gt;has&lt;/em&gt; to be in raw svg form.  It &lt;em&gt;can't&lt;/em&gt; be an image url or css rules won't be able to apply.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;viewbox=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"draw-svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's write some css to style the svg element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#draw-svg&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;stroke-dasharray&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Starts the svg paths to zero */&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="m"&gt;5s&lt;/span&gt; &lt;span class="n"&gt;ease-in&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Does the draw animation */&lt;/span&gt;
  &lt;span class="nl"&gt;animation-fill-mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Only runs the animation once */&lt;/span&gt;
  &lt;span class="py"&gt;stroke-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Controls the thickness of the svg */&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;drop-shadow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c"&gt;/* Adds a nice little glow effect */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now comes the big moment -- Animating the SVG element!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;stroke-dashoffset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;stroke-dashoffset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it!  If you noticed the animated glow effect and the slow movement bobbing the graphic up and down slowly in my site, I just used &lt;code&gt;drop-shadow&lt;/code&gt; and animated it as well as translating the image up and down slowly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-triangular-backgrounds"&gt;
  &lt;/a&gt;
  2. The Triangular Backgrounds
&lt;/h3&gt;

&lt;p&gt;Triangular backgrounds can give an amazing-looking effect (I'm not bragging about mine!) to your website.  They are extremely simple to make and will really amp up the look of your site.&lt;/p&gt;

&lt;p&gt;Basically, what I did was create a grid container of 1x1 and stack divs on top of each other, each cut with &lt;code&gt;clip-path&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The best editor for clipping element paths is &lt;a href="https://bennettfeely.com/clippy/"&gt;https://bennettfeely.com/clippy/&lt;/a&gt;.  Be sure to check it out!&lt;/p&gt;

&lt;p&gt;Let's create the grid / parent element for all those sharp-looking divs as well as a few slant grid elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"overlay-grid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"layer"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"slant0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"layer"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"slant1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's style that and also style the elements that go within it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.overlay-grid&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#121f33&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.layer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;grid-row-start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-column-start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm going to apply two different triangular slants and create something similar to what I did in my site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#slant0&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#152c42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#slant1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should be seeing something now!  Looking nice already, right?&lt;/p&gt;

&lt;p&gt;But wait...how will you add some content on top of that?&lt;br&gt;
It's simpler than ever.  Let's make another element within our grid element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"overlay-grid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"layer"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"slant0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"layer"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"slant1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="c"&gt;&amp;lt;!--The overlay content box--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"layer"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"overlay-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"cover-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Centered Overlay Content&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your content box might not show up (since you didn't add css!) in front of all the others.  I don't know why this happens.  It just needs a bit of css styling and it's ready to go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nf"&gt;#overlay-content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* make it display on the front */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#cover-center&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Avenir Book'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/IroncladDev/embed/ZEXxbGE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-fadein-effects"&gt;
  &lt;/a&gt;
  3. Fade-In Effects
&lt;/h3&gt;

&lt;p&gt;In this example, I'm going to be creating a simple react component with a bit of css styling for the fade-in effect.  It's surprisingly simple and will really make your sites look better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Fade&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No pain in using a class-based component, eh?&lt;br&gt;
Okay, so basically, this just renders a div element.&lt;br&gt;
Let's move on to adding states and all those nice stuff into the constructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listenToScroll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listenToScroll&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create an event listener and the &lt;code&gt;listenToScroll&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;listenToScroll&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pageYOffset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetTop&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listenToScroll&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Okay, you might be wondering "Whoah, hold up there - Why is there a try...catch block?".&lt;br&gt;
The reason is because sometimes this will, for an unknown reason, will complain about refs only being able to be done on class-based components and prevent javascript from working properly.&lt;/p&gt;

&lt;p&gt;Okay, now that we've got that down, let's remodel the component's rendering.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classes&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;transparent-element&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;visible-element&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Okay, so why would I add a &lt;code&gt;classes&lt;/code&gt; prop?  Well, in case you would want to style this element as a div in the future.  I'll explain everything after we do the css fading effect styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.transparent-element&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translatey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.visible-element&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translatey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm just adding the translation in the fade effects to that the elements will appear to move upwards when they fade in, which is optional.&lt;/p&gt;

&lt;p&gt;To use the fade element, all you have to do is wrap some existing content with it and it will fade in for you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Fade&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I faded In!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Fade&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;Fade&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Me too!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Me Three!&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Awesome&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Fade&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to style the fade &lt;em&gt;container&lt;/em&gt;, you can pass some classes into it as shown:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Fade&lt;/span&gt; &lt;span class="na"&gt;classes=&lt;/span&gt;&lt;span class="s"&gt;"box-container translucent solid-border border-white"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I'm in a styled container!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Fade&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/IroncladDev/embed/yLzKYPN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-the-blog"&gt;
  &lt;/a&gt;
  4. The Blog
&lt;/h3&gt;

&lt;p&gt;For the blog, I just literally used the dev.to API.  I almost decided to use hashnode, but decided I'd stick with dev.&lt;/p&gt;

&lt;p&gt;All you have to do is fetch JSON data from the easy-to-use dev.to api endpoint, for example&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/api/articles?username=ironcladdev"&gt;https://dev.to/api/articles?username=ironcladdev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It gives you enough information to make your own blog.&lt;/p&gt;

&lt;p&gt;You can also get a specific article, but you shouldn't need that for your blog.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/api/articles/834042"&gt;https://dev.to/api/articles/834042&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm a bit too lazy to be showing you how to fetch JSON apis.  Just head over to this article over here I wrote in the past:&lt;br&gt;
&lt;a href="https://digest.repl.co/post/61a9497a5ffebb937a6577b4"&gt;https://digest.repl.co/post/61a9497a5ffebb937a6577b4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And yes, I did make that digest tutorial site if you were wondering.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-custom-emails"&gt;
  &lt;/a&gt;
  5. Custom Emails
&lt;/h3&gt;

&lt;p&gt;You won't get one of these unless you subscribe to me, but I thought I'd show you how to do it over here.&lt;/p&gt;

&lt;p&gt;You can send custom emails from NodeJS for absolutely no cost at all!  All it takes is a few npm packages, some authentication, and some css.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important Notice&lt;/strong&gt; - Make sure this is run on the server-side (NodeJS) and not the client side of JS (I'm talking to you thirteen-year-old devs out there)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7FOGQm8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3kf446h48xguwz1sr3b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7FOGQm8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3kf446h48xguwz1sr3b.png" alt="Custom Email" width="880" height="730"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's install two npm packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodemailer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inLineCss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nodemailer-juice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nodemailer does the main emailing stuff and nodemailer-juice converts your css into inline css styling. &lt;/p&gt;

&lt;p&gt;Why do you need nodemailer-juice?  Well sadly, emails only support inline css and not css files or style tags.  It's hard to believe, but it's true and probably won't change for a while.&lt;/p&gt;

&lt;p&gt;I've created a simple mailing function.  Make sure you put in your correct email credentials!&lt;/p&gt;

&lt;p&gt;Don't forget to turn on Two-Step verification if you're using gmail and generate an app password for your email password.  Otherwise, this won't work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gS3wROBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjlhws1tfdjuyxohgl5l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gS3wROBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjlhws1tfdjuyxohgl5l.png" alt="Google Account Two-Step verification" width="880" height="239"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sendEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;transporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nodemailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTransport&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gmail&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;smtp.gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;465&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;secure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youremail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;input your app password here&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;transporter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;compile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inLineCss&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mailDetails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;youremail@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;transporter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendMail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mailDetails&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To send a custom email, all you have to do is pass in an html document &lt;strong&gt;as a javascript string&lt;/strong&gt; into the sendEmail function.  It can't be a file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sendEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someone@someemail.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is a test email!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    ...
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's a little template you can use for emails: &lt;a href="https://replit.com/@IroncladDev/Noseletter"&gt;https://replit.com/@IroncladDev/Noseletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What I did to make email sending a bit easier was create a constant function and set it to the html body with a few arguments to edit the content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;...`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Well, I guess that's all I have to say.  If you have anything to say about my site, feel free to say it!  Any criticisms will be appreciated.&lt;/p&gt;

&lt;p&gt;Subscribe to my &lt;a href="https://www.connerow.dev"&gt;newsletter&lt;/a&gt; for new posts, new projects, recaps, and more!&lt;/p&gt;

&lt;p&gt;Join my &lt;a href="https://discord.gg/TZCc8P2cyH"&gt;discord&lt;/a&gt; to get in touch and hang out!&lt;/p&gt;

&lt;p&gt;Also, be sure to support this post with a couple reactions!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>nextjs</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>Set up Dynamic DNS for Dynamic IP Addresses at Home (for free) + WireGuard Configuration</title>
      <author>Amel Spahić</author>
      <pubDate>Fri, 31 Dec 2021 14:34:47 +0000</pubDate>
      <link>https://dev.to/amelspahic/set-up-dynamic-dns-for-dynamic-ip-addresses-at-home-for-free-wireguard-configuration-381j</link>
      <guid>https://dev.to/amelspahic/set-up-dynamic-dns-for-dynamic-ip-addresses-at-home-for-free-wireguard-configuration-381j</guid>
      <description>&lt;p&gt;We already talked about how to &lt;a href="https://amelspahic.com/bring-your-home-network-anywhere-for-free-home-vpn-with-wireguard-on-raspberry-pi-pi-hole-ubuntu-server-20-04-lts"&gt;Bring Your Home Network Anywhere For Free - Home VPN with Wireguard on Raspberry Pi + Pi-hole (Ubuntu Server 20.04 LTS)&lt;/a&gt;. It is an awesome thing, especially if you have a static IP address, but if you are like most households in the world (including myself), your internet service provider (ISP) provides you with a dynamic IP address. It means that your home network's IP address changes frequently, even a couple of times a day, so your VPN connection configuration needs to be changed accordingly to keep up.&lt;/p&gt;

&lt;p&gt;To solve that, we will utilize the Dynamic DNS solution. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-dns"&gt;
  &lt;/a&gt;
  Dynamic DNS
&lt;/h2&gt;

&lt;p&gt;Dynamic DNS is a way of assigning a custom domain name that automatically updates even as the IP address changes. This system has been around long enough that there are workarounds for these kinds of issues. For the purpose of this post, I will use a free DDNS service -  &lt;a href="https://www.noip.com/"&gt;No-IP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go to the &lt;a href="https://www.noip.com/"&gt;No-IP&lt;/a&gt; website and choose some cool hostname and domain:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B4NDrnoy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640549922937/pZy00vliE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B4NDrnoy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640549922937/pZy00vliE.png" alt="image.png" width="880" height="323"&gt;&lt;/a&gt;&lt;br&gt;
You are required to sign up, so just populate the required fields and complete the registration (email confirmation and stuff). Your hostname will be pre-populated and set up for the currently logged-in IP address. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are not logged in from your home network, you need to change the address to point to your home network's IP address.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once you are done setting up (don't forget to add username, No-IP will complain), we can set up our router to ping No-IP servers whenever our IP address changes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#router-set-up"&gt;
  &lt;/a&gt;
  Router Set Up
&lt;/h2&gt;

&lt;p&gt;My home router is Technicolor CGA2121, but the configuration shouldn't be different for others, just browse a bit around through the configuration options.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UtS4ey7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640550413166/idEpTh1JM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UtS4ey7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640550413166/idEpTh1JM.png" alt="image.png" width="880" height="724"&gt;&lt;/a&gt;&lt;br&gt;
After this is done, our router should &lt;strong&gt;automatically call&lt;/strong&gt; No-IP API to change the pointing IP address.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#wireguard-configuration"&gt;
  &lt;/a&gt;
  WireGuard Configuration
&lt;/h2&gt;

&lt;p&gt;When we set up WireGuard on our Raspberry Pi in the &lt;a href="https://amelspahic.com/bring-your-home-network-anywhere-for-free-home-vpn-with-wireguard-on-raspberry-pi-pi-hole-ubuntu-server-20-04-lts"&gt;previous post&lt;/a&gt;, we selected the &lt;strong&gt;Public IP&lt;/strong&gt; option with the current home IP address.&lt;/p&gt;

&lt;p&gt;Current configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat /etc/pivpn/wireguard/setupVars.conf
PLAT=Ubuntu
OSCN=focal
USING_UFW=0
IPv4dev=eth0
install_user=ubuntu
install_home=/home/ubuntu
VPN=wireguard
pivpnPORT=51820
pivpnDNS1=10.6.0.1
pivpnDNS2=
pivpnHOST=&amp;lt;PUBLIC IP ADDRESS&amp;gt; # &amp;lt;- We will change this
INPUT_CHAIN_EDITED=0
FORWARD_CHAIN_EDITED=0
pivpnPROTO=udp
pivpnMTU=1420
pivpnDEV=wg0
pivpnNET=10.6.0.0
subnetClass=24
ALLOWED_IPS="0.0.0.0/0, ::0/0"
UNATTUPG=1
INSTALLED_PACKAGES=(net-tools iptables-persistent wireguard-tools qrencode)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enter the edit mode for &lt;code&gt;setupVars.conf&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo nano /etc/pivpn/wireguard/setupVars.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change &lt;code&gt;pivpnHOST&lt;/code&gt; to point to your DDNS hostname which you created on No-IP - &lt;code&gt;pivpnHOST=xxxx.ddns.net&lt;/code&gt;. Save with &lt;code&gt;Ctrl+X, Y&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;New clients you generate will use the new endpoint but you need to manually edit existing clients. &lt;br&gt;
Open your configuration, for example, &lt;code&gt;amel.conf&lt;/code&gt;, and update the line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Endpoint = xxxx.ddns.net:51820
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;I hope this tutorial will help you overcome issues with dynamic IP and help you improve your online being.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>linux</category>
      <category>ddns</category>
    </item>
    <item>
      <title>Creating Super Radio Buttons</title>
      <author>Mohit Maroliya</author>
      <pubDate>Fri, 31 Dec 2021 14:31:36 +0000</pubDate>
      <link>https://dev.to/mohitm15/creating-super-radio-buttons-ip8</link>
      <guid>https://dev.to/mohitm15/creating-super-radio-buttons-ip8</guid>
      <description>&lt;p&gt;In the last &lt;a href="https://dev.to/mohitm15/creating-super-buttons-for-like-share-and-subscribe-gef"&gt;post&lt;/a&gt; , I had shared to create &lt;strong&gt;SuperLike, SuperShare and SuperSubscribe&lt;/strong&gt; buttons.&lt;/p&gt;

&lt;p&gt;In this post,  I will show how to create a cool &lt;code&gt;html-css radio button&lt;/code&gt; that represents the feeling of animated &lt;code&gt;radio-button&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For this we require a html file &lt;code&gt;index.html&lt;/code&gt;and a css file &lt;code&gt;style.css&lt;/code&gt;only.&lt;/p&gt;

&lt;p&gt;The end result for Radio-button is like this:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/SuperRadioButton-5nru1"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-input-structure"&gt;
  &lt;/a&gt;
  Setting up the input structure
&lt;/h2&gt;

&lt;p&gt;Lets get started by setting up the basic structure in &lt;code&gt;index.html&lt;/code&gt; file. We had used &lt;code&gt;&amp;lt;input/&amp;gt;&lt;/code&gt; of type &lt;code&gt;radio&lt;/code&gt; here which we wrap in &lt;code&gt;main_wrapper&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;So for our &lt;code&gt;index.html&lt;/code&gt; file, all we need is the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
    &amp;lt;div class="main_wrapper"&amp;gt;
      &amp;lt;div class="buttons_wrapper"&amp;gt;

        &amp;lt;input type="radio" id="radio1" name="inputs" /&amp;gt;
        &amp;lt;label class="entry" for="radio1"&amp;gt;
          &amp;lt;div class="circle"&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class="entry-label"&amp;gt;Yes&amp;lt;/div&amp;gt;
        &amp;lt;/label&amp;gt;

        &amp;lt;input type="radio" id="radio2" name="inputs" /&amp;gt;
        &amp;lt;label class="entry" for="radio2"&amp;gt;
          &amp;lt;div class="circle"&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class="entry-label"&amp;gt;No&amp;lt;/div&amp;gt;
        &amp;lt;/label&amp;gt;

        &amp;lt;input type="radio" id="radio3" name="inputs" /&amp;gt;
        &amp;lt;label class="entry" for="radio3"&amp;gt;
          &amp;lt;div class="circle"&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;div class="entry-label"&amp;gt;May Be&amp;lt;/div&amp;gt;
        &amp;lt;/label&amp;gt;

        &amp;lt;div class="highlight"&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since, we have defined the &lt;code&gt;ids&lt;/code&gt; and &lt;code&gt;classes&lt;/code&gt; for the html components, so now its time to add some styling and animations to them. 😄&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-styles"&gt;
  &lt;/a&gt;
  Adding the Styles
&lt;/h2&gt;

&lt;p&gt;We first add styling to &lt;code&gt;main_wrapper&lt;/code&gt; and &lt;code&gt;buttons_wrapper&lt;/code&gt; classes, label of radioButton and the circle in front of each option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Outfit", sans-serif;
  font-size: 28px;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #f7f7f7;
  color: #cacaca;
}

.main_wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  width: 260px;
  padding: 50px;
  box-shadow: 2px 2px 20px rgba(0, 0, 0, 0.82);
  border-radius: 20px;
  position: relative;
}

.buttons_wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: auto;
  width: 160px;
  overflow: hidden;
  position: relative;
}

.entry {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  margin: 10px;
  width: 100%;
  position: relative;
  transition: 0.5s;
}

.circle {
  height: 32px;
  width: 32px;
  top: 50%;
  border: 3px solid #cacaca;
  border-radius: 50%;
  cursor: pointer;
  transition: border-color 0.5s;
}

.entry-label {
  font-weight: 700;
  padding-left: 15px;
  cursor: pointer;
  user-select: none;
  -moz-user-select: none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have used the &lt;code&gt;Outfit&lt;/code&gt; &lt;strong&gt;Google Font&lt;/strong&gt;. You can import the font by writing the following code on top of the CSS file. &lt;br&gt;
&lt;code&gt;@import url("https://fonts.googleapis.com/css2?family=Outfit:wght@200&amp;amp;display=swap");&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now I will add some styling to the &lt;code&gt;highlight&lt;/code&gt; class that will appear when an input is selected.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.highlight {
  height: 18px;
  width: 18px;
  top: 19px;
  left: 7px;
  position: absolute;
  border-radius: 59%;
  pointer-events: none;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transform: translateY(-55px);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally add the styling and animation to the &lt;code&gt;input&lt;/code&gt; options&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;input {
  display: none;
}

input:nth-child(1):checked ~ .highlight {
  transform: translateY(0);
  background: green;
}

input:nth-child(3):checked ~ .highlight {
  transform: translateY(55px);
  background:red;
}

input:nth-child(5):checked ~ .highlight {
  transform: translateY(110px);
  background: blue;
}
input:nth-child(1):checked + .entry .circle {
  border-color: #056b16;
  color: #056b16;
}
input:nth-child(3):checked + .entry .circle {
  border-color: rgb(160, 2, 2);
  color: rgb(160, 2, 2);
}
input:nth-child(5):checked + .entry .circle {
  border-color: rgb(0, 0, 185);
  color: rgb(0, 0, 185);
}
input:nth-child(1):checked + .entry {
  color: #056b16;
}
input:nth-child(3):checked + .entry {
  color: rgb(160, 2, 2);
}
input:nth-child(5):checked + .entry {
  color: rgb(0, 0, 185);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Cheers! 🍻, you have build the &lt;code&gt;SuperRadio&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/SuperRadioButton-5nru1"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now you can come up with as many stylings and make this small application more fantastic.&lt;/p&gt;

&lt;p&gt;Thank you for your time. Please share your valuable feedbacks in comments also.&lt;/p&gt;

&lt;p&gt;☘️ Happy Coding &amp;amp; Happy New Year 2k22 ☘️&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>CryptoPals Crypto Challenges Using Rust: Single-byte xor cipher</title>
      <author>Naveen Sahu</author>
      <pubDate>Fri, 31 Dec 2021 14:10:37 +0000</pubDate>
      <link>https://dev.to/thenvn/cryptopals-crypto-challenges-using-rust-single-byte-xor-cipher-1akg</link>
      <guid>https://dev.to/thenvn/cryptopals-crypto-challenges-using-rust-single-byte-xor-cipher-1akg</guid>
      <description>&lt;p&gt;This is &lt;a href="https://cryptopals.com/sets/1/challenges/3"&gt;Challenge 3&lt;/a&gt; of &lt;a href="https://cryptopals.com"&gt;Cryptopals&lt;/a&gt; challenges implemented in Rust language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context 💡
&lt;/h2&gt;

&lt;p&gt;So, things are starting to get interesting now.&lt;br&gt;
We're given a hex encoded string. This string has been XORed against a single character. We don't know what character. We have to find this character (aka "key" of this encryption) &amp;amp; decrypt the message.&lt;/p&gt;

&lt;p&gt;Let's say the message was &lt;code&gt;somesecret&lt;/code&gt; (length 10) then it was XORed against let's say char &lt;code&gt;k&lt;/code&gt;, then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;somesecret ^ kkkkkkkkkk ('k' repeated 10 times) = somecypher
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if we want to decipher the given encrypted message - &lt;code&gt;somecypher&lt;/code&gt;, we can XOR it with the same key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;somecipher ^ kkkkkkkkkk ('k' repeated 10 times) = somesecret
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're going to exploit this property of XOR encryption to decipher the message here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crack-%F0%9F%95%B6"&gt;
  &lt;/a&gt;
  Crack 🕶
&lt;/h2&gt;

&lt;p&gt;The way we're going to break is by brute-forcing with all chars. By looping through each char - &lt;code&gt;c&lt;/code&gt; &amp;amp; using repeated &lt;code&gt;c&lt;/code&gt; as key, we'll get a message. Now none of the decrypted messages would make sense. Except only one - the one with the actual key! All other would spit out some stupid random sequence of characters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;somecipher ^ aaaaaaaaaa = axow&amp;amp;)!923 (nah!)
somecipher ^ bbbbbbbbbb = cgow*&amp;amp;=8u2 (nah!)
somecipher ^ cccccccccc = yz!6w+)#93 (nah!)
.
.
somecipher ^ kkkkkkkkkk = somesecret (looks like a secret!)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'd need to devise some method to programmatically detect sense-making English text by scoring each message corressponding to each char &lt;code&gt;c&lt;/code&gt; as key. Scoring by &lt;a href="https://en.wikipedia.org/wiki/Letter_frequency"&gt;letter frequency&lt;/a&gt; scoring would suffice for our purpose. You can learn more about it &lt;a href="https://crypto.stackexchange.com/questions/30209/developing-algorithm-for-detecting-plain-text-via-frequency-analysis"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's one implementation in Rust:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const LETTER_FREQ: [f64; 27] = [
    0.08167, 0.01492, 0.02782, 0.04253, 0.12702, 0.02228, 0.02015, // A-G
    0.06094, 0.06966, 0.00153, 0.00772, 0.04025, 0.02406, 0.06749, // H-N
    0.07507, 0.01929, 0.00095, 0.05987, 0.06327, 0.09056, 0.02758, // O-U
    0.00978, 0.02360, 0.00150, 0.01974, 0.00074, 0.19181, // V-Z &amp;amp; space char
];

pub fn calc_letter_freq_score(s: &amp;amp;str) -&amp;gt; f64 {
    let mut counts = vec![0_u32; 27];
    let mut score: f64 = 0_f64;

    s.chars().for_each(|c| match c {
        'a'..='z' =&amp;gt; {
            counts[c as usize - 97] += 1;
        }
        'A'..='Z' =&amp;gt; {
            counts[c as usize - 65] += 1;
        }
        ' ' =&amp;gt; counts[26] += 1,
        _ =&amp;gt; {}
    });

    for i in 0..27 {
        score += (counts[i] as f64) * LETTER_FREQ[i];
    }

    score
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that for the challenge I've also included a frequency of space character at the very end.&lt;/p&gt;

&lt;p&gt;Now to the core problem. We loop through every char as byte, xor this byte with every byte of given cipher. Convert XORed bytes to a text (String), then calculate this text's (potentially message) letter frequency score. Retain the deciphered message producing the best score &amp;amp; corresponding key char.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use hex;

pub fn decipher_message(hex_cipher: &amp;amp;str) -&amp;gt; (String, f64) {
    let cipher_bytes = hex::decode(hex_cipher).unwrap();
    let mut key_byte: u8;

    let mut message = String::new();
    let mut best_score = f64::MIN;
    for c in 0..=255 {
        key_byte = c as u8;

        let msg_bytes: Vec&amp;lt;u8&amp;gt; = cipher_bytes.iter().map(|&amp;amp;b| b ^ key_byte).collect();

        let msg = String::from_utf8_lossy(&amp;amp;msg_bytes);
        let score = calc_letter_freq_score(&amp;amp;msg);

        if score &amp;gt; best_score {
            best_score = score;
            message = String::from(msg);
        }
    }

    (message, best_score)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in a snap, cipher is broken! 😎&lt;/p&gt;

&lt;p&gt;See code on &lt;a href="https://github.com/theNvN/cryptopals-crypto-challenges/blob/master/src/set_1_basics/c3_single_byte_xor_cypher.rs"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find me on:&lt;br&gt;
Twitter - &lt;a href="https://twitter.com/heyNvN"&gt;@heyNvN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://naveeen.com"&gt;naveeen.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>rust</category>
      <category>cryptography</category>
    </item>
    <item>
      <title>2021: Year in Review</title>
      <author>Anushka Raj</author>
      <pubDate>Fri, 31 Dec 2021 13:11:02 +0000</pubDate>
      <link>https://dev.to/anushcodergirl/2021-year-in-review-3ga1</link>
      <guid>https://dev.to/anushcodergirl/2021-year-in-review-3ga1</guid>
      <description>&lt;p&gt;As 2021 winds to a close, it’s time to reflect on the year. It was an exceptional year, so much has changed. Lots of interesting stuff happened. Let’s dig in.&lt;/p&gt;

&lt;p&gt;❌&lt;strong&gt;My failures of 2021:&lt;/strong&gt;❌&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Failed in some job interviews.&lt;/li&gt;
&lt;li&gt;Missed (had to let go because of the unavoidable situation) some high-paid job opportunities.&lt;/li&gt;
&lt;li&gt;Failed to keep on blogging.&lt;/li&gt;
&lt;li&gt;Missed to participate in &lt;strong&gt;30 Days Google Cloud Challenge&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✔&lt;strong&gt;My wins of 2021:&lt;/strong&gt;✔&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In January, mentored some students.&lt;/li&gt;
&lt;li&gt;In February, I &lt;strong&gt;Graduated&lt;/strong&gt;👩‍🎓(Class of 2020 but late due to Covid-19).&lt;/li&gt;
&lt;li&gt;Got selected as an &lt;strong&gt;Internshala Student Partner&lt;/strong&gt;. During this program, I promoted Internshala &amp;amp; its product, helped several students in learning new skills, and motivated them to find their dream internship.&lt;/li&gt;
&lt;li&gt;Started pursuing an &lt;strong&gt;MCA(Master of Computer Applications)&lt;/strong&gt; from &lt;strong&gt;JECRC University&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In March, I created a &lt;a href="https://discord.com/invite/wFdXpYRauy"&gt;Cool &amp;amp; Creative Dev Space Discord Community&lt;/a&gt; (currently 45+ members) but still, I need to set it up in the right way.&lt;/li&gt;
&lt;li&gt;In April, participated in CNC 2021 Challenge &amp;amp; successfully completed it. Won some cool Dev stickers as a swag.&lt;/li&gt;
&lt;li&gt;In May, started working as &lt;strong&gt;Freelance Graphic Designer&lt;/strong&gt;. Thanks to &lt;a href="https://instagram.com/sheistechie"&gt;Ambika’s Daily Design Challenge WhatsApp Group&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In June, got a Multimedia RGB Gaming Keyboard as a gift from 
&lt;a href="https://instagram.com/ankurwarikoo"&gt;Ankur Warikoo Sir&lt;/a&gt;. For me, it’s a pre-birthday gift as my birthday is in July.&lt;/li&gt;
&lt;li&gt;In July, got an internship as a &lt;strong&gt;Software Engineer&lt;/strong&gt; at &lt;strong&gt;Shiv Guru IT Solutions&lt;/strong&gt;. Started working in August. It is a remote position working with a dope team.&lt;/li&gt;
&lt;li&gt;In, September I was busy preparing &amp;amp; writing the master’s assignments and exams.&lt;/li&gt;
&lt;li&gt;In October, participated in &lt;strong&gt;MLH Local Hack Day&lt;/strong&gt; for the 1st time and learned a lot. I was in the &lt;strong&gt;top 6% of all hackers&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;This year I also participated for the 1st time in &lt;strong&gt;HackThisFall&lt;/strong&gt;. Got to learn so many things from awesome speakers and mentors, got a chance to interact with them. Explored some new tech stuff. Overall it was a great experience.&lt;/li&gt;
&lt;li&gt;During the HTF, I won the Youtube Live Session Swag giveaway(Yet to come). Looking forward to HTF 3.0.&lt;/li&gt;
&lt;li&gt;Luckily I won the &lt;strong&gt;&lt;a class="mentioned-user" href="https://dev.to/hacker"&gt;@hacker&lt;/a&gt; T-shirt&lt;/strong&gt; in a giveaway by 
The @ Company. Thanks to Siddharth Dayalwal.&lt;/li&gt;
&lt;li&gt;Participated in &lt;strong&gt;Hacktoberfest 2021&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Participated in the Instagram giveaway by Meme Coding &amp;amp; Sawo Labo and guess what I won &lt;strong&gt;SAWO Labs goodies&lt;/strong&gt;(Yet to come).&lt;/li&gt;
&lt;li&gt;In November, got a chance to meet in person with my HR, she is very kind and supportive. She also brings chocolates from the U.S for me.&lt;/li&gt;
&lt;li&gt;Won a cool &lt;strong&gt;Pluralsight Tripper Backpack&lt;/strong&gt; during MS Ignite.&lt;/li&gt;
&lt;li&gt;Got a cool &lt;strong&gt;T-shirt from Veeam Software&lt;/strong&gt;. Thanks to 
Praveen Kumar Purushothaman.&lt;/li&gt;
&lt;li&gt;Bought a new phone for my brother.&lt;/li&gt;
&lt;li&gt;In December, learned how to create the Instagram filter using SparkAR Studio. Created 2 filters. &lt;a href="https://www.instagram.com/ar/602170401033251/"&gt;BluePinkNeonLight Filter&lt;/a&gt; got 1.2K impressions.&lt;/li&gt;
&lt;li&gt;Meet school/college friends after a long time.&lt;/li&gt;
&lt;li&gt;My &lt;a href="https://www.linkedin.com/in/anushka-raj/"&gt;Linkedin&lt;/a&gt; connection has grown to 500+.&lt;/li&gt;
&lt;li&gt;Crossed 200+ followers on &lt;a href="https://twitter.com/AnushCodergirl"&gt;Twitter&lt;/a&gt;, 1.1k followers on &lt;a href="https://www.instagram.com/anush.codergirl/"&gt;Instagram&lt;/a&gt;, 50+ followers on &lt;a href="https://github.com/Anushka-codergirl"&gt;Github&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✨&lt;strong&gt;Quote of the day&lt;/strong&gt;✨&lt;br&gt;
“Your capacity to say ‘No’ determines your capacity to say ‘Yes’ to greater things.” ~ E. Stanley Jones&lt;/p&gt;

&lt;p&gt;⭐&lt;strong&gt;Lesson I learned&lt;/strong&gt;⭐&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explore -&amp;gt; Learn -&amp;gt; Win&lt;/li&gt;
&lt;li&gt;The best gift you can give yourself is knowledge&lt;/li&gt;
&lt;li&gt;Take care of your health &amp;amp; well-being&lt;/li&gt;
&lt;li&gt;Surround yourself with people who make you better&lt;/li&gt;
&lt;li&gt;Step out of your comfort zone&lt;/li&gt;
&lt;li&gt;Support others genuinely&lt;/li&gt;
&lt;li&gt;Life = Ups + Down&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I just want to say thanks to the tech community for all your support. You're all great.💜💖&lt;br&gt;
See you all in 2022.&lt;br&gt;
I’m excited about what 2022 will bring for me💯💯✨✨&lt;br&gt;
Bye-Bye 2021👋👋&lt;/p&gt;

</description>
      <category>yearinreview</category>
    </item>
    <item>
      <title>peviitor.ro - voluntar</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Fri, 31 Dec 2021 13:10:21 +0000</pubDate>
      <link>https://dev.to/sebiboga/peviitorro-voluntar-5hei</link>
      <guid>https://dev.to/sebiboga/peviitorro-voluntar-5hei</guid>
      <description>&lt;p&gt;Ca si in orice proiect OPEN SOURCE, totul se bazeaza pe voluntariat. Daca vrei sa contribui la acest motor de cautare - locuri de munca : &lt;a href="https://peviitor.ro/"&gt;https://peviitor.ro/&lt;/a&gt; , poti sa te inscri ca voluntar.&lt;br&gt;
Odata prezentata dorinta ta de a te oferi voluntar, noi nu o sa iti dam taskuri ci o sa te intrebam la ce te pricepi?&lt;/p&gt;

&lt;p&gt;Nici o problema sa nu-ti faci daca nu te pricepi la nimic, pentru ca voluntariatul inseamna in special dobandirea unor skilluri. Si daca nu te pricepi la ceva anume si vrei sa iti dezvolti un skill, noi te asteptam cu drag.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ce vei face ca si voluntar?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Avem pregatite mai multe directii, pe care bucurosi ti le prezentam in continuare. Asadar, unde te poti implica?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#interfata-utilizator-frontend"&gt;
  &lt;/a&gt;
  Interfata Utilizator (front-end)
&lt;/h4&gt;

&lt;p&gt;Pe parte de interfata utilizator iti vei dezvolta skillurile de programator (developer) si vei lucra cu tehnologiile: &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;, &lt;code&gt;JavaScript&lt;/code&gt;.&lt;br&gt;
Fiecare versiune are definite anumite functionalitati, iar partea de front-end va oferi utilizatorului accesul la aceste functionalitati.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tester-qa-qc-software-tester"&gt;
  &lt;/a&gt;
  Tester (QA, QC, Software tester)
&lt;/h4&gt;

&lt;p&gt;Inainte de a publica o versiune in productie avem nevoie ca produsul (motor de cautare) sa fie testat si aprobat.&lt;br&gt;
Partea de testare cuprinde atat partea de UI (front-end) cat si partea de backend, dar si datele (locurile de munca), partea de scraper cat si partea de automatizare a popularii indexului, schema din index si stabilitatea environment'urilor.&lt;br&gt;
Daca esti deja tester sau daca vrei sa iti testezi abilitatile de tester, poti sa te alaturi echipei si cu siguranta skillurile tale tehnice se vor imbunatati.&lt;/p&gt;

&lt;p&gt;Functional testing, Performance Testing, Security Testing, Database Testing sunt doar cateva directii care vor trebui acoperite si prin urmare aceste directii de dezvoltare a skilurilor te asteapta.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#programator-web-backend-developer"&gt;
  &lt;/a&gt;
  Programator web (Back-end developer)
&lt;/h4&gt;

&lt;p&gt;Partea de back-end este destul de complexa. Avem un wrapper peste index scris in PHP, apoi mai e si indexul care tehnic il avem implementat in Apache SOLR.&lt;br&gt;
Partea de HTTPS este asigurata de CloudFlare deci implicit avem si partea de CDN asigurata si deci ne lovim de discutii legate de CACHING. Codul este salvat in GitHUB deci te vei familiariza cu comenzile &lt;em&gt;git&lt;/em&gt;.&lt;br&gt;
Partea de back-end livreaza informatiile in format JSON spre front-end deci vorbim si de partea de integrare a celor doua mari componente ale sistemului.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#devops"&gt;
  &lt;/a&gt;
  DevOPS
&lt;/h4&gt;

&lt;p&gt;Partea de intretinere aplicatii in conditiile in care zilnic apar diferite atacuri cibernetice si se gasesc noi vulnerabilitati de securitate este un domeniu cunoscut in SDLC (software development lifecycle). Daca vrei sa te alaturi echipei si sa iti dezvolti partea de skilluri de devops, fi sigur ca avem suficiente provocari pentru tine. Avem multe procese automatizate insa ne dorim sa mai simplificam anumite procese, asa ca, hai in echipa si n-o sa te plictisesti, iti garantam.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#delivery-manager"&gt;
  &lt;/a&gt;
  Delivery manager
&lt;/h4&gt;

&lt;p&gt;Chiar daca nu vor fi taskuri clasice pentru acest rol, echipa care livreaza versiunile pe productie va fi acea echipa care se ocupa nu doar de proces dar si de momentele in care upgradam motorul de cautare de la o versiune la alta. Manual sau automatizat? E o decizie grea si va depinde si de ceilalti membri din echipa. Ce zici? Suna interesant? Hai cu noi si o sa descoperi ce inseamna grija fata de utilizatorul final.&lt;br&gt;
Rolul acesta implica si crearea si sincronizare echipelor astfel incat utilizatorul final sa fie deloc sau cat mai putin impactat de procesul intern de dezvoltare software.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#business-analyst"&gt;
  &lt;/a&gt;
  Business Analyst
&lt;/h4&gt;

&lt;p&gt;Partea de analiza de business ne lipseste cu desavarsire. Avem o viziune insa nu avem pe cineva asignat pentru taskurile de analiza, astfel aceste lucruri sunt acoperite partial de catre developeri (programatori) in discutii directe cu Product Ownerul.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#marketing"&gt;
  &lt;/a&gt;
  Marketing
&lt;/h4&gt;

&lt;p&gt;Pe partea de markeing avem un mare lapsus. Pe langa faptul ca proiectul nu este bugetat, deci bugetul de marketing tinde spre zero absolut, nici nu avem o persoana dedicata pentru a dezvolta un plan de marketing care sa fie implementat de catre voluntari.&lt;br&gt;
Singurele elemente de marketing in prezent sunt: platforma de LinkedIN pe care se publica articole scrise pe platforma dev.to, si foarte putine share-uri pe Facebook.&lt;br&gt;
Inca lipseste si o pagina Facebook sau Twitter unde sa incercam sa facem mai popular proiectul nostru.&lt;br&gt;
Daca vrei sa ajuti pe partea de Marketing, suntem bucurosi sa te avem in echipa.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#fundraiser"&gt;
  &lt;/a&gt;
  Fundraiser
&lt;/h4&gt;

&lt;p&gt;Clasicele departamente de fundraising aici nu prea se aplica deoarece nu suntem populari si inca nu avem pregatite nici mape de prezentare nici pachete. De altfel platforma peviitor.ro are intentia sa fie gratuita si sa ai acces la absolut toate functionalitatile fara sa fi limitat de cat ai contribuit.&lt;/p&gt;

&lt;p&gt;Totusi, daca sunt firme care vor sa sponsoizeze efortul nostru si care vor intelege necesitatea existentei unui motor de cautare, atunci noi va trebui sa fim pregatiti cu un contract de sponsorizare, contract de donatie sau alte documente de care au nevoie legal acele firme pentru a-si justifica si deduce cheltuiala. Echipa de fundraising va fi componenta a departamentului de Marketing si va lucra in stransa legatura pentru a genera documentele necesare.&lt;br&gt;
Desigur aceste initiative nu pot exista pana cand nu se finalizeaza infiintarea ONG-ului "OPORTUNITATI SI CARIERE" pentru care procesul este deja demarat.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pr-relatii-cu-publicul"&gt;
  &lt;/a&gt;
  PR (relatii cu publicul)
&lt;/h4&gt;

&lt;p&gt;Echipaa de voluntari, persoanele implicate in proiect cat si cei care utilizeaza motorul de cautare vor forma o comunitate. Aceasta comunitate trebuie gestionata de catre cineva. Nu avem o persoana in prezent care se ocupa doar de aceasta comunicare cu comunitatea si daca vrei sa te alaturi pe aceasta sectiune, avem cel putin un loc in echipa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#de-ce-sa-te-implici"&gt;
  &lt;/a&gt;
  De ce sa te implici?
&lt;/h2&gt;

&lt;p&gt;Voluntariatul este recunoscut in Romania. Anii de voluntariat se considera ani de vechime. Sigur ca daca ti-ai indeplinit taskurile in echipa vei primi o adeverinta de voluntar odata ce vom avea ONG-ul. &lt;br&gt;
Dincolo de acea adeverinta care este pur si simplu recunostinta noastra ca te-ai implicat in proiect, vei dobandi skilluri. &lt;br&gt;
Daca la locul de munca sustinerea colegilor te va urca sau te va cobori pe scara ierarhica, tot ceea ce ai acumulat ca si skilluri nu are cum sa ti le ia nimeni.&lt;/p&gt;

&lt;p&gt;Un gand la final de articol: "KNOWLEDGE IS THE NEW CURRENCY"&lt;br&gt;
Sigur ca inca nu avem o moneda bazata pe cunostinele tale dar indemnul este ca odata cu dobandirea de noi skill-uri, vei avea acces la mai multe oportunitati. Una dintre ele este sa activezi voluntar in echipa peviitor.ro&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cum-te-inscri-ca-volntar"&gt;
  &lt;/a&gt;
  Cum te inscri ca volntar?
&lt;/h3&gt;

&lt;p&gt;Simpu. Lasa un comentariu aici sau scrie-ne pe pagina comunitatii: &lt;a href="https://github.com/peviitor-ro/community/discussions/27"&gt;comunitate&lt;/a&gt;&lt;/p&gt;

</description>
      <category>searchengine</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 31st December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 31 Dec 2021 13:03:19 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-31st-december-2021-46c6</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-31st-december-2021-46c6</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-editorjs"&gt;
  &lt;/a&gt;
  1. Editor.js
&lt;/h3&gt;

&lt;p&gt;A block-styled editor with clean JSON output&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/codex-team"&gt;
        codex-team
      &lt;/a&gt; / &lt;a href="https://github.com/codex-team/editor.js"&gt;
        editor.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A block-styled editor with clean JSON output
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://editorjs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0912529fe93062b6065fa94317d12dc194667594dbf98edccba71edde63c66e/68747470733a2f2f636170656c6c612e706963732f37396365393436612d643633362d343163642d616139362d6433626335656366646530332e6a7067"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@editorjs/editorjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c2819900708c6c5a6734de653cdb7ee1d98c95708385f0e0b37bac58d4060b4/68747470733a2f2f666c61742e62616467656e2e6e65742f6e706d2f762f40656469746f726a732f656469746f726a733f69636f6e3d6e706d" alt=""&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@editorjs/editorjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9ef1de337144af97035067b04a7b4eab3a38bef82b5558163af25b7d8730b1d/68747470733a2f2f666c61742e62616467656e2e6e65742f62756e646c6570686f6269612f6d696e2f40656469746f726a732f656469746f726a733f636f6c6f723d6379616e" alt=""&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@editorjs/editorjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/72129a143e8cbc0ff156e692f379db469fd9e0af7d73dd568db92cb03a6a6fd8/68747470733a2f2f666c61742e62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f40656469746f726a732f656469746f726a733f636f6c6f723d677265656e" alt=""&gt;&lt;/a&gt;
&lt;a href="https://github.com/codex-team/editor.js#backers"&gt;&lt;img src="https://camo.githubusercontent.com/0e7de8e9c8abceb365a8b05b01dae03fe5e32c486a5adb0d71f07407fff9093d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f656469746f726a732f6261636b6572732f62616467652e737667" alt="Backers on Open Collective"&gt;&lt;/a&gt;
&lt;a href="https://github.com/codex-team/editor.js#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/91a0c19ec1671c27994dfc7c3905bfe5a5e39532a3c0b178811fa72e1afa6f33/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f656469746f726a732f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@editorjs/editorjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e24a52ceee28865d8967ae4c72729475d65d37844363e59893bb47fc738b9174/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f40656469746f726a732f656469746f726a733f7374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/codex-team/editor.js?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/278b57e54294b056dc89f6729791bf389db5faee6ca08ac2b2bc581028f84aef/68747470733a2f2f6261646765732e6769747465722e696d2f636f6465782d7465616d2f656469746f722e6a732e737667" alt="Join the chat at https://gitter.im/codex-team/editor.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;
&lt;a href="http://godban.github.io/browsers-support-badges/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QX1Mi1hE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png" alt="IE / Edge" width="24px" height="24px"&gt;&lt;/a&gt;&lt;br&gt;IE / Edge&lt;/th&gt;
&lt;th&gt;
&lt;a href="http://godban.github.io/browsers-support-badges/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_ezTa_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png" alt="Firefox" width="24px" height="24px"&gt;&lt;/a&gt;&lt;br&gt;Firefox&lt;/th&gt;
&lt;th&gt;
&lt;a href="http://godban.github.io/browsers-support-badges/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z4MD_56f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png" alt="Chrome" width="24px" height="24px"&gt;&lt;/a&gt;&lt;br&gt;Chrome&lt;/th&gt;
&lt;th&gt;
&lt;a href="http://godban.github.io/browsers-support-badges/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LenZXpZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png" alt="Safari" width="24px" height="24px"&gt;&lt;/a&gt;&lt;br&gt;Safari&lt;/th&gt;
&lt;th&gt;
&lt;a href="http://godban.github.io/browsers-support-badges/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZkPrMQH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari-ios/safari-ios_48x48.png" alt="iOS Safari" width="24px" height="24px"&gt;&lt;/a&gt;&lt;br&gt;iOS Safari&lt;/th&gt;
&lt;th&gt;
&lt;a href="http://godban.github.io/browsers-support-badges/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Blp14Lz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/alrra/browser-logos/master/src/opera/opera_48x48.png" alt="Opera" width="24px" height="24px"&gt;&lt;/a&gt;&lt;br&gt;Opera&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Edge 12+&lt;/td&gt;
&lt;td&gt;Firefox 18+&lt;/td&gt;
&lt;td&gt;Chrome 49+&lt;/td&gt;
&lt;td&gt;Safari 10+&lt;/td&gt;
&lt;td&gt;Safari 10+&lt;/td&gt;
&lt;td&gt;Opera 36+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
If you like a project 💗💗💗
&lt;/h2&gt;
&lt;p&gt;If you like Editor.js you can support project improvements and development of new features with a donation to our collective.&lt;/p&gt;
&lt;p&gt;👉  &lt;a href="https://opencollective.com/editorjs" rel="nofollow"&gt;https://opencollective.com/editorjs&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Sponsors&lt;/h3&gt;
&lt;p&gt;Support us by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/editorjs/contribute/sir-8679/checkout" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://humm.earth/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ab0947b131a60b835fd7c105cc2b1468bc819760b51760305d07767c262fc7f/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f68756d6d65617274682f326138343036612f6c6f676f2f3235362e706e67" width="64"&gt;&lt;/a&gt;
&lt;a href="https://tesen.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf601fbe6f09fa5d5c8315e48986886d81d5a6c31944f99aea3ba464441160b4/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f746573656e2d6d656469612d696e632f623930636636612f6c6f676f2f3235362e706e67" width="64"&gt;&lt;/a&gt;
&lt;a href="https://slid.cc/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c9cfd749e50fe1d4581c94dc491b46d1cfbef3fd62efa9162fe3e5fec11dccd/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f736c69645f7465616d2f666635363464372f6c6f676f2f3235362e706e67" width="64"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href="https://opencollective.com/editorjs/contribute/backer-8632/checkout" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/editorjs#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6e4f951ac1484312dccfaa03416523448c35f4613509a6b1d976283a49f189bd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f656469746f726a732f6261636b6572732e7376673f77696474683d383930"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4893ff4522e43eb09950e975bee10145216e373c228b847cc4f44f4f6f29f773/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f656469746f726a732f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365"&gt;&lt;img src="https://camo.githubusercontent.com/4893ff4522e43eb09950e975bee10145216e373c228b847cc4f44f4f6f29f773/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f656469746f726a732f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We really welcome new contributors. If you want to make some code with us, please take a look at the &lt;a href="https://github.com/codex-team/editor.js/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+task%22"&gt;Good First Tasks&lt;/a&gt;. You can write to us on &lt;code&gt;team@codex.so&lt;/code&gt; or via special &lt;a href="https://t.me/editorjsdev" rel="nofollow"&gt;Telegram chat&lt;/a&gt;, or any other way.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Please visit &lt;a href="https://editorjs.io" rel="nofollow"&gt;https://editorjs.io/&lt;/a&gt; to view all documentation articles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://editorjs.io/base-concepts" rel="nofollow"&gt;Base&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/codex-team/editor.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-purgecss"&gt;
  &lt;/a&gt;
  2. PurgeCSS
&lt;/h3&gt;

&lt;p&gt;PurgeCSS analyzes your content and your css files. Then it matches the selectors used in your files with the one in your content files. It removes unused selectors from your css, resulting in smaller css files.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/FullHuman"&gt;
        FullHuman
      &lt;/a&gt; / &lt;a href="https://github.com/FullHuman/purgecss"&gt;
        purgecss
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Remove unused CSS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PurgeCSS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/purgecss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2b856fe09b27dc773e16249f95185cf9fb68c34ef41e68d7a4fdf2c7df48ea8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f70757267656373733f7374796c653d666f722d7468652d6261646765" alt="npm"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/892445b4506aa679255ce1912c68ae539d070d4cc98f3f58cb78dadd920b2ea7/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f70757267656373733f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/892445b4506aa679255ce1912c68ae539d070d4cc98f3f58cb78dadd920b2ea7/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f70757267656373733f7374796c653d666f722d7468652d6261646765" alt="npm"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/72488e97c90c16e53150cc31c3ca23ccc5d1e20139b0e8358026725c47ed7d90/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f46756c6c48756d616e2f70757267656373733f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/72488e97c90c16e53150cc31c3ca23ccc5d1e20139b0e8358026725c47ed7d90/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f46756c6c48756d616e2f70757267656373733f7374796c653d666f722d7468652d6261646765" alt="GitHub"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/58149be2c067f79fe4a49eb20f3330747decc1fd8bd5b49b9b0b7cca3ff292ff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e6461626f742d656e61626c65642d2532333032346561343f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/58149be2c067f79fe4a49eb20f3330747decc1fd8bd5b49b9b0b7cca3ff292ff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e6461626f742d656e61626c65642d2532333032346561343f7374796c653d666f722d7468652d6261646765" alt="Dependabot"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c8e6f136a101186798db1c54aacaaa8aa26243f138015dc19654a9b34690f144/68747470733a2f2f692e696d6775722e636f6d2f55456955694a302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c8e6f136a101186798db1c54aacaaa8aa26243f138015dc19654a9b34690f144/68747470733a2f2f692e696d6775722e636f6d2f55456955694a302e706e67" height="200" width="200" alt="PurgeCSS logo"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
What is PurgeCSS?&lt;/h2&gt;
&lt;p&gt;When you are building a website, chances are that you are using a css framework like Bootstrap, Materializecss, Foundation, etc... But you will only use a small set of the framework and a lot of unused css styles will be included.&lt;/p&gt;
&lt;p&gt;This is where PurgeCSS comes into play. PurgeCSS analyzes your content and your css files. Then it matches the selectors used in your files with the one in your content files. It removes unused selectors from your css, resulting in smaller css files.&lt;/p&gt;
&lt;h2&gt;
Sponsors 🥰
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fy6vPjxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars0.githubusercontent.com/u/67109815%3Fv%3D4" height="85"&gt;&lt;/a&gt;
&lt;a href="https://vertistudio.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3i_MTjxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/6852555%3F%26v%3D4" height="85"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;You can find the PurgeCSS documentation on &lt;a href="https://purgecss.com" rel="nofollow"&gt;this website&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Table of Contents&lt;/h3&gt;
&lt;h4&gt;
PurgeCSS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/CLI.html" rel="nofollow"&gt;Command Line Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/api.html" rel="nofollow"&gt;Programmatic API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/safelisting.html" rel="nofollow"&gt;Safelisting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/extractors.html" rel="nofollow"&gt;Extractors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/comparison.html" rel="nofollow"&gt;Comparison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Plugins&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/plugins/postcss.html" rel="nofollow"&gt;PostCSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/plugins/webpack.html" rel="nofollow"&gt;Webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/plugins/gulp.html" rel="nofollow"&gt;Gulp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/plugins/grunt.html" rel="nofollow"&gt;Grunt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/plugins/gatsby.html" rel="nofollow"&gt;Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Guides&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/guides/vue.html" rel="nofollow"&gt;Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/guides/nuxt.html" rel="nofollow"&gt;Nuxt.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/guides/react.html" rel="nofollow"&gt;React.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/guides/next.html" rel="nofollow"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purgecss.com/guides/razzle.html" rel="nofollow"&gt;Razzle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;h4&gt;
Installation&lt;/h4&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npm i --save-dev purgecss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;PurgeCSS&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"purgecss"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;purgeCSSResults&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;PurgeCSS&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;purge&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/FullHuman/purgecss"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-wouter"&gt;
  &lt;/a&gt;
  3. Wouter
&lt;/h3&gt;

&lt;p&gt;A minimalist-friendly ~1.5KB routing for React and Preact. Nothing else but Hooks.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/molefrog"&gt;
        molefrog
      &lt;/a&gt; / &lt;a href="https://github.com/molefrog/wouter"&gt;
        wouter
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🥢 A minimalist-friendly ~1.5KB routing for React and Preact. Nothing else but HOOKS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/molefrog/wouterassets/logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HbKtqFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/molefrog/wouterassets/logo.svg" width="80" alt="Wouter — a super-tiny React router (logo by Katya Simacheva)"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
  &lt;a href="https://npmjs.org/package/wouter" rel="nofollow"&gt;
    &lt;img alt="npm" src="https://camo.githubusercontent.com/001f7051b3e4f939ce4b3bec2e9021153cfa7f1383cc818dbcccb7f8d1962a07/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f776f757465722e7376673f636f6c6f723d626c61636b266c6162656c436f6c6f723d383838"&gt;
  &lt;/a&gt;
  &lt;a href="https://travis-ci.org/molefrog/wouter" rel="nofollow"&gt;
    &lt;img alt="CI" src="https://camo.githubusercontent.com/5508fd498134d7c7540a073a8e602c49a9fa18c137845f96f2376044c00ad0a9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d6f6c6566726f672f776f757465722e7376673f636f6c6f723d626c61636b266c6162656c436f6c6f723d383838"&gt;
  &lt;/a&gt;
  &lt;a href="https://codecov.io/gh/molefrog/wouter" rel="nofollow"&gt;
    &lt;img alt="Coverage" src="https://camo.githubusercontent.com/0ab1bd25dc29351a908931192df7628feb53dcc34f07ecc15b58100672f0d765/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6d6f6c6566726f672f776f757465722e7376673f636f6c6f723d626c61636b266c6162656c436f6c6f723d383838"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/wouter" rel="nofollow"&gt;
    &lt;img alt="Coverage" src="https://camo.githubusercontent.com/e255084306197a48cd424d394de9d0bddc7d78bcd8d1ce2535abaeac6153dd7f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f776f757465722e7376673f636f6c6f723d626c61636b266c6162656c436f6c6f723d383838"&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;b&gt;wouter&lt;/b&gt; is a tiny router for modern React and Preact apps that relies on Hooks. &lt;br&gt;
  A router you wanted so bad in your project!&lt;br&gt;
&lt;/div&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/molefrog/wouterassets/wouter.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0iE5QIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/molefrog/wouterassets/wouter.svg" width="250" alt="by Katya Simacheva"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zero dependency, only &lt;strong&gt;1.36 KB&lt;/strong&gt; gzipped vs 11KB &lt;a href="https://github.com/ReactTraining/react-router"&gt;React Router&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Supports both &lt;strong&gt;React&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://preactjs.com/" rel="nofollow"&gt;Preact&lt;/a&gt;&lt;/strong&gt;! Read &lt;em&gt;&lt;a href="https://github.com/molefrog/wouter#preact-support"&gt;"Preact support" section&lt;/a&gt;&lt;/em&gt; for more details.&lt;/li&gt;
&lt;li&gt;No top-level &lt;code&gt;&amp;lt;Router /&amp;gt;&lt;/code&gt; component, it is &lt;strong&gt;fully optional&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Mimics &lt;a href="https://github.com/ReactTraining/react-router"&gt;React Router&lt;/a&gt;'s best practices by providing familiar
&lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#route-pathpattern-"&gt;&lt;code&gt;Route&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#link-hrefpath-"&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#switch-"&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#redirect-topath-"&gt;&lt;code&gt;Redirect&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; components.&lt;/li&gt;
&lt;li&gt;Has hook-based API for more granular control over routing (like animations): &lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#uselocation-hook-working-with-the-history"&gt;&lt;code&gt;useLocation&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#useroute-the-power-of-hooks"&gt;&lt;code&gt;useRoute&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://github.com/molefrog/wouter#userouter-accessing-the-router-object"&gt;&lt;code&gt;useRouter&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
developers 💖 wouter&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;... I love Wouter. It’s tiny, fully embraces hooks, and has an intuitive and barebones API. I can accomplish everything I could with react-router
with Wouter, and it just feels &lt;strong&gt;more minimalist while not being inconvenient.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@mmiller42/an-exhaustive-react-guide-for-2020-7859f0bddc56" rel="nofollow"&gt;&lt;strong&gt;Matt Miller&lt;/strong&gt;, &lt;em&gt;An exhaustive React ecosystem for 2020&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wouter provides a simple API that many developers and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/molefrog/wouter"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-bundlesize"&gt;
  &lt;/a&gt;
  4. bundlesize
&lt;/h3&gt;

&lt;p&gt;Keep your bundle size in check&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/siddharthkp"&gt;
        siddharthkp
      &lt;/a&gt; / &lt;a href="https://github.com/siddharthkp/bundlesize"&gt;
        bundlesize
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Keep your bundle size in check
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fffe3e9d806369ae945912580944190a48a94141dc108e4d06427fc129bb3545/68747470733a2f2f63646e2e7261776769742e636f6d2f7369646468617274686b702f62756e646c6573697a652f6d61737465722f6172742f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/fffe3e9d806369ae945912580944190a48a94141dc108e4d06427fc129bb3545/68747470733a2f2f63646e2e7261776769742e636f6d2f7369646468617274686b702f62756e646c6573697a652f6d61737465722f6172742f6c6f676f2e706e67" height="200px"&gt;&lt;/a&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;b&gt;Keep your bundle size in check&lt;/b&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://travis-ci.org/siddharthkp/bundlesize" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/325af101286faa573547820f0906ce68c13d49d0a483a25dd9ade1c75fc3100d/68747470733a2f2f7472617669732d63692e6f72672f7369646468617274686b702f62756e646c6573697a652e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/bundlesize" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f59ce9cf59c08ec34c775c6710c15cb3a0b3394182dff372f8c5a94a98bb0cb9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f62756e646c6573697a652e737667" alt="NPM Version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/bundlesize" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7ff21660e8f40d28cea109d3ba39f3414b7879c8922303d1562ff003561ef91b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f62756e646c6573697a652e7376673f7374796c653d666c6174" alt="NPM Downloads"&gt;&lt;/a&gt;
 &lt;/p&gt;
&lt;h4&gt;
Setup&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install bundlesize --save-dev
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

yarn add bundlesize --dev&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4&gt;
Usage&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Add it to your scripts in &lt;code&gt;package.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-ent"&gt;"scripts"&lt;/span&gt;: {
  &lt;span class="pl-ent"&gt;"test"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bundlesize&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Or you can use it with &lt;code&gt;npx&lt;/code&gt; from &lt;a href="https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b" rel="nofollow"&gt;NPM 5.2+&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npx bundlesize&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4&gt;
Configuration&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;bundlesize&lt;/code&gt; accepts an array of files to check.&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;[
  {
    &lt;span class="pl-ent"&gt;"path"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./build/vendor.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-ent"&gt;"maxSize"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;30 kB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  {
    &lt;span class="pl-ent"&gt;"path"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./build/chunk-*.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-ent"&gt;"maxSize"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10 kB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
]&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;You can keep this array either in&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-ent"&gt;"name"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your cool library&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-ent"&gt;"version"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-ent"&gt;"bundlesize"&lt;/span&gt;: [
    {
      &lt;span class="pl-ent"&gt;"path"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./build/vendor.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-ent"&gt;"maxSize"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3 kB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  ]
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;or in a separate file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bundlesize.config.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Format:&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-ent"&gt;"files"&lt;/span&gt;: [
    {
      &lt;span class="pl-ent"&gt;"path"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./dist.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;"maxSize"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/siddharthkp/bundlesize"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-mindar"&gt;
  &lt;/a&gt;
  5. MindAR
&lt;/h3&gt;

&lt;p&gt;Web Augmented Reality. Natural feature tracking. Image targets. Tensorflow.js&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hiukim"&gt;
        hiukim
      &lt;/a&gt; / &lt;a href="https://github.com/hiukim/mind-ar-js"&gt;
        mind-ar-js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Web Augmented Reality. Natural feature tracking. Image targets. Tensorflow.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
MindAR&lt;/h1&gt;
&lt;p&gt;For location-based AR and marker-based AR, checkout AR.js &lt;a href="https://github.com/AR-js-org/AR.js"&gt;https://github.com/AR-js-org/AR.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1afe41bfae886e211d2b537c6af8737c2e109736ef97899bd2dc3e92e6a8e290/68747470733a2f2f6869756b696d2e6769746875622e696f2f6d696e642d61722d6a732d646f632f6173736574732f696d616765732f6d756c74692d746172676574732d64656d6f2d38623566633836386636623038343761393831386538626630626132633163332e676966"&gt;&lt;img src="https://camo.githubusercontent.com/1afe41bfae886e211d2b537c6af8737c2e109736ef97899bd2dc3e92e6a8e290/68747470733a2f2f6869756b696d2e6769746875622e696f2f6d696e642d61722d6a732d646f632f6173736574732f696d616765732f6d756c74692d746172676574732d64656d6f2d38623566633836386636623038343761393831386538626630626132633163332e676966" height="250"&gt;&lt;/a&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3e3f8346b50aad6c46f2b02c520bea6272ed50452b7ed0ffbc8ada59cde43af8/68747470733a2f2f6869756b696d2e6769746875622e696f2f6d696e642d61722d6a732d646f632f6173736574732f696d616765732f696e7465726163746976652d64656d6f2d31616233343861333831636264383038663464353263383735303532346431312e676966"&gt;&lt;img src="https://camo.githubusercontent.com/3e3f8346b50aad6c46f2b02c520bea6272ed50452b7ed0ffbc8ada59cde43af8/68747470733a2f2f6869756b696d2e6769746875622e696f2f6d696e642d61722d6a732d646f632f6173736574732f696d616765732f696e7465726163746976652d64656d6f2d31616233343861333831636264383038663464353263383735303532346431312e676966" height="250"&gt;&lt;/a&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e11e9cbff75253ac13c0f89e66d97f7d457b8bef49df836f0d3b7398006eeba1/68747470733a2f2f6869756b696d2e6769746875622e696f2f6d696e642d61722d6a732d646f632f6173736574732f696d616765732f666163652d7472796f6e2d64656d6f2d31653334333366663164643839373935643563316233383537373861396461382e676966"&gt;&lt;img src="https://camo.githubusercontent.com/e11e9cbff75253ac13c0f89e66d97f7d457b8bef49df836f0d3b7398006eeba1/68747470733a2f2f6869756b696d2e6769746875622e696f2f6d696e642d61722d6a732d646f632f6173736574732f696d616765732f666163652d7472796f6e2d64656d6f2d31653334333366663164643839373935643563316233383537373861396461382e676966" height="250"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MindAR is a lightweight library for web augmented reality. Highlighted features include:&lt;/p&gt;
&lt;p&gt;⭐ Support Image tracking and Face tracking&lt;/p&gt;
&lt;p&gt;⭐ Written in pure javascript, end-to-end from the underlying computer vision engine to frontend&lt;/p&gt;
&lt;p&gt;⭐ Utilize gpu (through webgl) and web worker for performance&lt;/p&gt;
&lt;p&gt;⭐ Developer friendly. Easy to setup. With AFRAME extension, you can get your app starts with only 10 lines of codes&lt;/p&gt;
&lt;h1&gt;
Web AR Development Course - Fund Raising&lt;/h1&gt;
&lt;p&gt;To raise fund for the continuous development and support of the MindAR Library, I've created a WebAR development course. It's a very comprehensive guide to Web AR development, not limited to MindAR. Check it out if you are interested:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.udemy.com/course/introduction-to-web-ar-development/?referralCode=D2565F4CA6D767F30D61" rel="nofollow"&gt;https://www.udemy.com/course/introduction-to-web-ar-development/?referralCode=D2565F4CA6D767F30D61&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/459126/141425015-f5fe2912-b26d-4366-8952-5866a072fb34.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvreYq-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/459126/141425015-f5fe2912-b26d-4366-8952-5866a072fb34.jpg" alt="course-banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Managed Solution - Pictarize&lt;/h1&gt;
&lt;p&gt;This opensource project is under MIT, so you are free to use however you want. There is also a hosted platform built on top of…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hiukim/mind-ar-js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-snap-page"&gt;
  &lt;/a&gt;
  6. Snap page
&lt;/h3&gt;

&lt;p&gt;Snap page when user stops scrolling, with a customizable configuration and a consistent cross browser behaviour&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lucafalasco"&gt;
        lucafalasco
      &lt;/a&gt; / &lt;a href="https://github.com/lucafalasco/scroll-snap"&gt;
        scroll-snap
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ↯ Snap page when user stops scrolling, with a customizable configuration and a consistent cross browser behaviour
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/lucafalasco/scroll-snap/master/logo.svg?sanitize=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3Yw7s2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lucafalasco/scroll-snap/master/logo.svg%3Fsanitize%3Dtrue" width="180px"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
&lt;code&gt;scroll-snap&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/scroll-snap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/38415a2ff68dd0faf9db50e172270de7456b207a5e5b21e32738ece555d8b826/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d7363726f6c6c2d2d736e61702d7265642e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6e706d" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/scroll-snap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c1c16f08768e53a2361cc5c80f23bcee1f9339311056891eb57e1c6e3264896/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7363726f6c6c2d736e61702e7376673f7374796c653d666f722d7468652d6261646765266c6162656c" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/scroll-snap" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd55037a3f9975b27d7cfb4c7d88e1390669b70b22f5664e2aab397a74e28010/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7363726f6c6c2d736e61702e7376673f7374796c653d666f722d7468652d6261646765" alt="npm downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Snap page when user stops scrolling, basically implements &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap" rel="nofollow"&gt;CSS Scroll Snap&lt;/a&gt;, adding a customizable configuration and a consistent cross browser behaviour.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Works in all modern browsers&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;requestAnimationFrame&lt;/code&gt; for 60fps&lt;/li&gt;
&lt;li&gt;Customizable settings (including easing functions)&lt;/li&gt;
&lt;li&gt;No additional dependencies&lt;/li&gt;
&lt;li&gt;No extra stylesheet&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add scroll-snap&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can also grab a pre-built version from &lt;a href="https://unpkg.com/scroll-snap/dist/index.js" rel="nofollow"&gt;unpkg&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-en"&gt;createScrollSnap&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;element&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;settings&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;callback&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Arguments&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;element: HTMLElement&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;The HTML DOM Element to attach the scroll listener to.&lt;/p&gt;
&lt;h3&gt;
&lt;code&gt;settings: Settings&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;A configuraiton object consisting of one or more of the following keys:&lt;/p&gt;
&lt;h4&gt;
&lt;code&gt;snapDestinationX: string | number&lt;/code&gt;
&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Snap destination for x axis, should be a valid css value expressed as &lt;code&gt;px | % | vw | vh&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
&lt;code&gt;snapDestinationY: string | number&lt;/code&gt;
&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Snap destination for y axis, should be a valid css value expressed as &lt;code&gt;px | % | vw | vh&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
&lt;code&gt;timeout: number&lt;/code&gt;
&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Time in ms after which scrolling is…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lucafalasco/scroll-snap"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-dependency-cruiser"&gt;
  &lt;/a&gt;
  7. Dependency cruiser
&lt;/h3&gt;

&lt;p&gt;Validate and visualize dependencies. Your rules. JavaScript, TypeScript, CoffeeScript. ES6, CommonJS, AMD.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sverweij"&gt;
        sverweij
      &lt;/a&gt; / &lt;a href="https://github.com/sverweij/dependency-cruiser"&gt;
        dependency-cruiser
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Validate and visualize dependencies. Your rules. JavaScript, TypeScript, CoffeeScript. ES6, CommonJS, AMD.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dependency cruiser &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/ZKH-Dependency-recolored-160.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Wj3qG5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/ZKH-Dependency-recolored-160.png" alt="Dependency cruiser"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Validate and visualise dependencies. With your rules.&lt;/em&gt; JavaScript. TypeScript. CoffeeScript. ES6, CommonJS, AMD.&lt;/p&gt;
&lt;h2&gt;
What's this do?&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/sample-dot-output.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tWF91gGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/sample-dot-output.png" alt="Snazzy dot output to whet your appetite"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This runs through the dependencies in any JavaScript, TypeScript, LiveScript or CoffeeScript project and ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;... &lt;strong&gt;validates&lt;/strong&gt; them against (your own) &lt;a href="https://github.com/sverweij/dependency-cruiser./doc/rules-reference.md"&gt;rules&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;... &lt;strong&gt;reports&lt;/strong&gt; violated rules
&lt;ul&gt;
&lt;li&gt;in text (for your builds)&lt;/li&gt;
&lt;li&gt;in graphics (for your eyeballs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a side effect it can generate &lt;a href="https://github.com/sverweij/dependency-cruiser./doc/real-world-samples.md"&gt;&lt;strong&gt;cool dependency graphs&lt;/strong&gt;&lt;/a&gt;
you can stick on the wall to impress your grandma.&lt;/p&gt;
&lt;h2&gt;
How do I use it?&lt;/h2&gt;
&lt;h3&gt;
Install it&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;npm install --save-dev dependency-cruiser&lt;/code&gt; to use it as a validator in your project (recommended) or...&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm install --global dependency-cruiser&lt;/code&gt; if you just want to inspect multiple projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Show stuff to your grandma&lt;/h3&gt;
&lt;p&gt;To create a graph of the dependencies in your src folder, you'd run dependency
cruiser with output type &lt;code&gt;dot&lt;/code&gt; and run &lt;em&gt;GraphViz dot&lt;/em&gt; on the result. In
a one liner:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;depcruise --include-only &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;^src&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --output-type dot&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sverweij/dependency-cruiser"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-react-rich-text-editor"&gt;
  &lt;/a&gt;
  8. React Rich Text Editor
&lt;/h3&gt;

&lt;p&gt;Pure React rich text WYSIWYG editor based on draft-js.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sstur"&gt;
        sstur
      &lt;/a&gt; / &lt;a href="https://github.com/sstur/react-rte"&gt;
        react-rte
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Pure React rich text WYSIWYG editor based on draft-js.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Rich Text Editor&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/42bba0d3a92a7464b1e8b2d05327e2fee73029ff0d5156f19d922b34173e6733/68747470733a2f2f7472617669732d63692e6f72672f73737475722f72656163742d7274652e7376673f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/42bba0d3a92a7464b1e8b2d05327e2fee73029ff0d5156f19d922b34173e6733/68747470733a2f2f7472617669732d63692e6f72672f73737475722f72656163742d7274652e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a UI component built completely in React that is meant to be a full-featured textarea replacement similar to &lt;a href="http://ckeditor.com/" rel="nofollow"&gt;CKEditor&lt;/a&gt;, &lt;a href="https://www.tinymce.com/" rel="nofollow"&gt;TinyMCE&lt;/a&gt; and other &lt;a href="https://www.google.com/search?q=web+based+rich+text+editor" rel="nofollow"&gt;rich text "WYSIWYG" editors&lt;/a&gt;. It's based on the excellent, open source &lt;a href="https://facebook.github.io/draft-js/" rel="nofollow"&gt;Draft.js&lt;/a&gt; from Facebook which is performant and production-tested.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;Try the editor here: &lt;a href="https://react-rte.org/demo" rel="nofollow"&gt;react-rte.org/demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://react-rte.org/demo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3baef438191e85bffcb28da5a694a6e1a8453a047231ff7d69d363ec7c6b82f5/68747470733a2f2f75636173736574732e626c6f622e636f72652e77696e646f77732e6e65742f75706c6f6164732f7274652e706e67" alt="Screenshot 1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;$ npm install --save react-rte
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;RichTextEditor&lt;/code&gt; is the main editor component. It is comprised of the Draft.js &lt;code&gt;&amp;lt;Editor&amp;gt;&lt;/code&gt;, some UI components (e.g. toolbar) and some helpful abstractions around getting and setting content with HTML/Markdown.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RichTextEditor&lt;/code&gt; is designed to be used like a &lt;code&gt;textarea&lt;/code&gt; except that instead of &lt;code&gt;value&lt;/code&gt; being a string, it is an object with &lt;code&gt;toString&lt;/code&gt; on it. Creating a &lt;code&gt;value&lt;/code&gt; from a string is also easy using &lt;code&gt;createValueFromString(markup, 'html')&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
Browser Compatibility&lt;/h3&gt;
&lt;p&gt;The scripts are transpiled by Babel to ES6. Additionally, at least one of this package's dependencies does not…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sstur/react-rte"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-changesets"&gt;
  &lt;/a&gt;
  9. Changesets
&lt;/h3&gt;

&lt;p&gt;A way to manage your versioning and changelogs with a focus on monorepos&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/changesets"&gt;
        changesets
      &lt;/a&gt; / &lt;a href="https://github.com/changesets/changesets"&gt;
        changesets
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🦋       A way to manage your versioning and changelogs with a focus on monorepos
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/changesets/changesets./assets/images/changesets-banner-light.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oUnG-sxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/changesets/changesets./assets/images/changesets-banner-light.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  A tool to manage versioning and changelogs &lt;br&gt;
  with a focus on multi-package repositories
&lt;/p&gt;



&lt;p&gt;&lt;a href="https://changelogs.xyz/@changesets/cli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/725f73cb696cad59931597d314fb26f7c82b43f2fcdfc64b5c8ca6350a94601b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6368616e67656c6f67732e78797a2d4578706c6f72652532304368616e67656c6f672d627269676874677265656e" alt="View changelog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;changesets&lt;/code&gt; workflow is designed to help when people are making changes, all the way through to publishing. It lets contributors declare how their changes should be released, then we automate updating package versions, and changelogs, and publishing new versions of packages based on the provided information.&lt;/p&gt;

&lt;p&gt;Changesets has a focus on solving these problems for multi-package repositories, and keeps packages that rely on each other within the multi-package repository up-to-date, as well as making it easy to make changes to groups of packages.&lt;/p&gt;

&lt;h2&gt;
How do we do that?&lt;/h2&gt;

&lt;p&gt;A &lt;code&gt;changeset&lt;/code&gt; is an intent to release a set of packages at particular &lt;a href="https://semver.org/" rel="nofollow"&gt;semver bump types&lt;/a&gt; with a summary of the changes made.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;@changesets/cli&lt;/strong&gt; package allows you to write &lt;code&gt;changeset&lt;/code&gt; files as you make changes, then combine any number of changesets into a release, that flattens the…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/changesets/changesets"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#10-react-table"&gt;
  &lt;/a&gt;
  10. React Table
&lt;/h3&gt;

&lt;p&gt;Hooks for building fast and extendable tables and datagrids for React&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tannerlinsley"&gt;
        tannerlinsley
      &lt;/a&gt; / &lt;a href="https://github.com/tannerlinsley/react-table"&gt;
        react-table
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ⚛️ Hooks for building fast and extendable tables and datagrids for React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/tannerlinsley/react-table/raw/master/media/repo-dark.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TXzKZU5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/tannerlinsley/react-table/raw/master/media/repo-dark.png" alt="React Table Header"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hooks for building &lt;strong&gt;lightweight, fast and extendable datagrids&lt;/strong&gt; for React&lt;/p&gt;
&lt;a href="https://twitter.com/intent/tweet?button_hashtag=TanStack" rel="nofollow"&gt;
  &lt;img alt="#TanStack" src="https://camo.githubusercontent.com/ba0077873e9b4d7fd47bd08c733c0df2ced44df61d15815c77a6c0dd5e4d2914/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f636f6c6f723d253233303861306539266c6162656c3d25323354616e537461636b267374796c653d736f6369616c2675726c3d6874747073253341253246253246747769747465722e636f6d253246696e74656e742532467477656574253346627574746f6e5f6861736874616725334454616e537461636b"&gt;
&lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-table/actions?table=workflow%3A%22react-table+tests%22"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bf82pj7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/tannerlinsley/react-table/workflows/react-table%2520tests/badge.svg"&gt;
&lt;/a&gt;&lt;a href="https://npmjs.com/package/react-table" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/67f153b9a112bd7995f7955c5100b62c6a34e3062943d19eaab5051910342ea5/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d7461626c652e737667"&gt;
&lt;/a&gt;&lt;a href="https://bundlephobia.com/result?p=react-table@latest" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/1f9890a4a1440afa69f174eff063f9e02bce445f92b972814d94bf0bcc83f8aa/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d7461626c65406c6174657374"&gt;
&lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-table#badge"&gt;
    &lt;img alt="semantic-release" src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667"&gt;
  &lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-table/discussions"&gt;
  &lt;img alt="Join the discussion on Github" src="https://camo.githubusercontent.com/cfdb5767030150538f91d34959d55e5f2908ed13d9e11f9170a1c0d54857a336/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f47697468756225323044697363757373696f6e73253230253236253230537570706f72742d436861742532306e6f77212d626c7565"&gt;
&lt;/a&gt;&lt;a href="https://github.com/tannerlinsley/react-table"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/83daff6a6728ffed371050ef2c3a4a081de34cde6cb74d6757a8c7e8a956a7ab/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f74616e6e65726c696e736c65792f72656163742d7461626c652e7376673f7374796c653d736f6369616c266c6162656c3d53746172"&gt;
&lt;/a&gt;&lt;a href="https://twitter.com/tannerlinsley" rel="nofollow"&gt;
  &lt;img alt="" src="https://camo.githubusercontent.com/3011d1635f23d7c569b7911e866c1cd7a4d5356e0e4707feb2a841dbaa61a5d4/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f74616e6e65726c696e736c65792e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77"&gt;
&lt;/a&gt;
&lt;p&gt;Enjoy this library? Try them all! &lt;a href="https://github.com/tannerlinsley/react-query"&gt;React Query&lt;/a&gt;, &lt;a href="https://github.com/tannerlinsley/react-form"&gt;React Form&lt;/a&gt;, &lt;a href="https://github.com/tannerlinsley/react-charts"&gt;React Charts&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Visit &lt;a href="https://react-table.tanstack.com" rel="nofollow"&gt;react-table.tanstack.com&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt;
&lt;h2&gt;
Quick Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Lightweight (5kb - 14kb+ depending on features used and tree-shaking)&lt;/li&gt;
&lt;li&gt;Headless (100% customizable, Bring-your-own-UI)&lt;/li&gt;
&lt;li&gt;Auto out of the box, fully controllable API&lt;/li&gt;
&lt;li&gt;Sorting (Multi and Stable)&lt;/li&gt;
&lt;li&gt;Filters&lt;/li&gt;
&lt;li&gt;Pivoting &amp;amp; Aggregation&lt;/li&gt;
&lt;li&gt;Row Selection&lt;/li&gt;
&lt;li&gt;Row Expansion&lt;/li&gt;
&lt;li&gt;Column Ordering&lt;/li&gt;
&lt;li&gt;Animatable&lt;/li&gt;
&lt;li&gt;Virtualizable&lt;/li&gt;
&lt;li&gt;Resizable&lt;/li&gt;
&lt;li&gt;Server-side/controlled data/state&lt;/li&gt;
&lt;li&gt;Extensible via hook-based plugin system&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a href="https://github.com/sponsors/tannerlinsley/"&gt;Become a Sponsor&lt;/a&gt;
&lt;/h3&gt;
&lt;h2&gt;
Previous Versions&lt;/h2&gt;
&lt;h3&gt;
Version 6&lt;/h3&gt;
&lt;p&gt;v6 is a great library and while it is still available to install and use, I am no longer offering any long-term support for it. If you intend to keep using v6, I recommend maintaining your own fork of the library and keeping it up to date for your version of React.&lt;/p&gt;
&lt;h4&gt;
Where are the docs for the older v6 version?&lt;/h4&gt;
&lt;p&gt;Please &lt;a href="https://github.com/tannerlinsley/react-table/tree/v6"&gt;visit&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tannerlinsley/react-table"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;Every Programmer Should Know&lt;/a&gt; +1,585 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +1,222 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +1,219 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +1,196 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/awesome-selfhosted/awesome-selfhosted"&gt;Awesome Self Hostsed&lt;/a&gt; +1,141stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +26%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vitest-dev/vitest"&gt;Vitest&lt;/a&gt; +21%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DTStack/molecule"&gt;Molecule&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeaVerou/md-block"&gt;md-block&lt;/a&gt; +19%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cahilfoley/react-snowfall"&gt;React Snowfall&lt;/a&gt; +14%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +6,991 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,553 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;Every Programmer Should Know&lt;/a&gt; +4,522 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,395 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +4,253 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +394%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +150%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sergiodxa/remix-auth"&gt;Remix Auth&lt;/a&gt; +91%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cahilfoley/react-snowfall"&gt;React Snowfall&lt;/a&gt; +87%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +85%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Deploy .NET 6 Web Application With GitHub Actions To Self-Hosted Linux Machine (Virtual Private Server, Raspberry Pi, etc.)</title>
      <author>Amel Spahić</author>
      <pubDate>Fri, 31 Dec 2021 12:37:38 +0000</pubDate>
      <link>https://dev.to/amelspahic/deploy-net-6-application-with-github-actions-to-self-hosted-linux-machine-virtual-private-server-raspberry-pi-etc-2547</link>
      <guid>https://dev.to/amelspahic/deploy-net-6-application-with-github-actions-to-self-hosted-linux-machine-virtual-private-server-raspberry-pi-etc-2547</guid>
      <description>&lt;p&gt;Let's suppose you are that kind of developer that holds code on GitHub but deploys his fantastic private application manually to some Linux based Virtual Private Server (VPS) you pay $5/month, or to home Raspberry Pi (because why not). You are not alone; a lot of us do that. There is no issue there, but it can be a much better experience.&lt;/p&gt;

&lt;p&gt;More advanced users have some script to build to the output folder and then copy it to the server using  Secure File Transfer Protocol (SFTP). Not bad, but still not perfect. Different branches - different rules (unless you push everything directly to the &lt;strong&gt;main/master&lt;/strong&gt; branch. I won't tell anyone, but I know you, we will do the same here).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  GitHub Actions
&lt;/h2&gt;

&lt;p&gt;GitHub Actions are a new type of CI/CD (Continuous Integration, Delivery) server that has been released by GitHub recently. They integrate closely with GitHub, and the GitHub repository can link GitHub Actions, so they will only run when the GitHub repo is updated.&lt;/p&gt;

&lt;p&gt;Running applications on self-hosted runners provides more control over the hardware, operating system, and software tools than GitHub-hosted runners. You may use self-hosted runners to build a customised hardware configuration with greater processing power or memory to execute bigger jobs, install programs available on your local network, and select an operating system that GitHub-hosted runners do not offer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-process"&gt;
  &lt;/a&gt;
  The process
&lt;/h2&gt;

&lt;p&gt;I will be using Raspberry Pi with Ubuntu Server 20.04.3 LTS, but the same process we can perform on many other Linux distributions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#foreword"&gt;
  &lt;/a&gt;
  Foreword
&lt;/h2&gt;

&lt;p&gt;If your application uses a local database to persist the data, that part is not covered here, but you can do it independently of this tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-installing-net-60-sdk"&gt;
  &lt;/a&gt;
  Step 1 - Installing .NET 6.0 SDK
&lt;/h2&gt;

&lt;p&gt;There are always two parts of .NET applications - &lt;strong&gt;building&lt;/strong&gt; and &lt;strong&gt;running ** them. That's why when you visit  &lt;a href="https://dotnet.microsoft.com/en-us/download/dotnet/6.0"&gt;Download .NET 6.0 (Linux, macOS, and Windows)&lt;/a&gt;, you will see at least two things - **SDK&lt;/strong&gt; and &lt;strong&gt;Runtime&lt;/strong&gt;. The former includes everything you need to &lt;strong&gt;build and run&lt;/strong&gt; .NET Core applications, while the latter includes everything just to &lt;strong&gt;run&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;We will be &lt;strong&gt;building&lt;/strong&gt; and &lt;strong&gt;restoring&lt;/strong&gt; packages for our application on our machine, so we need to install the &lt;strong&gt;SDK&lt;/strong&gt; part. It also includes the &lt;strong&gt;Runtime&lt;/strong&gt;, so we don't need to install it separately.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;From Microsoft documentation: Package manager installs are only supported on the x64 architecture. Other architectures, such as ARM, must install .NET by some other means such as with Snap, an installer script, or a manual binary installation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#case-1-cpu-on-your-machine-is-x64"&gt;
  &lt;/a&gt;
  Case 1 - CPU on your machine IS x64
&lt;/h3&gt;

&lt;p&gt;If you have Linux operating system besides Ubuntu 20.04 LTS, you should visit &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/install/linux"&gt;Install .NET on Linux Distributions | Microsoft Docs&lt;/a&gt; documentation and act accordingly. Installing the SDK on Ubuntu 20.04 LTS &lt;strong&gt;on x64 architecture&lt;/strong&gt; will need:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb &lt;span class="nt"&gt;-O&lt;/span&gt; packages-microsoft-prod.deb
&lt;span class="nb"&gt;sudo &lt;/span&gt;dpkg &lt;span class="nt"&gt;-i&lt;/span&gt; packages-microsoft-prod.deb
&lt;span class="nb"&gt;rm &lt;/span&gt;packages-microsoft-prod.deb

&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; apt-transport-https
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; dotnet-sdk-6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This step installed all the necessary dependencies, and we are ready to go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#case-2-cpu-on-your-machine-is-not-x64-eg-raspberry-pi"&gt;
  &lt;/a&gt;
  Case 2 - CPU on your machine IS NOT x64 (e.g. Raspberry Pi)
&lt;/h3&gt;

&lt;p&gt;There is a slightly different setup for Raspberry Pi because it has an ARM64 CPU. We need to install the Runtime manually or with a script - I prefer the script way (If you are a bit sceptical about the file, you can check the documentation &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/install/linux-scripted-manual#scripted-install"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -c 6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wait for the process to complete, and the .NET SDK will put files in your current directory &lt;code&gt;~/.dotnet&lt;/code&gt;. To have &lt;code&gt;dotnet&lt;/code&gt; in our &lt;code&gt;PATH&lt;/code&gt; for a simple resolution, we can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo ln&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.dotnet/dotnet"&lt;/span&gt; &lt;span class="s2"&gt;"/usr/bin/dotnet"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you don't want to add &lt;code&gt;dotnet&lt;/code&gt; to the PATH, you will need to invoke the &lt;code&gt;dotnet&lt;/code&gt; command from the directory &lt;code&gt;$HOME/.dotnet/dotnet&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check if &lt;code&gt;dotnet&lt;/code&gt; installation completed without any issues:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;It is unnecessary to reboot your machine, but as  &lt;a href="https://amelspahic.com/block-ads-tracking-and-telemetry-with-pi-hole-on-raspberry-pi-ubuntu-server-20-04"&gt;I use Raspberry Pi as a DHCP server&lt;/a&gt;, I noticed some problems obtaining the IP address, but reboot solves it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since we installed .NET 6 SDK manually (using the script), we need to ensure that we have the required dependencies for the .NET by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; &lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;libc6 libgcc1 libgssapi-krb5-2 libicu66 libssl1.1 libstdc++6 zlib1g
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our machine is now ready to build and run .NET 6 applications, but this is still not the end. We need to let GitHub Actions know where to deploy, build, and run the code. Back to the GitHub repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-create-a-selfhosted-runner"&gt;
  &lt;/a&gt;
  Step 2 - Create a self-hosted runner
&lt;/h2&gt;

&lt;p&gt;You can add self-hosted runners to a single repository. To add a self-hosted runner to a user repository, you must be the repository owner.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to the main page of the repository&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Settings&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Actions&lt;/code&gt; from the left sidebar&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Runners&lt;/code&gt; submenu&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;New self-hosted runner.&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3QWpudq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640652932666/TNCVULlQa.png" alt="image.png" width="880" height="450"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next step, you need to choose what type of operating system and CPU architecture. If you are using Raspberry Pi 3 and higher versions, you probably have ARM64, but anyways, you can check that quickly by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;uname -m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see something like &lt;code&gt;aarch64&lt;/code&gt;, it means an ARM64 CPU. If you are on VPS, it will probably show something like &lt;code&gt;x86_64&lt;/code&gt;, which means your machine is running on Intel's 64-bit CPU. GitHub will provide you with the information needed to install the active-runner on your device. Follow it to the tee, but you can skip running the script with &lt;code&gt;./run.sh&lt;/code&gt; and &lt;code&gt;Using your self-hosted runner&lt;/code&gt; part because we will cover it later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sgxzvD39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640891111105/3f1J20akE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sgxzvD39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640891111105/3f1J20akE.png" alt="image.png" width="880" height="703"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final screen should look like the image below. If you get, unexpected errors like &lt;code&gt;An error occurred while sending the request&lt;/code&gt; or &lt;code&gt;Resource temporarily unavailable&lt;/code&gt;, retry the command that caused it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WYh3OWBS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640653535773/2e8H0cOU8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WYh3OWBS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640653535773/2e8H0cOU8.png" alt="image.png" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-a-selfhosted-runner-as-a-background-service"&gt;
  &lt;/a&gt;
  Run a self-hosted runner as a background service
&lt;/h3&gt;

&lt;p&gt;In the previous configuration, we said to skip running &lt;code&gt;./run.sh&lt;/code&gt; because we want it to be a background process. Maybe someone likes it or uses it because of some security considerations, and it's OK, but the background process is my preferred way.&lt;/p&gt;

&lt;p&gt;Action-runners come with an option for installing runners as a service in the background. It will enable it by default, so the next time your machine restarts, the service will be up and running.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; ./svc.sh &lt;span class="nb"&gt;install
sudo&lt;/span&gt; ./svc.sh start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-setup-the-application-directory"&gt;
  &lt;/a&gt;
  Step 3 - Setup the application directory
&lt;/h2&gt;

&lt;p&gt;We created the action runner that will listen for the changes from GitHub Actions. Now we need to create a directory that will hold the application files. You can set it anywhere available, but I like to keep everything in &lt;code&gt;/var/www/&amp;lt;name_of_the_app&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo mkdir&lt;/span&gt; /var/www/sample-app
&lt;span class="c"&gt;# I will give the directory ownership to the user `ubuntu` and its group&lt;/span&gt;
&lt;span class="nb"&gt;sudo chown &lt;/span&gt;ubuntu:ubuntu /var/www/sample-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a directory where we can output applications build assets. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-create-a-github-actions-workflow"&gt;
  &lt;/a&gt;
  Step 4 - Create a GitHub Actions workflow
&lt;/h2&gt;

&lt;p&gt;We created a &lt;code&gt;self-hosted&lt;/code&gt; runner on our machine; now, we need to create a GitHub Action workflow to perform our deployment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to your GitHub repository &lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;Actions&lt;/code&gt; tab&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;set up a workflow yourself.&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--99DH23wW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640706454024/s7_H1WYd6.png" alt="image.png" width="880" height="460"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub will create a prepopulated file with a default filename which you can change. Replace the content of the file with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CI&lt;/span&gt;

&lt;span class="c1"&gt;# Controls when the workflow will run&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# Triggers the workflow on push request event for the master branch&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;    
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Our previously created self-hosted runner&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self-hosted&lt;/span&gt;

    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;matrix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;dotnet&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;6.0.x"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# A sequence of tasks that will execute as part of the job&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checks out repository so our job can access it&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup .NET Core SDK ${{ matrix.dotnet-version }}&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-dotnet@v1.7.2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;dotnet-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ matrix.dotnet-version }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dotnet restore&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dotnet build --configuration Release --no-restore&lt;/span&gt;

      &lt;span class="c1"&gt;# We will output publish files to the folder we previously created&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Publish&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dotnet publish -c Release -o /var/www/sample-app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we commit the file, GitHub will place it in the &lt;code&gt;.github/workflows/&lt;/code&gt; folder in the root of our repository, and the workflow process will start right away (if we did everything correctly). You can see the output of the workflow in the &lt;code&gt;Actions&lt;/code&gt; tab:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKfrAjsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640732165453/iWW41HP0Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKfrAjsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640732165453/iWW41HP0Y.png" alt="image.png" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-5-create-a-background-service-for-the-application"&gt;
  &lt;/a&gt;
  Step 5 - Create a background service for the application
&lt;/h2&gt;

&lt;p&gt;You probably already figured out that we don't have the &lt;code&gt;dotnet xxxx.dll&lt;/code&gt; command in our GitHub Actions workflow YAML file. Of course, there is a reason. When we start the application using the &lt;code&gt;dotnet&lt;/code&gt; command, it is triggered only as a foreground process, and in our case, the GitHub Actions workflow will wait as long as the application is running and won't complete.&lt;/p&gt;

&lt;p&gt;We could use something like &lt;code&gt;nohup&lt;/code&gt;, but it would create a new process every time we run the application (not to mention that we didn't specify the port on which it should run). Also, if our machine reboots, our application will be down until we start it manually.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# It may look cool, but we don't want this&lt;/span&gt;
&lt;span class="nb"&gt;nohup &lt;/span&gt;dotnet SampleApp.dll &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While there might sometimes be better tools for the job, always consider using existing software first, and writing our service can give us a level of flexibility. &lt;/p&gt;

&lt;p&gt;To solve the issue, we will create a Linux user service that will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run our application after reboot&lt;/li&gt;
&lt;li&gt;Automatically restart the application if something internally happens and the application fails&lt;/li&gt;
&lt;li&gt;Ability to restart the application from a deployment script (GitHub Actions)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We create services in the &lt;code&gt;/etc/systemd/system&lt;/code&gt; directory, but we would need &lt;code&gt;elevated privileges&lt;/code&gt; to control them by default. Sure, there are ways to run &lt;code&gt;systemd&lt;/code&gt; services without using &lt;code&gt;sudo&lt;/code&gt; by tampering with &lt;code&gt;sudoers&lt;/code&gt; files or configuring &lt;code&gt;PolKit&lt;/code&gt;, but we will approach it differently. In the end, we want to give our GitHub Actions user the ability to run and restart the service without using &lt;code&gt;sudo&lt;/code&gt; or &lt;code&gt;PolKit&lt;/code&gt; configurations.&lt;/p&gt;

&lt;p&gt;We must locate user services in the &lt;code&gt;~/.config/systemd/user/&lt;/code&gt; directory. Let's create it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Using -p argument to create the whole path if it does not exist
mkdir -p ~/.config/systemd/user/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, you need to enable &lt;code&gt;lingering&lt;/code&gt; for the user on which we installed &lt;code&gt;GitHub Actions runner&lt;/code&gt;. In our case, that is the &lt;code&gt;ubuntu&lt;/code&gt; user, and it is necessary because it allows users who are not logged in to run long-running services. Otherwise, the user services will start on &lt;code&gt;user login&lt;/code&gt; instead of &lt;code&gt;boot&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;loginctl enable-linger ubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to create a &lt;code&gt;systemd&lt;/code&gt; unit file for the user (the service). We can name it however we want, but I prefer logical names, such as &lt;code&gt;name-of-the-application.service&lt;/code&gt;. Place it under the user's systemd instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano ~/.config/systemd/user/sample-app.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a couple of crucial things for which we prepared in previous steps, and we need to make sure we configure them correctly. The final configuration of &lt;code&gt;sample-app.service&lt;/code&gt; should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Unit]
Description=Example .NET 6 Application

[Service]
# This is the directory where our published files are
WorkingDirectory=/var/www/sample-app
# We set up `dotnet` PATH in Step 1. The second one is path of our executable
ExecStart=/usr/bin/dotnet /var/www/sample-app/SampleApp.dll --urls "http://0.0.0.0:5000"
Restart=always
# Restart service after 10 seconds if the dotnet service crashes
RestartSec=10
KillSignal=SIGINT
SyslogIdentifier=sample-app-log
# We can even set environment variables
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false

[Install]
# When a systemd user instance starts, it brings up the per user target default.target
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We set &lt;code&gt;--urls "http://0.0.0.0:5000"&lt;/code&gt; in &lt;code&gt;ExecStart&lt;/code&gt; for &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel?view=aspnetcore-6.0"&gt;Kestrel&lt;/a&gt; to listen on a specific port to test our application. I usually don't use Kestrel as an edge web server, but in a reverse proxy configuration with &lt;a href="https://www.nginx.com/"&gt;Nginx&lt;/a&gt;. For this tutorial, we will use Kestrel directly for brevity.&lt;/p&gt;

&lt;p&gt;If you are interested in the reverse proxy configuration, &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-6.0"&gt;the following link&lt;/a&gt; describes it in great detail.&lt;/p&gt;

&lt;p&gt;After we are sure that we have the correct configuration, we can save the file with &lt;code&gt;Ctrl+X, Y&lt;/code&gt;. Let's reload &lt;code&gt;systemd&lt;/code&gt; and enable our service to run even after the reboot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Reload `systemd`&lt;/span&gt;
systemctl &lt;span class="nt"&gt;--user&lt;/span&gt; daemon-reload

&lt;span class="c"&gt;# Enable the service at the next boot&lt;/span&gt;
systemctl &lt;span class="nt"&gt;--user&lt;/span&gt; &lt;span class="nb"&gt;enable &lt;/span&gt;sample-app.service

&lt;span class="c"&gt;# Start it right away&lt;/span&gt;
systemctl &lt;span class="nt"&gt;--user&lt;/span&gt; start sample-app.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is pretty easy to create a service on Linux, but it does not mean that it is the best solution. This tutorial didn't cover security considerations regarding the usage of &lt;code&gt;systemd&lt;/code&gt; services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-update-the-github-actions-workflow-file"&gt;
  &lt;/a&gt;
  Step 6 - Update the GitHub Actions workflow file
&lt;/h2&gt;

&lt;p&gt;Once we have our application service ready, we can update the GitHub Actions configuration to include our newly created service to run our application every time we push new code to the deployment branch.&lt;/p&gt;

&lt;p&gt;Edit the GitHub Actions workflow file created in Step 4 under the &lt;code&gt;&amp;lt;repository&amp;gt;/.github/workflows/&lt;/code&gt; folder. As the last step of our workflow, we will add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Restart the app&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;export XDG_RUNTIME_DIR=/run/user/$(id -u)&lt;/span&gt;
          &lt;span class="s"&gt;systemctl --user restart sample-app.service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our final workflow YAML file should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CI&lt;/span&gt;

&lt;span class="c1"&gt;# Controls when the workflow will run&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# Triggers the workflow on push request event for the master branch&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;    
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;master&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Our previously created self-hosted runner&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self-hosted&lt;/span&gt;

    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;matrix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;dotnet&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;6.0.x"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# A sequence of tasks that will execute as part of the job&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checks out repository so our job can access it&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup .NET Core SDK ${{ matrix.dotnet-version }}&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-dotnet@v1.7.2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;dotnet-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ matrix.dotnet-version }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dotnet restore&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dotnet build --configuration Release --no-restore&lt;/span&gt;

      &lt;span class="c1"&gt;# We will output publish files to the folder we previously created&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Publish&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dotnet publish -c Release -o /var/www/sample-app&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Restart the app&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;export XDG_RUNTIME_DIR=/run/user/$(id -u)&lt;/span&gt;
          &lt;span class="s"&gt;systemctl --user restart sample-app.service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you deploy the task, you can track its status in Actions tab on GitHub repository. Now you can access your web application over the assigned URL and port.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;I hope this text will help you complete that 2% of "what’s left of the project" and make deployment easier. If you find anything unclear, please comment here, and we will try to solve it if possible. Thank you for reading!&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>devops</category>
      <category>github</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
