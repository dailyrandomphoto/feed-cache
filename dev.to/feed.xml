<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Forem for iOS is here! ‚ú® </title>
      <author>Peter Kim Frank</author>
      <pubDate>Thu, 03 Jun 2021 16:14:11 +0000</pubDate>
      <link>https://dev.to/devteam/forem-for-ios-is-here-4g3f</link>
      <guid>https://dev.to/devteam/forem-for-ios-is-here-4g3f</guid>
      <description>&lt;p&gt;One of the guiding principles behind &lt;a href="//forem.com"&gt;Forem&lt;/a&gt; (the open-source software that powers DEV, &lt;a href="//community.codenewbie.org"&gt;CodeNewbie&lt;/a&gt;, and a growing number of online communities) is that discovery and community connection should be a delightful experience, available to everyone at all times.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-why-im-extremely-excited-to-share-that-the-forem-app-for-ios-is-now-available-on-the-app-store"&gt;
  &lt;/a&gt;
  &lt;em&gt;That's why I'm extremely excited to share that &lt;a href="https://apps.apple.com/us/app/forem/id1536933197"&gt;the Forem app for iOS is now available on the App Store&lt;/a&gt;.&lt;/em&gt; üéâ
&lt;/h3&gt;

&lt;p&gt;For months, our team has been hard at work optimizing the Forem features you know and love for iOS and packaging them into a complete app experience. Now, whether you're at home or living your life in the wider world, all of your favorite communities can travel with you. No more tripping between Safari tabs to find that article, podcast, conversation, or discussion you just can't shake!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-take-a-look-at-some-of-the-unique-features-youll-get-with-forem-for-ios"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Let's take a look at some of the unique features you'll get with Forem for iOS...&lt;/strong&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#discover-amp-preview-new-forem-communities"&gt;
  &lt;/a&gt;
  Discover &amp;amp; Preview New Forem Communities
&lt;/h4&gt;

&lt;p&gt;Browse the list of available public Forems or add a privately listed Forem you belong to. Tap into each for a preview before you decide to join. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#effortlessly-navigate-between-forems"&gt;
  &lt;/a&gt;
  Effortlessly navigate between Forems
&lt;/h4&gt;

&lt;p&gt;Our dropdown menu or left-right swiping functionality allows you to explore different communities the way your fingers are trained to do on iOS!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#consume-mobileoptimized-content"&gt;
  &lt;/a&gt;
  Consume mobile-optimized content
&lt;/h4&gt;

&lt;p&gt;Articles, discussions, and podcasts on public Forems are available for your consumption ‚Äî whether you're a member of them or not.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#share-images-on-the-go"&gt;
  &lt;/a&gt;
  Share images on the go
&lt;/h4&gt;

&lt;p&gt;Post while the inspiration strikes with our mobile image uploader.  &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#stay-uptodate-with-the-latest-activities"&gt;
  &lt;/a&gt;
  Stay up-to-date with the latest activities
&lt;/h4&gt;

&lt;p&gt;Push notifications keep you in the loop with the latest news about your posts, comments, and network. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;... and lots more!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gtgtdownload-the-forem-for-ios-on-the-app-store"&gt;
  &lt;/a&gt;
  &lt;a href="https://apps.apple.com/us/app/forem/id1536933197"&gt;&amp;gt;&amp;gt;Download the Forem for iOS on the App Store&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;We hope you'll try out the app and let us know what you think. If you love it, consider leaving us a review. &lt;/p&gt;

&lt;p&gt;Questions? Drop 'em below. I'll be answering them while out of pocket on the app üòâ &lt;/p&gt;

</description>
      <category>forem</category>
      <category>mobile</category>
      <category>meta</category>
      <category>ios</category>
    </item>
    <item>
      <title>Announcing the Appwrite Official Swag Store! üõç</title>
      <author>Eldad A. Fux</author>
      <pubDate>Thu, 03 Jun 2021 16:12:47 +0000</pubDate>
      <link>https://dev.to/eldadfux/announcing-the-appwrite-official-swag-store-3k8f</link>
      <guid>https://dev.to/eldadfux/announcing-the-appwrite-official-swag-store-3k8f</guid>
      <description>&lt;p&gt;We're super excited to announce the launch of the &lt;a href="https://store.appwrite.io/"&gt;Appwrite Swag Store&lt;/a&gt;. Yes! Our Swag Store is now live, and you can order merch from your favourite open-source project starting now ‚ù§Ô∏è.&lt;/p&gt;

&lt;p&gt;We have been wanting to do this for quite some time now, and we realized it would be perfect to have the store up in time to distribute swags for &lt;a href="https://30days.appwrite.io"&gt;&lt;strong&gt;#30DaysOfAppwrite&lt;/strong&gt;&lt;/a&gt; event! We had two main motivations when we started out with this idea:&lt;/p&gt;

&lt;p&gt;We wanted the process of shipping swags to be much easier, and allow anyone liking our projects to be able to get any Appwrite swags they desire, and we also wanted a fun way to sponsor and support other open source projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giving-back-to-the-oss-community"&gt;
  &lt;/a&gt;
  Giving Back to The OSS Community üë©‚Äçüíªüë®‚Äçüíª
&lt;/h2&gt;

&lt;p&gt;We love ‚ù§Ô∏è Open Source and we know that you do too! We also know that some OSS projects might find it hard to sustain themselves. That's why we decided that any profit that the new Appwrite swags store makes will be invested back in the open-source community!&lt;/p&gt;

&lt;p&gt;We realized that a swag store would be a great way to support some exciting open-source projects, giving both you and us a sense of satisfaction. As with everything we do at Appwrite, we love transparency, here are some details.&lt;/p&gt;

&lt;p&gt;The price you see on our store accounts for all the production costs like store hosting, transaction commissions, and manufacturing costs and an additional 5-10% on each product. We will be sharing updates about the store revenue and the details about the projects we decide to sponsor each month in our monthly newsletter!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#easy-distribution"&gt;
  &lt;/a&gt;
  Easy Distribution ‚úàÔ∏è
&lt;/h2&gt;

&lt;p&gt;We love giving away swags, and it lights up our faces every time one of you tags us on social media or sends us pictures of your Appwrite goodies.&lt;/p&gt;

&lt;p&gt;But then, scale happened! We started getting an overwhelming amount of responses during various events like &lt;strong&gt;Hacktoberfest&lt;/strong&gt;, the &lt;strong&gt;Easter Egg Hunt&lt;/strong&gt;, &lt;strong&gt;#30DaysOfAppwrite&lt;/strong&gt;, and people actually asking to support us and buy hoodies. Having all these new contributions is a great problem to have, but it became increasingly difficult to manage the procurement, warehousing, logistics and shipping of Goodies! Having the store takes that burden away, allowing us to invest more time in making Appwrite the best OSS alternative to Firebase we can! For all our future events, we will be distributing swag cards to make purchases easy for all of you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-products"&gt;
  &lt;/a&gt;
  The Products üëö üëï
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lhs-9TwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj2g6i0b6abdda5u56em.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lhs-9TwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj2g6i0b6abdda5u56em.png" alt="Appwrite Store Products"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With our motivations aside, let's talk a little bit about the products! We have &lt;a href="https://store.appwrite.io/products/appwrite-coffee-mug"&gt;debug_mugs()&lt;/a&gt; to help you while you crush those nasty bugs, &lt;a href="https://store.appwrite.io/products/appwrite-phone-case"&gt;phone.protect()&lt;/a&gt;, &lt;a href="https://store.appwrite.io/products/laptop-sleeve"&gt;laptop.protect()&lt;/a&gt;, &lt;a href="https://store.appwrite.io/collections/decor"&gt;init_pillows()&lt;/a&gt; and many &lt;a href="https://store.appwrite.io/search?q=notebooks&amp;amp;options%5Bprefix%5D=last"&gt;new Notebooks()&lt;/a&gt; to name a few. Check out the store for a complete list of products and grab some before we run out of stock! You can find our store over at &lt;a href="https://store.appwrite.io/"&gt;https://store.appwrite.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We're anxiously awaiting feedback about what's good, what's bad, and what you'd like to see more of! We would love to hear about products you'd like to see, your favorite open-source projects we could sponsor, and everything else in between. If you have experience running an online store, hit us up! We would love to hear more about your learning and experiences.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>appwrite</category>
      <category>javascript</category>
      <category>swags</category>
    </item>
    <item>
      <title>Why it is important to maintain a good README file</title>
      <author>Rameez Joya</author>
      <pubDate>Thu, 03 Jun 2021 15:46:06 +0000</pubDate>
      <link>https://dev.to/rameezjoya/why-it-is-important-to-maintain-a-good-readme-file-mbo</link>
      <guid>https://dev.to/rameezjoya/why-it-is-important-to-maintain-a-good-readme-file-mbo</guid>
      <description>&lt;p&gt;We mostly tend to ignore the README file as a trivial non-essential part of our project. However, a good README file is what an Index is to a Book. README file enables users to navigate and identify essential elements of your project quickly. &lt;/p&gt;

&lt;p&gt;Most often, when we create any new project using a bootstrap library such as &lt;a href="https://github.com/facebook/create-react-app"&gt;create-react-app&lt;/a&gt;, it comes with a default README file. In the case of create-react-app, it is &lt;code&gt;README.md&lt;/code&gt; at the root folder. Unfortunately, it was my habit to ignore the default README file in my projects. At times, I've even deleted it mercilessly, thinking of myself as an Efficient developer who is just removing non-essential parts.  But lately, as I have learned about the &lt;a href="https://tom.preston-werner.com/2010/08/23/readme-driven-development.html"&gt;importance of maintaining a good README file&lt;/a&gt;, Believe it or not, README is one of the most crucial parts of your project in the long run.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-do-you-write-readme-file-for"&gt;
  &lt;/a&gt;
  Who do you write README file for:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#for-your-present-and-future-self"&gt;
  &lt;/a&gt;
  For your present and future self:
&lt;/h3&gt;

&lt;p&gt;Even if you write a project just for yourself and expect no one to use it in the future, or you may never want to publish your code publicly, even in that case, a sound README file will keep you accountable for your project goals. It will also act as your permanent reference point for essential particulars of your project.  For example, you may open yourself after years, and README will quickly jog your memory and prevent hours of struggle in remembering important project specifics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-other-contributors"&gt;
  &lt;/a&gt;
  For other contributors:
&lt;/h3&gt;

&lt;p&gt;Suppose your project has or gets too many contributors. In that case, it will be a time-consuming and redundant effort to teach every single contributor about your project specifics. Furthermore, we all have our style of coding and maintaining file structure in the project; hence, it would not be reasonable for you to expect them to understand your project by going through your project files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-users"&gt;
  &lt;/a&gt;
  For users:
&lt;/h3&gt;

&lt;p&gt;Your project may have many non-dev users just looking to run it quickly and consume it for their specific needs. For example, suppose your open-source project is a popular library to be used in other projects. In that case, your README file is the single most important critical aspect of your project success to get more downloads. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-you-write-in-your-readme-file"&gt;
  &lt;/a&gt;
  What should you write in your README file:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#brief-overview-of-your-projecttoollibrary"&gt;
  &lt;/a&gt;
  Brief overview of your project/tool/library
&lt;/h3&gt;

&lt;p&gt;It should be a short and straightforward explanation of your project that explains its purpose and goals and your motivation behind developing this project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tech-stack-that-you-have-utilised-for-your-project"&gt;
  &lt;/a&gt;
  Tech stack that you have utilised for your project.
&lt;/h3&gt;

&lt;p&gt;This will give a concise idea to technical users of your project if this project is compatible with their specific usage or not. For example, declaring that you have utilised creat-react-app bootstrapping for your project will save developers a lot of time articulating how to run your project. This may also include any specifics for the required development or production environment for your project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-run-your-project"&gt;
  &lt;/a&gt;
  How to run your project
&lt;/h3&gt;

&lt;p&gt;This section should consist of a list of possible steps or commands to run and evaluate your project. This may include specific commands to aid for development and production environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#change-log"&gt;
  &lt;/a&gt;
  Change log:
&lt;/h3&gt;

&lt;p&gt;It is good to maintain and enlist different Version changes in your project over time; this will depict various changes your project has gone through and help long-time consumers of your project in troubleshooting problems and identifying that may relate to a specific version of your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references-and-credits"&gt;
  &lt;/a&gt;
  References and Credits:
&lt;/h3&gt;

&lt;p&gt;Always give credit where it's due. This section may enlist possible references that you have utilised to build your project and acknowledge credible contributors to your project.&lt;/p&gt;

&lt;p&gt;Here is &lt;a href="https://github.com/ram33z/expense-tracker#readme"&gt;the example README file&lt;/a&gt; from one of my new project. I hope this guide about writing a suitable README file helps you.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>changelog</category>
      <category>writing</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Webhook Authentication Learnings for GitHub, GitLab, and Bitbucket</title>
      <author>Jeremy Kreutzbender</author>
      <pubDate>Thu, 03 Jun 2021 15:37:20 +0000</pubDate>
      <link>https://dev.to/jerk/webhook-authentication-learnings-for-github-gitlab-and-bitbucket-4kml</link>
      <guid>https://dev.to/jerk/webhook-authentication-learnings-for-github-gitlab-and-bitbucket-4kml</guid>
      <description>&lt;h1&gt;
  &lt;a href="#webhook-authentication-and-processing-for-github-gitlab-and-bitbucket"&gt;
  &lt;/a&gt;
  Webhook Authentication and Processing for Github, Gitlab, and Bitbucket
&lt;/h1&gt;

&lt;p&gt;I was recently tasked with implementing Gitlab support for Release and to complete that task I needed to implement authentication for Gitlab and a way to handle their webhooks. I completed the authentication first and left the webhook implementation for another pull request as I wanted to refactor the way we were handling all webhooks.&lt;/p&gt;

&lt;p&gt;As I started the webhook work, the state of how Release handled webhooks was that Github was using the &lt;a href="https://github.com/ssaunier/github_webhook"&gt;github_webhook&lt;/a&gt; gem and Bitbucket was using some custom built code that lived in a Controller Concern. With the need to add a third client I wanted to align everything into a few classes that allow us to easily onboard more providers if the need ever arose.&lt;/p&gt;

&lt;p&gt;As I finished up the work I thought it would be useful to share some things I found about the differences between the three providers and share some of the code that I wrote in case anyone else is trying to do a similar implementation. First I'll talk about a few things I came across and later, in the Technical Details section, I'll go over a few classes we're using in our Ruby on Rails project for handling the webhooks.&lt;/p&gt;

&lt;p&gt;I enjoyed doing this work because it spanned a lot different aspects of our codebase, including designing a refactor that would allow for processing webhooks from three different sources, reading documentation and understanding three different APIs, and writing tests to ensure that as we move forward we shouldn't need to every worry about breaking our webhook processing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authentication-methods"&gt;
  &lt;/a&gt;
  Authentication Methods
&lt;/h3&gt;

&lt;p&gt;Further down in the Technical Details section, I'll show some code for the &lt;code&gt;Authenticator&lt;/code&gt; class so you'll see the implementation around this topic, but I wanted to touch on how each of the three providers handles authenticating the webhooks. We'll start with Github.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; -  With a Github App, when you create the App, you can supply a secret key which will be used as the basis for authenticating the webhooks for all repositories. Their approach is to combine the payload of the webhook and the secret to generate a hash. The generated hash will be passed as a header when the request is sent to you. The documentation gives an example in Ruby on how to generate your own version of the hash. Then, if the comparison of the two hashes matches, you know the authenticity of the request is valid. I would rate this as the most secure way of authenticating the webhooks because if the request were intercepted and decoded, the secret used to generate the hash is not present anywhere in the request. You can read Github's &lt;a href="https://docs.github.com/en/developers/webhooks-and-events/webhooks/securing-your-webhooks"&gt;Securing your webhooks documentation&lt;/a&gt; for yourself if you want to learn more&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gitlab&lt;/strong&gt; - Gitlab follows a similar approach to Github, except that a different webhook object must be created on Gitlab for each Repository (as opposed to the singular Github App). Each webhook installation can take in a secret as it is being created and that secret is sent with the webhook request in the headers. There is no generating of a hash like Github, the secret is simply added to the request. Due to the secret being sent in the header, we decided to generate a different secret for every Repository as we save the Repository in the database. This means that if a request were to be intercepted and decoded, at most a single Repository would be compromised. You can read Gitlab's &lt;a href="https://docs.gitlab.com/ee/user/project/integrations/webhooks.html"&gt;Webhook documentation&lt;/a&gt; for yourself if you want to learn more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Bitbucket Cloud&lt;/strong&gt; - Bitbucket is set up in a similar fashion to Gitlab where we have to create a webhook object for each Repository. However, unlike Gitlab, Bitbucket Cloud does not offer a way to add a secret. I came across a &lt;a href="https://jira.atlassian.com/browse/BCLOUD-14683"&gt;JIRA Ticket&lt;/a&gt; that was created in 2017 outlining this omission of a way to secure the requests but it is currently still open. It is unfortunate that Bitbucket doesn't offer a way to authenticate the webhook requests as it would allow someone to potentially send requests with bad information. They do offer an alternative solution in their documentation about whitelisting specific IPs that the requests could come from, but my opinion is that they should implement adding the secret and at least follow in Gitlab's approach to send the secret in the headers. You can read Bitbucket Cloud's &lt;a href="https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/"&gt;Manange webhooks documentation&lt;/a&gt; for yourself if you want to learn more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-action-is-separated-from-the-event"&gt;
  &lt;/a&gt;
  The Action Is Separated From The Event
&lt;/h3&gt;

&lt;p&gt;One aspect I really like with Github and Gitlab is that they differentiate their webhook request through an event and an action. The event is sent as a header in the request and an example would be &lt;code&gt;pull_request&lt;/code&gt; (on Github) or &lt;code&gt;merge_request&lt;/code&gt; (on Gitlab). There are many different things that can happen with a Pull Request though: it might be one of opened, closed, merged, reopened, and so on. Those different actions that could happen on the Pull Request are sent over in the payload as the key &lt;code&gt;action&lt;/code&gt; with the value of the aforementioned states. From a coding perspective this event and action pattern allowed me to create a method, say &lt;code&gt;process_pull_request&lt;/code&gt; and inside of that method, handle the many different actions that could occur in another method, say &lt;code&gt;pull_request_opened&lt;/code&gt;. I found that designing the code this way allowed for a good abstraction and thorough unit testing of all the different action methods.&lt;/p&gt;

&lt;p&gt;The outlier is Bitbucket which added the event and the action together in the header. For example, when a Pull Request is created, the header contains &lt;code&gt;pullrequest:created&lt;/code&gt;, when closed &lt;code&gt;pullrequest:rejected&lt;/code&gt;, and when merged &lt;code&gt;pullrequest:fulfilled&lt;/code&gt;. When using  Release for ephemeral environments, closing and merging a Pull Request are considered the same type of action: we will destroy that ephemeral environment. But since the header contains two different values, I had to implement two different methods: &lt;code&gt;process_pullrequest_rejected&lt;/code&gt; and &lt;code&gt;process_pullrequest_fulfilled&lt;/code&gt; which simply call another method. While it is a pretty minor inconvenience, I like the code pattern of the action and event separated compared to having them combined.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-details"&gt;
  &lt;/a&gt;
  Technical Details
&lt;/h2&gt;

&lt;p&gt;First and foremost I want to acknowledge the great work on the &lt;a href="https://github.com/ssaunier/github_webhook"&gt;gitub_webhook&lt;/a&gt; gem as I used a good amount of what they had done to create the foundation for the &lt;code&gt;Authenticator&lt;/code&gt; and &lt;code&gt;Processor&lt;/code&gt; classes. What follows is the Ruby code I wrote to manage the webhooks from the three providers that Release currently supports.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-authenticator"&gt;
  &lt;/a&gt;
  The Authenticator
&lt;/h3&gt;

&lt;p&gt;First up, we'll look at the &lt;code&gt;Authenticator&lt;/code&gt; class. Its purpose is to authenticate the webhooks that we are receiving to ensure that they're valid. You'll see that there is an optional parameter for the Repository and it is optional because as I mentioned in the Authentication Methods above, for Github we have a single secret, while for Gitlab and Bitbucket a secret is generated for each Repository.&lt;/p&gt;

&lt;p&gt;Aside from the initialization method, the class has a single public method, &lt;code&gt;authenticate_request!&lt;/code&gt; which does as it is named. It will raise an error if the authenticity of the request cannot be validated otherwise the call will return. The &lt;code&gt;expected_signature&lt;/code&gt; method follows the different providers implementations with Github needing to create a hash to compare, Gitlab needing only the secret, and Bitbucket currently using a random string due to not offering an authentication method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Webhooks&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Authenticator&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SignatureError&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;StandardError&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="ss"&gt;repository: &lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
      &lt;span class="vi"&gt;@vcs_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
      &lt;span class="vi"&gt;@repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;authenticate_request!&lt;/span&gt;
      &lt;span class="n"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client_secret&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;request_signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;signature_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expected_signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expected_signature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SecurityUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;secure_compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request_signature&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expected_signature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;SignatureError&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;request_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@request_body&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rewind&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;signature_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@signature_header&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
        &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:github&lt;/span&gt;
          &lt;span class="vi"&gt;@request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'X-Hub-Signature-256'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:gitlab&lt;/span&gt;
          &lt;span class="vi"&gt;@request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'X-Gitlab-Token'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:bitbucket&lt;/span&gt;
          &lt;span class="s1"&gt;'bitbucket_cloud'&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;expected_signature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;digest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OpenSSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Digest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:github&lt;/span&gt;
        &lt;span class="s2"&gt;"sha256=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;OpenSSL&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HMAC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;digest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:gitlab&lt;/span&gt;
        &lt;span class="n"&gt;secret&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:bitbucket&lt;/span&gt;
        &lt;span class="s1"&gt;'bitbucket_cloud'&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;client_secret&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:github&lt;/span&gt;
        &lt;span class="no"&gt;Clients&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;webhook_secret&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:gitlab&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:bitbucket&lt;/span&gt;
        &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;webhook_secret&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-processor"&gt;
  &lt;/a&gt;
  The Processor
&lt;/h3&gt;

&lt;p&gt;If the request is authenticated, then we need to process the payload that comes with the request and the &lt;code&gt;Processor&lt;/code&gt; class does just that. It will look through the payload and try to find the associated Repository in our database, if that Repository cannot be found, then an error occurs. To determine what event occurred, we look through the different headers in the request and parse the value into Ruby method declaration form by replacing any non-word character with an underscore. Based on the provider who sent the request, a service object is initialized and then we attempt to call a &lt;code&gt;process_&lt;/code&gt; method. Some webhooks we receive are for things Release doesn't deal with, for example Github's &lt;code&gt;issues&lt;/code&gt; webhooks, so we safely &lt;code&gt;try&lt;/code&gt; the method as there may not be an implemented &lt;code&gt;process_&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Webhooks&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Processor&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
      &lt;span class="vi"&gt;@payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@vcs_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
      &lt;span class="vi"&gt;@repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository_from_payload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="vi"&gt;@webhook_service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webhook_service&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;repository&lt;/span&gt;
      &lt;span class="vi"&gt;@repository&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_webhook&lt;/span&gt;
      &lt;span class="n"&gt;process_method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"process_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;event_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="vi"&gt;@webhook_service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;try&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;process_method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;json_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;
      &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HashWithIndifferentAccess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;repository_from_payload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;provider_repository_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;provider_repository_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;provider_repository_id&lt;/span&gt;
        &lt;span class="no"&gt;Repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;type: &lt;/span&gt;&lt;span class="s2"&gt;"Repositories::&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;capitalize&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;provider_repository_id: &lt;/span&gt;&lt;span class="n"&gt;provider_repository_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordNotFound&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;
      &lt;span class="c1"&gt;# Re-Raise the error with info from the payload so we know what the repository is&lt;/span&gt;
      &lt;span class="n"&gt;repository_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'repository'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'full_name'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;new_error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordNotFound&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"Repository Info: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;repository_info&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;new_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;set_backtrace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;backtrace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;new_error&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;provider_repository_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:github&lt;/span&gt;
        &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'repository'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:gitlab&lt;/span&gt;
        &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'project'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:bitbucket&lt;/span&gt;
        &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'repository'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="kp"&gt;nil&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;event_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@event_method&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; 
        &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;
          &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:github&lt;/span&gt;
            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'X-GitHub-Event'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
          &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:gitlab&lt;/span&gt;
            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'X-Gitlab-Event'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
          &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="ss"&gt;:bitbucket&lt;/span&gt;
            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'X-Event-Key'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="kp"&gt;nil&lt;/span&gt;
          &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\W/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_sym&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;webhook_service&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;service_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Webhooks::&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;capitalize&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="n"&gt;service_class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constantize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#github-webhook-service"&gt;
  &lt;/a&gt;
  Github Webhook Service
&lt;/h3&gt;

&lt;p&gt;The last method in &lt;code&gt;Processor&lt;/code&gt;, &lt;code&gt;webhook_service&lt;/code&gt; returns a service class that goes through our internal business logic of what we want to do with&lt;br&gt;
the webhook. I'm going to provide a small snippet of the Github service when we receive a Pull Request webhook. If you recall, I mentioned this method in the &lt;em&gt;The Action Is Separated From The Event&lt;/em&gt; section and how I liked this pattern of structuring the code. If someone else were to look at this code, I would hope they would find it easy to understand that anything to do with Github Pull Request webhooks happens inside of the &lt;code&gt;process_pull_request&lt;/code&gt; method and the &lt;code&gt;case&lt;/code&gt; statement handles all the different actions that can take place.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Webhooks&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Github&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;
      &lt;span class="vi"&gt;@action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="vi"&gt;@repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_pull_request&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;
        &lt;span class="n"&gt;error_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ERROR: Pull Request no action received, payload : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@payload&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, do nothing"&lt;/span&gt;
        &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error_message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;            
        &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Pull Request with action : *&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@action&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;*. Received Repository : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;."&lt;/span&gt;
        &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="vi"&gt;@action&lt;/span&gt;
        &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'opened'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'reopened'&lt;/span&gt;
          &lt;span class="n"&gt;pull_request_opened&lt;/span&gt;
        &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'closed'&lt;/span&gt;
          &lt;span class="n"&gt;pull_request_closed&lt;/span&gt;
        &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="s1"&gt;'labeled'&lt;/span&gt;
          &lt;span class="n"&gt;pull_request_labeled&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Pull Request with action : *&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@action&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;*. Nothing to do for now."&lt;/span&gt;
          &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-controller"&gt;
  &lt;/a&gt;
  The Controller
&lt;/h3&gt;

&lt;p&gt;The final piece to tie everything together is the controller. &lt;code&gt;WebhooksController&lt;/code&gt; is the base class and each subclass implements only the &lt;code&gt;vcs_type&lt;/code&gt; method. Our previous approach had custom code for each of the &lt;code&gt;Webhooks::GithubController&lt;/code&gt; and &lt;code&gt;Webhooks::BitbucketController&lt;/code&gt;. This meant that each required a ton of specific tests to ensure that we were processing all the different webhooks correctly. My refactored approach moved all that logic out of the controller and aimed for the smallest footprint possible to make testing as simple as possible.&lt;/p&gt;

&lt;p&gt;There is only one route in the controller, which is a &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;create&lt;/code&gt;. I decided that since the Repository may be optional in the &lt;code&gt;Authenticator&lt;/code&gt; that I will store it in the &lt;code&gt;Processor&lt;/code&gt; and pass it into the &lt;code&gt;Authenticator&lt;/code&gt;. Otherwise you can see that the public methods for each of the classes are called. If an error is raised by either, due to an unauthenticated webhook or possibly a webhook for a Repository we don't have in our database, we'll capture the error and log as much information as possible so that we can look into what went wrong.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Webhooks::GithubController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;WebhooksController&lt;/span&gt;
  &lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:github&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WebhooksController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActionController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;skip_before_action&lt;/span&gt; &lt;span class="ss"&gt;:verify_authenticity_token&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vcs_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;define_method&lt;/span&gt; &lt;span class="ss"&gt;:vcs_type&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;vcs_name&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;StandardError&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@webhook_service&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;payload&lt;/span&gt;

    &lt;span class="n"&gt;backtrace_cleaner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ActiveSupport&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;BacktraceCleaner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
    &lt;span class="n"&gt;cleaned_backtrace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;backtrace_cleaner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;backtrace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;error_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Error in &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;! Message : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Payload : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Backtrace : &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;cleaned_backtrace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error_message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="ss"&gt;:bad_request&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;
    &lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Webhooks&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;repository&lt;/span&gt;

    &lt;span class="n"&gt;authenticator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Webhooks&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Authenticator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;request: &lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;vcs_type: &lt;/span&gt;&lt;span class="n"&gt;vcs_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;repository: &lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;authenticator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;authenticate_request!&lt;/span&gt;

    &lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;process_webhook&lt;/span&gt;

    &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="ss"&gt;:ok&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's a wrap on my stint in refactoring our webhook code to work with Github, Bitbucket, and Gitlab. If we ever have to add another provider I think it will be quite straightforward and I hope you enjoyed taking a peek inside some development work at Release. If you're interested in having an ephemeral environment created whenever we receive a Pull Request webhook from your Repository, head on over to the &lt;a href="https://releasehub.com"&gt;homepage&lt;/a&gt; and sign up!&lt;/p&gt;

</description>
      <category>github</category>
      <category>gitlab</category>
      <category>bitbucket</category>
      <category>webhooks</category>
    </item>
    <item>
      <title>CSS TEXT SHADOW EFFECTS</title>
      <author>mike</author>
      <pubDate>Thu, 03 Jun 2021 15:24:56 +0000</pubDate>
      <link>https://dev.to/mike37/css-text-shadow-effects-1mmo</link>
      <guid>https://dev.to/mike37/css-text-shadow-effects-1mmo</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1kEZp9Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxatk4mkp82leidsgo3g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1kEZp9Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxatk4mkp82leidsgo3g.jpg" alt="Alt Text"&gt;&lt;/a&gt;           &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:-CSS3 text-shadow effects
       Author:-Jorge Epu√±an
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/juanbrujo/embed/yGpAK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:[webkit] Animated "text-shadow" pattern
       Author:-carpe numidium
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/carpenumidium/embed/hHjEJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:-Long shadow generator
       Author:-Max Kohler
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/maxakohler/embed/mAxHz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:-Netflix style text animation with CSS
       Author:-Nooray Yemon
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Netflix style text animation with CSS and a SCSS  function to have the long text shadow&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/yemon/embed/BwOOWZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:-Neon text-shadow effect
       Author:-Erik Jung
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/erikjung/embed/XdWEKE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:-Layered text-shadow effect CSS
       Author:-Shireen Taj
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/TajShireen/embed/abzmoRE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Title:-Long Shadow Gradient Mixin
       Author:-roikles
       Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;A Sass (Scss) Mixin to quickly generate long shadow gradients. Suitable for both 'text-shadow' and 'box-shadow'.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/roikles/embed/xbydH?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;           Title:-Animated Text-Shadow
           Author:-Erin E. Sullivan
           Made With:- HTML CSS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;A fun, CSS animation that creates a bounce while mimicking an RGB separation during the process.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/erinesullivan/embed/ZMreqJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;           Title:-3D CSS Typography
           Author:-Noah Blon
           Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/noahblon/embed/CsxfH?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;           Title:-  Pure CSS Flip Card
           Author:-Aron
           Made With:- HTML CSS 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Pure CSS Flip Card&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Aoyue/embed/pLJqgE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>DevNews Podcast ‚Äî Season 4 Finale!</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 03 Jun 2021 15:09:14 +0000</pubDate>
      <link>https://dev.to/devteam/devnews-podcast-season-4-finale-5gle</link>
      <guid>https://dev.to/devteam/devnews-podcast-season-4-finale-5gle</guid>
      <description>&lt;p&gt;I can't believe the season finale of DevNews is already here ü•∫ &lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S4:E8 - An Elaborate Phishing Hack, Autonomous Lethal Drones, a Questionable m1 Security Flaw, and a Devnews Behind the Scenes&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews ¬†

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes"&gt;
      &lt;img id="episode-profile-image" alt="S4:E8 - An Elaborate Phishing Hack, Autonomous Lethal Drones, a Questionable m1 Security Flaw, and a Devnews Behind the Scenes" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;√ó&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;For S4E8, &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I flipped the script a bit to chat with our amazing producer, &lt;a href="//dev.to/levisharpe"&gt;Levi Sharpe&lt;/a&gt; about what it's like to make our show.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;True to form, we naturally focused on some of the latest and splashiest stories in developer news as well:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An elaborate fake movie phishing hack&lt;/li&gt;
&lt;li&gt;A questionable M1 security flaw&lt;/li&gt;
&lt;li&gt;The first autonomous lethal drone targeting humans (ummmmm... üò±) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can (and should!) follow Levi here on DEV and Twitter at &lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; ‚Äî or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s4-e8-elaborate-phishing-hack-autonomous-lethal-drones/id1525581923?i=1000524041481"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/1IrjHcW7poHxtOr5ilXOPW"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzI4?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjw9q3iyLXwAhUAAAAAHQAAAAAQAg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s4-e8-an-elaborate-phishing-hack-autonomous-lethal-drones-a-questionable-m1-security-flaw-and-a-devnews-behind-the-scenes-84435763"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s4e8-an-elaborate-phishing-HURW8NnXiAm/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=163512063"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/169"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season four sponsors, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; and &lt;a href="https://rudderstack.com/"&gt;Rudderstack&lt;/a&gt; ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much for listening to DevNews this season. See you soon for season 5 üëã &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/upg0i1m4DLe5q/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/upg0i1m4DLe5q/giphy.gif" alt="That's all, folks"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>The Best Startup Project Management Tools</title>
      <author>Karl L. Hughes</author>
      <pubDate>Thu, 03 Jun 2021 15:00:52 +0000</pubDate>
      <link>https://dev.to/karllhughes/the-best-startup-project-management-tools-1fk8</link>
      <guid>https://dev.to/karllhughes/the-best-startup-project-management-tools-1fk8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L0kGuyQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.karllhughes.com/assets/img/project-management-tools.png" alt=""&gt;
&lt;/h1&gt;

&lt;p&gt;How do you manage your project workflows?  &lt;/p&gt;

&lt;p&gt;Effective project management is crucial to the success of every startup. With limited resources, it‚Äôs much cheaper to invest in great tools than more bodies. Because of this, founders and employees will &lt;a href="https://www.karllhughes.com/posts/working-at-startup"&gt;have to wear many hats&lt;/a&gt; and have to juggle a lot of competing priorities.&lt;/p&gt;

&lt;p&gt;I‚Äôve always relied heavily on great project management tools like the ones in this guide. We relied on them &lt;a href="https://www.karllhughes.com/posts/product-management-process"&gt;for my previous startup‚Äôs product management process&lt;/a&gt;, and having great tools is part of the reason I‚Äôve been able &lt;a href="https://www.karllhughes.com/posts/scaling-services"&gt;to grow my service business to 50 team members in just 7 months&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-a-startup-project-management-tool"&gt;
  &lt;/a&gt;
  How to Choose a Startup Project Management Tool
&lt;/h2&gt;

&lt;p&gt;The problem is that there‚Äôs a huge array of project management tools on the market, and they vary greatly in terms of price and capabilities. Since every organization is unique, there is no one-size-fits-all approach when it comes to project management tools.&lt;/p&gt;

&lt;p&gt;To make sure you get the most effective tool for your team, you need to start with an honest assessment of your team‚Äôs capabilities and needs. If you‚Äôre already using a project management tool, ask yourself: &lt;strong&gt;what does it lack? How does it complicate your workflow? What do you need in a new solution?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It helps to take a step back and think about the organization‚Äôs pain points. &lt;strong&gt;Are you struggling to communicate with other teams? Is the workload between team members spread unevenly?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;List all of the pain points of your organization, then mark each one with a priority level‚Äîhigh, medium, or low. Once you‚Äôve made an outline, begin your search.&lt;/p&gt;

&lt;p&gt;Using your outline as a guide, make a list of the tools that fit your needs. Depending on the size of your business, you might be able to use the tools for free. If a trial isn‚Äôt offered upfront, you can ask the vendors for a free demo for a limited time.&lt;/p&gt;

&lt;p&gt;The most important part of this process is the trial. You need to test the features and capabilities to determine if it can fully meet your needs. These trials need to be quick because you can‚Äôt spend years looking for the perfect tool, but they should help you decide if the tool is good enough for your use case or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-best-startup-project-management-tools"&gt;
  &lt;/a&gt;
  12 Best Startup Project Management Tools
&lt;/h2&gt;

&lt;p&gt;In this guide, I‚Äôll walk you through the best &lt;strong&gt;startup project management tools&lt;/strong&gt; on the market in 2021. You‚Äôll see some of the major advantages and use cases for each as well as get insight into their pricing models. I‚Äôm sure this list will need to change over time, so be sure to &lt;a href="https://twitter.com/karllhughes"&gt;ping me on Twitter&lt;/a&gt; if you know of another tool I should add to this list.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teamwave"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.shareasale.com/r.cfm?b=1530551&amp;amp;u=1653894&amp;amp;m=96830"&gt;TeamWave&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.shareasale.com/r.cfm?b=1530551&amp;amp;u=1653894&amp;amp;m=96830"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---8-qq5VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kJoMrK5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TeamWave is a project management, HR management, and customer relationship management tool rolled into one. You can plan and manage meetings, tasks, and events for the entire team. You can also streamline your communication and collaboration with team members, clients, and partners. If you have sensitive information that you only want to share with select people, you can also do that.&lt;/p&gt;

&lt;p&gt;It integrates with a wide array of tools, including Slack, QuickBooks, Dropbox, and G Suite. Instead of using multiple apps to get things done, you can use TeamWave to keep everything centralized. Whether on desktop or mobile, you‚Äôll be able to manage your business from anywhere and at any time.&lt;/p&gt;

&lt;p&gt;Their base plan, which comes with &lt;a href="https://www.shareasale.com/r.cfm?b=1530551&amp;amp;u=1653894&amp;amp;m=96830"&gt;all of TeamWave‚Äôs features&lt;/a&gt;, starts at $39 per month. It is suitable for growing teams because it supports an unlimited number of users. More importantly, TeamWave has a free 14-day trial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mondaycom"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://mondaycom.grsm.io/karlhughes7109"&gt;Monday.com&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://mondaycom.grsm.io/karlhughes7109"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2RuP6zy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/cqwX9WV.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monday can help your business move forward by bringing your team and work together on one platform. It is easy to set up and customize. You can choose from hundreds of creative templates or design your own.&lt;/p&gt;

&lt;p&gt;It has intuitive dashboards that let you visualize your tasks and progress. It makes it easier for you to monitor and manage all of your resources. Plus, it integrates with all of your tools, including Slack, Excel, and Google Calendar.&lt;/p&gt;

&lt;p&gt;The Basic plan, which is ideal for startups, costs $8 per user per month. It doesn‚Äôt have a free version, but it offers a free trial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#airtable"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://airtable.com/invite/r/4EaSmQNr"&gt;Airtable&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://airtable.com/invite/r/4EaSmQNr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRvPNTlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/iuElXQG.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Airtable can be as simple or as complex as you want it to be. It uses a spreadsheet-like interface with rows and columns, which you can use to add text, photos, notes, and other types of media. It has a selection of Airtable Views, such as Grid View and Calendar View, with powerful sorting and filtering features that enable you to personalize and monitor your progress in your preferred way. You can even use it &lt;a href="https://www.karllhughes.com/posts/using-airtable-as-an-api"&gt;as a backend or CMS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Aside from project management, it is great for managing your social media content. You can use it to plan and organize your monthly social calendars. On top of all that, you can choose from 50+ pre-built apps to extend the functionality of Airtable and tons of &lt;a href="https://airtable.com/templates"&gt;free templates&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With Airtable, you can get started for free no matter the size of your team. It has paid plans to accommodate the growing needs of your organization, starting at $10 per month per user.&lt;/p&gt;

&lt;p&gt;I‚Äôve been a heavy Airtable user for years and talked about it on the &lt;a href="https://www.youtube.com/watch?v=uaDp6yC1fb4"&gt;Built on Air Podcast&lt;/a&gt; a couple years ago.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  &lt;a href="https://trello.com/"&gt;Trello&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzyZxMvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LSlkiOL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzyZxMvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LSlkiOL.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trello is &lt;a href="https://www.karllhughes.com/posts/trello-as-a-reading-list"&gt;another one of my long-time favorite tools&lt;/a&gt;. Trello can transform your organization into a productivity powerhouse once you learn how to use it effectively. Its intuitive features enable you to customize your workflows. Using Trello cards, you can manage, track, and share all of your tasks.&lt;/p&gt;

&lt;p&gt;Trello harnesses the power of automation to minimize tedious tasks and processes. You can, for instance, make custom buttons to carry out specific processes quickly.&lt;/p&gt;

&lt;p&gt;You can get Trello for free. As your organization scales, you can get the paid plans, which come with unlimited boards, advanced checklists, and priority support among other things. The paid plans start at $10 per user per month and are worth every cent in my opinion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basecamp"&gt;
  &lt;/a&gt;
  Basecamp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYQIfGlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YkxXsJ3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYQIfGlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YkxXsJ3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I no longer recommend Basecamp due to their &lt;a href="https://www.theverge.com/2021/4/27/22406673/basecamp-political-speech-policy-controversy"&gt;new policies banning political discussions&lt;/a&gt;, but I did write a new list of companies with better track records on diversity and inclusion that you can &lt;a href="https://www.karllhughes.com/posts/basecamp-alternatives"&gt;use as an alternative&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clubhouse"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://clubhouse.io/"&gt;Clubhouse&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WVbkyRXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/gFXeZuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVbkyRXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/gFXeZuu.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clubhouse is designed to help you plan, build, and measure your projects. You can make a Story for your tasks using pre-made templates to help you save time. In each story, you can attach the tasks and documents needed.&lt;/p&gt;

&lt;p&gt;Using Epics and Milestones, you can monitor the progress of your entire organization. That means you can keep track of the small everyday tasks. More importantly, you can see how closer you are to achieving a larger goal.&lt;/p&gt;

&lt;p&gt;If you‚Äôre a small team consisting of 1 to 10 members, you can use Clubhouse for free. You can get the paid plans starting at $8.50 per user per month, which supports an unlimited number of users and advanced reporting among other things. You can try the Standard plan for free for 14 days.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clickup"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://clickup.com/"&gt;ClickUp&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NviZRSER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/uKpYGpn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NviZRSER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/uKpYGpn.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ClickUp has comprehensive features and functionalities that make your job a breeze. You can get work done in no time using slash commands. Using a menu of shortcuts, you can access task details, formatting options, and more with ease.&lt;/p&gt;

&lt;p&gt;With ClickUp, you can organize your tasks from simple to complex. You can communicate with your team members on the platform itself in real time.&lt;/p&gt;

&lt;p&gt;No matter what device you use, ClickUp lets you leverage time tracking insights. For every project, you can set clear expectations, along with time estimates.&lt;/p&gt;

&lt;p&gt;ClickUp has a free version, which can support unlimited members and unlimited tasks. It also has 100 MB of storage. It only has a single paid plan, which costs $5 per user per month. It has more comprehensive features, such as guests, permissions, custom fields, and portfolios.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x6_3B44S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mRdej2F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x6_3B44S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mRdej2F.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notion is a user-friendly, clutter-free workspace, which comes with customization options that let you organize your tasks in the way you like. You can customize the database properties to create your ideal workflow. It also gives you enough flexibility to create content from notes to full documents.&lt;/p&gt;

&lt;p&gt;For individual use, you can get Notion for free. You can share it with up to five guests and sync it across multiple devices. For unlimited guests and file uploads, you can pay $4 per month for the Personal Pro plan.&lt;/p&gt;

&lt;p&gt;If you want to bring Notion into your small team, you can get it for $8 per user per month. It boasts unlimited members, advanced permissions, admin tools, and more.&lt;/p&gt;

&lt;p&gt;All of the paid plans have free trial versions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asana"&gt;
  &lt;/a&gt;
  &lt;a href="https://asana.com/"&gt;Asana&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mnSzxes_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1UQ6cT8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mnSzxes_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1UQ6cT8.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Asana is a project management tool that helps businesses of all sizes hit deadlines and achieve goals. It has built-in automation that enables you to streamline processes, reduce errors, and deliver value faster.&lt;/p&gt;

&lt;p&gt;With Asana, you can keep all project-related documents in one place. This makes it easier to find project plans, files, feedback, and the like. You can see how much work each team member has across various projects. You can also streamline communication with your members, clients, and vendors.&lt;/p&gt;

&lt;p&gt;Asana is available for free. Whether for teams or personal use, you can manage your projects more effectively using its free version. For more robust capabilities, you can get the paid plans, starting at $10.99 per user per month.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jira"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.atlassian.com/"&gt;Jira&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--36etMeJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Hgq6J1T.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--36etMeJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Hgq6J1T.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Designed for software teams, Jira is the project management tool that can help you plan and release excellent software on schedule. It lets you distribute and track tasks across your team. By keeping everyone connected on a single platform, you can create smarter plans that can help you get work done faster and more effectively.&lt;/p&gt;

&lt;p&gt;Jira understands that every team has its unique process. On the platform, you can make your own workflow. You can also choose one that matches your needs.&lt;/p&gt;

&lt;p&gt;A small team of 10 can use Jira for free. It has agile reporting, customizable workflows, and basic roadmaps. If you want advanced capabilities, it has paid plans, starting at $7 per user per month.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrike"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://try.wrike.com/"&gt;Wrike&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jCzi4j3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0wdEkLK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jCzi4j3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0wdEkLK.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wrike uses interactive Gantt charts to help you schedule tasks. With a drag-and-drop interface, you can easily make adjustments to your charts and keep everyone up to date.&lt;/p&gt;

&lt;p&gt;One thing that sets it apart from other project management tools is its dashboard. You can pin important tasks on the dashboard, so you can focus on the most critical ones. You can even categorize them into different sections, such as New, In Progress, and Completed.&lt;/p&gt;

&lt;p&gt;If your team has five users, you can use Wrike for free. For growing organizations, there is a paid plan that costs $9.80 per user per month.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scoro"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.scoro.com/"&gt;Scoro&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_kcHewa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/5VjfjXa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_kcHewa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/5VjfjXa.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Built to help you manage every aspect of your business, Scoro is a powerful end-to-end solution built to boost productivity and profitability. This collaborative platform lets you and your entire team get work done efficiently.&lt;/p&gt;

&lt;p&gt;Aside from streamlining projects, Scoro lets you automate your quoting and billing process. It lets you keep track of sales and daily activities without having to shift between different tools and spreadsheets.&lt;/p&gt;

&lt;p&gt;Its Essential plan costs $26 per user per month, and it can support up to five users. You can try the tool for free for 14 days.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teamwork"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.teamwork.com/"&gt;Teamwork&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8FAl3_-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2fsffdh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FAl3_-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2fsffdh.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple yet powerful, Teamwork makes it possible for project managers to oversee complex projects. On the platform, you can create projects, assign tasks, upload documents, write comments, and more. Not only that, but it also lets you measure how long each task takes so you can be smart about project planning and prevent burnout.&lt;/p&gt;

&lt;p&gt;Teamwork has a free version, which is suitable for individuals and small teams. As you start handling multiple projects, you can turn to their paid plans, which start at $10 per user per month.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Organization is one of the key roles founders must take on. These project management tools can help you keep track of your entire team‚Äôs tasks in one place. The right tool can also help you improve productivity and communication and create a better business without burning a hole in your pocket.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Project ideas that can be done in 4 hours or less?</title>
      <author>Dan Stockham</author>
      <pubDate>Thu, 03 Jun 2021 15:00:10 +0000</pubDate>
      <link>https://dev.to/danstockham/project-ideas-that-can-be-done-in-4-hours-or-less-3f0n</link>
      <guid>https://dev.to/danstockham/project-ideas-that-can-be-done-in-4-hours-or-less-3f0n</guid>
      <description>&lt;p&gt;A friend of mine approached about coming up with ideas to live stream to his audience. I suggested to build small projects that could finished within a single session like code katas.&lt;/p&gt;

&lt;p&gt;Is there any code katas or small projects that people suggest that be built in 4 hours or less?&lt;/p&gt;

</description>
      <category>help</category>
      <category>katas</category>
    </item>
    <item>
      <title>Self-hosting software &amp; why it may be worth considering again now</title>
      <author>Ankit Anand</author>
      <pubDate>Thu, 03 Jun 2021 14:57:48 +0000</pubDate>
      <link>https://dev.to/signoz/self-hosting-software-why-it-may-be-worth-considering-again-now-454l</link>
      <guid>https://dev.to/signoz/self-hosting-software-why-it-may-be-worth-considering-again-now-454l</guid>
      <description>&lt;p&gt;I can hear your mind wheels spinning -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;What‚Äôs this blasphemy? Isn‚Äôt SaaS the end of all evils - why are you asking me to think about keeping data in your infrastructure?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, well - allow me to explain. SaaS is the greatest thing after sliced bread, if you are a small startup. You don‚Äôt care about where your data is, privacy and security is not something which you are concerned about right now. You just want to move fast and break things!&lt;/p&gt;

&lt;p&gt;But not all companies are born equal, and not all industries are the same in terms of the sensitivity of data they handle. And as you mature as a company, you need to be more careful of how you handle your critical data.&lt;/p&gt;

&lt;p&gt;For example, if you are a fast growing fin-tech company working with a number of banking APIs and enabling hundreds of financial transactions daily, you better keep your data within your infra or at least within the same cloud where the rest of your data is. You can‚Äôt use a SaaS service which has its servers in the USA while you are in India, otherwise your auditors will come after you. Especially if it contains data which can potentially have customer information like traces or logs.&lt;/p&gt;

&lt;p&gt;In the observability domain, traces and logs are something which you don‚Äôt want to send outside. Unless you have great PII scrapers running before sending data outside, and well we all know it is not easy to create PII scrapers which work with 100% accuracy. So even if you have PII scrapers, why do you want to take the risk of some tiny bit of customer data leaking - and you inviting the fury of your legal and audit teams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GfVILwco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkhmc2akeqg9sriejwrj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GfVILwco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkhmc2akeqg9sriejwrj.jpeg" alt="Graph showing how companies run monitoring services. 60% of companies run it within their infra"&gt;&lt;/a&gt;&lt;/p&gt;
60% of companies run monitoring &amp;amp; logging within their infra &lt;a href="https://www.cncf.io/wp-content/uploads/2020/11/CNCF_Survey_Report_2020.pdf"&gt;(CNCF Report)&lt;/a&gt;



&lt;p&gt;&lt;br&gt;There are few other reasons also which should at the very least encourage you to think about this option&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Increase in privacy laws like GDPR/CPRA&lt;/li&gt;
&lt;li&gt;Flexibility of configuration as you are not crossing the Internet boundary every time&lt;/li&gt;
&lt;li&gt;Data egress cost&lt;/li&gt;
&lt;li&gt;Data breaches&lt;/li&gt;
&lt;li&gt;More control - Some teams just like more control of the software running, not depend upon scheduled maintenance &amp;amp; downtimes of SaaS products. What if you have a critical release coming up, and there is a downtime&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let us examine few of these in more detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#privacy-laws"&gt;
  &lt;/a&gt;
  Privacy Laws
&lt;/h3&gt;

&lt;p&gt;The General Data Protection Regulation (GDPR) came into effect in May 2018 and has been an essential step in strengthening citizens‚Äô fundamental rights in the current Digital Revolution, and monitoring businesses, and preventing these companies from misusing data for their capital gains which puts the user at risk.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;California Privacy Regulation Act (CPRA)&lt;/em&gt; is another privacy law which will impose more privacy requirements around sharing user data with 3rd party vendors. From 2023, users can opt-out of their data being shared to 3rd party vendors ( including vendors like DataDog, Google Analytics, etc.). If you are using a 3rd party monitoring tool, you have to scrub your observability data before sending it to them.&lt;/p&gt;

&lt;p&gt;Since, you won't have complete visibility into what is happening in your software infra now, how will you debug it when a critical issue comes &amp;amp; management is breathing down your neck to fix it - like yesterday?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-breaches"&gt;
  &lt;/a&gt;
  Data breaches
&lt;/h3&gt;

&lt;p&gt;Cloud vendors are a honeypot for security breaches, as hacking a single SaaS vendor will give hackers access to critical data of many companies. You don‚Äôt know if your data also gets breached because hackers hacked a SaaS provider for accessing another of their customers. Many times there‚Äôs no clear isolation between data of different companies.&lt;/p&gt;

&lt;p&gt;If you are using 100 SaaS vendors, and each has only 0.5% chance of having a security breach, then you have 1 - (0.995)^100 = ~40% chance of having a security breach.&lt;/p&gt;

&lt;p&gt;Are all your SaaS vendors equally well secure?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-egress-cost"&gt;
  &lt;/a&gt;
  Data egress cost
&lt;/h3&gt;

&lt;p&gt;This is something which many engineering teams are not aware about, as this is just a line item in your AWS/GCP bill which few people give attention to. But if you are sending huge amount of monitoring/logging data to a SaaS vendor, this line item will soon start rearing its head.&lt;/p&gt;

&lt;p&gt;AWS charges for transfer that send data out over the internet are billed at   region-specific and tiered data transfer rates. If you are sending 10 TB in a month to Internet, just this would add 900 USD to your monthly bill.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V2BTzdcw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot5ljsdszgkqnb2cufku.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V2BTzdcw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot5ljsdszgkqnb2cufku.jpg" alt="Data transfer pricing of AWS"&gt;&lt;/a&gt;AWS data transfer pricing&lt;/p&gt;

&lt;p&gt;Grant Miller, CEO of Replicated recently wrote an interesting blog on why modern on-prem delivery model is a much better software delivery model than SaaS.&lt;/p&gt;

&lt;p&gt;If you think about it, SaaS was a welcome change from the world of legacy on-prem software deployment in early 2000s. You would need to buy costly hardware, the annual licenses to start running with your software and then employ consultants to actually get the software up and running. The whole process would easily take 3-6 months - and this is when everything  runs on time. Then there would be annual ritual of upgrading the software which would be another pain in the a***.&lt;/p&gt;

&lt;p&gt;Understandably, SaaS was a welcome change in this world.&lt;/p&gt;

&lt;p&gt;But with the coming of new cloud native technologies and Kubernetes, this process has become much more simpler. You can install a software today by running&lt;/p&gt;

&lt;p&gt;&lt;em&gt;kubectl deploy&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;and to upgrade the software you just need to update the Helm charts and deploy again.&lt;/p&gt;

&lt;p&gt;And when this gives you advantages of privacy, security and more control as discussed about, why not at least give some serious thought to it.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
If you need more social proof to give more thought into this, here's  Elon Musk tweeting about how Tesla ONLY uses "internal &amp;amp; open source software"


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Li7we_SN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1383184766959120385/MM9DHPWC_normal.jpg" alt="Elon Musk profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Elon Musk
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/elonmusk"&gt;@elonmusk&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Tesla is using only internal &amp;amp; open source software &amp;amp; operates Bitcoin nodes directly.&lt;br&gt;&lt;br&gt;Bitcoin paid to Tesla will be retained as Bitcoin, not converted to fiat currency.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:09 AM - 24 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1374619379929772034" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1374619379929772034" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1374619379929772034" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;If the above made any tiny bit of sense, check out SigNoz, which is an open-source, self host-able alternative to application monitoring products like DataDog. Give it a whirl and let us know what you think!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. üî• üñ•
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developer monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;üëâ You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;üëâ You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
üëá Features:&lt;/h3&gt;


&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>docker</category>
      <category>devops</category>
      <category>monitoring</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>Login Form With Validation Using HTML &amp; JS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Thu, 03 Jun 2021 14:53:19 +0000</pubDate>
      <link>https://dev.to/nikhil27b/login-form-with-validation-using-html-js-2mo6</link>
      <guid>https://dev.to/nikhil27b/login-form-with-validation-using-html-js-2mo6</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;Today I created a Amazing Login Form With Validation Using HTML &amp;amp; JS. This is a simple form have with validation. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/wvMZOqV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Python | Master Multiple Threads</title>
      <author>Vitto Rivabella</author>
      <pubDate>Thu, 03 Jun 2021 14:51:38 +0000</pubDate>
      <link>https://dev.to/vittorivabella/python-master-multiple-threads-54el</link>
      <guid>https://dev.to/vittorivabella/python-master-multiple-threads-54el</guid>
      <description>&lt;p&gt;There are situations where sequentially processing different logics in &lt;strong&gt;python&lt;/strong&gt; becomes a time-consuming task with no apparent reason other than waiting for your single thread to wait or perform an operation.&lt;/p&gt;

&lt;p&gt;Here's where &lt;strong&gt;parallel computing&lt;/strong&gt; and &lt;strong&gt;multithreading&lt;/strong&gt; comes in handy.&lt;/p&gt;

&lt;p&gt;Before digging too deep into the multithreading world, let's give a bit of context on how we differentiate different computational parallelisms and operations:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#io-bound-vs-cpu-bound"&gt;
  &lt;/a&gt;
  I/O Bound vs CPU Bound
&lt;/h3&gt;

&lt;p&gt;Briefly, I/O Bound concerns things such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Downloading / Uploading data from the internet.&lt;/li&gt;
&lt;li&gt;Importing a file.&lt;/li&gt;
&lt;li&gt;Loading something.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tasks that have very little to no effect on the CPU&lt;/p&gt;

&lt;p&gt;On the other side we have operations with an average or higher effect on the CPU:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resizing files.&lt;/li&gt;
&lt;li&gt;Expressions and Complex math logics.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to read more about I/O bound and CPU Bound actions:&lt;br&gt;
*&lt;a href="https://stackoverflow.com/questions/868568/what-do-the-terms-cpu-bound-and-i-o-bound-mean#:~:text=A%20program%20is%20CPU%20bound,the%20CPU%20(doing%20calculations).&amp;amp;text=A%20program%20is%20I%2FO,I%2FO%20subsystem%20was%20faster."&gt;CPU Vs I/O bound thread on Stackoverflow&lt;/a&gt;&lt;br&gt;
*&lt;a href="https://www.hellsoft.se/understanding-cpu-and-i-o-bound-for-asynchronous-operations/"&gt;Understanding CPU and I/O bound for asynchronous operations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we know the main differences between:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;I/O Bound&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CPU Bound&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's talk about the two main ways of running parallel computational efforts and how Python has been designed to perform such a task.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#multiprocessing-and-multithreading-in-python"&gt;
  &lt;/a&gt;
  Multiprocessing and MultiThreading in Python
&lt;/h3&gt;

&lt;p&gt;When we talk about: "Running parallel CPU Bound operations", we're talking about &lt;strong&gt;MultiPocessing&lt;/strong&gt;.&lt;br&gt;
When we're talking about "Running parallel I/O Bound operations", we're talking about &lt;strong&gt;MultiThreading&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU Bound -&amp;gt; Multiprocessing&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I/O Bound -&amp;gt; MultiThreading&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those are two different things, but why?&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#python-global-interpreter-lock"&gt;
  &lt;/a&gt;
  Python Global Interpreter Lock
&lt;/h3&gt;

&lt;p&gt;Python is a linear language, hence by default uses a single thread ran under a &lt;strong&gt;GIL&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Python Global Interpreter Lock&lt;/strong&gt;, or GIL, is a &lt;strong&gt;mutex&lt;/strong&gt; (a lock) that allows only one thread to hold the control of the Python interpreter. Hence, &lt;strong&gt;only one thread can be in a state of execution&lt;/strong&gt; at any point in time, even on a multi-thread (multiple CPU cores) architecture.&lt;/p&gt;

&lt;p&gt;Now, I won't go too deep on why &lt;strong&gt;Larry Hasting&lt;/strong&gt; and his team, while creating Python, went for such a design choice, you should just know that it has been made to protect us from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Deadlocking&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reference count variable&lt;/strong&gt; (variables that store reference count to objects) &lt;strong&gt;corruption&lt;/strong&gt; due to multiple concurrent modifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And works by creating a single lock on the interpreter which adds a rule that states &lt;em&gt;"The execution of any Python bytecode requires acquiring the interpreter lock."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By doing that we're solving deadlocks while locking the different reference count variables.&lt;/p&gt;

&lt;p&gt;At the same time, unfortunately, we're effectively making any &lt;strong&gt;CPU bound logic single-threaded&lt;/strong&gt;, because: While I/O bound operations commonly spend the greatest part of their computational time &lt;strong&gt;waiting&lt;/strong&gt;, giving them the ability to &lt;strong&gt;share the Global Lock "interactively"&lt;/strong&gt;, CPU-bound operation, are performing actions, preventing them from doing the same.&lt;/p&gt;

&lt;p&gt;*That's why the GIL has also gained a reputation as an "infamous" feature of Python. *&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=KVKufdTphKs&amp;amp;t=731s"&gt;Here's a cool video you might want to watch on the subject, featuring Larry himself&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And some &lt;a href="https://realpython.com/python-gil/"&gt;further resources about the GIL in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, we won't dig too deep into &lt;strong&gt;Multiprocessing&lt;/strong&gt;, but we will explore different ways to implement &lt;strong&gt;MultiThreading&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementing-multithreading-in-python"&gt;
  &lt;/a&gt;
  Implementing MultiThreading in Python
&lt;/h2&gt;

&lt;p&gt;Is pretty simple, but is important to understand how the &lt;strong&gt;resolution queue&lt;/strong&gt; works, and that there are different methods to implement such logic.&lt;/p&gt;

&lt;p&gt;Let's now demonstrate MultiThreading creating a simple thread that executes a simple sleep function, to then print the total execution time of our code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import threading
import time

start_time = time.perf_counter()

def do_something():
    print("Sleeping for 2 second(s)...")
    time.sleep(2)


temp_thread = threading.Thread(target=do_something)
temp_thread.start()


finish_time = time.perf_counter()

print(f"CODE_EXECUTION_TIME: {round(finish_time - start_time, 2)}s")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CODE_EXECUTION_TIME: 0.0s
Finished sleeping for 2 second(s)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see the print output resolves before the &lt;strong&gt;do_something&lt;/strong&gt; function, because the main thread ends before the secondary thread, running the print function before the do_something() function awakes.&lt;/p&gt;

&lt;p&gt;By importing the threading library and creating a new thread we're essentially forking the main thread, resolving two parallel efforts at the same time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUonYOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o87qhfaaffr8aqlz1xs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUonYOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o87qhfaaffr8aqlz1xs.jpg" alt="Fork_join"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When created we also need to bind the thread to logic, in this case: do_something(). To do so, we pass the target argument.&lt;/p&gt;

&lt;p&gt;Another thing to notice is that we would maybe want to print the total execution time of our code and not only the one of the main thread, essentially joining both threads. To do so we can add &lt;strong&gt;temp_thread.join()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import threading
import time

start_time = time.perf_counter()

def do_something(seconds):
    print(f"Sleeping for {seconds} second(s)...")
    time.sleep(seconds)



temp_thread = threading.Thread(target=do_something, args = [2])
temp_thread.start()
temp_thread.join()

finish_time = time.perf_counter()

print(f"CODE_EXECUTION_TIME: {round(finish_time - start_time, 2)}s")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sleeping for 2 second(s)...
CODE_EXECUTION_TIME: 2.0s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By adding the join() statement to the thread, we're waiting for the thread to resolve before proceeding with resolving the main thread.&lt;/p&gt;

&lt;p&gt;To further explore the resolution queue of different threads let's create a number of them passing to do_something() a "seconds" argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import threading
import time

start_time = time.perf_counter()

def do_something(seconds):
    print(f"Sleeping for {seconds} second(s)...")
    time.sleep(seconds)


seconds = [3,2,1]
threads = []

for second in seconds:
    temp_thread = threading.Thread(target=do_something, args = [second])
    temp_thread.start()
    threads.append(temp_thread)

for thread in threads:
    thread.join()   

finish_time = time.perf_counter()

print(f"CODE_EXECUTION_TIME: {round(finish_time - start_time, 2)}s")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sleeping for 3 second(s)...
Sleeping for 2 second(s)...
Sleeping for 1 second(s)...
CODE_EXECUTION_TIME: 3.0s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, in the above code, we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Created a list called seconds&lt;/li&gt;
&lt;li&gt;Created a list of threads&lt;/li&gt;
&lt;li&gt;Added the argument "seconds" to the thread constructor&lt;/li&gt;
&lt;li&gt;Looped through the list passing second in seconds and appending each thread to the threads list&lt;/li&gt;
&lt;li&gt;Joined every thread to the main one in a secondary loop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have created a threads list because we &lt;strong&gt;couldn't join them directly&lt;/strong&gt; in the first loop. Doing so would have caused the code to wait for the resolution of the just created thread resulting in a &lt;strong&gt;synchronous behavior&lt;/strong&gt;, hence we create a secondary loop that joins all the threads altogether.&lt;/p&gt;

&lt;p&gt;As you can see the total time execution on a single-threaded python program would have resulted in a waiting time of 6 seconds, using multithreading we needed just 3s.&lt;/p&gt;

&lt;p&gt;One problem raises here, &lt;em&gt;how can we use the return value of a function bound to a secondary thread?&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-the-concurrentfutures-module-to-handle-multithreading"&gt;
  &lt;/a&gt;
  Using the concurrent.futures module to handle multithreading
&lt;/h3&gt;

&lt;p&gt;Using the thread library is not the only way to handle &lt;strong&gt;python multithreading&lt;/strong&gt;. &lt;br&gt;
A more handy way is the &lt;strong&gt;concurrent.futures module&lt;/strong&gt;, which is usually used along with a &lt;strong&gt;context manager&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Let's create a secondary thread:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import concurrent.futures

with concurrent.futures.ThreadPoolExecutor() as executor:
    temp_thread = executor.submit(do_something, 1)
print(temp_thread.result())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sleeping for 1 second(s)
Finished sleeping for 1 second(s) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Simple as that. &lt;br&gt;
We create a context manager to handle the &lt;strong&gt;ThreadPoolExecutor()&lt;/strong&gt; and given the do_something() function that we declared before, this code will create a &lt;strong&gt;new thread&lt;/strong&gt; (executor) binding a function and the argument(s).&lt;/p&gt;

&lt;p&gt;Also, the return statement of the executor.submit() method is an object called &lt;strong&gt;"future"&lt;/strong&gt; that contains the returned value of the bound function and is &lt;strong&gt;accessed via the .result() method&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As we've seen before, it's rare that we just want to create a single secondary thread, commonly we create multiple of them to resolve as many I/O bound tasks as possible.&lt;/p&gt;

&lt;p&gt;To do so we can use a &lt;a href="https://www.youtube.com/watch?v=3dt4OGnU5sM"&gt;&lt;strong&gt;list comprehension&lt;/strong&gt;&lt;/a&gt; or a simple for loop to create a list of &lt;strong&gt;futures&lt;/strong&gt; returned by the resolved executors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import concurrent.futures

seconds = [3,2,1]
with concurrent.futures.ThreadPoolExecutor() as executor:
    results = [executor.submit(do_something, sec) for sec in seconds]

for f in concurrent.futures.as_completed(results):
    print(f.result())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sleeping for 3 second(s)
Sleeping for 2 second(s)
Sleeping for 1 second(s)
Finished sleeping for 1 second(s) 
Finished sleeping for 2 second(s) 
Finished sleeping for 3 second(s)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Having a list of futures gives us the ability to use another concurrent.futures method:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;as_completed(arg)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That listens to the completion of the different list items and explains why start and end outputs are reversed. &lt;/p&gt;

&lt;p&gt;One last thing that is important to know is that by using the &lt;em&gt;concurrent.futures&lt;/em&gt; module we can map an executor over an iterable to perform a given logic.&lt;br&gt;
This will create as many threads as the length of the given iterable, returning a list of result values from the performed bound function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import concurrent.futures

seconds = [3,2,1]
with concurrent.futures.ThreadPoolExecutor() as executor:
    results = executor.map(do_something, seconds)


for r in results:
    print(r)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sleeping for 3 second(s)
Sleeping for 2 second(s)
Sleeping for 1 second(s)
Finished sleeping for 3 second(s) 
Finished sleeping for 2 second(s) 
Finished sleeping for 1 second(s)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the return values order reflects the thread creation order because map returns the result values in the order the threads were started. &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; map returns the result value and not a future object.&lt;/p&gt;

&lt;p&gt;This is all for this Master Threading in Python post! &lt;/p&gt;

&lt;p&gt;What would you want to read next?&lt;br&gt;
Drop me your feedback, questions, comments down here, and let me know your thoughts üëá&lt;/p&gt;

&lt;p&gt;And don't forget to &lt;a href="https://twitter.com/VittoRivabella"&gt;follow me on Twitter&lt;/a&gt; for a chat or some useful tweets!ü•ë&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>computerscience</category>
      <category>performance</category>
    </item>
    <item>
      <title>How to exclude password from mongoose mongodb</title>
      <author>Akshat Singhania</author>
      <pubDate>Thu, 03 Jun 2021 14:49:11 +0000</pubDate>
      <link>https://dev.to/akshatsinghania/how-to-exclude-password-from-mongoose-mongodb-2248</link>
      <guid>https://dev.to/akshatsinghania/how-to-exclude-password-from-mongoose-mongodb-2248</guid>
      <description>&lt;p&gt;While logging or registering the user , we generally return the user data , password or hashed password is also returned along with the data , we do not want to send the hashed password to frontend so how do we exclude.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#exclude-password-from-returned-object"&gt;
  &lt;/a&gt;
  exclude password from returned object
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#register"&gt;
  &lt;/a&gt;
  Register
&lt;/h2&gt;

&lt;p&gt;After creating user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createdUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;argon2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createdUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;responseUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createdUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_doc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;responseUser&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the ._doc contains the data like &lt;code&gt;email&lt;/code&gt; , &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;password&lt;/code&gt; which we specify in the schema&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#login"&gt;
  &lt;/a&gt;
  Login
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;argon2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;responseUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_doc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;responseUser&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;wrong password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We do the same thing but after finding the user&lt;/p&gt;

&lt;p&gt;Thanks for reading, hearts ‚ù§Ô∏è if you liked it and unicorns ü¶Ñ if you loved it, follow if you wanna read more awesome blogs&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>mongoose</category>
      <category>node</category>
      <category>auth</category>
    </item>
  </channel>
</rss>
