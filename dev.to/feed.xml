<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Jaeger and OpenTracing - Key concepts, use-cases and alternatives</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Thu, 30 Sep 2021 13:13:49 +0000</pubDate>
      <link>https://dev.to/signoz/jaeger-and-opentracing-key-concepts-use-cases-and-alternatives-4ek6</link>
      <guid>https://dev.to/signoz/jaeger-and-opentracing-key-concepts-use-cases-and-alternatives-4ek6</guid>
      <description>&lt;p&gt;Jaeger and OpenTracing are both open-source projects. Jaeger was originally built by teams at Uber and then open-sourced. The OpenTracing project was also started by teams at Uber, and hence they are compatible with each other. While Jaeger is an end-to-end distributed tracing tool, OpenTracing is a set of APIs and libraries that can be used to instrument your application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OpenTracing has officially merged with another open-source project called OpenCensus to form OpenTelemetry, which is emerging as the world standard for creating and managing telemetry data.&lt;br&gt;&lt;br&gt;
If you're looking for an open-source distributed tracing tool, your best option is &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; - a full-stack APM and observability tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Both projects aimed to solve the pain point of distributed tracing in microservice-based architecture. In a distributed microservice architecture, a single request or transaction can traverse through hundreds of different services. It becomes difficult for engineering teams to identify the exact causes of issues like latency in such a scenario. With distributed tracing, engineering teams can have a central overview of how requests perform across services.&lt;/p&gt;

&lt;p&gt;Let's see how Jaeger and OpenTracing play a role in implementing distributed tracing for your application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-jaeger"&gt;
  &lt;/a&gt;
  What is Jaeger?
&lt;/h2&gt;

&lt;p&gt;Jaeger is a popular open-source distributed tracing tool that was originally built by teams at Uber and then open-sourced. It is used to monitor and troubleshoot applications based on microservices architecture.&lt;/p&gt;

&lt;p&gt;It provides instrumentation libraries that were built on OpenTracing standard. For storing trace data, it supports two storage backends:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cassandra&lt;/li&gt;
&lt;li&gt;Elasticsearch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jaeger provides a minimal UI to analyze the trace data captured.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" alt="Jaeger's UI showing traces"&gt;&lt;/a&gt;Jaeger's UI showing traces for selected services&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-opentracing"&gt;
  &lt;/a&gt;
  What is OpenTracing?
&lt;/h2&gt;

&lt;p&gt;Opentracing was an initiative to enable vendor-neutral instrumentation for distributed tracing. The authors of the OpenTracing project wanted to provide a standard mechanism for instrumentation that does not bind any library or package to any specific vendor.&lt;/p&gt;

&lt;p&gt;The authors aimed to create standard instrumentation for all the middleware and the frameworks an application might use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aaasRBl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/opentracing_ecosystem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aaasRBl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/opentracing_ecosystem.png" alt='OpenTracing design"'&gt;&lt;/a&gt;How OpenTracing fits within an application architecture&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-jaeger-and-opentracing"&gt;
  &lt;/a&gt;
  Comparing Jaeger and OpenTracing
&lt;/h2&gt;

&lt;p&gt;From the description above, you might have a good idea about the differences between Jaeger and OpenTracing. The key difference between the two projects is their scope. While Jaeger is an end-to-end distributed tracing tool, OpenTracing was a project that aimed to standardize code instrumentation for generating and managing telemetry data. &lt;/p&gt;

&lt;p&gt;As such, if you're looking to enable distributed tracing, implementing Jaeger is a better option. You can also go with a full-stack open-source tool like &lt;a href="https://signoz.io/blog/jaeger-vs-signoz/"&gt;SigNoz&lt;/a&gt;. Key differences between Jaeger and OpenTracing can be summarised as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jaeger is an end-to-end distributed tracing tool, while OpenTracing is an instrumentation library&lt;/li&gt;
&lt;li&gt;Jaeger has a web UI component while you need to select an analysis backend tool while using a instrumentation library like OpenTracing&lt;/li&gt;
&lt;li&gt;Jaeger is an active &lt;a href="https://github.com/jaegertracing/jaeger" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;open-source project&lt;/b&gt;&lt;/a&gt;, while OpenTracing is no longer actively maintained as the project merged with OpenCensus to form &lt;a href="https://opentelemetry.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;OpenTelemetry&lt;/b&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;OpenTracing does not provide an option to store data, while Jaeger supports two popular open-source projects: Cassandra and ElasticSearch for storage&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#usecases-of-jaeger-and-opentracing"&gt;
  &lt;/a&gt;
  Use-cases of Jaeger and OpenTracing
&lt;/h2&gt;

&lt;p&gt;Both Jaeger and OpenTracing aim to solve the problem of distributed tracing for microservices but at different levels. Let us see the main use-cases of both these projects.&lt;/p&gt;

&lt;p&gt;The main use-cases of Jaeger as a distributed tracing tool are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distributed transaction monitoring&lt;/li&gt;
&lt;li&gt;Performance and latency optimization&lt;/li&gt;
&lt;li&gt;Root cause analysis&lt;/li&gt;
&lt;li&gt;Service dependency analysis&lt;/li&gt;
&lt;li&gt;Distributed context propagation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main use-cases of OpenTracing as a vendor-neutral API and instrumentation library are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;allows developers to instrument their own code without binding to any particular tracing vendor&lt;/li&gt;
&lt;li&gt;used for standardization of span management APIs&lt;/li&gt;
&lt;li&gt;used for active span management&lt;/li&gt;
&lt;li&gt;provides inter-process propagation APIs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#alternative-to-jaeger-and-opentracing"&gt;
  &lt;/a&gt;
  Alternative to Jaeger and OpenTracing
&lt;/h2&gt;

&lt;p&gt;As already mentioned, OpenTracing merged with OpenCensus into a single project called OpenTelemetry. OpenTelemetry is a set of API, SDKs, libraries, and integrations aiming to standardize the generation, collection, and management of telemetry data(logs, metrics, and traces). The data you collect with OpenTelemetry is vendor-agnostic and can be exported in many formats.&lt;/p&gt;

&lt;p&gt;The data collected with OpenTelemetry can also be sent to Jaeger's backend. But Jaeger is limited in terms of its UI and does only distributed tracing. For a robust monitoring and observability framework, you need a unified UI for both metrics and traces. And that's where SigNoz is far &lt;a href="https://signoz.io/blog/jaeger-vs-signoz/"&gt;more suited&lt;/a&gt; than Jaeger as a distributed tracing tool.&lt;/p&gt;

&lt;p&gt;SigNoz is a full-stack open-source application performance monitoring and observability tool which can be used in place of Jaeger. SigNoz is built to support OpenTelemetry natively. It also provides users flexibility in terms of storage. You can choose between ClickHouse or Kafka + Druid as your backend storage while installing SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BdjoEB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/SigNoz_architecture_clickhouse.png" alt="Architecture of SigNoz with OpenTelemetry and ClickHouse"&gt;&lt;/a&gt;Architecture of SigNoz with ClickHouse as storage backend and OpenTelemetry for code instrumentatiion&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box visualization of things like RED metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz UI showing the popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;Some of the things SigNoz can help you track:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Run aggregates on trace data&lt;/li&gt;
&lt;li&gt;Unified UI for both metrics and traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frequently-asked-question"&gt;
  &lt;/a&gt;
  Frequently asked question
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#what-is-opentracing-used-for"&gt;
  &lt;/a&gt;
  What is OpenTracing used for?
&lt;/h4&gt;

&lt;p&gt;OpenTracing is used for instrumenting application code for distributed tracing. It is now a part of &lt;a href="https://opentelemetry.io/"&gt;OpenTelemetry&lt;/a&gt;, which is emerging as a world standard for generating and managing telemetry data.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#how-to-get-started-with-opentracing"&gt;
  &lt;/a&gt;
  How to get started with OpenTracing?
&lt;/h4&gt;

&lt;p&gt;As OpenTracing is no longer maintained, the best option out there is OpenTelemetry, which is backed by all major cloud vendors like Google and Microsoft. The easiest way to get started with OpenTelemetry is to use &lt;a href="https://signoz.io/docs/architecture/"&gt;SigNoz&lt;/a&gt; - an open-source APM and observability tool. It uses OpenTelemetry natively to instrument application.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#what-languages-does-jaeger-support"&gt;
  &lt;/a&gt;
  What languages does Jaeger support?
&lt;/h4&gt;

&lt;p&gt;Jaeger client libraries are currently available in Go, Java, Node.js, Python, C++, C#.&lt;/p&gt;

</description>
      <category>monitoring</category>
      <category>opensource</category>
      <category>jaeger</category>
      <category>tracing</category>
    </item>
    <item>
      <title>Cherry-Pick Your Teammate's Changes Without Push 'n Pull-ing To Your Repo In VS Code</title>
      <author>Fred</author>
      <pubDate>Thu, 30 Sep 2021 13:08:40 +0000</pubDate>
      <link>https://dev.to/gitlive/cherry-pick-your-teammate-s-changes-without-push-n-pull-ing-to-your-repo-in-vs-code-10i9</link>
      <guid>https://dev.to/gitlive/cherry-pick-your-teammate-s-changes-without-push-n-pull-ing-to-your-repo-in-vs-code-10i9</guid>
      <description>&lt;p&gt;You asked your teammate for help with a piece of code and they showed you the solution in their editor. Now you need to fetch those changes. Usually, this would mean a series of tedious Git commands for both of you (not to mention that the changes will forever grace your git history), but no longer!&lt;/p&gt;

&lt;p&gt;In VS Code, open up the team tab by clicking on the GitLive icon on the activity bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PRzK4ucQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629992931732/x_9p_0gnW.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PRzK4ucQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629992931732/x_9p_0gnW.jpeg" alt="img-1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Click the arrow on the left-hand side of the teammate that helped you to see the repositories they have cloned, locate the one they made the changes to and click the arrow beside that too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rqMfg8vC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633003354512/q9sg8H__L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rqMfg8vC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633003354512/q9sg8H__L.png" alt="img-2-test (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, you can see the list of files changed by your teammate on their branch compared to the main branch. Files with dots next to the name contain changes made locally by your teammate that have not yet been pushed to the remote repository. &lt;/p&gt;

&lt;p&gt;Since we are only interested in their local changes, click the filter icon at the top of the team tab to filter to only the unpushed changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EqEhaCIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632996452570/wK-IygdOn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EqEhaCIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632996452570/wK-IygdOn.png" alt="img-3-final-full.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can see the single file that contains the solution we want to copy! Clicking on it will open a diff of the changes so we can make sure it contains only the changes we need. Now all we need to do is click the cherry icon next to the file in the team tab to cherry-pick the changes. And voilà - no need for any git push- or git pull -ing!&lt;/p&gt;

&lt;p&gt;You can also perform the cherry pick at the level above if you want to pick all changes from multiple files at once by clicking the cherry icon on the repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fO28jdBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630401071496/tFtt0RWJt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fO28jdBQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630401071496/tFtt0RWJt.png" alt="image-popup-5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can &lt;a href="https://marketplace.visualstudio.com/items?itemName=TeamHub.teamhub"&gt;find it here&lt;/a&gt;, and  if you want to learn more, check out &lt;a href="https://blog.git.live/gitlive-8-0-Cherry-picking-your-teammates-changes"&gt;this blog post&lt;/a&gt; or the &lt;a href="https://docs.git.live/docs/cherrypicking/"&gt;GitLive docs&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>vscode</category>
      <category>programming</category>
      <category>webdev</category>
      <category>git</category>
    </item>
    <item>
      <title>Making Better Components With Storybook</title>
      <author>Milecia</author>
      <pubDate>Thu, 30 Sep 2021 12:39:17 +0000</pubDate>
      <link>https://dev.to/flippedcoding/making-better-components-with-storybook-4bdm</link>
      <guid>https://dev.to/flippedcoding/making-better-components-with-storybook-4bdm</guid>
      <description>&lt;p&gt;When you're working on large projects, it can help to have reusable components to handle the same functionality across different views. This saves time on writing code, makes it easier to maintain apps with many views, and can even lead to components that are usable in different projects.&lt;/p&gt;

&lt;p&gt;There are a few different ways to do this and we'll be taking a look at component-driven development and one of the tools you can use to help with that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-background-on-componentdriven-development"&gt;
  &lt;/a&gt;
  Quick background on component-driven development
&lt;/h2&gt;

&lt;p&gt;Component-driven development is when you create independent components. So your components aren't tied to any particular data, APIs, or other functionality. They can stand alone on their own and you work with them however you need at the time.&lt;/p&gt;

&lt;p&gt;Some common components you'll see created like this include dropdowns, buttons, and containers. Building your components independently of each other can help you model your system better because you can drop in the pieces you need.&lt;/p&gt;

&lt;p&gt;You'll even be able to write better tests for your apps because you can test components with more simple mock data. It also makes it clearer to find issues since you can test everything in isolation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-storybook-comes-in"&gt;
  &lt;/a&gt;
  Where Storybook comes in
&lt;/h2&gt;

&lt;p&gt;This is where a tool like &lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; comes in. It lets you develop your components in isolation from the rest of the app. That means you can test components without connecting to a server or running all of the functionality in the app.&lt;/p&gt;

&lt;p&gt;Storybook starts up its own process to let you interact with components and demonstrate how components should work. Something else it helps with is the documentation for your apps.&lt;/p&gt;

&lt;p&gt;You'll be able to add descriptions for props that are passed to components, explain how the component changes under different conditions, and check for accessibility issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generating-a-redwood-app"&gt;
  &lt;/a&gt;
  Generating a Redwood app
&lt;/h2&gt;

&lt;p&gt;Now that you know a bit about component-driven development and Storybook, let's see how it actually works. We'll do this with a new Redwood app since it comes with Storybook integration by default.&lt;/p&gt;

&lt;p&gt;You can make a new app by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn create redwood-app storybook-component
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make a new Redwood project with several files and directories generated for us. While our focus will be in the &lt;code&gt;web&lt;/code&gt; directory, it's good to note that the &lt;code&gt;api&lt;/code&gt; directory is where your database connection and GraphQL server will live.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-new-page"&gt;
  &lt;/a&gt;
  A new page
&lt;/h3&gt;

&lt;p&gt;The front-end is where we'll be focused, so let's start by adding a new page to the app. Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn rw g page display /
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a new page called &lt;code&gt;DisplayPage&lt;/code&gt; in the &lt;code&gt;web &amp;gt; src &amp;gt; pages&lt;/code&gt; directory. We'll use this page to display a video to the user, kind of like if they went to a page on YouTube.&lt;/p&gt;

&lt;p&gt;Before we add the video component, let's take a look at what we have in Storybook just from our Redwood commands. So we'll start up Storybook with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn rw storybook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should start up Storybook and you should see something like this in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5POc6qeg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jesse-thisdot/image/upload/v1628209526/e-603fc55d218a650069f5228b/j18xgurxczkffvigncoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5POc6qeg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jesse-thisdot/image/upload/v1628209526/e-603fc55d218a650069f5228b/j18xgurxczkffvigncoi.png" alt="display page component in Storybook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you look in &lt;code&gt;web &amp;gt; src &amp;gt; pages &amp;gt; DisplayPage&lt;/code&gt;, you'll see the &lt;code&gt;DisplayPage.stories.js&lt;/code&gt; file. This is the type of file Storybook will be looking for to render individual components. The Storybook page will render the &lt;code&gt;DisplayPage&lt;/code&gt; component exactly like it's written. Here's what the story page should look like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;DisplayPage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./DisplayPage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DisplayPage&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pages/DisplayPage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A couple of things to note for the &lt;code&gt;stories.js&lt;/code&gt; file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The name of the exported component is &lt;code&gt;generated&lt;/code&gt; and that's the title of this particular view in the story. This name could be anything else you see fit. We'll go into more detail on story views in just a bit.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;title&lt;/code&gt; that's part of the export is how components and different views are grouped in Storybook. The directory format defines the group name and the component name for the tab in that group.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Redwood generates this basic file by default so all we have to do is update it.&lt;/p&gt;

&lt;p&gt;To get a better feel for writing stories, let's make a component for the video that gets shown to the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-a-new-component"&gt;
  &lt;/a&gt;
  Making a new component
&lt;/h3&gt;

&lt;p&gt;We'll run the following command to create the video component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn rw g component video
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will create three new files in the &lt;code&gt;web &amp;gt; src &amp;gt; component&lt;/code&gt; directory. We have the &lt;code&gt;Video.js&lt;/code&gt; file that holds the actual video component. Then there's the &lt;code&gt;Video.stories.js&lt;/code&gt; file that holds the Storybook story. Lastly, there's the &lt;code&gt;Video.test.js&lt;/code&gt; file that holds the tests for this component.&lt;/p&gt;

&lt;p&gt;Let's modify the existing code to render a video element with several props that are passed in. So in &lt;code&gt;web &amp;gt; src &amp;gt; component &amp;gt; Video.js&lt;/code&gt;, you can delete the existing code and paste the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;videoSrc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controls&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;videoSrc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;video/mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="nx"&gt;does&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;support&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/video&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Video&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where the beauty of Storybook comes in. We're not going to worry about adding this component to the &lt;code&gt;DisplayPage&lt;/code&gt; while we're developing it. We're going to use the story page to test and document how the &lt;code&gt;Video&lt;/code&gt; component works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#updating-the-story"&gt;
  &lt;/a&gt;
  Updating the story
&lt;/h2&gt;

&lt;p&gt;Since we have the &lt;code&gt;Video&lt;/code&gt; component ready to play with, we can switch over to the &lt;code&gt;Video.stories.js&lt;/code&gt; file and start writing new pieces to the story.&lt;/p&gt;

&lt;p&gt;The first thing we'll do is update the &lt;code&gt;generated&lt;/code&gt; view. We'll rename it to &lt;code&gt;index&lt;/code&gt; because it will act as the starting point for working with the &lt;code&gt;Video&lt;/code&gt; component and it'll have more documentation than the other views we'll add.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;There&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;several&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sets&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sets&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="na"&gt;videoSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sets&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sets&lt;/span&gt; &lt;span class="nx"&gt;whether&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="nx"&gt;controls&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;shown&lt;/span&gt; &lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Video&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;320&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;240&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;videoSrc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://res.cloudinary.com/milecia/video/upload/v1606580790/elephant_herd.mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we've defined the props that are passed into the &lt;code&gt;Video&lt;/code&gt; component and we have an example of the component in use. If you check back in the browser, you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QR_NS-HL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jesse-thisdot/image/upload/v1628211472/e-603fc55d218a650069f5228b/vqrdqgitw39odc5kqfxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QR_NS-HL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jesse-thisdot/image/upload/v1628211472/e-603fc55d218a650069f5228b/vqrdqgitw39odc5kqfxt.png" alt="video component in Storybook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many times you'll have different use cases for the same component and Storybook can help you look at those individually as well. To handle passing props to different use case views, we have to introduce &lt;code&gt;args&lt;/code&gt; into our story. We'll do that by adding the following template in &lt;code&gt;Video.stories.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Video&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will let us pass different props to the &lt;code&gt;Video&lt;/code&gt; component for each view we make. We'll make a default view, a large view, and a view with no controls. Add the following code below the &lt;code&gt;index&lt;/code&gt; view we made earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({})&lt;/span&gt;
&lt;span class="nx"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;240&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;320&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;videoSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://res.cloudinary.com/milecia/video/upload/v1606580790/elephant_herd.mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Large&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({})&lt;/span&gt;
&lt;span class="nx"&gt;Large&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;840&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1020&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;videoSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://res.cloudinary.com/milecia/video/upload/v1606580788/sea-turtle.mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NoControls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({})&lt;/span&gt;
&lt;span class="nx"&gt;NoControls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;560&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;840&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;videoSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://res.cloudinary.com/milecia/video/upload/v1606580790/elephant_herd.mp4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're using Cloudinary to store the videos and getting a URL to use as the source for the &lt;code&gt;Video&lt;/code&gt; component to keep things simple. You can &lt;a href="https://cloudinary.com/users/register/free"&gt;set up a free account&lt;/a&gt; and upload your own videos if you want to see something more interesting.&lt;/p&gt;

&lt;p&gt;We're binding the view to the &lt;code&gt;Template&lt;/code&gt; we created and that's how we're able to see them in the browser. You should see something like this now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQJjnYvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jesse-thisdot/image/upload/v1628212801/e-603fc55d218a650069f5228b/szzo4ojxez5dpb2jen6p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQJjnYvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jesse-thisdot/image/upload/v1628212801/e-603fc55d218a650069f5228b/szzo4ojxez5dpb2jen6p.png" alt="all of the video component views in Storybook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finished-code"&gt;
  &lt;/a&gt;
  Finished code
&lt;/h2&gt;

&lt;p&gt;You can take a look at the stories for the &lt;code&gt;Video&lt;/code&gt; and &lt;code&gt;DisplayPage&lt;/code&gt; components in &lt;a href="https://codesandbox.io/s/jovial-gates-g9k59"&gt;this Code Sandbox&lt;/a&gt; or you can clone the whole project from &lt;a href="https://github.com/flippedcoder/blog-examples/tree/main/storybook-component"&gt;the &lt;code&gt;storybook-component&lt;/code&gt; directory in this repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Developing components in isolation from the complete app can make it easier to catch bugs before they become issues and it can help give developers a better understanding of how the whole system works.&lt;/p&gt;

&lt;p&gt;Configuring Storybook in an existing project doesn't require much time, but it's a nice integration that already comes with Redwood. Whether you're working with multiple projects that depend on the same set of components or you're working with one large app that has a lot of components, using Storybook can help you with long-term maintenance and onboarding new engineers.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>storybook</category>
    </item>
    <item>
      <title>8 Open Source Projects to Contribute to - Hacktoberfest 2021</title>
      <author>Bobby Iliev</author>
      <pubDate>Thu, 30 Sep 2021 12:20:21 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/8-open-source-projects-to-contribute-to-hacktoberfest-2021-3o09</link>
      <guid>https://dev.to/bobbyiliev/8-open-source-projects-to-contribute-to-hacktoberfest-2021-3o09</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Hacktoberfest is a month-long event where people are awarded for contributing to open source projects 🙌.&lt;/p&gt;

&lt;p&gt;In order to participate you need to sign up &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;here&lt;/a&gt; and then Submit four pull requests (PRs) to a GitHub repo tagged with the &lt;code&gt;hacktoberfest&lt;/code&gt; label and redeem a Hacktoberfest shirt.&lt;/p&gt;

&lt;p&gt;For more information, you can find the official rules &lt;a href="https://hacktoberfest.digitalocean.com/resources"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-submit-your-first-pull-request-on-github"&gt;
  &lt;/a&gt;
  How to Submit Your First Pull Request on GitHub
&lt;/h1&gt;

&lt;p&gt;If you are new to Git and GitHub, make sure to go through this tutorial here on how to submit your first pull request:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/hacktoberfest-how-to-submit-your-first-pull-request-on-github"&gt;How to Submit Your First Pull Request on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, you can watch this Git and GitHub crash course on YouTube here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=UpdhourKi3c&amp;amp;list=PLY7SzAmnEqp7P6KHmBKBVNIjZkXMKh_fn&amp;amp;ab_channel=BobbyIliev"&gt;Introduction to Git and GitHub video series&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or you can also read this free eBook here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Introduction to Git and GitHub eBook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have the necessary Git and GitHub knowledge you are ready to start hacking! &lt;/p&gt;

&lt;p&gt;Here is a list with a few open-source projects that I maintain which you can contribute to!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tailwindcss-components"&gt;
  &lt;/a&gt;
  TailwindCSS Components
&lt;/h1&gt;

&lt;p&gt;The Tails Open Source Components are a (no-config) copy'n paste free collection of hand-crafted templates and components built in TailwindCSS:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thedevdojo"&gt;
        thedevdojo
      &lt;/a&gt; / &lt;a href="https://github.com/thedevdojo/tails"&gt;
        tails
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Tails Open Source Components are a (no-config) copy'n paste free collection of hand-crafted templates and components built in TailwindCSS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/676632fd13c74cc17f87c0e067c1631157b976a59b2533ffcd8529d55b33fe67/68747470733a2f2f63646e2e646576646f6a6f2e636f6d2f6173736574732f696d672f7461696c732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/676632fd13c74cc17f87c0e067c1631157b976a59b2533ffcd8529d55b33fe67/68747470733a2f2f63646e2e646576646f6a6f2e636f6d2f6173736574732f696d672f7461696c732e737667" height="80" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
💜 Tails - Open Source Components&lt;/h2&gt;
&lt;p&gt;The Tails Open Source Components are a (no-config) copy'n paste free collection of hand-crafted templates and components built in &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;TailwindCSS&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
💻 Tails - TailwindCSS Page Creator&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://devdojo.com/tailwindcss/components" rel="nofollow"&gt;Tails&lt;/a&gt; is the ultimate drag'n drop page creator built for TailwindCSS. Tails comes with over 190+ hand-crafted premium components to help you look pretty for your customers.&lt;/p&gt;
&lt;h2&gt;
🔗 Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/tails" rel="nofollow"&gt;TailwindCSS Drag'n Drop page creator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/tailwindcss/components" rel="nofollow"&gt;TailwindCSS Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/tailwindcss/playground" rel="nofollow"&gt;TailwindCSS Playground&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/tailwindcss/templates" rel="nofollow"&gt;TailwindCSS Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
⚡ Usage&lt;/h2&gt;
&lt;p&gt;It's pretty simple to use any of these components or templates in your project. Any component you wish to use can be copied and pasted into your own project. Visit the &lt;a href="https://devdojo.com/tailwindcss/components" rel="nofollow"&gt;Components&lt;/a&gt; page to view the components and view the source code. Additionally, you can view the &lt;a href="https://devdojo.com/tailwindcss/templates" rel="nofollow"&gt;Templates&lt;/a&gt; and simply copy and paste these templates into your own project.&lt;/p&gt;
&lt;h2&gt;
🤲 Contributing&lt;/h2&gt;
&lt;p&gt;🍿  Watch the quick 5 minute video below where you'll learn how to add…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thedevdojo/tails"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#larasail"&gt;
  &lt;/a&gt;
  LaraSail
&lt;/h1&gt;

&lt;p&gt;LaraSail is a CLI tool, written in Bash, for Laravel to help you do all of the necessary initial server setup on DigitalOcean:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thedevdojo"&gt;
        thedevdojo
      &lt;/a&gt; / &lt;a href="https://github.com/thedevdojo/larasail"&gt;
        larasail
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      LaraSail - Set Sail with your Laravel app on DigitalOcean
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2c523a6d435592528ca1c92301af87e7a649ba905e182500280a874ab8573bb0/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6c6172617361696c2f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2c523a6d435592528ca1c92301af87e7a649ba905e182500280a874ab8573bb0/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6c6172617361696c2f6c6f676f2e737667" width="300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
LaraSail&lt;/h1&gt;
&lt;p&gt;LaraSail is a CLI tool for Laravel to help you Sail the Servers of the DigitalOcean&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cfda45a6b3fc7c6a3c3ab58a76dd168f44aceca70ce06950d784f217ccbb306a/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6c6172617361696c2f6c6172617361696c2d636f6d6d616e642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cfda45a6b3fc7c6a3c3ab58a76dd168f44aceca70ce06950d784f217ccbb306a/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6c6172617361696c2f6c6172617361696c2d636f6d6d616e642e706e67"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll need a DigitalOcean Account before getting started (&lt;a href="https://m.do.co/c/6e2fb7e2925f" rel="nofollow"&gt;Signup here&lt;/a&gt;), then you'll need to create a New Droplet. Make sure to select Ubuntu Server:&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/67120b04da4aebc471746107db133ed21dfffe23744799dee4115f234cc4ff00/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6c6172617361696c2f7562756e74752d7365727665722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/67120b04da4aebc471746107db133ed21dfffe23744799dee4115f234cc4ff00/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6c6172617361696c2f7562756e74752d7365727665722e706e67"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;SSH into your server and run the following command:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;curl -sL https://github.com/thedevdojo/larasail/archive/master.tar.gz | tar xz &amp;amp;&amp;amp; source larasail-master/install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can make sure it's installed by running&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;larasail -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Setup Your Server&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;larasail setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default configuration will install Nginx, PHP 7.4, and MySQL 5.7. If you wish to use PHP 7.1, PHP 7.2, or PHP 7.3, you can include the argument &lt;code&gt;php71&lt;/code&gt;/&lt;code&gt;php72&lt;/code&gt;/&lt;code&gt;php73&lt;/code&gt; like so:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;larasail setup php71 # Install with PHP 7.1
larasail setup php72 # Install with PHP 7.2
larasail setup php73 # Install with PHP 7.3
larasail setup php80 # Install with PHP 8.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Database&lt;/h3&gt;
&lt;p&gt;By default, larasail will setup…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thedevdojo/larasail"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#laravel-wave"&gt;
  &lt;/a&gt;
  Laravel Wave
&lt;/h1&gt;

&lt;p&gt;Wave is a Software as a Service Starter Kit that can help you build your next great idea 💰. Wave is built with Laravel, Voyager, TailwindCSS, and a few other awesome technologies. Here are some of the awesome features ✨:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thedevdojo"&gt;
        thedevdojo
      &lt;/a&gt; / &lt;a href="https://github.com/thedevdojo/wave"&gt;
        wave
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Wave - The Software as a Service Starter Kit, designed to help you build the SAAS of your dreams 🚀 💰 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://devdojo.com/wave" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd40bc573d23939a802425e5c59173df2349e28960d553c95c7f2ac5b87b1071/68747470733a2f2f63646e2e646576646f6a6f2e636f6d2f6173736574732f696d672f6769746875622d776176652d6c6f676f2e737667" width="240"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/wave-2-0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3dd59d76171a19ca5915f09d1677a6634fe862210dd367f6452c6e7d0a7ff9cf/68747470733a2f2f63646e2e646576646f6a6f2e636f6d2f696d616765732f617072696c323032312f7570766f74652d70726f647563742d68756e742d696d672e706e67" height="auto" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://devdojo.com/wave" rel="nofollow"&gt;Wave&lt;/a&gt; is a Software as a Service Starter Kit that can help you build your next great idea 💰. Wave is built with &lt;a href="https://laravel.com" rel="nofollow"&gt;Laravel&lt;/a&gt;, &lt;a href="https://voyager.devdojo.com" rel="nofollow"&gt;Voyager&lt;/a&gt;, &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;TailwindCSS&lt;/a&gt;, and a few other awesome technologies. Here are some of the awesome features ✨:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/authentication" rel="nofollow"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-profiles" rel="nofollow"&gt;User Profiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-impersonation" rel="nofollow"&gt;User Impersonation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/billing" rel="nofollow"&gt;Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/subscription-plans" rel="nofollow"&gt;Subscription Plans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/user-roles" rel="nofollow"&gt;User Roles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/notifications" rel="nofollow"&gt;Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/announcements" rel="nofollow"&gt;Announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/blog" rel="nofollow"&gt;Fully Functional Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/api" rel="nofollow"&gt;Out of the Box API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/admin" rel="nofollow"&gt;Voyager Admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wave.devdojo.com/docs/features/themes" rel="nofollow"&gt;Customizable Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;View a live &lt;a href="https://wave.devdojo.com" rel="nofollow"&gt;demo here&lt;/a&gt;, or deploy your own instance to DigitalOcean, by clicking the button below.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.digitalocean.com/apps/new?repo=https://github.com/thedevdojo/wave/tree/main" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/df21703b4229f8d44f76c2d56073657a4ab450ca4566ba5d24d05bf528c298f8/68747470733a2f2f7777772e6465706c6f79746f646f2e636f6d2f646f2d62746e2d626c75652e737667" width="240" alt="Deploy to DO"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;To install Wave, you'll want to clone or download this repo:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/thedevdojo/wave.git project_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, we can install Wave with these &lt;strong&gt;4 simple steps&lt;/strong&gt;:&lt;/p&gt;
&lt;h3&gt;
1. Create a New Database&lt;/h3&gt;
&lt;p&gt;During the installation we need to use a MySQL database. You will need to create a new database and save the credentials for the next step.&lt;/p&gt;
&lt;h3&gt;
2. Copy the &lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thedevdojo/wave"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#git-and-github-ebook"&gt;
  &lt;/a&gt;
  Git and GitHub eBook
&lt;/h1&gt;

&lt;p&gt;This is an open-source introduction to Git and GitHub guide that will help you learn the basics of version control and start using Git for your SysOps, DevOps, and Dev projects. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you can use Git to track your code changes and collaborate with other members of your team or open source maintainers:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;
        introduction-to-git-and-github-ebook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Free Introduction to Git and GitHub eBook
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a58f83b0f278faaab4eb55e3b1db9be8bd9f5378018e369e46165e03d665acbb/68747470733a2f2f696d6775722e636f6d2f30797974494c342e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a58f83b0f278faaab4eb55e3b1db9be8bd9f5378018e369e46165e03d665acbb/68747470733a2f2f696d6775722e636f6d2f30797974494c342e706e67" height="450" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/5db7cfeffedfcdc3b858cbc3526f9923aece08f01083f49d943d20a7fcee692e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d6769742d616e642d6769746875622d65626f6f6b3f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/97f2b2f912926281ea6c6db428010b5761fc94e1b88b10d45502f7839f451994/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d6769742d616e642d6769746875622d65626f6f6b3f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/aab47185f74cd2ce04171b3b53832549e39ea6651324df57466093b1ef8f6db9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d6769742d616e642d6769746875622d65626f6f6b3f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/215788c1f63264b3e66aebf63d805f1a380b7961babe0b6654e09bce2bfe0b9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d4d61726b646f776e2d3166343235662e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/e0c71c21daa4c486f95b35582faa9c7e01187c51353935b86f19eaf911f04ae2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626f626279696c6965762f696e74726f64756374696f6e2d746f2d6769742d616e642d6769746875622d65626f6f6b3f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;
💡 Introduction to Git and GitHub&lt;/h2&gt;
&lt;p&gt;This is an open-source introduction to Git and GitHub guide that will help you learn the basics of version control and start using Git for your SysOps, DevOps, and Dev projects. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you can use Git to track your code changes and collaborate with other members of your team or open source maintainers.&lt;/p&gt;
&lt;p&gt;The guide is suitable for anyone working as a developer, system administrator, or a DevOps engineer and wants to learn the basics of Git, GitHub and version control in general.&lt;/p&gt;
&lt;h2&gt;
🚀 Download&lt;/h2&gt;
&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook/raw/main/ebook/en/export/introduction-to-git-and-github-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook/raw/main/ebook/en/export/introduction-to-git-and-github-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
📘 Chapters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;About the book&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Introduction to Git&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version Control&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Installing Git&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic Shell Commands&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git Configuration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Introduction to GitHub&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Initializing a Git project&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git Status&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git Add&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Git&lt;/strong&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#sql-basics-ebook"&gt;
  &lt;/a&gt;
  SQL Basics eBook
&lt;/h1&gt;

&lt;p&gt;This is an open-source introduction to SQL guide that will help you learn the basics of SQL and start using relational databases for your SysOps, DevOps, and Dev projects. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you will most likely have to use SQL at some point in your career:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;
        introduction-to-sql
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Free Introduction to SQL eBook
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5acc35f164b5cb373a05c99534cb565271518ff59aa2425804137cf7d78df987/68747470733a2f2f696d6775722e636f6d2f41616d43376d332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5acc35f164b5cb373a05c99534cb565271518ff59aa2425804137cf7d78df987/68747470733a2f2f696d6775722e636f6d2f41616d43376d332e706e67" height="450" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;&lt;img src="https://camo.githubusercontent.com/2342e9e8e3e322f98125f9179895f8668894cd9e5cd7a9551328bd3f3172ece1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d73716c3f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;&lt;img src="https://camo.githubusercontent.com/b49b9cf92f0b23719cb1587ef2e77ad0c3b7ca71f2f3281242d35933de1a6c7a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d73716c3f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;&lt;img src="https://camo.githubusercontent.com/a15f2dbe161eb53159b480a41eed987b04757f64fca3e3673c76e24fb28e0dcf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d73716c3f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;&lt;img src="https://camo.githubusercontent.com/215788c1f63264b3e66aebf63d805f1a380b7961babe0b6654e09bce2bfe0b9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d4d61726b646f776e2d3166343235662e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;&lt;img src="https://camo.githubusercontent.com/949354a75f346057e6d1e7e6b63f980a954609f8ac13b0b774bd9ec9d1f4d648/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626f626279696c6965762f696e74726f64756374696f6e2d746f2d73716c3f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;
💡 Introduction to SQL&lt;/h2&gt;
&lt;p&gt;This is an open-source introduction to SQL guide that will help you learn the basics of SQL and start using relational databases for your SysOps, DevOps, and Dev projects. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you will most likely have to use SQL at some point in your career.&lt;/p&gt;
&lt;p&gt;The guide is suitable for anyone working as a developer, system administrator, or a DevOps engineer and wants to learn the basics of SQL.&lt;/p&gt;
&lt;h2&gt;
🚀 Download&lt;/h2&gt;
&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql/raw/main/ebook/en/export/introduction-to-sql-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql/raw/main/ebook/en/export/introduction-to-sql-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
📘 Chapters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;About the book&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tables&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic Syntax&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SELECT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WHERE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ORDER and GROUP BY&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JOIN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The MySQL dump command&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
🌟 Sponsors&lt;/h2&gt;
&lt;p&gt;This book is made possible thanks to these fantastic companies!&lt;/p&gt;
&lt;h3&gt;
📊 Materialize&lt;/h3&gt;
&lt;p&gt;The Streaming Database for Real-time Analytics.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://materialize.com/" rel="nofollow"&gt;Materialize&lt;/a&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/introduction-to-sql"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#bash-scripting-ebook"&gt;
  &lt;/a&gt;
  Bash Scripting eBook
&lt;/h1&gt;

&lt;p&gt;This is an open-source introduction to Bash scripting guide/ebook that will help you learn the basics of Bash scripting and start writing awesome Bash scripts that will help you automate your daily SysOps, DevOps, and Dev tasks. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you can use Bash scripts to combine different Linux commands and automate boring and repetitive daily tasks, so that you can focus on more productive and fun things.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;
        introduction-to-bash-scripting
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Free Introduction to Bash Scripting eBook
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dcad209f7b0ec003e33643cd46305d2413f894427fe80437ae40e6b35c0eefc2/68747470733a2f2f696d6775722e636f6d2f655843634450702e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/dcad209f7b0ec003e33643cd46305d2413f894427fe80437ae40e6b35c0eefc2/68747470733a2f2f696d6775722e636f6d2f655843634450702e706e67" height="450" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;&lt;img src="https://camo.githubusercontent.com/45402c57942aec7b3b960881f4f6d57d913e363d242764942b4641c17fcb6121/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d626173682d736372697074696e673f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;&lt;img src="https://camo.githubusercontent.com/48b679b562108c234a710e16fd3b970753d77cc4ec2b064a2669b7febac580d2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d626173682d736372697074696e673f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;&lt;img src="https://camo.githubusercontent.com/d268d4ae3a593122eaa6205cf8d9722d9fad3d22751fdcc405c3faf08c0380e7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f626f626279696c6965762f696e74726f64756374696f6e2d746f2d626173682d736372697074696e673f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;&lt;img src="https://camo.githubusercontent.com/215788c1f63264b3e66aebf63d805f1a380b7961babe0b6654e09bce2bfe0b9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d4d61726b646f776e2d3166343235662e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;&lt;img src="https://camo.githubusercontent.com/4d404c5813a5da7fd7edb88624efe09d1557d5c6c8952b48706256cbc81e070a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626f626279696c6965762f696e74726f64756374696f6e2d746f2d626173682d736372697074696e673f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;
💡 Introduction to Bash Scripting&lt;/h2&gt;
&lt;p&gt;This is an open-source introduction to Bash scripting guide/ebook that will help you learn the basics of Bash scripting and start writing awesome Bash scripts that will help you automate your daily SysOps, DevOps, and Dev tasks. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you can use Bash scripts to combine different Linux commands and automate boring and repetitive daily tasks, so that you can focus on more productive and fun things.&lt;/p&gt;
&lt;p&gt;The guide is suitable for anyone working as a developer, system administrator, or a DevOps engineer and wants to learn the basics of Bash scripting.&lt;/p&gt;
&lt;h2&gt;
🚀 Download&lt;/h2&gt;
&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting/raw/main/ebook/en/export/introduction-to-bash-scripting-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting/raw/main/ebook/en/export/introduction-to-bash-scripting-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
📘 Chapters&lt;/h2&gt;
&lt;p&gt;The first 13 chapters would be purely focused on getting some solid Bash scripting foundations then the rest of the…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#laravel-tips-ebook"&gt;
  &lt;/a&gt;
  Laravel Tips eBook
&lt;/h1&gt;

&lt;p&gt;This is an open-source Laravel Tips and Tricks eBook that is a collection of my own notes that I've put together for myself throughout the years. You would more likely than not need many of those tips at some point in your career as a Laravel Developer:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;
        laravel-tips-and-tricks-ebook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Free Laravel Tips eBook
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/115178a540b114d5e6073ccf029fd355e756a9e3396f88da325414261da98248/68747470733a2f2f696d6775722e636f6d2f3059526b4e44682e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/115178a540b114d5e6073ccf029fd355e756a9e3396f88da325414261da98248/68747470733a2f2f696d6775722e636f6d2f3059526b4e44682e706e67" height="450" width="auto"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/7161bbd740a9cda85f2436a95327ecc7d1c7a2b03727bd5db578c0d488080f83/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626f626279696c6965762f6c61726176656c2d746970732d616e642d747269636b732d65626f6f6b3f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/6b28b433386fe15e31f4ca8bad3c35f4b9e1758c38de53ec379e7c054a47d2a8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f626f626279696c6965762f6c61726176656c2d746970732d616e642d747269636b732d65626f6f6b3f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/210549bb75e16fa6a2bef6cc9b611b99d949002effdd1c112ebe5add75f34a5f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f626f626279696c6965762f6c61726176656c2d746970732d616e642d747269636b732d65626f6f6b3f6c6f676f436f6c6f723d677265656e267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/215788c1f63264b3e66aebf63d805f1a380b7961babe0b6654e09bce2bfe0b9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d4d61726b646f776e2d3166343235662e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
        &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;&lt;img src="https://camo.githubusercontent.com/8d0abaf8d1d46080393aed4741a86e344447fc3463c55fa08acb2abf518755a6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626f626279696c6965762f6c61726176656c2d746970732d616e642d747269636b732d65626f6f6b3f7374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;
💡 Laravel Tips and Tricks eBook&lt;/h2&gt;
&lt;p&gt;This is an open-source &lt;code&gt;Laravel Tips and Tricks eBook&lt;/code&gt; that is a collection of my own notes that I've put together for myself throughout the years. You would more likely than not need many of those tips at some point in your career as a Laravel Developer.&lt;/p&gt;
&lt;p&gt;The guide is suitable for anyone working as a Laravel developer and would love to learn some random Laravel tips and tricks. You can read the chapters in this book in a random order as they are completely separate tips or tricks.&lt;/p&gt;
&lt;h2&gt;
🚀 Download&lt;/h2&gt;
&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook/raw/main/ebook/en/export/laravel-tips-and-tricks-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook/raw/main/ebook/en/export/laravel-tips-and-tricks-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
📘 Chapters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;About the book&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click" rel="nofollow"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-a-free-domain-name-for-your-laravel-project" rel="nofollow"&gt;How to get a free domain name for your Laravel project&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/8-awesome-vs-code-extensions-for-laravel-developers" rel="nofollow"&gt;8 Awesome VS Code Extensions for Laravel Developers&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-jetstream-and-how-to-get-started" rel="nofollow"&gt;What is Laravel Jetstream&lt;/a&gt;&lt;/strong&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#101-linux-commands-ebook"&gt;
  &lt;/a&gt;
  101 Linux commands eBook
&lt;/h1&gt;

&lt;p&gt;This is an open-source eBook with 101 Linux commands that everyone should know. &lt;/p&gt;

&lt;p&gt;This is a brand new eBook that I have been planning to write.&lt;/p&gt;

&lt;p&gt;I have added a list of commands but feel free to add new suggestions too!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bobbyiliev"&gt;
        bobbyiliev
      &lt;/a&gt; / &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebook"&gt;
        101-linux-commands-ebook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      101 Linux commands Open-source eBook
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
💻 101 Linux commands Open-source eBook&lt;/h2&gt;
&lt;p&gt;This is an open-source eBook with 101 Linux commands that everyone should know. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you will most likely have to use the terminal at some point in your career.&lt;/p&gt;
&lt;h2&gt;
List of commands:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/001-the-ls-command.md"&gt;001-the-ls-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/002-the-cd-command.md"&gt;002-the-cd-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/003-the-cat-tac-command.md"&gt;003-the-cat-tac-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/004-the-head-command.md"&gt;004-the-head-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/005-the-tail-command.md"&gt;005-the-tail-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/006-the-pwd-command.md"&gt;006-the-pwd-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/007-the-touch-command.md"&gt;007-the-touch-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/008-the-cal-command.md"&gt;008-the-cal-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/009-the-bc-command.md"&gt;009-the-bc-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/010-the-df-command.md"&gt;010-the-df-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/011-the-help-command.md"&gt;011-the-help-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/012-the-factor-command.md"&gt;012-the-factor-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/013-the-uname-command.md"&gt;013-the-uname-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/014-the-mkdir-command.md"&gt;014-the-mkdir-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/015-the-gzip-command.md"&gt;015-the-gzip-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/016-the-whatis-command.md"&gt;016-the-whatis-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/017-the-who-command.md"&gt;017-the-who-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/018-the-free-command.md"&gt;018-the-free-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/019-the-top-htop-command.md"&gt;019-the-top-htop-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/020-the-sl-command.md"&gt;020-the-sl-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/021-the-echo-command.md"&gt;021-the-echo-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/022-the-finger-command.md"&gt;022-the-finger-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/023-the-groups-command.md"&gt;023-the-groups-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/024-the-man-command.md"&gt;024-the-man-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/025-the-passwd-command.md"&gt;025-the-passwd-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/026-the-w-command.md"&gt;026-the-w-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/027-the-whoami-command.md"&gt;027-the-whoami-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/028-the-history-command.md"&gt;028-the-history-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/029-the-login-command.md"&gt;029-the-login-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/030-the-lscpu-command.md"&gt;030-the-lscpu-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/031-the-cp-command.md"&gt;031-the-cp-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/032-the-mv-command.md"&gt;032-the-mv-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/033-the-ps-command.md"&gt;033-the-ps-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/034-the-kill-command.md"&gt;034-the-kill-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/035-the-killall-command.md"&gt;035-the-killall-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/036-the-env-command.md"&gt;036-the-env-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/037-the-printenv-command.md"&gt;037-the-printenv-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/038-the-hostname-command.md"&gt;038-the-hostname-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/039-the-nano-command.md"&gt;039-the-nano-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/040-the-rm-command.md"&gt;040-the-rm-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/041-the-ifconfig-command.md"&gt;041-the-ifconfig-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/042-the-ip-command.md"&gt;042-the-ip-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/043-the-clear-command.md"&gt;043-the-clear-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/044-the-su-command.md"&gt;044-the-su-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/045-the-wget-command.md"&gt;045-the-wget-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/046-the-curl-command.md"&gt;046-the-curl-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/047-the-yes-command.md"&gt;047-the-yes-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/048-the-last-command.md"&gt;048-the-last-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO: &lt;a href="https://github.com/bobbyiliev/101-linux-commands-ebookebook/en/content/049-the-locate-command.md"&gt;049-the-locate-command.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TODO…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bobbyiliev/101-linux-commands-ebook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you have any questions make sure to check out the FAQ page &lt;a href="https://hacktoberfest.digitalocean.com/faq"&gt;here&lt;/a&gt; or reach out to me on Twitter: &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are a project maintainer share your project in the comments below! 🙌&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
      <category>tailwindcss</category>
      <category>devops</category>
    </item>
    <item>
      <title>Badges for the terminal - Dart Edition</title>
      <author>Keff</author>
      <pubDate>Thu, 30 Sep 2021 12:14:28 +0000</pubDate>
      <link>https://dev.to/nombrekeff/badges-for-the-terminal-dart-edition-2d93</link>
      <guid>https://dev.to/nombrekeff/badges-for-the-terminal-dart-edition-2d93</guid>
      <description>&lt;p&gt;Hey there! 👋&lt;/p&gt;

&lt;p&gt;A while back I created a little node-js library called &lt;a href="https://github.com/nombrekeff/cli-badges"&gt;&lt;code&gt;cli-badges&lt;/code&gt;&lt;/a&gt; for creating badges that you can print to the terminal. &lt;/p&gt;

&lt;p&gt;Yup, those nifty little things we all know and love. The ones we add to our READMEs in order to add some more information about the project, like the version, downloads, test coverage, etc... &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These thingies&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tc3tGCuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isbfcervlsfw5swv6a6s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tc3tGCuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isbfcervlsfw5swv6a6s.png" alt="Image of shields.io badges"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They ended up looking something like this when printed to the terminal:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--au_-Wj6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs1fjl8620c7gwa7zjpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--au_-Wj6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs1fjl8620c7gwa7zjpv.png" alt="Image of cli-badges output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whilst not the prettiest (as per usual in the terminal), it does the job. And in certain scenarios it can make for a better experience, like displaying tests results, test coverage, or any other information we could express in a key/value manner.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-the-port"&gt;
  &lt;/a&gt;
  Why the port?
&lt;/h2&gt;

&lt;p&gt;Like many other of my projects the reason usually is, that I was bored and wanted to code something up quickly. It has not been any different for this port. &lt;/p&gt;

&lt;p&gt;Another reason is, that when I initially released &lt;a href="https://github.com/nombrekeff/cli-badges"&gt;&lt;code&gt;cli-badges&lt;/code&gt;&lt;/a&gt; some other people in the community ported it to their prefered languages, like the &lt;a href="%5Bhaideralipunjabi%5D(https://github.com/haideralipunjabi/cli-badges)"&gt;python version&lt;/a&gt; made by &lt;a href="https://github.com/haideralipunjabi"&gt;haideralipunjabi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was bored today and as I'm recently using dart a lot (both professionally and for personal projects) I decided to port cli-badges to dart.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The result
&lt;/h2&gt;

&lt;p&gt;This is how it ended up working:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;failedBadge&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'failed'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;theme:&lt;/span&gt; &lt;span class="n"&gt;BadgeTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;successBadge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'success'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;skippedBadge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yellow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'skipped'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;  &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;
        &lt;span class="n"&gt;failedBadge&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;skippedBadge&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;successBadge&lt;/span&gt;
    &lt;span class="o"&gt;]),&lt;/span&gt;
&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above would output something similar to the terminal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QznHsri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/nombrekeff/cli-badges/raw/master/output-example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QznHsri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/nombrekeff/cli-badges/raw/master/output-example.png" alt="Example output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-repo"&gt;
  &lt;/a&gt;
  The repo
&lt;/h2&gt;

&lt;p&gt;It would be awesome if you could check the project out and give me and the project some feedback and love. 🥰 &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nombrekeff"&gt;
        nombrekeff
      &lt;/a&gt; / &lt;a href="https://github.com/nombrekeff/cli_badges_dart"&gt;
        cli_badges_dart
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Quirky little dart library for generating badges for cli apps.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#takeaways"&gt;
  &lt;/a&gt;
  Takeaways
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#named-constructors"&gt;
  &lt;/a&gt;
  Named constructors
&lt;/h3&gt;

&lt;p&gt;I love named constructors, they offer a nice way of adding multiple constructors that can have different default parameters. This can make your life as a developer quite a bit easier.&lt;/p&gt;

&lt;p&gt;In cli_badges I used named constructors for easily creating themed badges:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yellow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'skipped'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'skipped'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As opposed to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'skipped'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;theme:&lt;/span&gt; &lt;span class="n"&gt;BadgeTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yellow&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'skipped'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;message:&lt;/span&gt; &lt;span class="s"&gt;'2'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;theme:&lt;/span&gt; &lt;span class="n"&gt;BadgeTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how it's implemented:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
  &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;labelWidth&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;messageWidth&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BadgeTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;red&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
  &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;labelWidth&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;messageWidth&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BadgeTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I added one for each of the available themes. This makes it much simpler and cleaner to create badges.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#override-raw-tostring-endraw-"&gt;
  &lt;/a&gt;
  Override &lt;code&gt;toString&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Instead of creating a new method to build the badge string, we can override &lt;code&gt;toString&lt;/code&gt;. This makes our class printable, just by passing it to &lt;code&gt;print&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'I can be printed!'&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As opposed to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'I can be printed!'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;makeString&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;This is how it's implemented:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nd"&gt;@override&lt;/span&gt;
&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_getLabel&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_getMessage&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;coloredLabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorLabel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;coloredMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorMessage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;$coloredLabel$coloredMessage&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;That's it for this one, another quick little post! Let me end it with a question for you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#can-you-find-any-use-for-this-package-if-so-for-what"&gt;
  &lt;/a&gt;
  Can you find any use for this package? If so for what?
&lt;/h4&gt;

</description>
      <category>showdev</category>
      <category>dart</category>
      <category>terminal</category>
      <category>programming</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 35, MessageBox widget</title>
      <author>Aatmaj</author>
      <pubDate>Thu, 30 Sep 2021 12:09:57 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-35-messagebox-widget-19c8</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-35-messagebox-widget-19c8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-message-box-widget-in-python"&gt;
  &lt;/a&gt;
  Today we will cover message box widget in Python
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#the-messagebox-widget"&gt;
  &lt;/a&gt;
  The messagebox widget
&lt;/h3&gt;

&lt;p&gt;The messagebox widget is a widget which is used to represent pop-up message in a Tkinter program.&lt;/p&gt;

&lt;p&gt;The program below shows an example of a simple messagebox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Say hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Hello programmers"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5zCbh4-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnjugbuk0l1i3vu28rjs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zCbh4-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnjugbuk0l1i3vu28rjs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bC4Om1fI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzietmvdtn232g0ltkg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bC4Om1fI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzietmvdtn232g0ltkg1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax&lt;/strong&gt;- messagebox.showinfo(title,message)&lt;/p&gt;




&lt;p&gt;Similarly The message box has different flavors of boxes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;showinfo&lt;/code&gt;- show message on popup&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;showwarning&lt;/code&gt;- show warning (with disclaimer sign)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;showerror&lt;/code&gt;- Show error (with red cross)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;askquestiion&lt;/code&gt;- Asks the user yes or no&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;askyesno&lt;/code&gt;- same like &lt;code&gt;askquestion&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;askokcancel&lt;/code&gt; Asks the user ok or cancel&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;askretrycancel&lt;/code&gt; asks the user retry or cancel&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#warning"&gt;
  &lt;/a&gt;
  Warning
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showwarning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Wait!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Something is missing"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gOSblCU8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyxod4ebuia4zgdryx1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gOSblCU8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyxod4ebuia4zgdryx1b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#showing-error"&gt;
  &lt;/a&gt;
  Showing error
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showerror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Something is wrong"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rkRrtGYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfyc1dmeem08lab41d4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rkRrtGYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfyc1dmeem08lab41d4k.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#asking-question"&gt;
  &lt;/a&gt;
  Asking question
&lt;/h3&gt;

&lt;p&gt;Asking question is quite similar to &lt;code&gt;askyesno&lt;/code&gt;. Both give the same output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;askquestion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stop!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"are you sure?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_qTgCK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i3puhnh5fr6bv4k4smu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_qTgCK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7i3puhnh5fr6bv4k4smu.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;askyesno&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stop!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"are you sure?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wisqtfie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jrycce3l7ch5w94cn8a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wisqtfie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jrycce3l7ch5w94cn8a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#extracting-values-from-the-answer"&gt;
  &lt;/a&gt;
  Extracting values from the answer
&lt;/h3&gt;

&lt;p&gt;We can get the values of the user entered answer in form of true or false from the user as shown in the program below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;askyesno&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stop!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"are you sure?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="c1"&gt;#returns true or false
&lt;/span&gt;
   &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On clicking yes, &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Pa513re--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw58h23h4ww7weq77rok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Pa513re--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw58h23h4ww7weq77rok.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On clicking no&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IO2aCVKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdh6euvbsdgvjdz5o8c1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IO2aCVKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdh6euvbsdgvjdz5o8c1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ask-ok-cancel"&gt;
  &lt;/a&gt;
  Ask ok, cancel
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;askokcancel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stop!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Do it?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="c1"&gt;#returns true or false
&lt;/span&gt;
   &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AbsaZgUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o9upd00p1pc4ktvp34y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AbsaZgUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o9upd00p1pc4ktvp34y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can get the values from the box in the same manner as &lt;code&gt;askyesno&lt;/code&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ask-retry-cancel"&gt;
  &lt;/a&gt;
  Ask Retry cancel
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messagebox&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"100x100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;messagebox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;askretrycancel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stop!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Action failed?"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="c1"&gt;#returns true or false
&lt;/span&gt;
   &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Show message"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;showmessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1beFOiMH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2idzgd2z314rgabsuays.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1beFOiMH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2idzgd2z314rgabsuays.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Your first Cloudflare worker</title>
      <author>Klee Thomas</author>
      <pubDate>Thu, 30 Sep 2021 11:53:35 +0000</pubDate>
      <link>https://dev.to/kleeut/your-first-cloudflare-worker-2ae2</link>
      <guid>https://dev.to/kleeut/your-first-cloudflare-worker-2ae2</guid>
      <description>&lt;p&gt;This post is a quick introduction to creating a Cloudflare worker. The worker it's self is a way to feel out the platform and a stepping stone to a more thorough worker that I'll be putting together to protect staging environment without having to resort to IP Address whitelisting to stop unauthorized users from accessing it and search engines from indexing it. &lt;/p&gt;

&lt;p&gt;Let's start at the start.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-a-cloudflare-worker"&gt;
  &lt;/a&gt;
  What is a Cloudflare worker
&lt;/h1&gt;

&lt;p&gt;Workers are Cloudflare's edge computing platform.  This allows us to run code within Cloudflare's data centres rather than having to do all processing at the origin server. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-would-i-want-a-cloudflare-worker"&gt;
  &lt;/a&gt;
  Why would I want  a cloudflare worker
&lt;/h2&gt;

&lt;p&gt;Cloudflare workers operate on the request at the edge of the Cloudflare network. Here they can intercept, reject, redirect. modify or respond to a request. This can have a range of benefits including:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Faster response time when responding from the edge.&lt;/li&gt;
&lt;li&gt;Modify the request before it hits an origin server, injecting additional data that can be used by the origin server to validate requests or serve them from their correct location.&lt;/li&gt;
&lt;li&gt;Filter out requests that shouldn't be allowed through to the origin server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets have a look at how to create a small worker with JavaScript that rejects a request when a certain cookie is not set on the browser and allows it through to the origin server when the cookie is there. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-create-one"&gt;
  &lt;/a&gt;
  How do I create one
&lt;/h2&gt;

&lt;p&gt;The simplest place to get started creating your first Cloudflare worker is by using the Cloudflare console. &lt;/p&gt;

&lt;p&gt;Once you've logged in open the workers page from the top menu. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fmkRgFaz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcxify3i4sbwvmjjpoh0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fmkRgFaz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcxify3i4sbwvmjjpoh0.png" alt="Cloudflare navigation bar with workers highlighted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select Manage workers to view/add/edit/delete your Cloudflare workers. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JodgAvnH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r28xvlfzlpjin3bqfcz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JodgAvnH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r28xvlfzlpjin3bqfcz1.png" alt="Screenshot of the Cloudflare workers page with Manage Workers highlighted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the manage workers page select create a worker to make a new worker&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ADNDQ25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eixa0mp68wyg7grhvoil.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ADNDQ25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eixa0mp68wyg7grhvoil.png" alt="Screenshot of the manage workers page with Create a worker button highlighted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now add the code. This sample code will check if there is a &lt;code&gt;__gateway_auth&lt;/code&gt; cookie present on the request. If it is there it will transparently pass the request through to the origin and return the value. The code in the screenshot below can be found in &lt;a href="https://www.notion.so/33ff4f60c51ea345ab5a213b974fb227"&gt;this gist.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aoTjj0l5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5jrfw5z7w9y4ekltuhq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aoTjj0l5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5jrfw5z7w9y4ekltuhq.png" alt="A screenshot of the workers code editor with sample code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save the worker code and navigate back to the domain that you want to add the worker into.  I'm going to use my &lt;code&gt;[saladsimulator.com](http://saladsimulator.com)&lt;/code&gt; joke website. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4dhFfo3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ltta6jpbx8synrqj4tl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4dhFfo3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ltta6jpbx8synrqj4tl.png" alt="Screenshot of the Cloudflare navigation panel with a link to saladsimulator.com domain highlighted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select Add route to open the dialogue&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDvX4O7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4av8znsaljj0bck3mxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDvX4O7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h4av8znsaljj0bck3mxk.png" alt="Screenshot of the workers page with Add Route highlighted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add the worker on a route on your domain so that it's executed when a request is made on that path.  For this example I'm adding the worker to all calls to the &lt;code&gt;foo.saladsimulator.com&lt;/code&gt; subdomain which doesn't exist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ARWuTkY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy8t8hdycbx2zl6m2vi3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARWuTkY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy8t8hdycbx2zl6m2vi3.png" alt="Screenshot of the add route page showing adding my-worker to foo.saladsimulator.com"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmmYl57X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e5f2cmxh0o9c3xse2et.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmmYl57X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e5f2cmxh0o9c3xse2et.png" alt="Screen shot showing my-worker applied to foo.saladsimulator.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can navigate to our domain and we'll see the message that we set up for when no cookie is present.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mqjekyix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0n3y9y2rq9ceezc8a3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mqjekyix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0n3y9y2rq9ceezc8a3w.png" alt="A screenshot showing the worker blocking access to foo.saladsimulator.com because of a missing cookie"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you add the cookie you'll get a 404 response because there is nothing listening on that sub domain. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next.
&lt;/h1&gt;

&lt;p&gt;So this is a fairly contrived example. It doesn't add any real security to the route. It is however a step towards what I am to build. I'd like to have a set up that protects a staging domain using authentication provided by Auth0. Typically I've found that staging environments are protected using IP address allow listing and I just don't think that's good enough in 2021. I want everything to be zero trust.&lt;/p&gt;

</description>
      <category>cloudflare</category>
      <category>workers</category>
      <category>serverless</category>
      <category>auth</category>
    </item>
    <item>
      <title>Como funciona a famosa injeção de dependência e porque ela é importante</title>
      <author>Carolina Dias Fonseca</author>
      <pubDate>Thu, 30 Sep 2021 11:41:33 +0000</pubDate>
      <link>https://dev.to/diariodeumacdf/como-funciona-a-famosa-injecao-de-dependencia-e-porque-ela-e-importante-3dii</link>
      <guid>https://dev.to/diariodeumacdf/como-funciona-a-famosa-injecao-de-dependencia-e-porque-ela-e-importante-3dii</guid>
      <description>&lt;p&gt;Um ponto interessante sobre o mundo Java é a enorme quantidade de atividades em construir alternativas para o &lt;a href="https://www.guj.com.br/t/voce-sabe-o-que-e-j2ee/204071/3"&gt;J2EE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Muito disso vem da complexidade do universo do J2EE, mas além disso, explorando alternativas é de onde vem as ideias criativas.&lt;/p&gt;

&lt;p&gt;Um problema comum em lidar com diferentes elementos é, por exemplo: "Como conectar uma arquitetura web com a interface do banco dedados quando eles são construídos por diferentes times e com conhecimentos distintos?"&lt;/p&gt;

&lt;p&gt;Foi desse tipo de problema que surgiram inúmeros frameworks com o objetivo de conectar os componentes do J2EE de diferentes camadas. No caso do Java, o mais conhecido é o &lt;a href="https://spring.io/"&gt;Spring&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Inclusive, até o Spring já conta com alguns "variantes" digamos assim por conta de saber trabalhar muitos bem com essa componentização. Frameworks que se basearam/propõem a serem melhores que o Spring, por exemplo, são: &lt;a href="https://micronaut.io/"&gt;Micronaut&lt;/a&gt; e &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Por baixo desses frameworks temos um número interessantes de design principles, o que vai além dos containers do J2EE. Vamos ver alguns desses princípios!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#componentes-e-servi%C3%A7os"&gt;
  &lt;/a&gt;
  Componentes e Serviços
&lt;/h2&gt;

&lt;p&gt;Para fins de padronização de termos, aqui utilizaremos componentes no sentido de: arquivos .JAR, dll ou até mesmo a importação de uma biblioteca.&lt;/p&gt;

&lt;p&gt;E serviços no sentido de: serviço web, mensageria, RPC ou até mesmo um socket.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exemplo-simples"&gt;
  &lt;/a&gt;
  Exemplo simples
&lt;/h2&gt;

&lt;p&gt;Vamos utilizar o exemplo de um componente que lista filmes por diretor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class ConsultorDeFilmes {

    public Filme[] filmeDirigidoBy(String diretor) {
        List todosFilmes = finder.findAll();
        for (Iterator it = todosFilmes.iterator(); it.hasNext(); ) {
            Filme filme = (Filme) it.next();
            if (!filme.getDiretor().equals(diretor)) it.remove();
        }
        return (Filme[]) todosFilmes.toArray(new Filme[todosFilmes.size()]);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A implementação dessa função é totalmente simples, é pedido para encontrar um objeto retornar todos os filmes da lista. Depois é solicitado que ele retorne somente os filmes dirigidos pelo diretor que queremos.&lt;/p&gt;

&lt;p&gt;O ponto que vamos focar nessa implantação é no finder.findAll();&lt;/p&gt;

&lt;p&gt;mais especificamente em como nós conectamos o objeto que é solicitado (o diretor) com um objeto finder em particular. A razão disso ser interessante é que eu quero que o método filmeDirigidoBy seja completamente independente de como todos os são armazenados.&lt;/p&gt;

&lt;p&gt;Basicamente o método que estamos estudando se resume ao finder e tudo o que o finder faz é saber como responder ao método findAll. Dessa forma, podemos definir uma interface para o finder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public interface ProcuraFilmes{
    List findAll();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Com isso, nós desacoplamos o findAll(), mas ainda assim teremos que torná-lo em classe concreta em algum momento para retornar os filmes que queremos. Então faremos de forma que o código passe para o construtor do ConsultorDeFilmes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class ConsultorDeFilmes {

        private ProcuraFilmes finder;
        public ConsultorDeFilmes(){
            finder = new ColunaDelimitadaProcuraFilmes("filmes1.txt");  
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O nome da classe de implementação vendo do fato de estamos usando um arquivo .txt delimitado por colunas.&lt;/p&gt;

&lt;p&gt;Agora se eu usar essa classe somente nessa implementação, está ok, mas o que acontece se mais alguém quiser uma cópia dessa mesma aplicação? 🤔&lt;/p&gt;

&lt;p&gt;Simples, caso a pessoa armazene os filmes em um arquivo .txt delimitado por colunas chamado "filmes1.txt", a aplicação vai rodar tranquilamente. Caso use um nome de arquivo diferente, por exemplo, ela só precisa alterar o nome na classe de implantação, até aqui, ok.&lt;/p&gt;

&lt;p&gt;Porém e se ela utilizar uma forma totalmente diferente de armazenar os filmes, por exemplo, num banco de dados SQL, um arquivo XML, um serviço web, entre outros?🤔🤔&lt;/p&gt;

&lt;p&gt;Nesse caso, precisaremos de um classe diferente para fazer a implantação e puxar os dados. E aqui está o ponto: Porque nós colocamos o ProcuraFilme como uma interface, isso não vai alterar o método filmesDirigidoBy , mas ainda assim precisamos de uma forma de instanciar o finder de forma correta na implementação.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TH5RBPhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v1rwl3a0cm898iuvuiue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TH5RBPhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v1rwl3a0cm898iuvuiue.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MovieLister == ConsultorDeFilmes // MovieFinder == ProcuraFilmes // MovieFinderImpl == implementação concreta da interface. Fonte: &lt;a href="https://martinfowler.com/articles/injection/naive.gif"&gt;https://martinfowler.com/articles/injection/naive.gif&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A imagem acima mostra como a nossa classe ConsultorDeFilmes está dependendo tanto da interface ProcuraFilmes como de sua classe concreta, nós precisamos que a classe dependa apenas da interface.&lt;/p&gt;

&lt;p&gt;Mas como fazer isso? 🤔🤔🤔&lt;/p&gt;

&lt;p&gt;A classe de implementação não está linkada à aplicação em tempo de compilação e não saebemos como essa pessoa fará a implementação da interface. Ou seja, corremos o risco de ter o código alterado (implementação da interface que consta no ConsultorDeFilmes) e, consequentemente, a aplicação vai quebrar.&lt;/p&gt;

&lt;p&gt;Por isso precisamos que a classe ConsultorDeFilmes dependa apenas da interface, ignore a forma como ela é implementada e seja capaz de rodar a instância dela.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nós chamos essa situação de "plugin", numa situação real podemos ter milhares de serviços e componentes que precisamos implementar de diferentes formas. O plugin interage com esses serviços e componentes através de interfaces e, então, eles decidem as implementações sem alterar a nossa aplicação.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Voltando a nossa pergunta anterior: Mas como fazer isso? 🤔🤔🤔&lt;/p&gt;

&lt;p&gt;A resposta: Inversão de Controle&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#invers%C3%A3o-de-controle"&gt;
  &lt;/a&gt;
  Inversão de controle
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Como mencionado anteriormente, a inversão de controle é uma característica muito comum de alguns frameworks, mas falar que eles são especiais por conta disso é o mesmo que falar que uma ferrari é especial porque ela tem pneus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O que importa mesmo é: "Qual aspecto de controle esses frameworks invertem?"&lt;/p&gt;

&lt;p&gt;Inversão de controle é o que diferencia um framework de uma biblioteca. Uma biblioteca é somente um conjunto de funções que você utiliza, já um framework é um design abstrato com comportamentos. No framework você precisa colocar comportamento em vários lugares em subclasses ou plugando em suas próprias classes f(o Spring faz isso utilizando Beans e Annotations, por exemplo).&lt;/p&gt;

&lt;p&gt;Na nossa aplicação, instanciamos o finder diretamente, o que o impede de ser um plugin. Uma saída é garantir que qualquer usuário desse plugin siga as convenções que queremos e injete isso em suas implementações.&lt;/p&gt;

&lt;p&gt;Pensando nisso, Inversão de Controle (Inversion of Control - IoC) é um termo muito genérico e, de acordo com vários especialistas, o termo, nesse caso, seria &lt;strong&gt;Injeção de Dependência&lt;/strong&gt; (Dependecy Injection).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#formas-de-inje%C3%A7%C3%A3o-de-depend%C3%AAncia"&gt;
  &lt;/a&gt;
  Formas de Injeção de Dependência
&lt;/h2&gt;

&lt;p&gt;A ideia da injeção de dependência é ter um "montador" ou assembler que poupla o campo na classe ConsultorDeFilmes com a implementação apropriada da interface ProcuraFilmes, ficando da seguinte forma:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ihLbLEnV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agg2udilk5b64b0na9y0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ihLbLEnV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/agg2udilk5b64b0na9y0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MovieLister == ConsultorDeFilmes // MovieFinder == ProcuraFilmes // MovieFinderImpl == implementação concreta da interface. Assembler == Montador Fonte: &lt;a href="https://martinfowler.com/articles/injection/injector.gif"&gt;https://martinfowler.com/articles/injection/injector.gif&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em cima desse diagrama, temos 3 formas principais de fazer a injeção de dependência:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inversão de Controle tipo 01 - Injeção por interface (Injection Interface)&lt;/li&gt;
&lt;li&gt;Inversão de Controle tipo 02 - Injeção por setter(Setter Interface)&lt;/li&gt;
&lt;li&gt;Inversão de Controle tipo 03 - Injeção por contrutor(Constructor Interface)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para o nosso caso, vamos falar sobre o Spring.&lt;/p&gt;

&lt;p&gt;Essa framework inclui camadas de abstração para transações, frameworks de persistência em banco de dados, aplicação web e JDBC. Ele suporta tanto a injeção por construtor como por setter, mas os desenvolvedores dele preferem a injeção por setter, vamos ver como fica nesse caso.&lt;/p&gt;

&lt;p&gt;Para que o nosso ConsultorDeFilmes aceite a injeção, temos que definir o método set para o serviço.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class ConsultorDeFilmes {

    private ProcuraFilmes finder;
    public void setFinder(ProcuraFilmes finder){
        this.finder = finder;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Também vamos definir um setter para o nome do arquivo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class ArquivoConsultorDeFilmes {

    public void setNomeArquivo(String nomeArquivo){
        this.nomeArquivo = nomeArquivo;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O último passo é fazer a configuração, o Spring suporta configurações por arquivos XML e no código também, mas por XML é o mais apropriado.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;beans&amp;gt;
    &amp;lt;bean id="ConsultorDeFilmes" class="spring.ConsultorDeFilmes"&amp;gt;
        &amp;lt;property name="finder"&amp;gt;
            &amp;lt;ref local="ProcuraFilmes"/&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/bean&amp;gt;
    &amp;lt;bean id="ProcuraFilmes" class="spring.ArquivoConsultorDeFilmes"&amp;gt;
        &amp;lt;property name="nomeArquivo"&amp;gt;
            &amp;lt;value&amp;gt;filmes1.txt&amp;lt;/value&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/bean&amp;gt;
&amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Um exemplo de como testar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public void testComSpring() throws Exception {
    ApplicationContext ctx = new

FileSystemXmlApplicationContext("spring.xml");
    ConsultorDeFilmes consultor = (ConsultorDeFilmes)

ctx.getBean("ConsultorDeFilmes");
    Filmes[] filmes = consultor.filmesDirigidosBy("James Cameron");

    assertEquals("Titanic", movies[0].getTitle());
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finalizando...&lt;/p&gt;

&lt;p&gt;Primeiramente gostaria de agradecer a sua curiosidade e paciência em ler até aqui, boa parte do texto foi tradução minha dos textos do &lt;a href="https://martinfowler.com/"&gt;Martin Fowler&lt;/a&gt;, tentei ao máximo ser fiel às explicações dele, alguns pontos que achei muito complexo, tentei simplificar a explicação para que ficasse mais claro para mim e para ti 😉 e também acrescentei um pouco do meu ponto de vista.&lt;/p&gt;

&lt;p&gt;Quero ressaltar aqui também, caso seja user do Spring e suas famosas annotations: as annotations nada mais são do que interfaces, logo, elas seguem o mesmo princípio da inversão de controle mencionado ao longo do texto. Lembre-se que criamos uma bean e no Spring temos o @Bean, aqui a conclusão fica fácil, certo?&lt;/p&gt;

&lt;p&gt;Fontes: &lt;a href="https://martinfowler.com/articles/injection.html"&gt;https://martinfowler.com/articles/injection.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://martinfowler.com/bliki/InversionOfControl.html"&gt;https://martinfowler.com/bliki/InversionOfControl.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>beginners</category>
      <category>java</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Create a backend in Javascript: NodeJS Module System</title>
      <author>Eric The Coder</author>
      <pubDate>Thu, 30 Sep 2021 11:32:43 +0000</pubDate>
      <link>https://dev.to/ericchapman/create-a-backend-in-javascript-nodejs-module-system-4165</link>
      <guid>https://dev.to/ericchapman/create-a-backend-in-javascript-nodejs-module-system-4165</guid>
      <description>&lt;p&gt;Here is a series of articles to help you create backend applications in Javascript.&lt;/p&gt;

&lt;p&gt;Node.js is now a must, so it is essential for a developer to master it.&lt;/p&gt;

&lt;p&gt;I will publish a new article every two days and little by little you will learn everything there is to know about Node.js&lt;/p&gt;

&lt;p&gt;To not miss anything follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-module-system"&gt;
  &lt;/a&gt;
  NodeJS Module System
&lt;/h2&gt;

&lt;p&gt;Writing code in a file is fine, but if your application need a lot of code, your file will quickly become too large.&lt;/p&gt;

&lt;p&gt;This is why it is better to separate your code into several modules (file) in order to make the code reusable and much better structured.&lt;/p&gt;

&lt;p&gt;here is an example&lt;/p&gt;

&lt;p&gt;app.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gretting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello $ {name}, welcome to NodeJS`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;gretting&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It could be interesting to make the greeting module reusable. To do this we will place it in its own file called gretting.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello $ {name}, welcome to NodeJS`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default NodeJS does not allow to use this function from another module. To do this, you must indicate to the module which elements can be exportable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello $ {name}, welcome to NodeJS`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note here the last line 'module.exports = greeting', this function allows the use of the greeting function from another module.&lt;/p&gt;

&lt;p&gt;From app.js you can now load this module with the 'require' function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ gretting.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The 'require' function will create a reference with the greeting module and place this reference in the const greeting variable (this variable could have been called another name than greeting)&lt;/p&gt;

&lt;p&gt;Note that the function require ('./ greeting.js') uses the path './' this allows to indicate to NodeJS that the module is in the same folder as our app.js file&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiple-exports"&gt;
  &lt;/a&gt;
  Multiple exports
&lt;/h3&gt;

&lt;p&gt;It is possible to export several elements with the function module.exports. Here is an example: person.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ford Mustang&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Multiple exports is therefore done with an object that contains several elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ person.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the 'person' variable does not point to the 'name' or 'car' directly, it points to the object that is exported. So to return its content we have to use 'person.name'&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiple-export-alternative-syntax"&gt;
  &lt;/a&gt;
  Multiple export (alternative syntax)
&lt;/h3&gt;

&lt;p&gt;It is possible to export several elements with the function module.exports.  Here is an example: person.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ford Mustang&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The usage remains the same:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ person.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is also possible to use deconstruction&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ person.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-require-function-executes-the-module"&gt;
  &lt;/a&gt;
  The 'require' function executes the module
&lt;/h3&gt;

&lt;p&gt;When executing the require function, the module is executed immediately. here is an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// hello.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ hello.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As soon as NodeJS executes this line, the hello module is also executed. In this example the module only does an export but if the module contained code it would be executed, here is an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// hello.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Node!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./ hello.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you launched app.js, you will see that it will display 'Hello Node!' before the 'Hello World' because as mentioned, the 'require' executes the module.&lt;/p&gt;

&lt;p&gt;Take this fact into account when you create your modules in order to avoid unwanted behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all for today, follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt; to be notified of the publication of the next article (within two days).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building Microservices using Spring Boot + HarperDB and Deploying it on AWS</title>
      <author>Apoorv Tyagi</author>
      <pubDate>Thu, 30 Sep 2021 11:31:23 +0000</pubDate>
      <link>https://dev.to/apoorvtyagi/building-microservices-using-spring-boot-harperdb-and-deploying-it-on-aws-524a</link>
      <guid>https://dev.to/apoorvtyagi/building-microservices-using-spring-boot-harperdb-and-deploying-it-on-aws-524a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this article, you will learn how to use &lt;strong&gt;Spring Boot&lt;/strong&gt; and &lt;strong&gt;HarperDB&lt;/strong&gt; to create a microservice. Later on, you will also look at how to deploy the complete application on &lt;strong&gt;AWS Elastic Beanstalk&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You will be building an &lt;strong&gt;Employee Leave Management System&lt;/strong&gt;. This application will be responsible for tracking the detailed record of employees' leaves. You will also be implementing the functionality to &lt;strong&gt;add&lt;/strong&gt;, &lt;strong&gt;edit&lt;/strong&gt;, and &lt;strong&gt;cancel&lt;/strong&gt; leaves.&lt;/p&gt;

&lt;p&gt;But first, let's get a basic understanding of microservices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-microservices"&gt;
  &lt;/a&gt;
  What are Microservices?
&lt;/h2&gt;

&lt;p&gt;Microservices are another design architecture for developing software. In this, the software is composed of small independent services that communicate over REST APIs.&lt;/p&gt;

&lt;p&gt;Microservices architectures make applications easier to develop and scale. It also enables an organization to evolve its technology stack easily later on if required.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#monolithic-vs-microservices"&gt;
  &lt;/a&gt;
  Monolithic vs. Microservices
&lt;/h2&gt;

&lt;p&gt;In monolithic architectures, all processes run as a single service, therefore, they are tightly coupled. This means that if one process goes down, the entire application will get affected leading to a single point of failure.&lt;/p&gt;

&lt;p&gt;Also, enhancing or adding new features becomes more complicated as the code base grows. This complexity makes it difficult to experiment and implement new ideas.&lt;/p&gt;

&lt;p&gt;In microservices architectures, an application is built by combining different components that run independently as a service. These services communicate over a well-defined interface of lightweight REST APIs.&lt;/p&gt;

&lt;p&gt;Each service is responsible for performing a single task and because they run independently, each service can be updated, deployed, and scaled to meet the demand for specific functions of an application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-harperdb"&gt;
  &lt;/a&gt;
  Introducing HarperDB
&lt;/h2&gt;

&lt;p&gt;You are going to use HarperDB as your Database. HarperDB is a complete data management solution and distributed database with native SQL operations like join, order by, etc., and NoSQL schema-less or even API-based execution.&lt;/p&gt;

&lt;p&gt;The most notable features of HarperDB are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It has one endpoint for all CRUD operations&lt;/li&gt;
&lt;li&gt;  Execute SQL queries on JSON data&lt;/li&gt;
&lt;li&gt;  Supports multiple plugins like ODBC, JDBC, Node-RED, etc.&lt;/li&gt;
&lt;li&gt;  It has both SQL and NoSQL support&lt;/li&gt;
&lt;li&gt;  Eliminates the need for an ORM(Object Relational Mapping) by returning the results as arrays of JSON&lt;/li&gt;
&lt;li&gt;  Executes complex and ACID-compliant SQL queries on JSON without any data duplication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looks interesting, doesn't it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-harperdb-database-instance"&gt;
  &lt;/a&gt;
  Configure HarperDB Database Instance
&lt;/h2&gt;

&lt;p&gt;Let's now start with configuring the HarperDB instance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to &lt;a href="https://studio.harperdb.io/sign-up"&gt;https://studio.harperdb.io/sign-up&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fill out the form with your details&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_QJOxCD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627961313361/G6TC-OzKp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QJOxCD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627961313361/G6TC-OzKp.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Click Sign Up For Free&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will then receive an email that looks like this:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2hB_8Jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627962632182/obcAU9L_s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2hB_8Jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627962632182/obcAU9L_s.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  Click on Log into HarperDB studio&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#creating-an-instance"&gt;
  &lt;/a&gt;
  Creating an Instance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Click on Create HarperDB Cloud Instance&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5dNam8CD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628949438521/avQWms2cJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5dNam8CD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628949438521/avQWms2cJ.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  Enter Your Credentials&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GX4Vy_5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627962498958/Qg8EPmOvE.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GX4Vy_5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627962498958/Qg8EPmOvE.jpeg" alt="7b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: These credentials should NOT be confused with your Studio account. This is for the superuser you are creating on this database instance. The username should NOT be in the form of an email.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Pick your instance specs. You can start with a free version and upgrade later as per your need.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CP2AmhjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627961939022/wOiImcn_o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CP2AmhjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627961939022/wOiImcn_o.png" alt="4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Next, review your details and click Confirm Instance Details&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, Click on Add Instance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In another 5 to 10 minutes your instance will be ready. You'll also receive an email as soon as it's done.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nond96vi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627963550885/_yDJol_e-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nond96vi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627963550885/_yDJol_e-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;The instance URL that you receive is how you can access HarperDB with REST calls&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Initially, your instance does not have any schemas or tables. So you need to create them first.&lt;/p&gt;

&lt;p&gt;I chose &lt;strong&gt;Employee_Leaves&lt;/strong&gt; as the name for my schema. However, you can use any other name for your schema and then click on the green checkmark to save it.&lt;/p&gt;

&lt;p&gt;Next, you need to create tables. For the moment, you'll set up two tables &lt;strong&gt;Employee&lt;/strong&gt; and &lt;strong&gt;Leaves&lt;/strong&gt;, the first one is for storing all the employee details like names and employee Ids and the second one is to store the leaves of employees in the company.&lt;/p&gt;

&lt;p&gt;Note that you do not need to add all the columns just yet, they will be added automatically when needed. For now, while creating a table you just have to provide a &lt;em&gt;hash_attribute&lt;/em&gt; name. &lt;strong&gt;The hash attribute is used to uniquely identify each record&lt;/strong&gt;. For both these tables, you can use &lt;strong&gt;ID&lt;/strong&gt; as hash_attribute.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W5Z8E-bM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629208177815/jGN3lJmMn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W5Z8E-bM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629208177815/jGN3lJmMn.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-spring-boot-app"&gt;
  &lt;/a&gt;
  Creating a Spring Boot App
&lt;/h2&gt;

&lt;p&gt;To start with spring boot, you have to create a basic application from &lt;a href="https://start.spring.io/"&gt;Spring.io&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FVTVxD6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628867450018/hLnm-o3HF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FVTVxD6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628867450018/hLnm-o3HF.png" alt="10.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Select &lt;code&gt;Maven&lt;/code&gt; project and &lt;code&gt;Java&lt;/code&gt; language. For the Spring Boot version, select 2.5.3. You will also have to add the Spring-boot-starter-web and Lombok dependency.&lt;/p&gt;

&lt;p&gt;Optionally, fill in the project metadata. For instance, you can set group as &lt;code&gt;com.employee&lt;/code&gt;, artifact &amp;amp; name as &lt;code&gt;attendance&lt;/code&gt;, package as &lt;code&gt;com.employee.attendance&lt;/code&gt;, and finally enter a short description &amp;amp; click on Generate.&lt;/p&gt;

&lt;p&gt;Extract the downloaded project and open it in your favorite IDE.&lt;/p&gt;

&lt;p&gt;Next, for accessing the HarperDB instance from your Spring Boot app you first have to download the &lt;strong&gt;CData JDBC Driver&lt;/strong&gt; for HarperDB.&lt;/p&gt;

&lt;p&gt;The CData JDBC driver allows the most straightforward way to connect to HarperDB from any Java-based application. It wraps and hides the complexity of accessing data and provides additional powerful security features, smart caching, batching, socket management, and more.&lt;/p&gt;

&lt;p&gt;Let's see the steps for integrate this driver inside your application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Navigate to - &lt;a href="https://studio.harperdb.io/resources/drivers"&gt;https://studio.harperdb.io/resources/drivers&lt;/a&gt; and then click on download.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OWKSWJjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628949467177/NEORjFZ-B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWKSWJjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628949467177/NEORjFZ-B.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go back to your project root directory and create a new folder called &lt;code&gt;lib&lt;/code&gt;&lt;br&gt;
&amp;amp; extract the zip file contents inside this folder.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, to import the external jar into your spring boot app, open the &lt;code&gt;pom.xml&lt;/code&gt; file and add the following dependency in it:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;cdata.jdbc.harperdb&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cdata.jdbc.harperdb&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;system&lt;span class="nt"&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;systemPath&amp;gt;&lt;/span&gt;${project.basedir}/lib/cdata.jdbc.harperdb.jar&lt;span class="nt"&gt;&amp;lt;/systemPath&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the &lt;code&gt;${project.basedir}&lt;/code&gt;  refers to the path where your pom.xml is saved i.e your root directory. If you have the driver installed at any other path, you have to add its absolute path inside the &lt;code&gt;&amp;lt;systemPath&amp;gt;&lt;/code&gt; Tag.&lt;/p&gt;

&lt;p&gt;An important thing to note here is that you have to set the &lt;code&gt;&amp;lt;scope&amp;gt;&lt;/code&gt; as &lt;strong&gt;system&lt;/strong&gt; and also, inside the plugins set the &lt;code&gt;&amp;lt;includeSystemScope&amp;gt;&lt;/code&gt; as &lt;strong&gt;true&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;includeSystemScope&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/includeSystemScope&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This has to be done since you are ultimately going to deploy this application on a server(AWS) and for a server to know about any external &lt;strong&gt;JAR&lt;/strong&gt; files, these configurations are necessary.&lt;/p&gt;

&lt;p&gt;Now, to establish a connection between your app and the HarperDB instance, create a new package and name it &lt;code&gt;service&lt;/code&gt;. Inside this, make a new Java file called &lt;code&gt;ConnectionService.java&lt;/code&gt; and add the following content to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.sql.Connection&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.sql.DriverManager&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.sql.SQLException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Service&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ConnectionService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="nf"&gt;createConnection&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;SQLException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"jdbc:harperdb:Server=https:xyz.harperdbcloud.com;User=admin;Password=1234;UseSSL=true;"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;@Service&lt;/strong&gt; annotation is used with classes that provide some business functionalities&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, you are making the connection with the Database using the "Connection String" inside the &lt;code&gt;getConnection()&lt;/code&gt; method available under the &lt;code&gt;DriverManager&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;Alternatively, you can also prepare the connection options using a Properties object. Pass the Properties object to the DriverManager:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Properties&lt;/span&gt; &lt;span class="n"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Properties&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Server"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"https:xyz.harperdbcloud.com"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"admin"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Password"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"1234"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"jdbc:harperdb:"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the &lt;strong&gt;server&lt;/strong&gt;, &lt;strong&gt;user&lt;/strong&gt;, and &lt;strong&gt;password&lt;/strong&gt; with your own credentials and you are good to go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#designing-rest-apis"&gt;
  &lt;/a&gt;
  Designing REST APIs
&lt;/h2&gt;

&lt;p&gt;Now that a connection has been successfully established between your app and HarperDB, let's begin with creating the Restful APIs.&lt;/p&gt;

&lt;p&gt;First, create a new package called &lt;code&gt;controller&lt;/code&gt;. Inside this, create a new class and name it &lt;code&gt;AttendanceController.java&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A controller class is where you will expose all the endpoints of your microservices. These endpoints are what different microservices use to communicate with each other.&lt;/p&gt;

&lt;p&gt;For this application, you will create 4 endpoints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GET &lt;code&gt;/api/get/all/leaves/{employeeId}&lt;/code&gt; - To get all the leaves that a particular employee has applied so far.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;POST &lt;code&gt;/api/add/leave&lt;/code&gt; - To add a new leave for an employee.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PUT &lt;code&gt;/api/edit/leave&lt;/code&gt; - To edit the date of an existing leave.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DELETE &lt;code&gt;/api/cancel/leave&lt;/code&gt; - To delete an existing leave.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's how the complete controller class will look after adding these 4 endpoints:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.controller&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.dto.EmployeeDataDTO&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.dto.EmployeeEditDataDTO&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.service.AttendanceService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.web.bind.annotation.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.HashMap&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.List&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@RestController&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AttendanceController&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Autowired&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;AttendanceService&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;@GetMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api/get/all/leaves/{employeeId}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getAllLeavesForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@PathVariable&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAllLeavesForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@PostMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api/add/leave"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;addNewLeave&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@RequestBody&lt;/span&gt; &lt;span class="nc"&gt;EmployeeDataDTO&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addNewLeaveForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@PutMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api/edit/leave"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;editLeave&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@RequestBody&lt;/span&gt; &lt;span class="nc"&gt;EmployeeEditDataDTO&lt;/span&gt; &lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;editLeaveForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@DeleteMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api/cancel/leave"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;cancelLeave&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@RequestBody&lt;/span&gt; &lt;span class="nc"&gt;EmployeeDataDTO&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cancelLeaveForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us now create another class called &lt;code&gt;AttendanceService.java&lt;/code&gt; in the &lt;code&gt;service&lt;/code&gt; package that you created earlier. Inside this class, you will write all your business logic. So, let's implement all 4 methods which are mentioned in your controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.dto.EmployeeDataDTO&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.dto.EmployeeEditDataDTO&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lombok.extern.slf4j.Slf4j&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.sql.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.ArrayList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.HashMap&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.List&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Service&lt;/span&gt;
&lt;span class="nd"&gt;@Slf4j&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AttendanceService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Autowired&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;ConnectionService&lt;/span&gt; &lt;span class="n"&gt;connectionService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getAllLeavesForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;empId&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Getting all leaves for employee - {}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;empId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;resultList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connectionService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createConnection&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Select * From Employee_Leaves.Leaves where empId = ?"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;empId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;ResultSet&lt;/span&gt; &lt;span class="n"&gt;resultSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeQuery&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"date_of_apply"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseLong&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"__createdtime__"&lt;/span&gt;&lt;span class="o"&gt;))).&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"last_update_date"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseLong&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"__updatedtime__"&lt;/span&gt;&lt;span class="o"&gt;))).&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"leave_applied_for"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;resultSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"employee_id"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;resultSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"empId"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
                &lt;span class="n"&gt;resultList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error occurred"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;resultList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;resultList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;addNewLeaveForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;EmployeeDataDTO&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Inserting new leave for employee - {}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmployeeId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connectionService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createConnection&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"INSERT INTO Employee_Leaves.Leaves (date, empId) VALUES (?,?)"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDate&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmployeeId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeUpdate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Message"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Success"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Affected rows"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error occurred"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;editLeaveForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;EmployeeEditDataDTO&lt;/span&gt; &lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Updating leave for employee - {}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmployeeId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connectionService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createConnection&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"UPDATE Employee_Leaves.Leaves SET date = ? WHERE empId=? and date = ?"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getNewDate&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmployeeId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeEditData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getPreviousDate&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeUpdate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Message"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Success"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Affected rows"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error occurred"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;cancelLeaveForEmployee&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;EmployeeDataDTO&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;info&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Cancelling leave for employee - {}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmployeeId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connectionService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createConnection&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DELETE FROM Employee_Leaves.Leaves WHERE empId = ? and date = ?"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getEmployeeId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employeeData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDate&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeUpdate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Message"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Success"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Affected rows"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error occurred"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessage&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that done, let's understand what each of these four functions is used for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;getAllLeavesForEmployee()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will be responsible for fetching all the leaves for a particular employee from the &lt;code&gt;Leaves&lt;/code&gt; table. You are simply establishing a connection and then querying the &lt;strong&gt;Leaves&lt;/strong&gt; table based on employee Id.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;addNewLeaveForEmployee()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever an employee needs to apply for a leave, this function will be invoked which will take an Object of &lt;code&gt;EmployeeDataDTO&lt;/code&gt; class and will be adding a new leave inside the &lt;code&gt;Leave&lt;/code&gt; table of your database.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;editLeaveForEmployee()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If in case an employee wants to change the date for which leave has been applied before, the &lt;code&gt;editLeaveForEmployee()&lt;/code&gt; function will be responsible for modifying that in your Database.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;cancelLeaveForEmployee()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will simply cancel a particular leave for an employee i.e. Delete the row from the table. This function also takes the object of the &lt;code&gt;EmployeeDataDTO&lt;/code&gt; class as its parameters.&lt;/p&gt;

&lt;p&gt;Next thing is to understand the use of &lt;code&gt;EmployeeDataDTO&lt;/code&gt; and &lt;code&gt;EmployeeEditDataDTO&lt;/code&gt; classes.&lt;/p&gt;

&lt;p&gt;These two classes will act as your Data Transfer Objects or simply DTOs. They will store the data which you will pass in the API request body &amp;amp; carry that to the service for processing via the controller class.&lt;/p&gt;

&lt;p&gt;To generate these Java files, create a new package called &lt;code&gt;dto&lt;/code&gt; and add two files in it, one will be &lt;code&gt;EmployeeDataDTO.java&lt;/code&gt; and another one will be &lt;code&gt;EmployeeEditDataDTO.java&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here's the content &lt;code&gt;EmployeeDataDTO.java&lt;/code&gt; will hold:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Employee Id&lt;/li&gt;
&lt;li&gt;  Date for which leave is being applied
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.dto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lombok.Data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Data&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EmployeeDataDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And &lt;code&gt;EmployeeEditDataDTO.java&lt;/code&gt; will have the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Employee Id&lt;/li&gt;
&lt;li&gt;  Previous Date which user wants to edit&lt;/li&gt;
&lt;li&gt;  New Date for Leave
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.employee.attendance.dto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;lombok.Data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Data&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EmployeeEditDataDTO&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;previousDate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;newDate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;@Data&lt;/code&gt; is a useful annotation that bundles the features of &lt;code&gt;@ToString&lt;/code&gt;, &lt;code&gt;@EqualsAndHashCode&lt;/code&gt;, &lt;code&gt;@Getter&lt;/code&gt; / &lt;code&gt;@Setter&lt;/code&gt;. It is available under &lt;strong&gt;Lombok&lt;/strong&gt; dependency.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#testing-the-endpoints"&gt;
  &lt;/a&gt;
  Testing the Endpoints
&lt;/h3&gt;

&lt;p&gt;I have manually inserted some initial data into the database tables (by clicking the '&lt;strong&gt;+&lt;/strong&gt;' sign on the top right of the table) for testing purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Table &lt;strong&gt;Employee&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oHeNVFhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629567520359/2s3QD04W7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oHeNVFhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629567520359/2s3QD04W7c.png" alt="EmployeeData.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  Table &lt;strong&gt;Leave&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GUQnSu7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629567534131/OtLR96yhT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GUQnSu7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629567534131/OtLR96yhT.png" alt="LeaveData.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now you have to hit those 4 API endpoints to check if everything is working as expected.&lt;/p&gt;

&lt;p&gt;For this, you must download the Postman app in your local development environment from their &lt;a href="https://www.postman.com/downloads/"&gt;official downloads&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After downloading and successfully installing it, open the app and run your Spring Boot application.&lt;/p&gt;

&lt;p&gt;In case you are using an IDE like IntelliJ IDEA, you can run the Spring Boot application by following these instructions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click on &lt;code&gt;Add Configuration&lt;/code&gt; from the top menu bar.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5CSHow4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629819101193/MYBHdYvM7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5CSHow4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629819101193/MYBHdYvM7r.png" alt="IntelliJ_Start.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  A new dialog box will open, click on &lt;code&gt;Add new run configurations&lt;/code&gt; and select &lt;code&gt;Maven&lt;/code&gt; from the dropdown.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---e_Q5uEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629819195835/O9rIHLBr1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---e_Q5uEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629819195835/O9rIHLBr1.png" alt="Intellij\_2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  Give your run configuration a name. The working directory will automatically get picked. You just have to put the command &lt;code&gt;spring-boot:run&lt;/code&gt; inside the command line and then click Apply and OK and finally run the app.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SpWcccNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629819352596/Pa1cWbtj-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SpWcccNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629819352596/Pa1cWbtj-.png" alt="IntelliJ\_3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next thing you have to do is to hit the endpoints via the Postman app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;/api/get/all/leaves/{employeeId}&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JgKu79BB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025088432/AMc5bdmIX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgKu79BB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025088432/AMc5bdmIX.png" alt="p1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;/api/add/leave&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ra5MNgcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025148671/URar5VLyC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ra5MNgcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025148671/URar5VLyC.png" alt="p3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To check if the leave got added successfully or not, let's call the &lt;code&gt;api/get/all/leaves&lt;/code&gt; API again which you used in the first step:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxYQXsLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025268282/XUdyOFxDX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxYQXsLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025268282/XUdyOFxDX.png" alt="p4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see in the response, the employee whose ID is 1 now has two leaves. This same has been reflected in the Database:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d4ofHDmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629208559249/sJKFsK6x6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d4ofHDmp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629208559249/sJKFsK6x6.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;/api/edit/leave&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2RdkvKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025546222/fHKJniZaX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2RdkvKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025546222/fHKJniZaX.png" alt="p5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, let's check if the previous date has been modified or not, you will get:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hOI5IYP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025558307/aFRNBYKGF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOI5IYP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025558307/aFRNBYKGF.png" alt="p6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that the edit functionality is also working fine.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;/api/cancel/leave&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZdNEmco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025583725/KnYNGh0Si.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZdNEmco--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025583725/KnYNGh0Si.png" alt="p7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And now hitting the GET leaves API, you should only get one entry in response:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tI2WnQvv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025595391/prSYQC5h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tI2WnQvv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629025595391/prSYQC5h6.png" alt="p8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, all your endpoints are working as expected in the local development environment. Let's move forward to see how you can deploy these APIs to the server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-jar-file"&gt;
  &lt;/a&gt;
  Creating a JAR file
&lt;/h2&gt;

&lt;p&gt;A JAR(Java Archive) is a package file format used to cluster together all the Java class files and associated metadata and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform.&lt;/p&gt;

&lt;p&gt;In simple terms, a JAR file contains a compressed version of .class files, audio files, image files, or other directories.&lt;/p&gt;

&lt;p&gt;To create a JAR file, make sure Maven is installed in your local development environment. If not, follow the below steps to configure maven (In Windows OS):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Navigate to the official &lt;a href="https://maven.apache.org/download.cgi"&gt;Maven website&lt;/a&gt; and download the Maven zip file. For example: apache-maven-3.8.2-src.zip.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unzip the contents and copy the path of the &lt;code&gt;bin&lt;/code&gt; folder inside.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open your System Environment Variables from the control panel, find the &lt;code&gt;PATH&lt;/code&gt; variable then click on the &lt;code&gt;Edit&lt;/code&gt; button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the "Edit environment variable" dialog, click on &lt;code&gt;New&lt;/code&gt; and add the complete path of the &lt;code&gt;bin&lt;/code&gt; folder that you just copied.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, click on &lt;code&gt;OK&lt;/code&gt;. To test the configuration, open a new command prompt and type &lt;code&gt;mvn –version&lt;/code&gt;. If a version is visible to you that means the configurations are correct.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're using any other OS, you can find the installation steps for that on the official &lt;a href="https://maven.apache.org/install.html"&gt;Maven website&lt;/a&gt;. For more detailed steps, you can check out &lt;a href="https://www.baeldung.com/install-maven-on-windows-linux-mac#installing-maven-on-linux"&gt;this article&lt;/a&gt; as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, to create a JAR file for your application run the command &lt;code&gt;mvn clean install&lt;/code&gt; in your project's root directory.&lt;/p&gt;

&lt;p&gt;A new folder with the name &lt;strong&gt;Target&lt;/strong&gt; will be created. Inside this folder, you'll find your newly created JAR file.&lt;/p&gt;

&lt;p&gt;Another way to create a JAR file is from your IDE. For instance, in Intellij you can navigate to the &lt;strong&gt;maven&lt;/strong&gt; tab from the sidebar menu and double click &lt;strong&gt;Install&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lMCDqhqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629024765740/0QpDvlYH9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lMCDqhqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629024765740/0QpDvlYH9.png" alt="11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here's how your complete project structure should look like by now:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── lib
├── src
├── target
└── pom.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Inside &lt;code&gt;src&amp;gt;main&amp;gt;java&amp;gt;com&amp;gt;employee&amp;gt;attendance&lt;/code&gt; you should have the following files and structure:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├── controller&lt;br&gt;
│   └── AttendanceController.java&lt;br&gt;
├── dto&lt;br&gt;
│   └── EmployeeDataDTO.java&lt;br&gt;
│   └── EmployeeEditDataDTO.java&lt;br&gt;
├── service&lt;br&gt;
│   └── AttendanceService.java&lt;br&gt;
│   └── ConnectionService.java&lt;br&gt;
└── AttendanceApplication.java&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#deploying-the-application-to-aws"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Deploying the application to AWS&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;The final step would be to deploy your code to a server. In this section, you'll learn how you can deploy the application to AWS Elastic Beanstalk.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Using &lt;a href="https://aws.amazon.com/elasticbeanstalk/"&gt;Elastic Beanstalk&lt;/a&gt;, you can easily deploy and manage applications in the AWS Cloud without worrying about the infrastructure that runs those applications. It reduces management complexity without restricting choice or control. You simply upload your application, and Elastic Beanstalk automatically handles the details of capacity provisioning, load balancing, scaling, and application health monitoring.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#creating-elastic-beanstalk-environment"&gt;
  &lt;/a&gt;
  Creating Elastic Beanstalk environment
&lt;/h3&gt;

&lt;p&gt;Once you are signed in to your &lt;a href="https://aws.amazon.com/"&gt;AWS account&lt;/a&gt;, go to the search panel at the top and type "Elastic Beanstalk," and click create a new application on the top right.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w9yGzMRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628414450268/6WYLLQolG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w9yGzMRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628414450268/6WYLLQolG.png" alt="9.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It will ask for your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Application name&lt;/li&gt;
&lt;li&gt;  Application tags(Not mandatory)&lt;/li&gt;
&lt;li&gt;  Platform&lt;/li&gt;
&lt;li&gt;  Application code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enter your application name and optionally you can add up to 50 tags for the resources of your Elastic Beanstalk applications.&lt;/p&gt;

&lt;p&gt;For the platform, select "Java" from the dropdown and it will automatically fill the "platform branch" and "version" on its own.&lt;/p&gt;

&lt;p&gt;For the application code, select &lt;strong&gt;Upload your code&lt;/strong&gt; and then choose the JAR file built in a previous step.&lt;/p&gt;

&lt;p&gt;Review the configuration and launch the environment. As the application is being launched, you’ll see something similar to this on the environment dashboard:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7A2P1kQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213207438/Kl4fFE555.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7A2P1kQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213207438/Kl4fFE555.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once the application resources get deployed and the environment has been created, you’ll notice the health of the application remains &lt;strong&gt;Severe&lt;/strong&gt;. This is because the Spring Boot application still needs some configuration:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TXP8Bmiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628414938862/NyToPx8NN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TXP8Bmiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628414938862/NyToPx8NN.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's look at how to solve it in the next section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-spring-boot-through-environment-variables"&gt;
  &lt;/a&gt;
  Configuring Spring Boot Through Environment Variables
&lt;/h3&gt;

&lt;p&gt;By default, Spring Boot applications listen on port 8080 whereas Elastic Beanstalk expects the application to listen on port 5000.&lt;/p&gt;

&lt;p&gt;There are two ways to fix this error, either you have to change the port Elastic Beanstalk is configured to use, or change the port the Spring Boot application listens on. For this tutorial, you will change the port the Spring Boot application listens on as it is easier.&lt;/p&gt;

&lt;p&gt;For this, you have to define the &lt;strong&gt;SERVER_PORT&lt;/strong&gt; environment variable in the Elastic Beanstalk's environment and set its value to 5000.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;strong&gt;Configuration&lt;/strong&gt; from the sidebar menu on your environment page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the Configuration page, you'll have software configuration, click on &lt;strong&gt;Edit&lt;/strong&gt;:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ceo_d7_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213774936/vtKTvlq_4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ceo_d7_5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213774936/vtKTvlq_4.png" alt="12.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Next, you’ll see that there are already some environment variables set. They are set automatically by Elastic Beanstalk when it is configured to use the Java platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To modify the port that Spring Boot listens on, as mentioned above you need to add a new environment variable by the name &lt;code&gt;SERVER_PORT&lt;/code&gt; with its value 5000.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UbH3LFXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213878670/6wk-xbdys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UbH3LFXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629213878670/6wk-xbdys.png" alt="13.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Click on Apply and the configuration change will make the application restart.&lt;/p&gt;

&lt;p&gt;After it restarts, it will pick up the new configuration through the environment variables. In about a minute, you’ll get a healthy application instance up and running.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-the-application-in-the-cloud"&gt;
  &lt;/a&gt;
  Testing the Application in the Cloud
&lt;/h3&gt;

&lt;p&gt;Once deployed successfully, you will get your application base URL. You can also access the same from the sidebar:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5u5dXQQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214172635/IX4-BOGnI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5u5dXQQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214172635/IX4-BOGnI.png" alt="14.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now replace the &lt;code&gt;localhost:8080&lt;/code&gt; with this new URL and try to access one of your API endpoints:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bKe5loNo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214523523/3MIQWQ3KO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bKe5loNo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629214523523/3MIQWQ3KO.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And you can get the correct response. This means that the application has been deployed successfully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With this, you come to the end of this tutorial. The purpose of this tutorial was to use Spring Boot and HarperDB to create microservices. You also looked at the step-by-step process of how you can deploy the same application to AWS.&lt;/p&gt;

&lt;p&gt;Both Spring Boot and AWS are used extensively in the industry but HarperDB might be new for you. The reason for choosing HarperDB is because of its easy integration with the Spring Boot app along with the notable features that I have mentioned at the beginning of this article.&lt;/p&gt;

&lt;p&gt;I hope you learned something new. In case you get stuck somewhere, please feel free to shoot your doubts in the comments.&lt;/p&gt;

&lt;p&gt;Also, the complete source code of the application used in this tutorial can be found in this &lt;a href="https://github.com/ApoorvTyagi/Spring-Harper"&gt;GitHub Repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>java</category>
      <category>database</category>
      <category>aws</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Créer un backend en Javascript : Le système de module NodeJS</title>
      <author> Eric Le Codeur</author>
      <pubDate>Thu, 30 Sep 2021 11:28:52 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/creer-un-backend-en-javascript-le-systeme-de-module-nodejs-1jd6</link>
      <guid>https://dev.to/ericlecodeur/creer-un-backend-en-javascript-le-systeme-de-module-nodejs-1jd6</guid>
      <description>&lt;p&gt;Voici une série d'articles qui vous permettra créer des applications backend en Javascript.&lt;/p&gt;

&lt;p&gt;Node.js est aujourd'hui un incontournable, il est donc essentiel pour un développeur de le maitriser.&lt;/p&gt;

&lt;p&gt;Je vais donc publier un nouvel article environ au deux jours et petit à petit vous apprendrez tout ce qu'il y a à savoir sur Node.js&lt;/p&gt;

&lt;p&gt;Pour ne rien manquer suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#les-modules-nodejs"&gt;
  &lt;/a&gt;
  Les Modules NodeJS
&lt;/h2&gt;

&lt;p&gt;Écrire du code dans un fichier c'est bien beau mais si votre application est moindrement importante, votre fichier va vite devenir trop volumineux. &lt;/p&gt;

&lt;p&gt;C'est pourquoi il est préférable de séparer votre code en plusieurs modules (fichier) afin de rendre le code réutilisable et beaucoup mieux structuré&lt;/p&gt;

&lt;p&gt;Voici un exemple&lt;/p&gt;

&lt;p&gt;app.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gretting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Bonjour &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, bienvenue en NodeJS`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;gretting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il pourrait être intéressant de rendre le module greeting réutilisable. Pour ce faire nous allons le placer dans son propre fichier appeler gretting.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Bonjour &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, bienvenue en NodeJS`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Par défaut NodeJS ne permet pas d'utiliser cette fonction à partir d'un autre module. Pour ce faire il faut indiquer au module quels éléments devront être "exportable" :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Bonjour &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, bienvenue en NodeJS`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter ici la dernière ligne 'module.exports = greeting', cette fonction permet l'utilisation de la fonction greeting à partir d'un autre module.  &lt;/p&gt;

&lt;p&gt;À partir de app.js vous pouvez maintenant charger ce module avec la fonction 'require'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./gretting.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;La fonction 'require' va créer une référence avec le module greeting et placer cette référence dans la variable const greeting (cette variable aurait pu s'appeler un autre nom que greeting)&lt;/p&gt;

&lt;p&gt;À noter que la fonction 'require(./greeting.js') utilise le path './' cela permet d'indiquer a NodeJS que notre module se trouve dans le même dossier que notre fichier app.js&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exportation-multiple"&gt;
  &lt;/a&gt;
  Exportation multiple
&lt;/h3&gt;

&lt;p&gt;Il est possible d'exporté plusieurs éléments avec la fonction module.exports. Voici un exemple: person.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ford Mustang&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;L'export multiple se fait donc avec un objet qui contient plusieurs éléments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./person.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;À noter que la variable 'person' ne pointe par sur le 'name' ou 'car' directement, elle pointe sur l'objet qui est exporté. Donc pour retourné son contenu nous devons utiliser 'person.name'&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exportation-multiple-syntaxe-alternative"&gt;
  &lt;/a&gt;
  Exportation multiple (syntaxe alternative)
&lt;/h3&gt;

&lt;p&gt;Il est possible d'exporté plusieurs éléments avec la fonction module.exports. Voici un exemple: person.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mike Taylor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ford Mustang&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;L'utilisation reste la même :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./person.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Il est également possible d'utiliser la deconstruction&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./person.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#la-fonction-require-ex%C3%A9cute-le-module"&gt;
  &lt;/a&gt;
  La fonction 'require' exécute le module
&lt;/h3&gt;

&lt;p&gt;Lorsque l'on utilise la fonction require, le module chargé est exécuté. Voici un exemple&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// hello.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./hello.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dès que NodeJS exécute cette ligne, le module hello est également exécuté. Dans cette exemple, le module ne fait qu'un export mais si le module contenait du code, il serait exécuté, voici une exemple&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// hello.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bonjour Node !&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// app.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./hello.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si vous lancé app.js, vous verrez qu'il affichera 'Bonjour Node !' avant le 'Hello World'  car comme mentionné, le 'require' exéctue le module.&lt;/p&gt;

&lt;p&gt;Bref, tenez compte de ce fait lorsque vous créer vos modules afin d'éviter des comportement indésirable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;C'est tout pour aujourd'hui, suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt; afin d'être avisé de la parution du prochain article (d'ici deux jours).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CXXGraph Library : Header-Only C++ Library for Graph Representation and Algorithms </title>
      <author>ZigRazor</author>
      <pubDate>Thu, 30 Sep 2021 11:16:56 +0000</pubDate>
      <link>https://dev.to/zigrazor/cxxgraph-library-header-only-c-library-for-graph-representation-and-algorithms-1afk</link>
      <guid>https://dev.to/zigrazor/cxxgraph-library-header-only-c-library-for-graph-representation-and-algorithms-1afk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cxxgraph"&gt;
  &lt;/a&gt;
  CXXGraph
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXGraph"&gt;
        CXXGraph
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Header-Only C++ Library for Graph Representation and Algorithms
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ZigRazor/CXXGraph/blob/master/Icon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--om3usTQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ZigRazor/CXXGraph/raw/master/Icon.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
CXXGraph&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/ZigRazor/CXXGraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0b9841f69ef29cc485b3d302097010f2d296ed1dde60f3adac4ba71370dcd04/68747470733a2f2f636f6465636f762e696f2f67682f5a696752617a6f722f43585847726170682f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d37373341513248395251" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/zigrazor/cxxgraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c66e00601b49f804758f834a946e1329891101b719d307d83d5566b5701a982/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a696772617a6f722f63787867726170682f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a5f922a2d34eec75f084349c6c747c69d94eccd0935dc93e295a4a686d1c4564/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5a696752617a6f722f43585847726170682e737667" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/ZigRazor/CXXGraph/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/e3a3bede7aca95abde3fcdbf4645750e7da6aa728bdbd9cd655771c9a244d670/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5a696752617a6f722f43585847726170682e737667" alt="GitHub release"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Alerts"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Grade"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57a85d2ce2ebfa08308aa0e27c14e3e668b0075ece44e2d030a4298c089c85e0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d472b2b372e332e302d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d28ad01b651a380285f9c75dea25963780875fcea989db81cf85ef6a29adc048/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72657175697265642d432b2b31372d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e17b5a84de0de988ba21d8a70cd9bec1e3ef9c33bc75be3ec44c1cbff4b73604/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d434d616b65332e392d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae88698a90d8466f4372f695b517d9a65fc5b3f70cb781531c2074876047c846/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275696c642d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35a3866fb1a06659337b8fe3e8bfb6ff6705c702e1fae78d400d47217b00b766/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f556e6974546573742d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Share on &lt;a href="https://twitter.com/intent/tweet?text=Header-Only%20C++%20Library%20for%20Graph%20Representation%20and%20Algorithms%204&amp;amp;url=https://github.com/ZigRazor/CXXGraph&amp;amp;hashtags=cpp,headeronly,library,opensource,developers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#cxxgraph"&gt;CXXGraph&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#algorithm-explanation"&gt;Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dijkstra"&gt;Dijkstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dial"&gt;Dial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#bfs"&gt;BFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dfs"&gt;DFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#cycle-detection"&gt;Cycle Detection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#partition-algorithm-explanation"&gt;Partition Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#vertex-cut"&gt;Vertex-Cut&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#greedy-vertex-cut"&gt;Greedy Vertex-Cut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#classes-explanation"&gt;Classes Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-use"&gt;How to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#unit-test-execution"&gt;Unit-Test Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-test-installation"&gt;Google Test Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-test"&gt;How to Compile Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-test"&gt;How to Run Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#benchmark-execution"&gt;Benchmark Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-benchmark-installation"&gt;Google Benchmark Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-benchmark"&gt;How to Compile Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-benchmark"&gt;How to Run Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#packaging"&gt;Packaging&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#tarballs"&gt;Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#rpm"&gt;RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#deb"&gt;DEB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#install-and-uninstall"&gt;Install and Uninstall&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-linux-tarballs"&gt;Install Linux Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-rpm"&gt;Install RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-deb"&gt;Install DEB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-from-source"&gt;Install From Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-contribute"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#site"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#we-are-looking-for"&gt;We are Looking for...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CXXGraph&lt;/strong&gt; is a small library, header only, that manages the Graph and it's algorithms in &lt;strong&gt;C++&lt;/strong&gt;. In other words a "Comprehensive C++ Graph Library".&lt;/p&gt;
&lt;h2&gt;
Algorithm Explanation&lt;/h2&gt;
&lt;h4&gt;
Dijkstra&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm" rel="nofollow"&gt;Graph Dijkstras Shortest Path Algorithm(Dijkstra's Shortest Path)&lt;/a&gt;
&lt;strong&gt;Dijkstra's Algorithm&lt;/strong&gt; is used to find the shortest path from a source node to all other reachable nodes in the graph. The algorithm initially assumes all the…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXGraph"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;CXXGraph is an Header-Only  library, that manages the Graph and it's algorithms in C++. In other words a "Comprehensive C++ Graph Library".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-publish-my-project"&gt;
  &lt;/a&gt;
  Why publish my project?
&lt;/h2&gt;

&lt;p&gt;Some months ago I start this project with the idea to develop somenthing new, or to better say something that can help the developer in some cases or simple that does not have a "good" implementation in this language (C++). &lt;br&gt;
In fact the goal of the library is the &lt;strong&gt;portability&lt;/strong&gt;, &lt;strong&gt;simplicity of the interface&lt;/strong&gt;, and the &lt;strong&gt;certainty of the correct execution of the algorithms&lt;/strong&gt;.&lt;br&gt;
Before this project start i search for somenthing like this, but I didn't find anything similar, so I had decided to start this project.&lt;/p&gt;

&lt;p&gt;Now i need help to improve the library and to test it, so I partecipate to &lt;strong&gt;Hacktoberfest&lt;/strong&gt; to get some developer or use in touch with this project.&lt;/p&gt;

&lt;p&gt;If you have 5 minutes to get in touch, click on the project or write to me at &lt;a href="mailto:zigrazor@gmail.com"&gt;zigrazor@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you so much! &lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>contributorswanted</category>
      <category>githunt</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
