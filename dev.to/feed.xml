<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Ethereum mining in simple language; How to extract the second most important cryptocurrencies in the world?</title>
      <author>arman mohammadi</author>
      <pubDate>Sat, 18 Sep 2021 10:51:09 +0000</pubDate>
      <link>https://dev.to/armantech/ethereum-extraction-in-simple-language-how-to-extract-the-second-most-important-cryptocurrencies-in-the-world-35g2</link>
      <guid>https://dev.to/armantech/ethereum-extraction-in-simple-language-how-to-extract-the-second-most-important-cryptocurrencies-in-the-world-35g2</guid>
      <description>&lt;p&gt;ethereum is the second largest currency in the world and one of the most important extractable currencies in the cryptocurrency market. Many digital currency market players consider ethereum mining to be an important and reliable source of income. If you are also interested in ethereum extraction, this article is a comprehensive but simple guide to ethereum extraction. Please stay with us until the end of the article.&lt;/p&gt;

&lt;p&gt;In this article, we will assume that you know what an ethereum is and how it works by default. So we will only give a brief explanation about this.&lt;/p&gt;

&lt;p&gt;What is an ethereum?&lt;br&gt;
ethereum extraction&lt;br&gt;
ethereum creator Vitalik Butrin became acquainted with Bitcoin at the age of 17 and has since started writing for Bitcoin magazine and offering suggestions for improving it. But since these proposals did not materialize, he decided to build his own digital currency. In 2015, ethereum was introduced to the market.&lt;/p&gt;

&lt;p&gt;ethereum is actually a blockchain and its native cryptocurrency is called ETH. ethereum has its own browser and language and payment system. This blockchain also has no single and central controller and thousands of users voluntarily control it with their computer systems around the world. These users are called nodes or node networks. Nodes perform ethereum transaction verification and smart contracts on the network.&lt;/p&gt;

&lt;p&gt;What is extraction?&lt;br&gt;
In simple terms, extraction is the process of solving complex mathematical equations. Miners are network nodes that use their computer's processing time and power to solve these equations. ethereum extraction algorithm is proof of work that confirms ether or ethereum transactions. In addition, miners are responsible for creating new tokens and blocks in the process. In the end, every miner will be rewarded for their successful activity.&lt;/p&gt;

&lt;p&gt;Poof of work algorithm is the most popular consensus algorithm in blockchain cryptocurrencies. The consensus algorithm allows the user to use the same source of information as other users and ensures that all users on the network use the same source. The purpose of this algorithm is to prevent the entire system from being harmed when one or more users leave the network. The proof of work algorithm was first used in Bitcoin, but its concept and application is not limited to Bitcoin.&lt;/p&gt;

&lt;p&gt;Why is it necessary to extract ethereum?&lt;br&gt;
ethereum extraction&lt;br&gt;
The ethereum network, as we said, has its own blockchain. Any transaction in this blockchain must be approved by the miners. That's why transactions take time. This time is spent approving ethereum miners.&lt;/p&gt;

&lt;p&gt;ethereum transactions enter the ethereum blockchain after confirmation. So the blockchain needs to have enough space to store transactions. In addition to confirming transactions, miners add new blocks to the blockchain. In general, the task of a miner is to make sure that no transactions are made twice by mistake and that no errors occur in the network.&lt;/p&gt;

&lt;p&gt;When a miner can solve one of the equations, he adds the corresponding block to the blockchain and receives his reward. By doing this, the three goals of the extraction work are:&lt;/p&gt;

&lt;p&gt;Confirm correct transactions&lt;br&gt;
Add new blocks and create new storage space&lt;br&gt;
Receive rewards by miners and add new coins to the network&lt;br&gt;
will be done.&lt;/p&gt;

&lt;p&gt;Who is Miner? What is a Miner?&lt;br&gt;
ethereum extraction&lt;br&gt;
Miner is a person who provides his / her computer processing power to the network to approve transactions and record new transactions. Miner actually does this in the hope of receiving a reward from the network (new block extraction bonus, transaction registration fee).&lt;/p&gt;

&lt;p&gt;But it is not possible to extract ethereum with GPUs from home computers. ethereum extraction is actually done with the help of extraction pebbles, which is a collection of powerful graphics cards. These pebbles are also called miners.&lt;/p&gt;

&lt;p&gt;What is GPU Mining?&lt;br&gt;
GPU mining or mining with graphics cards is a popular way to extract cryptocurrencies, especially ethereum. This method was formed because bitcoin mining with CPUs (CPUs) was increasing day by day and on the other hand, it had created a kind of monopoly among ISIC manufacturers.&lt;/p&gt;

&lt;p&gt;GPU (GPU) extraction tools were much cheaper, and this method was able to find its place among important cryptocurrencies such as ethereum and Monroe. These cryptographers have written their algorithms based on the presence of small extractors and their persistence in the network and want to take care of them.&lt;/p&gt;

&lt;p&gt;What is the ethereum Extraction Algorithm?&lt;br&gt;
Digital currencies use different consensus algorithms for their operations. Consensus algorithms help the network to tolerate error. The two most important consensus algorithms are the Proof of Work algorithm and the Proof of Stake algorithm. Bitcoin and ethereum both use proof-of-work algorithms as market leaders in digital currencies. In the proof-of-work algorithm, the user must provide the network with the processing power of his computer to participate in the network and make a profit.&lt;/p&gt;

&lt;p&gt;In this algorithm, validation nodes (hereinafter referred to as miners or miners) perform the hashing of information. Hashing means creating a unique solution (function) to add information to the blockchain. A hash is a seemingly random string of letters and numbers that is created when solving a hash function. This string of letters and numbers is actually encrypted transaction information that is to be stored in the blockchain.&lt;br&gt;
1-2. Important points before choosing an extraction pool&lt;/p&gt;

&lt;p&gt;Currently, several small and large extraction ponds are active in the ethereum extraction process and have very different characteristics. But each miner can only join one pool. So before you make your final decision, you can experience membership in different pools and read about them well. Important points to consider when choosing a pool:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The size of the pool&lt;br&gt;
The more people who are members of the pool and the more devices that share their processing power with others, the better the chances of solving a block for all members. However, if the number of pool members is too large, the reward received by each member will decrease. For this reason, the size of the pool can be very effective in the profitability of its membership.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Currency payment method in the pool&lt;br&gt;
Another point to keep in mind when choosing a pool is the minimum withdrawal of currency from the account. If the minimum withdrawal is very high, for example 1 ethereum, you have to wait a long time for the currency you mined to reach this amount. So you will need a lot of time to make a profit or change the pool.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pool fee&lt;br&gt;
Extraction pools, like any other service center, receive a fee for managing and organizing extraction and distribution of rewards among users. When you join the pool and use its services, you also have to pay some of your income to the pool as a fee. This fee is usually between 1% and 3%. It is better not to look for pools with 0% fee, because it is not right to trust them.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Method 3: Subscribe to cloud mining services&lt;br&gt;
Cloud extraction services are services in which a person does not need to share the processing power of a computer or extraction rig with others to subscribe, but can only extract ethereum for a fee or, in fact, rent an extraction machine.&lt;/p&gt;

&lt;p&gt;These services are actually a very large mining farm where people actually pay to participate in the mining farm costs and receive ethereum in return. This method is much easier than the other two methods and does not require much time or technical knowledge. But before joining a cloud mining service, ask yourself the following questions:&lt;/p&gt;

&lt;p&gt;Why should one lease one's mining machine to others when one can make a profit with it?&lt;br&gt;
Why not buy ethereum with the same membership fee to save in your account?&lt;br&gt;
Try to answer these questions carefully and thoroughly. Membership in these services is usually not cost-effective. In fact, cloud mining services are guaranteed to be more profitable for its operators than for its users.&lt;/p&gt;

&lt;p&gt;What are the problems of ethereum extraction?&lt;br&gt;
ethereum extraction&lt;br&gt;
ethereum mining, like most digital currency mining, has many challenges and opportunities. Although mining is still a lucrative business given ethereum price growth, you should be aware of its problems before starting any business. ethereum and bitcoin mining is no exception. The high cost of electricity and mining equipment, exposure to hacker attacks, and decentralization are some of the problems that we will address below.&lt;/p&gt;

&lt;p&gt;1- High costs of electricity and extraction equipment&lt;br&gt;
Mining cryptocurrencies is generally costly. If you want to extract ethereum legally and at the electricity rate, you have to pay approximately 900 tomans per kilowatt hour. This cost is usually calculated during the month and of course it varies depending on the model of your device. But keep in mind that the more powerful and profitable the device you buy, the higher its electricity costs will be.&lt;/p&gt;

&lt;p&gt;ethereum extraction devices are another part of your costs. Graphic ethereum extraction graphs are not cheap and are out of competition, especially with the constant advancement of technology. So if you want to upgrade your device by increasing the network hash rate, the extraction costs will also increase.&lt;/p&gt;

&lt;p&gt;2- The risk of hackers attacking your property&lt;br&gt;
Avoid ransomware&lt;br&gt;
Hackers are always one step ahead of security technologies. If you do not take good care of your assets and computer system, you may be exposed to cryptocurrencies and your passwords may be stolen. In 2017 alone, attacks on computer browsers increased by 31%. So if you set up only one mining node and do not secure it, you are actually doing an important service to hackers.&lt;/p&gt;

&lt;p&gt;3- Centralization&lt;br&gt;
The initial idea of ​​cryptocurrencies was to decentralize and take the power of money management out of the hands of a specific source such as a bank. But as time went on and many people turned to mining, it became necessary to design more powerful and better mining machines. Of course, the technology of making these devices and pebbles was given to certain companies. This is practically the opposite of the concept of decentralization of digital currencies. Although ethereum has entered the process using fewer graphic pebbles, it is still at risk.&lt;/p&gt;

&lt;p&gt;So before entering the ethereum extraction process, please know all the challenges you and the network face. Start buying and selling with full awareness to help both yourself and the network and ultimately have a healthy and secure income (source).&lt;br&gt;
Is ethereum extraction cost effective?&lt;br&gt;
For now, yes, as long as you follow the tips in the previous section of this article. ethereum reached $ 4,000 in 2021 and reached its highest ceiling. This shows that the approach of the people to the ethereum market is very positive and the extraction will be very profitable if the details are observed. For example, mining with the Pandaminer B5 Plus device will currently generate about 6 million Tomans per month for Miner.&lt;/p&gt;

&lt;p&gt;In the future, the conditions for making money from the ethereum network will probably change. ethereum is planning to move to the ethereum 2 network. This blockchain network will continue to operate with a stock proof algorithm. If this happens, the ethereum extraction process will be obsolete. But at the time of writing, ethereum extraction is still cost-effective.&lt;/p&gt;

&lt;p&gt;Know more:&lt;br&gt;
How long does ethereum extraction last? What percentage of ethereum has been extracted so far?&lt;br&gt;
ethereum, like Bitcoin, has no limit on the number of tokens it can offer. At the time of writing, 116,870,559 ethereums have been extracted, and will continue to be extracted until ethereum migrates to the blockchain network with the stock proof algorithm. Of course, to protect the network from inflation, only 18 million ethereums are extracted annually. This means two ethereums approximately every 14 seconds.&lt;/p&gt;

&lt;p&gt;How to extract ethereum 2.0?&lt;br&gt;
ethereum 2.0&lt;br&gt;
ethereum 2.0 is not actually extracted. ethereum 2 uses a stock proof algorithm. In this algorithm, instead of the need for processing power, it is necessary to register participation in the network with your assets. Having 32 ethereums, for example, will qualify you to participate in the network and decide whether to make changes or approve transactions. By providing these 32 ethereums to the network for approval, you will receive a reward (source).&lt;/p&gt;

&lt;p&gt;Is ethereum extraction legal in Iran?&lt;br&gt;
According to a government decree, the extraction of bitcoins, ethereum and other cryptocurrencies is possible only with the permission of the Ministry of Industry, Mines and Trade; Of course, in free trade zones, the ministry has delegated the responsibility of issuing licenses to the Free Zones Organization. Also, in some cities, there are restrictions on the establishment of Ramzarz mining units: it includes a limit of 120 km in Tehran, 50 km in Isfahan and 30 km in the centers of other provinces.&lt;/p&gt;

&lt;p&gt;Electricity supply is also possible by receiving a branch from the national grid or the construction of a power plant outside the national grid. . But according to the same law, the extraction of ciphers during peak hours is prohibited. Another important point of this decree is that the production centers of cryptocurrencies are considered as an industrial production unit and will be subject to the tax law, but if they issue their cryptocurrencies and return the resulting currency to Iran, their tax will be zero ( Source).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-free-ethereum-extraction-possible"&gt;
  &lt;/a&gt;
  Is free ethereum extraction possible?
&lt;/h2&gt;

&lt;p&gt;We keep emphasizing on the Wallx blog that "nothing is completely free", and so does ethereum Free! The least you can ask for when extracting ethereum for free is the internet, computer or mobile processing, and of course your time. However, there are tools that you can use to get ethereum without paying directly.&lt;/p&gt;

&lt;p&gt;Of course, these tools have little profitability, and in many cases the profit is so low that even its harvest is not economical. But the choice is yours anyway. The Idle-Empire website is one of the sites where you can get ethereum by subscribing and choosing from a variety of activities. For example, filling out questionnaires, watching promotional videos, and playing games are some of these methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-the-best-ethereum-extraction-software"&gt;
  &lt;/a&gt;
  Introducing the best ethereum extraction software
&lt;/h2&gt;

&lt;p&gt;ethereum extraction software, like other cryptocurrencies, covers a very wide range. In fact, there is a long list of ethereum extraction software that you can not excel at until you have used them. This makes it difficult to choose better software. But relying on the experience gained in this area and analyzing hundreds of user feedback and critiques can provide a limited but strong list of ethereum extraction software.&lt;/p&gt;

&lt;p&gt;1- ETHminer software&lt;br&gt;
The first recommended software is ETHminer software. As the name implies, this software is designed solely for ethereum Extraction and now supports Linux, Mac and Windows operating systems. When downloading this software, pay attention to select the version related to your operating system. With this software, in addition to ethereum, you can extract other cryptocurrencies that use the Ethash algorithm; Including Expansion, Elysmus, Metavars, Myosquin, Pearl, Classical ethereum, etc.&lt;/p&gt;

&lt;p&gt;2- CGMiner software&lt;br&gt;
The next software is CGMiner, which was released in 2011 and is still one of the most popular mining software. The main reason for the popularity and ubiquity of CGMiner is its excellent compatibility with three different hardware ASIC, FPGA, GPU. CG software is an open source software written in C language. The advantages of this software include measuring the desired hash rate with zero delay as well as advanced detection of new blocks. This software is also available for Linux, Mac and Windows operating systems.&lt;br&gt;
3- BitMinter software&lt;br&gt;
The third application is BitMinter, which offers great features to its users; These include a clear graphical interface as well as a very high connection speed to the Bitminter mining pool. This software entered the market in 2011 and it can be said that it has the most experienced mining pools in the field of cryptocurrency mining, so that it now has 450,000 registered user accounts. Another advantage of this software is that unlike CGMiner, it does not need to be installed, because it is based on the Java Network Launch Protocol (JNLP). You can easily run it on ASIC, FPGA, GPU hardware. The software is also compatible with Linux, Mac and Windows operating systems (source).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;ethereum mining, like bitcoin mining, is an opportunity for digital currency market enthusiasts to both contribute to and benefit from network stability and security. In this Walx article, we tried to explain what is needed for ethereum mining. From now on, start the extraction rig with you to start extracting this amazing cryptocurrency.&lt;/p&gt;

&lt;p&gt;If you have questions about Bitcoin or ethereum mining, ask us in the comments section.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Arrays: Deletion with searching in C++</title>
      <author>CallMe_Shinzo</author>
      <pubDate>Sat, 18 Sep 2021 10:42:35 +0000</pubDate>
      <link>https://dev.to/callme_shinzo/arrays-deletion-with-searching-in-c-39an</link>
      <guid>https://dev.to/callme_shinzo/arrays-deletion-with-searching-in-c-39an</guid>
      <description>&lt;p&gt;I was practising arrays in C++, for competitive programming. While coding for basic operations, I thought to code for deleting elements while searching for them. &lt;/p&gt;

&lt;p&gt;Jumped to google and after searching for like 30 minutes, I got no stuff related except one article from GFG, which showed me a complex code. But the code from GeeksforGeeks didn't run when array contained same value elements. Without wasting time on searching, I started writing algorithm for the solution I want. &lt;br&gt;
And after an hour, I was able to write an algorithm which works for array with same elements, and array with different elements.&lt;/p&gt;

&lt;p&gt;I don't know whether solution is available on internet or not, it must be there, but hard to find. See if my solution helps in this, although the time complexity of this solution is not as efficient as it should be.&lt;/p&gt;

&lt;p&gt;The program doesn't include any STL functions, since I am a beginner in DSA with C++ twice.&lt;/p&gt;

&lt;p&gt;Link to GFG solution : &lt;a href="https://www.geeksforgeeks.org/delete-an-element-from-array-using-two-traversals-and-one-traversal/"&gt;https://www.geeksforgeeks.org/delete-an-element-from-array-using-two-traversals-and-one-traversal/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
int deleteSearch(int a[],int n, int val){

// val is value to be searched
// n is the size of static array

     int i = 0;  
     while( i &amp;lt; n){

         if(a[i] == val) {

             //shifting and deleting elements
             while(i &amp;lt; n){
                 a[i] = a[i+1];
                 i++;

             }

             n--;
             i = 0;

         }

         else 
             i++;

     }
     return n;
 }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The program works for all cases.  Please share you views,corrections and solutions.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>arrays</category>
      <category>datastructure</category>
      <category>programming</category>
    </item>
    <item>
      <title>Material-UI is now MUI</title>
      <author>Rakesh S Nakrani</author>
      <pubDate>Sat, 18 Sep 2021 10:39:53 +0000</pubDate>
      <link>https://dev.to/rakesh_nakrani/material-ui-is-now-mui-1o9h</link>
      <guid>https://dev.to/rakesh_nakrani/material-ui-is-now-mui-1o9h</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-materialui-mui-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Material-UI (MUI React)?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Do you know React.js? If &lt;strong&gt;yes&lt;/strong&gt;, then 90% chance you know the &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; is a popular React component library. I must say Material-UI is the &lt;a href="https://retool.com/blog/react-component-libraries/"&gt;top&lt;/a&gt; general-purpose library out there in the market. It follows Google’s material design guidelines, components, and tools to make web applications faster.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-origin"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The origin&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Material-UI &lt;a href="https://www.text-em-all.com/blog/material-ui-the-internet-found-our-ui-project"&gt;started&lt;/a&gt; as a React Implementation of Google’s Material Design specification back in 2014. The goal was simple, to entitle React developers to use Material Design. &lt;/p&gt;

&lt;p&gt;The React community is excited about new features, so the MUI team keeps adding them.&lt;/p&gt;

&lt;p&gt;Over 2200 developers helping hand to &lt;a href="https://github.com/mui-org/material-ui/graphs/contributors"&gt;contribute&lt;/a&gt; so far with an aim to build the customer-facing application, tools, and mobile-hybrid apps. Now React Material-UI is the best react component library out there in market.&lt;/p&gt;

&lt;p&gt;This post is based upon Material-UI turns to MUI, here I am going to use the &lt;strong&gt;MUI&lt;/strong&gt; term for upcoming sections.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-larger-focus-in-mind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;A Larger Focus in mind&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Material-UI had a &lt;a href="https://mui.com/blog/2020-developer-survey-results/#comparison-with-last-year"&gt;survey&lt;/a&gt; last year about improving the Material Design implementation was down by 60%. At the same time, 5x more developers were struggling with customizing the components.&lt;/p&gt;

&lt;p&gt;Based upon that context MUI v5 in 2019. The primary focus was to give a new and improved focus on DX(Developer Experience). The new &lt;a href="https://mui.com/blog/2020-developer-survey-results/#comparison-with-last-year"&gt;v5.0.0&lt;/a&gt; release has new initiatives that broaden the MUI horizon.&lt;/p&gt;

&lt;p&gt;MUI’s goal is to become the most effective tool to build UIs while making access to many as possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-new-in-mui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What’s new in MUI?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Let’s jump into the brand new MUI. Many people combine or synonym Material-UI with Google. That is super great. But the both Google’s Material Design and Material-UI is identical to each other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BoVZJmJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zr98vibbg5ztsjszmmf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BoVZJmJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zr98vibbg5ztsjszmmf.gif" alt="mui-new-component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#new-name"&gt;
  &lt;/a&gt;
  &lt;strong&gt;New Name&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Material-UI is now MUI. It stands for &lt;strong&gt;M&lt;/strong&gt;aterial to build &lt;strong&gt;UI&lt;/strong&gt;s.&lt;br&gt;
It is quite shorter many people already used it for pronouncing Material-UI.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#new-domain-name"&gt;
  &lt;/a&gt;
  &lt;strong&gt;New Domain Name&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Moved from &lt;a href="https://material-ui.com"&gt;https://material-ui.com&lt;/a&gt; to &lt;a href="https://mui.com"&gt;https://mui.com&lt;/a&gt; a very easy to type and find a domain.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#new-logos"&gt;
  &lt;/a&gt;
  &lt;strong&gt;New Logos&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;The new MUI logo is quite the same as an older one. They removed the 3D perspective and keep it simple as possible to adhere to the new brand identity. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iyi_6tLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b112ak3inb4pmdspenky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iyi_6tLs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b112ak3inb4pmdspenky.png" alt="mui-new-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#new-package-names"&gt;
  &lt;/a&gt;
  &lt;strong&gt;New Package Names&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;This is a breaking change - The package names have changed in MUI v5. The npm name moved from @material-ui to &lt;a href="https://www.npmjs.com/org/mui"&gt;@mui&lt;/a&gt;. For more details, you may see the release notes.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#new-website-amp-documentation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;New Website &amp;amp; Documentation&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;I must say, the new Documentation helper guide is mindblowing. MUI team really understands the pain points of their developers. Mind-blowing sections like Getting started, components, API, customization, how-to guides, and styles are completely restructured and aim to ease finding each detail through Algolia search. &lt;/p&gt;

&lt;p&gt;You’ll find a completely different theme from Material Design with having new typefaces, colors, box-shadows with powerful theming features of v5.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hHN7A7YY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiyseryja1wfvlin9cnq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hHN7A7YY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiyseryja1wfvlin9cnq.png" alt="mui-documentation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#color-palette"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Color Palette&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Following is the new color palette of the MUI brand.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bscuQxnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us9etw1lrzkzg5y556po.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bscuQxnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/us9etw1lrzkzg5y556po.png" alt="mui-color-palette"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#mui-core"&gt;
  &lt;/a&gt;
  &lt;strong&gt;MUI Core&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://mui.com/core/"&gt;MUI Core&lt;/a&gt; is made for reusable, accessible UI components that you can combine to build your own website or web app. The components are free and also open-source, so you can edit them to fit your design system perfectly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uTCG6N1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6osz5arftfmk5cyhkye.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uTCG6N1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6osz5arftfmk5cyhkye.gif" alt="mui-core"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Features&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Component library having 40+ building blocks covering Button, Text Field, Table, and lots more.&lt;br&gt;
Custom Theming - Start by defining your ideal design system, then build towards that goal.&lt;br&gt;
Styling - CSS utility classes provide an easy way to add styling for common use cases.&lt;br&gt;
[image]&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#mui-x"&gt;
  &lt;/a&gt;
  &lt;strong&gt;MUI X&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://mui.com/x/"&gt;MUI X&lt;/a&gt; is the premium product of MUI. Using the most powerful Data Grid on the market, you'll be able to build complex applications. &lt;br&gt;
The MUI X package makes it possible for apps to have complex use-cases that are supported by several advanced components.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Grid&lt;/li&gt;
&lt;li&gt;Date Picker&lt;/li&gt;
&lt;li&gt;Tree View&lt;/li&gt;
&lt;li&gt;Sparkline Chart&lt;/li&gt;
&lt;li&gt;Charts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The MUI Data Grid is a data table powerhouse. It comes with a multitude of features that make working with lots of data more efficient. From Editing to filtering MUI X is available for both Free and Premium plans of MUI.&lt;/p&gt;

&lt;p&gt;Follow the MUI X &lt;a href="https://github.com/mui-org/material-ui-x/projects/1"&gt;roadmap&lt;/a&gt; for future updates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ffYgMJ5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr85n29yhh2xm4946ahn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ffYgMJ5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr85n29yhh2xm4946ahn.png" alt="mui-x"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#all-new-mui-store"&gt;
  &lt;/a&gt;
  &lt;strong&gt;All New MUI Store&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Find your desired premium MUI &lt;a href="https://mui.com/store"&gt;template&lt;/a&gt; in different categories like landing pages, Dashboard Templates and, E-commerce Templates.&lt;/p&gt;

&lt;p&gt;The fun fact is the MUI store collection has an average of 4.5 ratings with hand-tested by the MUI team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xRVqMJR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b68evu3ntfgy69vojhoz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xRVqMJR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b68evu3ntfgy69vojhoz.png" alt="mui-store"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#design-kits"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Design Kits&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;MUI &lt;a href="https://mui.com/design-kits/"&gt;Design Kits&lt;/a&gt; is now in your favorite design tools - Sketch, Figma, and XD. &lt;/p&gt;

&lt;p&gt;Pick your favorite design tool, whether it's XD, Figma, or Sketch, to enjoy and use MUI components. Boost consistency and facilitate communication when working with developers.&lt;/p&gt;

&lt;p&gt;Designing with the same library will make development easier because you'll understand how it works, no matter you are Designers, Product Managers, or Developers you will surely love the MUI Design kits.&lt;br&gt;
[image]&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-team-behind-mui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Team behind MUI&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Most of MUI's core contributors are volunteers, and without the support of the community, MUI wouldn't be able to exist. There are a lot of professionals from different countries contributing to the MUI project.&lt;/p&gt;

&lt;p&gt;Here is Core &lt;a href="https://mui.com/about/"&gt;Team&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eqw0lTTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ils9y3g96n06bc4gb2d0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eqw0lTTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ils9y3g96n06bc4gb2d0.png" alt="mui-team"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-support-mui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to support MUI?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can support MUI via three different channels&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Give them &lt;a href="https://github.com/mui-org/material-ui/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc"&gt;feedback&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Answer questions on &lt;a href="https://stackoverflow.com/questions/tagged/material-ui"&gt;Stackoverflow&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Support them Financially via &lt;a href="https://opencollective.com/material-ui"&gt;Open collective&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#showcase"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Showcase&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can find some of the &lt;a href="https://mui.com/discover-more/showcase/"&gt;public&lt;/a&gt; apps using MUI. The websites included there have the following dimensions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-Material Design Customization&lt;/li&gt;
&lt;li&gt;High Traffic&lt;/li&gt;
&lt;li&gt;Open Source&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#open-source-react-mui-templates"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Open Source React MUI Templates&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://material-ui.com/store/items/berry-react-material-admin-free/"&gt;Berry Free&lt;/a&gt; React Admin Dashboard&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material-ui.com/store/items/minimal-dashboard-free/"&gt;Minimal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material-ui.com/store/items/devias-kit/"&gt;Devias&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#premium-react-material-mui-templates"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Premium React Material MUI Templates&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can find the top 10 react material-ui admin templates in my other &lt;a href="https://dev.to/rakesh_nakrani/10-best-react-material-ui-admin-template-51ob"&gt;post&lt;/a&gt;. But here I’m list few of popular templates.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://material-ui.com/store/items/berry-react-material-admin/"&gt;Berry&lt;/a&gt; React Dashboard Template&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://material-ui.com/store/items/flexy-react-admin-dashboard/"&gt;Flexy&lt;/a&gt; React&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material-ui.com/store/items/material-app/"&gt;Material App Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Helping your favorite Open Source Project with Stakes.social</title>
      <author>Vincent Villafuerte</author>
      <pubDate>Sat, 18 Sep 2021 10:32:40 +0000</pubDate>
      <link>https://dev.to/vinzvinci/helping-your-favorite-open-source-project-with-stakes-social-dc8</link>
      <guid>https://dev.to/vinzvinci/helping-your-favorite-open-source-project-with-stakes-social-dc8</guid>
      <description>&lt;p&gt;As we get free to use the open-source software, maybe there's something on our mind that we should give back to the project that helped us. Yeah, helping them to fix bugs, make changes or make suggestions on their project, but there's also another way to help them and that is the Stakes.social. In &lt;a href="https://stakes.social/"&gt;Stakes.social&lt;/a&gt; you can support their development cost by staking $DEV token.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-and-disadvantages-of-oss"&gt;
  &lt;/a&gt;
  Advantages and Disadvantages of OSS
&lt;/h2&gt;

&lt;p&gt;There's a lot of advantages and disadvantages of Open Source Software, but these are the highlights I listed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Advantages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Created by skillful and talented people. &lt;/li&gt;
&lt;li&gt;People can use it for free depending on the license&lt;/li&gt;
&lt;li&gt;Open-source software may benefit many businesses &lt;/li&gt;
&lt;li&gt;Help you become more flexible.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Disadvantages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development costs &lt;/li&gt;
&lt;li&gt;People come and go&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-stakessocial"&gt;
  &lt;/a&gt;
  What is Stakes.social?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.devprotocol.xyz/en/stakes-social/"&gt;Stakes.social&lt;/a&gt; is the first official Decentralized application (Dapp) built on the &lt;a href="https://devprotocol.xyz/"&gt;Dev Protocol&lt;/a&gt; that was released in June 2020. Stakes.social is a new sponsor platform where both developers and sponsors are rewarded with tokens if they support their favorite projects by staking DEV tokens. Dev Protocol is a technology that monetizes people's projects and makes everyone happy.&lt;/p&gt;

&lt;p&gt;If you are familiar with some projects like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stakes.social/0xcEBD1BF31DF3E3697Ea26e2F94F9E3644C809F46"&gt;vue-i18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stakes.social/0xB96cBb406F8Eb2712eD8A9055e285E28fd076548"&gt;redux-toolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stakes.social/0x44d871aebF0126Bf646753E2C976Aa7e68A66c15"&gt;chalk&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;People are loving them, supporting their projects, and these projects have one of the most stakes on Stakes.social. There's a lot of projects onboarded there that you may like to support. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#buy-sell-dev"&gt;
  &lt;/a&gt;
  Buy / Sell $DEV
&lt;/h2&gt;

&lt;p&gt;You can buy or sell DEV tokens on various DEXs (Decentralized Exchange) like Uniswap. If you are new to crypto, please see the guide &lt;a href="https://docs.devprotocol.xyz/en/stakes-social/how-to-buy/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--01iTWcFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/73097560/133878508-5a70db2b-28bf-4706-a707-78c49c85d6cb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--01iTWcFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/73097560/133878508-5a70db2b-28bf-4706-a707-78c49c85d6cb.gif" alt="Buy/DEV"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#earn-dev-while-supporting-oss-on-stakessocial"&gt;
  &lt;/a&gt;
  Earn $DEV while supporting OSS on Stakes.social
&lt;/h2&gt;

&lt;p&gt;It is like &lt;a href="https://github.com/sponsors"&gt;GitHub sponsors&lt;/a&gt; but it differs because your money will not be lost if you stake it to the Open Source Project on Stakes.social but it will increase just like at investment and the creator of the open-source project will also be rewarded with your $DEV. It is best to hold your $DEV in Stakes.social to increase your support to their project, but don't worry because you can withdraw your $DEV anytime if needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-a-simple-explanation"&gt;
  &lt;/a&gt;
  In a simple explanation
&lt;/h3&gt;

&lt;p&gt;The ecosystem can have two types of participants where supporters can earn through staking and creator get rewards for monetizing their activity on the platform.&lt;/p&gt;

&lt;p&gt;In my own opinion, it is a win-win situation 💯 &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-key-features-of-stakessocial"&gt;
  &lt;/a&gt;
  The Key Features of Stakes.social
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To help the open-source community&lt;/li&gt;
&lt;li&gt;Tokenize Open Source Software assets&lt;/li&gt;
&lt;li&gt;Both developers and sponsors are rewarded with $DEV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is not limited to you because you can also onboard your open-source project and stake to your own project on Stakes.social. But it is also best to support other Open Source Developer just like you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onboard-your-oss-to-stakessocial"&gt;
  &lt;/a&gt;
  Onboard your OSS to Stakes.social
&lt;/h2&gt;

&lt;p&gt;If you have Open Source Project that needs financial support, you can onboard your project to the Stakes.social. In order to get support from the community, you can tweet your project on Twitter and tell them that you onboarded your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QjoUQ0Ow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/73097560/133878987-7a6322dd-6b1b-46cd-b5ad-b80eda829729.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QjoUQ0Ow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/73097560/133878987-7a6322dd-6b1b-46cd-b5ad-b80eda829729.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the full details of the onboard guide &lt;a href="https://docs.devprotocol.xyz/en/stakes-social/onboard-guide/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-the-following-example-of-a-wallet-that-accepted-on-stakessocial"&gt;
  &lt;/a&gt;
  Here's the following example of a wallet that accepted on Stakes.social
&lt;/h3&gt;

&lt;p&gt;A wallet is used for managing your crypto assets. You need to have a wallet to store the DEV tokens on the Ethereum Network. Since Dev Protocol doesn’t provide you with a wallet function, you have to get one by yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIgFMDfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/73097560/133844169-44850555-9c8b-49d8-a5e7-5e18d4e16238.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIgFMDfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/73097560/133844169-44850555-9c8b-49d8-a5e7-5e18d4e16238.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ready-your-gas-fee"&gt;
  &lt;/a&gt;
  Ready your Gas fee
&lt;/h3&gt;

&lt;p&gt;You need a gas fee to register at Stakes.social. It fluctuates depending on the congestion condition, however, you would need about 0.0436ETH. Read the full details &lt;a href="https://docs.devprotocol.xyz/en/stakes-social/onboard-guide/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#guide-to-get-support"&gt;
  &lt;/a&gt;
  Guide to get support
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Write a good &lt;a href="https://www.freecodecamp.org/news/how-to-write-a-good-readme-file/"&gt;README&lt;/a&gt; for your project&lt;/li&gt;
&lt;li&gt;Tweet it and don't forget to include the &lt;a href="https://twitter.com/search?q=%24Dev&amp;amp;src=cashtag_click"&gt;$DEV&lt;/a&gt; tag&lt;/li&gt;
&lt;li&gt;Promote your project to your supporters&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#if-you-are-interested-in-this-topic-and-want-to-ask-the-dev-community-feel-free-to-send-your-message-pointdown"&gt;
  &lt;/a&gt;
  If you are interested in this topic and want to ask the $DEV Community. Feel free to send your message 👇
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/VwJp4KM"&gt;Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://t.me/devprtcl"&gt;Telegram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>blockchain</category>
      <category>development</category>
    </item>
    <item>
      <title>JavaScript Objects </title>
      <author>Shreyas Pahune</author>
      <pubDate>Sat, 18 Sep 2021 10:25:32 +0000</pubDate>
      <link>https://dev.to/shreyazz/javascript-objects-57ob</link>
      <guid>https://dev.to/shreyazz/javascript-objects-57ob</guid>
      <description>&lt;p&gt;Hey developers 👋🏻, in this blog we will be discussing about JavaScript Objects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#topics-covered-"&gt;
  &lt;/a&gt;
  Topics Covered :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;What are JavaScript Objects.&lt;/li&gt;
&lt;li&gt;Why to use them?&lt;/li&gt;
&lt;li&gt;Three ways to create them.&lt;/li&gt;
&lt;li&gt;How to access properties from Objects.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#what-are-javascript-objects-"&gt;
  &lt;/a&gt;
  What are JavaScript Objects ?
&lt;/h3&gt;

&lt;p&gt;JavaScript Objects are just as real world objects, for example:&lt;/p&gt;

&lt;p&gt;A car is an object which has some property :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One Engine&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4 Tiers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4 Doors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Company's Name&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Color&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more. We just have to express this in a syntactical way :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tesla&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Matte-Black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;tiers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;doors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here as we can see there are 4 properties company, color, tiers and doors, where all of these properties are defined in a &lt;code&gt;key : value&lt;/code&gt; pair and the key is the indicator of the value.&lt;/p&gt;

&lt;p&gt;So if I &lt;code&gt;console.log(car)&lt;/code&gt; I would get :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QWYHjteD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s381hi8tucy859vpdhrg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QWYHjteD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s381hi8tucy859vpdhrg.PNG" alt="output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;further in this blog, I will explain how to make an object in detail but before understanding that let's understand the need of objects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-to-use-objects-"&gt;
  &lt;/a&gt;
  Why to use Objects ?
&lt;/h3&gt;

&lt;p&gt;Objects are non-primitive data types which means they are not meant to store a single data, rather it is meant to store more complex entities. We can store multiple data-types inside an object, even functions are accepted in them.&lt;/p&gt;

&lt;p&gt;In a very layman's terms, objects is a mini version of class, which can be used to store multiple entities and can be used in multiple places though it would be wrong to compare objects and classes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#three-ways-to-create-objects-"&gt;
  &lt;/a&gt;
  Three Ways to Create Objects :
&lt;/h3&gt;

&lt;p&gt;Three ways to create objects are :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Object Literals :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;i.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shreyas Pahune&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;isMale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;favLangs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TypeScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dart/Flutter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ii. Here in the above way, we just have to insert the &lt;code&gt;key : value&lt;/code&gt; pair inside a pair of curly brackets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. &lt;code&gt;New&lt;/code&gt; Keyword :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;i.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shreyas Pahune&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;
      &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isMale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favLangs&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TypeScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dart/Flutter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ii. When using this way, the code gets unnecessarily long, while you can achieve the same result by using the Object Literal method (1st method).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Using &lt;code&gt;Object.create() :&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;i.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;full-name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;isMale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;favLangs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lang1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lang2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lang3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lang4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shreyas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;shreyas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Shreyas&lt;/span&gt; &lt;span class="nx"&gt;Pahune&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;
      shreyas.age = 18
      shreyas.isMale = true
      shreyas.favLangs :  [&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;TypeScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;Java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;Dart&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Flutter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;]

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ii. &lt;code&gt;Object.create()&lt;/code&gt; always makes an new object whilst keeping the original object as an template to follow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-retrieve-data-from-objects-"&gt;
  &lt;/a&gt;
  How to Retrieve Data from Objects ?
&lt;/h3&gt;

&lt;p&gt;There are two ways of retrieving data from an object :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dot Notation&lt;/li&gt;
&lt;li&gt;Bracket Notation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Dot Notation is :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shreyas Pahune&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// expected output : Shreyas Pahune&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Bracket Notation is :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shreyas Pahune&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// expected output : Shreyas Pahune&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#bonus-"&gt;
  &lt;/a&gt;
  Bonus 🎈 :
&lt;/h3&gt;

&lt;p&gt;There is a thing called object constructor where we use a special type of function to create an object.&lt;/p&gt;

&lt;p&gt;The special function is known as constructor function and it is somewhat like &lt;code&gt;Object.create()&lt;/code&gt; but better.&lt;/p&gt;

&lt;p&gt;Here in this function, we have to pass parameters and it is suggested to use this or the object literal type to create small-medium sized objects.&lt;/p&gt;

&lt;p&gt;Here is the syntax for it 👇🏻&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isMale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;favLang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isMale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isMale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favLang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;favLang&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`My name is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, I am &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; years old and I like to code in 
      &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favLang&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;personOne&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shreyas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Typescript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dart/Flutter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="nx"&gt;personOne&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayInfo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here in the above example, we have made a function called person &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE: The first letter of a constructor function is to be kept capital. Nothing compulsory but just a convention!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The function takes 4 parameters/arguments, and the &lt;code&gt;this&lt;/code&gt; keyword refers to the object it indicates, so here if I make another person named as personTwo and give them a name as Anushka then the object will use the new name instead of the old name passed in. &lt;/p&gt;

&lt;p&gt;Here we have made a function which is defined as a property and after making an instance(personOne) of the Person Object we can call the function as usual.&lt;/p&gt;

&lt;p&gt;Expected output of the function would be :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;My name is Shreyas, I am 18 years old and I like to code in Typescript,JavaScript,Java,Dart/Flutter!&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Thank you so much for reading the whole blog 👏🏻, I really appreciate it.   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS :  I am publishing a new blog after a very long time so I'll try to be more regular xD! Till then... bye bye 👋🏻.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>vscode</category>
    </item>
    <item>
      <title>What is flatMap in JavaScript? And how made my code cleaner</title>
      <author>Amit Khonde</author>
      <pubDate>Sat, 18 Sep 2021 08:32:27 +0000</pubDate>
      <link>https://dev.to/amitkhonde/what-is-flatmap-in-javascript-and-how-made-my-code-cleaner-3nbn</link>
      <guid>https://dev.to/amitkhonde/what-is-flatmap-in-javascript-and-how-made-my-code-cleaner-3nbn</guid>
      <description>&lt;p&gt;Have you ever looked at a JavaScript in built function and said to yourself: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I understand what this is but I do not know where I can use this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, this exact thought came to mind when I read about &lt;code&gt;Array.flatMap()&lt;/code&gt;. So I started looking for its applications in my day-to-day coding and viola!! I found a use case. In this post, we will first see what &lt;code&gt;Array.flatmap()&lt;/code&gt; is and then look at how I used it in a real problem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-exactly-is-raw-arrayflatmap-endraw-"&gt;
  &lt;/a&gt;
  What exactly is &lt;code&gt;Array.flatMap&lt;/code&gt;?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;FlatMap is a mix of two words which are derived from latin words blah blah blah...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just kidding.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Array.flatMap&lt;/code&gt; is a mixture of two array methods &lt;code&gt;Array.flat&lt;/code&gt; and &lt;code&gt;Array.map&lt;/code&gt;. Individually,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Array.flat&lt;/code&gt; is used for flattening nested arrays. For example
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Karishma&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kunal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pankaj&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rahee&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: ["Amit", "Karishma", "Kunal", "Pankaj", "Rahee"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Array.map&lt;/code&gt; is used for creating a new array by performing operations on each array element and returning a value. For example
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Karishma&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kunal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pankaj&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rahee&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;everyOneLovesDogs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; loves dogs`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;everyOneLovesDogs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// expected output: ["Amit loves dogs", "Karishma loves dogs", "Kunal loves dogs", "Pankaj loves dogs", "Rahee loves dogs"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as you can guess, &lt;code&gt;Array.flatMap&lt;/code&gt; maps an array and then flattens the nested arrays in the returned array. A quick example of flatMap looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersWithInterests&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Amit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;interests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cricket&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Music&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Karishma&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;interests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Drawing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Reading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pranav&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;interests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Crafting&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Biking&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;interests&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usersWithInterests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatMap&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;interests&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;interests&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Expected Output: ["Cricket", "Music", "Drawing", "Reading", "Crafting", "Biking"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-i-used-raw-arrayflatmap-endraw-in-a-realworld-problem"&gt;
  &lt;/a&gt;
  How I used &lt;code&gt;Array.flatMap&lt;/code&gt; in a real-world problem?
&lt;/h2&gt;

&lt;p&gt;I was working on a feature where I had to create a dropdown for categories for products. The actual response from &lt;code&gt;getProducts&lt;/code&gt; API looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;One Plus 7T&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;categories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Technology&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mobile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SmartPhone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4.5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MacBook Pro 2018&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;categories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Technology&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Computer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Laptop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4.8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LG Monitor 221G&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;categories&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Technology&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Monitor&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rating&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4.3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The product object has categories as a key for which the values are stored in the array. &lt;/p&gt;

&lt;p&gt;So I had to do 3 things&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get the categories from each product&lt;/li&gt;
&lt;li&gt;Flatten that array&lt;/li&gt;
&lt;li&gt;Get unique values from the array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instead of using 2 separate functions for first two tasks, i used one function: &lt;code&gt;Array.flatmap&lt;/code&gt;. And then applied the set operation on that array to get unique values. &lt;/p&gt;

&lt;p&gt;The final code snippet looked something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allCategories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatMap&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uniqueCategories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;allCategories&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uniqueCategories&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Expected Output: ["Technology", "Mobile", "SmartPhone", "Computer", "Laptop", "Monitor"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Conclusion &lt;/p&gt;

&lt;p&gt;I hope now you folks can also apply &lt;code&gt;Array.flatMap&lt;/code&gt; in cases where they fit and produce a cleaner code. For more such interesting tidbits, stay tuned in. Until then, Happy Coding!!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was &lt;a href="https://www.amitkhonde.com/blog/what-is-flatmap-in-javascript"&gt;originally published here&lt;/a&gt;. For more such interesting reads, &lt;a href="https://www.amitkhonde.com/blog"&gt;visit my blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Do you have any abandoned projects you still have to pay for?</title>
      <author>Madza</author>
      <pubDate>Sat, 18 Sep 2021 07:47:45 +0000</pubDate>
      <link>https://dev.to/madza/do-you-have-any-abandoned-projects-you-still-have-to-pay-for-4p54</link>
      <guid>https://dev.to/madza/do-you-have-any-abandoned-projects-you-still-have-to-pay-for-4p54</guid>
      <description>&lt;p&gt;Yesterday I made a &lt;a href="https://dev.to/madza/what-are-your-recurring-expenses-as-a-developer-59p9"&gt;discussion&lt;/a&gt; about the recurring expenses as a developer. I got a great reply from &lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
, which resonated in me:&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/ben"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--23zqxrIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--TZxgOuTM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/1/f451a206-11c8-4e3d-8936-143d0a7e65bb.png" alt="ben profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/ben"&gt;
        &lt;span class="comment-username"&gt;Ben Halpern&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/ben/comment/1i5hm" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Sep 17
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;The worst expense is a project which you won't admit you'll never get back to but you're still paying that $50 a month for the collective expenses. &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;When creating new projects (especially complex ones with multiple services involved) I always try to think about the long-term maintenance and scalability aspects, so I replied: &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/madza"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9LQ1HlwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6hdTiEBf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/159737/9f8f2a93-d0a1-4d77-a1f6-c3fc67ebde90.jpg" alt="madza profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/madza"&gt;
        &lt;span class="comment-username"&gt;Madza&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/madza/comment/1i5mg" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Sep 18
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Excatly, I was gonna say 😀 You must think in long term in the very beginning when choosing the stack and weight all the ifs for the possible abandonment due to new projects with higher potential, etc 😉&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;For example, I'm very happy with the stack I chose for my most recent project &lt;a href="https://quizzes.madza.dev/"&gt;devQuizzes&lt;/a&gt; (a quizz platform where users can test their dev knowledge in over 500 questions across 20 categories): &lt;/p&gt;

&lt;p&gt;I picked &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; to store all the data (each question is a seperate .md file in the repo), &lt;a href="https://airtable.com"&gt;Airtable&lt;/a&gt; for users to submit new questions and submit edits for the question (I use their API for this, so the inputs are stored in their Sheets), &lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; to host it all (which I absolutely love, no promo btw) and for the domain I created a subdomain &lt;a href="https://quizzes.madza.dev/"&gt;quizzes.madza.dev&lt;/a&gt; for the only domain I own &lt;a href="https://madza.dev"&gt;madza.dev&lt;/a&gt; (I use &lt;a href="https://namecheap.com"&gt;NameCheap&lt;/a&gt;, which I found in this &lt;a href="https://dev.to/madza/what-s-your-favorite-domain-registrar-4dcl"&gt;discussion&lt;/a&gt;, thanks to you guys), meaning I can still buy a separate domain and set up redirect to it if the project starts to become something serious.&lt;/p&gt;

&lt;p&gt;This means that the total maintenance costs for the project is zero and I am not limited to move to other projects if I want to in the future without sacrificing my bank account.&lt;/p&gt;

&lt;p&gt;The question for this discussion is:&lt;/p&gt;

&lt;p&gt;Do you have any abandoned (inactive) projects that you must pay for monthly/yearly to keep them running? Like hosting, domain, database, storage and other costs.&lt;/p&gt;

&lt;p&gt;Also, what are the key lessons you learned from it (what would you do different when setting up the same project today)?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>How to Automatically Run Your Laravel PestPHP Tests on Each GitHub Pull Request?</title>
      <author>Bobby Iliev</author>
      <pubDate>Sat, 18 Sep 2021 07:35:13 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-automatically-run-your-laravel-pestphp-tests-on-each-github-pull-request-3jch</link>
      <guid>https://dev.to/bobbyiliev/how-to-automatically-run-your-laravel-pestphp-tests-on-each-github-pull-request-3jch</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;PestPHP was created by &lt;a href="https://twitter.com/enunomaduro"&gt;Nuno Maduro&lt;/a&gt; who is also one of the Laravel core team members. PestPHP is an open-source PHP Testing framework created with simplicity in mind. &lt;/p&gt;

&lt;p&gt;PestPHP is being really actively developed and there are already plenty of learning materials online despite the fact that it is relatively new.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn how to use GitHub actions in order to automate your PestPHP tests and run them on each pull request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4JKWQu5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MBVpWq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4JKWQu5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MBVpWq2.png" alt="Automated Pest PHP tests with GitHub actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you start, you would need to have a Laravel application up and running.&lt;/p&gt;

&lt;p&gt;I will be using a DigitalOcean Ubuntu Droplet for this demo. If you wish, you can use my affiliate code to get &lt;a href="https://m.do.co/c/2a9bba940f39"&gt;free $100 DigitalOcean credit&lt;/a&gt; to spin up your own servers!&lt;/p&gt;

&lt;p&gt;If you do not have that yet, you can follow the steps from this tutorial on how to do that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or you could use this awesome script to do the installation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/episode/laravel-on-digital-ocean-with-larasail"&gt;LaraSail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#introductin-to-github-actions"&gt;
  &lt;/a&gt;
  Introductin to GitHub Actions
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; allow you to automate your workflow. Thanks to GitHub Actions we basically have a built in CI/CD tool directly into GitHub.&lt;/p&gt;

&lt;p&gt;If you have never used GitHub Actions, I would recommend going through this short video here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GqzaCZyUlzE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#automatically-run-your-pestphp-tests"&gt;
  &lt;/a&gt;
  Automatically Run your PestPHP tests
&lt;/h1&gt;

&lt;p&gt;First let's start by creating the following directories in your GitHub project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir .github/workflows/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a yaml file in that directory called &lt;code&gt;tests.yaml&lt;/code&gt; for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch .github/workflows/tests.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Test Laravel Github action
on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.0','7.4' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v2
    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
     - uses: actions/cache@v2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
     - name: Cache PHP dependencies
      uses: actions/cache@v2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Run Migrations
# Set environment
      env:
        SESSION_DRIVER: array
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"

      run: php artisan migrate

    - name: Show dir
      run: pwd
    - name: PHP Version
      run: php --version

# Code quality

    - name: Execute tests (Unit and Feature tests) via PestPHP
# Set environment
      env:
        SESSION_DRIVER: array
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"

      run: vendor/bin/pest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that, everytime now anyone submits a PR to your &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt; branches, your Pest PHP test will be automatically triggered!&lt;/p&gt;

&lt;p&gt;The above uses SQLite, let's see how we could use MySQL instead!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#automatically-run-your-pestphp-tests-with-mysql"&gt;
  &lt;/a&gt;
  Automatically Run your PestPHP tests with MySQL
&lt;/h1&gt;

&lt;p&gt;In some cases, you might also want to use MySQL rather than SQLite when running your tests. This could happen in case that you have some more complex queries not using Laravel Eloquent and you are seeing incorrect results when using SQLite.&lt;/p&gt;

&lt;p&gt;In order to do that, you could use the following configuration.&lt;/p&gt;

&lt;p&gt;First create the following directories in your GitHub project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir .github/workflows/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a yaml file called &lt;code&gt;tests.yaml&lt;/code&gt; for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch .github/workflows/tests.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Laravel Tests
on:
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
# Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE:  testing
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: &amp;gt;-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '7.4' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v2
    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Cache PHP dependencies
      uses: actions/cache@v2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Create storage folders
      run: mkdir -p storage/framework/{sessions,views,cache}
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Show dir
      run: pwd
    - name: PHP Version
      run: php --version

# Code quality
    - name: Execute tests (Unit and Feature tests) via PestPHP
# Set environment
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: testing
        DB_PORT: 33306
        DB_USER: root
        DB_PASSWORD: secret
      run: |
          php artisan key:generate
          vendor/bin/pest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above example uses PHP 7.4 with MySQL 5.7. Make sure to adjust this so that this matches your needs.&lt;/p&gt;

&lt;p&gt;How the action gets triggered is specified in the very beginning of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Laravel Tests
on:
  pull_request:
    branches:
      - main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First we specify the name, and then we specify that we want to run this action &lt;code&gt;on&lt;/code&gt; a &lt;code&gt;pull_request&lt;/code&gt; for the &lt;code&gt;main&lt;/code&gt; branch. Make sure to adjust the name of the branch so that it matches your setup.&lt;/p&gt;

&lt;p&gt;Then we specify that we want to to use a MySQL container and we wait for the service to be up and running before we proceed.&lt;/p&gt;

&lt;p&gt;If you wanted to see this in action, make sure to check out this repository here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/thedevdojo/wave"&gt;PestPHP GitHub Actions Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It includes some Pest tests along with a GitHub action that runs on each pull request towards the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#github-actions-configurator-for-your-laravel-application"&gt;
  &lt;/a&gt;
  GitHub Actions configurator for your Laravel Application
&lt;/h1&gt;

&lt;p&gt;If you are getting overwhelmed looking at the GitHub actions yaml files, do not worry, there is an amazing open-source tool created by &lt;a href="https://twitter.com/RmeetsH"&gt;Roberto B&lt;/a&gt; that let's you generate your GitHub Actions yaml for your Laravel Application automatically based on your exact needs:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5CWcf4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/GnknXuF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5CWcf4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/GnknXuF.png" alt="GitHub Actions configurator for your Laravel Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the tool here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ghygen.hi-folks.dev/"&gt;GitHub Actions configurator for your Laravel Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the UI to select the features that you need and it will automatically built up the YAML file for you!&lt;/p&gt;

&lt;p&gt;Make sure to support &lt;a href="https://twitter.com/RmeetsH"&gt;Roberto B&lt;/a&gt; by following him on Twitter!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you want to learn more about PestPHP, I would recommend going through this crash course here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/course/introducing-pest"&gt;Introducing Pest - An elegant PHP testing framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like PestPHP make sure to star it on GitHub:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pestphp/pest"&gt;https://github.com/pestphp/pest&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>github</category>
      <category>testing</category>
    </item>
    <item>
      <title>Have you ever wondered how YouTube, Netflix shows you video/movie recommendations?</title>
      <author>Sameer Arora</author>
      <pubDate>Sat, 18 Sep 2021 06:43:17 +0000</pubDate>
      <link>https://dev.to/samfreelancer/have-you-ever-wondered-how-youtube-netflix-shows-you-video-movie-recommendations-4ob</link>
      <guid>https://dev.to/samfreelancer/have-you-ever-wondered-how-youtube-netflix-shows-you-video-movie-recommendations-4ob</guid>
      <description>&lt;p&gt;Credit: &lt;a href="https://www.mentorif.com/ment/pradipnichite9b7893bd7a?utm_source=blog&amp;amp;utm_medium=Devio&amp;amp;utm_campaign=be-or-ee&amp;amp;utm_id=be-or-ee"&gt;&lt;strong&gt;Pradip Nichte&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the techniques used to build a recommendations system is called collaborative filtering.&lt;/p&gt;

&lt;p&gt;The idea behind collaborative filtering is that if User A and User B have watched some movies in common, they have similar preferences, and User A is more likely to watch films seen by user B than any random user preferences.&lt;/p&gt;

&lt;p&gt;But how do we find similar users for a given user?&lt;/p&gt;

&lt;p&gt;We can represent users and movies using a matrix (or spreadsheet).&lt;br&gt;
Each row represents each user, and each column represents each movie.&lt;/p&gt;

&lt;p&gt;Each cell in the matrix is 1 or 0, which tells us whether the user has watched a movie or not.&lt;/p&gt;

&lt;p&gt;One way to calculate the similarity between two users (rows) is using dot product or cosine similarity.&lt;/p&gt;

&lt;p&gt;Let's pick user A; once we compare the user A row with every row, we can find the most similar row; let's call it User X.&lt;/p&gt;

&lt;p&gt;Then pick a movie from User X which A has not watched yet and Show it to user A.&lt;/p&gt;

&lt;p&gt;Can we improve the above technique?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Instead of finding one similar user, we can see the top 5 similar users and show one movie from each user or recommending a film seen by all five similar users and not watched by User A.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Represent each cell in the matrix by rating (1 to 5) given by the user for that movie instead of 1 or 0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Since the system will be having millions of users and 1000s of movies, the matrix will become huge, we can use matrix factorization techniques to represent users and movies efficiently.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>python</category>
      <category>java</category>
    </item>
    <item>
      <title>An Overview and Setup of TypeScript as a Complete Beginner</title>
      <author>Aman Ojha</author>
      <pubDate>Sat, 18 Sep 2021 06:27:41 +0000</pubDate>
      <link>https://dev.to/coderaman07/an-overview-and-setup-of-typescript-as-a-complete-beginner-450h</link>
      <guid>https://dev.to/coderaman07/an-overview-and-setup-of-typescript-as-a-complete-beginner-450h</guid>
      <description>&lt;p&gt;In this article, we are going to have an Overview and Setup of TypeScript in our Local Environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  TypeScript
&lt;/h2&gt;

&lt;p&gt;It's an Open Source Language that builds onto JavaScript by adding some Extra-features, also known as Superset as JavaScript.&lt;/p&gt;

&lt;p&gt;It can also be referred to as &lt;strong&gt;JavaScript + Some Other Features&lt;/strong&gt; &lt;em&gt;(Static Types being the Main Reason)&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-typescript-is-different"&gt;
  &lt;/a&gt;
  How TypeScript is different??
&lt;/h3&gt;

&lt;p&gt;TypeScript is having many different types of benefits listed below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It Offers additional Features to JavaScript with Static Types.&lt;/li&gt;
&lt;li&gt;Using types is completely Optional.&lt;/li&gt;
&lt;li&gt;Compiles Down to Regular JavaScript.&lt;/li&gt;
&lt;li&gt;Can also be used for Front-End JavaScript as well as Backend with Node.JS.&lt;/li&gt;
&lt;li&gt;Includes Most features from ES6, ES7 ( Classes, Arrow Functions, etc. ).&lt;/li&gt;
&lt;li&gt;Types from 3rd Party Libraries can be added with Type Definitions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So these were the basic TypeScript Benefits which a Vanilla TypeScript can Offer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-programming-language"&gt;
  &lt;/a&gt;
  Types Of Programming Language
&lt;/h3&gt;

&lt;p&gt;In Programming there are Two Types of Programming Languages: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dynamically Typed Language&lt;/li&gt;
&lt;li&gt;Statically Typed Language&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dynamically-typed-language"&gt;
  &lt;/a&gt;
  &lt;em&gt;Dynamically Typed Language&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;In this, the Types are associated with run time values and are not named Explicitly in your Code.&lt;/p&gt;

&lt;p&gt;Example of Dynamically Typed Language :- JavaScript, Python, Ruby, PHP&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#statically-typed-language"&gt;
  &lt;/a&gt;
  &lt;em&gt;Statically Typed Language&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;In this, the Types are Explicitly assigned to the variables, functions, parameters, return values, etc.&lt;/p&gt;

&lt;p&gt;Example of Statically Typed Language:- Java, C, C++, Rust, Go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-whats-the-pros-and-cons-of-using-typescript-instead-of-regular-javascript"&gt;
  &lt;/a&gt;
  But what's the Pro's and Cons of using TypeScript instead of Regular JavaScript
&lt;/h3&gt;

&lt;p&gt;So there are many Pros and Cons of Using TypeScript instead of Regular JavaScript&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-pros-are-listed-below-"&gt;
  &lt;/a&gt;
  The Pros are listed Below :-
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is More Robust than Regular JavaScript&lt;/li&gt;
&lt;li&gt;Easily Spot Bugs&lt;/li&gt;
&lt;li&gt;Predictability&lt;/li&gt;
&lt;li&gt;Readability&lt;/li&gt;
&lt;li&gt;Popular&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever something good comes there comes some bad things with it also.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-cons-are-listed-below-"&gt;
  &lt;/a&gt;
  The Cons are listed Below :-
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;More Code to Write.&lt;/li&gt;
&lt;li&gt;More to Learn&lt;/li&gt;
&lt;li&gt;Required Compilations&lt;/li&gt;
&lt;li&gt;Not True Static Types ( According to Some Programmers )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#compiling-typescript"&gt;
  &lt;/a&gt;
  Compiling TypeScript
&lt;/h3&gt;

&lt;p&gt;So Compiling TypeScript is one of the major head-ache you must be facing while working with TypeScript, So below are the benefits you might think that will come in handy while working with TypeScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TypeScript uses &lt;code&gt;.ts&lt;/code&gt; and &lt;code&gt;.tsx&lt;/code&gt; extension.&lt;/li&gt;
&lt;li&gt;TSC &lt;em&gt;( TypeScript Compiler )&lt;/em&gt; is used to Compile Down &lt;code&gt;.ts&lt;/code&gt; or &lt;code&gt;.tsx&lt;/code&gt; files Down to &lt;code&gt;.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;TSC can watch the files and report the Errors at the Compile Time.&lt;/li&gt;
&lt;li&gt;It may include &lt;code&gt;.ts&lt;/code&gt; compilation by default.&lt;/li&gt;
&lt;li&gt;Most IDE's have great support for TypeScript.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;tsconfig.json&lt;/code&gt; is used to configure how TypeScript will work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So Lets Code it Down the Real JavaScript ( Not with the Slides but the Actual Code ).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-install-typescript"&gt;
  &lt;/a&gt;
  Let's Install TypeScript
&lt;/h2&gt;

&lt;p&gt;Since I am on Windows so Let's Install it Globally as TypeScript is necessary part of all of my Projects.&lt;/p&gt;

&lt;p&gt;So Let's Try Hitting this Command&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-windows-gt-raw-npm-i-global-typescript-endraw-"&gt;
  &lt;/a&gt;
  In Windows =&amp;gt; &lt;code&gt;npm i --global typescript&lt;/code&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#in-mac-os-gt-raw-sudo-npm-i-global-typescript-endraw-"&gt;
  &lt;/a&gt;
  In Mac OS =&amp;gt; &lt;code&gt;sudo npm i --global typescript&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;You can try the Same Command as of Mac OS in &lt;strong&gt;Linux&lt;/strong&gt; also I'm not Sure what command will be working for Linux.&lt;/p&gt;

&lt;p&gt;After Successful Installation of TypeScript you can run this command to check if it has been successfully installed or not.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;the output should be something like &lt;code&gt;Version 4.4.2&lt;/code&gt; as of on Date &lt;code&gt;10 September 2021&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-that-was-a-basic-setup-of-typescript-for-your-local-environment"&gt;
  &lt;/a&gt;
  So that was a Basic Setup of TypeScript for your local Environment.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#now-lets-write-javascript-type-safety-i-mean-typescript"&gt;
  &lt;/a&gt;
  Now Let's Write JavaScript + Type Safety I mean TypeScript
&lt;/h4&gt;

&lt;p&gt;After Successful Installation Create a New Directory Named as typescript Learning ( Name it whatever do you like )&lt;/p&gt;

&lt;p&gt;then Create a New file name should be something like &lt;code&gt;&amp;lt;desiedNameHere&amp;gt;.ts&lt;/code&gt; ( Enter any name you want in place of 'desiedNameHere')&lt;/p&gt;

&lt;p&gt;So let's write normal JavaScript here&lt;br&gt;
&lt;code&gt;let id = 5;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and then fireup your Terminal and you can now type this command to convert Regular JavaScript to Regular JavaScript ( as of for now ).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc filename.ts&lt;/code&gt; ( file type is not mandatory just specify the name )&lt;/p&gt;

&lt;p&gt;What it will basically do is compiles your Code available in &lt;code&gt;.ts&lt;/code&gt; format filetype to Regular JavaScript to &lt;em&gt;ES5&lt;/em&gt; ( which is set by default ).&lt;/p&gt;

&lt;p&gt;Now you can check the compiled down JavaScript Code in the File Named as the same name but with &lt;code&gt;.js&lt;/code&gt; extension.&lt;/p&gt;

&lt;p&gt;Now here you can see that the TypeScript Compiles the Code to &lt;em&gt;ES5&lt;/em&gt; which is set by default and because the let and arrow functions were released with &lt;em&gt;ES6&lt;/em&gt; so it will not make use of that &lt;em&gt;( for now )&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You can also make this TypeScript Compiler to watch this Code and Compile any of the TypeScript code we write down to Regular JavaScript.&lt;/p&gt;

&lt;p&gt;You can do this by hitting this command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc --watch &amp;lt;fileName&amp;gt;.ts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So For Now let's Try to convert the TypeScript Code to ES6 JavaScript&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-tsconfigjson"&gt;
  &lt;/a&gt;
  Setting up tsconfig.json
&lt;/h2&gt;

&lt;p&gt;Let's setup the TypeScript and edit the way how TypeScript Code will compile down the typescript code to Regular JavaScript.&lt;/p&gt;

&lt;p&gt;To Setup you must first hit this command in your Terminal&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc --init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this will basically create a tsconfig.json file and will let you any of the Setting which might be usefull in TypeScript and the TypeScript will work on based on this file only.&lt;/p&gt;

&lt;p&gt;So now Open up you tsconfig.json and find out where &lt;em&gt;target&lt;/em&gt; is written &lt;em&gt;( Basically you will find it on Line number 7 )&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Change the Target to &lt;strong&gt;&lt;em&gt;ES6&lt;/em&gt;&lt;/strong&gt; if you want.&lt;/p&gt;

&lt;p&gt;So on my Preference I try to Locate my Compiled Regular JavaScript to another Directory and TypeScript files to another Directory.&lt;/p&gt;

&lt;p&gt;So I am gonna change the outDir setting &lt;em&gt;(you will find that on Line Number 17 )&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;and Change that setting to &lt;code&gt;./dist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and also Add a New Line after that and make it as rootDir and set it's value to &lt;code&gt;./src&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Root Directory is basically to get the Source TypeScript files.&lt;/p&gt;

&lt;p&gt;So Now move t=your previous TypeScript file inside of a Directory Named as &lt;code&gt;src&lt;/code&gt; where the TypeScript compiler will look TypeScript files for.&lt;/p&gt;

&lt;p&gt;and Now Let's Compile the TypeScript file, but this time we will compile all of them without specifying any particular File.&lt;/p&gt;

&lt;p&gt;Hit this command in your Terminal&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc --watch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What this Command will do is basically just watches every files inside of the SRC directory and will convert them to Regular JavaScript if it found them to be a TypeScript file.&lt;/p&gt;

&lt;p&gt;you can also just run &lt;code&gt;tsc&lt;/code&gt; that will just compile the Files and will not watch for any further change in them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;So for Now that was a basic Setup for Vanilla TypeScript ( as my mentor Said ) and this was a basic file Structure of TypeScript for a Complete beginner.&lt;/p&gt;

&lt;p&gt;Now we will get into TypeScript more deeper but that's for some another Article.&lt;/p&gt;

&lt;p&gt;Until then I will be Write the Dev log at this platform only just be sure to check this up. &lt;/p&gt;

&lt;p&gt;BTW you can Subscribe to my Official Blog Platform &lt;a href="https://codeitdown.ml"&gt;codeitdown&lt;/a&gt; and get yourself Subscribed I will make sure whenever I get a Good Article over there I will Personally E-mail you for that without any Spam Mail.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>'1' - '1' / 2 = ? , Can you find the answer ? </title>
      <author>Heru Hartanto</author>
      <pubDate>Sat, 18 Sep 2021 06:26:40 +0000</pubDate>
      <link>https://dev.to/elukuro/1-1-2-can-you-find-the-answer-3p9o</link>
      <guid>https://dev.to/elukuro/1-1-2-can-you-find-the-answer-3p9o</guid>
      <description>&lt;p&gt;I just found out some 🙀 funny things about javascript, If someone able to explain I really appreciate&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// output 'AA'&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// output '11'&lt;/span&gt;

&lt;span class="c1"&gt;// Okay that make sense but ...&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;// output 12 &lt;/span&gt;


&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;// output 10.5&lt;/span&gt;

&lt;span class="c1"&gt;// It's start getting weird then ....&lt;/span&gt;


&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; 
&lt;span class="c1"&gt;// output 0&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;// output 0.5&lt;/span&gt;

&lt;span class="c1"&gt;// It's correct , but why ? &lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Tailwind group hover, the state you missed</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 18 Sep 2021 06:25:02 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/tailwind-group-hover-the-state-you-missed-dif</link>
      <guid>https://dev.to/dailydevtips1/tailwind-group-hover-the-state-you-missed-dif</guid>
      <description>&lt;p&gt;Hover states are an essential part of web development and making those final UI tweaks.&lt;/p&gt;

&lt;p&gt;If you worked with Tailwind, you might know the &lt;code&gt;hover&lt;/code&gt; states, which are amazing, but they never included sub-selectors.&lt;/p&gt;

&lt;p&gt;This is something the &lt;code&gt;group-hover&lt;/code&gt; class can help us with!&lt;/p&gt;

&lt;p&gt;You can see the end result of what we'll be building today in the CodePen below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/OJgpqbr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-group-hover-effect"&gt;
  &lt;/a&gt;
  Tailwind group hover effect
&lt;/h2&gt;

&lt;p&gt;Let's first take a look at how this effect works.&lt;/p&gt;

&lt;p&gt;It needs to have a &lt;code&gt;group&lt;/code&gt; class on the parent element.&lt;br&gt;
Then we can add hover classes to children of this group element by using the &lt;code&gt;group-hover:&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;Let's try and make a super simple effect, where we have a div with two spans inside. On hover, each span will get its own color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"group-hover:text-yellow-500 text-black"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"group-hover:text-red-500 text-black"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;World&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try it out in the following CodePen demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/KKqWEod?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-hover-card-with-tailwind-group-hover"&gt;
  &lt;/a&gt;
  Creating a hover card with Tailwind group hover
&lt;/h2&gt;

&lt;p&gt;Let's look at how we can create the card hover effect like the top demo shows.&lt;/p&gt;

&lt;p&gt;This uses the Tailwind square div effect, as seen in the article about &lt;a href="https://daily-dev-tips.com/posts/tailwind-css-responsive-square-divs/"&gt;Tailwind CSS responsive square divs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But let's sketch the high-level overview of what we'll be needing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Div element [Parent]&lt;/li&gt;
&lt;li&gt;- Child element [Background black layer]&lt;/li&gt;
&lt;li&gt;- Child element [Title element]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These two child elements are only visible once we hover over the parent div.&lt;/p&gt;

&lt;p&gt;In the basic structure, it will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative group flex justify-center w-1/2 h-0 bg-center bg-cover border-2 border-gray-300 shadow-lg pb-1-2 rounded-xl bg-image"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute bg-black w-full h-full rounded-xl bg-opacity-25 opacity-0 group-hover:opacity-100"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute p-6 text-2xl tracking-widest text-white uppercase -translate-y-1/2 bg-black bg-opacity-75 opacity-0 top-1/2 rounded-xl group-hover:opacity-100"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Tadaa 🎉
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us the desired effect and style of the elements, so everything will line up nicely.&lt;/p&gt;

&lt;p&gt;However, at this point, we get a pretty static flicker effect. Let's change that by adding the following two classes to our child elements: &lt;code&gt;transform transition-opacity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These will make sure we animate the opacity transition.&lt;/p&gt;

&lt;p&gt;You might have spotted that the black background div is an absolute positioned element, using the full width and height.&lt;br&gt;
We use a center hack for the text layer since it's not the full size of the div.&lt;br&gt;
This hack means we place the element 50% from the top and then offset the y-axis by -50%, making sure the element is perfectly centered.&lt;/p&gt;

&lt;p&gt;I hope you learned something new, as this group-hover is just a fantastic addition to Tailwind 🎉.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
  </channel>
</rss>
