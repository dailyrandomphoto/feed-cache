<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create a backend in Javascript: Introduction to Node.js</title>
      <author>Eric The Coder</author>
      <pubDate>Tue, 28 Sep 2021 20:59:49 +0000</pubDate>
      <link>https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node-js-215a</link>
      <guid>https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node-js-215a</guid>
      <description>&lt;p&gt;Here is a series of articles to help you create backend applications in Javascript.&lt;/p&gt;

&lt;p&gt;Node.js is now a must, so it is essential for a developer to master it.&lt;/p&gt;

&lt;p&gt;I will publish a new article every two days and little by little you will learn everything there is to know about Node.js&lt;/p&gt;

&lt;p&gt;To not miss anything follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nodejs"&gt;
  &lt;/a&gt;
  What is Node.js?
&lt;/h2&gt;

&lt;p&gt;NodeJS allows you to run JavaScript code outside of a browser.&lt;/p&gt;

&lt;p&gt;Node.js is a free, open source, server environment that uses JavaScript language to create server-side web applications. (backend)&lt;/p&gt;

&lt;p&gt;Node.js works on different platforms (Windows, Linux, Unix, Mac OS X, etc.) With Node.js we can build a fast and highly scalable web application.&lt;/p&gt;

&lt;p&gt;Using Node.js also means that we can use JavaScript across the stack, i.e. the same language for the frontend and the backend. So more rapid and efficient development.&lt;/p&gt;

&lt;p&gt;Node.js has a huge library of ready-made packages that will save you a lot of time. These libraries are managed by NPM (Node Package Manager)&lt;/p&gt;

&lt;p&gt;A special feature of Node.js is that it uses asynchronous programming (running multiple tasks at the same time) vs synchronous programming (running one task at a time) found on many server-side programming languages like PHP and Ruby.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-nodejs"&gt;
  &lt;/a&gt;
  Installing Node.js
&lt;/h2&gt;

&lt;p&gt;Node.js can be installed directly from its website: [&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt; marge(&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Detailed documentation is also available on the Node.js website: [&lt;a href="https://nodejs.org/en/docs/"&gt;https://nodejs.org/en/docs/&lt;/a&gt; marge(&lt;a href="https://nodejs.org/en/docs/"&gt;https://nodejs.org/en/docs/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Once the installation is complete, you can check the version installed with this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;node &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="c"&gt;# v16.9.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hello-world"&gt;
  &lt;/a&gt;
  Hello World
&lt;/h2&gt;

&lt;p&gt;Tradition requires, the first thing we are going to do is the classic 'Hello World'&lt;/p&gt;

&lt;p&gt;The fastest and easiest way to run code with Node is by using REPL. To launch the REPL, just run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;node
Welcome to Node.js v16.9.1
Type &lt;span class="s2"&gt;".help"&lt;/span&gt; &lt;span class="k"&gt;for &lt;/span&gt;more information
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;
&lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The REPL allows you to run javascript but you will understand it is very limited. The REPL is used for running small orders or for testing only.&lt;/p&gt;

&lt;p&gt;If you want to write a complete program in NodeJS, you will need to create a file and run it.&lt;/p&gt;

&lt;p&gt;Create and open the app.js file, enter the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;console.log &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Hello World'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each file is considered by NodeJS to be a module and can therefore be executed.&lt;/p&gt;

&lt;p&gt;To do this, from the terminal enter: node &lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;node app.js
Hello World
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There you go, well done you have just created your first NodeJS application!&lt;/p&gt;

&lt;p&gt;Whenever you need to run NodeJS code you will need to do so with this command.&lt;/p&gt;

&lt;p&gt;We will see, later that there is a way to create a NodeJS server that will allow code to be executed automatically.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-browser-vs-javascript-server"&gt;
  &lt;/a&gt;
  JavaScript browser vs JavaScript server
&lt;/h2&gt;

&lt;p&gt;As you have seen thanks to NodeJS you can run JavaScript code without a browser! This is good but despite this, not everything is exactly the same.&lt;/p&gt;

&lt;p&gt;Here is a list of the main differences between JavaScript browser code and NodeJS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A browser application run on the client's computer&lt;/li&gt;
&lt;li&gt;A NodeJS application is running on the server&lt;/li&gt;
&lt;li&gt;With NodeJS, there is no browser so no DOM and no Window object&lt;/li&gt;
&lt;li&gt;With NodeJS it is possible to access the file system&lt;/li&gt;
&lt;li&gt;With NodeJS, the module system called 'CommonJS' does not work with the same syntax as ES6 JavaScript modules&lt;/li&gt;
&lt;li&gt;There are objects in NodeJS which are available everywhere in your code. These objects are called the Globals.

&lt;ul&gt;
&lt;li&gt;Here are some of these objects. You will learn how to use it in due course:

&lt;ul&gt;
&lt;li&gt;__dirname (return the path of the current folder)&lt;/li&gt;
&lt;li&gt;__filename (returns the name of the file being executed)&lt;/li&gt;
&lt;li&gt;require (allows you to load modules)&lt;/li&gt;
&lt;li&gt;module (returns info on the current module)&lt;/li&gt;
&lt;li&gt;process (returns info about the current environment)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all for today, follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt; to be notified of the publication of the next article (within two days).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A short guide to help you pick the correct HTML tag</title>
      <author>Jozsef Polgar</author>
      <pubDate>Tue, 28 Sep 2021 20:40:41 +0000</pubDate>
      <link>https://dev.to/polgarj/a-short-guide-to-help-you-pick-the-correct-html-tag-56l9</link>
      <guid>https://dev.to/polgarj/a-short-guide-to-help-you-pick-the-correct-html-tag-56l9</guid>
      <description>&lt;p&gt;A semantically correct HTML tag informs the browser and the developer about its content. It also helps keyboards and assistive technologies to navigate through a website.&lt;/p&gt;

&lt;p&gt;There are &lt;em&gt;more than 100 HTML tags&lt;/em&gt;, but which ones are semantic and which are not?&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Non-semantic elements:&lt;/strong&gt; div and span, etc. Unlike semantic elements, these are not holding any extra information about their content.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Semantic elements:&lt;/strong&gt; header, main, footer, article, img, p, h1, etc.&lt;/p&gt;

&lt;p&gt;When you create a new HTML file, you have something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I will focus on &lt;strong&gt;what's inside the body element&lt;/strong&gt; and name only the most important tags. You can find a link with a full list of HTML elements at the end of this article.&lt;/p&gt;

&lt;p&gt;The HTML tags can be separated into different groups and it helped me to understand the whole concept and I think this is the best way to explain it, so let's start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content-sectioning-or-landmarks"&gt;
  &lt;/a&gt;
  Content sectioning or landmarks
&lt;/h2&gt;

&lt;p&gt;The layout of the main page of this blog looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ev2ZJ7Dz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uselessdivs.com/img/a-short-guide-to-help-you-pick-the-correct-html-tag/layout.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ev2ZJ7Dz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uselessdivs.com/img/a-short-guide-to-help-you-pick-the-correct-html-tag/layout.svg" alt="A visual representation of the main elements of the website, such as header, nav, main, section, article, aside."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#header-and-nav"&gt;
  &lt;/a&gt;
  header and nav
&lt;/h3&gt;

&lt;p&gt;In my &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, you can find the logo, which is a link and it leads to the main page and &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element which contains the links to my other pages.&lt;br&gt;
You can also put here some &lt;strong&gt;introduction about the page&lt;/strong&gt;, a search bar, or other elements.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#main"&gt;
  &lt;/a&gt;
  main
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element holds different content on each page. This &lt;strong&gt;holds the primary information&lt;/strong&gt; of the current page &lt;strong&gt;or the main functionality&lt;/strong&gt; of an application.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#footer"&gt;
  &lt;/a&gt;
  footer
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;tag creates a footer for a section or for the whole document. You can have multiple &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; elements in one page, which typically contains data, like: contact info to the author, copyrigt information, related links etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#aside"&gt;
  &lt;/a&gt;
  aside
&lt;/h3&gt;

&lt;p&gt;You can also find the &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; on the right side of my page. It &lt;strong&gt;holds complementary content&lt;/strong&gt;. If I remove it, nothing will be missing from the primary content. You can put here for example table of contents, related posts, etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#section"&gt;
  &lt;/a&gt;
  section
&lt;/h3&gt;

&lt;p&gt;Inside my &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element, you can find the &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; tag. This is a non-semantic tag, and it should &lt;strong&gt;always&lt;/strong&gt; have a heading.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#h1-h6"&gt;
  &lt;/a&gt;
  h1 - h6
&lt;/h3&gt;

&lt;p&gt;Heading elements: &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;h4&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;h5&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;, are the titles of the different sections. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is the highest level of the headings, and it is necessary to have one on each page but there should be only one per page. &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; is the lowest. If you run out of headings, there is another option: &lt;a href="https://uselessdivs.com/blog/the-7th-heading"&gt;the 7th heading&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason you should use landmarks is that screen readers and other &lt;em&gt;assistive technologies can jump back and forth between these elements&lt;/em&gt;.&lt;br&gt;
For example, all the pages have the same header with the same logo, the same navigation, but with a keyboard shortcut, you can jump over them and start with the content of the main tag.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#text-content-elements"&gt;
  &lt;/a&gt;
  Text content elements
&lt;/h2&gt;

&lt;p&gt;These can help you &lt;strong&gt;organize the written content&lt;/strong&gt; on your pages and give information about the content to search engines and screen readers.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#p"&gt;
  &lt;/a&gt;
  P
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; stands for paragraph. In other words, a block of text. You will use it a lot for wrapping your text content with it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ul-ol-li"&gt;
  &lt;/a&gt;
  ul, ol, li
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; - unordered list, &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; - ordered list, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; - list elements of the two kind of lists. If you need to create a list you have to use them.&lt;/p&gt;

&lt;p&gt;List items are wrapped in &lt;em&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, if the order is not important&lt;/em&gt;. It will put bullet points before each list item.&lt;/p&gt;

&lt;p&gt;Choose &lt;em&gt;&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;, if you need a numbered list&lt;/em&gt; and it will put a number before each item in ascending order.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#figure-figcaption-blockquote-cite"&gt;
  &lt;/a&gt;
  Figure, figcaption, blockquote, cite
&lt;/h3&gt;

&lt;p&gt;I will explain all of them with one example. Look at this block of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;figure&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;blockquote&lt;/span&gt; &lt;span class="na"&gt;cite=&lt;/span&gt;&lt;span class="s"&gt;"https://www.htmhell.dev/24-a-placeholder-is-not-a-label/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Every form input element needs a label.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;figcaption&amp;gt;&lt;/span&gt;Manuel Matuzović, &lt;span class="nt"&gt;&amp;lt;cite&amp;gt;&lt;/span&gt;A placeholder is not a label - HTMHell&lt;span class="nt"&gt;&amp;lt;/cite&amp;gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; go hand in hand&lt;br&gt;
The &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; is a self-contained element optionally, but usually with a caption. This caption is the &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; is for quotations, where you want to indicate the author, the source, etc. (You can use the cite attribute on this tag to give the URL of the source of this quotation).&lt;br&gt;
&lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt; element &lt;em&gt;is holding the reference to a quoted content&lt;/em&gt;. Name of the author, title of the cited material, etc. and this is the first element of our next group, the inline text elements.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#inline-text-elements"&gt;
  &lt;/a&gt;
  Inline text elements
&lt;/h2&gt;

&lt;p&gt;You can wrap smaller parts of text like words, sentences, etc into different tags to define its style, meaning, or structure.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#a"&gt;
  &lt;/a&gt;
  a
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or anchor elements are links, which have a &lt;strong&gt;href&lt;/strong&gt; attribute, which leads to &lt;em&gt;other web pages, files, email addresses, phone numbers, or a location on the same page&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#em"&gt;
  &lt;/a&gt;
  em
&lt;/h3&gt;

&lt;p&gt;Use this element to &lt;strong&gt;emphasize any text content.&lt;/strong&gt; &lt;em&gt;Screen readers read this part of a text in a different way.&lt;/em&gt; Browsers render the content of this text in italic font style but don't use it only for styling.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#strong"&gt;
  &lt;/a&gt;
  strong
&lt;/h3&gt;

&lt;p&gt;Use this element to &lt;strong&gt;mark content, which is more important&lt;/strong&gt; than the rest of the text. &lt;strong&gt;Screen readers read this part of a text in a different way.&lt;/strong&gt; Browsers render the content of this text in bold font style but don't use it only for styling.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#q"&gt;
  &lt;/a&gt;
  q
&lt;/h3&gt;

&lt;p&gt;A short inline quotation, which doesn't need an entire paragraph. (You can use the cite attribute on this tag to give the URL of the source of this quotation)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#image-and-multimedia"&gt;
  &lt;/a&gt;
  Image and multimedia
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#audio"&gt;
  &lt;/a&gt;
  audio
&lt;/h3&gt;

&lt;p&gt;audio is used to embed sound into your website.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#img"&gt;
  &lt;/a&gt;
  img
&lt;/h3&gt;

&lt;p&gt;img is used to embed an image into your website.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  video
&lt;/h3&gt;

&lt;p&gt;video is used to embed a video into your website.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#table-content"&gt;
  &lt;/a&gt;
  Table content
&lt;/h2&gt;

&lt;p&gt;I think an example is the easiest way to explain these elements:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/polgarj/embed/vYZvwrQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#table"&gt;
  &lt;/a&gt;
  table
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; creates a two-dimensional table with rows and columns&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#thead"&gt;
  &lt;/a&gt;
  thead
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; is a row or rows that define the column heading&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#th"&gt;
  &lt;/a&gt;
  th
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; is a single cell as a header of a group of cells. This group of cells can be a column or a row, and you have to define it by the scope attribute. The scope attribute can have the value of col or row.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tbody"&gt;
  &lt;/a&gt;
  tbody
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; wraps the main content of our table, which is usually between the thead and the tfoot elements.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tr"&gt;
  &lt;/a&gt;
  tr
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; defines a row of cells in a table.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#td"&gt;
  &lt;/a&gt;
  td
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; stands for table data. This is a single cell that holds the information.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tfoot"&gt;
  &lt;/a&gt;
  tfoot
&lt;/h3&gt;

&lt;p&gt;This is a row at the end of the table, that summarizes its content.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#forms"&gt;
  &lt;/a&gt;
  Forms
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#form"&gt;
  &lt;/a&gt;
  form
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element wraps the entire form that users can use to enter their data and submit it to the server.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#fieldset"&gt;
  &lt;/a&gt;
  fieldset
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; groups related inputs in a form. Fieldsets need a caption and this caption is the legend element. For example, if you have a form with a shipping address and billing address, you can create two groups of inputs with the fieldset element.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#legend"&gt;
  &lt;/a&gt;
  legend
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; element defines a caption for the fieldset.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  input
&lt;/h3&gt;

&lt;p&gt;Users can interact with &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements to enter their data. &lt;em&gt;There are many different kinds of input fields for different types of information&lt;/em&gt;, like text, color, file, etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#label"&gt;
  &lt;/a&gt;
  label
&lt;/h3&gt;

&lt;p&gt;Every &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; field needs a caption and this caption is the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element. &lt;strong&gt;You can't replace the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag with the placeholder attribute.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#select-and-option"&gt;
  &lt;/a&gt;
  select and option
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; is a special kind of input field, with a dropdown menu. This dropdown menu contains &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#textarea"&gt;
  &lt;/a&gt;
  textarea
&lt;/h3&gt;

&lt;p&gt;Users can enter &lt;em&gt;multiple lines of text&lt;/em&gt; in this field&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#button"&gt;
  &lt;/a&gt;
  button
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; tag creates a clickable element, which looks like a button. It is used to submit forms.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#others"&gt;
  &lt;/a&gt;
  Others
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#iframe"&gt;
  &lt;/a&gt;
  iframe
&lt;/h3&gt;

&lt;p&gt;You can embed other HTML files into your website with the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element. For example, you can insert a song from Spotify or a video from YouTube into your website.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#picture"&gt;
  &lt;/a&gt;
  picture
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; has almost the same purpose as the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element, but you can specify more sources and browsers decide, which is the best for them. If you want to use a new image format, like .avif, (which is not yet widely supported at the time I write this post), you should give the image in another format, like png with the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#source"&gt;
  &lt;/a&gt;
  source
&lt;/h3&gt;

&lt;p&gt;With this element you can specify multiple sources for the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;, the &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; elements, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"image.png"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"image.webp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"image.avif"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#svg"&gt;
  &lt;/a&gt;
  svg
&lt;/h3&gt;

&lt;p&gt;I could describe it in a more complicated way, but &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; is &lt;em&gt;mostly used to display a vector graphic image&lt;/em&gt;, that you can enlarge or reduce to any size without becoming pixelated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-by-playing"&gt;
  &lt;/a&gt;
  Learn by playing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/plfstr" rel="noreferrer"&gt;Paul Foster&lt;/a&gt; built this awesome memory game. Test yourself and beat your score tomorrow. &lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/plfstr/embed/zYqQeRw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
    If you pick the correct elements, your code will be easier to read by other developers,&lt;br&gt;
    it will be easier for assistive technology users to use your website,&lt;br&gt;
    the search engines will rank your website higher (SEO).&lt;br&gt;
    Sometimes you should stop and think about whether there is a better HTML element than the one you want to use.
&lt;/p&gt;

&lt;p&gt;If you are missing something or find any inaccuracies, please let me know and I will add or correct it as soon as I can.&lt;/p&gt;

&lt;p&gt;Originally posted on &lt;a href="https://uselessdivs.com/blog/a-short-guide-to-help-you-pick-the-correct-html-tag"&gt;Use Less Divs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Why web3 matters</title>
      <author>Cat McGee</author>
      <pubDate>Tue, 28 Sep 2021 20:08:03 +0000</pubDate>
      <link>https://dev.to/catmcgeecode/why-web3-matters-4oe0</link>
      <guid>https://dev.to/catmcgeecode/why-web3-matters-4oe0</guid>
      <description>&lt;p&gt;&lt;a href="https://blog.mcgee.cat/why-web3-matters"&gt;Original post on Hashnode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, a Twitter thread entitled &lt;em&gt;Why web3 matters&lt;/em&gt; went viral. And as much as I love this sentiment, I couldn't help but roll my eyes when reading through Chris Dixon's buzzword-filled tweets. That kind of blockchain lingo is loved by crypto salespeople and NFT grifters, but is quite far removed from people who, well... actually want to understand why web3 matters. It doesn't help that Twitter is a cesspool for controversies, and Chris's thread seemed to divide people into two groups - you either agree with everything he said 100% making you a delusional zoomer, or you're an old-fashioned granddad who can't keep up with the times. I'm here to help you make up your own mind, and hopefully find yourself somewhere in between these two extremes.&lt;/p&gt;

&lt;p&gt;If you're someone who loves to read irrationally enthusiastic reassurances about the next blockchain get-rich-quick scheme, this post is not for you. But if you're fed up of the constant bombardment of jargon and actually want to understand why on earth Twitter is suddenly talking about a new web, read on. I'm going to tell you why web3 &lt;em&gt;actually&lt;/em&gt; matters and what it means for you - a person, not a venture capitalist. 😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-wrong-with-our-current-web"&gt;
  &lt;/a&gt;
  What's wrong with our current web?
&lt;/h2&gt;

&lt;p&gt;We've had two iterations of the web so far - known as, you guessed it, web1 and web2. Web1 was king from approximately 1990-2005, and most people using the web in those days were consumers rather than creators. Content was consumed by many but created by few, mainly obnoxiously nerdy tech people and forward-thinking news sites. It is now nicknamed the 'read-only web.'&lt;/p&gt;

&lt;p&gt;Web2 changed that, particularly with the introduction of social media. Suddenly, more and more people were posting, creating, and sharing their lives with the world. Those who were originally only reading news stories started publicly arguing with them. And the internet that we know today was born.&lt;/p&gt;

&lt;p&gt;But there's a problem. Everything that we post, share, comment, like, or furiously screenshot is owned by someone else. And it goes deeper - it's owned by 4 big companies: Google, Apple, Facebook, and Amazon. We'll call them GAFA.&lt;/p&gt;

&lt;p&gt;The web has gone from being created by few and consumed by many, to being created by many and consumed by many, to being &lt;strong&gt;created by many and owned by few&lt;/strong&gt;. GAFA have created a &lt;strong&gt;Data Economy&lt;/strong&gt;, feeding off of the content that we create and using it against us. They control the information we create, the information we see, and with that they're able to &lt;em&gt;gently&lt;/em&gt; exploit our human weaknesses by manipulating what we believe, which in turn makes ads more effective - the Data Economy business model.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The company with the most data always wins.&lt;/strong&gt; Facebook buys out any and all threats to their social media monopoly - remember when WhatsApp was privacy-focussed? Or when Instagram was actually a non-toxic platform for friends to share photos? Google has made Bing a meme, Yahoo a boomers-only search engine, and reduced Mozilla to desperately holding onto the ethical part of the browser market. And Amazon has basically disrupted every market in existence and changed the course of the economy. But like, in a bad way.&lt;/p&gt;

&lt;p&gt;The Data Economy isn't just an exploitive and rigged business model, but it also has devastating consequences when things go wrong. When so much data is owned by one entity, it makes them a prime target for hacking. And oh boy, do these guys get hacked. For a glimpse into how insecure the Data Economy is, have a look at Wikipedia's &lt;a href="https://en.wikipedia.org/wiki/List_of_data_breaches"&gt;list of data breaches&lt;/a&gt;. And to find out if your data has been exposed to the public, enter your email into &lt;a href="https://haveibeenpwned.com/"&gt;Have I Been Pwned&lt;/a&gt;. Not only are there accidental data breaches, but there have been cases of &lt;a href="https://en.wikipedia.org/wiki/Facebook%E2%80%93Cambridge_Analytica_data_scandal"&gt;purposeful illegal selling of data&lt;/a&gt; from GAFA. There is no sign of this stopping, and no incentive to stop either. That's where web3 comes in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-web3-ideal"&gt;
  &lt;/a&gt;
  The web3 ideal
&lt;/h2&gt;

&lt;p&gt;Web3 promises two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To remove the ability to make money from data&lt;/li&gt;
&lt;li&gt;To create incentives to make money on the internet through other means&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By achieving both these goals, we will no longer live in a Data Economy. Companies will have to find new ways to make money, and people will be able to take control of their own data. There will be no incentive to hack into data centres. We'll live in a world where &lt;strong&gt;the people consume, create, and own our information&lt;/strong&gt;, not in a world of surveillance capitalism that feeds 4 power-hungry data-hoarding entities.&lt;/p&gt;

&lt;p&gt;Sound unrealistic? Up until now, it has been. We've been relying on governments and companies to do the right thing, and we've seen how that's panned out. But if we can't trust people to enforce these promises, we can trust technology. So let's go through how web3 can technologically fulfill each of its promises.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-the-ability-to-make-money-from-data"&gt;
  &lt;/a&gt;
  Remove the ability to make money from data
&lt;/h2&gt;

&lt;p&gt;Web3 has often been called the &lt;strong&gt;decentralized web&lt;/strong&gt;. While data is currently &lt;em&gt;centralized&lt;/em&gt; and owned by GAFA, web3 applications separate their data and store it on a large number of computers and hard drives. These computers are not owned by one company - the idea is that each person can own a small amount of data. Without one entity having access to data, there is no ability to make money from it. &lt;/p&gt;

&lt;p&gt;There are plenty of ways to accomplish this technologically. The most well-known solution to this currently is (brace yourself) &lt;em&gt;blockchain&lt;/em&gt;. Without going into boring details of how a blockchain works, it allows each computer to hold a small amount of data - a block in a chain. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://bitcoin.org/"&gt;Bitcoin&lt;/a&gt; and &lt;a href="https://ethereum.org/"&gt;Ethereum&lt;/a&gt; are the two biggest blockchains in existence, but others like &lt;a href="https://solana.com/"&gt;Solana&lt;/a&gt; and  &lt;a href="https://cardano.org/"&gt;Cardano&lt;/a&gt; are slowly catching up. There are hundreds of decentralized apps, aka dapps, already deployed on Ethereum, and building on the blockchain is getting easier by the minute. It is by far the most secure decentralized architecture.&lt;/p&gt;

&lt;p&gt;There are other ways to build a decentralized network. The obsession over and reliance on blockchain is, quite frankly, BS. There are decentralized storage companies out there (like &lt;a href="https://www.storj.io/"&gt;Storj&lt;/a&gt;) that pay any person to host some of their storage space to be a 'node' on their network, while allowing developers to store their data on these nodes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web3 is not blockchain&lt;/strong&gt; - this is an incredibly important point to understand. Blockchain is a web3 architecture, but it is not the only way to accomplish a decentralized web, and in most cases it is unnecessarily expensive. However, with blockchain comes &lt;strong&gt;cryptocurrency&lt;/strong&gt;, which brings us to our next point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-incentives-to-make-money-on-the-internet-through-other-means"&gt;
  &lt;/a&gt;
  Create incentives to make money on the internet through other means
&lt;/h2&gt;

&lt;p&gt;Without one entity having access to large amounts of data, we can't have a Data Economy. And removing the Data Economy already opens up new incentives to make money through other means. But when people talk about making money using web3, they're talking about crypto.&lt;/p&gt;

&lt;p&gt;Just a warning: some of this next part may sound similar to Chris's thread, but I promise it will actually be coherent. &lt;/p&gt;

&lt;p&gt;Crypto provides a financial incentive, known as &lt;strong&gt;tokens&lt;/strong&gt;, to participate in the building of a decentralized web. There are many ways to earn tokens - some examples are offering storage (like Storj), creating content, or sometimes even &lt;a href="https://www.forbes.com/sites/youngjoseph/2020/09/17/uniswap-ethereum/"&gt;being early adapters of the application.&lt;/a&gt; Companies can set up their own protocol for rewarding their users, and it cuts out the need for other third party services. There is no need to send data through AWS, Stripe, or PayPal, as tokens can be sent directly from the provider to the user.&lt;/p&gt;

&lt;p&gt;Tokens can also be sent directly from one user to another. No more relying on Google to give you your YouTube earnings, or directing your audience to Patreon so they can donate - users can directly 'tip' you a token if they like your content. There are also the famous NFTs, which, sorry Chris, do not let you &lt;em&gt;"own a piece of the internet"&lt;/em&gt;. NFTs are tokens too, but they are not equal in value to each other. While owning an OG token is like owning a dollar, owning an NFT is more like owning a painting. All dollars are equal in value, but not all paintings are equal in value. NFTs are each unique, and they're pretty cool - check out &lt;a href="https://opensea.io/"&gt;OpenSea&lt;/a&gt; if you're interested in getting into it.&lt;/p&gt;

&lt;p&gt;This token economy is exactly what the web was created for in the first place. It's direct. &lt;em&gt;People&lt;/em&gt; reward &lt;em&gt;people&lt;/em&gt; for providing a service or participating in a better world. There is no malicious data tracking or manipulation. No exploitation, no incessant ads, no algorithms designed to be addictive. No reliance on huge profit-driven companies. Just people interacting with people. That's web3.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-where-are-we"&gt;
  &lt;/a&gt;
  So where are we?
&lt;/h2&gt;

&lt;p&gt;Most apps you use are still web2. The majority of dapps out there are purely for finance, like trading crypto or buying and selling NFTs. But we're getting there, and web3 is already beginning to expand into huge industries, like &lt;a href="https://audius.co/"&gt;music&lt;/a&gt;, &lt;a href="https://livepeer.org/"&gt;video streaming&lt;/a&gt;, and even &lt;a href="https://axieinfinity.com/"&gt;gaming&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Web3 may currently seem pretty inaccessible, and when buzzword tweets go viral it continues to push the narrative that the decentralized web is only for people already in the know. But web2 was like that too. There are thousands of people passionately working to make this space more accessible for all, and you'll soon be using web3 apps without even knowing. &lt;/p&gt;

&lt;p&gt;It's super easy to start your own journey into web3, and you can get involved today by installing &lt;a href="https://metamask.io/"&gt;Metamask&lt;/a&gt;, a browser extension to make your browser compatible with blockchain apps. If you're a developer interested in getting into the web3 space, I cannot recommend &lt;a href="https://dev.to/dabit3/the-complete-guide-to-full-stack-solana-development-with-react-anchor-rust-and-phantom-3291"&gt;Nader Dabit&lt;/a&gt;'s content enough.&lt;/p&gt;

&lt;p&gt;Thanks for reading. This is my first ever post about web3, and was &lt;a href="https://blog.mcgee.cat/why-web3-matters"&gt;originally posted here&lt;/a&gt;. I'll be posting more about the decentralized web so if you're interested in reading my (potentially controversial) takes, make sure to follow me &lt;a href="https://blog.mcgee.cat/"&gt;on Hashnode&lt;/a&gt; or &lt;a href="https://twitter.com/messages/compose?recipient_id=2287174586&amp;amp;text=Hey%20Cat!"&gt;slide into my Twitter DMs&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>twitter</category>
      <category>discuss</category>
    </item>
    <item>
      <title>A Strange Request</title>
      <author>Pato Z</author>
      <pubDate>Tue, 28 Sep 2021 19:44:26 +0000</pubDate>
      <link>https://dev.to/pzavolinsky/a-strange-request-48i9</link>
      <guid>https://dev.to/pzavolinsky/a-strange-request-48i9</guid>
      <description>&lt;p&gt;I'm planning a fancy dinner party for our friends, and you being my friend, decide to help me with the arrangements. Everything is going well until I ask you...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-strange-request"&gt;
  &lt;/a&gt;
  A Strange Request
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hey, I need you to run to the Library, you know that building full of books we used to visit in ancient times, before the Internet?&lt;/li&gt;
&lt;li&gt;Yes, I know what a Library &lt;em&gt;is&lt;/em&gt;, thankyouverymuch.&lt;/li&gt;
&lt;li&gt;I need you to find me the title of the first five books about broccoli ever published, it's a matter of life and death.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Being the brains behind this operation, you first worry about my mental sanity, but then dubbing me a bit eccentric, you decide to humor me. Before heading out to the Library, you take out a piece of paper and jot down my request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT book titles
FROM books in the Library
WHERE the book topic is about 'broccoli'
ORDER BY publication year
LIMIT 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(I sneak a peek at your note and think to myself "What a strange fella").&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#road-trip"&gt;
  &lt;/a&gt;
  Road trip
&lt;/h2&gt;

&lt;p&gt;Clearly you don't live in the Library so to get there you'll need to take some means of transportation. And today your transport of choice is a &lt;a href="https://en.wikipedia.org/wiki/Network_socket"&gt;TCP Socket&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Never mind what happens in the Library, a &lt;em&gt;lot&lt;/em&gt; can go wrong on the way there and back: you could get lost, take too long, decide to stop for coffee on your way back, even get to the Library only to find out that it's temporarily closed due to a bug infestation.&lt;/p&gt;

&lt;p&gt;I, being the inquisitive chef, start preparing for the worst, including network errors and socket timeouts.&lt;/p&gt;

&lt;p&gt;Luckily the roads are clear, so a couple of milliseconds later you arrive at the Library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-only-sensible-way"&gt;
  &lt;/a&gt;
  The only sensible way
&lt;/h2&gt;

&lt;p&gt;Fresh through the door, you see an impressive building stuffed from top to bottom with rows and rows of books.&lt;/p&gt;

&lt;p&gt;Eager to get your broccoli quest out of the way you do what any sensible human being would do in this situation: you pick the first book in the first shelf and read it from cover to cover to see if it's about broccoli or not, you make a note of its &lt;em&gt;broccoliness&lt;/em&gt; and its publication year and continue with the second one, and so on until you've read the whole library. Then you find the five earliest publications and head back home.&lt;/p&gt;

&lt;p&gt;Unfortunately years have passed, the dinner party was a sham and we are no longer on speaking terms. This strategy was too inefficient. It could've worked if there were only a couple of books in the Library but this was not the case.&lt;/p&gt;

&lt;p&gt;What you just did is known as a &lt;a href="https://en.wikipedia.org/wiki/Full_table_scan"&gt;table scan&lt;/a&gt; (also known as a &lt;code&gt;collection scan&lt;/code&gt;) and in most cases you'll lose friends and ruin parties because of it.&lt;/p&gt;

&lt;p&gt;We need a better approach, luckily librarians have solved this problem before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-bunch-of-cards"&gt;
  &lt;/a&gt;
  A bunch of cards
&lt;/h2&gt;

&lt;p&gt;Libraries since forever had this great tool called The Catalog. Library catalogs, before computers, were big pieces of furniture, chests of drawers filled with small cardboard cards. Each card contained information about where to find books according to some criteria. An alternative name for these "catalog furniture things" is &lt;a href="https://en.wikipedia.org/wiki/Database_index"&gt;indexes&lt;/a&gt; (or "indices" if you're feeling particularly fancy).&lt;/p&gt;

&lt;p&gt;Armed with this knowledge you venture into the mysterious Room of Catalogs. In there you find lots of catalogs with book reference cards for many different types of queries. You have "books by size", "books by weight", "books by nutritional value", ... etc. Browsing through them you find two indexes that catch your attention: "books by topic" and "books by publication year".&lt;/p&gt;

&lt;p&gt;These two should come in handy but which one to choose?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-plan-comes-together"&gt;
  &lt;/a&gt;
  A plan comes together
&lt;/h2&gt;

&lt;p&gt;So you have a choice to make, should you go check the topic index or the publication index? The answer you can already foresee: "it depends".&lt;/p&gt;

&lt;p&gt;If the library had only books on green veggies, then the chances of finding a broccoli book in there would be pretty high. In other words the "broccoli" card of the topic index would be very &lt;em&gt;very&lt;/em&gt; long. If this was the case, maybe going to the publication index and starting from the oldest known year, searching those books for &lt;em&gt;broccoliness&lt;/em&gt; until you find five would make sense.&lt;/p&gt;

&lt;p&gt;In non-veggie only libraries though this strategy would be disastrous, so you decide you'll go for the topic index.&lt;/p&gt;

&lt;p&gt;But before jumping to it, you realize picking the right index is no trivial task, pick the right index and you might be done in an instant, pick the wrong one and you might have to stay at the library overnight.&lt;/p&gt;

&lt;p&gt;Just like you have people that specialize in finding the perfect wine to go with a meal, the task of finding the right index for your query is best left to &lt;a href="https://en.wikipedia.org/wiki/Query_optimization"&gt;query planners&lt;/a&gt; (sometimes called &lt;code&gt;query optimizers&lt;/code&gt;). You can think of these as kind of query &lt;a href="https://en.wikipedia.org/wiki/Sommelier"&gt;sommeliers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the process of choosing an index you just learned an important nugget of wisdom:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;index efficiency depends on many things, including not only the question you are trying to answer, but the data that was indexed and the index stats.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#all-over-the-place"&gt;
  &lt;/a&gt;
  All over the place
&lt;/h2&gt;

&lt;p&gt;So you approach the catalog titled "books by topic", open the drawer for "b" and rummage through the cards until you find a dusty old card labeled "broccoli". The future's looking bright, you'll be outta here in no time you think.&lt;/p&gt;

&lt;p&gt;Unfortunately you look down at the card and to your dismay, there are 100 book locations listed in the card, and even worse, these locations are all over the place, some in the upper floors, others in the basement, etc.&lt;/p&gt;

&lt;p&gt;Apparently books in the library are not physically ordered by the type of veggie they discuss, go figure.&lt;/p&gt;

&lt;p&gt;The physical order of books is often called the &lt;a href="https://en.wikipedia.org/wiki/Database_index#Clustered"&gt;cluster index&lt;/a&gt; and a popular one for books would be "alphabetical by author". An alternative would be "just put it in the next empty shelf", something like ordered by purchase date.&lt;/p&gt;

&lt;p&gt;Anyway back to your current predicament, you can foresee lots of stairs and walking around in the library. You'll need to go check those 100 locations, make a note of the publication year, then find the earliest five.&lt;/p&gt;

&lt;p&gt;You're not looking forward to it, if only there was a way for you to avoid those trips up and down the library...&lt;/p&gt;

&lt;p&gt;Then suddenly two ideas pop into your head.&lt;/p&gt;

&lt;p&gt;The first one: what if you take this list of 100 locations and use the "books by publication year" index to find the first five there, then you'll only need to do five trips around the library.&lt;/p&gt;

&lt;p&gt;Like any query planning activity, the efficiency of this strategy depends on many factors. If the broccoli card had only, say 6 entries, then probably doing six trips around the library would be faster than rummaging through the publication index (that contains many &lt;em&gt;many&lt;/em&gt; books that are &lt;em&gt;not about broccoli&lt;/em&gt; for some reason).&lt;/p&gt;

&lt;p&gt;On the other hand, if the library was so big that you needed to take a train from one room to the other, then whatever you can do to avoid fetching books would be the right call.&lt;/p&gt;

&lt;p&gt;Given the complexity of this type of decision, some query planners might not even bother with trying to consider &lt;a href="https://www.postgresql.org/docs/current/indexes-bitmap-scans.html"&gt;index intersection&lt;/a&gt; strategies like this one and just go fetch the 100 books.&lt;/p&gt;

&lt;p&gt;But even if we were to consider this strategy, the potential inefficiencies are plain to see.&lt;/p&gt;

&lt;p&gt;The second idea seems more promising...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-compound-solution-to-a-compound-problem"&gt;
  &lt;/a&gt;
  A compound solution to a compound problem
&lt;/h2&gt;

&lt;p&gt;Wouldn't it be nice if the people that created these two indexes had created one containing both publication and topic information at the same time? Some sort of &lt;a href="https://docs.mongodb.com/manual/core/index-compound/"&gt;compound index&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;You start pondering about the endless possibilities and quickly realize there are two paths forward: we could either (a) add topic information to the publication index or (b) add publication information to the topic index.&lt;/p&gt;

&lt;p&gt;What a mouthful, let's see that in action!&lt;/p&gt;

&lt;p&gt;A card in the publication index looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1985
====
  - 1
  - 2
  - 5
  - 6
  - 10
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we add topic information to this index (that would be option &lt;code&gt;a&lt;/code&gt; above), we'd get something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1985
====
- broccoli
  - 1
  - 5
  - 10
- cars
  - 2
  - 6
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are sorting all the books in the card by topic and adding topic titles, so the card for publication year "1985" under the title "broccoli" would list locations 1, 5, 10.&lt;/p&gt;

&lt;p&gt;We could do the same for the topic index. Right now cards in that index look like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;broccoli
========
- 1
- 5
- 10
- 234
- 567
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add publication information to this index (that would be option &lt;code&gt;b&lt;/code&gt; above), we'd get something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;broccoli
========
- 1985
  - 1
  - 5
  - 10
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the task at hand (b) looks like the most promising solution, but knowing what you know about strange book requests, surely there are other questions that are best answered by an (a) type of index.&lt;/p&gt;

&lt;p&gt;Thanks to this compound index of "books by topic and publication year (in that order)" you can just pick the five first locations and go fetch those books. A huge improvement!&lt;/p&gt;

&lt;p&gt;You take this time to admire the craft of these ancient index makers. When making compound indexes the order in which indexes are combined is &lt;em&gt;very&lt;/em&gt; significant.&lt;/p&gt;

&lt;p&gt;Just by looking at (a) and (b) you can tell the difference.&lt;/p&gt;

&lt;p&gt;You can almost see the emerging pattern here:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;when building compound indexes, put filter fields first (the ones over which you specify conditions) and sorting fields later (the ones you'll order by).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#not-the-wrong-princess-again"&gt;
  &lt;/a&gt;
  Not the wrong princess, again!
&lt;/h2&gt;

&lt;p&gt;“Five books, five trips, things are looking pretty good” you think, putting on a smug face and nodding to yourself like a psycho.&lt;/p&gt;

&lt;p&gt;This is a huge milestone because, to be honest, all prior approaches had that frustrating feeling of climbing two flights of stairs to find a book only to realize it wasn’t the book you wanted.&lt;/p&gt;

&lt;p&gt;You felt a bit like an Italian descent plumber constantly trying to save a princess from some kind of dragon thing only to realize you saved the &lt;em&gt;wrong&lt;/em&gt; princess, again.&lt;/p&gt;

&lt;p&gt;So, happy with this huge efficiency improvement, you go fetch the first book, write the title down and just before leaving for the second one you glance at the shelves and your heart sinks.&lt;/p&gt;

&lt;p&gt;Wouldn’t it be nice if all the books about broccoli were on the same shelf? All that broccoli knowledge neatly &lt;em&gt;clustered&lt;/em&gt; together. One trip surely beats five. How hard would it be to convince the local librarians to change the way they sort books on the shelves? Pretty hard, probably.&lt;/p&gt;

&lt;p&gt;This is exhausting, so you decide to take a break...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-coffee-interlude-at-the-local-bookshop"&gt;
  &lt;/a&gt;
  A coffee interlude at the local bookshop
&lt;/h2&gt;

&lt;p&gt;You sit and nurse a hot coffee while pondering about why every time you propose changing the cluster index to a librarian they go red with anger and blue with sadness. There must be a reason.&lt;/p&gt;

&lt;p&gt;(right about this time, I’m at home chopping onions and wondering how could you possibly have a decent &lt;a href="https://en.wikipedia.org/wiki/Network_delay"&gt;latency&lt;/a&gt; with all this philosophical pondering and meandering)&lt;/p&gt;

&lt;p&gt;Before coming up with an explanation you think of an alternative approach: let’s talk about bookshops.&lt;/p&gt;

&lt;p&gt;Bookshops are ancient brick and mortar places where you can go to buy books. Most bookshops organize books by topic, and within each topic, alphabetically by author. Pretty close to what we need.&lt;/p&gt;

&lt;p&gt;So you wonder why do bookshop people subject themselves to this book sorting torture that brings librarians to tears?&lt;/p&gt;

&lt;p&gt;Of the top of your mind, one explanation is that bookshops aim to answer a very limited number of questions, namely “where’s this book?”, “where are all the books by this author?”, etc. And bookshops want to make it easier for people to find those books by walking around the store without any help. Also, bookstores usually have much fewer books than libraries.&lt;/p&gt;

&lt;p&gt;Explanation aside, what would it take to sort books that way? Well, you should probably ask a bookstore clerk next time you visit one. In the meantime, clearly we need to deal with overflow. When an author publishes a new book and we don’t have enough space to place it on the shelf, we need to shift everything to the right.&lt;/p&gt;

&lt;p&gt;If we were to do this in the library, we’d also need to update every card in every index because the location for this book changed to the next shelf. This feels pretty annoying and requires us to be able to answer a meta question: where are all the index references to this book?&lt;/p&gt;

&lt;p&gt;Your brain starts to hurt, so you decide to park that thought for later.&lt;/p&gt;

&lt;p&gt;Deep down you keep wondering about how convenient it would be to cluster books by topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-asymptote-of-awesome"&gt;
  &lt;/a&gt;
  The Asymptote of Awesome
&lt;/h2&gt;

&lt;p&gt;Back at the library you decide to recap. So far you did a single index lookup in the "books by topic and publication year (in that order)". You got 5 locations, but because of your convincing powers, the library now clusters by this index, so those 5 locations are actually consecutive, so you really need a single trip through the library.&lt;/p&gt;

&lt;p&gt;You started this journey by looking at every single book in the library, then you narrowed the search down to all 100 books about broccoli. From there to just the first five broccoli books. And, in the ultimate optimization, a single lookup for five consecutive books!&lt;/p&gt;

&lt;p&gt;You feel accomplished, you ascended the Peak of Efficiency, you must have reached the Asymptote of Awesome.&lt;/p&gt;

&lt;p&gt;(you quickly take out a piece of paper and scribble down “Asymptote of Awesome” in case you decide to start a rock band in the future)&lt;/p&gt;

&lt;p&gt;...unless…&lt;/p&gt;

&lt;p&gt;One trip around the library is much better than a hundred, but you know what’s better than one trip around the library? &lt;/p&gt;

&lt;p&gt;You’re right: &lt;em&gt;no&lt;/em&gt; trips around the library!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-such-a-thing-as-being-too-lazy"&gt;
  &lt;/a&gt;
  Is there such a thing as being &lt;em&gt;too&lt;/em&gt; lazy?
&lt;/h2&gt;

&lt;p&gt;What if we could &lt;em&gt;&lt;a href="https://www.postgresql.org/docs/current/sql-createindex.html"&gt;include&lt;/a&gt;&lt;/em&gt; the book titles in the topic index. Maybe scribble the title right next to the location? Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;broccoli
========
- 1985
  - [location 1]: Broccoli in the flux capacitor
  - [location 5]: Green veggies of the future, a look at 2015 agriculture
  - [location 10]: Little edible trees
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this new expanded index, you can now answer the question directly from the index. No trips, no walking around the library at all.&lt;/p&gt;

&lt;p&gt;You realize there is something deeply meaningful in this: some queries can be answered directly from an index. These queries are known as &lt;a href="https://docs.mongodb.com/manual/core/query-optimization/#covered-query"&gt;covered queries&lt;/a&gt; (because an index fully covers the query without having to go fetch the book).&lt;/p&gt;

&lt;p&gt;Covered queries are the ultimate query, the holy grail of laziness, and therefore of performance.&lt;/p&gt;

&lt;p&gt;You can hear a manic evil laughter suddenly bursting from your own mouth. “Every query should be a covered query, every query should have its own index, in fact let's index every property, what we need is more indexes, more catalogs, more cardboard…”&lt;/p&gt;

&lt;p&gt;You pick up a piece of paper and start trying to solve the &lt;a href="https://en.wikipedia.org/wiki/Travelling_salesman_problem"&gt;traveling salesman problem&lt;/a&gt; to optimize hitting every stationary in town so that you can score precious cardboard to start indexing ASAP, and then it dawns on you: somebody must have thought about this before, how come librarians are not doing this already?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-publishers-worst-nightmare"&gt;
  &lt;/a&gt;
  A publisher's worst nightmare
&lt;/h2&gt;

&lt;p&gt;Books are mostly immutable. Once published they stay published as is, they don’t really change much. But what if they did? What would happen if books kept changing? What would that mean to the humble librarian?&lt;/p&gt;

&lt;p&gt;Clearly there are all sorts of wrong things that can happen. The easiest is when the thing that changes is not a part of any index, then you just take a permanent marker, find the book and change it.&lt;/p&gt;

&lt;p&gt;But what if the property that changed was indexed? There was a typ0 in the book and the publication year was wrong. We’d need to find the card for the publication index and fix it. If we had a compound index like "books by topic and publication year (in that order)" we’d need to find the card for the book topic, then move the book under the right publication year. The more indexes we have the more changes we’d need to make.&lt;/p&gt;

&lt;p&gt;Probably the worst type of change is the cluster index change. You suddenly recall your coffee break and how painful it was to shift every book to the right. Not to mention answering the question of: where are all the index references to this book?&lt;/p&gt;

&lt;p&gt;And, if we happen to be inserting a book at the beginning of the cluster index we might need to shift every single book in the library and update every single card of every single index.&lt;/p&gt;

&lt;p&gt;There’s also the problem of space. If we take this to the extreme, every index is a cluster index, every index includes every property in the book, so for every index you’d need a whole new library building.&lt;/p&gt;

&lt;p&gt;All of this is kind of depressing and, to be honest, you already have what you came for, it’s getting late so you better head back.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-return"&gt;
  &lt;/a&gt;
  The return
&lt;/h2&gt;

&lt;p&gt;So you are finally back, you hand me over the list with the five titles, expecting a hero’s welcome.&lt;/p&gt;

&lt;p&gt;Instead, I look at the list, shrug and say “just as I suspected, there are at least 5 books about broccoli”, and keep cooking.&lt;/p&gt;

&lt;p&gt;You start wondering why you subject yourself to friends like me.&lt;/p&gt;

&lt;p&gt;Upon careful examination you start thinking about what could I have done to avoid so much waste. So far we’ve been so focused on finding the right books that we never stopped to think about what we were using the books for.&lt;/p&gt;

&lt;p&gt;I asked for the title of the first five books about broccoli. What if I had asked “how many of the first five books about broccoli have a green cover?” or maybe “how many times is the word ‘broccoli’ mentioned in the first five books about broccoli?”&lt;/p&gt;

&lt;p&gt;All of these questions have something in common (a couple of things actually). First and foremost they are pretty weird. But much more interesting is the fact that all of them could be answered using the same five books!&lt;/p&gt;

&lt;p&gt;In truth there were two parts of my strange request. Find me a couple of books, and from those books I only want the titles.&lt;/p&gt;

&lt;p&gt;All queries have the same two parts: a criteria for selecting books (often called a &lt;code&gt;filter&lt;/code&gt;) and some instructions of what to do with those books once you find them (usually called a &lt;code&gt;projection&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;My original query had “get the first five books about broccoli” as the filter and “from those I want the title” as the projection.&lt;/p&gt;

&lt;p&gt;We’ve been focusing mostly on the filter so far, trying our best to avoid any kind of physical activity, but let’s talk about the projection for a moment.&lt;/p&gt;

&lt;p&gt;We’ll start by altering the filter to make matters much &lt;em&gt;much&lt;/em&gt; worse…&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frenemies"&gt;
  &lt;/a&gt;
  Frenemies
&lt;/h2&gt;

&lt;p&gt;Let’s say that instead of the first five books about broccoli, I asked for the first thousand.&lt;/p&gt;

&lt;p&gt;If you had the right index that covers this query, you could get an answer very quickly and efficiently, without a single trip around the library.&lt;/p&gt;

&lt;p&gt;If, on the other hand, you needed to use a compound index, you’d still need to go fetch 1000 books. This is usually the most typical scenario given that a cluster index at this point is probably out of the question.&lt;/p&gt;

&lt;p&gt;That being said, you could easily fit 1000 book titles in a small pocket-sized notebook. What if I had asked for 1000 full books instead?&lt;/p&gt;

&lt;p&gt;So you diligently fetch and carry 1000 books to your car only to realize you cannot fit 1000 books in the trunk of a compact.&lt;/p&gt;

&lt;p&gt;You hire a truck, load it and drive it back to my house.&lt;/p&gt;

&lt;p&gt;Once there, you see me give the books a cursory glance, check the titles and throw the rest in the trash.&lt;/p&gt;

&lt;p&gt;At this point you scream bloody murder.&lt;/p&gt;

&lt;p&gt;And now we learned a new lesson, if you want to keep your friends, ask only for what you truly need. Don’t be lazy and ask for &lt;em&gt;everything&lt;/em&gt; just because it’s easier than to explain what you want.&lt;/p&gt;

&lt;p&gt;So with this final frustration out of the way, it’s time to wrap up with this party.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cue-nostalgic-music"&gt;
  &lt;/a&gt;
  Cue nostalgic music
&lt;/h2&gt;

&lt;p&gt;In the end the party was a big success. Whether so much broccoli wisdom had anything to do with it or not, only time will tell.&lt;/p&gt;

&lt;p&gt;Before everyone heads home, let’s recap what we’ve learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Table scans ruin parties and friendships.&lt;/li&gt;
&lt;li&gt;Always use an index for your queries.&lt;/li&gt;
&lt;li&gt;You can check how good a particular index is for your query by comparing the number of books fetched with the number of books actually included in the result. You want these numbers to be as close as possible.&lt;/li&gt;
&lt;li&gt;Fancy people call indexes “indices”.&lt;/li&gt;
&lt;li&gt;When creating compound indexes, the order of the properties being indexed matters &lt;em&gt;a lot&lt;/em&gt;. You want “filter” properties first, “sorting” properties later.&lt;/li&gt;
&lt;li&gt;Sometimes you can answer queries directly from the index, these are covered queries. Having indexes that cover your quieres has a cost so try to balance coverage obsession with pragmatic index building. Only cover the most critical queries.&lt;/li&gt;
&lt;li&gt;If you want to check which indexes apply to a particular query, query planners are always very eager to &lt;a href="https://www.postgresql.org/docs/current/sql-explain.html"&gt;explain&lt;/a&gt; their train of thought.&lt;/li&gt;
&lt;li&gt;The physical ordering of books is the cluster index. Cluster indexes can be very efficient, but changes to the cluster index can be painful.&lt;/li&gt;
&lt;li&gt;Projections are very important, always ask exactly what you need.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And in the end you might be left wondering what was I cooking, well…&lt;/p&gt;

&lt;p&gt;...that’s a wrap.&lt;/p&gt;

</description>
      <category>database</category>
      <category>performance</category>
      <category>optimization</category>
      <category>broccoli</category>
    </item>
    <item>
      <title>15 Developer Tools to Make You Super Productive</title>
      <author>Prosper Otemuyiwa</author>
      <pubDate>Tue, 28 Sep 2021 19:12:17 +0000</pubDate>
      <link>https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a</link>
      <guid>https://dev.to/sourcegraph/15-developer-tools-to-make-you-super-productive-2g0a</guid>
      <description>&lt;p&gt;The best software developers arm themselves with superior knowledge of specific tools that get the job done.&lt;/p&gt;

&lt;p&gt;Pairing with experienced developers leaves you with many tips, tricks, shortcuts, and tools that they have access to and mastered to help them focus on a product’s business logic.&lt;/p&gt;

&lt;p&gt;Today, I’ll show you 15 developer tools that’ll improve your productivity immensely.&lt;/p&gt;

&lt;p&gt;Let’s go!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-cloudinary"&gt;
  &lt;/a&gt;
  1. Cloudinary
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloudinary.com"&gt;Cloudinary&lt;/a&gt; is a full-stack media service that stores, transforms, optimizes, and delivers all your media assets with easy-to-use APIs and widgets.&lt;/p&gt;

&lt;p&gt;Cloudinary is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build a feature/app that stores tons of images and videos.&lt;/li&gt;
&lt;li&gt;Build a UI that allows single and multiple uploads. Cloudinary provides a plug-and-play skinnable UI widget, so you &amp;amp; your team don’t need to build any UI.&lt;/li&gt;
&lt;li&gt;Make your app and website load faster. Cloudinary delivers media assets insanely quickly via their global CDN!&lt;/li&gt;
&lt;li&gt;Build a feature/app for video delivery and transformation like Instagram. Cloudinary provides several APIs to help with that.&lt;/li&gt;
&lt;li&gt;Build a backend service that crops, manipulates, transforms, reads text from images, extracts captions from videos using AI, compresses and optimizes media files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cloudinary provides several &lt;a href="https://cloudinary.com/documentation/cloudinary_sdks"&gt;SDKs for different languages and frameworks&lt;/a&gt; to make integration a walk in the park!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sourcegraph"&gt;
  &lt;/a&gt;
  2. Sourcegraph
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://sourcegraph.com"&gt;Sourcegraph&lt;/a&gt; is a software tool that allows you to search all of your code. It provides precise code intelligence and insights. With Sourcegraph, you search small, medium and enormous codebases like &lt;a href="https://sourcegraph.com/search?q=context:global+repo:%5Egithub%5C.com/torvalds/linux%24+list_head&amp;amp;patternType=literal"&gt;Linux&lt;/a&gt;, &lt;a href="https://sourcegraph.com/github.com/kubernetes/kubernetes"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://sourcegraph.com/github.com/chromium/chromium"&gt;Chrome&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;Sourcegraph is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search all of your &lt;a href="https://learn.sourcegraph.com/how-to-search-code-with-sourcegraph-using-literal-patterns"&gt;public and private code across several repositories&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Find all occurrences of code across your organization.&lt;/li&gt;
&lt;li&gt;Search for how other developers use specific API and code blocks across more than two million open source repositories on GitHub and Gitlab.&lt;/li&gt;
&lt;li&gt;Refactor codebase easily and in record time.&lt;/li&gt;
&lt;li&gt;Provide precise code intelligence for all of your code.&lt;/li&gt;
&lt;li&gt;Create real-time dashboards to track the progress of migrations, deprecations, or usage of anything that can be found with a Sourcegraph search.&lt;/li&gt;
&lt;li&gt;Automate large-scale code changes. You can find and modify code across several repositories with a single file—no need to make several PRs across several code repositories to make a simple change. &lt;a href="https://about.sourcegraph.com/batch-changes"&gt;Sourcegraph Batch changes&lt;/a&gt; can do that for you!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-insomnia"&gt;
  &lt;/a&gt;
  3. Insomnia
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://insomnia.rest"&gt;Insomnia&lt;/a&gt; is a software tool that enables you to test API endpoints quickly. &lt;/p&gt;

&lt;p&gt;Insomnia is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Test Rest, Soap, GraphQL and GRPC API endpoints while building.&lt;/li&gt;
&lt;li&gt;Generate API documentation for your codebase.&lt;/li&gt;
&lt;li&gt;Build API pipelines.&lt;/li&gt;
&lt;li&gt;Design APIs using OpenAPI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-netlify"&gt;
  &lt;/a&gt;
  4. Netlify
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.netlify.com"&gt;Netlify&lt;/a&gt; is a service that builds and deploys your front-end code quickly. It provides a very efficient workflow for creating apps with many developers.&lt;/p&gt;

&lt;p&gt;Netlify is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deploy front-end code to the Internet with ease.
Build Jamstack apps. Netlify places a massive bet on Jamstack and provides tools and resources to build and develop Jamstack apps.&lt;/li&gt;
&lt;li&gt;Generate new unique and publicly available URLs on every pull request and commit for other developers and QA folks to test what you’re building on the fly.
Serve static assets with fast CDN.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-retool"&gt;
  &lt;/a&gt;
  5. Retool
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.netlify.com"&gt;Retool&lt;/a&gt; is a software tool that enables you to build internal tools without writing a line of code. &lt;/p&gt;

&lt;p&gt;Retool is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build a dashboard / UI internally to monitor and modify data. With Retool, you can connect to your database or any data source and use their drag-and-drop components to build your internal tools remarkably fast.&lt;/li&gt;
&lt;li&gt;Make non-developers have access to the database without setting up a database environment for them.&lt;/li&gt;
&lt;li&gt;Provide customer support with tools to debug customer problems without building a new set of tools for them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-laravel-forge"&gt;
  &lt;/a&gt;
  6. Laravel Forge
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://forge.laravel.com"&gt;Laravel Forge&lt;/a&gt; is a software service that eliminates the headache of building, managing, fine-tuning, deploying and upgrading servers for PHP applications.&lt;/p&gt;

&lt;p&gt;Laravel Forge is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be responsible for your servers with minimal or no knowledge of DevOps.&lt;/li&gt;
&lt;li&gt;Deploy and manage Laravel, WordPress, Statamic, PHP, and Database server instances.&lt;/li&gt;
&lt;li&gt;Focus on building applications without the additional headache of managing queue workers and scaling server instances.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-aws-amplify"&gt;
  &lt;/a&gt;
  7. AWS Amplify
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/amplify"&gt;AWS Amplify&lt;/a&gt; is a set of tools and services that front-end, web and mobile developers can use together or individually to build scalable full-stack applications powered by AWS.&lt;/p&gt;

&lt;p&gt;AWS Amplify is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deploy static web apps to the Internet in a few clicks.&lt;/li&gt;
&lt;li&gt;Provide non-developers with an admin UI to manage app content.&lt;/li&gt;
&lt;li&gt;Add authentication to your apps without building/managing/writing auth code from scratch.&lt;/li&gt;
&lt;li&gt;Provide a simple mechanism for managing user-generated content for your app in public, protected or private AWS storage buckets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-auth0"&gt;
  &lt;/a&gt;
  8. Auth0
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://auth0.com"&gt;Auth0&lt;/a&gt; is a service best known for providing developers authentication, federated identity, single sign-on, and serverless features. In addition, they manage and maintain the most extensively used open-source authentication module, passport, in the global developer ecosystem!&lt;/p&gt;

&lt;p&gt;Auth0 is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add primary and social (Facebook, Google, LinkedIn, Dropbox) authentication to your web and mobile apps.&lt;/li&gt;
&lt;li&gt;Add Single Sign-On features to your suite of apps.&lt;/li&gt;
&lt;li&gt;Add Federated Identity to your apps.&lt;/li&gt;
&lt;li&gt;Build serverless services. Auth0 webtask enables you to develop serverless apps.&lt;/li&gt;
&lt;li&gt;Add Passwordless authentication to your apps.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-garden"&gt;
  &lt;/a&gt;
  9. Garden
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://garden.io"&gt;Garden&lt;/a&gt; is a cloud service that enables fast and efficient Kubernetes development. It’s a tool that simplifies and manages the development of your Kubernetes instances while building distributed applications.&lt;/p&gt;

&lt;p&gt;Garden is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You don’t want to deal with managing and developing Kubernetes instances yourself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#10-bitrise"&gt;
  &lt;/a&gt;
  10. Bitrise
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.bitrise.io"&gt;Bitrise&lt;/a&gt; is a fast, flexible and scalable mobile CI/CD service that simplifies the development and deployment of all your mobile apps.&lt;/p&gt;

&lt;p&gt;Bitrise is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Need over the air deployment service to share your app updates quickly with users&lt;/li&gt;
&lt;li&gt;Run several test runners against mobile app code PRs automatically&lt;/li&gt;
&lt;li&gt;Build, deploy and release your code host (e.g. Github) branches automatically into executables for different platforms. E.g. With your hybrid apps such as Flutter and Ionic, Bitrise automatically builds the bundles for Android and iOs platforms.&lt;/li&gt;
&lt;li&gt;Need a service to handle all the DevOps for your mobile apps while focusing on code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#11-vercel"&gt;
  &lt;/a&gt;
  11. Vercel
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; is a developer-focused service. As a result, it’s one of the best tools to deploy any front-end app in less than three clicks.&lt;/p&gt;

&lt;p&gt;Vercel is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deploy your front-end codebase with one click. It allows you to import a repo from GitHub, Gitlab and Bitbucket and returns the deployed URL in record time.&lt;/li&gt;
&lt;li&gt;Get a preview URL for every change pushed to your code host.&lt;/li&gt;
&lt;li&gt;Get started with a battle-tested front-end framework and e-commerce templates.&lt;/li&gt;
&lt;li&gt;Ship production-ready, highly available fast websites with Next.js (Vercel authors and maintains this framework). Static assets are served through Vercel’s CDN automatically.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#12-easycron"&gt;
  &lt;/a&gt;
  12. EasyCron
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.easycron.com"&gt;Easycron&lt;/a&gt; is a service that runs all your cron jobs for you on the cloud. No hassles, easy setup!&lt;/p&gt;

&lt;p&gt;Easycron is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You don’t want to go through the hassle of setting up crontabs and infrastructure on your servers for recurring jobs.&lt;/li&gt;
&lt;li&gt;You have a serverless function or API URL that needs to run recurrently. You can add it to EasyCron and set the recurring times via the UI. That’s it! If the jobs fail at any time, EasyCron sends notifications to you about the failure.&lt;/li&gt;
&lt;li&gt;You want to have the luxury of turning your jobs on and off easily and manually running them. EasyCron provides an easy UI to manage your cron jobs.&lt;/li&gt;
&lt;li&gt;You want to clone existing jobs. EasyCron handles that as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#13-wakatime"&gt;
  &lt;/a&gt;
  13. WakaTime
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://wakatime.com"&gt;WakaTime&lt;/a&gt; is a tool that automatically reports stats and metrics right from your code editor. In addition, it provides a dashboard with a breakdown of time spent working on tasks.&lt;/p&gt;

&lt;p&gt;WakaTime is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You want to measure the time you spend on coding tasks.&lt;/li&gt;
&lt;li&gt;You want to know the files and areas of a project or codebase you devote time to.&lt;/li&gt;
&lt;li&gt;You want to set coding goals.&lt;/li&gt;
&lt;li&gt;Email reports of coding stats.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over &lt;a href="https://wakatime.com/integrations"&gt;50 open-source editor plugins&lt;/a&gt; are available for WakaTime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-eversql"&gt;
  &lt;/a&gt;
  14. EverSQL
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.eversql.com"&gt;EverSQL&lt;/a&gt; is a service that predicts performance bottlenecks and automatically optimizes your SQL queries using AI.&lt;/p&gt;

&lt;p&gt;EverSQL is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You don’t want to hire a DBA.&lt;/li&gt;
&lt;li&gt;Need to improve the performance of your SQL queries.&lt;/li&gt;
&lt;li&gt;Regularly &lt;a href="https://www.eversql.com/sql-query-optimizer"&gt;submit SQL queries for optimization&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#15-ngrok"&gt;
  &lt;/a&gt;
  15. Ngrok
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ngrok.com"&gt;Ngrok&lt;/a&gt; is a tool that provides an instant, secure and shareable URL to your localhost server through any NAT or firewall.&lt;/p&gt;

&lt;p&gt;Ngrok is an excellent choice if you want to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Share a locally running project with co-workers.&lt;/li&gt;
&lt;li&gt;Testing any auth flow from sites such as Twitter that expect a valid HTTPS connection for the callback.&lt;/li&gt;
&lt;li&gt;Replay HTTP requests made to your URL for introspection.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#more-tools"&gt;
  &lt;/a&gt;
  More Tools?
&lt;/h2&gt;

&lt;p&gt;I'll like to know what services &amp;amp; software tools make you super productive as a software developer. &lt;/p&gt;

&lt;p&gt;Feel free to drop it in the comment section! &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>programming</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Beginners Guide to Software Engineering Part 1</title>
      <author>Kiran Iyer</author>
      <pubDate>Tue, 28 Sep 2021 18:53:27 +0000</pubDate>
      <link>https://dev.to/kiraniyerdev/beginners-guide-to-software-engineering-part-1-4b14</link>
      <guid>https://dev.to/kiraniyerdev/beginners-guide-to-software-engineering-part-1-4b14</guid>
      <description>&lt;p&gt;I am very excited to have the opportunity to write this guide to help beginners navigate their way through the tech industry. I applaud you for taking the initiative and making such a strong decision because it can be a long and difficult process. I myself started out in the same boat not long ago and it has been an interesting, challenging journey so far!&lt;/p&gt;

&lt;p&gt;Over the course of my studying, I've met many wonderful developers, mentors, and communities who have been really helpful, as well as a large number of friends from all over the world who are all on the same journey. I can't express my gratitude to them enough.&lt;/p&gt;


&lt;p&gt;&lt;a href="https://giphy.com/gifs/vh1-scared-famous-xT0xevozBTg7ChpL44"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finding a new career that you enjoy can be difficult, whether you are new to the workforce or are in a job you dislike. Today's digital world has created a plethora of tech careers, making it difficult to choose which one is best for you. With so many career options available today, it can be a rather confusing and difficult process to choose the right one.&lt;/p&gt;

&lt;p&gt;While the upskilling process requires strong commitment and patience, the career rewards it provides are well worth the effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-software-engineering"&gt;
  &lt;/a&gt;
  What is Software Engineering?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zTV3ALbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.javatpoint.com/tutorial/software-engineering/images/software-engineering-introduction.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTV3ALbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.javatpoint.com/tutorial/software-engineering/images/software-engineering-introduction.png" alt="software engineering image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Software engineering is the process of evaluating user needs and then designing, developing, and testing software to meet those requirements.&lt;/p&gt;

&lt;p&gt;In simple terms, Software is a program that executes some code to serve a computational purpose. It's a collection of these executable codes, different libraries, and a whole lot of documentation.&lt;/p&gt;

&lt;p&gt;Engineering is more about the development of such products, using well-defined methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started-as-a-software-engineer"&gt;
  &lt;/a&gt;
  How to Get Started as a Software Engineer?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAPONeP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ranvoo.com/wp-content/uploads/2018/09/how-to-remove-the-stains.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAPONeP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ranvoo.com/wp-content/uploads/2018/09/how-to-remove-the-stains.jpg" alt="how image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a few things you should think about before embarking on your software engineer journey. The information provided here is intended to provide you with the fundamentals of getting started, as well as a simple guide providing you a direction on how to learn to become a software engineer.&lt;/p&gt;

&lt;p&gt;First and foremost, learn about the various software engineering disciplines such as Frontend, Backend, DevOps, and so on. Once you've done your homework and have a good understanding of how these departments operate and what is expected of them, look at the various technologies utilized, for example - HTML, CSS &amp;amp; JavaScript in the Frontend, and how to get there.&lt;/p&gt;

&lt;p&gt;The best approach to get started is to choose a discipline that you are passionate about. When people initially consider a profession in software engineering, they may be inclined to study everything and really fast. However, coming from personal experience, I can assure you that this is counterproductive. You must be aware of, and constantly remind yourself of, the fact that you are embarking on a lifetime of technological learning. It requires consistency, perseverance, and solid determination, suffice to say take it slow and know that everyone learns at their own pace.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rome was not built in a day, but they worked on it every day&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-skills-do-you-need-to-succeed-as-a-software-engineer"&gt;
  &lt;/a&gt;
  What Skills Do You Need to Succeed as a Software Engineer?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1uH3TDwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://toxsl.com/blog/image/16/post-image_file-skills-required.png%3Fthumbnail%3D840" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1uH3TDwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://toxsl.com/blog/image/16/post-image_file-skills-required.png%3Fthumbnail%3D840" alt="Software Engineering skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: I'm only giving an overview of the required skills, saving lengthy details for another day or article maybe 😉&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#coding"&gt;
  &lt;/a&gt;
  Coding
&lt;/h3&gt;

&lt;p&gt;A software engineer needs a lot of different skill sets in order to maximize the effectiveness of their work. Knowledgeable coding skills are an integral part of a software engineer's toolkit as coding is the backbone of any work that they do.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-solving"&gt;
  &lt;/a&gt;
  Problem solving
&lt;/h3&gt;

&lt;p&gt;Using creativity and critical thinking to break complex problems down and finding solutions. Analyzing data to identify the scope of problems and isolate invalid data models. Software engineers with strong problem-solving abilities are well-positioned to advance in their careers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attention-to-detail"&gt;
  &lt;/a&gt;
  Attention to detail
&lt;/h3&gt;

&lt;p&gt;Coders must be able to concentrate on minute details for extended periods of time. Noticing patterns, memorizing commands, and identifying flaws can all help create a successful application. When programmers build something, they frequently document their process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#team-work"&gt;
  &lt;/a&gt;
  Team work
&lt;/h3&gt;

&lt;p&gt;When team members collaborate effectively to work towards a single goal—building a product that provides the best possible experience for end consumers—they can significantly increase their efficiency. As a result, time to market is shortened, coding and other development errors are avoided, and the team is more cohesive. In addition to having a passion for software programming, software engineers must also be able to work well in a team.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leadership"&gt;
  &lt;/a&gt;
  Leadership
&lt;/h3&gt;

&lt;p&gt;A good leadership skill set will help software engineers work themselves out of a tight spot when they have to deal with both customers and other departments. When it comes to getting a promotion, showing these leadership skills is essential. As you make your way up the ladder of success at work, you'll need to be able to delegate responsibilities and keep close tabs on budgets. This will become increasingly important as your projects evolve into more complex affairs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjNjOLAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kingdomcallingblog.files.wordpress.com/2018/01/its-a-marathon-not-a-sprint.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjNjOLAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kingdomcallingblog.files.wordpress.com/2018/01/its-a-marathon-not-a-sprint.jpg" alt="Journey Quote Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we've covered the basics of what Software Engineering entails and what to expect, it's time to roll up your sleeves, fire up your computer, open your editor, and start writing code - Whatcha lookin at? That is to say, start writing code or maybe build an app by tomorrow 😂&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Look at you! You Just Got Got! 😆 I only wish it were that simple.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's time to explore all possibilities in tech and see what really sparks your interest! Give yourself the time to process it and more importantly "Know Your Why", knowing your purpose helps you find your true passion, and the passion becomes an important driver for you to achieve something extraordinary, the passion will push you to reach your goals.&lt;/p&gt;

&lt;p&gt;Here's a link to &lt;a href="https://github.com/Memphis1983/developer-roadmap"&gt;software engineering roadmap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following parts of this series, we'll go over how to prepare for and plan your journey, as well as the challenges you'll face and how to overcome them while staying focused, healthy, and making progress.&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://giphy.com/gifs/gadischwartz-nbc-news-gadi-schwartz-jaXDDTuKmeJvwI56kV"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;via GIPHY&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>developer</category>
      <category>softwareengineering</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 28 Sep 2021 18:11:42 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-1nh2</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-1nh2</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preventing-alert-fatigue"&gt;
  &lt;/a&gt;
  Preventing alert fatigue
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/dvddpl"&gt;@dvddpl&lt;/a&gt;
 came through with a very helpful and empathetic guide to dealing with the apprehension and frustration that comes from "alert fatigue".&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dvddpl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UboDmADM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JXv2xuBV--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/132615/9bcf8385-383b-4b64-b5cc-d8a9f4f675b8.jpeg" alt="dvddpl"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dvddpl/when-everything-is-urgent-nothing-is-what-is-alarm-fatigue-and-how-to-deal-with-it-1321" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;When everything is urgent, nothing is. What is Alarm Fatigue and how to deal with it.&lt;/h2&gt;
      &lt;h3&gt;Davide de Paolis ・ Sep 23 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#mentalhealth&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#learning&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#development&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codequality&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#group-design-challenge"&gt;
  &lt;/a&gt;
  Group Design Challenge
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/zernonia"&gt;@zernonia&lt;/a&gt;
 shared a handful of designs so that anyone who wants to practice web design can do so without a cost barrier. Amazing!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/zernonia" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_rKtpOgN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0SfoyLS7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/400444/8626e93e-1c07-44f2-8eab-1f0bbd87bfed.jpeg" alt="zernonia"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/zernonia/i-design-you-build-frontend-challenge-1-158a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I Design, You Build! - Frontend Challenge #1&lt;/h2&gt;
      &lt;h3&gt;Zernonia ・ Sep 25 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#idesignyoubuild&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#your-next-effective-opensource-contribution"&gt;
  &lt;/a&gt;
  Your next (effective) open-source contribution
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/pragativerma18"&gt;@pragativerma18&lt;/a&gt;
 shared what they learned along their journey in open-source — in the hopes that it will allow you to give back to the community.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/how-to-pick-an-open-source-project-to-contribute-to-4kak" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to pick an open-source project to contribute to?&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma ・ Sep 24 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#question-styles-that-will-set-you-up-for-success"&gt;
  &lt;/a&gt;
  Question styles that will set you up for success
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/erikmelone"&gt;@erikmelone&lt;/a&gt;
 believes that there are certain ways to phrase typical questions that can help better set you up for success. In this post, we'll take a look at a few of them.   &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/erikmelone" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2jhTZclY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3VYrRmHp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/694604/abe33402-1bc3-40ca-839f-6545a70a8082.jpeg" alt="erikmelone"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/erikmelone/how-to-ask-the-right-questions-as-a-junior-developer-5701" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;3 Ways you can ask Better Questions as a Junior Developer&lt;/h2&gt;
      &lt;h3&gt;Erik Melone ・ Sep 25 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#culture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#how-to-implement-automatic-link-shortening-in-react"&gt;
  &lt;/a&gt;
  How to implement automatic link shortening in React
&lt;/h2&gt;

&lt;p&gt;"Whether you are looking to add automatic URL shortening to your existing React app, or you want to get detailed analytics of all the links shared on your mobile/web app, emly.cc’s URL shortener has a detailed API to get you started within few minutes." — thanks &lt;a class="mentioned-user" href="https://dev.to/eaetukudo"&gt;@eaetukudo&lt;/a&gt;
! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/eaetukudo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72k6CwHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--9L9EGwJW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/335531/499c7927-e174-408e-8400-98185445eb5e.jpg" alt="eaetukudo"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/eaetukudo/build-automatic-url-shortener-with-react-and-emly-2ob5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build automatic URL shortener with react and Emly&lt;/h2&gt;
      &lt;h3&gt;Emmanuel Etukudo ・ Sep 22 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#reactnative&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#what-makes-react-fun"&gt;
  &lt;/a&gt;
  What makes React fun
&lt;/h2&gt;

&lt;p&gt;"What makes React fun is that we can take common patterns and turn them into reusable components, making our development life easier and our code shorter." says &lt;a class="mentioned-user" href="https://dev.to/trishathecookie"&gt;@trishathecookie&lt;/a&gt;
. No better example of this than React Context!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/trishathecookie" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xcthR5KL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--n1nSzqKc--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/712840/9bd48162-01ff-4154-aec8-5783fefee55a.jpg" alt="trishathecookie"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/trishathecookie/react-creating-a-reusable-form-using-react-context-5eof" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React: How to create a reusable form using React Context&lt;/h2&gt;
      &lt;h3&gt;Trisha Lim ・ Sep 25 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#10-open-source-programs-for-students"&gt;
  &lt;/a&gt;
  10 open source programs for students
&lt;/h2&gt;

&lt;p&gt;In this post, &lt;a class="mentioned-user" href="https://dev.to/pb"&gt;@pb&lt;/a&gt;
 shares some of the open source programs which you can apply to as a student to gain experience, work with some of the most informed people in the industry (from the comfort of your home) and earn a generous stipend! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3sfWXRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--52cZyHb1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/618537/3cd782cd-1a3a-4926-9eb6-1e55fba23a61.jpg" alt="pb"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pb/open-source-programs-for-students-to-participate-55gm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Open Source Programs for Students to participate&lt;/h2&gt;
      &lt;h3&gt;Pawel ・ Sep 26 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Protect Your components with React Router</title>
      <author>Med Amine Fh</author>
      <pubDate>Tue, 28 Sep 2021 18:09:26 +0000</pubDate>
      <link>https://dev.to/medaminefh/protect-your-components-with-react-router-4hf7</link>
      <guid>https://dev.to/medaminefh/protect-your-components-with-react-router-4hf7</guid>
      <description>&lt;p&gt;If you're using &lt;strong&gt;react router&lt;/strong&gt; in your App, then you probably wanted to protect some routes from specific users, or to Redirect some users to their own page or component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-to-do-"&gt;
  &lt;/a&gt;
  so what to do ?
&lt;/h2&gt;

&lt;p&gt;In this blog we'll see How to handle that with some simple checks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tnNFYONO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/7efs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tnNFYONO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/7efs.gif" alt="checks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So at the beginning this is how our App looks like&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3Ccl5PA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86dmp37s365dv1bfadiz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3Ccl5PA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86dmp37s365dv1bfadiz.png" alt="protectedRoute2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point every user can access those two components (Admin, Home)&lt;/p&gt;

&lt;p&gt;But that's not what i want, I want just the &lt;strong&gt;admin&lt;/strong&gt; to have access to the "&lt;code&gt;/admin&lt;/code&gt;" route.&lt;/p&gt;

&lt;p&gt;And those who don't have access to that route, I need to redirect them to the &lt;strong&gt;Home&lt;/strong&gt; Page ("&lt;code&gt;/&lt;/code&gt;" route)&lt;/p&gt;

&lt;p&gt;So the 1st Step is to create the &lt;strong&gt;ProtectedRoute&lt;/strong&gt; Component.&lt;/p&gt;

&lt;p&gt;You can create it in the same file, but for a cleaner code we'll create it on a new file&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-create-a-file-and-name-it-to-what-you-want-ill-name-it-raw-protectedroutejs-endraw-"&gt;
  &lt;/a&gt;
  1- Create a file and name it to what you want. I'll name it &lt;code&gt;protectedRoute.js&lt;/code&gt;.
&lt;/h3&gt;



&lt;h3&gt;
  &lt;a href="#2-paste-this-code-in-that-file"&gt;
  &lt;/a&gt;
  2- Paste this code in that file
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TU2rXdX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82t2mq0oa0pp48ftivtg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TU2rXdX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82t2mq0oa0pp48ftivtg.png" alt="protectedRoute1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So basically we check if there is a &lt;strong&gt;token&lt;/strong&gt; stored in our &lt;strong&gt;LocalStorage&lt;/strong&gt; or not.&lt;/p&gt;

&lt;p&gt;If The check is &lt;strong&gt;Truthy&lt;/strong&gt; then he Have access to that route.&lt;br&gt;
 If Not, He will be Redirected to the Home Page (thanks to the &lt;code&gt;&amp;lt;Redirect /&amp;gt;&lt;/code&gt; Component).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You need to change that check to suit your case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don't forget to &lt;strong&gt;export&lt;/strong&gt; your Component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-finally-well-use-that-protectedroute-in-our-app"&gt;
  &lt;/a&gt;
  3- Finally we'll use that ProtectedRoute in our &lt;strong&gt;App&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Import The &lt;em&gt;ProtectedRoute&lt;/em&gt; Component from where you created it&lt;br&gt;
you can name it what you want if you export it with the &lt;strong&gt;default&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ov6OPN_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arjssd40yki0qz07i80v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ov6OPN_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/arjssd40yki0qz07i80v.png" alt="protectedRoute3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So here we need to changed The &lt;br&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;Route exact path="/admin" component={Admin}  /&amp;gt;&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;ProtectedRoute exact path="/admin" component={Admin}  /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-thats-it-go-try-it-out"&gt;
  &lt;/a&gt;
  And that's it 🎉, Go Try it out.
&lt;/h3&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
      <category>security</category>
    </item>
    <item>
      <title>Adding Sentry to Spring Boot Securely</title>
      <author>Jeffrey Fate</author>
      <pubDate>Tue, 28 Sep 2021 18:02:12 +0000</pubDate>
      <link>https://dev.to/jeffreyfate/adding-sentry-to-spring-boot-securely-52fl</link>
      <guid>https://dev.to/jeffreyfate/adding-sentry-to-spring-boot-securely-52fl</guid>
      <description>&lt;p&gt;Observability.&lt;/p&gt;

&lt;p&gt;When I started working with the microservices at my job about 4 months ago, there were numerous ways to know a bug made it to production.&lt;/p&gt;

&lt;p&gt;Slack alerts. Cloudwatch logs. Production support.&lt;/p&gt;

&lt;p&gt;There was no aggregation of errors and alerting.&lt;/p&gt;

&lt;p&gt;I had never used Sentry, but heard a lot about it over the last couple of years. It seemed like a reasonable solution to this problem.&lt;/p&gt;

&lt;p&gt;Other folks at my job agreed we should try it. Here's what it took to integrate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;To understand fully what's going on in each of the services, it made sense to capture EVERYTHING, at least at first. This meant uncaught and caught exceptions, including the ones already caught by any @ExceptionHandlers.&lt;/p&gt;

&lt;p&gt;We also wanted to keep any secrets out of our code and in AWS Secrets Manager.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-the-instructions"&gt;
  &lt;/a&gt;
  Follow The Instructions
&lt;/h2&gt;

&lt;p&gt;I found vast documentation on &lt;a href="https://docs.sentry.io/platforms/java/guides/spring-boot/"&gt;Sentry's Spring Boot docs&lt;/a&gt; pages. However, there wasn't a solution that let us store the DSN securely, outside the source.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-solution"&gt;
  &lt;/a&gt;
  My Solution
&lt;/h2&gt;

&lt;p&gt;To store the DSN elsewhere and pull it in at runtime, I used the AWS Secrets Manager SDK. &lt;a href="https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/manage-credentials-using-aws-secrets-manager.html"&gt;Here's a decent tutorial from AWS&lt;/a&gt; on how to get that setup. Now let's focus on the Sentry part.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;Combining the documentation from Sentry and the slightly different requirements we had, I created a Spring configuration that provides a Sentry OptionsConfiguration bean:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@Bean
@Primary
Sentry.OptionsConfiguration&amp;lt;SentryOptions&amp;gt; sentryOptionsConfiguration() {
    return options -&amp;gt; {
        SentryProperties properties = (SentryProperties) options;
        properties.setDsn(secretService.getSentrySecret().getDsn());
        properties.setEnvironment(activeProfile);
        properties.setDebug(true);
        properties.setExceptionResolverOrder(Ordered.HIGHEST_PRECEDENCE);
    };
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because Sentry provides an OptionsConfiguration themselves, I used &lt;code&gt;@Primary&lt;/code&gt; to ensure mine took precedence.&lt;/p&gt;

&lt;p&gt;I used the Spring profile name to set the environment; for example, &lt;code&gt;QA&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To make sure we see all handled errors, I set the exception resolver order to &lt;code&gt;Ordered.HIGHEST_PRECEDENCE&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#properties"&gt;
  &lt;/a&gt;
  Properties
&lt;/h3&gt;

&lt;p&gt;I thought the code changes would be enough. I was wrong.&lt;/p&gt;

&lt;p&gt;Turns out Sentry &lt;strong&gt;requires&lt;/strong&gt; the property &lt;code&gt;sentry.dsn&lt;/code&gt; to be set to something or the Sentry bootstrap fails when the Spring application context is built.&lt;/p&gt;

&lt;p&gt;The solution:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sentry.dsn=dummy&lt;/code&gt; in my &lt;code&gt;application.properties&lt;/code&gt; file&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Sentry is an extremely useful tool that has a friendly and clear interface. We use it to see production issues and have more context of issues reported by our QA team.&lt;/p&gt;

&lt;p&gt;With these small tweaks, we are able to get the data we need to resolve errors fast.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>observability</category>
      <category>springboot</category>
      <category>java</category>
    </item>
    <item>
      <title>Electron Adventures: Episode 67: Malina</title>
      <author>Tomasz Wegrzanowski</author>
      <pubDate>Tue, 28 Sep 2021 17:49:35 +0000</pubDate>
      <link>https://dev.to/taw/electron-adventures-episode-67-malina-518j</link>
      <guid>https://dev.to/taw/electron-adventures-episode-67-malina-518j</guid>
      <description>&lt;p&gt;In this series we've tried out a bunch of different frameworks, from the omnipresent jQuery and React to ones you've at least heard of like Svelte, Vue, and D3, to completely obscure Marko.&lt;/p&gt;

&lt;p&gt;Well, time for another one you've never heard of - &lt;a href="https://malinajs.github.io/docs/"&gt;Malina&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The easiest way to explain Malina is that Malina is to Svelte what Preact is to React. It's a simpler version with some different performance choices. If you know Svelte, Malina shouldn't be too difficult.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;As usual, we'll start by setting up a fresh Malina project, then add Electron to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx create-malina episode-67-malina
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;episode-67-malina
&lt;span class="nv"&gt;$ &lt;/span&gt;npm i &lt;span class="nt"&gt;--save-dev&lt;/span&gt; electron
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-indexjs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;index.js&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;We can use the same one as before, just changing the port number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BrowserWindow&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;electron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;win&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BrowserWindow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;webPreferences&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;preload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/preload.js`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;win&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maximize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;win&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:7000/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createWindow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;window-all-closed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And let's create empty &lt;code&gt;preload.js&lt;/code&gt;. And remove &lt;code&gt;package-lock.json&lt;/code&gt; from default &lt;code&gt;.gitignore&lt;/code&gt; as we definitely want them in the repo, especially for a young and non-prod framework like Malina.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-publicindexhtml-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;public/index.html&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;I customized a few things - removed the hardcoded title so the app can manage it, added UTF-8 declaration, and changed it to standard 2 space indentation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"shortcut icon"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/malinajs.svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/bundle.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;defer&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-srcmainjs-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;src/main.js&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Just as it was created except making style consistent with the series:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.xht&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-srcappxht-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;src/App.xht&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.xht&lt;/code&gt; is Malina's equivalent of &lt;code&gt;.svelte&lt;/code&gt; / &lt;code&gt;.vue&lt;/code&gt; and such.&lt;/p&gt;

&lt;p&gt;I did a few tiny changes - using 2 spaces indetation instead of 4, styling consistent with the rest of the series, and making it use dark mode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;degrees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./malinajs.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Malina.js Logo"&lt;/span&gt; &lt;span class="na"&gt;style:transform=&lt;/span&gt;&lt;span class="s"&gt;{`rotate(${degrees}deg)`}/&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello {name}!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;{name}&lt;/span&gt; &lt;span class="na"&gt;*&lt;/span&gt;&lt;span class="err"&gt;{$&lt;/span&gt;&lt;span class="na"&gt;element.focus&lt;/span&gt;&lt;span class="err"&gt;()}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Edit and save file &lt;span class="nt"&gt;&amp;lt;code&amp;gt;&lt;/span&gt;src/App.xht&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&lt;/span&gt; to reload&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"scss"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nd"&gt;:global&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#444&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see most of it looks like Svelte, but this line has a lot of extra syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;{name}&lt;/span&gt; &lt;span class="na"&gt;*&lt;/span&gt;&lt;span class="err"&gt;{$&lt;/span&gt;&lt;span class="na"&gt;element.focus&lt;/span&gt;&lt;span class="err"&gt;()}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Malina &lt;code&gt;:value={name}&lt;/code&gt; is shortcut for Svelte's &lt;code&gt;bind:value={name}&lt;/code&gt;. &lt;code&gt;*{}&lt;/code&gt; is Malina's equivalent of Svelte's &lt;code&gt;use:{}&lt;/code&gt;. In both cases longer Svelte syntax works as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;Here's the results:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B6Djyu5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyh1i51ka8e5t61fo0xz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B6Djyu5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyh1i51ka8e5t61fo0xz.png" alt="Episode 67 Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we got Hello World working in Malina, let's try to port our hex editor!&lt;/p&gt;

&lt;p&gt;As usual, &lt;a href="https://github.com/taw/electron-adventures/tree/master/episode-67-malina"&gt;all the code for the episode is here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>electron</category>
      <category>svelte</category>
    </item>
    <item>
      <title>AutoMapper in C#</title>
      <author>manoj</author>
      <pubDate>Tue, 28 Sep 2021 17:14:35 +0000</pubDate>
      <link>https://dev.to/jsdevelopermano/automapper-in-c-2ifn</link>
      <guid>https://dev.to/jsdevelopermano/automapper-in-c-2ifn</guid>
      <description>&lt;p&gt;AutoMapper in C# is a mapper between two objects. That is AutoMapper is an object-object mapper. It maps the properties of two different objects by transforming the input object of one type to the output object of another type.&lt;/p&gt;

&lt;p&gt;It also provides some interesting facts to take the dirty work out of figuring out how to map an object of type A with an object of type B as long as the object of type B follows AutoMapper’s established convention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let’s discuss the step-by-step procedure to use AutoMapper in C#.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-installing-the-automapper-library"&gt;
  &lt;/a&gt;
  1: Installing the AutoMapper library
&lt;/h3&gt;

&lt;p&gt;The AutoMapper is an open-source library present in &lt;a href="https://github.com/AutoMapper"&gt;GitHub&lt;/a&gt;. To install this library, open the Package Manager Console window and then type the following command and press enter key to install the AutoMapper library in your project:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt; Install-Package AutoMapper&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once you installed the AutoMapper library, then it will add a reference to the AutoMapper dll which you can find in the project references section as shown in the below image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2IYxdA-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zhwtgwy9r6s4dk2punm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2IYxdA-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zhwtgwy9r6s4dk2punm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-initializing-or-configuring-the-automapper"&gt;
  &lt;/a&gt;
  2: Initializing or Configuring the AutoMapper
&lt;/h3&gt;

&lt;p&gt;Once you have defines your types (i.e. classes) then you can create a mapper for the two types using the constructor of MapperConfiguration class. You can create only one MapperConfiguration instance per AppDomain and should be instantiated during the application start-up. The syntax to create the MapperConfiguration instance is given below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//Initialize the mapper
  var config = new MapperConfiguration(cfg =&amp;gt;
               cfg.CreateMap&amp;lt;Employee, EmployeeDTO&amp;gt;()
            );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The type on the left is the source type i.e. TSource, in our example, it will be going to Employee object, and the type on the right is the destination type i.e. TDestination, in our example, it will be going to EmployeeDTO object. So, two maps the Employee with EmployeeDTO, you need to create the mapper configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System;
using AutoMapper;
namespace AutoMapperDemo
{
    class Program
    {
        static void Main(string[] args)
        {
            //Initialize the mapper
            var config = new MapperConfiguration(cfg =&amp;gt;
                    cfg.CreateMap&amp;lt;Employee, EmployeeDTO&amp;gt;()
                );

            //Creating the source object
            Employee emp = new Employee
            {
                Name = "James",
                Salary = 20000,
                Address = "London",
                Department = "IT"
            };

            //Using automapper
            var mapper = new Mapper(config);
            var empDTO = mapper.Map&amp;lt;EmployeeDTO&amp;gt;(emp);
            //OR
            //var empDTO2 = mapper.Map&amp;lt;Employee, EmployeeDTO&amp;gt;(emp);

            Console.WriteLine("Name:" + empDTO.Name + ", Salary:" + empDTO.Salary + ", Address:" + empDTO.Address + ", Department:" + empDTO.Department);
            Console.ReadLine();
        }
    }

    public class Employee
    {
        public string Name { get; set; }
        public int Salary { get; set; }
        public string Address { get; set; }
        public string Department { get; set; }
    }

    public class EmployeeDTO
    {
        public string Name { get; set; }
        public int Salary { get; set; }
        public string Address { get; set; }
        public string Department { get; set; }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ref: &lt;a href="https://dotnettutorials.net/lesson/automapper-in-c-sharp/"&gt;https://dotnettutorials.net/lesson/automapper-in-c-sharp/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Working with ZIP files in LuaRT</title>
      <author>Sam</author>
      <pubDate>Tue, 28 Sep 2021 17:09:06 +0000</pubDate>
      <link>https://dev.to/samyeyo/working-with-zip-files-in-luart-2lm0</link>
      <guid>https://dev.to/samyeyo/working-with-zip-files-in-luart-2lm0</guid>
      <description>&lt;p&gt;&lt;a href="https://www.luart.org"&gt;LuaRT&lt;/a&gt; provides a builtin zip module to work with compressed files in ZIP format, without any additional dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#zip-archive-files"&gt;
  &lt;/a&gt;
  ZIP archive files
&lt;/h2&gt;

&lt;p&gt;ZIP is a file format that supports lossless compression. A lossless compression algorithm allows the original data to be perfectly reconstructed from the compressed data. A ZIP file contains one or more compressed files, making it an ideal way to reduce the size of large files and keep related files together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-zip-object"&gt;
  &lt;/a&gt;
  The Zip Object
&lt;/h2&gt;

&lt;p&gt;The LuaRT 'zip' module provides an abstraction of zip files represented as a Zip Object. Only INFLATE/DEFLATE algorithms are supported.&lt;br&gt;
This module facilitates the creation of ZIP archive files and provides methods and properties for adding and extracting compressed files.&lt;/p&gt;

&lt;p&gt;To use the &lt;strong&gt;Zip&lt;/strong&gt; Object, you must first require for the 'zip' module :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- require the builtin 'zip' module for the Zip object&lt;/span&gt;
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"zip"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#extract-files-from-a-zip-archive"&gt;
  &lt;/a&gt;
  Extract files from a ZIP archive
&lt;/h2&gt;

&lt;p&gt;To extract files from an existing ZIP archive, you can use the &lt;strong&gt;Zip:extractall()&lt;/strong&gt; method :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"zip"&lt;/span&gt;

&lt;span class="c1"&gt;-- Create a Zip value to represent the ZIP file 'archive.zip'&lt;/span&gt;
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"archive.zip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- open the ZIP archive for reading&lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"read"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- extract and uncompress all the files in the current directory&lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extractall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can extract a specific entry with the &lt;strong&gt;Zip:extract()&lt;/strong&gt; method :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- extract the ZIP entry "extractme.bin" in the current directory &lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"extractme.bin"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A destination path can optionaly be provided :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- extract the ZIP entry "data.bin" in the specified directory &lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"data.bin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"C:\\Extract\\Me\\Here"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-a-zip-archive"&gt;
  &lt;/a&gt;
  Creating a ZIP archive
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Zip:open()&lt;/strong&gt; can be used to create an empty ZIP archive. Files can be added to the archive with the &lt;strong&gt;Zip:write()&lt;/strong&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"zip"&lt;/span&gt;

&lt;span class="c1"&gt;-- Create a Zip value to represent the  ZIP file 'new.zip'&lt;/span&gt;
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"new.zip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- open the ZIP archive for writing&lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"write"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- add a file to this archive&lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"C:\\addme.txt"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can recursively add entire directories too :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"C:\\I_am_a_directory_addme\\"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#iterating-over-files-in-a-zip-archive"&gt;
  &lt;/a&gt;
  Iterating over files in a ZIP archive
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Zip&lt;/strong&gt; object is iterable with the &lt;strong&gt;each()&lt;/strong&gt; function, returning at every iteration the next entry name in the ZIP archive previously opened in "read" mode:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"zip"&lt;/span&gt;

&lt;span class="c1"&gt;-- Create a Zip value to represent the ZIP file 'archive.zip'&lt;/span&gt;
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"archive.zip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- open the ZIP archive for reading&lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"read"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- Iterate over each ZIP archive entries and extract it&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Extracting '"&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="s2"&gt;"'"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reading-zip-archive-entries-in-memory"&gt;
  &lt;/a&gt;
  Reading ZIP archive entries in memory
&lt;/h2&gt;

&lt;p&gt;ZIP archive entries can also be extracted in-memory using the &lt;strong&gt;Zip:read()&lt;/strong&gt; method :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight lua"&gt;&lt;code&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"zip"&lt;/span&gt;

&lt;span class="c1"&gt;-- Create a Zip value to represent the ZIP file 'archive.zip'&lt;/span&gt;
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"archive.zip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- open the ZIP archive for reading&lt;/span&gt;
&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"read"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- print the content of the ZIP archive entry 'README.TXT'&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"README.TXT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, LuaRT's 'zip' module provides an easy way to manage ZIP archives. Additionally, you can read the complete Zip object specification &lt;a href="http://www.luart.org/doc/zip/zip.html"&gt;Zip Object&lt;/a&gt;&lt;/p&gt;

</description>
      <category>lua</category>
      <category>windows</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
