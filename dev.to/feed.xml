<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Change Background color on Click | Javascript Beginner Project
</title>
      <author>ali-dev-hash</author>
      <pubDate>Sun, 02 May 2021 10:58:26 +0000</pubDate>
      <link>https://dev.to/alidevhash/change-background-color-on-click-javascript-beginner-project-59ii</link>
      <guid>https://dev.to/alidevhash/change-background-color-on-click-javascript-beginner-project-59ii</guid>
      <description>&lt;p&gt;Change Background color on Click | Javascript Beginner Project&lt;/p&gt;

&lt;p&gt;Demo == &amp;gt; &lt;a href="https://codepen.io/Bilal1909/full/vYgqayx"&gt;https://codepen.io/Bilal1909/full/vYgqayx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Solution: Course Schedule III</title>
      <author>seanpgallivan</author>
      <pubDate>Sun, 02 May 2021 10:42:59 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-course-schedule-iii-48hn</link>
      <guid>https://dev.to/seanpgallivan/solution-course-schedule-iii-48hn</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/course-schedule-iii/discuss/1187504"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-630-hard-course-schedule-iii"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/course-schedule-iii/"&gt;Leetcode Problem #630 (&lt;em&gt;Hard&lt;/em&gt;): Course Schedule III&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are &lt;code&gt;n&lt;/code&gt; different online courses numbered from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;. You are given an array &lt;code&gt;courses&lt;/code&gt; where &lt;code&gt;courses[i] = [duration&amp;lt;i&amp;gt;, lastDay&amp;lt;i&amp;gt;]&lt;/code&gt; indicate that the &lt;code&gt;i'th&lt;/code&gt; course should be taken &lt;strong&gt;continuously&lt;/strong&gt; for &lt;code&gt;duration&amp;lt;i&amp;gt;&lt;/code&gt; days and must be finished before or on &lt;code&gt;lastDay&amp;lt;i&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You will start on the &lt;code&gt;1st&lt;/code&gt; day and you cannot take two or more courses simultaneously.&lt;/p&gt;

&lt;p&gt;Return &lt;em&gt;the maximum number of courses that you can take&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;courses = [[100,200],[200,1300],[1000,1250],[2000,3200]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;There are totally 4 courses, but you can take 3 courses at most:&lt;br&gt;&lt;br&gt;First, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.&lt;br&gt;&lt;br&gt;Second, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day.&lt;br&gt;&lt;br&gt;Third, take the 2nd course, it costs 200 days so you will finish it on the 1300th day.&lt;br&gt;&lt;br&gt;The 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;courses = [[1,2]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;courses = [[3,2],[4,3]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= courses.length &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= durationi, lastDayi &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;If we think of this problem in a larger sense, we can envision a slightly more simplistic situation without the issues of the last day cutoff for each course. In that scenario, we could quite easily add up all the course durations, then selectively remove the courses with the longest remaining duration until we've found the ideal number of courses that will fit into our desired timeframe.&lt;/p&gt;

&lt;p&gt;The trouble here, of course, is that we &lt;em&gt;do&lt;/em&gt; have cutoffs for each course, which means we can no longer fill the entire time before removing courses. Instead, we'll have to selectively backtrack and remove courses as we iterate through the input array (&lt;strong&gt;C&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;As is often the case in a scheduling-type problem, this leads to a particular issue: we'll want to sort the data in two distinctly different ways. Since we'll be progressing through &lt;strong&gt;C&lt;/strong&gt; as if we're progressing through time, we'll want to sort &lt;strong&gt;C&lt;/strong&gt; based on the courses' cutoffs (&lt;strong&gt;end&lt;/strong&gt;), but when we backtrack to potentially remove a course, we'll want to sort the courses we've accepted by their duration (&lt;strong&gt;dur&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;The need for a data structure that will maintain its sort through insertions and max value removals means that we're looking for a &lt;strong&gt;max priority queue&lt;/strong&gt; or &lt;strong&gt;max-heap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once we've sorted &lt;strong&gt;C&lt;/strong&gt; and set up our max priority queue or heap (&lt;strong&gt;pq&lt;/strong&gt;/&lt;strong&gt;heap&lt;/strong&gt;), it's simply a matter of iterating through &lt;strong&gt;C&lt;/strong&gt;, adding the courses to &lt;strong&gt;pq&lt;/strong&gt;/&lt;strong&gt;heap&lt;/strong&gt;, and then removing the max duration course as necessary to stay underneath the current &lt;strong&gt;end&lt;/strong&gt; value with our accumulated duration (&lt;strong&gt;total&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;In order to minimize unnecessary insertions/removals, we can perform a few basic conditional checks to tell if they're necessary. If the current course will already fit, we can just add it, or if the current course is a better fit than our longest course, then we can swap them.&lt;/p&gt;

&lt;p&gt;Then, once we reach the end of &lt;strong&gt;C&lt;/strong&gt;, &lt;strong&gt;pq&lt;/strong&gt;/&lt;strong&gt;heap&lt;/strong&gt; should contain all the non-discarded courses, so we can &lt;strong&gt;return&lt;/strong&gt; its size as our answer.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * log N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;C&lt;/strong&gt;, due to both the sort and the priority queue / heap implementation&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; due to the priority queue / heap data&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;In this instance, the &lt;strong&gt;MaxPriorityQueue()&lt;/strong&gt; npm for Javascript was actually competitively performant compared to a &lt;strong&gt;custom max-heap&lt;/strong&gt; structure.&lt;/p&gt;

&lt;p&gt;To avoid having to use a &lt;strong&gt;custom comparator&lt;/strong&gt; for Python, which defaults to a &lt;strong&gt;min heap&lt;/strong&gt;, we can just switch the sign before insertion and after extraction to mimic a &lt;strong&gt;max heap&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;scheduleCourse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MaxPriorityQueue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;front&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;front&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;scheduleCourse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;
                &lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;heap&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;heappop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;scheduleCourse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="no"&gt;C&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;C&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;course&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;C&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;peek&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;scheduleCourse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];});&lt;/span&gt;
        &lt;span class="n"&gt;priority_queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;course&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dur&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dur&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>5 simple ways to improve your website UI (for developers) 🎨🖥️</title>
      <author>Pulkit Jasti</author>
      <pubDate>Sun, 02 May 2021 10:26:38 +0000</pubDate>
      <link>https://dev.to/pulkit_jasti_8f40f769391b/5-simple-ways-to-improve-your-website-ui-for-developers-6p2</link>
      <guid>https://dev.to/pulkit_jasti_8f40f769391b/5-simple-ways-to-improve-your-website-ui-for-developers-6p2</guid>
      <description>&lt;p&gt;I have noticed that a lot of developers are pretty good at the coding part of a project but struggle with design. They tend to think they don't have a natural talent for design and aesthetics.&lt;/p&gt;

&lt;p&gt;A lot of search engine results and articles that I have come across either give a vague idea or they're detailed and would require a lot of time and practice to understand and implement.&lt;/p&gt;

&lt;p&gt;So I've created a small list of tips that will help developers who want to make their interfaces look great without spending too much time worrying about complex design principles.&lt;/p&gt;

&lt;p&gt;Before we get started, it's imperative that we get one thing clear, the methods and practices that I have mentioned below are not just for websites, they can be used with any other sort of interfaces and technologies.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
     &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-consistency"&gt;
  &lt;/a&gt;
  1. Consistency
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PAsUoTwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618732633614/lMBRkgi2L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PAsUoTwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618732633614/lMBRkgi2L.png" alt="consistency.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stick to a similar aesthetic throughout your interface to make it look uniform. Most people use CSS frameworks like  &lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; to combat this issue, which is not a bad idea if you are just learning to code, However, using frameworks like bootstrap will only make your projects look like all the other projects out there.&lt;br&gt;
&lt;br&gt;
You can use  &lt;a href="https://www.w3schools.com/css/css3_variables.asp"&gt;CSS Variables&lt;/a&gt;  very effectively to create a set of rules/constraints for a particular project. For example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
    --primary-color: #2b2923;
    --accent-color: #f4be1a;
    --image-ratio: 16/9;
    --box-shadow: 0 1px 3px rgba(0,0,0,0.12),
                              0 1px 2px rgba(0,0,0,0.24);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
If you are using a CSS pre processor like &lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt; / &lt;a href="http://lesscss.org/"&gt;Less&lt;/a&gt;, which I strongly recommend you do, then you can create  &lt;a href="https://www.w3schools.com/sass/sass_mixin_include.asp"&gt;Mixins&lt;/a&gt;  to achieve this. For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// A mixin to have the same card styling through out the page
@mixin card {
        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        padding: 20px;
        margin: 30px;
}

div { @include card(); }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// A mixin to reset list styling
@mixin list-reset {
        margin: 0;
        padding: 0;
        list-style: none;
}

ul { @include list-reset(); }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;strong&gt;Alternatively, you can also use one of these Design Systems/UI libraries.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://material.io/develop/web"&gt;Material design&lt;/a&gt;  by Google&lt;/li&gt;
&lt;li&gt; &lt;a href="https://polaris.shopify.com/"&gt;Polaris&lt;/a&gt;  by Shopify&lt;/li&gt;
&lt;li&gt; &lt;a href="https://baseweb.design/"&gt;Base Web&lt;/a&gt; by Uber&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.microsoft.com/design/fluent/"&gt;Fluent&lt;/a&gt; by Microsoft &lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;
  &lt;a href="#2-hierarchy"&gt;
  &lt;/a&gt;
  2. Hierarchy
&lt;/h3&gt;

&lt;p&gt;Visual hierarchy is one of the most important things to look out for when building an interface because it could either make or break your whole user experience. By using visual hierarchy, you'll be able to draw and focus the user's eye on the most important elements of the page. When used effectively, it can drastically reduce the amount of effort required to use your interface.&lt;/p&gt;

&lt;p&gt;You can achieve a good visual hierarchy by simply highlighting the element you want the user to focus on by manipulating these characteristics&lt;br&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Size and scale&lt;/strong&gt; - Size is a very basic characteristic of an element that can help give an element more importance than others. Increasing the size of an element is the easiest way to focus the user's attention on a particular element. Similarly, the size of the less important elements can be reduced.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJF4-vSf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618749155832/GZ03X1Hv_.png" alt="scale.png"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Color and contrast&lt;/strong&gt; - Contrast is basically how far away 2 colors are on the color wheel from each other. More the contrast between the two elements, the more distinct they will look. So, to use this effectively for most common interfaces, the contrast between the background and the element that you want the user to focus on should be higher than all the other elements around. For example, have a look at this Call to action button. Since the contract is high, it stands out and grabs the user's attention easily.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXZkKMIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618750166257/zxK2mH53w.png" alt="contrast.png"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*There are many other characteristics of an element that can be manipulated to create a very effective visual hierarchy. I found the ones mentioned above are the simplest to understand and use.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
     &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-colors"&gt;
  &lt;/a&gt;
  3. Colors
&lt;/h3&gt;

&lt;p&gt;Colors are the first thing that people notice when they visit your site. Every website project needs a specific set of colors that will be used throughout the interface. This is called a color scheme. Without a color scheme, your interfaces will lack consistency and hence people would not want to stay longer on your page. Color schemes are a key component in any interface because they help define a brand's identity, for example, look at brands like Facebook, Snapchat, Instagram. They have a distinct color scheme that triggers certain emotions and associations in the user's eye.&lt;/p&gt;

&lt;p&gt;Now the simplest way to get some good color palettes is taking the help of one of these amazing tools with thousands of free to use color palettes created by the community.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://coolors.co/"&gt;coolors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://colorhunt.co/"&gt;colorhunt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://colormind.io/"&gt;colormind&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But if you have the time and you want to make your own color palette, then you can use one of these 3 types of color schemes that are simplest to create and look great for all kinds of  interfaces(there are others)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2Fr0mRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618689273047/c_1-YYHvN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2Fr0mRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618689273047/c_1-YYHvN.png" alt="color-schemes.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Monochrome&lt;/strong&gt; - A monochromatic color scheme is based on a single color (hue) and all the other colors in the palette are just different shades obtained by changing saturation and lightness.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Complementary&lt;/strong&gt; - 2 colors present on the opposite side of the color wheel to each other, form a complementary color scheme.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Triadic&lt;/strong&gt; - A triadic color scheme consists of three colors that are equally distant from each other in the color wheel.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;
If you want to know more about colors and different types of color schemes, I'd suggest watching this &lt;a href="https://youtu.be/AvgCkHrcj90"&gt;amazing video&lt;/a&gt;  on &lt;strong&gt;Color Theory&lt;/strong&gt; by a YouTube channel called  &lt;a href="https://www.youtube.com/c/FlowStudio/"&gt;Flow Studio&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;strong&gt;Personal Tip:&lt;/strong&gt; Try not to use the default colors like black, red, blue, green, yellow, etc. because these colors are harsh on the eyes. Prefer to use lighter shades that are comforting to the eyes. If you are using VS Code, then you can simply hover the cursor over a color, and then the color picker will appear. You can then drag the selector to easily select a lighter shade.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
     &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-font"&gt;
  &lt;/a&gt;
  4. Font
&lt;/h3&gt;

&lt;p&gt;When it comes to fonts, less is more. A golden rule is to use not more than 2 fonts in one project. We can get deeper into the subject of fonts, also called typography, but for the sake of simplicity let's stick to the basics.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;These are outdated and overused fonts so avoid them:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Comic Sans, Papyrus, Times, New Roman, Arial, Courier New, Kristen ITC, Impact, Jokerman, Copperplate Gothic, Calibri, Courier, Brush Script, Souvenir, Curlz, Lobster (yeah that's font name)&lt;br&gt;
Instead, use these fonts which look modern and minimal, and are not overused&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Instead, use these fonts which look modern and minimal, and are not overused&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://fonts.google.com/specimen/Playfair+Display"&gt;Playfair Display&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wfonts.com/font/bell-gothic-std"&gt;Bell gothic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freefontsfamily.com/helvetica-font-family/"&gt;Helvetica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cofonts.com/avant-garde-font/"&gt;Avant Garde&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Montserrat"&gt;Montserrat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Josefin+Sans"&gt;Josefin Sans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.futurafree.com/downloads/futura-font/"&gt;Futura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freefontsvault.com/rockwell-font-download-free/"&gt;Rockwell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freefontsvault.com/bembo-font-download-free/"&gt;Bembo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fontspace.com/bodoniflf-font-f1202"&gt;Bodoni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freefontsvault.com/sabon-font-download-free/"&gt;Sabon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freefontsvault.com/akzidenz-grotesk-font-download-free/"&gt;Akzidenz-Grotesk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.adobe.com/fonts/adobe-garamond"&gt;Garamond&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.myfonts.com/fonts/latinotype/recoleta/regular-demo/"&gt;Recoleta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atipofoundry.com/fonts/argesta"&gt;Argesta&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;
&lt;strong&gt;You can use this piece of code to use a downloaded font in your website&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@font-face {
  font-family: fontName;
  src: url(font_file.woff);
}

h1 {
  font-family: fontName;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
&lt;strong&gt;Bonus typography tip&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Use text stroke on heading and important text that you want to highlight.&lt;br&gt;&lt;br&gt;
What is text stroke? Text stroke is the border around each letter in a text.&lt;br&gt;&lt;br&gt;
It gives the interface a sleek and modern look. And it can be achieved using a single line of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;h1 {
    -webkit-text-stroke: 2px red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h3&gt;
  &lt;a href="#5-spacing"&gt;
  &lt;/a&gt;
  5. Spacing
&lt;/h3&gt;

&lt;p&gt;Last but not least, spacing. A good user interface should be clean and uncluttered, making it easy for users to understand and focus their attention on the important parts of the page. Spacing lets the users know that the elements closer to each other are related and vice versa. But this is something that most people get wrong because of which their interfaces are too cluttered and unorganized, which makes users leave the page soon. Therefore, make sure you give your layouts enough breathing room to make them look clean and easy to navigate.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--guH_wC_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618743759948/fg6j4yROI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--guH_wC_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618743759948/fg6j4yROI.png" alt="spacing.png"&gt;&lt;/a&gt;&lt;br&gt;
*There are tons of examples of user interfaces with bad spacing. Have a look at them to get a clear understanding of how to use spacing effectively.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Keep in mind that all the points mentioned above are only guidelines and suggestions (crafted for beginners) and it does not mean that your design won't turn out well if you go against these tips. A truly talented designer would let no rules and constraints limit their creativity and imagination.&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#contact-me"&gt;
  &lt;/a&gt;
  Contact Me:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://linktr.ee/pulkit_jasti"&gt;Linktree&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/@pulkit.jasti"&gt;My Blog&lt;/a&gt;&lt;br&gt;
&lt;a href="https://pulkit-jasti.github.io/portfolio-main/"&gt;My Portfolio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/JastiPulkit"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/pulkit-jasti"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/pulkit-jasti/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ux</category>
      <category>uiweekly</category>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>Top 5 Operations for Python Lists</title>
      <author>UdayKiran137</author>
      <pubDate>Sun, 02 May 2021 10:11:17 +0000</pubDate>
      <link>https://dev.to/udaykiran137/top-5-operations-for-python-lists-38b8</link>
      <guid>https://dev.to/udaykiran137/top-5-operations-for-python-lists-38b8</guid>
      <description>&lt;p&gt;A list is an ordered collection of Python objects. As a mutable data type, lists are often used to store data that are subject to change at the runtime. Another advantageous feature of lists is that the allowance of having duplicate elements.&lt;br&gt;
Because of these features, lists are probably the most used data structure in any Python project. In this article, I will share the top 5 operations for the use of Python lists with you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Construction&lt;/strong&gt;&lt;br&gt;
The first apparent operation is how we create lists.&lt;/p&gt;

&lt;p&gt;I) The easiest way will be just listing composing elements inside a pair of square brackets. We use commas to separate these items. Optionally, we can use this declaration with the * operator if we want to repeat a particular list for specific times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; # Create an empty list
&amp;gt;&amp;gt;&amp;gt; empty_list = []
&amp;gt;&amp;gt;&amp;gt; # A list of numbers
&amp;gt;&amp;gt;&amp;gt; numbers = [1, 2, 3, 4, 5]
&amp;gt;&amp;gt;&amp;gt; # Use * operator
&amp;gt;&amp;gt;&amp;gt; triples = [1, 2, 3] * 3
&amp;gt;&amp;gt;&amp;gt; triples
[1, 2, 3, 1, 2, 3, 1, 2, 3] 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;II) &lt;strong&gt;We can also create lists by slicing existing lists&lt;/strong&gt;. Some examples are shown below. One quick note, these slicing operations return lists as their return values, but just to make code snippets of the present article look clear, I don’t typically assign these lists to variables such that the Python interpreter will print them automatically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; # Suppose we have the following list to begin with
&amp;gt;&amp;gt;&amp;gt; list0 = [0, 2, 4, 6, 8, 10, 12, 14]
&amp;gt;&amp;gt;&amp;gt; # Create a list of the same elements
&amp;gt;&amp;gt;&amp;gt; list0[:] # This is equivalent to list0.copy()
[0, 2, 4, 6, 8, 10, 12, 14]
&amp;gt;&amp;gt;&amp;gt; # Specify the start, end, and step 
&amp;gt;&amp;gt;&amp;gt; list0[1:8:2]
[2, 6, 10, 14]
&amp;gt;&amp;gt;&amp;gt; # Create a list of the reverse order
&amp;gt;&amp;gt;&amp;gt; list0[::-1]
[14, 12, 10, 8, 6, 4, 2, 0]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;III) More generally, we can use the &lt;strong&gt;list()&lt;/strong&gt; function that creates lists from any iterable, such as tuples and dictionaries. When nothing is set, the list() function will create an empty list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; # from range
&amp;gt;&amp;gt;&amp;gt; list(range(4))
[0, 1, 2, 3]
&amp;gt;&amp;gt;&amp;gt; # from tuple
&amp;gt;&amp;gt;&amp;gt; list((5, 4, 3))
[5, 4, 3]
&amp;gt;&amp;gt;&amp;gt; # from dictionary
&amp;gt;&amp;gt;&amp;gt; list({'zero': 0, 'one': 1, 'two': 2})
['zero', 'one', 'two']
&amp;gt;&amp;gt;&amp;gt; # from map object
&amp;gt;&amp;gt;&amp;gt; list(map(len, ['one', 'hello', 'world!']))
[3, 5, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;IV) Another convenient way is to use the list comprehension. The general format is &lt;strong&gt;[expression for ele in iterable if condition]&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; # Create a list of squares
&amp;gt;&amp;gt;&amp;gt; [x*x for x in range(5)]
[0, 1, 4, 9, 16]
&amp;gt;&amp;gt;&amp;gt; # Create a list of even numbers
&amp;gt;&amp;gt;&amp;gt; [x for x in range(10) if x%2 == 0]
[0, 2, 4, 6, 8]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Access Elements&lt;/strong&gt;&lt;br&gt;
When we work with lists, we need to access individual elements or elements within a range.&lt;/p&gt;

&lt;p&gt;I) We can access &lt;strong&gt;individual elements&lt;/strong&gt; using &lt;strong&gt;indexing&lt;/strong&gt;. Typically, we use zero-based indexing that counts from the left. Alternatively, we can use reverse indexing, which counts from the right and begins with -1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; numbers = [1, 4, 5, 7, 9, 13]
&amp;gt;&amp;gt;&amp;gt; # Forward Indexing
&amp;gt;&amp;gt;&amp;gt; numbers[2]
5
&amp;gt;&amp;gt;&amp;gt; # Reverse Indexing
&amp;gt;&amp;gt;&amp;gt; numbers[-1]
13
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;II) We can access individual and a range of elements by unpacking. It’s pretty much like unpacking a tuple (i.e., a, b = (‘code’, 404)), and we can use * and _ to have a more powerful unpacking&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; pets = ['Dog', 'Cat', 'Turtle', 'Snake', 'Hamster']
&amp;gt;&amp;gt;&amp;gt; # when we're only interested in the first and last element
&amp;gt;&amp;gt;&amp;gt; a, *_, b = pets
&amp;gt;&amp;gt;&amp;gt; # elements as a list and two last elements
&amp;gt;&amp;gt;&amp;gt; *c, d, e = pets
&amp;gt;&amp;gt;&amp;gt; print(f'a: {a}, b: {b}, c: {c}, d: {d}, e: {e}')
a: Dog, b: Hamster, c: ['Dog', 'Cat', 'Turtle'], d: Snake, e: Hamster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;III) We can access multiple elements using slicing. It’s discussed in the above section when we use slicing to create new lists&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; numbers = list(range(20))
&amp;gt;&amp;gt;&amp;gt; # Get even numbers
&amp;gt;&amp;gt;&amp;gt; numbers[::2]
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
&amp;gt;&amp;gt;&amp;gt; # Get odd numbers
&amp;gt;&amp;gt;&amp;gt; numbers[1::2]
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
&amp;gt;&amp;gt;&amp;gt; # Get some numbers in the middle
&amp;gt;&amp;gt;&amp;gt; numbers[5:9]
[5, 6, 7, 8]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;IV) We can access a random element in the list. It can be done using random.choice() function. Please note that this function is available in the random module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; import random
&amp;gt;&amp;gt;&amp;gt; lottery_tickets = ['A0049', 'A0050', 'A0051', 'A0052', 'A0053']
&amp;gt;&amp;gt;&amp;gt; # draw the winning ticket
&amp;gt;&amp;gt;&amp;gt; random.choice(lottery_tickets)
'A0050'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;V) We can find the index of a particular object. To do that, we can use the index() method. Please note that we’ll encounter an error if the object isn’t on the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; students = ['John', 'Mike', 'Jennifer', 'Joe']
&amp;gt;&amp;gt;&amp;gt; # when an object exist
&amp;gt;&amp;gt;&amp;gt; students.index('Mike')
1
&amp;gt;&amp;gt;&amp;gt; # when an object doesn't exist
&amp;gt;&amp;gt;&amp;gt; students.index('Mary')
Traceback (most recent call last):
  File "&amp;lt;stdin&amp;gt;", line 1, in &amp;lt;module&amp;gt;
ValueError: 'Mary' is not in list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Conditionals&lt;/strong&gt;&lt;br&gt;
Certain operations rely on whether a particular condition is met or not. There are multiple possible conditions that pertain to lists in Python.&lt;/p&gt;

&lt;p&gt;I) We can check if a list is empty. When a list isn’t empty, it is evaluated as True. When it’s empty, using the not keyword will make the evaluation True. In other words, an empty list is evaluated as False.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; some_list = [1, 2]
&amp;gt;&amp;gt;&amp;gt; empty_list = []
&amp;gt;&amp;gt;&amp;gt; if some_list:
...     print('This is not an empty list')
... 
This is not an empty list
&amp;gt;&amp;gt;&amp;gt; if not empty_list:
...     print('This is to negate an empty list')
... 
This is to negate an empty list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;II) We can check if an element is in the list. To do that, we can use the item in the list expression. To negate it, we can use not in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; activities = ['soccer', 'tennis', 'swim', 'karate']
&amp;gt;&amp;gt;&amp;gt; # check if something is in the list
&amp;gt;&amp;gt;&amp;gt; 'tennis' in activities
True
&amp;gt;&amp;gt;&amp;gt; # check if something is not in the list
&amp;gt;&amp;gt;&amp;gt; 'swim' not in activities
False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;III) We can check if the list contains all the elements of another list. We can take advantage of some built-in functionalities of the set datatype.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; larger_list = [7, 8, 9, 17, 18, 19]
&amp;gt;&amp;gt;&amp;gt; smaller_list = [8, 9, 18, 19]
&amp;gt;&amp;gt;&amp;gt; # use the issuperset function
&amp;gt;&amp;gt;&amp;gt; set(larger_list).issuperset(set(smaller_list))
True
&amp;gt;&amp;gt;&amp;gt; # use the issubset function
&amp;gt;&amp;gt;&amp;gt; set(smaller_list).issubset(set(larger_list))
True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;IV) We can check if the list contains any elements of another list. Similarly, as above, the set data type has built-in functionalities for this operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; large_list = [7, 8, 9, 17, 18, 19]
&amp;gt;&amp;gt;&amp;gt; small_list0 = [9, 28, 29]
&amp;gt;&amp;gt;&amp;gt; small_list1 = [28, 29]
&amp;gt;&amp;gt;&amp;gt; # use the intersection function
&amp;gt;&amp;gt;&amp;gt; bool(set(large_list).intersection(set(small_list0)))
True
&amp;gt;&amp;gt;&amp;gt; bool(set(large_list).intersection(set(small_list1)))
False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Modify Elements&lt;/strong&gt;&lt;br&gt;
One major feature of lists is their mutability, which means we can modify their elements, such as adding and removing items.&lt;/p&gt;

&lt;p&gt;I) We can append an element at the end or insert one at a particular index using the append() and insert() methods, respectively&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; existing_numbers = [2, 4, 6, 8]
&amp;gt;&amp;gt;&amp;gt; # append an element at the end
&amp;gt;&amp;gt;&amp;gt; existing_numbers.append(10)
&amp;gt;&amp;gt;&amp;gt; existing_numbers
[2, 4, 6, 8, 10]
&amp;gt;&amp;gt;&amp;gt; # insert an element at an index
&amp;gt;&amp;gt;&amp;gt; existing_numbers.insert(0, 0)
&amp;gt;&amp;gt;&amp;gt; existing_numbers
[0, 2, 4, 6, 8, 10]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;II) We can extend the list by appending multiple elements using the extend() method, which takes in an iterable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; numbers_to_extend = [1, 3, 5]
&amp;gt;&amp;gt;&amp;gt; # extend the list with another list
&amp;gt;&amp;gt;&amp;gt; numbers_to_extend.extend([7, 9])
&amp;gt;&amp;gt;&amp;gt; numbers_to_extend
[1, 3, 5, 7, 9]
&amp;gt;&amp;gt;&amp;gt; # extend the list with a tuple
&amp;gt;&amp;gt;&amp;gt; numbers_to_extend.extend((11, 13))
&amp;gt;&amp;gt;&amp;gt; numbers_to_extend
[1, 3, 5, 7, 9, 11, 13]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;III) We can replace certain elements directly. It can be achieved by assignment to the element at an index or elements within a range.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; numbers_to_replace = [1, 2, 3, 5]
&amp;gt;&amp;gt;&amp;gt; # replace an element
&amp;gt;&amp;gt;&amp;gt; numbers_to_replace[3] = 4
&amp;gt;&amp;gt;&amp;gt; numbers_to_replace
[1, 2, 3, 4]
&amp;gt;&amp;gt;&amp;gt; # replace a range of elements
&amp;gt;&amp;gt;&amp;gt; numbers_to_replace[1:3] = [0, 0]
&amp;gt;&amp;gt;&amp;gt; numbers_to_replace
[1, 0, 0, 4]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;IV) &lt;strong&gt;We can remove an element using the remove(), pop(), and del methods&lt;/strong&gt;. The remove() method removes the matching element at its first occurrence, the pop() method removes the element at the optionally specified index, and the default index is -1 (i.e., the last one), and the del statement removes an element with its index specified. Another thing to note is that the pop() method returns the value, while the other two return None.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; numbers_to_remove = [1, 2, 3, 4, 5, 6]
&amp;gt;&amp;gt;&amp;gt; # using the remove()
&amp;gt;&amp;gt;&amp;gt; numbers_to_remove.remove(3)
&amp;gt;&amp;gt;&amp;gt; numbers_to_remove
[1, 2, 4, 5, 6]
&amp;gt;&amp;gt;&amp;gt; # using the pop()
&amp;gt;&amp;gt;&amp;gt; numbers_to_remove.pop(1)
2
&amp;gt;&amp;gt;&amp;gt; numbers_to_remove
[1, 4, 5, 6]
&amp;gt;&amp;gt;&amp;gt; # using the del statement
&amp;gt;&amp;gt;&amp;gt; del numbers_to_remove[-1]
&amp;gt;&amp;gt;&amp;gt; numbers_to_remove
[1, 4, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;V) &lt;strong&gt;We can remove multiple elements using the clear() and del methods&lt;/strong&gt;. The clear() method removes all the elements of the list, and the del statement removes multiple elements with the range specified. Another handy way to remove all elements in the list is to assign the variable with an empty list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; # using clear
&amp;gt;&amp;gt;&amp;gt; numbers_to_clear = [3, 7, 8, 9, 10]
&amp;gt;&amp;gt;&amp;gt; numbers_to_clear.clear()
&amp;gt;&amp;gt;&amp;gt; numbers_to_clear
[]
&amp;gt;&amp;gt;&amp;gt; # using del
&amp;gt;&amp;gt;&amp;gt; numbers_to_del = [3, 7, 8, 9, 10]
&amp;gt;&amp;gt;&amp;gt; del numbers_to_del[2:]
&amp;gt;&amp;gt;&amp;gt; numbers_to_del
[3, 7]
&amp;gt;&amp;gt;&amp;gt; # using the re-assignment; note that this doesn't actually clear the old list
&amp;gt;&amp;gt;&amp;gt; numbers_to_reassign = [3, 4, 5]
&amp;gt;&amp;gt;&amp;gt; numbers_to_reassign = []
&amp;gt;&amp;gt;&amp;gt; numbers_to_reassign
[]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;VI) We can change the order of the list. Some common ways include sorting the list, reversing the list, and shuffling the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; numbers_to_order = [7, 9, -11, 4, 0, -13]
&amp;gt;&amp;gt;&amp;gt; # sort the list
&amp;gt;&amp;gt;&amp;gt; numbers_to_order.sort()
&amp;gt;&amp;gt;&amp;gt; numbers_to_order
[-13, -11, 0, 4, 7, 9]
&amp;gt;&amp;gt;&amp;gt; numbers_to_order.sort(key=lambda x: abs(x))
&amp;gt;&amp;gt;&amp;gt; numbers_to_order
[0, 4, 7, 9, -11, -13]
&amp;gt;&amp;gt;&amp;gt; # shuffle the list
&amp;gt;&amp;gt;&amp;gt; import random
&amp;gt;&amp;gt;&amp;gt; random.shuffle(numbers_to_order)
&amp;gt;&amp;gt;&amp;gt; numbers_to_order
[0, 9, -11, -13, 4, 7]
&amp;gt;&amp;gt;&amp;gt; # reverse the list
&amp;gt;&amp;gt;&amp;gt; numbers_to_order[::-1]
[7, 4, -13, -11, 9, 0]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. Iteration&lt;/strong&gt;&lt;br&gt;
It’s a prevalent task that we need to perform certain operations by going through the list’s elements, which is termed iteration.&lt;/p&gt;

&lt;p&gt;I) We can iterate a list directly. Lists are iterables in Python, and thus we can iterate a list in a for loop directly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; pets = ['Dog', 'Cat', 'Bird']
&amp;gt;&amp;gt;&amp;gt; for pet in pets:
...     print(pet)
... 
Dog
Cat
Bird
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;II) &lt;strong&gt;We can iterate a list using the enumerate() function&lt;/strong&gt;. This function allows us to track the count of the iteration. Optionally, we can set the start argument to specify the start number for the counting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; activities = ['soccer', 'karate', 'basketball']
&amp;gt;&amp;gt;&amp;gt; for i, activity in enumerate(activities, start=1):
...     print(f'Day {i}: {activity}')
... 
Day 1: soccer
Day 2: karate
Day 3: basketball
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;III) We can iterate a list using the reversed() function. This function allows us to iterate the list using the reverse order.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code
&amp;gt;&amp;gt;&amp;gt; arrivals = ['John', 'Mike', 'Jennifer']
&amp;gt;&amp;gt;&amp;gt; for student in reversed(arrivals):
...     print(student)
... 
Jennifer
Mike
John
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Conclusions for the 5 topics&lt;/strong&gt;&lt;br&gt;
This article summarizes the most common operations for Python lists. Here are some quick takeaways so that you can understand the topic in these 5 sentences&lt;br&gt;
Hope you like it &lt;/p&gt;

&lt;p&gt;1) We can construct lists by listing the items, using the list() function, and working with existing ones.&lt;br&gt;
2) We can access individual and multiple items using indexing and ranges.&lt;br&gt;
3) We can check whether the list has a particular item and its emptiness and relationship with other lists.&lt;br&gt;
4) We can append, insert, and remove one or more elements. Besides, we can change the order of lists.&lt;br&gt;
5) We can iterate lists using themselves and in combination with the enumerate() and reversed() functions.&lt;/p&gt;

</description>
      <category>python</category>
      <category>lists</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>I need some ideas about the new era of technology as a new developer in the world of programing </title>
      <author>RUHANGABAHO</author>
      <pubDate>Sun, 02 May 2021 10:01:17 +0000</pubDate>
      <link>https://dev.to/ruhangabahoriddickson/i-need-some-ideas-about-the-new-era-of-technology-as-a-new-developer-in-the-world-of-programing-2k0m</link>
      <guid>https://dev.to/ruhangabahoriddickson/i-need-some-ideas-about-the-new-era-of-technology-as-a-new-developer-in-the-world-of-programing-2k0m</guid>
      <description>&lt;p&gt;all that I need is the cooperation of members from different people that will make a global village that can have and generate same and useful ideas that are developmental in the future.&lt;br&gt;
Am RUHANGABAHO DICKSON and I would like to get some group of people that have a knowledge about either html, java, python or c programming and if you have knowledge try to share with others so that you can also gain some skills from them.&lt;br&gt;
you should know that it is all about practice that will improve your skills mostly in the computing world that is prevailing now. &lt;br&gt;
nothing is impossible on the side of a programmer.&lt;/p&gt;

&lt;p&gt;looking forward to hear from you.&lt;br&gt;
Thanks.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devops</category>
      <category>database</category>
    </item>
    <item>
      <title>Best Google Chrome Extensions for Web Designers And Developers in 2021</title>
      <author>Dev.to</author>
      <pubDate>Sun, 02 May 2021 09:56:00 +0000</pubDate>
      <link>https://dev.to/devtouser/best-google-chrome-extensions-for-web-designers-and-developers-in-2021-32d4</link>
      <guid>https://dev.to/devtouser/best-google-chrome-extensions-for-web-designers-and-developers-in-2021-32d4</guid>
      <description>&lt;p&gt;As a designer/developer we use google chrome in daily life. That's why I brought the top 10 google extensions to make your work easy, We have a modern browser that is always upgraded by developers. I have brought 10 browser extensions today that will help you in coding.&lt;/p&gt;

&lt;p&gt;Best Google Chrome Extensions for Web Designers and Developers:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whatfont"&gt;
  &lt;/a&gt;
  WhatFont
&lt;/h1&gt;

&lt;p&gt;The easiest thanks to identify fonts on sites&lt;/p&gt;

&lt;p&gt;What is the simplest thanks to determine the fonts utilized in a webpage? Firebug and Webkit Inspector are easy enough to use for developers. However, for others, this could not be necessary. With this extension, you'll inspect web fonts by just hovering on them. it's that straightforward and stylish .&lt;/p&gt;

&lt;p&gt;It also detects the services used for serving the online fonts. Supports Typekit and Google Font API.&lt;/p&gt;

&lt;p&gt;To embrace the new web font era, WhatFont also detects services used for serving the font. Now supports Typekit and Google Font API.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ruul-screen-ruler"&gt;
  &lt;/a&gt;
  ruul. Screen ruler
&lt;/h1&gt;

&lt;p&gt;A fantastically simple on-screen ruler for lining up and measuring type, line height, strokes and almost anything on the online .&lt;/p&gt;

&lt;p&gt;Get pixel perfect with: horizontal and vertical draggable rulers; pixel, picas and sort measurements, line height guides and stroke widths. Move ruul with arrow keys, one pixel at a time, and use multiple ruul together. Ruul have 4 different coloured ruul, steel and wooden ruul included.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#screen-capture-by-google"&gt;
  &lt;/a&gt;
  Screen Capture By Google
&lt;/h1&gt;

&lt;p&gt;Capture visible content of a tab, a neighborhood of an internet page, or the entire page as a PNG image. Support horizontal and vertical scroll…&lt;/p&gt;

&lt;p&gt;It's easy to use this extension to capture visible content of a tab, a neighborhood of an internet page, or the entire page as a PNG image.&lt;/p&gt;

&lt;p&gt;You can also edit your captured image before saving it as a PNG image. Highlighting, redacting and adding text are supported.&lt;/p&gt;

&lt;p&gt;What set this extension apart are: Super fast when capturing page image, esp. for giant pages; Support horizontal scroll for giant pages that don't slot in one tab screen horizontally; Intelligently detect floating objects on a page and avoid repeating capture of an equivalent floating objects if whole page capture requires scrolling; Works on Windows, Linux and Mac&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#image-downloader"&gt;
  &lt;/a&gt;
  Image Downloader
&lt;/h1&gt;

&lt;p&gt;See all images shown or linked on an internet page and download them.&lt;/p&gt;

&lt;p&gt;If you would like to bulk download images from an internet page, with this extension you can: See images that the page contains and links to, Filter or sort them by URL; also supports wildcards and regular expressions, Optionally show only images from links, Select images for download by either using the checkboxes or directly clicking on the image, Dedicated buttons to download or open in new tab individual images, Customize display width, border size, style and color, Hide filters, buttons and notifications you do not need&lt;/p&gt;

&lt;p&gt;When you press the "Download" button, all selected images are saved to the default download directory of Chrome. If you do not have one, you'll need to manually choose the save location for every image.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#evernote-web-clipper"&gt;
  &lt;/a&gt;
  Evernote Web Clipper
&lt;/h1&gt;

&lt;p&gt;Save all the content you discover interesting round the web in your account.&lt;/p&gt;

&lt;p&gt;From interests to research, save anything you see online—including text, links and images—into your Evernote account with one click. With one click, clip part or all of any webpage, including text, images, and links. Collect everything that inspires you online. Have it forever, albeit the first goes away.&lt;/p&gt;

&lt;p&gt;RescueTime for Google Chrome™&lt;/p&gt;

&lt;p&gt;RescueTime may be a personal-analytics service that helps you understand how you spend some time .&lt;/p&gt;

&lt;p&gt;RescueTime may be a personal-analytics service that helps you understand how you spend time on your computer, smartphone and tablet. there's no manual data-entry required. The web-application works hand-in-hand with the installable client available for OS X, Windows, Linux, Android devices, and ChromeOS.&lt;/p&gt;

&lt;p&gt;Pinterest for Google Chrome&lt;/p&gt;

&lt;p&gt;Discover, collect, and share inspiration&lt;/p&gt;

&lt;p&gt;Pinterest may be a tool to seek out your inspiration and share it with others. Use it to gather belongings you love, organize and plan important projects, and more.&lt;/p&gt;

&lt;p&gt;The official Pinterest extension for Google Chrome adds a button to your browser that allows you to pin from any website, quickly and simply&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Get Some From HERE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>php</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>Useful tools, libraries and resources for developer to speed up the development</title>
      <author>Dev.to</author>
      <pubDate>Sun, 02 May 2021 09:50:47 +0000</pubDate>
      <link>https://dev.to/devtouser/useful-tools-libraries-and-resources-for-developer-to-speed-up-the-development-1cl0</link>
      <guid>https://dev.to/devtouser/useful-tools-libraries-and-resources-for-developer-to-speed-up-the-development-1cl0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O9iVOVbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm5tzvgx4z9caihfurc6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O9iVOVbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm5tzvgx4z9caihfurc6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In this article we are not going to talk about big and already popular framework and tools, we simply  wants to share a list of tools which we  found useful for speeding up a developer’s workflow.&lt;/p&gt;

&lt;p&gt;So here is the list &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-libraries"&gt;
  &lt;/a&gt;
  Javascript libraries
&lt;/h1&gt;

&lt;p&gt;Particles.js — A library for creating beautiful floating particles on a web page&lt;/p&gt;

&lt;p&gt;Three.js — A library for creating 3d objects and spaces on a web page&lt;/p&gt;

&lt;p&gt;Fullpage.js — Easy to implement full page scroll feature&lt;/p&gt;

&lt;p&gt;Typed.js — Typewriter effect&lt;/p&gt;

&lt;p&gt;Waypoints.js — Trigger a function when you scroll to an element&lt;/p&gt;

&lt;p&gt;Highlight.js — Syntax highlighting for the web&lt;/p&gt;

&lt;p&gt;Chart.js — Make beautiful charts using only javascript&lt;/p&gt;

&lt;p&gt;Instantclick — Dramatically speed up your website load time, preloading resources on mouse hover&lt;/p&gt;

&lt;p&gt;Chartist — Another chart library&lt;/p&gt;

&lt;p&gt;Motio — A library for sprite based animations and panning&lt;/p&gt;

&lt;p&gt;Animstion — Jquery plugin for css animated page transitions&lt;/p&gt;

&lt;p&gt;Barba.js — Fluid page transitions&lt;/p&gt;

&lt;p&gt;TwentyTwenty — A visual diff tool to spot differences&lt;/p&gt;

&lt;p&gt;Vivus.js — A library for making drawing animation on SVG&lt;/p&gt;

&lt;p&gt;Wow.js — Reveal animations when you scroll&lt;/p&gt;

&lt;p&gt;Scrolline.js — See how much you have scrolled untill the end of the page&lt;/p&gt;

&lt;p&gt;Velocity.js — Very fast and smooth javascript animations&lt;/p&gt;

&lt;p&gt;Animate on scroll — Pretty straightforward&lt;/p&gt;

&lt;p&gt;Handlebars.js — Javascript templating&lt;/p&gt;

&lt;p&gt;jInvertScroll — Parallax scrolling&lt;/p&gt;

&lt;p&gt;One page scroll — And again a one page scrolling library&lt;/p&gt;

&lt;p&gt;Parallax.js — Parallax Engine that reacts to the orientation of a smart device&lt;/p&gt;

&lt;p&gt;Typeahead.js — Search completion&lt;/p&gt;

&lt;p&gt;Dragdealer.js — Pretty cool dragging library&lt;/p&gt;

&lt;p&gt;Bounce.js — Create cool CSS3 animations&lt;/p&gt;

&lt;p&gt;Pagepiling.js — One page scroll&lt;/p&gt;

&lt;p&gt;Multiscroll.js — Multi scroll a website into two vertical scrolling panels&lt;/p&gt;

&lt;p&gt;Favico.js — Dynamic favicons&lt;/p&gt;

&lt;p&gt;Midnight.js — Switch fixed headers on the fly&lt;/p&gt;

&lt;p&gt;Anime.js — Animation library&lt;/p&gt;

&lt;p&gt;Keycode — Get javascript keycode for a button that is pressed&lt;/p&gt;

&lt;p&gt;Sortable — Drag &amp;amp; drop&lt;/p&gt;

&lt;p&gt;Flexdatalist — Autocomplete&lt;/p&gt;

&lt;p&gt;Slideout.js — Slideout navigation menu for mobile apps&lt;/p&gt;

&lt;p&gt;Jquerymy — Two way data bindings using jquery&lt;/p&gt;

&lt;p&gt;Cleave.js — Format content while typing&lt;/p&gt;

&lt;p&gt;Page — Client side routing for single page applications&lt;/p&gt;

&lt;p&gt;Selectize.js — Hybrid select box for adding tags&lt;/p&gt;

&lt;p&gt;Nice select — Jquery library for creating beautiful select boxes&lt;/p&gt;

&lt;p&gt;Tether — Efficiently attach absolute positioned elements&lt;/p&gt;

&lt;p&gt;Shepherd.js — Guide users through your app&lt;/p&gt;

&lt;p&gt;Tooltip — Name speaks for itself&lt;/p&gt;

&lt;p&gt;Select2 — Jquery replacement for select boxes&lt;/p&gt;

&lt;p&gt;IziToast — Easy to implement js notifications&lt;/p&gt;

&lt;p&gt;IziModal — Easy to implement js modals&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-css-tools-libraries"&gt;
  &lt;/a&gt;
  &lt;a href="https://cmsinstallation.blogspot.com/2021/04/useful-tools-libraries-and-resources.html"&gt;Get CSS Tools, Libraries&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>php</category>
    </item>
    <item>
      <title>10 GitHub Repositories every Developer should know </title>
      <author>Dev.to</author>
      <pubDate>Sun, 02 May 2021 09:41:27 +0000</pubDate>
      <link>https://dev.to/devtouser/10-github-repositories-every-developer-should-know-51mg</link>
      <guid>https://dev.to/devtouser/10-github-repositories-every-developer-should-know-51mg</guid>
      <description>&lt;p&gt;GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management and continuous integration for every project.&lt;/p&gt;

&lt;p&gt;Other than being the home for some of the most interesting Open Source Projects on the internet, GitHub is also a great place for sharing resources of all kinds, from free books to APIs, from roadmaps to project ideas and to the projects.&lt;/p&gt;

&lt;p&gt;GitHub offers its basic services free of charge. Its more advanced professional and enterprise services are commercial.Free GitHub accounts are commonly used to host open-source projects.&lt;/p&gt;

&lt;p&gt;So I have curated this list of ten fabulous repositories that provide a great value for all web and software developers.&lt;/p&gt;

&lt;p&gt;All of them will add value to you and help you to become a better web or software developer or both.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-free-programming-books"&gt;
  &lt;/a&gt;
  1. Free Programming Books
&lt;/h1&gt;

&lt;p&gt;Offered in a variety of different languages Free Programming Books is no doubt one of the most popular and starred repositories on GitHub. Even though it has "Books" in its name, it offers a lot more than that. It contains sections of free online courses, interactive programming resources, problem sets and competitive programming, programming playgrounds and podcasts and cheat sheets for almost every programming language.&lt;/p&gt;

&lt;p&gt;But has a major collection of programming books which makes it an "Awesome" collection.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-developer-roadmap"&gt;
  &lt;/a&gt;
  2. Developer Roadmap
&lt;/h1&gt;

&lt;p&gt;Got stuck? or need some advice for getting started to your developer journey? then this repository will guide you through. It has all the technologies you need to know if you want to become a Frontend or Backend or DevOps Engineer. It has all the alternative technologies from which can choose whatever suits your need or comfort.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-ossu-computer-science"&gt;
  &lt;/a&gt;
  3. OSSU Computer Science
&lt;/h1&gt;

&lt;p&gt;If you don't have a computer science background or degree and want the equivalent knowledge same as a Computer Science degree then this repository is for you. It's for those who want a proper, well-rounded grounding in concepts fundamental to all computing disciplines. It offers all the resources to help you become a self-taught computer science graduate equivalent and has a worldwide community of learners.&lt;/p&gt;

&lt;p&gt;It is designed according to the degree requirements of undergraduate computer science majors, minus general education (non-CS) requirements, as it is assumed most of the people following this curriculum are already educated outside the field of CS. The courses themselves are among the very best in the world, often coming from Harvard, Princeton, MIT, etc., but specifically chosen to meet the following criteria.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-coding-interview-university"&gt;
  &lt;/a&gt;
  4. Coding Interview University
&lt;/h1&gt;

&lt;p&gt;Coding Interview University has a multi-month study plan to become a software engineer for a large tech company like Google, Amazon, Facebook, Apple, or any other software company. It offers advice on how to study to become a reliability engineer or operations engineer. It also has links to the flashcards for quickly brushing up your knowledge and stay updated originally created by the author of the repository who landed a job at Amazon. And there are much more success stories like that.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-design-resources-for-developers"&gt;
  &lt;/a&gt;
  5. Design Resources for Developers
&lt;/h1&gt;

&lt;p&gt;This repository has a curated list of design and UI resources from stock photos, web templates, CSS frameworks, UI libraries, tools and much more, available for free to use in your projects and applications. It offers all the template stuff you need to get started with your web development projects.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-some-more"&gt;
  &lt;/a&gt;
  &lt;a href="https://cmsinstallation.blogspot.com/2021/04/10-github-repositories-every-developer.html"&gt;Get Some More&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>git</category>
      <category>webdev</category>
      <category>python</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Continuous Deployment on Shared Hosting with GitHub Actions</title>
      <author>Madalitso Nyemba</author>
      <pubDate>Sun, 02 May 2021 09:32:46 +0000</pubDate>
      <link>https://dev.to/madalitsonyemba/continuous-deployment-on-shared-hosting-with-github-actions-5agi</link>
      <guid>https://dev.to/madalitsonyemba/continuous-deployment-on-shared-hosting-with-github-actions-5agi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this fast-paced world, where everything seems to be happening quickly, it is paramount for early as well as frequent deployment of websites/apps to keep up with the competition. There are various ways of deploying your web apps to your server but will shall be looking at how GitHub actions can help us continuously deploy our web app with minimal effort. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-deployment"&gt;
  &lt;/a&gt;
  What is Continuous Deployment
&lt;/h2&gt;

&lt;p&gt;First of all, what is continuous deployment you ask? According to &lt;a href="https://searchitoperations.techtarget.com/definition/continuous-deployment"&gt;Search IT operations&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Continuous deployment is a strategy for software releases wherein any code commit that passes the automated testing phase is automatically released into the production environment, making changes that are visible to the software's users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will not cover tests in this post (but in a later post). As you can see from the definition, simply commit and then all your changes are on the production server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-shared-hosting"&gt;
  &lt;/a&gt;
  What is Shared Hosting
&lt;/h2&gt;

&lt;p&gt;There are different hosting choices with the popular ones now being shared hosting and cloud hosting. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A shared web hosting service is a web hosting service where many websites reside on one web server connected to the Internet.&lt;br&gt;
This is the cheapest way to host your website since the different users split the cost of the web server but it also has drawbacks since the resources are split across a number of users as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have been using shared hosting for a long time and I got bored with transferring my files via FTP every time I made changes. I then resorted to using &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; where I pushed my code to the repo then pulled it from my shared hosting. I still was not satisfied. I used &lt;a href="https://github.com/git-ftp/git-ftp/blob/master/man/git-ftp.1.md"&gt;GitFtp&lt;/a&gt; which was alright. Until I learned about CI/CD in my &lt;a href="https://azubiafrica.org/"&gt;Azubi Africa&lt;/a&gt; class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-actions-to-the-rescue"&gt;
  &lt;/a&gt;
  GitHub Actions to the rescue
&lt;/h2&gt;

&lt;p&gt;After further research, came across GitHub actions. According to their &lt;a href="https://docs.github.com/en/actions"&gt;site&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Automate, customize, and execute your software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you'd like, including CI/CD, and combine actions in a completely customized workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-workflow"&gt;
  &lt;/a&gt;
  The Workflow
&lt;/h2&gt;

&lt;p&gt;Let us get to the juicy bit by doing some actual work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-github-actions"&gt;
  &lt;/a&gt;
  Setting up GitHub actions
&lt;/h3&gt;

&lt;p&gt;(This is assuming you already have a repository in your GitHub account that you want to link to your shared hosting. if not, click &lt;a href="https://docs.github.com/en/github/getting-started-with-github/create-a-repo"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open your repository on GitHub and head over to &lt;code&gt;Actions&lt;/code&gt; tab.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RO4o-n0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3nz2r7n2ol9lmdoufieb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RO4o-n0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3nz2r7n2ol9lmdoufieb.PNG" alt="Actions tab" title="Press the actions tab"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;code&gt;set up a workflow yourself →&lt;/code&gt; as shown below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YNM7lETl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a75hv8mivxjewwrx3z6o.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNM7lETl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a75hv8mivxjewwrx3z6o.PNG" alt="Set up workflow yourself" title="Press the set up a workflow yourself"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Delete all the contents of main.yml on the page as shown below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3gZPEdg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zh0zns1emgnoflkerjip.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gZPEdg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zh0zns1emgnoflkerjip.PNG" alt="Delete contents" title="Delete all contents in the main.yml file"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replace the file with below contents (note this is for a project in Laravel with a Vue frontend)&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy Site on push&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;web-deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Get the latest code&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2.3.2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@master&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Installing project dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Building the project&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm run production&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Copy .env&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;php -r "file_exists('.env') || copy('.env.example', '.env');"&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup PHP&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shivammathur/setup-php@v2&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;php-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;8.0'&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;composer update --ignore-platform-reqs&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Generate key&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;php artisan key:generate&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Directory Permissions&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;chmod -R 777 storage bootstrap/cache&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;📂 Sync files&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;SamKirkland/FTP-Deploy-Action@4.0.0&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LARAVEL_SITE_SERVER}}&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LARAVEL_SITE_USER}}&lt;/span&gt;
        &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LARAVEL_SITE_PASS}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me now explain block by block what is going on&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy Site on push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the name of the workflow. GitHub displays the names of your workflows on your repository’s actions page after you write it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where the GitHub action system is told when to run the workflow. The above snippet triggers the workflow when one pushes to the &lt;code&gt;master branch&lt;/code&gt;. For more on the On key, click &lt;a href="https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions#:~:text=GitHub%20Actions%20are%20event%2Ddriven,executes%20a%20software%20testing%20script."&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;web-deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;jobs&lt;/em&gt; - Groups together all the jobs that run in the workflow file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;web-deploy&lt;/em&gt; - Defines the name of the web-deploy job stored within the jobs section.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;runs-on: ubuntu-latest&lt;/em&gt; - Configures the job to run on an Ubuntu Linux runner. This means that the job will execute on a fresh virtual machine hosted by GitHub.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Get the latest code&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2.3.2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@master&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Installing project dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Building the project&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm run production&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Remember that the steps are inside the job block.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;steps&lt;/em&gt; - Groups together all the steps that run in the web-deploy job. Each item nested under this section is a separate action or shell command.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;name&lt;/em&gt; - For identification of the separate action.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;uses: actions/&lt;a href="mailto:checkout@v2.3.2"&gt;checkout@v2.3.2&lt;/a&gt;&lt;/em&gt; - The uses keyword tells the job to retrieve v2 of the community action named actions/&lt;a href="mailto:checkout@v2.3.2"&gt;checkout@v2.3.2&lt;/a&gt;. This is an action that checks out your repository and downloads it to the runner, allowing you to run actions against your code (such as testing tools). You must use the checkout action any time your workflow will run against the repository's code or you are using an action defined in the repository.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;uses: actions/setup-node@master&lt;/em&gt; - This action installs the node software package on the runner, giving you access to the npm command.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;run: npm install&lt;/em&gt; - The run keyword tells the job to execute a command on the runner. In this case, you are using npm to install the package node dependecies.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;run: npm run production&lt;/em&gt; - This builds the Vue frontend project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Copy .env&lt;/span&gt;
      &lt;span class="s"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;php -r "file_exists('.env') || copy('.env.example', '.env');"&lt;/span&gt;
    &lt;span class="s"&gt;- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup PHP&lt;/span&gt;
      &lt;span class="s"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shivammathur/setup-php@v2&lt;/span&gt;
      &lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;php-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;8.0'&lt;/span&gt;
  &lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;composer update --ignore-platform-reqs&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Generate key&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;php artisan key:generate&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Directory Permissions&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;chmod -R 777 storage bootstrap/cache&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;run: php -r "file_exists('.env') || copy('.env.example', '.env');&lt;/em&gt; - This creates a .env file if it does not already exist (this is important as this is automatically added to the .gitignore file).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shivammathur/setup-php@v2&lt;/span&gt;
      &lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;php-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;8.0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This action installs php on the runner, giving you access to php version 8.0.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;run: composer update --ignore-platform-reqs&lt;/em&gt; - This is used to install and update the composer packages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;run: php artisan key:generate&lt;/em&gt; - This generates a key for the Laravel project.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;run: chmod -R 777 storage bootstrap/cache&lt;/em&gt; - This changes permissions for the specified folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;📂 Sync files&lt;/span&gt;
      &lt;span class="s"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;SamKirkland/FTP-Deploy-Action@4.0.0&lt;/span&gt;
      &lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LARAVEL_SITE_SERVER}}&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LARAVEL_SITE_USER}}&lt;/span&gt;
        &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.LARAVEL_SITE_PASS}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where the files are now transferred to the shared hosting server. Get your FTP details from your &lt;a href="https://docs.cpanel.net/cpanel/files/ftp-accounts/"&gt;shared hosting&lt;/a&gt;. Then go to &lt;code&gt;your repo&amp;gt;settings&amp;gt;secrets&lt;/code&gt; then add the three secrets namely: server, username and then password. This action is courtesy of &lt;a href="https://github.com/SamKirkland/FTP-Deploy-Action"&gt;SamKirkland&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information on GitHub actions, &lt;a href="https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions#:~:text=GitHub%20Actions%20are%20event%2Ddriven,executes%20a%20software%20testing%20script."&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy 😎&lt;/p&gt;

</description>
      <category>github</category>
      <category>laravel</category>
      <category>devops</category>
      <category>vue</category>
    </item>
    <item>
      <title>Undo your last git mistake with ugit</title>
      <author>Bhupesh Varshney 👾</author>
      <pubDate>Sun, 02 May 2021 08:00:53 +0000</pubDate>
      <link>https://dev.to/bhupesh/undo-your-last-git-mistake-with-ugit-3kln</link>
      <guid>https://dev.to/bhupesh/undo-your-last-git-mistake-with-ugit-3kln</guid>
      <description>&lt;p&gt;So I have been working on this little tool called &lt;a href="https://github.com/Bhupesh-V/ugit"&gt;&lt;strong&gt;ugit&lt;/strong&gt;&lt;/a&gt; (and was finally able to release a stable version), the goal is to make it easier for beginner to intermediate git users to undo their last (accidental) git command. Because we are not perfect and commit mistakes.&lt;/p&gt;

&lt;p&gt;“Oh wait I deleted the &lt;em&gt;auth-jwt&lt;/em&gt; branch without merging!! fuck”&lt;br&gt;&lt;br&gt;
&lt;em&gt;Opens browser&lt;/em&gt;&lt;br&gt;&lt;br&gt;
“How to restore deleted branch”&lt;br&gt;&lt;br&gt;
&lt;em&gt;Wastes 5 minutes reading the thread,&lt;/em&gt;&lt;br&gt;&lt;br&gt;
&lt;em&gt;Brain context switch, losses focus&lt;/em&gt;&lt;br&gt;&lt;br&gt;
“Aarrgh, Git sucks”&lt;/p&gt;

&lt;p&gt;Failure is a good way to learn something new but how many times are you going to mess up with git, if your ultimate goal is to deliver the new feature in your startup as fast as possible, huh? Git is great but it’s not really good with developer experience (DX).&lt;/p&gt;

&lt;p&gt;Yo bhupesh, I can just you know &lt;em&gt;alias&lt;/em&gt; this command. Oh cool, good luck remembering that alias after 1 month when you fuck-up again.&lt;/p&gt;

&lt;p&gt;If you are in the gang of getting things done, adding &lt;strong&gt;ugit&lt;/strong&gt; might be a good choice for you.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Bhupesh-V"&gt;
        Bhupesh-V
      &lt;/a&gt; / &lt;a href="https://github.com/Bhupesh-V/ugit"&gt;
        ugit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚨️ ugit helps you undo your last git command with grace. Your damage control git buddy
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ugit&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/34342551/115037937-a608d800-9eec-11eb-88a9-252da7d6f507.png"&gt;&lt;img alt="ugit logo" height="100px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FjBfTvje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/34342551/115037937-a608d800-9eec-11eb-88a9-252da7d6f507.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
&lt;code&gt;Undo your last oopsie 🙈️ in git with ease&lt;/code&gt;
&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Bhupesh-V/ugit/blob/master/LICENSE"&gt;
    &lt;img alt="License: MIT" src="https://camo.githubusercontent.com/d0c4f329325913dc80e868cce90186ce92143e28d3b2cbfb66e1e45abf149e98/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f426875706573682d562f75676974"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/Bhupesh-V/ugit/master/"&gt;
    &lt;img alt="platform support linux and macos" src="https://camo.githubusercontent.com/e23bd4e11e8aef909a9ff2c12990ee4ae7bf8583da60df079eda588fb2469a16/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d474e552f4c696e757820253743204d61634f532d626c7565"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ellerbrock/open-source-badges"&gt;
    &lt;img alt="bash love" src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QXTYKQz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ellerbrock/open-source-badges/master/badges/bash-v1/bash.png"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/bhupeshimself" rel="nofollow"&gt;
    &lt;img alt="Twitter: bhupeshimself" src="https://camo.githubusercontent.com/8191a674bed748b85e1bd7c9320ec24a9c9c8c6e32bc924ae1d7db0377527411/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f62687570657368696d73656c662e7376673f7374796c653d736f6369616c"&gt;
  &lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/34342551/114261429-1ea4fb80-99f8-11eb-92b4-66315a65b854.gif"&gt;&lt;img alt="ugit demo gif" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KvFKlzIt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/34342551/114261429-1ea4fb80-99f8-11eb-92b4-66315a65b854.gif"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
Why &lt;code&gt;ugit&lt;/code&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You did an accidental &lt;code&gt;git&lt;/code&gt; command you didn't want to.&lt;/li&gt;
&lt;li&gt;You don't want to waste your time searching on &lt;em&gt;how to undo ...&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Because ugit is cool&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
What's in the box&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ugit&lt;/code&gt; supports undoing following operations, some are a WIP. If you know of any other operations that can be undone and is not in the list, make sure to send a quick PR 💛️&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git commit&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git add&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git push&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git branch -D&lt;/code&gt; (branch delete)&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git pull&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git reset&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git tag -d&lt;/code&gt; (tag delete)&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git stash apply&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git stash pop/drop/clear&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo accidental file delete (Restore a deleted file after a commit)&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo (Restore) a file to a previous version&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git merge&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git tag&lt;/code&gt; (rename a tag)&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git rebase&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git cherry-pick&lt;/code&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Undo &lt;code&gt;git worktree remove&lt;/code&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Bhupesh-V/ugit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
Ok enough talking.
&lt;h2&gt;
  &lt;a href="#what-is-raw-ugit-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;ugit&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;It’s just a simple shell script with guided programmatic steps to undo your last git command, powered by FZF built for people who live and work with terminals every day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#guided-tutorials"&gt;
  &lt;/a&gt;
  Guided Tutorials
&lt;/h2&gt;

&lt;p&gt;Below are some GIF demos of undoing some git operations, the list is long (around 17 scenarios) but I am only demonstrating some common ones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#undoing-raw-git-add-endraw-"&gt;
  &lt;/a&gt;
  Undoing &lt;code&gt;git add&lt;/code&gt;
&lt;/h3&gt;


  


&lt;h3&gt;
  &lt;a href="#undoing-raw-git-branch-d-endraw-restore-deleted-branch"&gt;
  &lt;/a&gt;
  Undoing &lt;code&gt;git branch -D&lt;/code&gt; (Restore deleted branch)
&lt;/h3&gt;


  


&lt;h2&gt;
  &lt;a href="#undoingrestoring-file-to-previous-version"&gt;
  &lt;/a&gt;
  Undoing/Restoring file to previous version
&lt;/h2&gt;


  


&lt;h3&gt;
  &lt;a href="#undoing-raw-git-merge-endraw-"&gt;
  &lt;/a&gt;
  Undoing &lt;code&gt;git merge&lt;/code&gt;
&lt;/h3&gt;


  


&lt;h3&gt;
  &lt;a href="#i-dont-like-your-stupid-script"&gt;
  &lt;/a&gt;
  I don’t like your stupid script
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtrVD5RW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/bhupesh/blog_content_pics/sed-doggo_e7RD-mM7L.webp" class="article-body-image-wrapper"&gt;&lt;img alt="sad dogo crying" src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtrVD5RW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/bhupesh/blog_content_pics/sed-doggo_e7RD-mM7L.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool, I mean we are still friends right?? Friends help friends avoid git mistakes, that’s why I wrote an accompanying text guide on &lt;a href="https://bhupesh.gitbook.io/notes/git/how-to-undo-anything-in-git"&gt;How to undo anything in Git&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Share it with your friends, co-workers. No hard feelings&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>git</category>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>C Programming Questions and Answers</title>
      <author>Thushara Thiwanka</author>
      <pubDate>Sun, 02 May 2021 06:05:43 +0000</pubDate>
      <link>https://dev.to/thusharax/c-programming-2i95</link>
      <guid>https://dev.to/thusharax/c-programming-2i95</guid>
      <description>&lt;p&gt;Shortly after starting a campus in the middle of last year, I created a separate GitHub repository for C Programming.&lt;/p&gt;

&lt;p&gt;I created this repository to put Questions and Answers related to c programming in the Introduction to Programming module, which is our first-year first-semester subject.&lt;/p&gt;

&lt;p&gt;Here is the link to that Repository &lt;a href="https://github.com/ThusharaX/C-programming/"&gt;C-programming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ThusharaX"&gt;
        ThusharaX
      &lt;/a&gt; / &lt;a href="https://github.com/ThusharaX/C-programming"&gt;
        C-programming
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      C programming questions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
C programming&lt;/h1&gt;
&lt;h2&gt;
&lt;strong&gt;IT 1010 Introduction to Programming&lt;/strong&gt;
&lt;/h2&gt;
&lt;h3&gt;
This project need a &lt;strong&gt;star&lt;/strong&gt; ⭐ from you ♥
&lt;/h3&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/12b17fa0717af35bd16dd898913a62471093326a44e4331ff74e1b65cf070a49/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f5468757368617261582f432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/12b17fa0717af35bd16dd898913a62471093326a44e4331ff74e1b65cf070a49/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f5468757368617261582f432d70726f6772616d6d696e67" alt="GitHub top language"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dba8c1b40e9a235ca118172d52e664ad1abd6886e64df205619d0bc52e8d18cc/68747470733a2f2f76697369746f722d62616467652e676c697463682e6d652f62616467653f706167655f69643d5468757368617261582e432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/dba8c1b40e9a235ca118172d52e664ad1abd6886e64df205619d0bc52e8d18cc/68747470733a2f2f76697369746f722d62616467652e676c697463682e6d652f62616467653f706167655f69643d5468757368617261582e432d70726f6772616d6d696e67" alt="visitor badge"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/28908c30c9d53137031e433dcb0f5a0bcb52dd7483c4a4a1ffe90a91a12cf6f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f5468757368617261582f432d70726f6772616d6d696e673f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/28908c30c9d53137031e433dcb0f5a0bcb52dd7483c4a4a1ffe90a91a12cf6f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f5468757368617261582f432d70726f6772616d6d696e673f7374796c653d736f6369616c" alt="GitHub forks"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/db8cffc93781a65e1b81b0c885af1d8331bd54b6b190677d417b81be4faf9fee/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f5468757368617261582f432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/db8cffc93781a65e1b81b0c885af1d8331bd54b6b190677d417b81be4faf9fee/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f5468757368617261582f432d70726f6772616d6d696e67" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/564d906b948da12fca189825f515877438739b3fdb6f5617823ade1ed2f75ea3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f5468757368617261582f432d70726f6772616d6d696e673f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/564d906b948da12fca189825f515877438739b3fdb6f5617823ade1ed2f75ea3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f5468757368617261582f432d70726f6772616d6d696e673f7374796c653d736f6369616c" alt="GitHub Repo stars"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0b9ca89de39d1eff2a700c46f960d44e8558cdc69e9896f16782ecf28fcc895f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f5468757368617261582f432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/0b9ca89de39d1eff2a700c46f960d44e8558cdc69e9896f16782ecf28fcc895f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f5468757368617261582f432d70726f6772616d6d696e67" alt="GitHub repo size"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/ab39a03ab7fab7f4b68b85c693a88ee6d0eef706dc0963b601e41fb4844d4c9d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f5468757368617261582f432d70726f6772616d6d696e673f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/ab39a03ab7fab7f4b68b85c693a88ee6d0eef706dc0963b601e41fb4844d4c9d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f5468757368617261582f432d70726f6772616d6d696e673f7374796c653d736f6369616c" alt="GitHub watchers"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f064537a6211360cb5c689290bfa76300843b680df9727104d1dadc2ce46cd3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f5468757368617261582f432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/f064537a6211360cb5c689290bfa76300843b680df9727104d1dadc2ce46cd3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f5468757368617261582f432d70726f6772616d6d696e67" alt="GitHub issues"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cfd58c5f5463fa8c519bd912538b8659f8c46eac563d7fa463f725a19d41440b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f5468757368617261582f432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/cfd58c5f5463fa8c519bd912538b8659f8c46eac563d7fa463f725a19d41440b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f5468757368617261582f432d70726f6772616d6d696e67" alt="GitHub pull requests"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/dda78bd1334129738cf2edc7c5f5bea447eb130003e35e76e66bc8f493024b4b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6162656c732f5468757368617261582f432d70726f6772616d6d696e672f68656c7025323077616e746564"&gt;&lt;img src="https://camo.githubusercontent.com/dda78bd1334129738cf2edc7c5f5bea447eb130003e35e76e66bc8f493024b4b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6162656c732f5468757368617261582f432d70726f6772616d6d696e672f68656c7025323077616e746564" alt="GitHub labels"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/212c2677035ec93ac5a1e9d4f079dc71b9c21b3b397154a7f34098ac2ce29a7f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5468757368617261582f432d70726f6772616d6d696e67"&gt;&lt;img src="https://camo.githubusercontent.com/212c2677035ec93ac5a1e9d4f079dc71b9c21b3b397154a7f34098ac2ce29a7f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5468757368617261582f432d70726f6772616d6d696e67" alt="GitHub"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
🌱 This is a repository for C programming related questions.&lt;/li&gt;
&lt;li&gt;
👯 Everyone is welcome to contribute.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributors ✨
&lt;/h2&gt;
&lt;p&gt;Thanks goes to these wonderful people ❤️&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
    &lt;tbody&gt;
&lt;tr&gt;
        &lt;td&gt;
&lt;a href="https://github.com/ThusharaX"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0HLDM9I0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/47711719%3Fs%3D400%26v%3D4" width="100px;" alt=""&gt;
        &lt;br&gt;
        &lt;b&gt;ThusharaX&lt;/b&gt;&lt;/a&gt;
        &lt;br&gt;
        &lt;/td&gt;
        &lt;td&gt;
&lt;a href="https://github.com/AshenWijesingha"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4tJcIYmK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/66056859%3Fs%3D400%26v%3D4" width="100px;" alt=""&gt;
        &lt;br&gt;
        &lt;b&gt;AshenWijesingha&lt;/b&gt;&lt;/a&gt;
        &lt;br&gt;
        &lt;/td&gt;
        &lt;td&gt;
&lt;a href="https://github.com/Darklaneanjana"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IeyEIHh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/23092020%3Fs%3D400%26v%3D4" width="100px;" alt=""&gt;
        &lt;br&gt;
        &lt;b&gt;Darklaneanjana&lt;/b&gt;&lt;/a&gt;
        &lt;br&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
&lt;a href="https://github.com/pasindulakshan"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wnmX0Sdt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/74607482%3Fs%3D400%26v%3D4" width="100px;" alt=""&gt;
        &lt;br&gt;
        &lt;b&gt;pasindulakshan&lt;/b&gt;&lt;/a&gt;
        &lt;br&gt;
        &lt;/td&gt;
        &lt;td&gt;
&lt;a href="https://github.com/SasithaLakshan"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xcr3blgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/74831645%3Fs%3D400%26v%3D4" width="100px;" alt=""&gt;
        &lt;br&gt;
        &lt;b&gt;SasithaLakshan&lt;/b&gt;&lt;/a&gt;
        &lt;br&gt;
        &lt;/td&gt;
        &lt;td&gt;
&lt;a href="https://github.com/hirusha2577"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lnq02ZWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/56668123%3Fs%3D400%26v%3D4" width="100px;" alt=""&gt;
        &lt;br&gt;
        &lt;b&gt;hirusha2577&lt;/b&gt;&lt;/a&gt;
        &lt;br&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ThusharaX/C-programming"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>c</category>
      <category>programming</category>
    </item>
    <item>
      <title>Dynamic Programming Vs Greedy method</title>
      <author>Susritha09</author>
      <pubDate>Sun, 02 May 2021 06:04:18 +0000</pubDate>
      <link>https://dev.to/susritha09/dynamic-programming-vs-greedy-method-2km1</link>
      <guid>https://dev.to/susritha09/dynamic-programming-vs-greedy-method-2km1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dynamic-programming"&gt;
  &lt;/a&gt;
  Dynamic Programming:
&lt;/h2&gt;

&lt;p&gt;It just solves problems by combining the sub problems to solutions only of the sub problems were independent.&lt;br&gt;
It can be used for solving both mathematical optimization method and computer programming method.&lt;br&gt;
For example,it can be used for finding the shortest path in graph.&lt;br&gt;
The algorithm used is:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQP7cync--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ton0dn7c5vgq69auw3m8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQP7cync--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ton0dn7c5vgq69auw3m8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#greedy-method"&gt;
  &lt;/a&gt;
  Greedy Method:
&lt;/h2&gt;

&lt;p&gt;Greedy method solves problems step by step which leads to global optimization solution.&lt;br&gt;
Algorithm for greedy is:&lt;br&gt;
Greedy(D,n)&lt;br&gt;
//In Greedy approach D is domain&lt;br&gt;
//from which solution is to be obtained of size n&lt;br&gt;
//Initially assume&lt;br&gt;
      solution&amp;lt;-0&lt;br&gt;
      for i&amp;lt;-1 to n do{&lt;br&gt;
             s&amp;lt;-select(D)&lt;br&gt;
             if(Feasible solution,s))then&lt;br&gt;
               Solution&amp;lt;-Union(Solution,s)&lt;br&gt;
}&lt;br&gt;
return solution&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
