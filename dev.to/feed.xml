<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Re-Order Grid Columns in Bootstrap 5</title>
      <author>BootstrapNews</author>
      <pubDate>Wed, 09 Jun 2021 15:13:59 +0000</pubDate>
      <link>https://dev.to/codeply/re-order-grid-columns-in-bootstrap-5-135k</link>
      <guid>https://dev.to/codeply/re-order-grid-columns-in-bootstrap-5-135k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-key-aspect-of-responsive-design-that-bootstrap-provides-is-the-ability-to-change-the-position-of-content-on-different-devices-and-screen-widths"&gt;
  &lt;/a&gt;
  A key aspect of responsive design that Bootstrap provides is the ability to change the position of content on different devices and screen widths.
&lt;/h2&gt;




&lt;h1&gt;
  &lt;a href="#why-change-content-order"&gt;
  &lt;/a&gt;
  Why Change Content Order?
&lt;/h1&gt;

&lt;p&gt;A common use-case is a typical 2-column page layout. Often, the vertical stacking of columns is desired on smaller screen devices (tablets &amp;amp; phones) where horizontal space is limited. Arguably, this may also help with SEO as the main content is closer to the top of the page when search engines like Google crawl the page. &lt;/p&gt;

&lt;p&gt;Using the &lt;a href="https://getbootstrap.com/docs/5.0/utilities/flex/#order"&gt;Bootstrap 5 ordering classes&lt;/a&gt; we‚Äôre able to utilize the column ordering feature of the Bootstrap grid. On small (mobile) screens we want to show our main content at the top and then the sidebar nav below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MNMoBIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/349/0%2AAlKX212q7aw97Eqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MNMoBIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/349/0%2AAlKX212q7aw97Eqo.png" alt="Change column order in Bootstrap - small devices"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2rAtYxM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AOOg6tVKShm55sLxZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2rAtYxM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/0%2AOOg6tVKShm55sLxZ.png" alt="Change column order in Bootstrap - larger devices"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#flexbox-parent-amp-children"&gt;
  &lt;/a&gt;
  Flexbox Parent &amp;amp; Children
&lt;/h1&gt;

&lt;p&gt;As you may know the Bootstrap 5 grid utilizes &lt;strong&gt;Flexbox&lt;/strong&gt;. The concept of "parent &amp;amp; children" in Flexbox equates to the "row &amp;amp; columns" of the Bootstrap grid. One &lt;strong&gt;&lt;em&gt;parent&lt;/em&gt;&lt;/strong&gt; row containing one or more &lt;strong&gt;&lt;em&gt;child&lt;/em&gt;&lt;/strong&gt; columns...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
    &amp;lt;div class="col"&amp;gt;
         Child 1
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="col"&amp;gt;
         Child 2
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="col"&amp;gt;
         Child 3
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#natural-vs-visual-order"&gt;
  &lt;/a&gt;
  Natural vs. Visual Order
&lt;/h1&gt;

&lt;p&gt;Notice that the &lt;strong&gt;&lt;em&gt;natural order&lt;/em&gt;&lt;/strong&gt; of the columns is:&lt;/p&gt;

&lt;p&gt;|---1---|---2---|---3---|&lt;/p&gt;

&lt;p&gt;Using the flex ordering CSS classes we can change the &lt;strong&gt;&lt;em&gt;visual order&lt;/em&gt;&lt;/strong&gt; of the columns...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
      &amp;lt;div class="col order-2"&amp;gt; Child 1 &amp;lt;/div&amp;gt;
      &amp;lt;div class="col order-1"&amp;gt; Child 2 &amp;lt;/div&amp;gt;
      &amp;lt;div class="col order-3"&amp;gt; Child 3 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;|---2---|---1---|---3---|&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codeply.com/p/T52wfQIdG6"&gt;Simple Bootstrap Ordering Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the columns are in the same &lt;em&gt;natural order&lt;/em&gt;, but the &lt;em&gt;visual order&lt;/em&gt; has changed by using the &lt;code&gt;order-*&lt;/code&gt; classes on the columns.&lt;/p&gt;




&lt;p&gt;In practice, we would want to &lt;strong&gt;&lt;em&gt;change the visual order depending on the screen width&lt;/em&gt;&lt;/strong&gt;. For example, suppose I want this order on &lt;em&gt;larger screens&lt;/em&gt;...&lt;/p&gt;

&lt;p&gt;|---3---|---2---|---1---|&lt;/p&gt;

&lt;p&gt;But on &lt;em&gt;smaller screens&lt;/em&gt; I want this (natural) order...&lt;/p&gt;

&lt;p&gt;|---1---|---2---|---3---|&lt;/p&gt;

&lt;p&gt;We can achieve this using the responsive &lt;code&gt;order-lg-*&lt;/code&gt; classes to control the larger (992px and wider) breakpoint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
    &amp;lt;div class="col border order-lg-3"&amp;gt; Child 1 &amp;lt;/div&amp;gt;
    &amp;lt;div class="col border order-lg-2"&amp;gt; Child 2 &amp;lt;/div&amp;gt;
    &amp;lt;div class="col border order-lg-1"&amp;gt; Child 3 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/T52wfQIdG6"&gt;See row 3 of the demo&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Since Bootstrap provides many &lt;a href="https://getbootstrap.com/docs/5.0/utilities/flex/#order"&gt;ordering classes for all 6 breakpoints&lt;/a&gt; you can manipulate the position of columns in exhaustively many ways...&lt;/p&gt;

&lt;p&gt;Here's the responsive &lt;a href="https://codeply.com/p/XLuC2eGQND"&gt;Codeply with more re-ordering examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before wrapping-up let's revisit the 1st use-case of changing the order of a 2-column layout. The markup is soooo simple...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="row"&amp;gt;
    &amp;lt;div class="col-sm-3 order-sm-first order-last"&amp;gt; Sidebar &amp;lt;/div&amp;gt;
    &amp;lt;div class="col-sm"&amp;gt; Main &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/p/T52wfQIdG6"&gt;See row 4 of the demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The use of &lt;code&gt;order-sm-first order-last&lt;/code&gt; on the Sidebar translates to "order first on small and wider", and "order last on extra small (xs)".&lt;/p&gt;

&lt;p&gt;I hope this has given you a little insight as to how ordering works in Bootstrap 5. Please share your thoughts and questions in the comments. &lt;/p&gt;

&lt;p&gt;üòéB5&lt;/p&gt;

</description>
      <category>css</category>
      <category>bootstrap</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>10 Best Blogging Tools and Resources with TIPSüéÅ</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Wed, 09 Jun 2021 15:13:05 +0000</pubDate>
      <link>https://dev.to/basecampxd/10-best-blogging-tools-and-resources-with-tips-3ali</link>
      <guid>https://dev.to/basecampxd/10-best-blogging-tools-and-resources-with-tips-3ali</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In learning you will teach, and in teaching, you will learn.&lt;br&gt;
‚Äï Phil Collins&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As Phil Collins said you will learn while teaching and one of the best ways for teaching and providing information to you is by writing a blog. Writing a blog will give a lot of opportunities in your career, you interact with many other people just like you and it will boost your confidence.&lt;/p&gt;

&lt;p&gt;If you want to start or already had started, I am going to list down 10 Tools and resource that will surely help you in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing Blog Post&lt;/li&gt;
&lt;li&gt;Finding Blog Post Ideas&lt;/li&gt;
&lt;li&gt;Enhancing Content of your blog post&lt;/li&gt;
&lt;li&gt;Creating Attractive Header Images
. Generating Traffic for Your Blog &lt;/li&gt;
&lt;li&gt;And Many More&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's get started&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#grammarly"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Communicate With Impact. Ensure Everything You Write Comes Across The Way You Intend. Present Your Best Self Every Time You Type. Make Your Writing Clear and Engaging. Eliminate grammar errors. Easily improve any text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KiTndzLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.grammarly.com/assets/files/e80911c560f18f1ffdc084f23fe9c715/mobile_opengraph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KiTndzLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.grammarly.com/assets/files/e80911c560f18f1ffdc084f23fe9c715/mobile_opengraph.png" alt="Grammarly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using Grammarly for a long time to check grammar mistakes. I helped me a lot in producing better blog post without grammar error and wrong tone of a blog post. In the free plan, it suggests great points to rewrite the sentence to resolve those issues. In premium, it suggests edits that you can just apply by clicking.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#canva"&gt;
  &lt;/a&gt;
  &lt;a href="https://canva.com/"&gt;Canva&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Thousands Of Custom Templates And Stock Images, Easy-To-Use Editing Features, And More! Priority Support. Simple To Use Interface. 200K+ Companies On Board. 100% Happiness Guarantee. Free 30 Day Trial. Services: Brand Kit, Magic Resize Tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGc6AQHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static-cse.canva.com/image/76579/stickers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGc6AQHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static-cse.canva.com/image/76579/stickers.jpg" alt="Canva"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My go-to web app for creating header images for my blog and other social media. It has tons of template for to start editing and make it own with their editing tools. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dropbox-paper"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dropbox.com/paper"&gt;DropBox Paper&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Dropbox Paper is a new type of document designed for creative work. Collaborate in real-time, assign tasks, make a to-do list, and more. Start today!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--buu4ESdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://play-lh.googleusercontent.com/mJ64uZzxna8dCg2iqGoeIlRunKOex_CNqDwD13en6Prkb_2XgasAmkB-qZqMCJzzVFHq" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--buu4ESdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://play-lh.googleusercontent.com/mJ64uZzxna8dCg2iqGoeIlRunKOex_CNqDwD13en6Prkb_2XgasAmkB-qZqMCJzzVFHq" alt="DropBox Paper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recently found about DropBox Paper and it's super useful for writing the draft for your blog post. It supports markdown and it has a very easy sharing option. The shared person can edit and comment on a particular line, word, paragraph, or whole document which makes it suitable for getting an initial review on your blog post.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yUHp38vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2A5fsCs0R8oHnhQ93R5N0Qag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yUHp38vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/4800/1%2A5fsCs0R8oHnhQ93R5N0Qag.png" alt="Notion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notion helped me a lot in noting all my research for my blog posts such as keyword, reference, goal, and key points for my blog. It can be used for multiple purposes like creating notes, to-do lists, table content, etc. It is highly recommended by many developers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#google-keyword-planner"&gt;
  &lt;/a&gt;
  &lt;a href="https://ads.google.com/home/tools/keyword-planner/"&gt;Google Keyword Planner&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Find the right keywords to use in your Blog for SEO and reaching more people with our Keyword Planner tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BxuCvrvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://keywordtool.io/sites/all/images/google-ads-keyword-planner.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BxuCvrvu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://keywordtool.io/sites/all/images/google-ads-keyword-planner.png" alt="Google Keyword Planner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google Keyword Planner is for finding the right keyword for targeting the right audience for your blog post. You can find keywords from other websites and can research them on the platform. You can see the forecast of keyword weather traffic will rise or decline. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mailchimp"&gt;
  &lt;/a&gt;
  &lt;a href="https://mailchimp.com/"&gt;MailChimp&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Mailchimp is the All-In-One integrated marketing platform for small businesses, to grow their business on your terms. It's easy to use - start for free today!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJt2XC5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.amocrm.com/static/images/pages/integrations/logo/mailchimp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJt2XC5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.amocrm.com/static/images/pages/integrations/logo/mailchimp.png" alt="MailChimp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MailChimp is best for building email subscribers and creating a weekly newsletter to update followers about new posts, events or just providing information. I am going to start a newsletter for you all soon.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#typeform"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.typeform.com/"&gt;Typeform&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Build beautiful, interactive forms ‚Äî get more responses. No coding is needed. Templates for quizzes, research, feedback, lead generation, and more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9UTN3har--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2A7gZX2qRu-ckGAEoxvlVAiw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9UTN3har--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2A7gZX2qRu-ckGAEoxvlVAiw.jpeg" alt="Typeform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Typeform let you create survey form, quizzes, feedback form, etc. for your subscribers. Forms are interactive and one question at a time with many other features.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quora"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.quora.com/"&gt;Quora&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Quora is a place to gain and share knowledge. It's a platform to ask questions and connect with people who contribute unique insights and quality answers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udeOlGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/digest.myhq.in/wp-content/uploads/2018/10/quora1-e1543419626800.png%3Ffit%3D796%252C416%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udeOlGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/digest.myhq.in/wp-content/uploads/2018/10/quora1-e1543419626800.png%3Ffit%3D796%252C416%26ssl%3D1" alt="Quora"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quora is the best place for finding topics for your next blog post. You can look into the different questions and find out what people are interested in knowing. Search for your keyword, and follow topics related to your blog‚Äôs focus.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pinterest"&gt;
  &lt;/a&gt;
  &lt;a href="https://pinterest.com/"&gt;Pinterest&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Discover recipes, home ideas, style inspiration, and other ideas to try.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-j2Xf2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.pinimg.com/images/facebook_share_image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-j2Xf2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.pinimg.com/images/facebook_share_image.png" alt="Pinterest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think you used Pinterest for searching, saving, and downloading images but it is one of the social media that drive direct traffic to your blog. Pinterest lets you create a pin, add a description and website to direct traffic from Pinterest.&lt;/p&gt;

&lt;p&gt;You can follow &lt;a href="https://www.youtube.com/c/AnastasiaBlogger/videos"&gt;&lt;strong&gt;Anastasia Blogger&lt;/strong&gt;&lt;/a&gt; YouTube Channel to learn more about Pinterest marketing.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wordpresscom"&gt;
  &lt;/a&gt;
  &lt;a href="https://wordpress.com/"&gt;Wordpress.com&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Responsive Mobile Themes and Dedicated Live Support. Get Started in Minutes! Live Chat and Email Help. Rich, Easy-to-Read Stats. Built-in SEO. Fast, Secure Web Hosting. Ad-Free Site w/ Paid Plan. Scalable and Secure. Upload Photos &amp;amp; Videos. Free Website Templates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqK4y2WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yoast.com/app/uploads/2021/02/Copy-of-WordPress_FI-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqK4y2WQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yoast.com/app/uploads/2021/02/Copy-of-WordPress_FI-2.png" alt="Wordpress.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wordpress.com is best for hosting your blog for free with a subdomain with wordpress.com. It is best for coders as well as a non coder to create beautiful blogging websites with their templates. Your blog post will be searchable through every search engine and it is recommended to WordPress Readers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  üîó Connect with me:
&lt;/h2&gt;

&lt;p&gt;Currently, on Twitter, I am posting about "How to write and grow blog?". If you want to write a more effective blog with tips, consider the follow button on Twitter.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;With this completing 500 tweetsü•≥.&lt;br&gt;&lt;br&gt;Thank you to everyoneü§©.&lt;br&gt;&lt;br&gt;As helping more people, I am going to tweet about writing and growing blog especially technical, in the coming daysüî•.&lt;br&gt;&lt;br&gt;So if you haven't followed me, please considerü§ó.&lt;/p&gt;‚Äî Suraj Vishwakarma &lt;a href="https://twitter.com/surajondev"&gt;@surajondev&lt;/a&gt; &lt;a href="https://twitter.com/surajondev/status/1394212368675000321?ref_src=twsrc%5Etfw"&gt;May 17, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;&lt;a href="https://twitter.com/surajondev"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;p&gt;I hope this resource with tips will help you in acing your blogging career. &lt;/p&gt;

&lt;p&gt;If you like my work please consider &lt;a href="https://www.buymeacoffee.com/surajondev"&gt;Buying me a Coffee&lt;/a&gt; so that I can bring more projects, more articles for you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Help me to reach $100 so that I can pay for domains and hosting for my websites&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/RETzc1mj7HpZPuNf3e/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/RETzc1mj7HpZPuNf3e/giphy.gif" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank You for reading the blog post. &lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 best Node.JS frameworks</title>
      <author>Alex</author>
      <pubDate>Wed, 09 Jun 2021 15:08:18 +0000</pubDate>
      <link>https://dev.to/alexanderkdev/5-best-node-js-frameworks-4a3n</link>
      <guid>https://dev.to/alexanderkdev/5-best-node-js-frameworks-4a3n</guid>
      <description>&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime that manages JavaScript code outside the browser.&lt;br&gt;
Mostly JavaScript is used to create client-side scripts are embedded in the HTML of a website page and run by the JavaScript engine in the browser. With Node.js, developers can use JavaScript to get command-line tools. On the server-side, it runs the necessary scripts to process the dynamic content of the web page before it is available in the user's browser. Thus, Node.js embodies the concept of ‚ÄúJavaScript everywhere,‚Äù allowing you to develop web applications in the same language for both server-side and client-side scripting.&lt;br&gt;
Features such as better performance, functionality, high speed, and scalability make Node.js the number one choice for developing enterprise-grade applications for large companies.&lt;br&gt;
Developing in Node.js, you can use the same language for both the frontend and backend. This will save you the trouble of learning and applying new languages.&lt;/p&gt;

&lt;p&gt;HOW TO CHOOSE THE BEST FRAMEWORK?&lt;br&gt;
I consider the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scalability.&lt;/li&gt;
&lt;li&gt;Ecosystem.&lt;/li&gt;
&lt;li&gt;Functionality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EXPRESS.JS&lt;br&gt;
Express.JS is the most popular one. It makes it much easier to reuse code to process data in web applications, store user sessions, manage cookie files, and handle payloads. If you‚Äôre not using Express.Js, Node.js requires you to rewrite many processes from the ground.&lt;br&gt;
Express is well known to evolve, unlike other frameworks that rely heavily on Rails and borrows a lot from another Ruby framework called Sinatra. The concept is simple: the framework provides enough capabilities to launch and work without requiring a lot of preparation time.&lt;br&gt;
This is why Express is a clear favorite for dynamic content. It has a fast response to users‚Äô requests, uploads text, photos, videos, and other content to the page.&lt;br&gt;
Sites built with Express.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uber&lt;/li&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;BlaBlaCar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Express.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-sourced, has a vast and vital community;&lt;/li&gt;
&lt;li&gt;Easy to learn;
A developer can install helpful tools for speed, response, and performance improvement;&lt;/li&gt;
&lt;li&gt;Ability to define with URLs and HTTP protocol;&lt;/li&gt;
&lt;li&gt;Supports multiple template engines;&lt;/li&gt;
&lt;li&gt;Allows creating both static and dynamic content;&lt;/li&gt;
&lt;li&gt;Integration with SQL and NoSQL databases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;METEOR.JS&lt;br&gt;
Meteor is an open-source MVC framework that allows you to create real-time Web applications. One of the platform‚Äôs essential features is using the same code on both the server and client sides. It is data that is usually transferred between the server and the client, but not HTML code. The framework supports OS X, Windows, and Linux. Its reactive programming model allows you to build applications with less JavaScript.&lt;br&gt;
Sites built with Meteor.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mazda&lt;/li&gt;
&lt;li&gt;Accenture&lt;/li&gt;
&lt;li&gt;Deloitte&lt;/li&gt;
&lt;li&gt;Brainhub&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Meteor.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Suitable for MVP development and prototype;&lt;/li&gt;
&lt;li&gt;Smart packages: you may use a single command to connect multiple features;&lt;/li&gt;
&lt;li&gt;You don‚Äôt need huge blocks of code: it‚Äôs simple and elegant.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;KOA.JS&lt;br&gt;
The Express.js development team has created another framework called Koa.js: a futuristic next-generation Node.js framework that promises to be more concise and colorful than Express.js.&lt;br&gt;
Koa.js focuses on building web applications and APIs. Its main advantage is generators, which are a great way to avoid callbacks and help developers fix bugs.&lt;br&gt;
Sites built with Koa.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Brainhub;&lt;/li&gt;
&lt;li&gt;Bulb;&lt;/li&gt;
&lt;li&gt;GAPO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Koa.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A lightweight approach to development&lt;/li&gt;
&lt;li&gt;Easy error handling using try/catch command;&lt;/li&gt;
&lt;li&gt;There‚Äôs no built middleware, so nothing makes the application havier or slows down;&lt;/li&gt;
&lt;li&gt;Rich Express ecosystem supports Koa and provides a lot of its translated packages and libraries&lt;/li&gt;
&lt;li&gt;Koa allows simply writing functions instead of spamming middleware.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NEST.JS&lt;br&gt;
Nest. JS architecture was inspired by Angular. This is the framework created to make life easier for the developer, using the right architectural approaches and dictating its own rules.&lt;br&gt;
Therefore, NestJS is not only a backend framework but also an opportunity to enter the world of advanced concepts such as DDD, Event sourcing, and microservice architecture. Everything is packaged in a lightweight and straightforward form, so the choice is yours - whether you decide to use the entire platform or just use its components.&lt;br&gt;
SITES BUILT WITH NEST.JS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adidas&lt;/li&gt;
&lt;li&gt;Autodesk&lt;/li&gt;
&lt;li&gt;Neoteric&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Nest.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Angular style syntax for the backend&lt;/li&gt;
&lt;li&gt;NodeJS ecosystem&lt;/li&gt;
&lt;li&gt;Integration with Express&lt;/li&gt;
&lt;li&gt;Fast development&lt;/li&gt;
&lt;li&gt;You would quickly switch to Nest if you used Angular or Express before&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HAPI.JS&lt;br&gt;
We consider Hapi a security focus Node.JS framework. Code quality and verification are prioritized over extensive functionality.&lt;br&gt;
Unlike Express and Restify, it has a slightly different approach, providing more functionality out of the box. The cons include full control over requests getting and detailed help with generating documentation.&lt;br&gt;
Sites built on Hapi.Js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BrainHub&lt;/li&gt;
&lt;li&gt;Gozova&lt;/li&gt;
&lt;li&gt;Boodle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advantages of Hapi.js:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Powerful input validation&lt;/li&gt;
&lt;li&gt;Functionality&lt;/li&gt;
&lt;li&gt;Caching Implementation&lt;/li&gt;
&lt;li&gt;Improved error handling system&lt;/li&gt;
&lt;li&gt;Suitable for microservice development&lt;/li&gt;
&lt;li&gt;Flexible RSS memory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CONCLUSION&lt;br&gt;
Although Node.js frameworks are not necessary for the back-end in terms of functionality, they make a big difference in development, product performance, and code quality.&lt;br&gt;
Accessing predefined models, libraries, and middleware enables developers to save time writing the same code, passing through thousands of callbacks, and struggling with front-end frameworks to implement Node.js.&lt;br&gt;
Our developers use all the frameworks above and can‚Äôt say which one is better. Some frameworks are ideally adapted for managing dynamic content, while others are best suited for creating MVP. Also, we (&lt;a href="https://exceed-team.com/tech/5-best-nodejs-frameworks?s=re&amp;amp;a=d"&gt;https://exceed-team.com/tech/5-best-nodejs-frameworks?s=re&amp;amp;a=d&lt;/a&gt;) always base our decision on the product‚Äôs requirements and features when a Node.js project comes along. It‚Äôs very important to pay attention to business needs.&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>app</category>
    </item>
    <item>
      <title>Top 15 Skills Any Successful Web Developer Should Have</title>
      <author>Creative Tim</author>
      <pubDate>Wed, 09 Jun 2021 15:03:48 +0000</pubDate>
      <link>https://dev.to/creativetim_official/top-15-skills-any-successful-web-developer-should-have-1mcf</link>
      <guid>https://dev.to/creativetim_official/top-15-skills-any-successful-web-developer-should-have-1mcf</guid>
      <description>&lt;p&gt;To get hired as a web developer, you need a specific set of skills and abilities to help you achieve high performance and success in this profession. When you‚Äôre starting out, it might be difficult to figure out what skills a web developer should have, so we put together a list of the most sought-after skills in this field.&lt;/p&gt;

&lt;p&gt;The web developer required skill set may vary depending on the employer, but you will surely come across many of the essential skills on our list while searching for a web development job. We covered both technical skills and soft skills so you can have a complete understanding of this role. Read on to find out what you need to make it as a web developer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#html-and-css"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HTML and CSS&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;HTML (HyperText Markup Language) is the core markup language of the internet. Without HTML, a browser would not know how to display the text on a webpage as elements. Most websites are written in HTML, so &lt;a href="https://codeinstitute.net/blog/what-is-html-and-why-should-i-learn-it/"&gt;web developers should be proficient in HTML&lt;/a&gt;. Luckily it is very easy to learn, and it is usually the first language any developer studies.&lt;/p&gt;

&lt;p&gt;CSS is the style sheet language that dictates how page elements should be displayed on the screen. You can use it to add stylings such as background, colors, layouts, animations, and many others. Web pages would look extremely plain without the CSS styling. You can think of CSS as the language that enhances the HTML code by controlling the appearance of a web page, so the two languages go hand in hand.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;JavaScript&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Javascript is the programming language that lets you add dynamic functionalities to a webpage (like sliders, pop-ups, photo galleries, etc.). &lt;/p&gt;

&lt;p&gt;Although it is used mainly for front-end, you can also use javascript for back-end development. Node.js is a Javascript framework that makes using Javascript for back-end possible. The idea of having a full-stack Javascript web application is very appealing to many companies, so even back-end developers should be familiar with Javascript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-and-debugging"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Testing and Debugging&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Developers should know how to test their code, which means verifying and validating that the code is bug-free. If they find errors/bugs, they shall proceed to the debugging stage, which implies fixing them.&lt;/p&gt;

&lt;p&gt;Usually, testing is done by a tester, but the developer himself sometimes does it, so this is a skill you should have. The developer always does the debugging process because he is the one that wrote the code and thus the one who can fix any bugs in it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vx_gS0Qp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/clement-helardot-95YRwf6CNw8-unsplash-1024x683.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vx_gS0Qp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/clement-helardot-95YRwf6CNw8-unsplash-1024x683.jpg" alt="Testing and Debugging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend-languages"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Back-End Languages&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Since front-end developers are not required to have any back-end language knowledge, this skill only applies to back-end developers and full-stack developers.&lt;/p&gt;

&lt;p&gt;If you want to become a back-end developer or a full-stack developer, you should learn at least one of the most sought-after back-end languages on the market. At the moment, some of the &lt;a href="https://blog.back4app.com/best-backend-language/"&gt;most popular back-end languages&lt;/a&gt; are Java, PHP, Python, Ruby on Rails, and .NET. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-code-versioning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;GIT (Code Versioning)&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Code versioning is a way to keep track of changes made to the code by creating different versions of the code any time you or a team member make changes to it. This way, if something goes wrong, you can revert to a previous version of the code. You also have a code history with all the bugs and fixes your original code went through. Every developer must know how to do code versioning, with no exceptions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"&gt;Git&lt;/a&gt; is the most popular open-source software used by developers for code version control, so being able to work in GIT is also a must-have skill for a web developer. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-optimization"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Web Optimization&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Website optimization refers to improving the user experience on websites or apps you build. This is an in-demand skill because a good user experience has the potential to convert. Website optimization includes, but is not limited to removing unused CSS and Javascript, improving page speed, image optimization, and website responsiveness.&lt;/p&gt;

&lt;p&gt;Even though it is not a dealbreaker, like other technical skills on this list, web optimization is a skill that front-end developers and full-stack developers should concern themselves with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#libraries-and-frameworks"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Libraries and Frameworks&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Libraries are sets of frequently used code written by other developers. They are reusable and can help you write your code faster and easier.&lt;/p&gt;

&lt;p&gt;Frameworks are supporting structures that you can use as a starting point for your projects. You fill the given structure with your own code, save time, and ensure your code has a great foundation.&lt;/p&gt;

&lt;p&gt;Both libraries and frameworks speed production and provide a set of best practices and rules that have been tested by countless programmers before. So you should be familiar with &lt;a href="https://www.creative-tim.com/blog/web-development/popular-web-development-frameworks/"&gt;the most popular frameworks&lt;/a&gt; for the programming languages you code in, regardless of them being front-end or back-end.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keeping-up-to-date-with-the-industry"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Keeping up to date with the Industry&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The web development industry is dynamic, and it is in continuous change. Because of that, it can be challenging to keep up with the latest new and emerging web technologies. However, you should go out of your way to do this. The industry is moving at a fast pace, and it‚Äôs not waiting for anyone who gets behind.&lt;/p&gt;

&lt;p&gt;New frameworks and tools can help you be more productive at your job, but they are valuable assets to your resume. So if you have a job that has you using the same tools and technologies day in and day out, branch out with your projects and do some learning on your own.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#other-skills"&gt;
  &lt;/a&gt;
  Other Skills
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#communication-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Communication Skills&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;While some people may think that communication skills are not that important in the web development field, this could not be farther from the truth. &lt;/p&gt;

&lt;p&gt;All developers need to have good communication skills because they come in handy when communicating with team members and writing documentation. They need to convey complex ideas in a way that even people with less technical skills can understand. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-solving"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Problem Solving&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Developers are in charge of writing code but also of solving problems that appear within that code. Both these tasks require problem-solving skills. &lt;/p&gt;

&lt;p&gt;When you look at a website or an app in its entirety, making it work flawlessly can appear like a daunting task. A skilled programmer should be able to tackle each problem individually and find solutions. So if you aim to work as a web developer, you should be inclined towards problem solving or try to cultivate this skill.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attention-to-detail"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Attention to Detail&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Being a web developer with attention to detail means that you are very thorough with your code and ensure that everything is up to your highest standards. This skill increases your productivity and makes you less likely to commit errors while coding. &lt;/p&gt;

&lt;p&gt;Attention to detail is considered a desirable skill by all employers. If you list attention to detail on your &lt;a href="https://www.creative-tim.com/blog/education/web-developer-resume/"&gt;web developer resume&lt;/a&gt;, you‚Äôll send the message that you write quality code and are worth hiring. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teamwork"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Teamwork&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Web development involves a lot of coding by oneself, but there are also many instances requiring considerable collaboration. You might need to do pair programming with someone or collaborate with more than one team member for a certain task.&lt;/p&gt;

&lt;p&gt;Knowing how to &lt;a href="https://hbr.org/2016/06/the-secrets-of-great-teamwork"&gt;work well with colleagues&lt;/a&gt; is essential for any job, including web development. Furthermore, lacking the skill to work well with other web developers could be a dealbreaker for some employers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mUA43vHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/marvin-meyer-SYTO3xs06fU-unsplash-1024x683.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mUA43vHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/marvin-meyer-SYTO3xs06fU-unsplash-1024x683.jpg" alt="teamwork"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analytical-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Analytical Skills&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Web developers need keen analytical skills to see patterns, draw conclusions, and find solutions to complex problems that might appear during the coding process. Developers also use these skills to analyze the wants and needs of clients and make decisions that align with their interests.  &lt;/p&gt;

&lt;p&gt;A good web developer will be able to think both about the big picture and about the details. Don‚Äôt panic if you feel you lack analytical skills because they can be learned or improved, but keep in mind this must be done by exercise.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#critical-thinking"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Critical Thinking&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Critical thinking gives one the ability to think clearly and rationally and understand the connections between ideas. If you are a critical thinker, you can make reliable judgments by questioning, analyzing, and evaluating facts.&lt;/p&gt;

&lt;p&gt;Critical thinking is strongly linked to problem solving, both vital skills in web development. Web developers who possess these skills can approach problems by analyzing all facts and coming up with multiple solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-management"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Time Management&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Time management is an essential skill in any job. As a developer, you need to organize your schedule and plan your tasks accordingly. Sometimes you may have tight deadlines you need to stick to or multiple tasks you need to juggle. You must also estimate the time dedicated to specific tasks and set deadlines for your projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O28SqXu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/airfocus-v89zhr0iBFY-unsplash-1024x683.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O28SqXu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/06/airfocus-v89zhr0iBFY-unsplash-1024x683.jpg" alt="time management"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;We hope you now have an accurate picture of the skills you require to become a successful web developer. There‚Äôs no need to worry if you don‚Äôt master these skills when starting out as a web developer. You can improve most of them through practice, so the more you work, the better you will become at working as a web developer.&lt;/p&gt;

&lt;p&gt;Having your personal web development projects definitely helps with cultivating these skills. Try to contribute to open source projects and develop tools or plugins.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>skills</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Amazing Course Card
Using HTML &amp; CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Wed, 09 Jun 2021 14:48:17 +0000</pubDate>
      <link>https://dev.to/nikhil27b/amazing-course-card-using-html-css-28g2</link>
      <guid>https://dev.to/nikhil27b/amazing-course-card-using-html-css-28g2</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;How are you today I created a Amazing Course Card with HTML &amp;amp; JS. This is simple course card that for beginners level I use Font awesome for icons and Poppins as a font If you find this useful in a post like and save this post also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/rNyrbdZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React &amp; Tailwind - Open-source Starters and UI Kits</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 09 Jun 2021 14:41:01 +0000</pubDate>
      <link>https://dev.to/sm0ke/react-tailwind-open-source-starters-and-ui-kits-8db</link>
      <guid>https://dev.to/sm0ke/react-tailwind-open-source-starters-and-ui-kits-8db</guid>
      <description>&lt;p&gt;Hello coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list with open-source &lt;strong&gt;React&lt;/strong&gt; projects styled with &lt;strong&gt;Tailwind&lt;/strong&gt;, a popular and trendy CSS Framework. All products mentioned in this article can be downloaded from Github (without a registration lock) and used without limitations in commercial products. For newcomers, React is a JS library created and actively supported by Facebook.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://www.admin-dashboards.com/"&gt;Admin Dashboards&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;üî• &lt;a href="https://demos.creative-tim.com/material-tailwind-dashboard-react"&gt;Material Tailwind React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://windmillui.com/dashboard-react"&gt;Windmill React Tailwind&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/notus-react"&gt;Notus React Tailwind&lt;/a&gt; - Product Page&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://www.creative-tim.com/product/material-tailwind-kit-react"&gt;Material Tailwind Kit React&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;üî• More open-source &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; üöÄüöÄ | Dev.to&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#material-tailwind-react"&gt;
  &lt;/a&gt;
  üî• Material Tailwind React
&lt;/h2&gt;

&lt;p&gt;Material Tailwind Dashboard React is a free Admin Template based on two popular front-end technologies: Tailwind CSS &amp;amp; React. It was built to simplify the developer's work and is comes with a fresh design inspired by Google's Material Design. All its components are built to fit perfectly with each other, while aligning to the material concepts.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/material-dashboard-react"&gt;Material Tailwind React&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/material-tailwind-dashboard-react"&gt;Material Tailwind React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KktY9GTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wudh5ylou3umjub6oami.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KktY9GTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wudh5ylou3umjub6oami.gif" alt="Material Tailwind - Open-source React Dashboard crafted by Creative Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#windmill-react-dashboard"&gt;
  &lt;/a&gt;
  ‚ú® Windmill React Dashboard
&lt;/h2&gt;

&lt;p&gt;Windmill Dashboard comes with a blazing fast UI styled with Tailwind, PWA support, and integrations for Charts.js and Heroicons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accessibility-first&lt;/strong&gt; - the product was developed listening to real screen readers, focus traps and keyboard navigation are available everywhere.&lt;/p&gt;

&lt;p&gt;ü¶Æ Throughly accessible (developed using screen readers)&lt;br&gt;
üåó Dark theme enabled (load even different images based on theme)&lt;br&gt;
üß© Multiple (custom) components&lt;br&gt;
‚ö° Code splitting&lt;br&gt;
UI: Tailwind CSS, Windmill React UI (components library)&lt;br&gt;
PWA-ready: delivering offline-first and app-like experience&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Q-VOJb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjohkcdady571fftq8vf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Q-VOJb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjohkcdady571fftq8vf.png" alt="React Tailwind - Windmill Dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#notus-react-tailwind"&gt;
  &lt;/a&gt;
  ‚ú® Notus React Tailwind
&lt;/h2&gt;

&lt;p&gt;Notus React is built with over frontend 100 individual components, giving you the freedom to choose and combine. All components can take variations in colors that you can easily modify using Tailwind CSS classes. If you like bright and fresh colors, you will love this Free Tailwind CSS Template! It features a huge number of components that can help you create amazing websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/notus-react"&gt;Notus React Tailwind&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/notus-react/"&gt;Notus React Tailwind&lt;/a&gt; - LIVE demo
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NazL8eE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwnrmodpotw5xtdwflp3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NazL8eE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwnrmodpotw5xtdwflp3.png" alt="React Tailwind - Notus Design."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-tailwind-kit-react"&gt;
  &lt;/a&gt;
  ‚ú® Material Tailwind Kit React
&lt;/h2&gt;

&lt;p&gt;Material Tailwind Kit React is a free and open-source UI Kit based on two popular front-end technologies: Tailwind CSS &amp;amp; React. It was built to simplify the developer's work in the quest of creating intuitive interfaces.&lt;/p&gt;

&lt;p&gt;Material Tailwind Kit React features over 120 individual components, giving you the freedom of choosing and combining. This means that there are thousands of possible combinations. All components can also take variations in color, which you can easily modify using react.js props.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/material-tailwind-kit-react"&gt;Material Tailwind Kit React&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/material-tailwind-kit-react"&gt;Material Tailwind Kit React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--haF4X9en--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64iuxj96wvns7yovdn5y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--haF4X9en--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64iuxj96wvns7yovdn5y.png" alt="Material Tailwind - Open-source React UI Kit."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for Reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://themesberg.com/blog/tutorial/react-dashboard"&gt;React Dashboard Tutorial&lt;/a&gt; - a comprehensive introduction&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/next-js-templates-a-curated-list-56fo"&gt;Next JS Templates&lt;/a&gt; - a curated list | Dev.to &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>tailwindcss</category>
      <category>opensource</category>
    </item>
    <item>
      <title>4 beginner-friendly Github Actions snippets</title>
      <author>Kathryn DiPippo</author>
      <pubDate>Wed, 09 Jun 2021 14:34:15 +0000</pubDate>
      <link>https://dev.to/pepperwood/4-beginner-friendly-github-actions-snippets-4n72</link>
      <guid>https://dev.to/pepperwood/4-beginner-friendly-github-actions-snippets-4n72</guid>
      <description>&lt;p&gt;GitHub Actions are extremely useful for those of you interested in setting up a CICD pipeline. Workflows are not only easy to implement but even easier to hook into your existing projects. These are a list of snippets that I found useful while trying to understand how to add these to my repos and how to develop my own.&lt;/p&gt;

&lt;p&gt;I validated these snippets by setting up a separate repo to test opening PRs. I also recommend using nektos/act as a CLI to validate your workflows if you want a more seamless dev experience.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nektos"&gt;
        nektos
      &lt;/a&gt; / &lt;a href="https://github.com/nektos/act"&gt;
        act
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Run your GitHub Actions locally üöÄ
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/nektos/act/wiki/img/logo-150.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJItU7Gn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/nektos/act/wiki/img/logo-150.png" alt="act-logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Overview &lt;a href="https://github.com/nektos/act/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G35m4Muu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/nektos/act/workflows/push/badge.svg%3Fbranch%3Dmaster%26event%3Dpush" alt="push"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/nektos/act?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc51839940c983b053fe98c85577fd37c7d87cd84f68095b6b124e0c3a0993af/68747470733a2f2f6261646765732e6769747465722e696d2f6e656b746f732f6163742e737667" alt="Join the chat at https://gitter.im/nektos/act"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/nektos/act" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4022b0c9439eda17d86ba84c9f1dd8ab37ec3c6d9b2506acffec43d3f9f78f31/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6e656b746f732f616374" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://github.com/jonico/awesome-runners"&gt;&lt;img src="https://camo.githubusercontent.com/18ba0b9a8b8c2c53b9dfb9481490bb802fb6a2e7f7786c4dd8db333885b3f6cd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c69737465642532306f6e2d617765736f6d652d2d72756e6e6572732d626c75652e737667" alt="awesome-runners"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;"Think globally, &lt;code&gt;act&lt;/code&gt; locally"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Run your &lt;a href="https://developer.github.com/actions/"&gt;GitHub Actions&lt;/a&gt; locally! Why would you want to do this? Two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fast Feedback&lt;/strong&gt; - Rather than having to commit/push every time you want to test out the changes you are making to your &lt;code&gt;.github/workflows/&lt;/code&gt; files (or for any changes to embedded GitHub actions), you can use &lt;code&gt;act&lt;/code&gt; to run the actions locally. The &lt;a href="https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables"&gt;environment variables&lt;/a&gt; and &lt;a href="https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#filesystems-on-github-hosted-runners"&gt;filesystem&lt;/a&gt; are all configured to match what GitHub provides.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Local Task Runner&lt;/strong&gt; - I love &lt;a href="https://en.wikipedia.org/wiki/Make_(software)" rel="nofollow"&gt;make&lt;/a&gt;. However, I also hate repeating myself. With &lt;code&gt;act&lt;/code&gt;, you can use the GitHub Actions defined in your &lt;code&gt;.github/workflows/&lt;/code&gt; to replace your &lt;code&gt;Makefile&lt;/code&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
How Does It Work?&lt;/h1&gt;
&lt;p&gt;When you run &lt;code&gt;act&lt;/code&gt; it reads in your GitHub Actions from &lt;code&gt;.github/workflows/&lt;/code&gt; and determines the set of actions that need to be run. It uses the Docker API to either pull or build the necessary images, as defined in your workflow‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nektos/act"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#list-of-snippets"&gt;
  &lt;/a&gt;
  List of Snippets
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#snippet-1"&gt;Post a comment automatically when a PR is opened&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#snippet-2"&gt;Run a PHP snippet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#snippet-3"&gt;Open a Jira ticket when Dependabot opens a PR (for Hosted Jira instances)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#snippet-4"&gt;Update empty PR body with a picture of Barney&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#post-a-comment-automatically-when-a-pr-is-opened"&gt;
  &lt;/a&gt;
  Post a comment automatically when a PR is opened
&lt;/h1&gt;

&lt;p&gt;This snippet is more useful for understanding the structure of a GitHub Actions workflow than for actual production use. Please refer to the documentation for &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository"&gt;creating a pull request template for your repository&lt;/a&gt; for a more robust alternative without using up your Actions quota.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;.github/workflows/comment.yml&lt;/code&gt;&lt;/strong&gt;, or whatever other workflow name you find appropriate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Comment&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;version_comment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Comment on a new PR with reminder&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Add PR Comment&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;add_pr_comment&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;octokit/request-action@v2.x&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;route&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;POST /repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;Change&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;me&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;comment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;you&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;want&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;automatically&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;put&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;üê∂&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#run-a-php-snippet"&gt;
  &lt;/a&gt;
  Run a PHP snippet
&lt;/h1&gt;

&lt;p&gt;For those of you (like myself) who work on teams developing primarily in PHP, it may be useful to also write your adhoc scripts in PHP for less context switching. TEST_ENV is placed here as an example environmental variable should anything about the PR's metadata need to be passed into the script.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;.github/workflows/php.yml&lt;/code&gt;&lt;/strong&gt;, or whatever other workflow name you find appropriate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Testing php scripts&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;version_comment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Comment on a new PR with reminder&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup PHP&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shivammathur/setup-php@v2&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;php-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;7.3'&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Check PHP version&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;php --version&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run test.php&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;TEST_ENV&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Hello&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;from&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ENV"&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;php scripts/test.php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;scripts/test.php&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello! This is scripts/test.php&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$github_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GITHUB_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$test_env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'TEST_ENV'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$github_token&lt;/span&gt;&lt;span class="s2"&gt; = "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$github_token&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$test_env&lt;/span&gt;&lt;span class="s2"&gt; = "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$test_env&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#open-a-jira-ticket-when-dependabot-opens-a-pr-for-hosted-jira-instances"&gt;
  &lt;/a&gt;
  Open a Jira ticket when Dependabot opens a PR (for Hosted Jira instances)
&lt;/h1&gt;

&lt;p&gt;The work for these files is that GitHub actions runs a Python script, and this script is the one responsible for firing off the Jira ticket's creation.&lt;/p&gt;

&lt;p&gt;This script will work for Jira instances that are both Cloud-based and Hosted. However, for those of you using Cloud-based instances, I encourage you to look into using the &lt;a href="https://github.com/marketplace/actions/jira-create-issue"&gt;Jira Create issue GitHub Action&lt;/a&gt; already provided by Atlassian. This will ensure you are using the latest and greatest. This feature is not available to those with Hosted instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before starting&lt;/strong&gt;, you will need to have a Jira account with a username and password that can be used on behalf of API calls. Naviate to &lt;a href="https://github.com/YOUR_USERNAME/YOUR_REPO/settings/secrets/actions"&gt;https://github.com/YOUR_USERNAME/YOUR_REPO/settings/secrets/actions&lt;/a&gt; and select "New repository secret". Save your Jira account's username as &lt;code&gt;JIRA_USER&lt;/code&gt; and your Jira account's password as &lt;code&gt;JIRA_PASS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;.github/workflows/dependabot_to_jira.yml&lt;/code&gt;&lt;/strong&gt;, or whatever other workflow name you find appropriate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Dependabot Jira Sync&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;run_jira_ticket&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create Jira Ticket for Dependabot PR&lt;/span&gt;
    &lt;span class="na"&gt;if&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;contains(github.event.pull_request.labels.*.name, 'Dependencies')&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up Python&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-python@v1&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.x'&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;python -m pip install --upgrade pip&lt;/span&gt;
        &lt;span class="s"&gt;pip install -r requirements.txt&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create Jira Ticket and Update PR Title&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_JSON&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ toJson(github) }}&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;JIRA_USER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.JIRA_USER }}&lt;/span&gt;
        &lt;span class="na"&gt;JIRA_PASS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.JIRA_PASS }}&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;python3 scripts/jira_ticket.py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;scripts/jira_ticket.py&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
Make sure that you change jiraUrl to the url of your Jira hosted instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="c1"&gt;# Get ENV variables.
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getENV&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="n"&gt;githubJson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GITHUB_JSON'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;githubToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GITHUB_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;github&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;githubJson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;jiraUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'JIRA_USER'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;jiraPass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'JIRA_PASS'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraPass&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;createJiraTicket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jiraUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraPass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRURL&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;jiraUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://backlog.YOURINSTANCE.com/rest/api/2/issue"&lt;/span&gt;
  &lt;span class="n"&gt;jiraHeaders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;jiraBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"fields"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;"project"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"EEE"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="s"&gt;"summary"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;githubPRTitle&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;githubPRURL&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; | &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;jiraUser&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"issuetype"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Ticket"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jiraUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jiraUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraPass&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jiraHeaders&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jiraBody&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;jiraResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jiraResponse&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'key'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Make API call to GitHub to change PR title.
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateGithubPRTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;githubToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubRepo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRNum&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;githubHeaders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Authorization"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"token &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;githubToken&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;githubBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;jiraKey&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; | &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;githubPRTitle&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;githubUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://api.github.com/repos/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;githubRepo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/pulls/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;githubPRNum&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;githubUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;githubBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;githubHeaders&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraPass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getENV&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="n"&gt;githubRepo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'repository'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;githubPRURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'event'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'pull_request'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'_links'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'html'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;githubPRTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'event'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'pull_request'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;githubPRNum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'event'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'pull_request'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'number'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="n"&gt;jiraKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;createJiraTicket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jiraUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraPass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRURL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jiraKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;updateGithubPRTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;githubToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jiraKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRTitle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubRepo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;githubPRNum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#update-empty-pr-body-with-a-picture-of-barney"&gt;
  &lt;/a&gt;
  Update empty PR body with a picture of Barney
&lt;/h1&gt;

&lt;p&gt;One of my coworkers used to do this whenever a PR was opened without a body for a significant amount of time. This is a fun GitHub action the team implemented together to learn more about the GitHub action development process.&lt;/p&gt;

&lt;p&gt;This snippet is different from the others in that we constructed our own connector and stored it in the repo with the workflow's file. Alternatively, if you wish for the work to be more widely available, you would keep the repo dedicated to this singular action and publish it to the &lt;a href="https://github.com/marketplace?type=actions"&gt;Marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;.github/workflows/barney.yml&lt;/code&gt;&lt;/strong&gt;, or whatever other workflow name you find appropriate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Body by Barney&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;barney_job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Barney is here&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# To use this repository's private action, you must check out the repository&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;I love you&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;./&lt;/span&gt; &lt;span class="c1"&gt;# Uses an action in the root directory&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;barney&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;barney.yml&lt;/code&gt; points to the root of the repository for where the action is located, specifically in this case an &lt;code&gt;action.yml&lt;/code&gt; file. &lt;strong&gt;Add the below file to your repo as &lt;code&gt;action.yml&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Barney'&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Barney'&lt;/span&gt;
&lt;span class="na"&gt;runs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;using&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;docker'&lt;/span&gt;
  &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Dockerfile'&lt;/span&gt;
&lt;span class="na"&gt;branding&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;heart&lt;/span&gt;
  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;red&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;action.yml&lt;/code&gt; then points to a Dockerfile, also located to the root of your repo. &lt;strong&gt;Add the below file to your repo as &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;slim&lt;/span&gt;

&lt;span class="c1"&gt;# A bunch of `LABEL` fields for GitHub to index
&lt;/span&gt;&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"com.github.actions.name"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Body by Barney"&lt;/span&gt;
&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"com.github.actions.description"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Auto-populate empty PR descriptions."&lt;/span&gt;
&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"com.github.actions.icon"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"edit"&lt;/span&gt;
&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"com.github.actions.color"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"purple"&lt;/span&gt;
&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"repository"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://github.com/YOUR_USERNAME/YOUR_REPO"&lt;/span&gt;
&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"homepage"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"http://github.com/YOUR_USERNAME/YOUR_REPO"&lt;/span&gt;
&lt;span class="n"&gt;LABEL&lt;/span&gt; &lt;span class="s"&gt;"maintainer"&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"YOUR NAME (https://github.com/YOUR_USERNAME)"&lt;/span&gt;

&lt;span class="c1"&gt;# install
&lt;/span&gt;&lt;span class="n"&gt;COPY&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;npm&lt;/span&gt; &lt;span class="n"&gt;ci&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;production&lt;/span&gt;

&lt;span class="c1"&gt;# start
&lt;/span&gt;&lt;span class="n"&gt;COPY&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;ENTRYPOINT&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"/index.js"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt; then points to &lt;code&gt;/index.js&lt;/code&gt; for where the remainder of this action fires off, another file in the root. &lt;strong&gt;Add the below file to your repo as &lt;code&gt;index.js&lt;/code&gt;.&lt;/strong&gt; The action here will comment in logs whether Barney is applied or needed on newly opened PRs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Toolkit&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;actions-toolkit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getPR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./lib/get-pr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatePR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./lib/update-pr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;Toolkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pr_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PR_BODY=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pr_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;pr_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;updatePR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Barney has been applied.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;No Barney needed.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pull_request.opened&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt; now looks to a folder &lt;code&gt;lib/&lt;/code&gt; where the rest of the files are located. Instead of storing the full implementation in one file, we still make use of separating the components of this action into parts - in the event the code needs to be revisited and refactored.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lib/&lt;/code&gt; contains two files: &lt;code&gt;get-pr.js&lt;/code&gt; for getting information about the PR and &lt;code&gt;update-pr.js&lt;/code&gt; for sending an API call with the image of Barney in the description.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;get-pr.js&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Return the PR.
 * @param {import('actions-toolkit').Toolkit} tools
 */&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pulls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pull_number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Add the below file to your repo as &lt;code&gt;update-pr.js&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Update the PR body with Barney.
 * @param {import('actions-toolkit').Toolkit} tools
 */&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updatePR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;barney_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://user-images.githubusercontent.com/1390106/66919899-3a406900-eff0-11e9-83ba-4e6c4c3dbfaf.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pulls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pull_number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;![image](&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;barney_img&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there you have it! You can expand &lt;code&gt;update-pr.js&lt;/code&gt; with whatever content you find appropriate. This snippet will specifically update an empty PR body with the below image:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QCKfJX29--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1390106/66919899-3a406900-eff0-11e9-83ba-4e6c4c3dbfaf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCKfJX29--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1390106/66919899-3a406900-eff0-11e9-83ba-4e6c4c3dbfaf.jpg" alt="Barney the Dinosaur"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>CSS nth- Selectors Variable</title>
      <author>David Dal Busco</author>
      <pubDate>Wed, 09 Jun 2021 14:33:28 +0000</pubDate>
      <link>https://dev.to/daviddalbusco/css-nth-selectors-variable-86f</link>
      <guid>https://dev.to/daviddalbusco/css-nth-selectors-variable-86f</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QAeNe2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AbCYvMc19HUEZEmZylGOoGg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QAeNe2U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AbCYvMc19HUEZEmZylGOoGg.jpeg" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@mariogogh?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Mario Gogh&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;Using CSS variables, at least when I‚Äôm writing these lines in June 2021, is not supported in media queries or selector, e.g. &lt;code&gt;:nth-child(var(--my-variable))&lt;/code&gt; does not work.&lt;/p&gt;

&lt;p&gt;This is a bit unfortunate but, not unsolvable. In some recent development I bypassed this limitation by injecting &lt;code&gt;style&lt;/code&gt; elements in the DOM, into my Web Components, in order to animate block of codes in &lt;a href="https://deckdeckgo.com"&gt;DeckDeckGo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nast1X6dKo8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Stricto sensu the following trick is not reserve to Web Components and, probably works with any elements too. I just only used it so far with such technology üòú.&lt;/p&gt;

&lt;p&gt;I will first display the idea with the help a vanilla component and, end the article with the same approach but, implemented with a &lt;a href="https://stenciljs.com/"&gt;StencilJS&lt;/a&gt; functional component.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#goal-of-the-tutorial"&gt;
  &lt;/a&gt;
  Goal Of The Tutorial
&lt;/h3&gt;

&lt;p&gt;We are going to develop a Web Component which renders a &lt;code&gt;&amp;lt;ul/&amp;gt;&lt;/code&gt; list and, which can animate the display of its entries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BDMQoGvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AV_biZYrvRQsoYUdph7U_qQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BDMQoGvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AV_biZYrvRQsoYUdph7U_qQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No semantic elements are going to be added or removed from the DOM once the component is load. The animation will happen by modifying the &lt;code&gt;style&lt;/code&gt; , more precisely by applying a different style on the selected &lt;code&gt;li:nth-child(n)&lt;/code&gt; .&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#vanilla-js"&gt;
  &lt;/a&gt;
  Vanilla JS
&lt;/h3&gt;

&lt;p&gt;To display the idea without anything else than the web, we create an &lt;code&gt;index.html&lt;/code&gt; page. It consumes the Vanilla component we are about to develop. We also add a &lt;code&gt;button&lt;/code&gt; to triggers the animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./my-component.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;my-component&amp;gt;&amp;lt;/my-component&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Next&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                 &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                 &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
              &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a separate file, called &lt;code&gt;my-component.js&lt;/code&gt; , we create the Web Component. At this point without any animation.  We declare it &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM"&gt;open&lt;/a&gt; to be able to access the shadow DOM (through &lt;code&gt;shadowRoot&lt;/code&gt; ), we create a style to hide all &lt;code&gt;li&lt;/code&gt; and define the &lt;code&gt;transition&lt;/code&gt; . Finally, we add the &lt;code&gt;ul&lt;/code&gt; list and its children &lt;code&gt;li&lt;/code&gt; .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initStyle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initElement&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hydrated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO in next chapter&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;initStyle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
          :host {
            display: block;
          }

          li {
            opacity: 0;
            transition: opacity 0.5s ease-out;
          }
        `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;initElement&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ul&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;li1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;li1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Spine&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;li2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;li2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cowboy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;li3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;li3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Shelving&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;li1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;li2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;li3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, if we open our example in a browser (&lt;code&gt;npx serve .&lt;/code&gt;), we should find a component, with a hidden content, and a button which has no effect yet. Not much to see, but that‚Äôs a start üòÅ.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8GEtLdYc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AODDEgNnoHmsbGwgIPuT5zA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8GEtLdYc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AODDEgNnoHmsbGwgIPuT5zA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To develop the animation, we have to keep track of the displayed &lt;code&gt;li&lt;/code&gt; , that‚Äôs why we add a state (&lt;code&gt;index&lt;/code&gt;) to the component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks to it, we can implement the &lt;code&gt;next()&lt;/code&gt; method, the one called from the button we added earlier in the HTML page.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Not my most beautiful code ever. Let‚Äôs agree it has only a demo purpose üòÖ.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
      li:nth-child(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;) {
        opacity: 1;
      }
    `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style#animation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;animation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What‚Äôs happening there?&lt;/p&gt;

&lt;p&gt;It first set the next &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;li&lt;/code&gt;, to be displayed and, create a CSS &lt;code&gt;selector&lt;/code&gt; to apply the &lt;code&gt;opacity&lt;/code&gt; styling. In short, this replaces the CSS variable we cannot use.&lt;/p&gt;

&lt;p&gt;Afterwards, we check if the shadowed content of our Web Component already contains a dedicated style to apply the animation. If it does, we update the style with the new value ‚Äî selector and, if not, we create a new style tag.&lt;/p&gt;

&lt;p&gt;Each time this method is call, a new &lt;code&gt;style&lt;/code&gt; is applied and, therefore another &lt;code&gt;li:nth-child(n)&lt;/code&gt; is displayed.&lt;/p&gt;

&lt;p&gt;If we open again our browser to give it a try, items should be animated among click on our button &lt;code&gt;next&lt;/code&gt; and, if we go further and observe the component in the inspector, we should notice that the shadowed &lt;code&gt;style&lt;/code&gt; element change on each method call.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BjlQXrFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AG76KWZf9do9aBnCo2rtLdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BjlQXrFT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AG76KWZf9do9aBnCo2rtLdw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#stenciljs"&gt;
  &lt;/a&gt;
  StencilJS
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs double the fun with the same example but, using a &lt;a href="https://stenciljs.com/"&gt;StencilJS&lt;/a&gt; functional component ü§ô.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can start a new project with the command line &lt;code&gt;npm init stencil&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because we are developing the exact same component, we can copy the previous HTML content (declaring the component and, adding a &lt;code&gt;button&lt;/code&gt; ) in the &lt;code&gt;./src/index.html&lt;/code&gt; of the project with an only slight small difference, the method &lt;code&gt;next()&lt;/code&gt; has to be declared and, called with async ‚Äî await. This is a requirement ‚Äî best practice of Stencil, public method of components have to be &lt;code&gt;async&lt;/code&gt; .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;dir=&lt;/span&gt;&lt;span class="s"&gt;"ltr"&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Stencil Component Starter&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/build/demo-stencil.esm.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;nomodule&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/build/demo-stencil.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Same code as in previous chapter --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;my-component&amp;gt;&amp;lt;/my-component&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Next&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
          &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;
                             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Same code as in previous chapter --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also repeat previous steps and, create first a component which does nothing else than rendering a &lt;code&gt;ul&lt;/code&gt; list and, hidden items &lt;code&gt;li&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@stencil/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`:host {
      display: block;
    }

    li {
      opacity: 0;
      transition: opacity 0.5s ease-out;
    }
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Spine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cowboy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Shelving&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By testing the component (&lt;code&gt;npm run start&lt;/code&gt;) we should get the same result too üòâ.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ICxXNkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Aqw2VVn0rZlENtjlYY9Yp1Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ICxXNkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Aqw2VVn0rZlENtjlYY9Yp1Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To keep track of the &lt;code&gt;li&lt;/code&gt; to highlight, we need a state and, the function &lt;code&gt;state&lt;/code&gt; . We add both to our component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;State&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In comparison to the Vanilla component, because we are using a bundler which simplify the development, we do not have to take care of re-rendering by our selves. Each modification of the &lt;code&gt;state&lt;/code&gt; will trigger a re-render which, ultimately, update the nodes which have to be updated (and only those who have to be updated).&lt;/p&gt;

&lt;p&gt;Still, we do have to implement the CSS selector variable. For such purpose, as briefly mentioned, we are going to use a functional component. It might work with a class component but, I feel like a functional one is well suited for the job.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Animate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FunctionalComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`
    li:nth-child(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;) {
      opacity: 1;
    }
  `&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component renders a &lt;code&gt;style&lt;/code&gt; element for the value we path as parameter, our &lt;code&gt;state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, we have to use the functional component and, bind it to our state value. Doing so, it will be re-rendered each time its value changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Animate&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Animate&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Spine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cowboy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Shelving&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Host&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs already it, we were able to replicate the same component ü•≥.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---bpXsPQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A9DoGPKFedgsKnVMQp5wWIg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bpXsPQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A9DoGPKFedgsKnVMQp5wWIg.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above component in a single block of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FunctionalComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@stencil/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Animate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FunctionalComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`
    li:nth-child(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;) {
      opacity: 1;
    }
  `&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`:host {
      display: block;
    }

    li {
      opacity: 0;
      transition: opacity 0.5s ease-out;
    }
  `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;State&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Host&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Animate&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Animate&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Spine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cowboy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Shelving&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Host&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;I am honestly not sure that this article will ever find its audience, nor do I think it may be useful to someone some day but, well, I love to use that trick üòú. In addition, it was fun to develop for demo purpose the same piece of code with Vanilla JS or Stencil.&lt;/p&gt;

&lt;p&gt;To infinity and beyond!&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;




&lt;p&gt;You can reach me on &lt;a href="https://twitter.com/daviddalbusco"&gt;Twitter&lt;/a&gt; or my &lt;a href="https://daviddalbusco.com"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Give a try to &lt;a href="https://deckdeckgo.com/"&gt;DeckDeckGo&lt;/a&gt; for your next presentations!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deckdeckgo.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4yatxfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://deckdeckgo.com/assets/meta/deckdeckgo-meta.png" alt="DeckDeckGo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webcomponents</category>
      <category>css</category>
    </item>
    <item>
      <title>Buckle Up For a Wild Decade in Cloud Computing</title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 09 Jun 2021 14:22:19 +0000</pubDate>
      <link>https://dev.to/ben/buckle-up-for-a-wild-decade-in-cloud-computing-1cff</link>
      <guid>https://dev.to/ben/buckle-up-for-a-wild-decade-in-cloud-computing-1cff</guid>
      <description>&lt;p&gt;I‚Äôm sure you were affected by &lt;a href="https://www.npr.org/2021/06/09/1004684932/fastly-tuesday-internet-outage-down-was-caused-by-one-customer-changing-setting"&gt;the Fastly outage yesterday&lt;/a&gt;. The company responded quickly, and it wasn‚Äôt the end of the world‚Äî But it was wild!&lt;/p&gt;

&lt;p&gt;If you‚Äôve been following closely, though, this was by far not the biggest story Fastly got tied into in the past year‚Äî Even if they were not really part of the new story by name the last time around. In the last fifteen months, Fastly‚Äôs stock has a low of about $14 and a high of about $136, as of writing this it‚Äôs sitting at around $60 (up 45% in the past month to boot!).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f3W8zm3o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5otwqx1bvjcgi657b45h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f3W8zm3o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5otwqx1bvjcgi657b45h.png" alt="Fastly stock price"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What causes a company whose core offering is a configuration layer which allows for slightly more efficient distribution of commodity bytes across the web to have such a chaotic financial journey as a publicly traded company? There are a lot of reasons‚Äî A pandemic which made efficient distribution of commodity bytes turn into the way we kept in touch with our loved ones. They are also a fairly young company which has typically not operated profitably, so there is a lot of speculation on their growth potential as opposed to classical evaluation of their track record.&lt;/p&gt;

&lt;p&gt;Those are all contributing factors, but Fastly‚Äôs real hurricane came in the form of &lt;a href="https://www.nytimes.com/2020/09/21/business/trump-tiktok-deal.html"&gt;Donald Trump, TikTok and the Chinese government&lt;/a&gt;. Yes‚Äî Fastly is the kind of cloud infrastructure company which rises with the tides of its customers and TikTok became a big deal in the past couple years. Its rise in popularity also raised questions about data privacy and hostile international relationships.&lt;/p&gt;

&lt;p&gt;The TikTok fiasco seems like a million years ago. For the average consumer, it played out as a bizarre question over whether the service would continue to exist. Players like Facebook were conveniently aligned in the sentiment that the Chinese government is not to be trusted, and Trump was trying to look like the tough guy‚Äî Likely without a greater agenda.&lt;/p&gt;

&lt;p&gt;Following this story was exhausting and there is no public information about how things ultimately played out, but Fastly, the company with servers all over the world responsible for compressing and distributing TikTok‚Äôs bytes landed in a fairly untenable position. The company may have had to develop a much more sophisticated philosophy around video storage and distribution with regards to international borders‚Äî Or perhaps the chaos of the theatrical bidding war over the whole thing just forced them to change vendors. Fastly‚Äî leaders in this nascent space‚Äî were both unimportant and critically important to the whole story, depending on your perspective.&lt;/p&gt;

&lt;p&gt;The situation was as fascinating as it was chaotic. The next version of this probably won‚Äôt come in the Donald Trump variety, but it will happen. Questions around how data is stored and distributed and how that relates to national sovereignty and security are truly the kind that are unprecedented and unlikely to be addressed in a ‚Äúgreater good‚Äù capacity.&lt;/p&gt;

&lt;p&gt;Censorship, spying, hacking, AI‚Äî All the stuff that is juicy enough to make the top headline in the news have huge implications in the ever-more geopolitical cloud computing landscape. It now matters where servers are, where the computing happens, and who can access them‚Äî Or it doesn‚Äôt. Lobbyists for Google, Amazon and Microsoft will certainly work hard to position the debate in whichever way will best support their cloud product suite. &lt;a href="https://www.nytimes.com/2021/05/11/podcasts/the-daily/mark-zuckerberg-tim-cook-facebook-apple.html"&gt;Facebook and Apple will argue&lt;/a&gt; for their best narrative around conscientious stewardship over our privacy and livelihoods.&lt;/p&gt;

&lt;p&gt;Most people won‚Äôt follow these stories in any capacity. Some will keep up with &lt;a href="https://podcasts.voxmedia.com/show/pivot"&gt;Scott Galloway and Kara Swisher&lt;/a&gt;‚Äôs pseudo-informed takes. And some will keep a close eye on how things unfold because part of their job involves pretending to know how GDPR works. Constructing a mental model for the interplay of government, digital security and cloud infrastructure is challenging and exhausting, on some level we just have to be along for the wild ride.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Edit: Interesting timing, Trump's unintelligible TikTok order was actually &lt;a href="https://www.nytimes.com/2021/06/09/us/politics/biden-tiktok-ban.html"&gt;reversed this morning as I was writing this&lt;/a&gt;. This doesn't change the premise in any way. This is only the beginning of a complicated longterm matter, but the next chapters in the story will be slightly more... traditionally political.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I centered some themes of this post in Fastly‚Äôs &lt;em&gt;stock price&lt;/em&gt; which is a good measure for chaos, but somewhat unimportant in all of this. But from that financial perspective, they are an interesting study.&lt;/p&gt;

&lt;p&gt;Fastly is on the bleeding edge and big enough to basically take down the whole Internet when a customer enters incorrect input (fun fact, I &lt;em&gt;personally&lt;/em&gt; caused a similar but much smaller outage on Heroku one time‚Äî but that is another story), but small enough that they can‚Äôt lobby or have a say in the Trump/TikTok madness. All in all I think they are in a great position to keep innovating in edge computing and benefit from this chaos in the end. I‚Äôm not a professional investor but I‚Äôm long Fastly, for what it‚Äôs worth. üòÖ&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>fastly</category>
      <category>aws</category>
      <category>news</category>
    </item>
    <item>
      <title>Should You Really be Coding in Dark Mode?</title>
      <author>Saji Wang</author>
      <pubDate>Wed, 09 Jun 2021 14:16:51 +0000</pubDate>
      <link>https://dev.to/codesphere/should-you-really-be-coding-in-dark-mode-4ng8</link>
      <guid>https://dev.to/codesphere/should-you-really-be-coding-in-dark-mode-4ng8</guid>
      <description>&lt;p&gt;There are few debates as contentious in the development and UX world as color schemes. Among developers, however, there seems to be a pretty significant skew towards coding in a light on dark mode (&lt;a href="https://css-tricks.com/poll-results-light-on-dark-is-preferred/"&gt;This poll&lt;/a&gt; found that ‚Öî of surveyed developers prefer to use a dark mode in their code editor).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UJZ5SGo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wlt8u1cv5hd8ts4nvj5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UJZ5SGo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7wlt8u1cv5hd8ts4nvj5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dark mode advocates cite a number of benefits, including reduced eye strain, better sleep, and reduced power consumption. While many of the arguments for dark mode undoubtedly have merit, there is far from a scientific consensus on many of its benefits.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#a-little-bit-of%C2%A0history"&gt;
  &lt;/a&gt;
  A Little Bit of¬†History
&lt;/h3&gt;

&lt;p&gt;While we might think of dark mode as a relatively new trend, it was actually the original color scheme that was used for computers. Most early computers used light text on dark background in order to save power. As computers became more consumer-friendly, however, developers began to use black text on white backgrounds to imitate the black ink on white paper that most people were used to.&lt;/p&gt;

&lt;p&gt;More recently, countless devices, websites, and apps have added support for dark mode for both optical and aesthetic reasons. Software developers, who spend most of their work time staring at computer screens, have been some of the most fervent advocates for dark mode.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-eye-strain-and-readability"&gt;
  &lt;/a&gt;
  1. Eye Strain and Readability
&lt;/h3&gt;

&lt;p&gt;The first argument for dark mode that's worth taking a look at the claim that dark mode is better for your eyes. While there is no doubt that using light mode in a dark room can be blinding, there also seems to be evidence that our brains are just better at reading and comprehending black text on a white screen.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://www.researchgate.net/publication/264903980_Smaller_pupil_size_and_better_proofreading_performance_with_positive_than_with_negative_polarity_displays"&gt;A 2013 study&lt;/a&gt; by Psychologist Dr. Cosima Piepenbrock looked at how adults with normal vision performed at visual acuity and proofreading text across dark and light color schemes. The study found that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Pupil sizes were smaller and proofreading performance was better with positive(Dark on Light) than with negative(Light on Dark) polarity displays"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, for substantial digital tasks where you are attentively reading text(Such as coding), *&lt;em&gt;having dark text on a light background (i.e. light mode) can help you focus and comprehend better. *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What this means in practice is that your eyes and brain may have to work harder to read and write code if your IDE is in dark mode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-blue-light-and-sleep"&gt;
  &lt;/a&gt;
  2. Blue Light and Sleep
&lt;/h3&gt;

&lt;p&gt;Another commonly cited claim is that using your IDE in dark mode reduces blue light consumption, and therefore can help you sleep. While dark mode definitely does reduce blue light, blue light may not be the primary culprit that actually messes up your sleep schedule.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sciencedaily.com/releases/2019/12/191216173654.htm"&gt;A 2019 study&lt;/a&gt; by the University of Manchester found that blocking blue light only slightly improved people‚Äôs sleep patterns. Instead, the real culprit is the use of warmer colors(Like reds and yellows) at night, which trick our brain into thinking it's daytime. &lt;/p&gt;

&lt;p&gt;If you want to get better sleep, &lt;strong&gt;dark mode may in fact help, but the real solution is to not use screens altogether before going to bed.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-power-consumption"&gt;
  &lt;/a&gt;
  3. Power Consumption
&lt;/h3&gt;

&lt;p&gt;Another argument for using dark mode in your IDE is that it can save you money on your power bill. If you are using an OLED display, which most modern monitors do, then this is definitely true. &lt;/p&gt;

&lt;p&gt;It is probably important to note, however, that if you are developing software that is computationally heavy, like rendering 3D graphics or training and using machine learning models, the reduced power consumption from dark mode probably won‚Äôt make any sort of noticeable dent in your power bill. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-accessibility"&gt;
  &lt;/a&gt;
  4. Accessibility
&lt;/h3&gt;

&lt;p&gt;Regardless of what you personally prefer while you code, you should always add support for both dark and light modes in the software that you build. Many people who have certain color blindness or eye conditions can find one of these themes extremely hard or even impossible to use. Giving your users flexibility is therefore very important.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In summation, the jury is still out on whether dark mode is actually better for coding. While it might save you a tiny amount of power and, if you are using it at night, marginally help your sleep schedule, these benefits don‚Äôt seem to be that substantial. In addition, &lt;strong&gt;reading dark text on a light background may help you read and write code more efficiently.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your theme therefore should come down to what is best for you, because there is not a scientific consensus that one color scheme is going to be better than the other. If you think dark mode looks sleeker and you are doing a lot of coding at night or in the dark, then go ahead and use dark mode. If you prefer the readability of dark text on a light background, then go ahead and use light mode. &lt;/p&gt;

&lt;p&gt;So what do you prefer and why? Personally, I think dark mode is more aesthetically pleasing but I definitely notice how it can be harder to read.&lt;/p&gt;

&lt;p&gt;Let us know in the comments what you think!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>productivity</category>
      <category>darkmode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Python Best Practices</title>
      <author>Arun Kumar</author>
      <pubDate>Wed, 09 Jun 2021 14:05:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/python-best-practices-3mep</link>
      <guid>https://dev.to/aws-builders/python-best-practices-3mep</guid>
      <description>&lt;p&gt;&lt;strong&gt;What are the goals here?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Define a set of advice for working with Python in the context of AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In what context is this guide written?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Best practices with Python‚Ä¶&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As a scripting tool‚Ää‚Äî‚ÄäBoto3 calls to AWS APIs.&lt;/li&gt;
&lt;li&gt;As a language for Lambda in ‚ÄúServerless‚Äù consumable‚Ää‚Äî‚ÄäLambda function code, with 3rd party dependencies.&lt;/li&gt;
&lt;li&gt;As a language for Lambda in infra pipeline‚Ää‚Äî‚ÄäHousekeeping, CFN Custom Resources.
Compilers, Runners, Deployment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Required Reading&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Python space&lt;br&gt;
[&lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;]&lt;br&gt;
[&lt;a href="https://www.python.org/doc/sunset-python-2/"&gt;https://www.python.org/doc/sunset-python-2/&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;AWS Space&lt;br&gt;
[&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html"&gt;https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html&lt;/a&gt;]&lt;br&gt;
[&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-python.html"&gt;https://docs.aws.amazon.com/lambda/latest/dg/lambda-python.html&lt;/a&gt;]&lt;br&gt;
[&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html"&gt;https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for Python Versions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python 2 has been Sunsetted‚Ää‚Äî‚Ääthe sunset date has now passed; it was January 1st, 2020.&lt;/li&gt;
&lt;li&gt;Be mindful of external dependencies between Python 2 and 3.
Conclusion: Use Python 3 unless you can‚Äôt.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for Tooling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. SublimeText3&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/setting-up-sublime-text-3-for-full-stack-python-development/"&gt;https://realpython.com/setting-up-sublime-text-3-for-full-stack-python-development/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;yamllint&lt;/li&gt;
&lt;li&gt;cfn-lint&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mgaitan/sublime-rst-completion%E2%80%8A%E2%80%94%E2%80%8ASee"&gt;https://github.com/mgaitan/sublime-rst-completion‚Ää‚Äî‚ÄäSee&lt;/a&gt; ‚ÄúMagic Tables‚Äù‚Ää‚Äî‚Ääso good!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;b. VSCode&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for CLI (i.e. Bash)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use the ‚Äúif main‚Äù statement&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Put your script‚Äôs logic into a ‚Äúmain‚Äù method.&lt;/li&gt;
&lt;li&gt;Then use the ‚Äúif main‚Äù convention to call that method if invoked via the CLI (i.e. python3 myscript.py)
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == '__main__':
    main(__get_args())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Best Practices for AWS APIs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. Use Boto3&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Has its own retry logic IIRC&lt;/li&gt;
&lt;li&gt;Configurable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;b. Cater for failure scenarios&lt;/p&gt;

&lt;p&gt;Configuring Boto3&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from botocore.config import Config

__sts_client = boto3.client(
    'sts',
    config=Config(connect_timeout=15, read_timeout=15, retries=dict(max_attempts=10))
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Best Practices for AWS Lambda&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can write python code that can work either as CLI or via AWS invocation&lt;/p&gt;

&lt;p&gt;a. Can put a ‚Äúcli.py‚Äù alongside main.py, and invoke that way&lt;/p&gt;

&lt;p&gt;That simulates an AWS Step Function (which usually invokes the Lambda)&lt;/p&gt;

&lt;p&gt;b. Can put an ‚Äúif main‚Äù statement for running via CLI&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be mindful of limits&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. Account level&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;250 ENIs per Account (soft limit, talk to your AWS TAM)&lt;/li&gt;
&lt;li&gt;1,000 concurrent executions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;b. Use provisioned concurrency to avoid cold-start workarounds&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Needs Hyperplane&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for Serverless&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Packaging code&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a self-contained zip for each lambda, AFTER installing pip modules
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Code:
  S3Key:
    Fn::Pipeline::FileS3Key:
      Path: consumer.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Be mindful of AWS Lambda limitations on max sizes
[&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html"&gt;https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Using common-pip-* modules&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A way to share modules between lambdas in the SAME repo&lt;/li&gt;
&lt;li&gt;Can reference 3rd party modules&lt;/li&gt;
&lt;li&gt;Can reference common-pip modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dnspython
git+https://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/common-pip-log@master#egg=common-pip-log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the usage in your main.py code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the first import path to be the "lib" subfolder of the lambda
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from os.path import dirname, abspath
from os import environ
import sys
sys.path.insert(0, "{}/lib".format(dirname(abspath(__file__))))

import log

log.info('env', dict(os.environ))  # os.environ is not serializable by itself, cast to dictionary.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Best Practices for Code and Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Zen of Python&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;‚ÄúWrite with future developers in mind‚Äù‚Ää‚Äî‚Ääthey have to clean up your messes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Note that ‚Äúfuture developer‚Äù might very well be you, 6 months later after you‚Äôve forgotten everything you did.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs Python‚Äôs:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TODO‚Ää‚Äî‚ÄäGo through each one and give reference examples.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:/Users/ak&amp;gt;python
Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&amp;gt;&amp;gt;&amp;gt; import this

The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Write your code as modules&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be mindful what gets executed when your python file is imported&lt;/li&gt;
&lt;li&gt;This has a direct impact with Sphinx, which imports your code to generate documentation of it&lt;/li&gt;
&lt;li&gt;This allows you to share code, perhaps even creating a ‚Äúcommon‚Äù module that other programs can import.&lt;/li&gt;
&lt;li&gt;Be careful‚Ää‚Äî‚Ääthat makes you the de-facto maintainer of that module!&lt;/li&gt;
&lt;li&gt;It needs examples&lt;/li&gt;
&lt;li&gt;It needs unit tests&lt;/li&gt;
&lt;li&gt;It needs a CICD process&lt;/li&gt;
&lt;li&gt;It needs a todo list of enhancements (I use README.md to start with)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Reduce the scope of your module interface&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use ‚Äúnon-public‚Äù (aka ‚Äúprivate‚Äù) naming convention for internal attributes and methods NOT intended for use outside the module&lt;/li&gt;
&lt;li&gt;This should be your default position, then you slowly refactor stuff to public, as needed over time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[&lt;a href="https://www.python.org/dev/peps/pep-0008/#method-names-and-instance-variables"&gt;https://www.python.org/dev/peps/pep-0008/#method-names-and-instance-variables&lt;/a&gt;]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use a single leading underscore for ‚Äúnon-public‚Äù method names
E.g. &lt;code&gt;_get_file_contents&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Dealing with strings as booleans&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You might be passed a string property that is supposed to be a boolean. The value might be boolean-ish‚Ää‚Äî‚Äätrue/True/TRUE/1/Yes/On/etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def _s_to_bool(input):
    """Implicit default of false."""
    return input.lower() in ['1', 'true', 'yes', 'on']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;When writing comments, focus on the ‚Äúwhy‚Äù rather than the ‚Äúwhat‚Äù&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nothing more frustrating when code doesn‚Äôt explain why something has been done‚Ää‚Äî‚Ääyou need context!&lt;/p&gt;

&lt;p&gt;Example, see ‚ÄúScanIndexForward‚Äù below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;response_iterator = dynamodb_paginator.paginate(
    TableName='core-automation-master-api-db-items',
    IndexName='parent-created_at-index',
    ExpressionAttributeNames=expression_attribute_names,
    ExpressionAttributeValues=expression_attribute_values,
    KeyConditionExpression='parent_prn = :v1',
    ProjectionExpression="#p,#n,#s,#c,#u",
    ScanIndexForward=False  # Process newer builds first (descending order) - important for logic!
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If that comment didn‚Äôt make it clear to future developers that there‚Äôs a reason for ScanIndexForward=False, a bug may be created in future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consider the strategy pattern for running code in different contexts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I.e. maybe you use a strategy with your log module so that you don‚Äôt output logs locally in JSON, but in Cloud you do, for CloudWatch&lt;/li&gt;
&lt;li&gt;Another example‚Ää‚Äî‚Ääin AWS Lambda context, you get credentials from AWS Secrets Manager, or Parameter Store. Locally, you rely on environment variables instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for Data Modelling and Access&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚ÄúUpsert‚Äù is a good feature at the low level&lt;/li&gt;
&lt;li&gt;For Dynamodb‚Ää‚Äî‚Ääfor scripts I generally don‚Äôt bother with ORM/etc, I just write Boto3 API calls&lt;/li&gt;
&lt;li&gt;For example use with Marshmallow + PynamoDB.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Python libraries to help&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marshmallow.readthedocs.io/en/stable/"&gt;https://marshmallow.readthedocs.io/en/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pynamodb.readthedocs.io/en/latest/"&gt;https://pynamodb.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlalchemy.org/"&gt;https://www.sqlalchemy.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for Testing&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use pytest for unit-testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good feature set:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auto-discovery of tests&lt;/li&gt;
&lt;li&gt;Fixtures&lt;/li&gt;
&lt;li&gt;Plugins&lt;/li&gt;
&lt;li&gt;Coverage reporting etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Use Selenium Bindings for Python in CodeBuild&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://selenium-python.readthedocs.io/"&gt;https://selenium-python.readthedocs.io/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for Dependency Management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use pipenv to explicitly manage and validate dependencies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helps to keep your dependencies consistent via lockfile (i.e. repeat builds of same code on different days)&lt;/li&gt;
&lt;li&gt;Lockfile also has checksum feature to ensure the correct package is downloaded in future (i.e. can detect future compromises)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Best Practices for security&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use the ‚Äúsafe‚Äù methods for YAML/JSON/XML parsers. Example:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;client = sys.argv[1]

with open('../../{}-config/hosted-zones.yaml'.format(client)) as f:
    client_vars = yaml.safe_load(f.read())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Best Practices for User Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a. Use Sphinx&lt;br&gt;
Use an editor plugin to help with formatting, especially tables&lt;/p&gt;

&lt;p&gt;b. Focus on a few key areas:&lt;/p&gt;

&lt;p&gt;Goals / context&lt;br&gt;
High level design&lt;br&gt;
Use cases&lt;br&gt;
Working examples for people to pull apart and re-use&lt;/p&gt;

</description>
      <category>aws</category>
      <category>python</category>
      <category>bestpractices</category>
      <category>boto3</category>
    </item>
    <item>
      <title>5 NPM Packages to Secure Your Node.js Backend in 5 Minutes </title>
      <author>Nitin Ranganath</author>
      <pubDate>Wed, 09 Jun 2021 13:59:17 +0000</pubDate>
      <link>https://dev.to/itsnitinr/5-npm-packages-to-secure-your-node-js-backend-in-5-minutes-2732</link>
      <guid>https://dev.to/itsnitinr/5-npm-packages-to-secure-your-node-js-backend-in-5-minutes-2732</guid>
      <description>&lt;p&gt;When you start to focus on the performance and security of your backend alongside the other features, you know that you're growing and maturing as a developer. It goes without saying but having some sort of security measure against common attacks is essential, even if it's just a hobby project.&lt;/p&gt;

&lt;p&gt;If you're new to security or want to quickly get started with some basic protection, these 5 NPM packages will help you get started in just a few minutes. The best part about these packages is that all you have to do is just install them and use them as middleware. It's that easy! &lt;/p&gt;

&lt;p&gt;In a hurry or just need the list of packages? Here are the 5 NPM packages that I'll be going over:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package Name&lt;/th&gt;
&lt;th&gt;Package Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;helmet&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/helmet"&gt;NPM Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xss-clean&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/xss-clean"&gt;NPM Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hpp&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/hpp"&gt;NPM Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;express-mongo-sanitize&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/express-mongo-sanitize"&gt;NPM Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;express-rate-limit&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/express-rate-limit"&gt;NPM Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#helmet"&gt;
  &lt;/a&gt;
  Helmet
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What it does:&lt;/strong&gt; Sets security-related HTTP response headers to protect against some well-known web vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it protect against:&lt;/strong&gt; Cross-site scripting attacks, cross-site injections, clickjacking, MIME sniffing and targeted attacks towards Express servers by disabling the &lt;code&gt;X-Powered-By&lt;/code&gt; header.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to use it:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install helmet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;helmet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helmet&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Using helmet middleware&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;helmet&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/helmetjs"&gt;
        helmetjs
      &lt;/a&gt; / &lt;a href="https://github.com/helmetjs/helmet"&gt;
        helmet
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Help secure Express apps with various HTTP headers
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Helmet&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://badge.fury.io/js/helmet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c25e172959765545eb8fd310e4c65007fc913b551ca6fcff4d0ad84b3a74d2b/68747470733a2f2f62616467652e667572792e696f2f6a732f68656c6d65742e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/helmetjs/helmet" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7ab19b285def6c03995b54d1daeb1903512d52fb61d6ad7258ac35d804b2820a/68747470733a2f2f64617669642d646d2e6f72672f68656c6d65746a732f68656c6d65742e737667" alt="npm dependency status"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhelmetjs%2Fhelmet?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca0f62740ff445933e67bfd9ba9f2e419be6549003bfa3b7e2735d7160c74ac6/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f67697425324268747470732533412532462532466769746875622e636f6d25324668656c6d65746a7325324668656c6d65742e7376673f747970653d736869656c64" alt="FOSSA Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Helmet helps you secure your Express apps by setting various HTTP headers. &lt;em&gt;It's not a silver bullet&lt;/em&gt;, but it can help!&lt;/p&gt;
&lt;h2&gt;
Quick start&lt;/h2&gt;
&lt;p&gt;First, run &lt;code&gt;npm install helmet --save&lt;/code&gt; for your app. Then, in an Express app:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;express&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"express"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;helmet&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"helmet"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;app&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;express&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;helmet&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// ...&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
How it works&lt;/h2&gt;
&lt;p&gt;Helmet is &lt;a href="https://github.com/senchalabs/connect"&gt;Connect&lt;/a&gt;-style middleware, which is compatible with frameworks like &lt;a href="https://expressjs.com/" rel="nofollow"&gt;Express&lt;/a&gt;. (If you need support for other frameworks or languages, &lt;a href="https://helmetjs.github.io/see-also/" rel="nofollow"&gt;see this list&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The top-level &lt;code&gt;helmet&lt;/code&gt; function is a wrapper around 15 smaller middlewares, 11 of which are enabled by default.&lt;/p&gt;
&lt;p&gt;In other words, these two things are equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// This...&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;helmet&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// ...is equivalent to this:&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;helmet&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/helmetjs/helmet"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#xssclean"&gt;
  &lt;/a&gt;
  XSS-Clean
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What it does:&lt;/strong&gt; Sanitizes user input coming from POST request body (&lt;code&gt;req.body&lt;/code&gt;), GET request query (&lt;code&gt;req.query&lt;/code&gt;) and URL parameters (&lt;code&gt;req.params&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it protect against:&lt;/strong&gt; Cross-site scripting / XSS attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to use it:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install xss-clean
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;xssClean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xss-clean&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Protect against XSS attacks, should come before any routes&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xssClean&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jsonmaur"&gt;
        jsonmaur
      &lt;/a&gt; / &lt;a href="https://github.com/jsonmaur/xss-clean"&gt;
        xss-clean
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Middleware to sanitize user input
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Node.js XSS-Clean&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/jsonmaur/xss-clean" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2dd601cd11b31f76d0013a8cfc4123ccee1e3771994a200157b9f68df9e2fe52/68747470733a2f2f7472617669732d63692e6f72672f6a736f6e6d6175722f7873732d636c65616e2e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/jsonmaur/xss-clean?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d90a8bb9adc07b9564693134f12f501002bdc8a2be6f3adf64e4e93684dec58e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a736f6e6d6175722f7873732d636c65616e2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Node.js Connect middleware to sanitize user input coming from POST body, GET queries, and url params. Works with &lt;a href="http://expressjs.com/" rel="nofollow"&gt;Express&lt;/a&gt;, &lt;a href="http://restify.com/" rel="nofollow"&gt;Restify&lt;/a&gt;, or any other &lt;a href="https://github.com/senchalabs/connect"&gt;Connect&lt;/a&gt; app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jsonmaur/xss-clean/master/#use"&gt;How to Use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jsonmaur/xss-clean/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
How to Use&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install xss-clean --save&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;restify&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'restify'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;xss&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'xss-clean'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;app&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;restify&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;createServer&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;restify&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;bodyParser&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;/* make sure this comes before any routes */&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;xss&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;listen&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;8080&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This will sanitize any data in &lt;code&gt;req.body&lt;/code&gt;, &lt;code&gt;req.query&lt;/code&gt;, and &lt;code&gt;req.params&lt;/code&gt;. You can also access the API directly if you don't want to use as middleware.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;clean&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'xss-clean/lib/xss'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;clean&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;cleaned&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;clean&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-c"&gt;// will return "&amp;amp;lt;script&amp;gt;&amp;amp;lt;/script&amp;gt;"&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/jsonmaur/xss-clean/master/LICENSE"&gt;MIT&lt;/a&gt; ¬© &lt;a href="http://maur.co" rel="nofollow"&gt;Jason Maurer&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jsonmaur/xss-clean"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hpp"&gt;
  &lt;/a&gt;
  HPP
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What it does:&lt;/strong&gt; Puts the array parameters in &lt;code&gt;req.query&lt;/code&gt; and/or &lt;code&gt;req.body&lt;/code&gt; asides and just selects the last parameter value to avoid HTTP Parameter Pollution attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it protect against:&lt;/strong&gt; Bypassing input validations and denial of service (DoS) attacks by uncaught &lt;code&gt;TypeError&lt;/code&gt; in async code, leading to server crash.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to use it:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install hpp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hpp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hpp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Protect against HPP, should come before any routes&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hpp&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/analog-nico"&gt;
        analog-nico
      &lt;/a&gt; / &lt;a href="https://github.com/analog-nico/hpp"&gt;
        hpp
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Express middleware to protect against HTTP Parameter Pollution attacks
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
HPP&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://expressjs.com" rel="nofollow"&gt;Express&lt;/a&gt; middleware to &lt;strong&gt;protect against HTTP Parameter Pollution attacks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/analog-nico/hpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/298cb8d2fe348b23f279fed74bc4562a9db6967fe66d2d79576bd5b508149722/68747470733a2f2f7472617669732d63692e6f72672f616e616c6f672d6e69636f2f6870702e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/analog-nico/hpp?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e113d154ed772ef1b38a6db1effb90b05c21f0760f2604e63a06a0d5225a8c43/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f616e616c6f672d6e69636f2f6870702f62616467652e706e67" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://david-dm.org/analog-nico/hpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/689e89902a1e0e009bfaf93beb54eba92d8b4be4fd3e4fcb8b0a2359622c4fe0/68747470733a2f2f64617669642d646d2e6f72672f616e616c6f672d6e69636f2f6870702e737667" alt="Dependency Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Why?&lt;/h2&gt;
&lt;p&gt;Let &lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=48" rel="nofollow"&gt;Chetan Karande's slides&lt;/a&gt; do the explaining:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=48" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMA1bUE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/analog-nico/hpp/master/img/slide48.jpg" alt="Slide 48"&gt;&lt;/a&gt;
&lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=49" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w5GDaL6g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/analog-nico/hpp/master/img/slide49.jpg" alt="Slide 49"&gt;&lt;/a&gt;
&lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=50" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDCJhyOl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/analog-nico/hpp/master/img/slide50.jpg" alt="Slide 50"&gt;&lt;/a&gt;
&lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=54" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J66qB-13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/analog-nico/hpp/master/img/slide54.jpg" alt="Slide 54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;...and exploits may allow &lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=57" rel="nofollow"&gt;bypassing the input validation&lt;/a&gt; or even result in &lt;a href="https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=55" rel="nofollow"&gt;denial of service&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
And HPP solves this how exactly?&lt;/h2&gt;
&lt;p&gt;HPP puts array parameters in &lt;code&gt;req.query&lt;/code&gt; and/or &lt;code&gt;req.body&lt;/code&gt; aside and just selects the last parameter value. You add the middleware and you are done.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://npmjs.org/package/hpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba639d11a633c34546f0c683c9bc21c63d042f2b511be359f816e8d133c5d7f3/68747470733a2f2f6e6f6465692e636f2f6e706d2f6870702e706e673f646f776e6c6f6164733d74727565" alt="NPM Stats"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a module for node.js and io.js and is installed via npm:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install hpp --save&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;Add the HPP middleware like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// ...&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;hpp&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'hpp'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// ...&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;bodyParser&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;urlencoded&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt; &lt;span class="pl-c"&gt;// Make sure the body is parsed beforehand.&lt;/span&gt;

&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;hpp&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt; &lt;span class="pl-c"&gt;// &amp;lt;- THIS IS THE NEW LINE&lt;/span&gt;

&lt;span class="pl-c"&gt;// Add your own middlewares afterwards, e.g.:&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;get&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'/search'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/analog-nico/hpp"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#express-mongo-sanitize"&gt;
  &lt;/a&gt;
  Express Mongo Sanitize
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What it does:&lt;/strong&gt; Searches for any keys in objects that begin with a &lt;code&gt;$&lt;/code&gt; sign or contain a &lt;code&gt;.&lt;/code&gt; from &lt;code&gt;req.body&lt;/code&gt;, &lt;code&gt;req.query&lt;/code&gt; or &lt;code&gt;req.params&lt;/code&gt; and either removes such keys and data or replaces the prohibited characters with another allowed character.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it protect against:&lt;/strong&gt; MongoDB Operator Injection. Malicious users could send an object containing a &lt;code&gt;$&lt;/code&gt; operator, or including a &lt;code&gt;.&lt;/code&gt;, which could change the context of a database operation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to use it:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express-mongo-sanitize
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoSanitize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express-mongo-sanitize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Remove all keys containing prohibited characters&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mongoSanitize&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/fiznool"&gt;
        fiznool
      &lt;/a&gt; / &lt;a href="https://github.com/fiznool/express-mongo-sanitize"&gt;
        express-mongo-sanitize
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Sanitize your express payload to prevent MongoDB operator injection.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Express Mongoose Sanitize&lt;/h1&gt;
&lt;p&gt;Express 4.x middleware which sanitizes user-supplied data to prevent MongoDB Operator Injection.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/fiznool/express-mongo-sanitize/workflows/Node.js%20CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMzj-Qrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/fiznool/express-mongo-sanitize/workflows/Node.js%2520CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/npm/v/express-mongo-sanitize" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81332616a56d2a94d47eb80447d000e85e7fff4efd97c5629a9fc55fd8cf7279/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f657870726573732d6d6f6e676f2d73616e6974697a65" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/npm/dw/express-mongo-sanitize?color=blue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b07468e80ac0b87d66712adf814dd07e59219740eb282aeeeb0d7b211674d0c9/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f657870726573732d6d6f6e676f2d73616e6974697a653f636f6c6f723d626c7565" alt="npm downloads per week"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/fiznool/express-mongo-sanitize" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15f78f42f80fe1786b78a51a63021d9c809439a7f937be826fa7a48ef5ffd530/68747470733a2f2f64617669642d646d2e6f72672f66697a6e6f6f6c2f657870726573732d6d6f6e676f2d73616e6974697a652e737667" alt="Dependency Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/fiznool/express-mongo-sanitize#info=devDependencies" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a73f4dbb18c9e43dab2c120eaa8a917f988bd807020d9554b4c0ed797e5e722e/68747470733a2f2f64617669642d646d2e6f72672f66697a6e6f6f6c2f657870726573732d6d6f6e676f2d73616e6974697a652f6465762d7374617475732e737667" alt="devDependency Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install express-mongo-sanitize&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Add as a piece of express middleware, before defining your routes.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;express&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'express'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;bodyParser&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'body-parser'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;mongoSanitize&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'express-mongo-sanitize'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;app&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;express&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;bodyParser&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;urlencoded&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;extended&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;bodyParser&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;json&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// To remove data, use:&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;mongoSanitize&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// Or, to replace prohibited characters with _, use:&lt;/span&gt;
&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;
  &lt;span class="pl-s1"&gt;mongoSanitize&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;replaceWith&lt;/span&gt;: &lt;span class="pl-s"&gt;'_'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;code&gt;onSanitize&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;onSanitize&lt;/code&gt; callback is called after the request's value was sanitized.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;use&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;
  &lt;span class="pl-en"&gt;mongoSanitize&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-en"&gt;onSanitize&lt;/span&gt;: &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/fiznool/express-mongo-sanitize"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#express-rate-limit"&gt;
  &lt;/a&gt;
  Express Rate Limit
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What does it do:&lt;/strong&gt; Used to limit IP addresses from making repeated requests to API endpoints. An example would be to rate limit an endpoint that is responsible for sending password reset emails, which can incur additional fees.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does it protect against:&lt;/strong&gt; Brute force, denial of service (DoS) and distributed denial of service (DDoS) attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to use it:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express-rate-limit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rateLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express-rate-limit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Restrict all routes to only 100 requests per IP address every 1o minutes&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;limiter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rateLimit&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;windowMs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c1"&gt;// 10 minutes&lt;/span&gt;
    &lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;                     &lt;span class="c1"&gt;// 100 requests per IP&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;limiter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nfriedly"&gt;
        nfriedly
      &lt;/a&gt; / &lt;a href="https://github.com/nfriedly/express-rate-limit"&gt;
        express-rate-limit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Basic rate-limiting middleware for express
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Express Rate Limit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/nfriedly/express-rate-limit/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UheL5WKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/nfriedly/express-rate-limit/workflows/Node.js%2520CI/badge.svg" alt="Node.js CI"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/express-rate-limit" title="View this project on NPM" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c43e9c94efa0ecea3d1640141b634793abe15e682cd8752f45557df2910cd72/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f657870726573732d726174652d6c696d69742e737667" alt="NPM version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/express-rate-limit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b28345c06b227c65085cf4c58dc12507eda3bd9af3963c16cd42c6d6d591e832/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f657870726573732d726174652d6c696d6974" alt="npm downloads"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basic rate-limiting middleware for Express. Use to limit repeated requests to public APIs and/or endpoints such as password reset.&lt;/p&gt;
&lt;p&gt;Plays nice with &lt;a href="https://www.npmjs.com/package/express-slow-down" rel="nofollow"&gt;express-slow-down&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: this module does not share state with other processes/servers by default. It also buckets all requests to an internal clock rather than starting a new timer for each end-user. It's fine for abuse-prevention but might not produce the desired effect when attempting to strictly enforce API rate-limits or similar. If you need a more robust solution, I recommend using an external store:&lt;/p&gt;
&lt;h3&gt;
Stores&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Memory Store &lt;em&gt;(default, built-in)&lt;/em&gt; - stores hits in-memory in the Node.js process. Does not share state with other servers or processes, and does not start a separate timer for each end user.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://npmjs.com/package/rate-limit-redis" rel="nofollow"&gt;Redis Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://npmjs.org/package/rate-limit-memcached" rel="nofollow"&gt;Memcached Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/rate-limit-mongo" rel="nofollow"&gt;Mongo Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Alternate Rate-limiters&lt;/h3&gt;
&lt;p&gt;This module was designed to only handle the basics and didn't even support external stores initially. These other options‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nfriedly/express-rate-limit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;With these 5 NPM packages, you can make your Node.js + Express.js application much more secure in just 5 minutes. All of the packages above are extremely easy to use, just export and use as a middleware.&lt;/p&gt;

&lt;p&gt;What security precautions do you take? Or did I miss any of your favorite packages? Let me know in the discussion below and I'll be happy to hear your thoughts.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>security</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
