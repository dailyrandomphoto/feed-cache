<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Love React? Join Mohmed Ishak in Documenting React Components Using Open Source Tool on Aviyel</title>
      <author>Charu Veluthoor</author>
      <pubDate>Mon, 15 Nov 2021 10:27:41 +0000</pubDate>
      <link>https://dev.to/charuthekutty/love-react-join-mohmed-ishak-in-documenting-react-components-using-open-source-tool-on-aviyel-16e6</link>
      <guid>https://dev.to/charuthekutty/love-react-join-mohmed-ishak-in-documenting-react-components-using-open-source-tool-on-aviyel-16e6</guid>
      <description>&lt;p&gt;If you are into frontend, chances are you might have used React at least once in your career. In case, you are looking for documenting your React components but are stuck with the know-how, then Aviyel comes to your rescue. &lt;/p&gt;

&lt;p&gt;We bring to you Mohmed Ishak, a React developer, and open source enthusiast to get you started. Ishak will use Docz to build an SEO-friendly, production-ready doc site. What more? A chance to impress your future boss with all your developer skills.&lt;/p&gt;

&lt;p&gt;Join us to get hands-on experience with Docz, open-source, React, and a personalized evening with Ishak. &lt;/p&gt;

&lt;p&gt;Mark your Calendar: 📆 November 19th, 2021&lt;br&gt;
Time: 9:30 AM IST&lt;/p&gt;

&lt;p&gt;Register NOW 👉 &lt;a href="https://bit.ly/3FivARO"&gt;https://bit.ly/3FivARO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our events!&lt;br&gt;
Let’s build open source together!&lt;br&gt;
Team Aviyel&lt;/p&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>reactnative</category>
      <category>eventsinyourcity</category>
    </item>
    <item>
      <title>Let's Build Express Server. Beginners Guide</title>
      <author>Shreyansh sheth</author>
      <pubDate>Mon, 15 Nov 2021 09:53:52 +0000</pubDate>
      <link>https://dev.to/shreyanshsheth/lets-build-express-server-beginners-guide-3od1</link>
      <guid>https://dev.to/shreyanshsheth/lets-build-express-server-beginners-guide-3od1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-express-js"&gt;
  &lt;/a&gt;
  What Is Express Js?
&lt;/h2&gt;

&lt;p&gt;Express Js Is Web Framework For Node.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-use-express-js"&gt;
  &lt;/a&gt;
  Where To Use Express Js
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Most Popular Use Of Express Js In the Current Time Is To Create Web Apis.&lt;/li&gt;
&lt;li&gt;Also Some People Are Using To Create Full-stack Web App With using Pug, Ejs, Or Basic HTML&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;here we are going to create a simple API to understand concepts of express&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You need Node.js Installed In Your System. You can download node.js from &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open New Directory And Write This command to initialize a new project.&lt;br&gt;
&lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-Now install express as dependencies for your project&lt;br&gt;
&lt;code&gt;npm install express&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-basic-hello-world-api"&gt;
  &lt;/a&gt;
  Create basic hello world API
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create index.js file and import express js &amp;amp; initialize the app&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cv797bRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp5d08lre1s2qsxnnuqr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cv797bRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp5d08lre1s2qsxnnuqr.png" alt="Express Import &amp;amp; init app" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an endpoint &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;in simple term endpoint is a path where you are getting expected data&lt;br&gt;
&lt;code&gt;/users return all users&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/products returns all products&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQdwz-jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2zjzs7u8btdijv8b172.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQdwz-jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2zjzs7u8btdijv8b172.png" alt="endpoint creatiion" width="790" height="500"&gt;&lt;/a&gt;&lt;br&gt;
here we have created endpoint &lt;code&gt;/&lt;/code&gt; where we are sending hello world as a response.&lt;/p&gt;

&lt;p&gt;3 Open a port for connections&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FYmUzffX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vkpl9sr0i8f9yf4cs89.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYmUzffX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vkpl9sr0i8f9yf4cs89.png" alt="Open Port" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run application
&amp;gt; write &lt;code&gt;node index.js&lt;/code&gt; to start the application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d-im_aK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7ae0jnjbbekt29dywvz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d-im_aK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7ae0jnjbbekt29dywvz.png" alt="shell" width="880" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;open localhost:3000 on browser
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--edw-nm1l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wavta22hcqth6i49ekcu.jpg" alt="browser image" width="557" height="187"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#hooray-you-made-it"&gt;
  &lt;/a&gt;
  hooray you made it 🥳
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#what-now"&gt;
  &lt;/a&gt;
  what now
&lt;/h3&gt;

&lt;p&gt;now try to render Html. try to create forms &amp;amp; process data using any database.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;find material online and create your own express apps.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>How Much Does It Cost to Hire a Laravel Developer?</title>
      <author>iWebServices</author>
      <pubDate>Mon, 15 Nov 2021 09:34:30 +0000</pubDate>
      <link>https://dev.to/iwebservices/how-much-does-it-cost-to-hire-a-laravel-developer-1lj9</link>
      <guid>https://dev.to/iwebservices/how-much-does-it-cost-to-hire-a-laravel-developer-1lj9</guid>
      <description>&lt;p&gt;Laravel is an open-source framework that is built using PHP and based on Symfony. This framework was developed by Taylor Otwell and it has pre-packaged tools and resources. Laravel facilitates some common tasks such as caching, authentication, routing, sessions, etc. Hence, these tasks empower developers to focus more on developing business-related facilities.&lt;/p&gt;

&lt;p&gt;In the present era, there is rising popularity of Laravel developers. According to various researches, it has been found that the Laravel framework lies in the top position when it comes to the list of the best PHP frameworks in the market. &lt;a href="https://www.i-webservices.com/blog/hire/how-much-does-it-cost-to-hire-a-laravel-developer/"&gt;Read More&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Getting Started With Fast API and Docker</title>
      <author>kOr3s</author>
      <pubDate>Mon, 15 Nov 2021 09:25:12 +0000</pubDate>
      <link>https://dev.to/k0r3s/getting-started-with-fast-api-and-docker-1ldn</link>
      <guid>https://dev.to/k0r3s/getting-started-with-fast-api-and-docker-1ldn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#fastapi"&gt;
  &lt;/a&gt;
  FASTAPI
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-fastapi"&gt;
  &lt;/a&gt;
  What is fastAPI
&lt;/h2&gt;

&lt;p&gt;FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints to validate, serialize, and deserialize data, and automatically auto-generate OpenAPI documents.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-fastapi"&gt;
  &lt;/a&gt;
  Why fastAPI
&lt;/h2&gt;

&lt;p&gt;FastAPI has is one of the latest python api's for web development. It has some of this features:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-it-is-indeed-fast"&gt;
  &lt;/a&gt;
  1. It is indeed fast
&lt;/h4&gt;

&lt;p&gt;It is fast when we compare it to other major Python frameworks like Flask and Django.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-support-for-asynchronous-code"&gt;
  &lt;/a&gt;
  2. Support for asynchronous code
&lt;/h4&gt;

&lt;p&gt;This is one of exciting feature of FastAPI that it supports asynchronous code out of the box using the async/await Python keywords.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-very-short-development-time"&gt;
  &lt;/a&gt;
  3. Very short development time
&lt;/h4&gt;

&lt;p&gt;It takes like 8 lines of code to comeup with a hello, word program&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-easy-testing"&gt;
  &lt;/a&gt;
  4. Easy testing
&lt;/h4&gt;

&lt;p&gt;It has a feature of test driven development with the help using the &lt;a href="https://fastapi.tiangolo.com/tutorial/testing/"&gt;TestClient&lt;/a&gt; provided by fastAPI.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-excellent-documentation"&gt;
  &lt;/a&gt;
  5. Excellent documentation
&lt;/h4&gt;

&lt;p&gt;It has one of the easiest &lt;a href="https://fastapi.tiangolo.com/"&gt;documentation&lt;/a&gt; that one can understand.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-easy-deployment"&gt;
  &lt;/a&gt;
  6. Easy deployment
&lt;/h4&gt;

&lt;p&gt;You can easily deploy your FastAPI app via Docker using FastAPI provided &lt;a href="https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker"&gt;docker image&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Python 3.6+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installation-of-fastapi-on-windows"&gt;
  &lt;/a&gt;
  Installation of fastapi on windows.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install fastapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installation-on-mac-and-linux"&gt;
  &lt;/a&gt;
  Installation on Mac and Linux
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install fastapi uvicorn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;First create a folder at your own location of choice&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir foldername &amp;amp;&amp;amp; cd foldername
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;create a virtual environment inside the folder you created&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m venv env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;activate the virtual environment created called env&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;source env/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a python file with the following code and save as myapp.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Depends&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;root&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Hello World!'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then to run the server, we use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; uvicorn myapp:app --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To know it it works with no error, you will see this in your commandline&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [84109] using statreload
INFO:     Started server process [84111]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to open in browser, use the following link&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:8000/docs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you will see the following output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3LqZZtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8thigl8xfeqj8m4ogec0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3LqZZtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8thigl8xfeqj8m4ogec0.png" alt="Image description" width="880" height="402"&gt;&lt;/a&gt;&lt;br&gt;
before going to docker, we can create a requirement.txt file that has all the tools that you have installed in one place by running;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 freeze &amp;gt; requirement.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  DOCKER
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; is an open source platform for building ,deploying and managing containerized applications.&lt;br&gt;
Docker container is a virtualized runtime environment that provides isolation capabilities for separating the execution of applications from the underpinning system&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-docker"&gt;
  &lt;/a&gt;
  Why docker
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;speed - docker has both execution speed,startuo speed and operational speed.&lt;/li&gt;
&lt;li&gt;consistency - Build an image once and use it any where. The same image that is used to run the tests is used in production. This avoids the works in my machine problems.&lt;/li&gt;
&lt;li&gt;Flexibility - Containers are portable. Well to an extent (as long as the host is running some form of linux or linux vm).&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;
  &lt;a href="#building-a-docker-image"&gt;
  &lt;/a&gt;
  Building a docker image
&lt;/h4&gt;

&lt;p&gt;Create a docker file and save with this commands&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; python:3.9&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /code&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./requirements.txt ./requirements.txt&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--no-cache-dir&lt;/span&gt; &lt;span class="nt"&gt;--upgrade&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; /code/requirements.txt

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; ./app &lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then build your image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t myimage ./
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>beginners</category>
      <category>fastapi</category>
      <category>docker</category>
    </item>
    <item>
      <title>Benefits of Microsoft Dynamics 365</title>
      <author>Bacancy Technology</author>
      <pubDate>Mon, 15 Nov 2021 09:15:46 +0000</pubDate>
      <link>https://dev.to/bacancy_technology/benefits-of-microsoft-dynamics-365-536</link>
      <guid>https://dev.to/bacancy_technology/benefits-of-microsoft-dynamics-365-536</guid>
      <description>&lt;p&gt;Today we are here to talk about the benefits of the cloud-based solution - Dynamics 365. The intent of Microsoft Dynamics 365 is to run entire organization business with a single platform and deliver the quality results to organization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-have-a-look-at-the-advantages-of-dynamics-365"&gt;
  &lt;/a&gt;
  Let’s have a look at the Advantages of Dynamics 365
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Increase productivity&lt;/li&gt;
&lt;li&gt;Shorten sales cycle&lt;/li&gt;
&lt;li&gt;Seamless integration&lt;/li&gt;
&lt;li&gt;Deploy and scale easily&lt;/li&gt;
&lt;li&gt;Improved customer satisfaction and experience&lt;/li&gt;
&lt;li&gt;Smart solutions&lt;/li&gt;
&lt;li&gt;Enhance social engagement&lt;/li&gt;
&lt;li&gt;Improved social media engagement&lt;/li&gt;
&lt;li&gt;Increase return on investment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#types-of-ms-dynamics-365-business-apps"&gt;
  &lt;/a&gt;
  Types of MS dynamics 365 business apps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Microsoft Dynamics 365 marketing&lt;/li&gt;
&lt;li&gt;Microsoft Dynamics 365 HR&lt;/li&gt;
&lt;li&gt;Microsoft Dynamics 365 operations&lt;/li&gt;
&lt;li&gt;Microsoft Dynamics 365 sales&lt;/li&gt;
&lt;li&gt;Microsoft Dynamics 365 commerce&lt;/li&gt;
&lt;li&gt;Microsoft Dynamics 365 finance&lt;/li&gt;
&lt;li&gt;Microsoft Dynamics 365 service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the article, we also explain how this application will work and how it benefits the business, If you want to know more about the &lt;a href="https://www.bacancytechnology.com/blog/microsoft-dynamics-365-for-ceo"&gt;benefits of Microsoft Dynamics 365&lt;/a&gt;. Contact us now!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Develop an LGBT Dating App: Complete Guide</title>
      <author>Idea2App</author>
      <pubDate>Mon, 15 Nov 2021 09:13:13 +0000</pubDate>
      <link>https://dev.to/idea_2app_dev/how-to-develop-an-lgbt-dating-app-complete-guide-4n6j</link>
      <guid>https://dev.to/idea_2app_dev/how-to-develop-an-lgbt-dating-app-complete-guide-4n6j</guid>
      <description>&lt;p&gt;In the wake of perusing the title, you must be wondering why might a LGBT dating application be necessary? We should come to the heart of the matter "Each soul on the planet has the right to love and be loved".&lt;/p&gt;

&lt;p&gt;The dating app has been playing a great role in finding a partner. In simple words, the online dating app allows the two adults to find and get along with each other. Talking or not talking, dating, or not dating depends totally on the individuals. This dating thing entirely depends on the users, some even might not get a pleasant experience on this platform. But the best part is around 70% of lovelorn look forward to the concept of dating apps. &lt;br&gt;
Dating apps are very popular among the LGBTQ community as the app allows them to date people with similar requirements. It helps the LGBTQ community to find a compatible partner without being judged or criticized by the misogynistic society. &lt;/p&gt;

&lt;p&gt;This exquisite gateway of dating has solved various same-sex relationship issues so far and allows them to celebrate their sexuality. Surprisingly, according to the statistics, the number of single LGBT community users is 40% higher than their heterosexual counterparts.&lt;/p&gt;

&lt;p&gt;Moreover, the market analysis depicts that by 2023 the online dating app market volume will be approximately USD 2471 million which was back in 2019 USD 1958 million. &lt;/p&gt;

&lt;p&gt;Top 4 reasons why your LGBTQ online dating app might get a huge number of users:&lt;/p&gt;

&lt;p&gt;1 Finding a partner in the virtual world is easier.&lt;br&gt;
2 Dating app comes with multiple choices of eligible partners. &lt;br&gt;
3 Unwanted connections can be prevented in order to ensure the users’ security.&lt;/p&gt;

&lt;p&gt;4 It is indeed a great prospect for introverts or for those who feel insecure to come out publicly. &lt;/p&gt;

&lt;p&gt;So, if you plan to build up an app like Tinder, Happn, or Bumble for the LGBTQ community then without wasting any time, let's get it started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dating App Development:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dating sites have radically changed the landscape of online dating. Previously, people met people by meeting friends of friends. Though this is still the most common way to meet a partner, it is also the least effective. &lt;/p&gt;

&lt;p&gt;The Internet and dating apps have changed the dating landscape, enabling young people to meet and date without face-to-face interaction. And as a result of these dating apps, the LGBTQ community has gained several benefits.&lt;/p&gt;

&lt;p&gt;Earlier, the dating scene was segregated for the LGBTQ community. And no one was willing to date them. But with the help of dating apps, the LGBTQ community is getting a fair share of dating opportunities.&lt;/p&gt;

&lt;p&gt;After the dating apps, all dating apps are gender-neutral, and the users can choose their gender. Earlier, the LGBTQ community used to face many obstacles in dating. But now, dating apps are bridging this divide.&lt;/p&gt;

&lt;p&gt;The dating apps have enabled the LGBTQ community to meet and date without any discrimination. And as a result, LGBTQ people started feeling comfortable in dating.&lt;/p&gt;

&lt;p&gt;Online dating is specialized. People join dating sites to find their ideal match and to meet people they like and who like them back. The dating process is very structured, and they know what they are actually looking for.&lt;/p&gt;

&lt;p&gt;The online dating industry comprises both subscription-based and freemium models.&lt;/p&gt;

&lt;p&gt;Most online dating websites generate revenue from monthly subscription fees to users, though some websites also generate revenue from freemium models, such as advertising.&lt;/p&gt;

&lt;p&gt;The segment provides users with a platform to find and propose dates or relationships. Moreover, it permits the lovelorn to find or reconnect with common pals and different new ones. &lt;/p&gt;

&lt;p&gt;If you have started a company, when you see a problem, then solving that problem has to be the most important thing you do.&lt;br&gt;
If the problem were that, for example, everyone in the world used paper money, they would solve the problem if everyone stopped using paper money and started using digital money. But digital money is a very recent invention, and digital money was created to solve problems that didn't exist when it was invented.&lt;/p&gt;

&lt;p&gt;Sometimes, though, the problems you think will exist do exist. And solving those problems is worth doing.&lt;/p&gt;

&lt;p&gt;If you started a company to make T-shirts, perhaps the best way to maximize profit is not to make T-shirts at all, but to make cell phone covers. And in fact, that's what many T-shirt companies are doing, and it turns out they make a lot more money that way.&lt;br&gt;
But if you think the problem will be that you can make T-shirts, you don't know what you don't know. And if you don't solve that problem, other people will.&lt;/p&gt;

&lt;p&gt;Sometimes companies create problems by trying to solve problems that don't exist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How about we examine the key and least reasonable elements of your Dating App.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1 Social media enrolment and combination to use client profile data&lt;/p&gt;

&lt;p&gt;2 Maintaining client secrecy&lt;/p&gt;

&lt;p&gt;3 Active insurance and forbiddance of harmful and indecent substance&lt;/p&gt;

&lt;p&gt;4 Unique client commitment highlights like the Tinder Moments.&lt;br&gt;
5 Suggestions for dating matches&lt;/p&gt;

&lt;p&gt;6 Advanced calculation for profile coordinating&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.idea2app.dev/online-dating-app-development.html"&gt;Online Dating App Development&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Online dating has flourished over recent years. However, while the vast number of online dating sites and apps available today provide many options for singles, the dating industry presents a unique set of challenges that entrepreneurs have to solve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How about we examine the key and least reasonable elements of your Dating App.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1 Social media enrolment and combination to use client profile data&lt;/p&gt;

&lt;p&gt;2 Maintaining client secrecy&lt;/p&gt;

&lt;p&gt;3 Active insurance and forbiddance of harmful and indecent substance&lt;/p&gt;

&lt;p&gt;4 Unique client commitment highlights like the Tinder Moments.&lt;/p&gt;

&lt;p&gt;5 Suggestions for dating matches&lt;/p&gt;

&lt;p&gt;6 Advanced calculation for profile coordinating&lt;/p&gt;

&lt;p&gt;The first and the main thing that matters is the creation cost. Allow us to come to the heart of the matter around a specific thing. Kindling like application, however basic it looks, in fact it includes a perplexing design and an extremely confused advancement process. Along these lines, sensibly talking, it will not be a low spending plan application since the assessed advancement time for such an application can be somewhere near 800 to 1000 hours. Allow us to view the vital expense parts of an application like Tinder.&lt;/p&gt;

&lt;p&gt;1 For single stage improvement that will incorporate every one of the key advances like geo area planning, web-based media reconciliation, instalments handling for cutting edge renditions, will take something like 600 to 700 hours of advancement.&lt;/p&gt;

&lt;p&gt;2 The upheld support for such an application must be unshakable and fueled by the most complex component to guarantee quicker reaction time to errors and issues. The supported improvement will need something like 200 to 300 hours of advancement.&lt;/p&gt;

&lt;p&gt;3 The configuration process which is significant for such an application will require no less than 100 hours containing constantly needed for wire-outlining and prototyping.&lt;/p&gt;

&lt;p&gt;4 The last process deals with improvement of the created app.&lt;br&gt;
By averaging, the improvement cost as $10 each hour, fabricating a Tinder-like dating application will take around 600 to 1000 hours for a solitary stage and will cost $6,000 to $10,000.&lt;/p&gt;

&lt;p&gt;The App Ideas is a main web and application improvement organization. We have a group of exceptionally gifted designers who are masters in giving the best programming arrangement like Website, versatile applications, web application stages and the sky's the limit from there. We are profoundly master and experienced in giving the best and one-of-a-kind dating application arrangement, best case scenario, rates.&lt;/p&gt;

&lt;p&gt;Most online dating sites are businesses built on trust, and people are more likely to trust someone who has already vetted them. This means dating websites are incentivized to make users feel safe with the site they're on, and they're also incentivized to keep users from leaving.&lt;/p&gt;

&lt;p&gt;Additionally, dating is competitive, and users expect more from their online experiences. This means that online sites have to keep users engaged, excited, and coming back for more, and that presents a unique set of challenges for entrepreneurs to solve.&lt;br&gt;
But online dating presents a wide range of opportunities for entrepreneurs who are able to solve these challenges. To help entrepreneurs launch successful online dating start-ups, we compiled a list of common challenges and solutions that entrepreneurs can implement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.idea2app.dev/social-media-app-development.html"&gt;Social Media App Development Services&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The key to social media is recognizing that social is human. "Social" is the human side of technology. All technology is deeply social, though in different ways.&lt;/p&gt;

&lt;p&gt;Innovation is, thus, profoundly friendly. Its plan mirrors the manners in which society works. Who gets what advantages, what considers an issue to be tackled, who owes whom what favours, etc? This has prompted trouble: "social" appears to be wide. What's the significance here to say that innovation is social? Is it shared, shared by individuals, perhaps? Or then again share in a common framework? Did the wide range of various advancements share them? But what does it mean to say that technology is human? To answer that question, you have to think back on the social aspects of technology.&lt;/p&gt;

&lt;p&gt;1 Innovation is human when it is utilized with a specific goal in mind. For example, email has a social aspect: in a conversation, who sends and who receives messages is conventionally specified.&lt;/p&gt;

&lt;p&gt;2 Technology is human when it is shared. This seems to be obvious; if technology is not shared, it is not technology. But technology can also be shared without sharing. For example, the physics of the bow and arrow is not shared with any other technology. But its basic social properties, its way of sharing energy, are shared with technologies used by humans. For example, it is planting a seed.&lt;/p&gt;

&lt;p&gt;3 Technology is social when it is adapted to humans.&lt;br&gt;
4 Technology is human when it is valued for what it can do. For example, people value the attributes of their email program, but not its social qualities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Along these lines, assuming you actually have any inquiries in regards to the advancement of the best LGBT dating applications, make an application like Tinder, Android application improvement cost, dating application engineer cost, you can check it with us. You really want to top off our get in touch with us structure, and one of our salesmen will hit you up to answer your inquiries. The meeting will not cost you any cash.&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>flutter</category>
      <category>react</category>
    </item>
    <item>
      <title>Create Your First .NET MAUI App with Microsoft MVP Codrina Merigo</title>
      <author>Techguy</author>
      <pubDate>Mon, 15 Nov 2021 09:03:49 +0000</pubDate>
      <link>https://dev.to/syncfusion/create-your-first-net-maui-app-with-microsoft-mvp-codrina-merigo-4fg0</link>
      <guid>https://dev.to/syncfusion/create-your-first-net-maui-app-with-microsoft-mvp-codrina-merigo-4fg0</guid>
      <description>&lt;p&gt;Join us as we take a look at the latest cross-platform framework, .NET MAUI. In this webinar, we’ll walk you through how to install, set up, and create your first .NET MAUI application. &lt;/p&gt;

&lt;p&gt;To learn more and download a free trial of Essential Studio .NET MAUI visit: &lt;a href="https://www.syncfusion.com/maui-controls"&gt;https://www.syncfusion.com/maui-controls&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;SUBSCRIBE&lt;/p&gt;




&lt;p&gt;Syncfusion on YouTube: &lt;a href="http://bit.ly/syncfusionyoutube"&gt;http://bit.ly/syncfusionyoutube&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Bold BI on YouTube: &lt;a href="http://bit.ly/3jFD5sg"&gt;http://bit.ly/3jFD5sg&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Sign up to receive email updates: &lt;a href="http://bit.ly/syncfusionemail"&gt;http://bit.ly/syncfusionemail&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/K25RtQr0m0Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>maui</category>
      <category>dotnet</category>
      <category>mobile</category>
      <category>csharp</category>
    </item>
    <item>
      <title>AWS open source news and updates #90</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 15 Nov 2021 09:02:31 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-90-3ppg</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-90-3ppg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#november-15th-2021-instalment-90"&gt;
  &lt;/a&gt;
  November 15th, 2021 - Instalment #90
&lt;/h2&gt;

&lt;p&gt;Newsletter #90.&lt;/p&gt;

&lt;p&gt;Another packed edition of his newsletter, with some great new open source projects such as ploomber (a project to help you build production pipelines for your notebooks), slic-starter (a complete starter project for production-grade serverless applications) and many more interesting projects covering RStudio, Spring Boot, a serverless software vending solution, Kubernetes on the edge and more. AWS and Community content this week covers AWS CDK, Steampipe, AWS Distro for OpenTelemetry, Dask, Flagger, Cortex, Apache Airflow, Apache Flink, OpenSearch, Reddis, RabbitMQ and more. Make sure you check out the videos too, this week featuring open source Observability and OpenSearch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Azmi Mengü, Pawel Grzybek, Jozef Jaroščiak, fourTheroem, Kyle Davis, Dotan Horovits, Matt Hanson, Ariel Walcutt, Imtranur Rahman, Mary-Elizabeth Morin, Kinnar Sen, Nathaniel Ruiz Nowell, David Boeke, Bob Tordella, Jon Udell, Behram Irani,  Madhav Vishnubhatta, Ethan Fahy, Zac Flamig, Nima Kaviani, Manabu McCloskey, Nicholas Thomson, Tom Zach, Kevin Bell, Stefan Prodan, Ramesh Sencha, Nate Bachmeier, Wallace Printz, Christian Mueller, Alex Pulver, Nick Lynch, Dzenan Softic, Sam Dengler, James Greenwood, Bikash Behera, and Kevin Higgins.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-noticeboard"&gt;
  &lt;/a&gt;
  Community noticeboard
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Research Papers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the latest research papers released from Amazon focused on natural-language understanding and question answering are areas of focus, with additional topics ranging from self-learning to text summarisation. You can check these out on the post, &lt;a href="https://aws-oss.beachgeek.co.uk/13g"&gt;Amazon’s 23 papers at EMNLP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for examples CDK projects, then AWS Community Builder Azmi Mengü has plenty of good examples you can get inspiration from. Head on over to &lt;a href="https://aws-oss.beachgeek.co.uk/13f"&gt;his GitHub repos&lt;/a&gt; and see for yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;slic-starter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/136"&gt;slic-starter&lt;/a&gt; Whilst I was watching the great sessions during AWS Community Day, I came across this project from fourTheorem. SLIC Starter is a complete starter project for production-grade serverless applications on AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MXPNIHjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/fourTheorem/slic-starter/blob/main/architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MXPNIHjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/fourTheorem/slic-starter/blob/main/architecture.png%3Fraw%3Dtrue" alt="arch" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lambda-runtimes-stack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/135"&gt;lambda-runtimes-stack&lt;/a&gt; Pawel Grzybek has put together this project that provides detailed information about the AWS Lambda runtimes versions. Deploy it and every few hours it will show record details of important version information about the AWS Lambda runtimes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-fargate-with-rstudio-open-source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/134"&gt;aws-fargate-with-rstudio-open-source&lt;/a&gt; this project delivers AWS CDK Python code to provision serverless infrastructure in AWS Cloud to run Open Source RStudio Server and Shiny. This is pretty nice, so make sure you bookmark this. I am also going through the code and going to re-use parts of it for other open source projects too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LEGnAmUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/aws-fargate-with-rstudio-open-source/blob/main/images/Rstudio_architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LEGnAmUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/aws-fargate-with-rstudio-open-source/blob/main/images/Rstudio_architecture.png%3Fraw%3Dtrue" alt="arch" width="880" height="820"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ploomber&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13a"&gt;ploomber&lt;/a&gt; this project helps you with the challenges of working with .ipynb files allowing teams to develop collaborative, production-ready pipelines using JupyterLab or any text editor. This project is integrated with AWS so you can leverage it in your environments to develop locally, and then deploy to the cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/a08456124b7b417037d672b6b4796ac9f4eb2961095a4bb6183c67f9244eeeb8/68747470733a2f2f706c6f6f6d6265722e696f2f7265706f2d6c61622d6578616d706c652e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/a08456124b7b417037d672b6b4796ac9f4eb2961095a4bb6183c67f9244eeeb8/68747470733a2f2f706c6f6f6d6265722e696f2f7265706f2d6c61622d6578616d706c652e706e67" alt="arch" width="2770" height="1500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS-Connect-Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/137"&gt;AWS-Connect-Manager&lt;/a&gt; this project from Jozef Jaroščiak provides Windows users with an easy to use tool to connect with your Amazon EC2 instances.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/a7670895eaf71ab2af0229b8df480d89c987e9d4f568db196356998feaea6b84/68747470733a2f2f692e696d6775722e636f6d2f484973663351722e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/a7670895eaf71ab2af0229b8df480d89c987e9d4f568db196356998feaea6b84/68747470733a2f2f692e696d6775722e636f6d2f484973663351722e706e67" alt="demo" width="1596" height="922"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-kubernetes-edge-greengrass&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13b"&gt;aws-kubernetes-edge-greengrass&lt;/a&gt; this project demonstrates how to collect data from edge locations using Kubernetes (k3s) and AWS IoT Greengrass. The code shows you how to get up and running on a Raspberry Pi, and uses AWS CDK - two of my favourite things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-iam-temporary-elevated-access-broker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13e"&gt;aws-iam-temporary-elevated-access-broker&lt;/a&gt; this projects provides a minimal reference implementation for providing temporary elevated access to your AWS environment. James Greenwood, Bikash Behera, and Kevin Higgins walk you through how to use this project in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/13l"&gt;Managing temporary elevated access to your AWS environment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8BOvuFiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2021/11/02/Managing-temporary-elevated-access-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8BOvuFiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2021/11/02/Managing-temporary-elevated-access-2.png" alt="arch" width="880" height="704"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java-spring-boot-ecs-fargate-redis-caching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13h"&gt;java-spring-boot-ecs-fargate-redis-caching&lt;/a&gt; this sample shows how a Spring Boot application can be deployed on ECS Fargate with Redis Caching Support to persist session data and improve application performance. The solution also provides the necessary templates to automatically provision the required infrastructure using CloudFormation to your desired AWS account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WP7pjAbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/java-spring-boot-ecs-fargate-redis-caching/blob/main/documentation/images/architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WP7pjAbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/java-spring-boot-ecs-fargate-redis-caching/blob/main/documentation/images/architecture.png%3Fraw%3Dtrue" alt="arch" width="861" height="771"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-severless-vending-machine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13i"&gt;aws-severless-vending-machine&lt;/a&gt; this repository shows you how to create a solution to developer teams consume IaC Products, like a "Vending Machine", to automated deploy cloud service in their AWS Accounts without open a ticket or request in IT department. You can read the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/13j"&gt;Criando um portal de autosserviços para o provisionamento na AWS&lt;/a&gt; (in Portugese, but I tried translating with Amazon Translate and it did a great job) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6kyMEs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/d435a6cdd786300dff204ee7c2ef942d3e9034e2/2021/11/08/autoservi%25C3%25A7o1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6kyMEs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/d435a6cdd786300dff204ee7c2ef942d3e9034e2/2021/11/08/autoservi%25C3%25A7o1.jpg" alt="arch" width="880" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazon-connect-twitter-listener&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13k"&gt;amazon-connect-twitter-listener&lt;/a&gt; I was recently chatting with a builder who was trying to implement social media integration with Amazon Connect, so I was pleasantly surprised when this project popped up on my open source radar. This project contains source code and supporting files for twitter streaming to Amazon Connect Tasks. Tweets are filtered on the specified tag and analyzed using comprehend to identify language and sentiment. Both tags are added as attributes to the task so additional branching decisions can be made. You need to set up your Amazon Connect project up first, but details are in the README&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmwwGV-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/amazon-connect-twitter-listener/blob/main/imgs/twitter-listener.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmwwGV-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/amazon-connect-twitter-listener/blob/main/imgs/twitter-listener.png%3Fraw%3Dtrue" alt="arch" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of good AWS CDK posts this week, starting off with &lt;a href="https://aws.amazon.com/blogs/opensource/comparing-aws-cloud-development-kit-and-aws-controllers-for-kubernetes/"&gt;Comparing AWS Cloud Development Kit and AWS Controllers for Kubernetes&lt;/a&gt; in which Nima Kaviani, Manabu McCloskey, and Nicholas Thomson come together to compare strategies, tools and technologies to automate infrastructure and software rollout strategies when working with Kubernetes. They look at six areas of focus: Programming, Validation, Execution, Interaction, Operation, and Reconciliation.&lt;/p&gt;

&lt;p&gt;A must read post from Alex Pulver and Nick Lynch is their post, &lt;a href="https://aws-oss.beachgeek.co.uk/133"&gt;Experimental construct libraries are now available in AWS CDK v2&lt;/a&gt; where they share an update on the AWS CDK v2 experimental APIs, and how this can make it even easier to migrate from v1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steampipe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Steampipe is an open source tool for querying cloud APIs in a universal way and reasoning about the data in SQL. David Boeke, Bob Tordella, Jon Udell, and Nathan Wallace have collaborated together on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/12u"&gt;Querying AWS at scale across APIs, Regions, and accounts&lt;/a&gt; where they share a number of different approaches for how you can use this project to deliver the best possible speed and throughput. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VaxUCQPi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/spotaws_querying_aws_scale_across_aps_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VaxUCQPi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/spotaws_querying_aws_scale_across_aps_f1.png" alt="arch" width="877" height="491"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Distro for OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nathaniel Ruiz Nowell explains how to get telemetry data from AWS Lambda Python functions, without having to change a line of code, in his post &lt;a href="https://aws-oss.beachgeek.co.uk/12t"&gt;Auto-instrumenting a Python application with an AWS Distro for OpenTelemetry Lambda layer&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WMBX64Cr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/enowell_otel-python-lamda_f20_1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WMBX64Cr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/enowell_otel-python-lamda_f20_1000.png" alt="arch" width="880" height="693"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also had with the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12z"&gt;How To Use OpenTelemetry With AWS Lambda&lt;/a&gt; from Tom Zach at Aspecto, that also shows you how to deploy a tracing-enabled lambda with OpenTelemetry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mv4imbRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--61Z475GA--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e174usakq3tm1sqpc3s3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mv4imbRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--61Z475GA--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e174usakq3tm1sqpc3s3.png" alt="arch" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To wrap up things in ADOT we had Alolita Sharma write &lt;a href="https://aws-oss.beachgeek.co.uk/138"&gt;AWS Distro for OpenTelemetry 0.14 is now available with updated Lambda layers&lt;/a&gt;, providing the release highlights and details on how you can download this image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flagger&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Flagger is a CNCF incubating project that takes care of much of the undifferentiated heavy lifting of canary deployments on Kubernetes. In the post &lt;a href="https://aws-oss.beachgeek.co.uk/130"&gt;Performing canary deployments and metrics-driven rollback with Amazon Managed Service for Prometheus and Flagger&lt;/a&gt; Kevin Bell and Stefan Prodan explain how to perform canary deployments on Kubernetes using Flagger to orchestrate the rollout, promotion, and rollback of deployments. Taking care of metrics we have Amazon Managed Service for Prometheus, and letting you observe the canary deployment process, we have Amazon Managed Grafana. Nice! [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F5Wpeayf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/10/27/kebel_canary-deployments-rollback-prometheus-flagger_f1x1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F5Wpeayf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/10/27/kebel_canary-deployments-rollback-prometheus-flagger_f1x1000.png" alt="arch" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cortex&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12y"&gt;Scaling Cortex with parallel compaction&lt;/a&gt; Albert Choi, an intern on the Amazon Managed Service for Prometheus team, shares his experience of designing and implementing parallel compactors inside of the Cortex open source project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I8idcN9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/05/sharma_choi_f3_wh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I8idcN9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/05/sharma_choi_f3_wh.png" alt="illustration" width="691" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dask and Open Data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This week we have a couple of interesting posts on how to analyse open data sets using an open source project called Dask (an open source project in Python that provides parallelism for analytics). Combining open data sets together with open source software running on AWS is a growing trend to help provide insights that can help make the lives of emergency managers, climate scientists, and policy makers that much easier. &lt;/p&gt;

&lt;p&gt;First up we have the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12r"&gt;Transforming Geospatial Data to Cloud-Native Frameworks with Element 84 on AWS&lt;/a&gt;, where Matt Hanson and Ariel Walcutt from Element 84&lt;br&gt;
and Imtranur Rahman and Mary-Elizabeth Morin from AWS walk you through a solution you can put together than combines open data sets from Sentinel-2 (satellite imagery) with Dask, and a number of Python libraries to analyse and visualise the data. [hands on] &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ly7n7Y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s3.us-west-2.amazonaws.com/apnblog.awspartner.com/Element-84-RBG-Image.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ly7n7Y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s3.us-west-2.amazonaws.com/apnblog.awspartner.com/Element-84-RBG-Image.gif" alt="demo" width="880" height="741"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Following that we have &lt;a href="https://aws-oss.beachgeek.co.uk/12w"&gt;Analyze terabyte-scale geospatial datasets with Dask and Jupyter on AWS&lt;/a&gt;, where Ethan Fahy and Zac Flamig show you how to set up this Kubernetes, Dask and Jupyter Pangeo solution on AWS to automatically scale your cloud compute resources and parallelise your workload across multiple Dask worker nodes. In this example they show you how you can run an example notebook that performs sample analyses on the Coupled Model Intercomparison Project 6 (CMIP6) dataset from the Registry of Open Data on AWS. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-yDLkd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/11/10/Analyze-terabyte-scale-geospatial-datasets-dask-jupyter-AWS-figure-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-yDLkd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/11/10/Analyze-terabyte-scale-geospatial-datasets-dask-jupyter-AWS-figure-1.png" alt="arch" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dzenan Softic and Sam Dengler demonstrate how to use a CodeArtifact repository to load your Python libraries in Apache Airflow in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/139"&gt;Amazon MWAA with AWS CodeArtifact for Python dependencies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_aAOZ_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/10/softicd_mwaa-codeartifact-python_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_aAOZ_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/10/softicd_mwaa-codeartifact-python_f1.png" alt="arch" width="880" height="867"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Flink&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/12s"&gt;Optimizing Apache Flink on Amazon EKS using Amazon EC2 Spot Instances&lt;/a&gt; Kinnar Sen shows you how to deploy a scalable, highly available, resilient, and cost optimised Flink application using Kubernetes via Amazon EKS and Amazon EC2 Spot Instances. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EIKXko2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/23/flink1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EIKXko2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/23/flink1.png" alt="arch" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have a use case where you need to be able to run a single query against many different data sources, then you will find this post from Behram Irani and Madhav Vishnubhatta  will be of interest. Using a capability of Amazon Athena called Amazon Athena Federated Queries, you can use an existing connector for OpenSearch to query your data in both OpenSearch and (in this example) Amazon S3. To find out more, read the post &lt;a href="https://aws-oss.beachgeek.co.uk/12v"&gt;Query data in Amazon OpenSearch Service using SQL from Amazon Athena&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cREAlCnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/11/05/BDB-1590-image001-new.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cREAlCnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/11/05/BDB-1590-image001-new.png" alt="arch" width="738" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RabbitMQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon MQ provides two managed broker deployment connection options: public brokers and private brokers.&lt;br&gt;
Nate Bachmeier, Wallace Printz, and Christian Mueller have come together to share how to provision private Amazon MQ brokers behind a secure public load balancer endpoint using an example subdomain in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/132"&gt;Creating static custom domain endpoints with Amazon MQ for RabbitMQ&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i9uzUe_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/11/05/static-arch-1007x1024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i9uzUe_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/11/05/static-arch-1007x1024.png" alt="arch" width="880" height="895"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This post from Ramesh Sencha at Coupa, &lt;a href="https://aws-oss.beachgeek.co.uk/131"&gt;How Coupa migrated from a self-hosted Redis to fully managed Amazon ElastiCache&lt;/a&gt; details why Coupa migrated self managed Redis workloads to Amazon ElastiCache; the benefits, the approach and the architecture they chose.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Fluent Bit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Elastic Kubernetes Service (EKS) on Fargate now supports the use of Kubernetes Fluent Bit filters which provide enriched Kubernetes-specific metadata to Fluent Bit logs. Customers can now more easily observe and troubleshoot their applications by using the Kubernetes pod, container, or namespace name, among other Kubernetes metadata, to associate with their applications’ logs. Without support for the Kubernetes filter for Fluent Bit on EKS Fargate, customers had to manually read through log files to find the events they were interested in and it was difficult to associate a given log line with a Kubernetes application. Some customers who needed this kind of observability were unable to use Fargate with EKS and couldn’t benefit from its fully managed compute environment.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this recording from the AWS Summit, Kyle Davis will give you an understanding of the capabilities of OpenSearch, the first steps to get started (on or off AWS), a picture of how OpenSearch fits in your stack, a look into what’s in store for the future of the project as well as a guide to join the community and contribute.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DPpbu5Jkkmc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open source observability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another great video from Dotan Horovits over at Logz.io. In this session he introduces observability, the role of open source in this area and then shows you some of the tools and projects in this space. Well worth 41 minutes of your time.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/McNAwoQtOfg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Databricks | AWS Lakehouse Dev Day Live Workshop&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;November 16th 9:00 AM PT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Delta Lake is an open source storage layer that provides ACID transactions, scalable metadata handling, and unifies streaming and batch data processing. You can use Delta Lake on top of your existing data lake. During this workshop you will learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make your existing Amazon S3 data lakes into a lakehouse with Delta Lake.
&lt;/li&gt;
&lt;li&gt;Provide an easy-to-use platform for analysts to directly query data on your data lake using SQL Analytics&lt;/li&gt;
&lt;li&gt;Simplify and automate data pipelines for streaming and batch data to lower costs and boost productivity for your data teams&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/zs"&gt;Read more and sign up here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Control Locales In NextJS</title>
      <author>yanir manor</author>
      <pubDate>Mon, 15 Nov 2021 08:59:14 +0000</pubDate>
      <link>https://dev.to/manoryanir/control-locales-in-nextjs-4dmo</link>
      <guid>https://dev.to/manoryanir/control-locales-in-nextjs-4dmo</guid>
      <description>&lt;p&gt;In today's world supporting translation for multi-languages is very important. &lt;br&gt;
So how can we do it with Nextjs? &lt;br&gt;
Nextjs is built by page, which means controlling different locales through routing. &lt;br&gt;
First, you need to install the package&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install next-translate&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Then create a file i18n.json in the file you can control what languages you have, what is the default language, what file will load in a specific page or it will be global, and many more options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "locales": ["en", "fr"],
  "defaultLocale": "en",
  "pages": {
    "*": ["global"],
    "/info": ["info"]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you are done go to next.config and add it to the module&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const nextTranslate = require("next-translate");

module.exports = {
  reactStrictMode: true,
  ...nextTranslate(),
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great, we have completed the configuration 🤙.&lt;/p&gt;

&lt;p&gt;Now create a locales folder in it, and add language and related files to each folder (you can see in the github project).&lt;br&gt;
In each file, create an object with a key value.&lt;br&gt;
Finally, go to the next page and use a translation like this to control it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import useTranslation from "next-translate/useTranslation";

export default function Info() {
  let { t } = useTranslation();
  return (
      &amp;lt;h1&amp;gt;{t("info:love")}&amp;lt;/h1&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the URL you can see the change by adding/fr/ for French otherwise it will be English.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Surprisingly I find localization very simple to use with this package.&lt;br&gt;
Link: &lt;a href="https://github.com/yanirmanor/next-locales"&gt;https://github.com/yanirmanor/next-locales&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The Rosetta Code Project</title>
      <author>Mia</author>
      <pubDate>Mon, 15 Nov 2021 08:57:11 +0000</pubDate>
      <link>https://dev.to/miatemma/the-rosetta-code-project-1k1j</link>
      <guid>https://dev.to/miatemma/the-rosetta-code-project-1k1j</guid>
      <description>&lt;h3&gt;
  &lt;a href="#up-to-the-next-level"&gt;
  &lt;/a&gt;
  Up to the next level
&lt;/h3&gt;

&lt;p&gt;Now that we have covered the &lt;strong&gt;basics of PicoLisp&lt;/strong&gt;, I think it makes sense to study examples to get used to the syntax and programming style before we move on to new topics such as &lt;strong&gt;Web Application Programming&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In many ways, a programming language works the same way like a human language. There is a &lt;strong&gt;syntax&lt;/strong&gt; and a &lt;strong&gt;vocabulary&lt;/strong&gt;, and there are things that can be expressed in every language, while other things are quite difficult to translate. The more languages you learn, the more you get aware of the potential of each language.&lt;/p&gt;

&lt;p&gt;So how can we do this? There is a very interesting project called &lt;a href="http://rosettacode.org/wiki/Rosetta_Code"&gt;"The Rosetta Code Project"&lt;/a&gt; named after the famous &lt;a href="https://en.wikipedia.org/wiki/Rosetta_Stone"&gt;Rosetta Stone&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FnbYZGdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629972210436/TFhaSQPw8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FnbYZGdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629972210436/TFhaSQPw8.jpeg" alt="hieroglphen.jpg" width="320" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Rosetta Stone is a stele from 194 BC that has inscriptions in three language: Ancient Egyptian, ancient Greek and Demotic. Now the point is that &lt;strong&gt;the meaning of the text is the same in all three languages&lt;/strong&gt;. Since ancient Greek was well known, it was possible to finally decipher the Ancient Egyptian hieroglyphs after the stone was discovered in 1799.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-stone-to-code"&gt;
  &lt;/a&gt;
  From Stone to Code
&lt;/h2&gt;

&lt;p&gt;The Rosetta Code Project follows the "Same text, Different languages"  idea by presenting implementations of famous algorithms (like the &lt;a href="http://rosettacode.org/wiki/Dining_philosophers"&gt;"Dining Philosophers"&lt;/a&gt;, &lt;a href="http://rosettacode.org/wiki/Knapsack_problem"&gt;"Knapsack Problem"&lt;/a&gt; or &lt;a href="http://rosettacode.org/wiki/Towers_of_Hanoi"&gt;"Towers of Hanoi"&lt;/a&gt;) in many different programming languages. Besides "standard" languages like C, Python, Java, you will find also many examples for historical or minor languages, which is quite fun to read. Among them of course you will also find many many examples of &lt;a href="http://www.rosettacode.org/wiki/Category:PicoLisp"&gt;PicoLisp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During this loose series, we will pick out some interesting code examples and highlight how the algorithmn is implemented and what are its key points. It will also help us to grasp the difference between a &lt;strong&gt;functional implementation&lt;/strong&gt; of a code vs. for example an object-oriented one.&lt;/p&gt;




&lt;p&gt;We will start with the PicoLisp translation of the &lt;a href="https://en.wikipedia.org/wiki/Caesar_cipher"&gt;Caesar Cipher&lt;/a&gt;, which is a very simple cryptographic system. We will mainly need the string and list functions for this one. Stay tuned :)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover: &lt;a href="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/2007-08-27_Rosetta_Stone_London_0309.JPG/800px-2007-08-27_Rosetta_Stone_London_0309.JPG"&gt;https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/2007-08-27_Rosetta_Stone_London_0309.JPG/800px-2007-08-27_Rosetta_Stone_London_0309.JPG&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.rosettacode.org/wiki/Rosetta_Code"&gt;http://www.rosettacode.org/wiki/Rosetta_Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>picolisp</category>
      <category>algorithms</category>
      <category>rosettacode</category>
    </item>
    <item>
      <title>I have installed Denoland</title>
      <author>sadiul hakim</author>
      <pubDate>Mon, 15 Nov 2021 08:56:16 +0000</pubDate>
      <link>https://dev.to/suhakim/i-have-installed-denoland-47h7</link>
      <guid>https://dev.to/suhakim/i-have-installed-denoland-47h7</guid>
      <description>&lt;p&gt;Wow,Denoland is awesome.We have &lt;code&gt;global&lt;/code&gt; object in &lt;code&gt;nodejs&lt;/code&gt; but you will see a large &lt;code&gt;window&lt;/code&gt; object in Denoland and a lot of functionality.Try to play with Deno if you are already a nodejs developer and if you have any interest to Deno.land &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Leave that comfort zone</title>
      <author>Antonio Riccelli</author>
      <pubDate>Mon, 15 Nov 2021 08:43:37 +0000</pubDate>
      <link>https://dev.to/antonioriccelli/leave-that-comfort-zone-475p</link>
      <guid>https://dev.to/antonioriccelli/leave-that-comfort-zone-475p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#complacency"&gt;
  &lt;/a&gt;
  Complacency
&lt;/h2&gt;

&lt;p&gt;You know it, I know it, we know it: **that **feeling. &lt;/p&gt;

&lt;p&gt;You're in the gym, staring at those plates you've just added to the barbell. It all only comes to a couple pounds heavier than last week.&lt;br&gt; &lt;br&gt;
"&lt;em&gt;Increase the resistance if you want to get stronger&lt;/em&gt;", they said - and you listened.&lt;br&gt;
&lt;br&gt;But there's a murmur creeping in...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;That's going to feel heavy&lt;/li&gt;
&lt;li&gt;It'll be uncomfortable&lt;/li&gt;
&lt;li&gt;Just a few pounds lighter?&lt;/li&gt;
&lt;li&gt;You'll do it next time, c'mon!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We're built to avoid pain and seek pleasure. Avoid discomfort and seek comfort. &lt;br&gt;&lt;br&gt;
Avoid "bad", chase "good" - it's engrained in us.&lt;br&gt;&lt;br&gt;
It only takes a moment, we falter, aaaaaand... that's it: we gave in.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Exit murmur, enter &lt;strong&gt;Mr. Guilt&lt;/strong&gt; - eternal, malignant regent of Comfortzone D.C.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k6cd9xR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://64.media.tumblr.com/tumblr_mapms62yDe1rut3y7o1_400.gifv" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6cd9xR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://64.media.tumblr.com/tumblr_mapms62yDe1rut3y7o1_400.gifv" alt="jafar.gif" width="325" height="183"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What happens next is, you're going to spend the following minutes, hours, possibly days, wondering &lt;strong&gt;what if... ?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if I had pushed through instead of caving in?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That guilt is the echoing lament of all your unrealised potential, all the "gains" you missed (don't know why, but this sounds like a good title for a rock ballad). &lt;/p&gt;

&lt;p&gt;Why's this on Hashnode, anyway? What's this got to do with tech or code?&lt;/p&gt;

&lt;p&gt;Well, as it turns out, I just had a glaring example of the above a couple weeks ago, which turned out to be very productive one. &lt;br&gt;
Lots of growth... and lots of discomfort. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#stepping-out"&gt;
  &lt;/a&gt;
  Stepping out
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wD1cRGdm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636895120656/Ph2HPR17f.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wD1cRGdm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636895120656/Ph2HPR17f.gif" alt="sarahs-scribbles-sarah-anderson.gif" width="498" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When working through my Data Structures and Algorithms certification on &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/"&gt;Freecodecamp&lt;/a&gt;, I really enjoyed completing the &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/roman-numeral-converter"&gt;Roman Numeral Converter project&lt;/a&gt; and wanted to build it as a static web page, rather than just a JavaScript file.&lt;/p&gt;

&lt;p&gt;Nothing complex, it was just a matter of adding the HTML and CSS parts, and linking it all together... and I would have learned nothing, had I done it that way. I decided to "complicate" things. &lt;/p&gt;

&lt;p&gt;I had &lt;a href="https://nodejs.org/en/"&gt;Node.JS&lt;/a&gt; and &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt; installed but never quite used them, and also wanted to see what the fuss about &lt;a href="https://tailwindcss.com/"&gt;TailwindCSS &lt;/a&gt; was about, so I threw all of them in the mix - I was in for a treat! &lt;/p&gt;

&lt;p&gt;What followed was a week of &lt;strong&gt;intense learning&lt;/strong&gt;, as I kept coming across things and workings I had no clue about. &lt;/p&gt;

&lt;p&gt;I won't go through the whole story, as it would probably be tedious, but I can list all the important bits and pieces that I took away.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-of-the-things-i-learned"&gt;
  &lt;/a&gt;
  Some of the things I learned
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When importing other JavaScript scripts into my main one, I'm dealing with &lt;em&gt;modules&lt;/em&gt; and they have their own syntax (which I had to learn).&lt;/li&gt;
&lt;li&gt;I had to download and install all my &lt;em&gt;dependencies&lt;/em&gt; (what I wanted to use in my project), some of which required other dependencies to be installed&lt;/li&gt;
&lt;li&gt;When building a simple HTML/CSS/JS static page, I only deal with one folder, which I push to my Github repo. &lt;/li&gt;
&lt;li&gt;Packages come with default settings, not all of which will suit you. They also come with a JSON config file that can be modified according to the framework specifications.&lt;/li&gt;
&lt;li&gt;I can't just include TailwindCSS in my CSS file, because it's made of plenty of classes that I won't use. I can, instead, run a script that tells it to &lt;em&gt;build&lt;/em&gt; the final file in my &lt;strong&gt;dist&lt;/strong&gt; folder and &lt;em&gt;purge&lt;/em&gt; out all unutilised classes. This script can be set in your "package.JSON".
Not running &lt;strong&gt;purge&lt;/strong&gt; will result in a huge CSS file that's mostly pointless.&lt;/li&gt;
&lt;li&gt;More generally speaking, I learned how to use Tailwind classes in my HTML and how to modify them, if required.&lt;/li&gt;
&lt;li&gt;Learned to use other packages I didn't plan on using (&lt;a href="https://www.npmjs.com/package/gh-pages"&gt;gh-pages&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/autoprefixer"&gt;autoprefixer&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ultimately, as long as you're using a version control system like &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; to track your project, nothing is &lt;strong&gt;really&lt;/strong&gt; broken. You can always revert back to a previous stage. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I had to stare at my screen several times, thinking "why does this NOT work?", before finding out about many of the things I listed - you don't know what you don't know.&lt;/p&gt;

&lt;p&gt;You &lt;strong&gt;need&lt;/strong&gt; to make mistakes, so that you can learn. And you will learn &lt;strong&gt;incredibly&lt;/strong&gt; fast when you start making those mistakes and fixing them.&lt;/p&gt;

&lt;p&gt;There would be even more things to list, but it would get too long and you would get... &lt;em&gt;comfortable&lt;/em&gt; (see what I did there?).&lt;/p&gt;

&lt;p&gt;I didn't spend more than 30 minutes, sometimes an hour, over the course of four or five days, with varying levels of attention due to my full-time job. That's a lot of learning for such a little time dedicated to it. &lt;/p&gt;

&lt;p&gt;What's better is that these new bits of knowledge are now embedded in my mind and I will carry them with me in future projects. Knowledge builds up!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#to-conclude"&gt;
  &lt;/a&gt;
  To conclude
&lt;/h2&gt;

&lt;p&gt;Am I saying complicating things is good? Far from it, but in this case it served a specific purpose: forcing me to become acquainted with things I hadn't learned yet. &lt;br&gt;
The point was not whether TailwindCSS or another technology were necessary (they weren't), but to implement them and learn to use them. &lt;/p&gt;

&lt;p&gt;In a real-world situation, you would go with whatever option best matches your needs (or with whatever your boss or company says you're going to use), but in your personal projects, and especially if your main goal is &lt;strong&gt;learning&lt;/strong&gt; you can go wild (and you probably should). Your IDE is your playground. &lt;/p&gt;

&lt;p&gt;Will using one of these technologies in one project be enough to master them? Of course not. But you will have learned the basics, and next time you'll be able to build upon them, and expand further. &lt;/p&gt;

&lt;p&gt;So...&lt;/p&gt;

&lt;p&gt;...Why are you still here? Excuse me reader, I'm going to have to ask you to move along.&lt;br&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;THIS COMFORT AREA IS NOW OFFICIALLY OFF-LIMITS&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://imgflip.com/i/5qnqna"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2uqAbS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgflip.com/5qnqna.jpg" title="made at imgflip.com" width="500" height="713"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://imgflip.com/memegenerator"&gt;&lt;/a&gt;

</description>
      <category>motivation</category>
      <category>learning</category>
      <category>100daysofcode</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
