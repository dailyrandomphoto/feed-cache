<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cherry-Pick Your Teammate's Changes Without Push 'n Pull-ing To Your Repo In IntelliJ</title>
      <author>Andrew</author>
      <pubDate>Thu, 21 Oct 2021 08:53:30 +0000</pubDate>
      <link>https://dev.to/gitlive/cherry-pick-your-teammates-changes-without-push-n-pull-ing-to-your-repo-in-intellij-2h84</link>
      <guid>https://dev.to/gitlive/cherry-pick-your-teammates-changes-without-push-n-pull-ing-to-your-repo-in-intellij-2h84</guid>
      <description>&lt;p&gt;You asked your teammate for help with a piece of code and they showed you the solution in their editor. Now you need to fetch those changes. Usually, this would mean a series of tedious Git commands for both of you (not to mention that the changes will forever grace your git history), but no longer - GitLive allows you to cherry-pick your teammate's changes straight from their local files without having to push and pull to Git.&lt;/p&gt;

&lt;p&gt;In IntelliJ, open up the team window by clicking on the GitLive icon on the bottom tool window bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GD-ZyCO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634659779314/0zhLYUIW3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GD-ZyCO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634659779314/0zhLYUIW3.png" alt="IJ-ultimate_2-box.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Click the arrow on the left-hand side of the teammate that helped you to see the repositories they have cloned, locate the one they made the changes to and click the arrow beside that too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4yfTkWbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746697377/KkYrAS69c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4yfTkWbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746697377/KkYrAS69c.png" alt="img-1-full (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, you can see the list of files changed by your teammate on their branch compared to the main branch. Files with asterisks next to the file icon contain changes made locally by your teammate that have not yet been pushed to the remote repository.&lt;/p&gt;

&lt;p&gt;Since we are only interested in their local changes, click the filter icon at the bottom of the team window to filter to only the unpushed changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7V7Sq6-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746195634/r30k3K1Tp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7V7Sq6-C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746195634/r30k3K1Tp.png" alt="img-2-full.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can see the single file that contains the solution we want to copy! Clicking on it will open a diff of the changes so we can make sure it contains only the changes we need. Now all we need to do is to right click on the file and select the cherry-pick option to pick the changes. And voilà - no need for any git push- or git pull -ing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0gsbBxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746206691/EvpoAZjQZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0gsbBxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746206691/EvpoAZjQZ.png" alt="img-3-full.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also perform the cherry pick at the level above if you want to pick all changes from multiple files at once by right-clicking on the repository and selecting the cherry-pick option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCpUbuma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746506718/eaLU9epVI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCpUbuma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634746506718/eaLU9epVI.png" alt="img-4-full.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;find GitLive here&lt;/a&gt;, and if you want to learn more, check out &lt;a href="https://blog.git.live/gitlive-8-0-Cherry-picking-your-teammates-changes"&gt;this blog post&lt;/a&gt; or the &lt;a href="https://docs.git.live/docs/cherrypicking/"&gt;GitLive docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>git</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>15 Must-Have Browser Extensions for Web Developers</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 08:42:48 +0000</pubDate>
      <link>https://dev.to/h763/15-must-have-browser-extensions-for-web-developers-4b3d</link>
      <guid>https://dev.to/h763/15-must-have-browser-extensions-for-web-developers-4b3d</guid>
      <description>&lt;h2&gt;Browsers are increasingly incorporating more &lt;span&gt;&lt;a href="#"&gt;extensions, plugins and add-ons&lt;/a&gt;&lt;/span&gt;, which are often developed by their users, making the browser more powerful, and helping us increase our productivity. Here at Awwwards, our mission is to share with you the best resources and tools on the web, so we're writing a series of blog articles on &lt;span&gt;the best extensions and plugins for major browsers&lt;/span&gt;. To kick-off, we're focusing on extensions that are offered in the Chrome Web Store, available for free and easy to install.&lt;/h2&gt;
&lt;p&gt;Among the tools, we'll highlight those that are&lt;span&gt; most useful for web designers and developers&lt;/span&gt;. We hope you find them useful and get you better results. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/chrome-extensions-for-web-developers/&amp;amp;ved=2ahUKEwjNobWsr-fyAhX_yzgGHYoACLUQFnoECAMQBQ&amp;amp;usg=AOvVaw3LrSRSp_yMsQU7StlCW8qG"&gt;15 Must-Have Browser Extensions for Web Developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Agrippa 1.2 is out 🎉🎉</title>
      <author>Nitzan Hen</author>
      <pubDate>Thu, 21 Oct 2021 08:42:10 +0000</pubDate>
      <link>https://dev.to/nitzanhen/agrippa-12-is-out-13jl</link>
      <guid>https://dev.to/nitzanhen/agrippa-12-is-out-13jl</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; is growing steadily - it's been out for a little over two months, and already has a small community around it! 🎉🎉&lt;/p&gt;

&lt;p&gt;If you're not using Agrippa yet, &lt;a href="https://github.com/NitzanHen/agrippa"&gt;get started here&lt;/a&gt;. If you &lt;em&gt;are&lt;/em&gt; using Agrippa, thanks for being part of the community! Let us know what you think about it, here or elsewhere.&lt;/p&gt;

&lt;p&gt;Either way, these are the changes introduced in v1.2.0:&lt;/p&gt;

&lt;p&gt;In general, the two main changes brought about in v1.2.0 are more options, this time with a focus on supporting different structural conventions that exist among React developers.&lt;/p&gt;

&lt;p&gt;Most notably, you can now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;export a component as a default export (instead of a named export)&lt;/li&gt;
&lt;li&gt;declare a component as a &lt;code&gt;function()&lt;/code&gt; declaration (instead of as a &lt;code&gt;const&lt;/code&gt; with an arrow function)&lt;/li&gt;
&lt;li&gt;create &lt;code&gt;memo()&lt;/code&gt; components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These changes came as part of a larger reform in component generation. Generation logic was remade from the ground up - instead of a large, unwieldy template, we now have proper composition patterns and a &lt;code&gt;ComponentComposer&lt;/code&gt;; internal terminology aside, this reform makes it much easier to scale, maintain and test the generation logic.&lt;/p&gt;

&lt;p&gt;Following this reform, we have begun the process of writing standardized tests - testing for some of the core code already exists, and the rest will be covered in the soon future.&lt;/p&gt;

&lt;p&gt;In parallel, we got some bonus enhancements - the API docs were rewritten and are now both comprehensive and easy to read, and Agrippa will also now search for a new version when run, so that you'll always be informed when a new version is available.&lt;/p&gt;

&lt;p&gt;You can also find this information at the release page.&lt;/p&gt;

&lt;p&gt;That's pretty much it! We already have some ideas for v1.3.0 - we're currently looking into adding support for styled-components, React native &lt;code&gt;Stylesheets&lt;/code&gt; and &lt;code&gt;Mui 5&lt;/code&gt; styling, writing more tests and more.&lt;/p&gt;

&lt;p&gt;Join the community! If you haven't, try Agrippa out, and if you find a bug in Agrippa or want to suggest a new feature, please reach out here or on GitHub.&lt;/p&gt;

&lt;p&gt;Thanks for your time, have a great day!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Steps to create your own Facebook Messenger chatbot</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Thu, 21 Oct 2021 08:20:54 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/steps-to-create-your-own-facebook-messenger-chatbot-1j8g</link>
      <guid>https://dev.to/dhruv_rajkotia/steps-to-create-your-own-facebook-messenger-chatbot-1j8g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-a-chatbot-why-its-important"&gt;
  &lt;/a&gt;
  What is a Chatbot? Why it's important?
&lt;/h3&gt;

&lt;p&gt;A chatbot is an artificial intelligence software that can simulate a conversation (or a chat) with a user in natural language through messaging applications, websites, mobile apps or through the telephone. It's more like a replacement of the human services to a bot which can understand the user requirement and provide assistance at any time with very low cost. &lt;/p&gt;

&lt;p&gt;A chatbot is often described as one of the most advanced and promising expressions of interaction between humans and machines. However, from a technological point of view, a chatbot only represents the natural evolution of a Question Answering system leveraging Natural Language Processing (NLP). Formulating responses to questions in natural language is one of the most typical Examples of Natural Language Processing applied in various enterprises’ end-use applications.&lt;/p&gt;

&lt;p&gt;Now a days we are seeing that social media platforms are becomes a crucial part in our lives and also beneficial for business perceptive. So today we are going to discuss regarding the How we can create our own Facebook messenger chatbot using Dialogflow CX.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1-create-facebook-app"&gt;
  &lt;/a&gt;
  Step 1: Create Facebook App
&lt;/h4&gt;

&lt;p&gt;First, we need to create a developer app for the Facebook. &lt;br&gt;
Go to &lt;a href="https://developers.facebook.com/"&gt;https://developers.facebook.com/&lt;/a&gt; and login using your Facebook credential. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G1hpMn9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpu747dda8mfswfbwy7n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G1hpMn9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpu747dda8mfswfbwy7n.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on My Apps and then you will redirect to the Developer console. Now we need to create a new app for this demo. Click on the Create App button on top right corner of the console. One you click that you can see the below screen. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7-pEGFmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy8t7nq1u717pz7qfbku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7-pEGFmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy8t7nq1u717pz7qfbku.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select App type based on your requirement. For this I'll go with the Business option. Click on the Next and you'll redirect to below screen. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LjfVVpgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrs39k6lr63xaemzjfdf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LjfVVpgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrs39k6lr63xaemzjfdf.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Provide the below details: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App Name: (I have provided as a Claudio)&lt;/li&gt;
&lt;li&gt;App Purpose: (I have selected Yourself or your own business)&lt;/li&gt;
&lt;li&gt;Business Manager Account: If you have created any business account then you can use that or you can ignore this one. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click on Create App button. App will be created and you will redirect to the App Dashboard. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-create-facebook-page"&gt;
  &lt;/a&gt;
  Step 2: Create Facebook page
&lt;/h4&gt;

&lt;p&gt;Go to &lt;a href="https://www.facebook.com/"&gt;https://www.facebook.com/&lt;/a&gt; and click on the Pages tab from left panel. Now click on the create New Page from left panel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3WyywBSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gky18yf2f7yg70lznreb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WyywBSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gky18yf2f7yg70lznreb.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Provide the page name and the category: &lt;br&gt;
Page name: Claudio ChatBot&lt;br&gt;
Category: Entertainment website (You can choose whatever you want)&lt;/p&gt;

&lt;p&gt;Click on the Create Page button. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fj2-chQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on2okj6yo80braqig0dh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fj2-chQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on2okj6yo80braqig0dh.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on the Add action button and select the Send Message Action button. Remove the pre-prompted question and click on Save.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yKJqp4vK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rliwgkfba9hq9fzh0zfp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yKJqp4vK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rliwgkfba9hq9fzh0zfp.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we are all set regarding the Facebook Page setup. Now let's move on to setup Dialogflow bot. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3-create-dialogflow-cx-agent"&gt;
  &lt;/a&gt;
  Step 3: Create Dialogflow CX Agent
&lt;/h4&gt;

&lt;p&gt;Here, We are going to create a Dialogflow Agent for our Facebook bot. For the demo purpose we are going to develop very simple flow in which bot will ask the Name and Phone number to user. Here you create a Dialogflow Agent based on your requirements. &lt;/p&gt;

&lt;p&gt;Please download the agent blob file from here. &lt;a href="https://drive.google.com/file/d/1AMID0_v4Qa2oUoQYYilLL5N5jT5mwGA-/view?usp=sharing"&gt;https://drive.google.com/file/d/1AMID0_v4Qa2oUoQYYilLL5N5jT5mwGA-/view?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Import Agent file using the Dialogflow console. &lt;a href="https://cloud.google.com/dialogflow/cx/docs/concept/agent?hl=en#export"&gt;https://cloud.google.com/dialogflow/cx/docs/concept/agent?hl=en#export&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-4-connect-dialogflow-cx-agent-with-messenger"&gt;
  &lt;/a&gt;
  Step 4: Connect Dialogflow CX Agent with Messenger
&lt;/h4&gt;

&lt;p&gt;Click on the Manage tab in Dialogflow CX Console. &lt;/p&gt;

&lt;p&gt;Click on the Integration option from the Menu list. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GBo6y-V7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsrr7awthfnlcu1lg4hd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GBo6y-V7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsrr7awthfnlcu1lg4hd.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now Click on the connect button for the Facebook Messenger card. You'll see the below screen as a popup. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nzyG6r-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq8aizpitqxxmg470shr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nzyG6r-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq8aizpitqxxmg470shr.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add below details in the popup. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App Secret: Go to the Facebook developer console and then go to Settings -&amp;gt; Basic option. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get the App secret and add the value here. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Page Access Token: 
Go to Messenger -&amp;gt; Settings -&amp;gt; Access Tokens section. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuYgK2QA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgfpcgkacx6sq75x1q3q.png" alt="Image description"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click on the Add or Remove Pages &lt;br&gt;
Select your page (Cloudio Chatbot) and then save changes. &lt;br&gt;
You can see the below screen after performing the above steps. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--82AnTq2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzb8yw0ktsibwko6skrn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--82AnTq2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzb8yw0ktsibwko6skrn.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on the generate token and copy the page access tokens from popup. &lt;/p&gt;

&lt;p&gt;Paste page access token in you dialogflow messenger bot connect popup. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Verify token: 
Add verify token as a random string which will help us in the next step for the webhook verification.(I have added as a dhruv123.) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now click on the start button so you'll see the below screen on the same popup window. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UNvZnDO1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9bwtpqfudgn0eggaxr3e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UNvZnDO1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9bwtpqfudgn0eggaxr3e.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the Webhook URL and go to the Developer Console -&amp;gt; Messenger -&amp;gt; Settings -&amp;gt; Webhooks section. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8AvQtpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ye0bakrpgtghtni2gd0q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8AvQtpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ye0bakrpgtghtni2gd0q.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paste Webhook URL as a Callback URL value and along with that add the verification token that we have added in the previous step. (dhruv123). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--omFQagb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4zv8n57sajjvqts8edl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--omFQagb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4zv8n57sajjvqts8edl.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the verify and save. &lt;/p&gt;

&lt;p&gt;After that Click on the Add Subscriptions option and checkmark messages and messaging_postbacks options. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wVbLxc6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfq5kq3h032wsvdctlph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVbLxc6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfq5kq3h032wsvdctlph.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JyNRVkDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgna69xhpa9mibm12bd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JyNRVkDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgna69xhpa9mibm12bd7.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it. Now your Facebook Messenger bot is up and running. Go to the messenger and search for your page (Claudio-ChatBot) and start conversation by sending hi message. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AvVEAS2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lgqga6b3az0j89b1ecd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AvVEAS2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lgqga6b3az0j89b1ecd.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see the bot will send you welcome message and conversation is started as per expectation. &lt;/p&gt;

&lt;p&gt;Thanks for reading this blog and Hope🤞 you liked it.&lt;/p&gt;

&lt;p&gt;Please &lt;a href="https://twitter.com/dhruv_rajkotia"&gt;FOLLOW&lt;/a&gt; me on twitter to get notify for my upcoming blogs regarding Deeper Dive into Dialogflow CX.&lt;/p&gt;

</description>
      <category>chatbot</category>
      <category>dialogflowcx</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Php Developers Learning Path 2021</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 08:12:09 +0000</pubDate>
      <link>https://dev.to/h763/php-developers-learning-path-2021-1hh7</link>
      <guid>https://dev.to/h763/php-developers-learning-path-2021-1hh7</guid>
      <description>&lt;p&gt;There are tons of tools in IT to ease programmers' workflow and make a product more efficient. But in the very beginning of honing PHP that might be such a puzzle to pick the right direction and instruments to learn first. A common solution for such problems now – roadmaps – visual sequences which answer the question "what to learn next?". Subject I'd like to discuss in the article – where to invest your time and efforts to learn PHP faster and become an in-demand backend programmer.&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/php-backend-developers-roadmap-2021/&amp;amp;ved=2ahUKEwjbnv7oxIDzAhWE4jgGHVIDAg0QFnoECDIQAQ&amp;amp;usg=AOvVaw0dn8u5bvsze8-D3BFmW66h"&gt;Php Developers Learning Path 2021&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is Termux? Full Tutorial With complete Termux commands[Learn Hacking]</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 08:11:03 +0000</pubDate>
      <link>https://dev.to/h763/what-is-termux-full-tutorial-with-complete-termux-commandslearn-hacking-2cdn</link>
      <guid>https://dev.to/h763/what-is-termux-full-tutorial-with-complete-termux-commandslearn-hacking-2cdn</guid>
      <description>&lt;p&gt;&lt;span&gt;Want to &lt;b&gt;learn Termux&lt;/b&gt; &lt;b&gt;for hacking?&lt;/b&gt; first, understand &lt;b&gt;what is Termux&lt;/b&gt; and follow &lt;b&gt;how to install applications using Termux&lt;/b&gt; and the &lt;b&gt;complete Termux command&lt;/b&gt;.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;In this article, I am going to give you detailed information and everything that you need to know about Termux. So Let's get started.&lt;/span&gt;&lt;br&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;What is Termux?&lt;/span&gt;&lt;/h3&gt;
&lt;span&gt;&lt;b&gt;What is Termux? Basically, Termux is a terminal emulator application for Android as well as a Linux environment that runs on Android without the need for rooting or special settings. Additional applications/packages are also available and can be installed using the APT package manager.&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;What distinguishes Termux from other terminal emulators is that Termux has set up such a way that the environment on Termux is the same as the Debian standard Linux environment. &lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/termux-tutorial-with-complete-termux-commands/&amp;amp;ved=2ahUKEwiw5ub3ltPzAhUqxDgGHfAPCcI4ChAWegQIGxAB&amp;amp;usg=AOvVaw30Lb2Gmd3lHYJ0yE9AdPyD"&gt;What is Termux? Full Tutorial With complete Termux commands&lt;/a&gt;&lt;/b&gt; &lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>7 Amazing😍 Tips While Redesigning Your Website</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 08:05:27 +0000</pubDate>
      <link>https://dev.to/h763/7-amazing-tips-while-redesigning-your-website-33g1</link>
      <guid>https://dev.to/h763/7-amazing-tips-while-redesigning-your-website-33g1</guid>
      <description>&lt;p&gt;Redesigning a website may be a stressful, time-consuming, and complex task. It’s natural if the amount of information you need to know in order to build a new, fresh design repulses you. However, if you take the time to educate yourself and gain hands-on experience, you can avoid making mistakes and achieve your goals. Here are seven golden pointers for redesigning your website to get you started:&lt;/p&gt;
&lt;p&gt;When you consider rebuilding your website, you most likely imagine something huge and powerful. It’s the ideal opportunity to give your website a bold and dramatic new appearance. However, the world is not what you might assume. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;READ More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/7-amazing-tips-while-redesigning-your-website/&amp;amp;ved=2ahUKEwjCx8Gc_JjzAhXawzgGHeQLBh4QFnoECAQQBQ&amp;amp;usg=AOvVaw1MCPezHaMcqtc9wW14T5Lx"&gt;7 Amazing Tips While Redesigning Your Website&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Get Started GSAP</title>
      <author>Sowjanya</author>
      <pubDate>Thu, 21 Oct 2021 07:58:09 +0000</pubDate>
      <link>https://dev.to/sowg/get-started-gsap-42pi</link>
      <guid>https://dev.to/sowg/get-started-gsap-42pi</guid>
      <description>&lt;p&gt;Learn the basics of GSAP in this article.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-gsap"&gt;
  &lt;/a&gt;
  What is GSAP?
&lt;/h1&gt;

&lt;p&gt;GSAP(Greensock Animation Platform) is a JavaScript library which can animate CSS properties, SVG, React, canvas, generic objects and many other things. It is 20 times faster than jQuery and solves countless browser inconsistencies.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#install-gsap"&gt;
  &lt;/a&gt;
  Install GSAP
&lt;/h1&gt;

&lt;p&gt;There are many ways you can use GSAP. Given below is the many ways and how to do it. Here is the &lt;a href="https://greensock.com/docs/v3/Installation"&gt;GSAP Installation Page&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h2&gt;

&lt;p&gt;You can download GSAP from the zip file &lt;a href="https://greensock.com/docs/v3/Installation#download"&gt;here&lt;/a&gt;. If you want help here is the &lt;a href="https://greensock.com/docs/v3/Installation#modules"&gt;GSAP Install Helper&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-cdn"&gt;
  &lt;/a&gt;
  Use CDN
&lt;/h2&gt;

&lt;p&gt;Using CDNs are highly recommended because they're so widely cached and load super-fast.&lt;/p&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#cdn"&gt;https://greensock.com/docs/v3/Installation#cdn&lt;/a&gt;&lt;br&gt;
Get CDNs - &lt;a href="https://greensock.com/docs/v3/Installation#CDN"&gt;https://greensock.com/docs/v3/Installation#CDN&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  NPM
&lt;/h2&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#npm-club"&gt;https://greensock.com/docs/v3/Installation#npm-club&lt;/a&gt;&lt;br&gt;
Input in code - &lt;a href="https://greensock.com/docs/v3/Installation#modules"&gt;https://greensock.com/docs/v3/Installation#modules&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h2&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#github"&gt;https://greensock.com/docs/v3/Installation#github&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#codepen"&gt;
  &lt;/a&gt;
  CodePen
&lt;/h2&gt;

&lt;p&gt;Using CodePen or GSAP has a lot of advantages, you get to use all the Club GreenSock Plugins for free.&lt;/p&gt;

&lt;p&gt;Docs - &lt;a href="https://greensock.com/docs/v3/Installation#codepenContentSection"&gt;https://greensock.com/docs/v3/Installation#codepenContentSection&lt;/a&gt;&lt;br&gt;
Template - &lt;a href="https://codepen.io/GreenSock/pen/aYYOdN"&gt;https://codepen.io/GreenSock/pen/aYYOdN&lt;/a&gt;&lt;br&gt;
URLs - &lt;a href="https://greensock.com/docs/v3/Installation#codepen"&gt;https://greensock.com/docs/v3/Installation#codepen&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#club-greensock"&gt;
  &lt;/a&gt;
  Club Greensock
&lt;/h1&gt;

&lt;p&gt;In Club Greensock you pay for extra plugins, but as said in CodePen you can use all the plugins for free, but if you want to do it outside CodePen you have to get Club Greensock membership.&lt;/p&gt;

&lt;p&gt;Get Membership - &lt;a href="https://greensock.com/club"&gt;https://greensock.com/club&lt;/a&gt;&lt;br&gt;
See the Plugins available in Club Greensock - &lt;a href="https://greensock.com/club/#feature-list"&gt;https://greensock.com/club/#feature-list&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#code-your-first-animation"&gt;
  &lt;/a&gt;
  Code your first animation!
&lt;/h1&gt;

&lt;p&gt;Finally the coding part!&lt;/p&gt;

&lt;p&gt;This is a basic example using to() tween:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gsap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#myID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you notice there are two things that make this animation work, there are : target and var. &lt;/p&gt;

&lt;p&gt;The target is the object your animating, this can be a raw object, an array of objects, or selector text like &lt;code&gt;".myClass"&lt;/code&gt; or &lt;code&gt;"#myID"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The var is an object with property/value pairs that you're animating to (like &lt;code&gt;opacity:0.5&lt;/code&gt;, &lt;code&gt;rotation:45&lt;/code&gt;, etc.) and other optional special properties like &lt;code&gt;duration&lt;/code&gt; and &lt;code&gt;onComplete&lt;/code&gt;. You can also add CSS style raw instead of doing it in the long js way.&lt;/p&gt;

&lt;p&gt;JS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;GSAP:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gsap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that I added the duration inside the round brackets instead of the curly ones? It can be done either ways&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a table of short codes for transform-related properties:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th&gt;GSAP&lt;/th&gt;
            &lt;th&gt;CSS&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;x: 100&lt;/td&gt;
            &lt;td&gt;transform: translateX(100px)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;y: 100&lt;/td&gt;
            &lt;td&gt;transform: translateY(100px)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;rotation: 360&lt;/td&gt;
            &lt;td&gt;transform: rotate(360deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;rotationX: 360&lt;/td&gt;
            &lt;td&gt;transform: rotateX(360deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;rotationY: 360&lt;/td&gt;
            &lt;td&gt;transform: rotateY(360deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;skewX: 45&lt;/td&gt;
            &lt;td&gt;    transform: skewX(45deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;skewY: 45&lt;/td&gt;
            &lt;td&gt;    transform: skewY(45deg)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;scale: 2&lt;/td&gt;
            &lt;td&gt;transform: scale(2, 2)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;scaleX: 2&lt;/td&gt;
            &lt;td&gt;transform: scaleX(2)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;scaleY: 2&lt;/td&gt;
            &lt;td&gt;transform: scaleY(2)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;xPercent: -50&lt;/td&gt;
            &lt;td&gt;transform: translateX(-50%)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;yPercent: -50&lt;/td&gt;
            &lt;td&gt;transform: translateY(-50%)&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Here is my first GSAP animation:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sowg/embed/zYzgeye?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;This is all there is to building a basic animation with GSAP. &lt;/p&gt;

&lt;p&gt;Make an animation with GSAP and share it with me! I will be glad to clear your doubts in the comment. &lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Backend Developer Learning Path 2021😎</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 07:55:42 +0000</pubDate>
      <link>https://dev.to/h763/backend-developer-learning-path-2021-4cho</link>
      <guid>https://dev.to/h763/backend-developer-learning-path-2021-4cho</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Who is a Backend Web Developer ? backend developer roadmap: Unlike the frontend developer, who takes care of the visible part of a site or app, the backend developer is a computer scientist who instead builds everything that is not seen but serves to make that site or application work. If we were to use the metaphor, …&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/backend-web-developer-roadmap/&amp;amp;ved=2ahUKEwjpzZmgg9vzAhWljuYKHWv9COEQFnoECDAQAQ&amp;amp;usg=AOvVaw0wwwwOEMbJgRlh0aWNwnCj"&gt;Backend Developers learning path 2021&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Swift 101: Building a Library with Swift Package Manager</title>
      <author>Jake Barnby</author>
      <pubDate>Thu, 21 Oct 2021 07:39:31 +0000</pubDate>
      <link>https://dev.to/appwrite/swift-101-building-a-library-with-swift-package-manager-46h</link>
      <guid>https://dev.to/appwrite/swift-101-building-a-library-with-swift-package-manager-46h</guid>
      <description>&lt;p&gt;The Swift Package Manager, or SwiftPM, is included with Swift 3.0 and above. Initially, it was only available for server-side or command line Swift projects. Since the release of Swift 5 and Xcode 11, SwiftPM is compatible with the Apple ecosystem for creating apps. This is great news because packages make it easier to divide your code into reusable, logical groups you can easily share across projects, or even with the entire world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-modules"&gt;
  &lt;/a&gt;
  📦️ Modules
&lt;/h2&gt;

&lt;p&gt;Before looking at &lt;strong&gt;packages&lt;/strong&gt;, we first need to understand &lt;strong&gt;modules&lt;/strong&gt;. Swift organises code into modules. Each module defines a namespace and which parts of the code can be used from outside the module. You can define all of your code in a single module, or break it up into multiple which can depend on each other. Using modules lets you easily build on your own re-usable code, or others code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#packages"&gt;
  &lt;/a&gt;
  🎁 Packages
&lt;/h2&gt;

&lt;p&gt;So what is a Swift package? A package is a collection of Swift source code files as well as a manifest file called &lt;code&gt;Package.swift&lt;/code&gt;, that defines various properties about the package, such as its name, the products it produces, any dependencies it has, and the targets it is built up of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anatomy-of-a-package"&gt;
  &lt;/a&gt;
  🦴 Anatomy of a Package
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Products&lt;/strong&gt; define the libraries and executables produced by a package. A library is simply a collection of files, for use as a dependency by other Swift code. An executable is a package that can be run, such a web server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dependencies&lt;/strong&gt; are other Swift Packages you want to use code from, within your package.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Targets&lt;/strong&gt; are what defines the module(s) that a package contains and that other packages can import. Targets define their own dependencies and can depend on other targets the package, or products from packages that this package depends on.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-swift-package"&gt;
  &lt;/a&gt;
  ⚙️ Creating a Swift Package
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This tutorial assumes you already have Swift installed. You can check by running &lt;code&gt;swift --help&lt;/code&gt; from your terminal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Creating a Swift Package from the command line is easy, and can be completed with one simple command from the directory you want to create your package in. For this example we'll start with a directory named &lt;code&gt;FooPackage&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;FooPackage
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;FooPackage

FooPackage&lt;span class="nv"&gt;$ &lt;/span&gt;swift package init &lt;span class="nt"&gt;--type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;library
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s it! There’ll be some output detailing the files created for your new package. You should see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  1 source file created inside a &lt;code&gt;Sources&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;  1 test source file inside a &lt;code&gt;Tests&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;  A &lt;code&gt;Package.swift&lt;/code&gt; manifest file at the root level&lt;/li&gt;
&lt;li&gt;  A README.md file at the root level&lt;/li&gt;
&lt;li&gt;  A .gitignore file at the root level&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of these files, only the single file in the &lt;code&gt;Sources&lt;/code&gt; directory and the manifest file are required for the package to build. This means you could easily create your own package by manually creating these two files as well.&lt;/p&gt;

&lt;p&gt;By default, the &lt;code&gt;Sources&lt;/code&gt; directory must contain all source code for the package, but you can use sub-directories to define sub-modules, if they are also defined as separate targets in your manifest file. Let's take a look at the generated &lt;code&gt;Package.swift&lt;/code&gt; for the new package to see the pieces we've discussed so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="c1"&gt;// swift-tools-version:5.3&lt;/span&gt;
&lt;span class="c1"&gt;// The swift-tools-version declares the minimum version of Swift required to build this package.&lt;/span&gt;

&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;PackageDescription&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;package&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"TestPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;          
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;testTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackageTests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;     
                &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;     
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see that our package defines one &lt;strong&gt;library&lt;/strong&gt;, &lt;code&gt;TestPackage&lt;/code&gt;, as well as one &lt;strong&gt;target&lt;/strong&gt; of the same name, and one test target, with depends on the module target.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-first-build"&gt;
  &lt;/a&gt;
  🥇 The first build
&lt;/h2&gt;

&lt;p&gt;Now that the package has been created, let’s build it for the first time with the build command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;swift build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because the package has no dependencies or code yet, this should complete almost instantly, displaying “Build Completed!” on success.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-dependencies"&gt;
  &lt;/a&gt;
  ➕ Adding dependencies
&lt;/h2&gt;

&lt;p&gt;Let's add a dependency and some code. Adding dependencies with SwiftPM is easy as you can use git URL's directly. We can add the following to our &lt;code&gt;Package.swift&lt;/code&gt; top level dependencies block to allow us to the Appwrite Swift SDK in our library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/appwrite/sdk-for-swift"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This declares that our package will pull in the code from the &lt;code&gt;Appwrite&lt;/code&gt; module in the &lt;code&gt;sdk-for-swift&lt;/code&gt; repository on GitHub, from the tag &lt;code&gt;0.1.0&lt;/code&gt; and allow us to add it to our targets dependencies as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
        &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;    
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we added &lt;code&gt;Appwrite&lt;/code&gt;, as this is the name of the library we're using from the &lt;code&gt;sdk-for-swift&lt;/code&gt; repository.&lt;/p&gt;

&lt;p&gt;Let's take a look at the full manifest file with the new dependency added:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="c1"&gt;// swift-tools-version:5.3&lt;/span&gt;
&lt;span class="c1"&gt;// The swift-tools-version declares the minimum version of Swift required to build this package.&lt;/span&gt;

&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;PackageDescription&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;package&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/appwrite/sdk-for-swift"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;    
                &lt;span class="s"&gt;"Appwrite"&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;testTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackageTests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;     
                &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;     
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we've changed the dependencies of our package, we need to &lt;strong&gt;resolve&lt;/strong&gt; them. This will happen automatically the first time you run &lt;code&gt;swift build&lt;/code&gt; with a new dependency, but if you manually update a version, you'll need to manually resolve the new version. This can be done by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;swift package resolve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will update the &lt;code&gt;Package.resolved&lt;/code&gt; to contain the version metadata about the &lt;code&gt;Appwrite&lt;/code&gt; module we just added. &lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#whats-going-on-here"&gt;
  &lt;/a&gt;
  What's going on here?
&lt;/h4&gt;

&lt;p&gt;Swift Package Manager uses a lockfile system similar to &lt;code&gt;package.lock&lt;/code&gt; for NPM and &lt;code&gt;composer.lock&lt;/code&gt; for Composer. This comes in the form of a file called &lt;code&gt;Package.resolved&lt;/code&gt;, which contains metadata about the packages dependencies versions, as well as their transitive dependencies. When you run &lt;code&gt;swift build&lt;/code&gt; and the dependencies are fetched, the versions from the &lt;code&gt;Package.resolved&lt;/code&gt; file will be used if found.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once resolved, we can build our package with &lt;code&gt;swift build&lt;/code&gt; again. This time we'll see the &lt;code&gt;sdk-for-swift&lt;/code&gt; repository pulled into the build checkouts, as well as built with the rest of the library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-adding-library-code"&gt;
  &lt;/a&gt;
  📥️ Adding library code
&lt;/h2&gt;

&lt;p&gt;Time to add some code. Let's open up the source file created earlier as &lt;code&gt;Sources/FooPackage/FooPackage.swift&lt;/code&gt; and update with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Appwrite&lt;/span&gt;

&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;FooPackage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Account&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nv"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;@escaping&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;AppwriteError&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Void&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;client&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;completion&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now have a login function! We just need to deploy the package, and we'll be able to use the login function from any other package or Apple app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-the-package"&gt;
  &lt;/a&gt;
  🧑‍💻 Deploying the package
&lt;/h2&gt;

&lt;p&gt;Fortunately deploying packages with Swift Package Manager is very easy. As the packages are Git based, all you need to do is push your changes to your default branch and create a tag for your release:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git init
&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add origin &lt;span class="o"&gt;[&lt;/span&gt;GitHub Repository URL]
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Initial Commit"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git tag 1.0.0
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin main &lt;span class="nt"&gt;--tags&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-using-as-a-dependency"&gt;
  &lt;/a&gt;
  📥️ Using as a dependency
&lt;/h2&gt;

&lt;p&gt;Using the same method we used earlier to add the Appwrite Apple SDK as a dependency, we can now add the newly deployed package as a dependency of a second package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;package&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"https://github.com/[YOUR GITHUB USERNAME]/[YOUR GITHUB REPOSITORY]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nv"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nv"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;    
                &lt;span class="s"&gt;"FooPackage"&lt;/span&gt;  
            &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-dependency"&gt;
  &lt;/a&gt;
  🏗️ Using the dependency
&lt;/h2&gt;

&lt;p&gt;With the package added as a dependency, we can now use the function we defined earlier anywhere in the second package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;FooPackage&lt;/span&gt;

&lt;span class="kt"&gt;FooPackage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"http://localhost/v1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"6bfgh45fng3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"test@test.test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"password"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#updating-your-package"&gt;
  &lt;/a&gt;
  🔽 Updating your package
&lt;/h2&gt;

&lt;p&gt;To update your package, the process is the same as deploying the initial version. You just need to push your changes to the default branch and a new version tag to go with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  ✅ That's it!
&lt;/h2&gt;

&lt;p&gt;You've now created, deployed, used and updated your very own Swift Package! Packages are a great way to re-use code and share your creations with the world. Looking forward to seeing what new packages come next for Swift!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-resources"&gt;
  &lt;/a&gt;
  📚️ Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://swift.org/"&gt;Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swift.org/package-manager/"&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/documentation/xcode/creating_a_standalone_swift_package_with_xcode"&gt;Creating Swift Packages with Xcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ios</category>
      <category>swift</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>30 reasons 😍 why you should learn JavaScript right now😎</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 07:29:12 +0000</pubDate>
      <link>https://dev.to/h763/30-reasons-why-you-should-learn-javascript-right-now-32np</link>
      <guid>https://dev.to/h763/30-reasons-why-you-should-learn-javascript-right-now-32np</guid>
      <description>&lt;p&gt;There are two reasons why it’s sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There’s Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that’s not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there’s no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;30 reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>[Road to Job] #5 Done School. Now what?</title>
      <author>Dev of Mith</author>
      <pubDate>Thu, 21 Oct 2021 07:06:02 +0000</pubDate>
      <link>https://dev.to/mithraperera/road-to-job-5-done-school-now-what-1jdi</link>
      <guid>https://dev.to/mithraperera/road-to-job-5-done-school-now-what-1jdi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#finally-done"&gt;
  &lt;/a&gt;
  Finally Done
&lt;/h1&gt;

&lt;p&gt;I finally graduated! I'm not sure if I was more excited about that or the fact that I could finally spend all waking hours of the day doing something I loved.&lt;/p&gt;

&lt;p&gt;Basically, in short, I fell in love with coding in my last year of EE and decided to drop all the hard work I put in to startup a EE career to pursue this passion. &lt;/p&gt;

&lt;p&gt;So I let my boss know that I would not be returning to work after I graduated to pursue my passion. She wished me the best of luck. I finished up my final exams. Graduated and now here I am, jobless and learning more and studying more than I ever have before. I also built an app for a startup I worked on with a friend in a incubator program over the summer but more on that another day.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-i-have-been-up-to"&gt;
  &lt;/a&gt;
  What I have been up to
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Front End Web Dev&lt;/strong&gt;&lt;br&gt;
It's been a few months now since I have graduated and I have kept quite busy. I have been self teaching myself HTML, CSS and JavaScript. Building responsive websites and working towards learning React next.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS re/Start&lt;/strong&gt;&lt;br&gt;
Also, in my quest to find new things to learn, I stumbled across cloud engineering and I found it quite fascinating. So in following this curiosity, I found this cool program called &lt;strong&gt;AWS re/Start&lt;/strong&gt; run in partnership with YES(Youth Employment Services). I applied and after some tests and interviews, I was in! &lt;br&gt;
(&lt;em&gt;I will start a series to discuss this further for those that are interested.&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google's 30 Days of Cloud&lt;/strong&gt;&lt;br&gt;
Now another cool program I found was this 30 Days of Cloud that I found out about because I am still part of the discord server for the &lt;em&gt;Google Student Developer Club&lt;/em&gt; of my university. It's pretty neat because they have 4 tracks and it runs 4 days a week for a month and you get to learn:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cloud Computing Fundamentals&lt;/li&gt;
&lt;li&gt;Infrastructure in Google Cloud&lt;/li&gt;
&lt;li&gt;Networking and Security in Google Cloud&lt;/li&gt;
&lt;li&gt;Data, ML and AI in Google Cloud&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;and the coolest part...&lt;em&gt;it is all for free!&lt;/em&gt;&lt;br&gt;
(&lt;em&gt;I will start a series to discuss this as well so stay tuned!&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FREE Flutter Apprentice Book&lt;/strong&gt;&lt;br&gt;
Yup, I am just raining down gems today. Another cool learning opportunity for you all. The Flutter team has partnered with Ray Wenderlich to offer this book for free until &lt;em&gt;January 6th, 2022&lt;/em&gt;! I am already pretty decent with flutter but I figured it wouldn't hurt to read it in my spare time and watch the book club they have going on till Jan 6th.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;AWS re/Start&lt;/strong&gt; : &lt;a href="https://aws.amazon.com/training/restart/"&gt;https://aws.amazon.com/training/restart/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Google's 30 Days of Cloud&lt;/strong&gt; : &lt;a href="https://cloudcoach.dev/home/"&gt;https://cloudcoach.dev/home/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;FREE Flutter Apprentice Book&lt;/strong&gt; : &lt;a href="https://flutter.dev/apprentice-giveaway"&gt;https://flutter.dev/apprentice-giveaway&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h1&gt;

&lt;p&gt;Learning web dev and the cloud full time and hoping to secure my first job in this new industry early next year.&lt;/p&gt;

&lt;p&gt;Until then, onwards and upwards we go! 🚀&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>cloud</category>
      <category>career</category>
    </item>
  </channel>
</rss>
