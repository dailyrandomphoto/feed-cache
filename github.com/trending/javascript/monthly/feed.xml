<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Monthly Trending</title>
    <description>Monthly Trending of JavaScript in GitHub</description>
    <pubDate>Fri, 18 Jun 2021 02:40:13 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>lyswhut/lx-music-desktop</title>
      <link>https://github.com/lyswhut/lx-music-desktop</link>
      <description>&lt;p&gt;一个基于 electron 的音乐软件&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop&quot;&gt;&lt;img width=&quot;200&quot; src=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/doc/images/icon.png&quot; alt=&quot;lx-music logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/lyswhut/lx-music-desktop&quot; alt=&quot;Release version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/actions/workflows/release.yml&quot;&gt;&lt;img src=&quot;https://github.com/lyswhut/lx-music-desktop/workflows/Build/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/actions/workflows/beta-pack.yml&quot;&gt;&lt;img src=&quot;https://github.com/lyswhut/lx-music-desktop/workflows/Build%20Beta/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://electronjs.org/releases/stable&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/dependency-version/lyswhut/lx-music-desktop/dev/electron/master&quot; alt=&quot;Electron version&quot;&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/lyswhut/lx-music-desktop/latest/total&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; --&gt; &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/tree/dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/lyswhut/lx-music-desktop/dev&quot; alt=&quot;Dev branch version&quot;&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/lyswhut/lx-music-desktop&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; --&gt; &lt;/p&gt; 
&lt;!-- [![GitHub release][1]][2]
[![Build status][3]][4]
[![GitHub Releases Download][5]][6]
[![dev branch][7]][8]
[![GitHub license][9]][10] --&gt; 
&lt;!-- [1]: https://img.shields.io/github/release/lyswhut/lx-music-desktop
[2]: https://github.com/lyswhut/lx-music-desktop/releases
[3]: https://ci.appveyor.com/api/projects/status/flrsqd5ymp8fnte5?svg=true
[4]: https://ci.appveyor.com/project/lyswhut/lx-music-desktop
[5]: https://img.shields.io/github/downloads/lyswhut/lx-music-desktop/latest/total
[5]: https://img.shields.io/github/downloads/lyswhut/lx-music-desktop/total
[6]: https://github.com/lyswhut/lx-music-desktop/releases
[7]: https://img.shields.io/github/package-json/v/lyswhut/lx-music-desktop/dev
[8]: https://github.com/lyswhut/lx-music-desktop/tree/dev
[9]: https://img.shields.io/github/license/lyswhut/lx-music-desktop
[10]: https://github.com/lyswhut/lx-music-desktop/blob/master/LICENSE --&gt; 
&lt;h2 align=&quot;center&quot;&gt;洛雪音乐助手桌面版&lt;/h2&gt; 
&lt;h3&gt;说明&lt;/h3&gt; 
&lt;p&gt;一个基于 Electron + Vue 开发的音乐软件。&lt;/p&gt; 
&lt;p&gt;所用技术栈：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Electron 12&lt;/li&gt; 
 &lt;li&gt;Vue 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;已支持的平台：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 7 及以上&lt;/li&gt; 
 &lt;li&gt;Mac OS&lt;/li&gt; 
 &lt;li&gt;Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;软件变化请查看：&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/CHANGELOG.md&quot;&gt;更新日志&lt;/a&gt;&lt;br&gt; 软件下载请转到：&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/releases&quot;&gt;发布页面&lt;/a&gt;&lt;br&gt; 或者到网盘下载（网盘内有MAC、windows版）：&lt;code&gt;https://www.lanzoui.com/b0bf2cfa/&lt;/code&gt; 密码：&lt;code&gt;glqw&lt;/code&gt;（若链接无法打开请百度：蓝奏云链接打不开）&lt;br&gt; 使用常见问题请转至：&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/FAQ.md&quot;&gt;常见问题&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;源码使用方法&lt;/h3&gt; 
&lt;p&gt;环境要求：Node.js 14+&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 开发模式
npm run dev

# 构建免安装版
npm run pack:dir

# 构建安装包（Windows版）
npm run pack:win

# 构建安装包（Mac版）
npm run pack:mac

# 构建安装包（Linux版）
npm run pack:linux

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UI界面&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop&quot;&gt;&lt;img width=&quot;100%&quot; src=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/doc/images/app.png&quot; alt=&quot;lx-music UI&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;启动参数&lt;/h3&gt; 
&lt;p&gt;目前软件已支持的启动参数如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-search&lt;/code&gt; 启动软件时自动在搜索框搜索指定的内容，例如：&lt;code&gt;-search=&quot;突然的自我 - 伍佰&quot;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-dha&lt;/code&gt; 禁用硬件加速启动（Disable Hardware Acceleration），窗口显示有问题时可以尝试添加此参数启动（v1.6.0起新增）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-dt&lt;/code&gt; 以非透明模式启动（Disable Transparent），对于未开启AERO效果的win7系统可加此参数启动以确保界面正常显示（注：该参数对桌面歌词无效），原来的&lt;code&gt;-nt&lt;/code&gt;参数已重命名为&lt;code&gt;-dt&lt;/code&gt;（v1.6.0起重命名）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-dhmkh&lt;/code&gt; 禁用硬件媒体密钥处理（Disable Hardware Media Key Handling），此选项将禁用Chromium的Hardware Media Key Handling特性（v1.9.0起新增）&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-play&lt;/code&gt; 启动时播放指定列表的音乐，参数说明： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;type&lt;/code&gt;：播放类型，目前固定为&lt;code&gt;songList&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;source&lt;/code&gt;：播放源，可用值为&lt;code&gt;kw/kg/tx/wy/mg/myList&lt;/code&gt;，其中&lt;code&gt;kw/kg/tx/wy/mg&lt;/code&gt;对应各源的在线列表，&lt;code&gt;myList&lt;/code&gt;为本地列表&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;link&lt;/code&gt;：要播放的在线列表歌单链接、或ID，source为&lt;code&gt;kw/kg/tx/wy/mg&lt;/code&gt;之一（在线列表）时必传，举例：&lt;code&gt;./lx-music-desktop -play=&quot;type=songList&amp;amp;source=kw&amp;amp;link=歌单URL or ID&quot;&lt;/code&gt;，注意：如果传入URL时必须对URL进行编码后再传入&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;name&lt;/code&gt;：要播放的本地列表歌单名字，source为&lt;code&gt;myList&lt;/code&gt;时必传，举例：&lt;code&gt;./lx-music-desktop -play=&quot;type=songList&amp;amp;source=myList&amp;amp;name=默认列表&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;index&lt;/code&gt;：从列表的哪个位置开始播放，选传，若不传默认播放第一首歌曲，举例：&lt;code&gt;./lx-music-desktop -play=&quot;type=songList&amp;amp;source=myList&amp;amp;name=默认列表&amp;amp;index=2&quot;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;常见问题&lt;/h3&gt; 
&lt;p&gt;常见问题已移至：&lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/FAQ.md&quot;&gt;https://github.com/lyswhut/lx-music-desktop/blob/master/FAQ.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;项目协议&lt;/h3&gt; 
&lt;p&gt;本项目基于 &lt;a href=&quot;https://github.com/lyswhut/lx-music-desktop/raw/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt; 许可证发行，以下协议是对于 Apache License 2.0 的补充，如有冲突，以以下协议为准。&lt;/p&gt; 
&lt;p&gt;词语约定：本协议中的“本项目”指洛雪音乐桌面版项目；“使用者”指签署本协议的使用者；“官方音乐平台”指对本项目内置的包括酷我、酷狗、咪咕等音乐源的官方平台统称；“版权数据”指包括但不限于图像、音频、名字等在内的他人拥有所属版权的数据。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;本项目的数据来源原理是从各官方音乐平台的公开服务器中拉取数据，经过对数据简单地筛选与合并后进行展示，因此本项目不对数据的准确性负责。&lt;/li&gt; 
 &lt;li&gt;使用本项目的过程中可能会产生版权数据，对于这些版权数据，本项目不拥有它们的所有权，为了避免造成侵权，使用者务必在&lt;strong&gt;24小时&lt;/strong&gt;内清除使用本项目的过程中所产生的版权数据。&lt;/li&gt; 
 &lt;li&gt;本项目内的官方音乐平台别名为本项目内对官方音乐平台的一个称呼，不包含恶意，如果官方音乐平台觉得不妥，可联系本项目更改或移除。&lt;/li&gt; 
 &lt;li&gt;本项目内使用的部分包括但不限于字体、图片等资源来源于互联网，如果出现侵权可联系本项目移除。&lt;/li&gt; 
 &lt;li&gt;由于使用本项目产生的包括由于本协议或由于使用或无法使用本项目而引起的任何性质的任何直接、间接、特殊、偶然或结果性损害（包括但不限于因商誉损失、停工、计算机故障或故障引起的损害赔偿，或任何及所有其他商业损害或损失）由使用者负责。&lt;/li&gt; 
 &lt;li&gt;本项目完全免费，且开源发布于 GitHub 面向全世界人用作对技术的学习交流，本项目不对项目内的技术可能存在违反当地法律法规的行为作保证，&lt;strong&gt;禁止在违反当地法律法规的情况下使用本项目&lt;/strong&gt;，对于使用者在明知或不知当地法律法规不允许的情况下使用本项目所造成的任何违法违规行为由使用者承担，本项目不承担由此造成的任何直接、间接、特殊、偶然或结果性责任。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;若你使用了本项目，将代表你接受以上协议。&lt;/p&gt; 
&lt;p&gt;音乐平台不易，请尊重版权，支持正版。&lt;br&gt; 若对此有疑问请 mail to: lyswhut+qq.com (请将&lt;code&gt;+&lt;/code&gt;替换成&lt;code&gt;@&lt;/code&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lan-tianxiang/jd_shell</title>
      <link>https://github.com/lan-tianxiang/jd_shell</link>
      <description>&lt;p&gt;Node网页开发工具&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;新旧版本同时更新 答疑交流QQ群967451175&lt;/h3&gt; 
&lt;p&gt;V3版（原版） https://github.com/lan-tianxiang/jd_shell A1版（较新） https://github.com/lan-tianxiang/js_tool&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;100px&quot; src=&quot;https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true&quot; align=&quot;center&quot; alt=&quot;GitHub Readme Stats&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;JS SHELL&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;自动化一键完成JS库管理&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/raw/master/LICENSE&quot;&gt;&lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/license/lan-tianxiang/jd_shell.svg?label=License&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/issues&quot;&gt;&lt;img alt=&quot;Issues&quot; src=&quot;https://img.shields.io/github/issues/lan-tianxiang/jd_shell?color=0088ff&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/stargazers&quot;&gt;&lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/stars/lan-tianxiang/jd_shell.svg?label=Stars&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-Lan%20Tian%20Xiang%20%E2%86%92-gray.svg?colorA=655BE1&amp;amp;colorB=4F44D6&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/lxk0301&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-LXK%200301%20Scripts%20%E2%86%92-gray.svg?colorA=61c265&amp;amp;colorB=4CAF50&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/lan-tianxiang/jd_shell/v3/#demo&quot;&gt;查看 Demo&lt;/a&gt; · &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/issues/new/choose&quot;&gt;报告 Bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/issues/new/choose&quot;&gt;请求增加功能&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;喜欢这个项目？请考虑&lt;a href=&quot;&quot;&gt;捐赠❤&lt;/a&gt;来帮助它完善！ &lt;br&gt; &lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;当然，觉得默默关注也是鼓励的话，也可以在右上角给颗⭐！你的支持是我最大的动力😎！&lt;/h3&gt; 
&lt;p&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;h2&gt;必要声明:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;本仓库发布的SHELL项目，是用于对第三方js库进行自动更新，管理和运行的一体化软件.&lt;/li&gt; 
 &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/li&gt; 
 &lt;li&gt;本仓库发布的SHELL项目中涉及的任何脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断.&lt;/li&gt; 
 &lt;li&gt;所有使用者在使用SHELL项目的任何部分时，需先遵守法律法规。对于一切使用不当所造成的后果，需自行承担.对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/li&gt; 
 &lt;li&gt;间接使用SHELL项目的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, 本人对于由此引起的任何隐私泄漏或其他后果概不负责.&lt;/li&gt; 
 &lt;li&gt;如果任何单位或个人认为该项目可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关文件.&lt;/li&gt; 
 &lt;li&gt;任何以任何方式查看此项目的人或直接或间接使用该SHELL项目的任何脚本的使用者都应仔细阅读此声明。本人保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或SHELL项目的规则，则视为您已接受此免责声明.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何脚本，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;☣请各位不要传播！！☣&lt;/h5&gt; 
&lt;h3&gt;通知&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;2021/3/31 9:00 &lt;code&gt;Docker重要通知&lt;/code&gt;&lt;/strong&gt; 修复Docker遗留的隐藏BUG，为了保持docker和linux修复脚本的一致，请所有使用&lt;code&gt;Docker&lt;/code&gt;重新安装一键脚本，选择删除已部署的镜像即可。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;2021/3/30 9:00 &lt;code&gt;长期&lt;/code&gt;&lt;/strong&gt; ㅤ有好用的第三方脚本欢迎提交到https://github.com/lan-tianxiang/jd_scripts&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开发行程&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/5 12:00 &lt;code&gt;完成多账户并发运行任务功能&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/10 12:00 &lt;code&gt;对结构优化，减少执行文件&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/15 12:00 &lt;code&gt;不知道要更什么功能，你们来提！！！&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/15 12:00 &lt;code&gt;尚待继续！！！&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;适用于以下系统&lt;/h2&gt; 
&lt;h3&gt;如何部署？&lt;/h3&gt; 
&lt;p&gt;（推荐使用docker安装），有点如下： 一、安全方面，暴露主机端口很危险，docker被入侵不影响主机。 二、docker类似虚拟机，不用在主机安装软件，影响环境，且Bug少，面板自启功能 &lt;a href=&quot;https://github.com/lan-tianxiang/js_tool/wiki/Docker&quot;&gt;Docker&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Linux&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Linux&quot;&gt;Debian/Ubuntu/Armbian/OpenMediaVault等Debian系&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Linux&quot;&gt;CentOS/RedHat/Fedora等红帽系&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Android&quot;&gt;Android等使用Termux模拟Linux的系统&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Unix&quot;&gt;OpenWRT、MacOs等类UNIX系统&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Docker&lt;/code&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/actions&quot;&gt;&lt;img alt=&quot;Docker Built&quot; src=&quot;https://github.com/lan-tianxiang/jd_shell/workflows/Built_JD_Shell_To_Docker/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Docker&quot;&gt;Docker&lt;/a&gt; 🔻&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Windows10&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Win10&quot;&gt;Win10安装 WSL Ubuntu&lt;/a&gt; 🔻&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Instruction&quot;&gt;WIKI&lt;/a&gt; 和各文件注释都含有大量教程，请自行翻阅❗❗&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;/summary&gt; 
 &lt;h5&gt;小彩蛋&lt;/h5&gt; 
 &lt;h5&gt;默认隐藏，欢迎加入交流&lt;/h5&gt; 
 &lt;!--
好家伙！！
TG群：t.me/jd_shell
QQ群：967451175
--&gt; 
&lt;/details&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;只记录大的更新，小修小改不记录。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;2021-04-01, 新增在线SHELL调试功能，具体查看WIKI，Docker用户不支持&lt;/p&gt; 
&lt;p&gt;2021-03-30, 修复Docker遗留的隐藏BUG，保持docker和linux修复脚本的一致&lt;/p&gt; 
&lt;p&gt;2021-03-29, 增加超时关闭，以防因网络等未知原因卡住而不断消耗系统资源（默认关闭）&lt;/p&gt; 
&lt;p&gt;2021-03-28, 自动配置并填写助力码，在config最后的专区内，无需人工干预（默认关闭）&lt;/p&gt; 
&lt;p&gt;2021-02-19，面板功能集成至jd.sh内，运行jd.sh会出现操作提示&lt;/p&gt; 
&lt;p&gt;2021-01-23，控制面板增加日志查看功能，Docker重启容器后可以使用&lt;code&gt;docker restart jd&lt;/code&gt;，非Docker如果是pm2方式的请重启pm2进程&lt;code&gt;pm2 resatrt server.js&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;2020-01-21，增加shylocks/Loon脚本。&lt;/p&gt; 
&lt;p&gt;2021-01-15，如果本机上安装了pm2，则挂机程序以pm2启动，否则以nohup启动。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It’s free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn’t part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu’s China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;a href=&quot;https://discord.js.org&quot;&gt;&lt;img src=&quot;https://discord.js.org/static/logo.svg?sanitize=true&quot; width=&quot;546&quot; alt=&quot;discord.js&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;a href=&quot;https://discord.gg/djs&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/222078108977594368?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord server&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/discord.js.svg?maxAge=3600&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/discord.js.svg?maxAge=3600&quot; alt=&quot;NPM downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/discordjs/discord.js/actions&quot;&gt;&lt;img src=&quot;https://github.com/discordjs/discord.js/workflows/Testing/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/discordjs/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/discordjs/discord.js.svg?maxAge=3600&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/discordjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-patreon-F96854.svg?sanitize=true&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh-session&quot;&gt;npm install discord.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/voice&quot;&gt;@discordjs/voice&lt;/a&gt; for interacting with the Discord Voice API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client, Intents } = require(&#39;discord.js&#39;);
const client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES] });

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, message =&amp;gt; {
  if (message.content === &#39;ping&#39;) {
    message.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/djs&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.com/developers/docs/topics/community-resources#libraries&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn’t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/raw/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you’d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don’t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don’t hesitate to join our official &lt;a href=&quot;https://discord.gg/djs&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jklepatch/eattheblocks</title>
      <link>https://github.com/jklepatch/eattheblocks</link>
      <description>&lt;p&gt;Source code for Eat The Blocks, a screencast for Ethereum Dapp Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaTheBlocks&lt;/h1&gt; 
&lt;p&gt;Blockchain tutorials of EatTheBlocks. Learn how to build Decentralized Applications (Dapps) on Ethereum and Solidity Smart contracts&lt;/p&gt; 
&lt;p&gt;Covers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ethereum&lt;/li&gt; 
 &lt;li&gt;Solidity&lt;/li&gt; 
 &lt;li&gt;Web3&lt;/li&gt; 
 &lt;li&gt;Truffle&lt;/li&gt; 
 &lt;li&gt;DeFi (Decentralized Finance)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Youtube: &lt;code&gt;screencast&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Courses: other folders&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks.com/6-figure-blockchain-developer/&quot;&gt;6-Figures Blockchain Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks-pro.teachable.com/p/profitable-flashloans&quot;&gt;Profitable Flashloan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/iptv-org/iptv/actions/workflows/auto-update.yml/badge.svg?sanitize=true&quot; alt=&quot;auto-update&quot;&gt; &lt;img src=&quot;https://github.com/iptv-org/iptv/actions/workflows/clean.yml/badge.svg?sanitize=true&quot; alt=&quot;clean&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Collection of publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.nsfw.m3u&lt;/code&gt; (includes adult channels)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h3&gt;Playlists by category&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Category&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Auto&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/auto.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Animation&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/animation.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Business&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;59&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/business.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Classic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/classic.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Comedy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/comedy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Cooking&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/cooking.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Culture&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/culture.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Documentary&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/documentary.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Education&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/education.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Entertainment&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;134&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/entertainment.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Family&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/family.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;General&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;240&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/general.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kids&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;128&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/kids.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Legislative&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;60&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/legislative.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lifestyle&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;43&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/lifestyle.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Local&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;403&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/local.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Movies&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;145&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/movies.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Music&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;320&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/music.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;News&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;395&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/news.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Outdoor&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/outdoor.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Relax&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/relax.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Religious&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;231&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/religious.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Series&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;48&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/series.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Science&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/science.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Shop&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/shop.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sports&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;218&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/sports.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Travel&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/travel.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Weather&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/weather.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;XXX&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;79&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/xxx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Other&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7473&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/categories/other.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Playlists by language&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Akan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aka.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Albanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sqi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Amharic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/amh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Arabic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;370&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ara.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Armenian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;33&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hye.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Assyrian Neo-Aramaic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aii.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Azerbaijani&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/aze.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bashkir&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bak.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bengali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ben.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bosnian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bos.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Bulgarian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/bul.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Burmese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mya.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Catalan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cat.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;689&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/zho.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Croatian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hrv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Czech&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ces.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Danish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/dan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Dutch&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;60&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nld.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;English&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1841&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/eng.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Estonian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/est.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Faroese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Finnish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;French&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;157&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fra.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Galician&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/glg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Georgian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kat.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;German&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;213&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/deu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hebrew&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/heb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hindi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;108&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Hungarian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/hun.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Icelandic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/isl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Indonesian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ind.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Inuktitut&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/iku.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Italian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;146&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ita.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Japanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jpn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Javanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/jav.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kannada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kazakh&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kaz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Khmer&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/khm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kinyarwanda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Korean&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kor.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Kurdish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/kur.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Latvian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lav.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Lithuanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/lit.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Luxembourgish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ltz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Macedonian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mkd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Malay (macrolanguage)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/msa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Malayalam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mal.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Maltese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mlt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Mandarin Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;76&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cmn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Maori&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mri.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Min Nan Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Modern Greek (1453-)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ell.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Mongolian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/mon.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Montenegrin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/cnr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Nepali (macrolanguage)&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nep.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Norwegian Bokmål&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/nob.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Panjabi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pan.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Persian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;163&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fas.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Polish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;65&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pol.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Portuguese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;108&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/por.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Pushto&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/pus.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Romanian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;67&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ron.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Russian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;341&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/rus.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Serbian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/srp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sinhala&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sin.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Slovak&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/slk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Slovenian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/slv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Somali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/som.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Spanish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;585&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/spa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Sundanese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/sun.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Swedish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/swe.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Tagalog&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tgl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Tamil&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tam.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Telugu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tel.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Thai&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;35&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tha.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Turkish&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;75&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tur.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Turkmen&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/tuk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Ukrainian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;78&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/ukr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Urdu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/urd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Uzbek&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/uzb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Vietnamese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;52&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/vie.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Western Frisian&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/fry.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Yue Chinese&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/yue.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Undefined&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;4522&lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;&lt;code&gt;https://iptv-org.github.io/iptv/languages/undefined.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Playlists by country&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;!-- prettier-ignore --&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;Country&lt;/th&gt;
    &lt;th align=&quot;right&quot;&gt;Channels&lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;Playlist&lt;/th&gt;
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇫&amp;nbsp;Afghanistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/af.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇱&amp;nbsp;Albania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/al.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇿&amp;nbsp;Algeria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;74&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇸&amp;nbsp;American Samoa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/as.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇩&amp;nbsp;Andorra&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ad.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇴&amp;nbsp;Angola&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ao.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇮&amp;nbsp;Anguilla&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ai.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇬&amp;nbsp;Antigua &amp;amp; Barbuda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ag.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇷&amp;nbsp;Argentina&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ar.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇲&amp;nbsp;Armenia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;44&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/am.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇼&amp;nbsp;Aruba&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/aw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇺&amp;nbsp;Australia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;116&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/au.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇹&amp;nbsp;Austria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;56&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/at.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇿&amp;nbsp;Azerbaijan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/az.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇸&amp;nbsp;Bahamas&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bs.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇭&amp;nbsp;Bahrain&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇩&amp;nbsp;Bangladesh&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇧&amp;nbsp;Barbados&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇾&amp;nbsp;Belarus&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/by.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇪&amp;nbsp;Belgium&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/be.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇿&amp;nbsp;Belize&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇯&amp;nbsp;Benin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇲&amp;nbsp;Bermuda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇹&amp;nbsp;Bhutan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇴&amp;nbsp;Bolivia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇦&amp;nbsp;Bosnia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ba.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇼&amp;nbsp;Botswana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇷&amp;nbsp;Brazil&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;176&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/br.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇬&amp;nbsp;British Virgin Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇳&amp;nbsp;Brunei&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇬&amp;nbsp;Bulgaria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;40&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇫&amp;nbsp;Burkina Faso&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇮&amp;nbsp;Burundi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇭&amp;nbsp;Cambodia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇲&amp;nbsp;Cameroon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇦&amp;nbsp;Canada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;153&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ca.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇻&amp;nbsp;Cape Verde&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇾&amp;nbsp;Cayman Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ky.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇫&amp;nbsp;Central African Republic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇩&amp;nbsp;Chad&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/td.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇱&amp;nbsp;Chile&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;91&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇳&amp;nbsp;China&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;818&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇴&amp;nbsp;Colombia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/co.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇲&amp;nbsp;Comoros&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/km.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇬&amp;nbsp;Congo - Brazzaville&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇩&amp;nbsp;Congo - Kinshasa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇰&amp;nbsp;Cook Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ck.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇷&amp;nbsp;Costa Rica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;42&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇷&amp;nbsp;Croatia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇺&amp;nbsp;Cuba&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇼&amp;nbsp;Curaçao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇳&amp;nbsp;Curaçao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/an.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇾&amp;nbsp;Cyprus&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇿&amp;nbsp;Czechia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;50&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/cz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇮&amp;nbsp;Côte d’Ivoire&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ci.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇰&amp;nbsp;Denmark&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;21&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇯&amp;nbsp;Djibouti&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;47&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇲&amp;nbsp;Dominica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/dm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇴&amp;nbsp;Dominican Republic&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;92&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/do.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇨&amp;nbsp;Ecuador&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ec.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇬&amp;nbsp;Egypt&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;85&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/eg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇻&amp;nbsp;El Salvador&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇶&amp;nbsp;Equatorial Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇷&amp;nbsp;Eritrea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/er.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇪&amp;nbsp;Estonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ee.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇿&amp;nbsp;Eswatini&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇹&amp;nbsp;Ethiopia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/et.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇴&amp;nbsp;Faroe Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇯&amp;nbsp;Fiji&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇮&amp;nbsp;Finland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇷&amp;nbsp;France&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;232&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇫&amp;nbsp;French Guiana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇫&amp;nbsp;French Polynesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇫&amp;nbsp;French Southern Territories&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇦&amp;nbsp;Gabon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ga.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇲&amp;nbsp;Gambia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇪&amp;nbsp;Georgia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ge.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇩🇪&amp;nbsp;Germany&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;345&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/de.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇭&amp;nbsp;Ghana&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇷&amp;nbsp;Greece&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;138&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇱&amp;nbsp;Greenland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇩&amp;nbsp;Grenada&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇵&amp;nbsp;Guadeloupe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇺&amp;nbsp;Guam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇹&amp;nbsp;Guatemala&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇳&amp;nbsp;Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇼&amp;nbsp;Guinea-Bissau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/gw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇹&amp;nbsp;Haiti&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ht.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇳&amp;nbsp;Honduras&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇰&amp;nbsp;Hong Kong&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;29&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇭🇺&amp;nbsp;Hungary&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;43&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/hu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇸&amp;nbsp;Iceland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/is.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇳&amp;nbsp;India&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;274&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/in.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇩&amp;nbsp;Indonesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;100&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/id.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🌍&amp;nbsp;International&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;42&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/int.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇷&amp;nbsp;Iran&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;175&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ir.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇶&amp;nbsp;Iraq&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;100&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/iq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇪&amp;nbsp;Ireland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ie.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇱&amp;nbsp;Israel&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/il.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇮🇹&amp;nbsp;Italy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;352&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/it.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇯🇲&amp;nbsp;Jamaica&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇯🇵&amp;nbsp;Japan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;63&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇯🇴&amp;nbsp;Jordan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;59&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/jo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇿&amp;nbsp;Kazakhstan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;33&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇪&amp;nbsp;Kenya&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ke.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇮&amp;nbsp;Kiribati&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ki.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇽🇰&amp;nbsp;Kosovo&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/xk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇼&amp;nbsp;Kuwait&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;75&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇬&amp;nbsp;Kyrgyzstan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇦&amp;nbsp;Laos&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/la.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇻&amp;nbsp;Latvia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇧&amp;nbsp;Lebanon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;73&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇸&amp;nbsp;Lesotho&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ls.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇷&amp;nbsp;Liberia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇾&amp;nbsp;Libya&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ly.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇮&amp;nbsp;Liechtenstein&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/li.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇹&amp;nbsp;Lithuania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇺&amp;nbsp;Luxembourg&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;32&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇴&amp;nbsp;Macao&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;15&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mo.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇬&amp;nbsp;Madagascar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇼&amp;nbsp;Malawi&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇾&amp;nbsp;Malaysia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/my.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇻&amp;nbsp;Maldives&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇱&amp;nbsp;Mali&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ml.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇹&amp;nbsp;Malta&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇭&amp;nbsp;Marshall Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇶&amp;nbsp;Martinique&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mq.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇷&amp;nbsp;Mauritania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;45&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇺&amp;nbsp;Mauritius&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇾🇹&amp;nbsp;Mayotte&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/yt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇽&amp;nbsp;Mexico&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;72&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇫🇲&amp;nbsp;Micronesia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/fm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇩&amp;nbsp;Moldova&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/md.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇨&amp;nbsp;Monaco&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇳&amp;nbsp;Mongolia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇪&amp;nbsp;Montenegro&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/me.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇸&amp;nbsp;Montserrat&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ms.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇦&amp;nbsp;Morocco&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;69&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ma.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇿&amp;nbsp;Mozambique&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇲&amp;nbsp;Myanmar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇦&amp;nbsp;Namibia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/na.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇷&amp;nbsp;Nauru&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇵&amp;nbsp;Nepal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;9&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/np.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇱&amp;nbsp;Netherlands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;136&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇨&amp;nbsp;New Caledonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇿&amp;nbsp;New Zealand&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇮&amp;nbsp;Nicaragua&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ni.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇪&amp;nbsp;Niger&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ne.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇬&amp;nbsp;Nigeria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ng.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇺&amp;nbsp;Niue&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇫&amp;nbsp;Norfolk Island&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/nf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇵&amp;nbsp;North Korea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇰&amp;nbsp;North Macedonia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇵&amp;nbsp;Northern Mariana Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mp.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇳🇴&amp;nbsp;Norway&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/no.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇴🇲&amp;nbsp;Oman&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;57&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/om.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇰&amp;nbsp;Pakistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇼&amp;nbsp;Palau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇸&amp;nbsp;Palestine&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;67&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ps.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇦&amp;nbsp;Panama&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;17&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇬&amp;nbsp;Papua New Guinea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇾&amp;nbsp;Paraguay&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;20&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/py.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇪&amp;nbsp;Peru&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pe.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇭&amp;nbsp;Philippines&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ph.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇳&amp;nbsp;Pitcairn Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇱&amp;nbsp;Poland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;87&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇹&amp;nbsp;Portugal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;42&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇷&amp;nbsp;Puerto Rico&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇶🇦&amp;nbsp;Qatar&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;63&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/qa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇴&amp;nbsp;Romania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;93&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ro.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇺&amp;nbsp;Russia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;479&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ru.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇼&amp;nbsp;Rwanda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/rw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇪&amp;nbsp;Réunion&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/re.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇼🇸&amp;nbsp;Samoa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ws.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇲&amp;nbsp;San Marino&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;8&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇦&amp;nbsp;Saudi Arabia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;107&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sa.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇳&amp;nbsp;Senegal&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇷🇸&amp;nbsp;Serbia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;30&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/rs.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇨&amp;nbsp;Seychelles&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇱&amp;nbsp;Sierra Leone&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇬&amp;nbsp;Singapore&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇽&amp;nbsp;Sint Maarten&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sx.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇰&amp;nbsp;Slovakia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇮&amp;nbsp;Slovenia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;19&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/si.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇧&amp;nbsp;Solomon Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sb.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇴&amp;nbsp;Somalia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;51&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/so.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇿🇦&amp;nbsp;South Africa&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/za.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇷&amp;nbsp;South Korea&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;86&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇸&amp;nbsp;South Sudan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ss.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇸&amp;nbsp;Spain&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;386&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/es.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇰&amp;nbsp;Sri Lanka&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;18&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇧🇱&amp;nbsp;St. Barthélemy&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/bl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇭&amp;nbsp;St. Helena&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇰🇳&amp;nbsp;St. Kitts &amp;amp; Nevis&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/kn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇱🇨&amp;nbsp;St. Lucia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/lc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇲🇫&amp;nbsp;St. Martin&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/mf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇵🇲&amp;nbsp;St. Pierre &amp;amp; Miquelon&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/pm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇨&amp;nbsp;St. Vincent &amp;amp; Grenadines&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇩&amp;nbsp;Sudan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;49&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sd.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇪&amp;nbsp;Sweden&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/se.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇨🇭&amp;nbsp;Switzerland&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;109&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ch.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇾&amp;nbsp;Syria&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;69&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/sy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇸🇹&amp;nbsp;São Tomé &amp;amp; Príncipe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/st.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇼&amp;nbsp;Taiwan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;78&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇯&amp;nbsp;Tajikistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tj.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇿&amp;nbsp;Tanzania&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇭&amp;nbsp;Thailand&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;53&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/th.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇱&amp;nbsp;Timor-Leste&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tl.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇬&amp;nbsp;Togo&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tg.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇰&amp;nbsp;Tokelau&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇴&amp;nbsp;Tonga&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/to.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇹&amp;nbsp;Trinidad &amp;amp; Tobago&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tt.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇳&amp;nbsp;Tunisia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;49&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇷&amp;nbsp;Turkey&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;311&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tr.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇲&amp;nbsp;Turkmenistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;16&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇨&amp;nbsp;Turks &amp;amp; Caicos Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tc.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇹🇻&amp;nbsp;Tuvalu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/tv.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇮&amp;nbsp;U.S. Virgin Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vi.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇬&amp;nbsp;Uganda&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ug.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇦&amp;nbsp;Ukraine&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;180&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ua.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇪&amp;nbsp;United Arab Emirates&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;129&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ae.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇬🇧&amp;nbsp;United Kingdom&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;218&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uk.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇸&amp;nbsp;United States&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3140&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/us.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇾&amp;nbsp;Uruguay&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uy.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇺🇿&amp;nbsp;Uzbekistan&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/uz.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇺&amp;nbsp;Vanuatu&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vu.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇦&amp;nbsp;Vatican City&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/va.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇪&amp;nbsp;Venezuela&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;34&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ve.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇻🇳&amp;nbsp;Vietnam&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;59&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/vn.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇼🇫&amp;nbsp;Wallis &amp;amp; Futuna&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/wf.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇪🇭&amp;nbsp;Western Sahara&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/eh.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇾🇪&amp;nbsp;Yemen&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;61&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ye.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇿🇲&amp;nbsp;Zambia&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/zm.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇿🇼&amp;nbsp;Zimbabwe&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/zw.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;🇦🇽&amp;nbsp;Åland Islands&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/ax.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;Undefined&lt;/td&gt;
    &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;left&quot; nowrap&gt;&lt;code&gt;https://iptv-org.github.io/iptv/countries/undefined.m3u&lt;/code&gt;&lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Expand&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;languages&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;countries&quot;: [
      {
        &quot;code&quot;: &quot;us&quot;,
        &quot;name&quot;: &quot;United States&quot;
      },
      {
        &quot;code&quot;: &quot;ca&quot;,
        &quot;name&quot;: &quot;Canada&quot;
      }
    ],
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue. However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that’s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereumbook/ethereumbook</title>
      <link>https://github.com/ethereumbook/ethereumbook</link>
      <description>&lt;p&gt;Mastering Ethereum, by Andreas M. Antonopoulos, Gavin Wood&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastering Ethereum&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ethereumbook/ethereumbook/develop/images/cover_thumb.png&quot; alt=&quot;Mastering Ethereum Cover&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is a book for developers, offering a guide to the operation and use of the Ethereum, Ethereum Classic, RootStock (RSK) and other compatible EVM-based open blockchains.&lt;/p&gt; 
&lt;h2&gt;Reading this book&lt;/h2&gt; 
&lt;p&gt;To read this book, see &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/book.asciidoc&quot;&gt;book.asciidoc&lt;/a&gt;. Click on each of the chapters to read in your browser. Other parties may choose to release PDFs of the book online.&lt;/p&gt; 
&lt;h2&gt;Chapters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preface: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/preface.asciidoc&quot;&gt;Preface&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 1: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/01what-is.asciidoc&quot;&gt;What Is Ethereum&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 2: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/02intro.asciidoc&quot;&gt;Ethereum Basics&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 3: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/03clients.asciidoc&quot;&gt;Ethereum Clients&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 4: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/04keys-addresses.asciidoc&quot;&gt;Cryptography&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 5: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/05wallets.asciidoc&quot;&gt;Wallets&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 6: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/06transactions.asciidoc&quot;&gt;Transactions&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 7: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/07smart-contracts-solidity.asciidoc&quot;&gt;Smart Contracts and Solidity&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 8: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/08smart-contracts-vyper.asciidoc&quot;&gt;Smart Contracts and Vyper&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 9: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/09smart-contracts-security.asciidoc&quot;&gt;Smart Contract Security&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 10: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/10tokens.asciidoc&quot;&gt;Tokens&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 11: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/11oracles.asciidoc&quot;&gt;Oracles&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 12: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/12dapps.asciidoc&quot;&gt;Decentralized Applications (DApps)&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 13: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/13evm.asciidoc&quot;&gt;The Ethereum Virtual Machine&lt;/a&gt;’&lt;/li&gt; 
 &lt;li&gt;Chapter 14: ‘&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/14consensus.asciidoc&quot;&gt;Consensus&lt;/a&gt;’&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;p&gt;The content status is “COMPLETE”. The first edition of this book was published on December 1st, 2018. That edition is available in print and ebook format at many popular bookstores. It is tagged &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;“first_edition_first_print”&lt;/a&gt; in the develop branch of this repository.&lt;/p&gt; 
&lt;p&gt;At this time, &lt;strong&gt;only bug fix requests are accepted&lt;/strong&gt;. If you find a bug, start an issue or better yet, fix the problem with a pull request. We will start work on the second edition in late 2019.&lt;/p&gt; 
&lt;h2&gt;Source and license&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;first edition&lt;/a&gt; of this book, as printed and sold by O’Reilly Media, is available in this repository.&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is released under the &lt;em&gt;Creative Commons CC-BY-SA license&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;This “Free Culture” compliant license was approved by our publisher O’Reilly Media (http://oreilly.com), who understands the value of open source. O’Reilly Media is not just the world’s best publisher of technical books, but is also a strong supporter of this open culture and the sharing of knowledge.&lt;/p&gt; 
&lt;p&gt;&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;span xmlns:dct=&quot;http://purl.org/dc/terms/&quot; href=&quot;http://purl.org/dc/dcmitype/Text&quot; property=&quot;dct:title&quot; rel=&quot;dct:type&quot;&gt;Mastering Ethereum&lt;/span&gt; by &lt;a xmlns:cc=&quot;http://creativecommons.org/ns#&quot; href=&quot;https://ethereumbook.info&quot; property=&quot;cc:attributionName&quot; rel=&quot;cc:attributionURL&quot;&gt;Andreas M. Antonopoulos, Gavin Wood&lt;/a&gt; is licensed under a &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;br&gt;Based on a work at &lt;a xmlns:dct=&quot;http://purl.org/dc/terms/&quot; href=&quot;https://github.com/ethereumbook/ethereumbook&quot; rel=&quot;dct:source&quot;&gt;https://github.com/ethereumbook/ethereumbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Translate This Book!&lt;/h1&gt; 
&lt;p&gt;If you are interested in translating this book, please join our team of volunteers at: https://www.transifex.com/aantonop/ethereumbook&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>odoo/odoo</title>
      <link>https://github.com/odoo/odoo</link>
      <description>&lt;p&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;http://runbot.odoo.com/runbot&quot;&gt;&lt;img src=&quot;http://runbot.odoo.com/runbot/badge/flat/1/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.odoo.com/documentation/master&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Tech Doc&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.odoo.com/forum/help-1&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Help&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://nightly.odoo.com/&quot;&gt;&lt;img src=&quot;http://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F&quot; alt=&quot;Nightly Builds&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Odoo&lt;/h2&gt; 
&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt; 
&lt;p&gt;The main Odoo Apps include an &lt;a href=&quot;https://www.odoo.com/page/crm&quot;&gt;Open Source CRM&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/website-builder&quot;&gt;Website Builder&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/e-commerce&quot;&gt;eCommerce&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/warehouse&quot;&gt;Warehouse Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/project-management&quot;&gt;Project Management&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/accounting&quot;&gt;Billing &amp;amp; Accounting&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/point-of-sale&quot;&gt;Point of Sale&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/employees&quot;&gt;Human Resources&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/lead-automation&quot;&gt;Marketing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/page/manufacturing&quot;&gt;Manufacturing&lt;/a&gt;, &lt;a href=&quot;https://www.odoo.com/#apps&quot;&gt;…&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get a full-featured &lt;a href=&quot;https://www.odoo.com&quot;&gt;Open Source ERP&lt;/a&gt; when you install several Apps.&lt;/p&gt; 
&lt;h2&gt;Getting started with Odoo&lt;/h2&gt; 
&lt;p&gt;For a standard installation please follow the &lt;a href=&quot;https://www.odoo.com/documentation/14.0/administration/install.html&quot;&gt;Setup instructions&lt;/a&gt; from the documentation.&lt;/p&gt; 
&lt;p&gt;To learn the software, we recommend the &lt;a href=&quot;https://www.odoo.com/slides&quot;&gt;Odoo eLearning&lt;/a&gt;, or &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;Scale-up&lt;/a&gt;, the &lt;a href=&quot;https://www.odoo.com/page/scale-up-business-game&quot;&gt;business game&lt;/a&gt;. Developers can start with &lt;a href=&quot;https://www.odoo.com/documentation/14.0/developer/howtos.html&quot;&gt;the developer tutorials&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>module-federation/module-federation-examples</title>
      <link>https://github.com/module-federation/module-federation-examples</link>
      <description>&lt;p&gt;Implementation examples of module federation , by the creators of module federation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Module Federation Examples&lt;/h1&gt; 
&lt;p&gt;This repository is to showcase examples of how Webpack 5’s new Module Federation can be used.&lt;/p&gt; 
&lt;p&gt;| If you need &lt;strong&gt;support&lt;/strong&gt;, consider looking at my sponsor profile &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_medium=https://github.com/sponsors/ScriptedAlchemy&amp;amp;utm_campaign=sponsor_link&quot;&gt;https://github.com/sponsors/ScriptedAlchemy&lt;/a&gt; | For companies that require consultations, contact me on twitter or email (on github profile) | | –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– | —————————————————————————————————————————————————————————————————————————————————————————————— | | &lt;strong&gt;Youtube Screencasts&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_medium=https%3A%2F%2Fwww.youtube.com%2Fplaylist%3Flist%3DPLWSiF9YHHK-DqsFHGYbeAMwbd9xcZbEWJ&amp;amp;utm_campaign=youtube_playlist&quot;&gt;https://www.youtube.com/playlist?list=PLWSiF9YHHK-DqsFHGYbeAMwbd9xcZbEWJ&lt;/a&gt; | | &lt;strong&gt;Info site&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=github_pages&amp;amp;utm_medium=https://module-federation.github.io/&quot;&gt;https://module-federation.github.io/&lt;/a&gt; | | &lt;strong&gt;Official Docs&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=webpack_docs&amp;amp;utm_medium=https://webpack.js.org/concepts/module-federation&quot;&gt;https://webpack.js.org/concepts/module-federation&lt;/a&gt; | | &lt;strong&gt;Original Webpack Issue&lt;/strong&gt; | &lt;a href=&quot;https://module-federation.github.io/redirect?utm_source=ModuleFederationExamples&amp;amp;utm_campaign=merge_proposal_issue&amp;amp;utm_medium=https://github.com/webpack/webpack/issues/10352&quot;&gt;https://github.com/webpack/webpack/issues/10352&lt;/a&gt; | | &lt;strong&gt;Medium post&lt;/strong&gt; | &lt;a href=&quot;https://cb.run/fd40&quot;&gt;https://link.medium.com/xzFgBBtAx6&lt;/a&gt; | | &lt;strong&gt;JSNation Presentation&lt;/strong&gt; | &lt;a href=&quot;https://cb.run/N9py&quot;&gt;https://github.com/sokra/slides/blob/master/content/ModuleFederationWebpack5.md&lt;/a&gt; |&lt;/p&gt; 
&lt;h1&gt;Check out our book&lt;/h1&gt; 
&lt;p&gt;| &lt;a href=&quot;https://module-federation.myshopify.com/products/practical-module-federation&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/docs/MFCover.png&quot; alt=&quot;Practical Module Federation Book&quot; width=&quot;95%&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://module-federation.myshopify.com/products/practical-module-federation&quot; target=&quot;_blank&quot;&gt;We will be actively updating this book over the next year as we learn more about best practices and what issues people are running into with Module Federation, as well as with every release of Webpack as it moves towards a release candidate and release. So with your one purchase you are buying a whole year of updates.&lt;/a&gt; | | ——————————————————————————————————————————————————————————————— | —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— |&lt;/p&gt; 
&lt;h1&gt;Consultations&lt;/h1&gt; 
&lt;p&gt;| &lt;a href=&quot;https://calendly.com/scripted-alchemy/1-hr-group-consult&quot; target=&quot;_blank&quot;&gt;1 Hour group consultation&lt;/a&gt; | $100 | | –––––––––––––––––––––––––––––––––––––––––––––––––––––––– | ———— | | &lt;a href=&quot;https://calendly.com/scripted-alchemy/30-meeting-1-1&quot; target=&quot;_blank&quot;&gt;30 Min 1:1 consultation&lt;/a&gt; | $60 | | &lt;a href=&quot;https://cb.run/WIVv&quot; target=&quot;_blank&quot;&gt;15 Min 1:1 consultation&lt;/a&gt; | $30 | | Bespoke API modifications and hands on code | $300-$500/hr |&lt;/p&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Legend:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;⚠️: In Progress/Incomplete&lt;/li&gt; 
  &lt;li&gt;🔒: Depends on proprietary code that isn’t free.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/advanced-api&quot;&gt;Advanced API&lt;/a&gt; — showcasing advanced API use, also seen in other examples&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/basic-host-remote/README.md&quot;&gt;Basic Host-Remote&lt;/a&gt; — App 1 consumes remote components from App2.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/startup-code/README.md&quot;&gt;Startup Code&lt;/a&gt; — Advanced implementation that attaches initialization code to the remote container itself. Useful for dynamically setting publicPath in the remote.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/bi-directional/README.md&quot;&gt;Bi-Directional Hosts&lt;/a&gt; — App1 consumes App2 components; App2 consumes App1 components.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/self-healing/README.md&quot;&gt;Self-Healing&lt;/a&gt; — Fallback to remote apps vendors if a dependency fails to load.&lt;/li&gt; 
 &lt;li&gt;[x] ⚠️ &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/server-side-rendering/README.md&quot;&gt;Server-Side Rendering&lt;/a&gt; — App1 and App2 with SSR (Broken because of @loadable/component - check readme in demo.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/server-side-render-only/README.md&quot;&gt;Server-Side Rendering (simplified)&lt;/a&gt; — Less complex boilerplate.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/comprehensive-demo/README.md&quot;&gt;Multi UI Framework Federation&lt;/a&gt; — Multiple Apps in different technologies federated.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/dynamic-system-host/README.md&quot;&gt;Dynamic System Host&lt;/a&gt; — Swap between remotes at runtime.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/redux-reducer-injection/README.md&quot;&gt;Redux Reducer Injection&lt;/a&gt; — Dynamically inject reducers to host store at runtime.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-routes2&quot;&gt;Shared Routes&lt;/a&gt; — Compose federated routes for a seamless user experience.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/nested/README.md&quot;&gt;Nested Components&lt;/a&gt; — Nested remote components.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-context/README.md&quot;&gt;Share Context Provider&lt;/a&gt; — App1 and App2 with shared Context Provider.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/dashboard-example/README.md&quot;&gt;Federation Dashboard Example&lt;/a&gt; — Single example implementing &lt;a href=&quot;https://www.npmjs.com/package/@module-federation/dashboard-plugin&quot;&gt;Module Federation Dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] 🔒 &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/streamed-federation/README.md&quot;&gt;Streaming Federated Code&lt;/a&gt; — App1 and federated-middleware deploy to s3. App1 then stream’s federated code directly from S3&lt;/li&gt; 
 &lt;li&gt;[x] Non-UI Module&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-routing/README.md&quot;&gt;Routing&lt;/a&gt; — An example of sharing router context. Also worth looking at - &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/shared-routes2/README.md&quot;&gt;Routing 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/version-discrepancy/README.md&quot;&gt;Version Discrepancy&lt;/a&gt; — Federated apps depending on different versions of a dependency without side-effects.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/typescript/README.md&quot;&gt;TypeScript&lt;/a&gt; — Simple host/remote example using TypeScript.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/angular-universal-ssr/README.md&quot;&gt;Angular Universal&lt;/a&gt; — Remote and Host app with SSR, lazy modules and components.&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/nextjs-sidecar/README.md&quot;&gt;NextJS Sidecar Build&lt;/a&gt; — Sidecar build to enable module-federation alongside Next codebases&lt;/li&gt; 
 &lt;li&gt;[x] ⚠️ &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/nextjs/README.md&quot;&gt;NextJS&lt;/a&gt; — Operation, with workarounds. v10 will support async&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://github.com/manfredsteyer/module-federation-with-angular-dynamic-workflow-designer&quot;&gt;Building A Plugin-based Workflow Designer With Angular and Module Federation&lt;/a&gt; — External Example&lt;/li&gt; 
 &lt;li&gt;[x] &lt;a href=&quot;https://raw.githubusercontent.com/module-federation/module-federation-examples/master/vue3-demo/README.md&quot;&gt;Vue.js&lt;/a&gt; — Simple host/remote (render function / sfc) example using Vue 3.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Notes&lt;/h1&gt; 
&lt;p&gt;To run from a git checkout locally, remove all of the proprietary example directories and then run &lt;code&gt;yarn&lt;/code&gt; at the repo root. You can then run &lt;code&gt;yarn &amp;amp;&amp;amp; yarn start&lt;/code&gt; from any of the non-proprietary examples.&lt;/p&gt; 
&lt;img src=&quot;https://ssl.google-analytics.com/collect?v=1&amp;amp;t=event&amp;amp;ec=email&amp;amp;ea=open&amp;amp;t=event&amp;amp;tid=UA-120967034-1&amp;amp;z=1589682154&amp;amp;cid=ae045149-9d17-0367-bbb0-11c41d92b411&amp;amp;dt=ModuleFederationExamples&amp;amp;dp=/email/ModuleFederationExamplesRoot&quot;&gt; 
&lt;p&gt;Module federation will work with any type of file that youre able to import, that webpack underestands how to process. It is not a JS only, or react only feature. Images, CSS, JSON, WASM, and anything else can be federated.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sngxpro/QuanX</title>
      <link>https://github.com/sngxpro/QuanX</link>
      <description>&lt;p&gt;一键配置懒人包&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/anuraghazra/github-readme-stats&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api?username=sngxpro&quot; alt=&quot;Anurag’s GitHub stats&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;公众号少年歌行pro：6月17日 8:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;温某人&lt;/code&gt; 大佬 的 &lt;code&gt;10s阅读&lt;/code&gt; 脚本获取cookie教程如下）&lt;/p&gt; 
&lt;p&gt;查看脚本，注释中有用法&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;姐姐&lt;/code&gt; 大佬 的 &lt;code&gt;多看点修复&lt;/code&gt; 脚本（获取cookie教程如下）&lt;/p&gt; 
&lt;p&gt;https://raw.githubusercontent.com/CenBoMin/GithubSync/main/DKDVIDEO/readme.js&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;h4&gt;需配合以下【圈x】重写订阅获取cookie后使用&lt;/h4&gt; 
&lt;p&gt;` https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true&lt;/p&gt; 
&lt;p&gt;`&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro&lt;/p&gt; 
&lt;p&gt;#脚本更新&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月16日 21:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东粽情端午&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东东东电竞经理&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;Tom&lt;/code&gt; 大佬 的 &lt;code&gt;拼拼猪&lt;/code&gt; 脚本 （ios和安卓都有）&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【v2p for 安卓 订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/v2pAndroid.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取动物园库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：2个京东脚本需配合jd cookie 使用&lt;/h4&gt; 
&lt;h4&gt;注意：拼拼猪脚本需配合以下重写订阅获取cookie后使用&lt;/h4&gt; 
&lt;p&gt;【圈x】重写订阅&lt;/p&gt; 
&lt;p&gt;` https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true&lt;/p&gt; 
&lt;p&gt;`&lt;/p&gt; 
&lt;p&gt;【v2p for 安卓 订阅地址】&lt;/p&gt; 
&lt;p&gt;` https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/Android/rewrite/getcookie.conf&lt;/p&gt; 
&lt;p&gt;`&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro&lt;/p&gt; 
&lt;p&gt;#脚本更新&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月16日 14:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;温某人&lt;/code&gt; 大佬 的 &lt;code&gt;京东东东乐园&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取温某人库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro&lt;/p&gt; 
&lt;p&gt;#脚本更新&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月16日 14:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬全民挖现金&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro&lt;/p&gt; 
&lt;p&gt;#脚本更新&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月16日 7:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬品牌狂欢日&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro&lt;/p&gt; 
&lt;p&gt;#脚本更新&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月16日 7:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动9&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动10&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬极速版砍价3（需填变量）&lt;/code&gt; 脚本（用法附后）&lt;/p&gt; 
&lt;p&gt;第一步 运行脚本一次日志查看商品ID&lt;/p&gt; 
&lt;p&gt;获取你要砍价的ID后变量填写&lt;/p&gt; 
&lt;p&gt;export skuId=“这里填获取的商品ID”&lt;/p&gt; 
&lt;p&gt;第二部 再运行一次日志查看商品activityId变量填写&lt;/p&gt; 
&lt;p&gt;export activity=“这里填获取的商品activityId”&lt;/p&gt; 
&lt;p&gt;入口 京东 我的 0元砍价&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取动物园库、胖虎库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro #脚本更新 https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月15日 10:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬特物ZXJOY&amp;amp;DOGA&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎仓库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;p&gt;#公众号：少年歌行pro #脚本更新 https://t.me/shao66&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月15日 9:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;【庆祝动物园重新开业，动物园脚本地址都已改回官方原版】&lt;/p&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;Zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动8&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;Zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动7&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;Zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动6&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;4、新增了 &lt;code&gt;Tom&lt;/code&gt; 大佬 的 &lt;code&gt;美音星品&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取Zoopanda仓库查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月14日 15:45，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;ZCY01&lt;/code&gt; 大佬 的 &lt;code&gt;京东价格保护&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取ZCY01仓库命令】&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/ZCY01/daily_scripts.git “jd_”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月14日 15:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬特物ZX护舒宝&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬特物ZX润百颜&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;tom&lt;/code&gt; 大佬 的 &lt;code&gt;保时捷(小程序)&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎仓库命令查看tg群教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：2个京东脚本需配合jd cookie 使用&lt;/h4&gt; 
&lt;h4&gt;注意：保时捷小程序脚本需配合下方重写规则获取cookie后使用&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月13日 10:25，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;star261&lt;/code&gt; 大佬 的 &lt;code&gt;京东动物联萌收集金币star版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;star261&lt;/code&gt; 大佬 的 &lt;code&gt;京东动物联萌只做店铺任务star版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;star261&lt;/code&gt; 大佬 的 &lt;code&gt;京东动物联萌star版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【注意！！！青龙拉取star261仓库命令】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月11日 21:35，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬特物ZX雅培&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬赚金币（需填变量）&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;##入口为极速版 百元生活费 赚金币 邀请好友 ##第一次运行可不填写邀请码 运行一次查看自己的邀请码 export InviterPin=“dS%2Bp85VyjydPuAOOnFP%2Faw%3D%3D” ##你的邀请码&lt;/p&gt; 
&lt;p&gt;3、调整了 &lt;code&gt;ddo&lt;/code&gt; 大佬 的 &lt;code&gt;京享值pk&lt;/code&gt; 脚本 为官方地址，已更新api&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【注意！！！青龙拉取ddo仓库教程】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月11日 8:35，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;tom&lt;/code&gt; 大佬 的 &lt;code&gt;京东特物zx签到&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取此脚本命令】&lt;/p&gt; 
&lt;p&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/xl2101200/-/main/jdmn.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月11日 8:09，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬618限时盲盒&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取某已不想透露姓名库教程】（tg中查看下方链接查阅）&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月10日 18:09，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬618惊奇探秘夜&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬我是大老板农场&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、粗略修复了 &lt;code&gt;某已不想透露姓名&lt;/code&gt; 大佬 的 &lt;code&gt;系列失效&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;4、移除了给 &lt;code&gt;某已不想透露姓名&lt;/code&gt; 大佬制作 的 &lt;code&gt;专属logo&lt;/code&gt;，尽量不再让大佬名字与脚本产生关联&lt;/p&gt; 
&lt;p&gt;5、移除了不同作者相同活动脚本的名称中，对&lt;code&gt;某已不想透露姓名&lt;/code&gt; 大佬的id标注，尽量不再让大佬名字与脚本产生关联&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取某已不想透露姓名库教程】（tg中查看下方链接查阅）&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月9日 22:20，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬推一推（需填变量）&lt;/code&gt; 脚本 #自定义变量 export tytpacketId=””&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬拆红包（需填变量）&lt;/code&gt; 脚本 #自定义变量 export chbpacketId=””&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬京喜工厂抢茅台（需填变量）&lt;/code&gt; 脚本 #自定义商品变量 export shopid=“1598” ##你要商品ID 冰箱 export shopid1=“1607” ##你要商品ID 茅台&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库教程】（tg中查看下方链接查阅）&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1671&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月9日 7:20，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;mopo&lt;/code&gt; 大佬 的 &lt;code&gt;京东京喜牧场刷金币&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东京喜88红包动物园版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1671&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月8日 10:20，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬省钱大赢家邀请码&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;①运行此脚本，可获取邀请码和活动id&lt;/p&gt; 
&lt;p&gt;②将获取到的邀请码和活动id按照如下格式填入引号中， 然后写入青龙配置文件或柠檬boxjs&lt;/p&gt; 
&lt;p&gt;export redEnvelopeId=”” ##本期活动ID export inviter=”” ##邀请码&lt;/p&gt; 
&lt;p&gt;③再运行之前已加入仓库的 &lt;code&gt;京东柠檬省钱大赢家&lt;/code&gt; 脚本，即可正常跑了&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东极速版柠檬砍价（需填变量）&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;①首次运行此脚本，会提示本期商品id和邀请码&lt;/p&gt; 
&lt;p&gt;②将获取到的邀请码和商品id按照如下格式填入引号中， 然后写入青龙配置文件或柠檬boxjs&lt;/p&gt; 
&lt;p&gt;export actId=”” ##你要参加砍价的商品ID export packetId=”” ##你要参加砍价的邀请码&lt;/p&gt; 
&lt;p&gt;③重新运行此脚本即可正常砍价&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库教程】（tg中查看下方链接查阅）&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1671&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月8日 10:20，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬 的 &lt;code&gt;京东惊喜牧场0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取0301库】（可能还未同步）&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1671&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月8日 10:20，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬省钱大赢家&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬邀请有礼&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库】&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1671&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie 使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月8日 10:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;mopo&lt;/code&gt; 大佬 的 &lt;code&gt;京东京喜牧场&lt;/code&gt; 脚本 (先将新手任务做完，再执行本脚本，不然会出现未知错误)&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;柠檬芒果猎狼者撸汽水签到&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;先下载芒果TV登录 然后浏览器打开地址即可跳芒果APP即可获取数据 签到三天得汽水 https://h5.mgtv.com/2021/h5/60a608f6726e3f50c2942730/?inv=d75f73f2de2b47b2bd913a02510fa7f8&amp;amp;tc=FzJN9gmzJgCu#/&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取京喜牧场命令】&lt;/p&gt; 
&lt;p&gt;暂不提供，要问为啥，那就是和这位大佬还不认识，未获授权。如不喜请告知，随时移除。&lt;/p&gt; 
&lt;h4&gt;注意：柠檬的脚本需配合以下重写获取cookie&lt;/h4&gt; 
&lt;h4&gt;已添加过下面重写的无需重新添加，圈x首页长按风车—点左下角更新按钮，等左上角数字清零后即可&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月日 15:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东合肥旗舰店开业动物园版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;（此活动以前藏经阁的阿道夫大佬曾经出过脚本，暂不清楚是否一样，请试验）&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取脚本库命令】&lt;/p&gt; 
&lt;p&gt;点击查看下方tg链接&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1663&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月6日 16:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东GNC组队瓜分京豆&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取脚本库命令】&lt;/p&gt; 
&lt;p&gt;点击查看下方tg链接&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1655&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月5日 18:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬 的 &lt;code&gt;京东省钱大赢家之翻翻乐0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;hyzaw&lt;/code&gt; 大佬 的 &lt;code&gt;京东宠汪汪积分兑换奖品&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取脚本库命令】&lt;/p&gt; 
&lt;p&gt;点击查看下方tg链接&lt;/p&gt; 
&lt;p&gt;https://t.me/shao66/1655&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月5日 18:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;jiulan&lt;/code&gt; 大佬 的 &lt;code&gt;京东翻翻乐提现&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取单脚本命令】&lt;/p&gt; 
&lt;p&gt;ql raw https://raw.githubusercontent.com/jiulan/platypus/main/scripts/jd_ffl.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月5日 18:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618限时盲盒动物园版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;温某某&lt;/code&gt; 大佬 的 &lt;code&gt;京东618限时盲盒温某某版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取上述2大佬仓库命令】&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/zooPanda/zoo.git “zoo”&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/Wenmoux/scripts.git “jd”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月5日 8:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动5&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;zhiyi&lt;/code&gt; 大佬 的 &lt;code&gt;京东城城分现金互助执意版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;zhiyi&lt;/code&gt; 大佬 的 &lt;code&gt;京东618手机竞猜&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月4日 18:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动4&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取zoo库】&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/zooPanda/zoo.git “zoo”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月4日 17:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;hyzaw&lt;/code&gt; 大佬的 &lt;code&gt;京东京享pk&lt;/code&gt;脚本&lt;/p&gt; 
&lt;p&gt;2、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬 的 &lt;code&gt;京东柠檬华为荣耀618&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动1&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;4、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动2&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;5、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬 的 &lt;code&gt;京东618开卡活动3&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;6、新增了 &lt;code&gt;执意&lt;/code&gt; 大佬 的 &lt;code&gt;京东新潮品牌狂欢执意版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;7、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬 的 &lt;code&gt;京东新潮品牌狂欢0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;8、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬 的 &lt;code&gt;京东京喜领88元红包&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取hyzaw库（目前仅一个脚本，以后看看其他脚本格式再定是否修改命令）】&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/hyzaw/scripts.git “ddo_”&lt;/p&gt; 
&lt;p&gt;【青龙拉取其他库】&lt;/p&gt; 
&lt;p&gt;翻记录吧，这次太多我不浪费字数了&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月4日 10:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;wenmoux&lt;/code&gt; 大佬的 &lt;code&gt;京东新潮品牌联欢wenmoux&lt;/code&gt;脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取wenmoux库】 ql repo https://ghproxy.com/https://github.com/Wenmoux/scripts.git “jd”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月4日 9:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;柠檬&lt;/code&gt; 大佬的 &lt;code&gt;京东柠檬新潮品牌联欢&lt;/code&gt;脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取胖虎库】 ql repo https://ghproxy.com/https://github.com/panghu999/panghu.git “jd_”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月3日 17:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东明星小店&lt;/code&gt;脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙稍等一会拉取0301仓库一次，目前还没同步过来】&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月3日 16:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬的 &lt;code&gt;京东宝洁消消乐&lt;/code&gt;脚本&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;环境变量：&lt;/li&gt; 
 &lt;li&gt; &lt;pre&gt;&lt;code&gt;- export ZOO_OPENCAD=&quot;true&quot; //默认不开通会员
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;pre&gt;&lt;code&gt;- export ZOO_ADD2CART=&quot;true&quot; //默认不加购商品
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取zoopanda仓库命令】&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/zooPanda/zoo.git “zoo”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月3日 15:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;肥皂&lt;/code&gt; 大佬的 &lt;code&gt;全免小说&lt;/code&gt;脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙就别费劲跑这个了】&lt;/p&gt; 
&lt;h4&gt;注意：需配合下方 获取cookie重写规则使用&lt;/h4&gt; 
&lt;h4&gt;注意：勾选下方规则后，圈x首页长按风车—点左下角刷新按钮—到左上角没有红色数字了再去抓ck&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月3日 10:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东5G盲盒&lt;/code&gt;脚本&lt;/p&gt; 
&lt;p&gt;因为此为大佬个人脚本，与原本团队无关，故圈x中图标使用了&lt;code&gt;伊芙&lt;/code&gt;大明星的头像&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取0301仓库运行一次即可更新】&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月3日 10:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;jaysherlock&lt;/code&gt; 大佬的 &lt;code&gt;京东欧乐b&lt;/code&gt;脚本&lt;/p&gt; 
&lt;p&gt;因为此为大佬个人脚本，与原本团队无关，故圈x中图标使用了&lt;code&gt;伊芙&lt;/code&gt;大明星的头像&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取此脚本命令】&lt;/p&gt; 
&lt;p&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/jay_member_olb.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月3日 7:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;zoopanda&lt;/code&gt; 大佬的 &lt;code&gt;京东618与粽不同&lt;/code&gt;脚本&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;环境变量：&lt;/li&gt; 
 &lt;li&gt; &lt;pre&gt;&lt;code&gt;- export ZOO_OPENCAD=&quot;true&quot; //默认不开通会员
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;pre&gt;&lt;code&gt;- export ZOO_ADD2CART=&quot;true&quot; //默认不加购商品
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取zoopanda仓库命令】&lt;/p&gt; 
&lt;p&gt;ql repo https://github.com/zooPanda/zoo.git “zoo”&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月2日 11:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;Wenmoux&lt;/code&gt; 大佬的 &lt;code&gt;京东特物ZX联想&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取此脚本命令】&lt;/p&gt; 
&lt;p&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/Wenmoux/scripts/master/jd/superBrand.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月1日 8:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;Wenmoux&lt;/code&gt; 大佬的 &lt;code&gt;京东总裁送好礼&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取此脚本命令】&lt;/p&gt; 
&lt;p&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/Wenmoux/scripts/master/jd/babelDiy.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：6月1日 8:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;柠檬&lt;/code&gt; 大佬的 &lt;code&gt;京东柠檬东东泡泡大战&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取此脚本命令】&lt;/p&gt; 
&lt;p&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/panghu999/panghu/master/jd_ppdz.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月31日 16:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东沸腾之夜&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙拉取命令】 ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/jd_party_night.js&lt;/p&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月31日 8:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;tom&lt;/code&gt; 大佬的 &lt;code&gt;青椒音乐&lt;/code&gt; 脚本，ck大佬稍后发&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月30日 10:30，解锁vip规则进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、同步了 &lt;code&gt;ios黑科技&lt;/code&gt; 大佬的 &lt;code&gt;18禁app解锁规则&lt;/code&gt; ，共计破解了&lt;code&gt;32&lt;/code&gt;个app，营养快线准备好了么&lt;/p&gt; 
&lt;p&gt;【我黑哥身体是真的好！】&lt;/p&gt; 
&lt;h3&gt;想知道具体有啥、从哪下载请查阅下方链接&lt;/h3&gt; 
&lt;p&gt;https://github.com/sngxpro/QuanX/blob/master/rewrite/unlockvip.md&lt;/p&gt; 
&lt;h3&gt;使用方法：需配合下方重写订阅获取cookie后使用&lt;/h3&gt; 
&lt;h4&gt;注意：一定在圈x首页长按风车–再点一下左下角刷新按钮，等左上角数字清零后才能同步配置！&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;[rewrite remote]
https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/unlockvip.conf, tag=少年歌行解锁vip, update-interval=86400, opt-parser=false, enabled=true


&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月30日 10:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;tom&lt;/code&gt; 大佬的 &lt;code&gt;湘创生活&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;h4&gt;注意：需配合下方重写订阅获取cookie后使用&lt;/h4&gt; 
&lt;h4&gt;注意：一定在圈x首页长按风车–再点一下左下角刷新按钮，等左上角数字清零后才能同步配置！&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;[rewrite remote]
https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月28日 17:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 的 &lt;code&gt;京东一次性入会领豆13&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 的 &lt;code&gt;京东一次性入会领豆12&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取上面新增的2个脚本】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/member_13.js

ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/member_12.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月28日 17:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;柠檬大佬&lt;/code&gt; 的 &lt;code&gt;京东步数换京豆柠檬版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东金榜创造营0301版】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/panghu999/ningmeng/main/jd_bs.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月28日 17:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 的 &lt;code&gt;京东金榜创造营0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东金榜创造营0301版】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/chinnkarahoi/jd_scripts/master/jd_gold_creator.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月28日 14:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 的 &lt;code&gt;京东一次性入会领豆11&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东城城分现金自动提现】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/member_11.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月27日 19:40，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;柠檬&lt;/code&gt; 大佬的 &lt;code&gt;京东城城分现金自动提现&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东城城分现金自动提现】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw http://nm66.top/jd_cctx.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月27日 19:40，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东星推官好友互助0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东家电星推官0301版】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/jd_xtg_help.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合jd cookie使用&lt;/h4&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月27日 19:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东家电星推官0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;tom&lt;/code&gt; 大佬的 &lt;code&gt;小宝种树&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、增加了 &lt;code&gt;tom&lt;/code&gt; 大佬的 &lt;code&gt;云云赚呗&lt;/code&gt; 脚本【注意，由于tom大佬的规则过于粗暴，单独为这个脚本做了独立获取cookie订阅，以防影响其他规则】&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东家电星推官0301版】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/chinnkarahoi/jd_scripts/master/jd_xtg.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;注意：需配合下方重写订阅获取cookie后使用&lt;/h4&gt; 
&lt;h4&gt;注意：下方第一个重写订阅可获取京东cookie&lt;/h4&gt; 
&lt;h4&gt;注意：下方第二个重写订阅单独用于获取云云赚呗cookie，尽量不要和其他重写规则同时启用&lt;/h4&gt; 
&lt;h4&gt;注意：一定在圈x首页长按风车–再点一下左下角刷新按钮，等左上角数字清零后才能同步配置！&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;[rewrite remote]
https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true

https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/yyzb.conf, tag=云云赚呗（与其他规则冲突）, update-interval=86400, opt-parser=false, enabled=false


&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;公众号少年歌行pro：5月26日 21:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;阿道夫&lt;/code&gt;大佬 的 &lt;code&gt;京东京喜阶梯红包&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、 增加了&lt;code&gt;阿道夫&lt;/code&gt; 大佬的 &lt;code&gt;京东家电星推官（圈x可能有不停止bug等更新）&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/monk-coder/dust/dust/normal/adolf_star.js
ql raw https://ghproxy.com/https://raw.githubusercontent.com/monk-coder/dust/dust/normal/adolf_jxhb.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合JD cookie使用&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月26日 21:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 的 &lt;code&gt;京东一次性入会领豆10&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/member_10.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合JD cookie使用&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月26日 8:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;阿道夫&lt;/code&gt; 大佬的 &lt;code&gt;京东618大势新品赏&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;阿道夫&lt;/code&gt; 大佬的 &lt;code&gt;京东超级盒子&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东618大势新品赏】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://ghproxy.com/https://raw.githubusercontent.com/monk-coder/dust/dust/normal/adolf_newInteraction.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【青龙单独拉取京东超级盒子】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/monk-coder/dust/dust/normal/adolf_superbox.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合JD cookie使用&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月25日 18:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;jaysherlock&lt;/code&gt; 大佬的 &lt;code&gt;京东抽盲盒一次性领豆&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;墨鱼手记&lt;/code&gt; 大佬的 &lt;code&gt;得宝小程序&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、增加了 &lt;code&gt;墨鱼手记&lt;/code&gt; 大佬的 &lt;code&gt;京东领现金兑换10元红包&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;【青龙单独拉取京东抽盲盒一次性领豆脚本】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/scripts/jay_freshgoods.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【青龙单独拉取京东领现金兑换10元红包脚本】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ql raw https://ghproxy.com/https://raw.githubusercontent.com/ddgksf2013/Cuttlefish/master/Jd/jd_cash_exchange.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合下方重写订阅获取cookie后使用&lt;/h3&gt; 
&lt;h3&gt;注意：下方第一个重写订阅可获取京东cookie&lt;/h3&gt; 
&lt;h3&gt;注意：下方第二个重写订阅单独用于获取德宝小程序cookie，此规则和第一个重写中的【圣牧有机脚本cookie规则】冲突，因为2者不要同时启用&lt;/h3&gt; 
&lt;h3&gt;注意：一定在圈x首页长按风车–再点一下左下角刷新按钮，等左上角数字清零后才能同步配置！&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;[rewrite remote]
https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true

https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/debao.conf, tag=德宝小程序（与获取cookie规则冲突）, update-interval=86400, opt-parser=false, enabled=false

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月25日 12:00，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、新增了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东动物联萌618&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;仓库订阅地址：&lt;/p&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;注意：需配合JD cookie使用&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月25日 7:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、修复了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东获取多账号ck&lt;/code&gt; 脚本 因未知原因 404的问题&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;小米运动&lt;/code&gt; 脚本 因未知原因 404的问题&lt;/p&gt; 
&lt;p&gt;圈x首页长按风车–点左下角刷新按钮同步即可&lt;/p&gt; 
&lt;p&gt;3、增加了 &lt;code&gt;姐姐&lt;/code&gt; 大佬的 &lt;code&gt;同程小猪🐷&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;仓库订阅地址：&lt;/p&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json&lt;/p&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;p&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json&lt;/p&gt; 
&lt;p&gt;注意：一定在圈x首页长按风车–再点一下左下角刷新按钮，等左上角数字清零后才能同步配置！&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[rewrite remote]
https://raw.githubusercontent.com/sngxpro/QuanX/master/rewrite/cookie.conf, tag=获取Cookie（现抓现打勾）, update-interval=86400, opt-parser=false, enabled=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月24日 22:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 大佬的 &lt;code&gt;京东城城分现金藏经阁版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东城城领现金0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;3、增加了 &lt;code&gt;lxk0301&lt;/code&gt; 大佬的 &lt;code&gt;京东手机狂欢城0301版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;4、增加了 &lt;code&gt;evilbutcher&lt;/code&gt; 大佬的 &lt;code&gt;事业单位招聘监控&lt;/code&gt; 脚本（脚本或BoxJs填入要监控的地区即可）&lt;/p&gt; 
&lt;p&gt;5、增加了 &lt;code&gt;evilbutcher&lt;/code&gt; 大佬的 &lt;code&gt;高校人才网招聘监控&lt;/code&gt; 脚本（添加任务即可使用）&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合nobyda的通用京东cookie使用！&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月24日 1:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 大佬的 &lt;code&gt;京东一次性入会领豆9&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;阿道夫&lt;/code&gt; 大佬的 &lt;code&gt;京东手机狂欢城新一期&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
https://ghproxy.com/https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合nobyda的通用京东cookie使用！&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;公众号少年歌行pro：5月23日 11:30，脚本进行如下变动：&lt;/h3&gt; 
&lt;p&gt;1、增加了 &lt;code&gt;墨鱼手记&lt;/code&gt; 大佬的 &lt;code&gt;京东会员卡注销链接生成&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;2、增加了 &lt;code&gt;藏经阁&lt;/code&gt; 大佬的 &lt;code&gt;京东会员卡注销经典修复版&lt;/code&gt; 脚本&lt;/p&gt; 
&lt;p&gt;上述脚本功能相似，都是生成注销地址链接，然后导出后手动注销，属于半自动工具，请根据个人喜好选择&lt;/p&gt; 
&lt;h3&gt;仓库订阅地址：&lt;/h3&gt; 
&lt;p&gt;【圈x订阅地址】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【v2p订阅地址】&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;需翻墙
https://raw.githubusercontent.com/sngxpro/QuanX/master/V2pTaskSub/sngxprov2p.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;注意：需配合nobyda的通用京东cookie使用！&lt;/h3&gt; 
&lt;hr&gt; 
&lt;hr&gt; 
&lt;h3&gt;更多历史更新内容，请点击下方链接查看&lt;/h3&gt; 
&lt;p&gt;https://github.com/sngxpro/QuanX/blob/master/updata.md&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;以下为新懒人包仓库使用说明&lt;br&gt;&lt;/h2&gt; 
&lt;h2&gt;2021版懒人包使用方法（共2步）：&lt;/h2&gt; 
&lt;h3&gt;（一）订阅基础懒人包配置&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;
 1.复制2021版懒人包订阅地址，如下
  https://raw.githubusercontent.com/sngxpro/QuanX/master/sngx2021.conf

  2.打开QuanX，轻点右下角圆形旋转图标，然后将菜单下拉至最底端，选择“下载”
  
  3.将第一步复制的订阅地址粘贴进去，选确定，此时弹出订阅后添加进去的配置文件，点右上角的保存按钮保存即可

  4.回到QuanX的设置菜单，找到 Mitm 页面 ，点击生成证书，并配置安装到手机

  5.在手机的“设置”中安装证书后，记得到手机的 设置-通用-关于本机--证书信任设置中，将圈x的证书开关打开

  6.回到圈x的设置菜单，打开重写功能的开关和Mitm功能的开关

  7.此时基础懒人包已订阅完成
  
  8.基础懒人包赠送了5个高速节点，可以拿来即用【失效中，待更新】
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;（二）订阅懒人包任务（task）配置&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;
  1.选择想要加载的库，根据下文对照表，找到订阅地址。（也可在最上方文件列表中，进入task文件夹选择想要的仓库文件，点击raw获取真实地址，复制地址即为订阅地址）

  2.打开圈x软件，在设置菜单中找到调试，选择构造请求并进入

  3.在构造请求界面，点击右上方第一个图标，长的像是一个提示框加2个箭头

  4.弹出界面点加号，将之前选中的仓库订阅地址复制粘贴进来

  5.点击 好，即可看到出现了新建仓库及任务图标
  
  6.注意：第一次点击上一步的好，有可能不出现我们粘贴进去的新仓库，而是出现一个叫sample的空仓库，这是圈x的示例功能，请重复操作一遍即可
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;（三）仓库订阅地址&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;强烈推荐，真懒人配置，一劳永逸

❤ 【公众号少年歌行pro多网合一订阅地址，包含下方全部仓库的脚本】 

https://raw.githubusercontent.com/sngxpro/QuanX/master/task/AllinOne.json

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;致谢：本仓库使用的图标logo脚本，原作者仓库在下方：&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt; ☆【@orz-3的仓库】
https://github.com/Orz-3/mini


  ☆【@58xinian的仓库】
https://github.com/58xinian/icon

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;⭐️ Companies that don&#39;t have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don’t do “whiteboard” interviews. “Whiteboards” is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href=&quot;https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/master/RECOMMENDATIONS.md&quot;&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is 👍&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dhh/status/834146806594433025?lang=en&quot;&gt;&lt;img src=&quot;https://i.imgur.com/xJV6cF4.png&quot; width=&quot;500&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you’ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://airtable.com/shr3eGPDm3wGjT2gA&quot;&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href=&quot;https://github.com/poteto/hww-api&quot;&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href=&quot;https://nowhiteboards.io&quot;&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13874026&quot;&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=23981795&quot;&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview&quot;&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/abstract/jobs&quot;&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accenture.com/us-en/careers&quot;&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accredible.com/careers&quot;&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acko.com&quot;&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.acumenci.com/joinourteam&quot;&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adhoc.team&quot;&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adaface.com&quot;&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adcellerant.com/career&quot;&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.addstones.com&quot;&gt;Addstones&lt;/a&gt; | Paris, FR / Singapore, SG / Bucharest, RO / London, UK | Multiple interviews, discussion of technical background and experiences. Sometimes we do a on-site unsupervised small exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adevait.com&quot;&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adex.network&quot;&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryadhawk.com/jobs&quot;&gt;AdHawk&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with AdHawk engineer, and final pairing interview with AdHawk engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getadmiral.com&quot;&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adnymics.com&quot;&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://adthena.com&quot;&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/adwyze/jobs&quot;&gt;AdWyze&lt;/a&gt; | Bangalore, India | Short takehome project + (for fulltime) onsite pairing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aerofs.com/company/careers&quot;&gt;AeroFS&lt;/a&gt; | San Francisco, CA | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ageno.pl&quot;&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/agilemd/jobs&quot;&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careersatagoda.com/departments/technology&quot;&gt;Agoda&lt;/a&gt; | Bangkok, Thailand | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimotive.com/career/&quot;&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbrake.io&quot;&gt;Airbrake&lt;/a&gt; | San Francisco, CA / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/careers&quot;&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aiwip.com&quot;&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/meetalbert/&quot;&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/careers&quot;&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.allaboutapps.at/jobs&quot;&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://allegro.pl/praca&quot;&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alluvium.io&quot;&gt;Alluvium&lt;/a&gt; | Brooklyn, NY | Take-home assignment, on-site review dovetailing into collaborative project planning for extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alluxi.mx&quot;&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.almabase.com/careers#believe&quot;&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.alphasights.com&quot;&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amagi.io&quot;&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/amino-payments/jobs/&quot;&gt;Amino Payments&lt;/a&gt; | Philadelphia, PA | Real-world technical design and problem discussion, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gastrograph.com&quot;&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.angaza.com/careers/&quot;&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animech.com/join-us&quot;&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.anyfin.com&quot;&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apolloagriculture.com&quot;&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya/Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.beapplied.com&quot;&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/arachnys/jobs/220465-software-engineer&quot;&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aragon.one/#jobs&quot;&gt;Aragon One&lt;/a&gt; | Remote | Culture-first interview, take home technical challenge, technical interviews, and finally a compensated onsite trial week working on a real project that will be shipped&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://artemisag.com&quot;&gt;Artemis&lt;/a&gt; | Remote | An initial non-technical half-hour screening call, followed by 3 one-hour pairing sessions on a take-home project that you build yourself using either Ruby or JavaScript (or any Ruby or JavaScript framework). Senior candidates may also be required to review an example pull request as the final round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://articulate.com/company/careers&quot;&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.artsy.net/jobs#engineering&quot;&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asidatascience.com/careers&quot;&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.asos.com/epostings/index.cfm?fuseaction=app.jobsearch&amp;amp;company_id=30071&amp;amp;version=1&amp;amp;byBusinessUnit=5&quot;&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software crafstmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.ataccama.com&quot;&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atech.media&quot;&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atlan.com&quot;&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you’re applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auraframes.com/jobs?gh_src=2ef5cfa32&quot;&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aurorasolar.com/careers&quot;&gt;Aurora Solar&lt;/a&gt; | San Francisco, CA | Our process: 1) Initial phone call 2) 1 hour take home project in CoderPad along with a few essay questions relating to JavaScript, testing, etc. 3) Remote pairing session solving a problem similar to day to day work. 4) In-person interview with additional pairing exercise done on a laptop as well as culture interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/how-we-hire-engineers&quot;&gt;Auth0&lt;/a&gt; | Bellevue, WA / Buenos Aires, Argentina / Remote | Series of interviews, go over technical background and past experiences, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.auto1-group.com/jobs&quot;&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://automattic.com/work-with-us&quot;&gt;Automattic&lt;/a&gt; | Remote | short take-home real-world task, then a few weeks-long real-world, part-time, and paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AutoScout24/hiring&quot;&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avant.com/jobs&quot;&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avarteq.com/career&quot;&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avocarrot.com/company&quot;&gt;Avocarrot&lt;/a&gt; | Athens, Greece | on-site real world problem discussion and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axelerant.com/careers&quot;&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://axiacore.com&quot;&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axios.com/careers&quot;&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/b12#.WMlLfRIrJTa&quot;&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://somos.b2wdigital.com/bit&quot;&gt;B2W Digital&lt;/a&gt; | Rio de Janeiro, Brazil; São Paulo, Brazil | Time-boxed coding exercise at home, on-site pair programming with engineers and live software architecture challenges based on real situations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Babylonpartners/iOS-Interview-Demo&quot;&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://workatbackbase.com&quot;&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/backbone-plm/jobs&quot;&gt;Backbone&lt;/a&gt; | Boulder, CO | Initial phone screening to determine general fit, take-home project, finally an on-site where we discuss your take-home project and you meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.badi.com&quot;&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://team.badoo.com/jobs&quot;&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career012.successfactors.eu/sfcareer/jobreqcareer?jobId=46145&amp;amp;company=BAE&quot;&gt;BAE Systems Applied Intelligence&lt;/a&gt; | London, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bakkenbaeck.com/jobs&quot;&gt;Bakken &amp;amp; Bæck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.balabit.com&quot;&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.barracuda.com/company/careers&quot;&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/about/jobs&quot;&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bcredi.gupy.io&quot;&gt;Bcredi&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/beam&quot;&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://belka.us/lavora-con-no&quot;&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bemind.recruitee.com&quot;&gt;Bemind Interactive&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bendyworks.com/careers&quot;&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterment.com/careers&quot;&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterpt.com&quot;&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and “meet the team”.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/about-us/careers&quot;&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigabid.com/careers&quot;&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigbinary.com/jobs&quot;&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bioconnect.com/company/careers&quot;&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitexpert.de/karriere&quot;&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitpanda.com/en/career&quot;&gt;Bitpanda&lt;/a&gt; | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitsoflove.be/careers&quot;&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitso.com/jobs&quot;&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blackdotsolutions.com&quot;&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bleacherreport.com&quot;&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blendle.homerun.co/?lang=en&quot;&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blogfoster/join-the-engineering-team&quot;&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bloomworks.digital/software-engineer/&quot;&gt;Bloom Works&lt;/a&gt; | Remote | Discussion, pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluebottlecoffee.com/careers&quot;&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bluesoft.com.br&quot;&gt;Bluesoft&lt;/a&gt; | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate’s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/careers&quot;&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonus.ly/careers&quot;&gt;Bonusly&lt;/a&gt; | Boulder, CO | Values &amp;amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookingsync.com/en/jobs&quot;&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boomtownroi.com&quot;&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://botika.ai&quot;&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bouvet.no&quot;&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brainn.co&quot;&gt;brainn.co&lt;/a&gt; | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brainstation-23.com&quot;&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://breather.com/jobs&quot;&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate’s experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.brightbytes.net/careers&quot;&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.brighthr.com/careers&quot;&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/brightwheel/jobs&quot;&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.broadinstitute.org/data-sciences-platform&quot;&gt;Broad Institute’s Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/careers&quot;&gt;BrowserStack&lt;/a&gt; | Mumbai, India; Dublin, Ireland | Initial phone screen with semi-technical questions, two 2-hour assignments based on real problems solved in company (allowed to lookup internet), final interview with EMs/Director.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.btw.so&quot;&gt;btw&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Initial phone screen for cultural round, optional take-home assignment, two rounds of video interviews (1-2hrs) discussing through previous projects and technical stack&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bubbl.in/about&quot;&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buffer.com/journey&quot;&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/about/careers/&quot;&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.buhlergroup.com&quot;&gt;Buhler Group&lt;/a&gt; | Prague, CZ | Interview with a couple of technical questions. No task needed. Depending on the team there is another round with the guys in the HQ via skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildkite.com/home&quot;&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bulb.co.uk&quot;&gt;Bulb&lt;/a&gt; | London, UK | Phone screening, followed by a 2-4 hours take home task. If successful, an interview designing a real-world system with two engineers. Following that, two spoken interview stages: the first more behavioural, then leadership &amp;amp; culture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busbud.com/en/careers&quot;&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bustle.com/labs&quot;&gt;Bustle&lt;/a&gt; | New York City, Ny / Remote | Half day pair programming on a task for production or one of our Open Source projects. We’ll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busuu.com/jobs&quot;&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we’ve encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buttercms.com&quot;&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybox.com/company/careers/&quot;&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://byu.edu&quot;&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us&quot;&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cakesolutions.net/careers&quot;&gt;Cake Solutions&lt;/a&gt; | Manchester, UK; London, UK; New York, NY | Skype / Hangouts / phone call to explain the technical background, current position and set expectations about the salary, relocation, etc; if all good, what to expect next. Then take-home exercise for roughly 4 hours to demonstrate good thinking and ability to pick up new things, explain &amp;amp; document the solution, finishing with pair programming with senior developers (remote or in person); use the code as a talking point around the more difficult things after getting through the simple starter tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/canonical&quot;&gt;Canonical&lt;/a&gt; | London, UK; Austin, TX; Boston, MA; Beijing, China; Shanghai, China; Taipei, Taiwan; Tokyo, Japan; Remote | Review your open source contributions at shortlist stage. 4x60m interviews over Hangouts, each of which is carried out blind (none of the interviewers talk to each other until the final review). The company is fully remote, so there is no on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uk.capgemini.com&quot;&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caravelo.com/softdev&quot;&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cartegraph.com/company/careers/&quot;&gt;Cartegraph&lt;/a&gt; | Dubuque, IA / Remote | Phone screen, hiring manager interview, small take-home coding project, and team code review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.carto.com/careers/&quot;&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casetext.com/jobs&quot;&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cashlink.de&quot;&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.causeway.com/content/opportunity&quot;&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centroida.co/contact.html&quot;&gt;Centroida&lt;/a&gt; | Sofia, Bulgaria | Series of interviews, pair programming and take-home projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chainreaction.io&quot;&gt;Chain.Reaction&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamatheapp.bamboohr.com/jobs/&quot;&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chargify.com/jobs&quot;&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://checkout51.com/jobs&quot;&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cheerfulgiving.com&quot;&gt;Cheerful&lt;/a&gt; | Denver, CO / Remote | Take home small project which tests the adaptability of the developer with the stack used by the company, followed by a feedback interview (15 min) then a tryout offer (2 weeks / 1 month) or a permanent offer is made depending on the project results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chef.io/careers&quot;&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the ability to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctic-inc.com/careers/&quot;&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boston.gov/analytics&quot;&gt;City of Boston’s Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs&quot;&gt;City of Philadelphia’s Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.civisanalytics.com/careers&quot;&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.cj.com/jobs/category/engineering/&quot;&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clara.com/careers&quot;&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.clause.io/tag/careers/&quot;&gt;Clause&lt;/a&gt; | Remote | Non-technical interview with Director of Engineering and a member of the engineering team, followed by a technical interview with a cross-section of the team focusing on solution design / architecture and pairing, and an optional chat with the CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/clerkie/jobs&quot;&gt;Clerkie&lt;/a&gt; | San Francisco, CA | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clickmagick.com&quot;&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clippings.com&quot;&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they’ve recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cwconsult.dk&quot;&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cloudistics.com/careers&quot;&gt;Cloudistics&lt;/a&gt; | Reston, VA | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clubhouse.io/hiring&quot;&gt;Clubhouse&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code-orange.nl&quot;&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cogent.co.jp&quot;&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cognitect.com/jobs&quot;&gt;Cognitect, Inc.&lt;/a&gt; | Remote | Phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cognitran.com/employment-opportunities&quot;&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabora.com/careers.html&quot;&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colonist.io/contribute.html&quot;&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://combyne.com&quot;&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.compeon.de/karriere&quot;&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://about.cph.org/careers.html&quot;&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://condenastinternational.com&quot;&gt;Condé Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contactlab.com/en/careers&quot;&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://container-solutions.com&quot;&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentful.com/careers&quot;&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentsquare.com/careers&quot;&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.convious.com&quot;&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cookpad.com/us&quot;&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coorpacademy.com&quot;&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coverhound.com&quot;&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coyoapp.com&quot;&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creditkudos.com/jobs&quot;&gt;Credit Kudos&lt;/a&gt; | London, UK | Take-home project and pair programming via Skype or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossbrowsertesting.com&quot;&gt;CrossBrowserTesting&lt;/a&gt; | Memphis, TN | Take home project that resembles a problem support engineers deal with on a daily basis. On-Site interviews in a comfortable environement with a focus on hiring talented people vs exact skill-sets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdstrike.wd5.myworkdayjobs.com/crowdstrikecareers&quot;&gt;CrowdStrike&lt;/a&gt; | Remote | Multiple interviews onsite or remote as appropriate followed by small take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crownstone.rocks/jobs&quot;&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created Github projects, followed by in-person interview with a focus on someone’s professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cube19.com/work-with-us/&quot;&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cultivatehq.com&quot;&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.culturefoundry.com&quot;&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.currencytransfer.com&quot;&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darksky.net/jobs&quot;&gt;Dark Sky&lt;/a&gt; | Cambridge, MA | Phone interviews and a very short, real paid project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datatheorem.com&quot;&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; Bangladesh, India | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://DataChef.co&quot;&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate’s achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.datafleets.com/team&quot;&gt;DataFleets&lt;/a&gt; | San Francisco, CA; New York, NYC; London, UK; Remote | Interviews over video call, remote pair programmming, cultural/team fit with founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datalogue.github.io/recruiting&quot;&gt;Datalogue&lt;/a&gt; | Montreal, Canada | We Ask candidates to contribute meaningfully to an Open source project that reflects the stack they will be working with and send us a link to the PR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datamade.us&quot;&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don’t have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datascopeanalytics.com/careers/&quot;&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datlinq.com/en/vacancies&quot;&gt;Datlinq&lt;/a&gt; | Rotterdam, Netherlands | Take-home project based on actual work on data done by the team and in-person or Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dealtap.ca&quot;&gt;DealTap&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team, and optional pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.defmethod.com&quot;&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliveroo.co.uk/careers&quot;&gt;Deliveroo&lt;/a&gt; | London, UK &amp;amp; Remote | Short take-home project and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliverycenter.gupy.io&quot;&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carreiras.deliverymuch.com.br&quot;&gt;Delivery Much&lt;/a&gt; | Florianópolis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/dentolo&quot;&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deskbookers.com/en-gb/jobs&quot;&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.desmart.com&quot;&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://despark.com&quot;&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.detroitlabs.com/careers&quot;&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You’ll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.dev.to&quot;&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developmentseed.org/careers/jobs/&quot;&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working “sprint” in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devfolio.co&quot;&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devsdata.com&quot;&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dg-i.net&quot;&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dice.se&quot;&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.di.fm/jobs&quot;&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dixa.com/careers&quot;&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.doctolib.fr/jobs&quot;&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doist.com&quot;&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dollarshaveclub.com&quot;&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://door2door.io&quot;&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.com/careers&quot;&gt;DoorDash :runner::dash:&lt;/a&gt; | San Francisco, CA | Take home project + an on-site interview building off the project!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing&quot;&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drawbotics.com/en/join-us&quot;&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drchrono.com/careers&quot;&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it’s real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, “Resume” interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drizly.com&quot;&gt;Drizly&lt;/a&gt; | Remote | Phone screen, Blind take-home assignment, hiring manager interview, technical code pair interview, panel interview with sales, product, engineering and other stake holders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dronedeploy.com/careers.html&quot;&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.droneseed.co/jobs/&quot;&gt;DroneSeed&lt;/a&gt; | Seattle, WA | Take home assignment of a real problem we’ve worked on, group code review in subsequent interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.dubizzle.com/uae/job-vacancies&quot;&gt;dubizzle&lt;/a&gt; | Dubai, UAE | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/hiring&quot;&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-accent.com&quot;&gt;E-accent&lt;/a&gt; | Hilversum, Netherlands; Remote | Skype conversation, take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easytaxi.com.br&quot;&gt;Easy Taxi&lt;/a&gt; | São Paulo, Brazil | Take-home project, interview to evaluate the candidate’s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eaze.com/careers&quot;&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany&quot;&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ecaresoft.com&quot;&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echobind.com/culture&quot;&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.edenspiekermann.com&quot;&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ef.com&quot;&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eidu.com&quot;&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elnino.tech&quot;&gt;El Niño&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elpassion.com&quot;&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electricpulp.com&quot;&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elements.nl/careers&quot;&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ellucian.com/About-Us/Careers/&quot;&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elmah.io&quot;&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elvie.com&quot;&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goo.gl/N7SMKl&quot;&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emarsys.com&quot;&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergentsoftware.net&quot;&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.endava.com/en/Careers&quot;&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.engelvoelkers.com/en/tech/&quot;&gt;Engel &amp;amp; Völkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enhancv.com/about.html&quot;&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enigma.com&quot;&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enki.com&quot;&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ento.com/blog/ento-interview-process-101&quot;&gt;Ento.com&lt;/a&gt; | Melbourne, Australia | On-site interview to talk about your experiences and what you’re looking for in your next role, followed by a take-home practical test relevant to the work you’ll be undertaking at Ento.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.equalexperts.com&quot;&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ericsson.com&quot;&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://esharesinc.com/jobs&quot;&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://espeo.eu/career&quot;&gt;Espeo Software&lt;/a&gt; | Poznań, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etermax.com/en/careers/&quot;&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etixeverywhere.com/en/job-offers&quot;&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://euranova.eu&quot;&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.europaymentgroup.com&quot;&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exoscale.ch&quot;&gt;Exoscale&lt;/a&gt; | Bern, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.extend.com/careers&quot;&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fdex.com.br&quot;&gt;F(x)&lt;/a&gt; | São Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/careers/jobs&quot;&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.facile.it&quot;&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fairwinds.com/careers&quot;&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.falcon.io/jobs/&quot;&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastbill.com/jobs&quot;&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fatmap.com&quot;&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fauna.com&quot;&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feather-cfm.com&quot;&gt;Feather&lt;/a&gt; | Remote | Take-home challenge, portfolio discussion &amp;amp; team meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/fetchrewards&quot;&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.findy.us/findy-saiyo&quot;&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wearefine.com/careers&quot;&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.firemind.io&quot;&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thefitbot.com/careers.html&quot;&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flatfox.ch&quot;&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/adhawk?location=Sarasota%20Florida&quot;&gt;FloorForce&lt;/a&gt; | Sarasota, FL / Remote | Intro phone call with HR, second conversation with FloorForce engineer, and final pairing interview with FloorForce engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowdash.com/careers&quot;&gt;Flowdash&lt;/a&gt; | San Francisco, CA | Technical phone interview, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluidly.com&quot;&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fold.money&quot;&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://food52.com/jobs&quot;&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fooji.com&quot;&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.formidable.com/careers&quot;&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fortumo.com/careers&quot;&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://founders.as/joinus&quot;&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.foundryinteractive.com/contact&quot;&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fournova.com/jobs&quot;&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frappe.io/careers&quot;&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeagent.com/company/careers&quot;&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeletics.com/en/corporate/jobs&quot;&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freetrade.io/careers&quot;&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friday-jobs.personio.de&quot;&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontside.io/careers&quot;&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullfacing.com/vacancies&quot;&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.funda.nl/vacatures&quot;&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fundapps.co/about-us/join-our-team&quot;&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamevycareers.com&quot;&gt;Gamevy&lt;/a&gt; | London, UK; Bilbao, ES; Remote | Informal culture discussions, pair programming with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.garmin.com&quot;&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.garnercorp.com&quot;&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gasketgames.com/work-with-us&quot;&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gathercontent.com/about-us&quot;&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gemini.com/careers&quot;&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genui.com&quot;&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghostinspector.com/jobs&quot;&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.ginetta.net&quot;&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/about/careers&quot;&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/jobs/apply/&quot;&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitprime.com&quot;&gt;GitPrime&lt;/a&gt; | Denver, CO; Remote | small short term real-world project, paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glints.com/sg/inside/careers/&quot;&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/about/jobs&quot;&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.godaddy.com/careers/overview&quot;&gt;GoDaddy&lt;/a&gt; | Sunnyvale, CA | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gojek.io&quot;&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Techinal problem solving and discussion, Cultural Fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gower.st&quot;&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graffino.com&quot;&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graftonstudio.com&quot;&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gram.gs&quot;&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gramercytech.com&quot;&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grandcentrix.net/jobs&quot;&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatgrape.com/jobs/&quot;&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | Github or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graph.cool&quot;&gt;Graphcool&lt;/a&gt; | Berlin, Germany | On-site pair programming of a small, isolated real world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.graphicacy.com&quot;&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphistry.com&quot;&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grok-interactive.com&quot;&gt;Grok Interactive&lt;/a&gt; | San Antonio, TX | Take-home project with code review and a follow-up in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gruntwork.io&quot;&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gtmsportswear.com/careers&quot;&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacktiv8.com&quot;&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://happyteam.io&quot;&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.happypie.com&quot;&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hash.com.br/index.html&quot;&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashrocket.com&quot;&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://headspring.com/about/careers&quot;&gt;Headspring&lt;/a&gt; | Austin, TX; Houston, TX; Monterrey, Mexico | Take-home situational questionnaire and code exercise, with in-person follow up to discuss and pair for changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthify.us&quot;&gt;Healthify&lt;/a&gt; | Remote &amp;amp; New York City, NY | Take-home project, discussion via Zoom, pair programming with us on our app for a day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heavenhr.com&quot;&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate’s experience and future responsibilities. Then discussion about the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helabs.com&quot;&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hellofresh.com/jobs&quot;&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heptio.com/jobs&quot;&gt;Heptio&lt;/a&gt; | Seattle, WA; Remote | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herodigital.com&quot;&gt;Hero Digital&lt;/a&gt; |&amp;nbsp;San Francisco, CA; Remote | Take-home project with code review, multiple (non-technical) interviews with different areas of the company about past projects and experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroku.com/careers&quot;&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on Github, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, “meet the team” meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hhcc.com/careers&quot;&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hireology.com/careers&quot;&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiventive.com&quot;&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidaypirates.group/en/jobs&quot;&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holobuilder.com&quot;&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hologram.io/careers&quot;&gt;Hologram&lt;/a&gt; | Chicago, IL; Remote | Intro call, take-home project taken from production work, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homechef.com/careers&quot;&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homelight.com/engineering&quot;&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://housemarque.com&quot;&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoxhunt.com/careers/&quot;&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanapi.co/company/careers&quot;&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://io.co.za/opportunities&quot;&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://icalialabs.com&quot;&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://iconstituent.com/careers/&quot;&gt;iConstituent&lt;/a&gt; | Washington, DC | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ideamotive.co&quot;&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ideo.com/jobs&quot;&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/scout24&quot;&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.impraise.com&quot;&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.incloud.de&quot;&gt;Incloud&lt;/a&gt; | Darmstadt, Germany | Technical interview with developers, followed by a full day on site with a practical project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.indellient.com/careers&quot;&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inevitableinnovations.com&quot;&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/careers&quot;&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosum.com&quot;&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkindcapital.com&quot;&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inmar.com/careers&quot;&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.innoplexus.com&quot;&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.instacart.com&quot;&gt;Instacart&lt;/a&gt; | San Francisco, CA | Take-home real world project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://internshala.com/internships/internship-at-InstantPost&quot;&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.integral.io&quot;&gt;Integral.&lt;/a&gt; | Detroit, MI | Initial remote technical screen featuring test-driven development &amp;amp; pair programming, then on-site full day interview that involves pair programming on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.intelipost.com.br&quot;&gt;Intelipost&lt;/a&gt; | São Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interfrog.de/jobs&quot;&gt;Interfrog Produktion GmbH&lt;/a&gt; | Mannheim, Germany | Phone interview with developer and CEO to get to know each other and to understand skills and background. Follow-up interview to discuss technical realization of sample work which is handed over after the first interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interset.com/careers&quot;&gt;Interset&lt;/a&gt; | Ottawa, Canada | Discussion of technical background and past experience. Relevant take-home project for junior developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itexperts.be&quot;&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itdesign.de/karriere/&quot;&gt;itdesign&lt;/a&gt; | Tübingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ithaka.travel&quot;&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://itrellis.com&quot;&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.izettle.com/jobs&quot;&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jamasoftware.com&quot;&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamitlabs.com/jobs&quot;&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetstack.io/careers&quot;&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jiminny.com&quot;&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jitbit.com&quot;&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weare.jobtome.com/careers&quot;&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://journaltech.com/careers&quot;&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jplusplus.org&quot;&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href=&quot;http://internship.jplusplus.org&quot;&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.justwatch.com/us/talent&quot;&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.khealth.ai&quot;&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getkahoot.com/jobs&quot;&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kata.ai&quot;&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kayako.com&quot;&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kentik.com/careers&quot;&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keymetrics.io&quot;&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href=&quot;https://github.com/keymetrics/keymetrics-api&quot;&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kienguru.vn&quot;&gt;Kiến Guru&lt;/a&gt; | Hồ Chí Minh, Vietnam | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.kindredplc.com&quot;&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kinnek.com/jointeam&quot;&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kiwi.com&quot;&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.knock.com/careers&quot;&gt;Knock.com&lt;/a&gt; | San Francisco, CA / New York, NY / Remote | Phone Interview, Take-home project, On-site technical conversation relating to the tech stack you would be hired to build with&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://knplabs.com&quot;&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: “Do I want to work with this person ?” If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.konghq.com/careers&quot;&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assigment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kongregate.com/jobs&quot;&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.korbit.co.kr/about/jobs&quot;&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kulkul.tech/careers&quot;&gt;Kulkul Tech&lt;/a&gt; | Jakarta, Indonesia | Take home and an in-person system design interview, then soft skills and culture assessment via interviews with the senior leadership team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.coop&quot;&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lab49.com/careers/&quot;&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landing.jobs/at/landing-jobs&quot;&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://engineering.lanetix.com&quot;&gt;Lanetix&lt;/a&gt; | San Francisco, CA | &lt;a href=&quot;https://engineering.lanetix.com/2015-10-20/hiring-process&quot;&gt;Our Hiring Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lattice.com/careers&quot;&gt;Lattice&lt;/a&gt; | San Francisco, CA; New York, NY; Remote | Technical exercises based on work we do at Lattice, discussion of a new architecture to solve a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchacademy.com/careers&quot;&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a “guest lecture” for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/careers&quot;&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leapsome.com&quot;&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learningbank.dk&quot;&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.legalstart.fr&quot;&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.leverton.ai&quot;&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href=&quot;http://leverton-jobs.personio.de&quot;&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.libertymutualgroup.com/careers&quot;&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.librato.com/jobs&quot;&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lightningjar.agency&quot;&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lightricks.com&quot;&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.linkresearchtools.com/job-offers&quot;&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linxsystems.com&quot;&gt;Linx Systems&lt;/a&gt; | Bloomington, IL / Remote | 5-10 minute take home project; followed by a non-technical interview; finish up with a second take home project or paired with a developer for a 30-60 minute session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listium.com/jobs&quot;&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/careers#openings&quot;&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.littlethings.com/careers.html&quot;&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://loanzen.in/team.html#Career&quot;&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lob.com/careers&quot;&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we’ve had to solve in production. Our entire interview process and what we’re looking for is described in our blog post &lt;a href=&quot;https://lob.com/blog/how-we-interview-engineers&quot;&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locastic.com/posao&quot;&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, tehnical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locaweb.com.br/carreira&quot;&gt;Locaweb&lt;/a&gt; | São Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logiball.de/en/jobs/&quot;&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logicsoft.co.in&quot;&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lonres.com/public/working-us&quot;&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ≈1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lookbookhq.com/about/careers&quot;&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useloom.com/careers&quot;&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lovion.de&quot;&gt;Lovion GmbH&lt;/a&gt; | Dortmund, Germany | On-site or remote interview for technical and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oiluna.com&quot;&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lydia-app.com/en/company/jobs&quot;&gt;Lydia&lt;/a&gt; | Paris, FR | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyft.com/jobs&quot;&gt;Lyft’s Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate’s completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lykon.de&quot;&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote&quot;&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madetech.com/careers&quot;&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href=&quot;https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation&quot;&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magnetis.workable.com&quot;&gt;Magnetis&lt;/a&gt; | São Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285&quot;&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.makemusic.com/careers/&quot;&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketime.workable.com&quot;&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mango-solutions.com/wp/about-mango/team&quot;&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/jobs&quot;&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/careers/&quot;&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world “try out” project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mavenlink.com/careers&quot;&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maxwellhealth.com/careers&quot;&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://me-company.de/jobs/&quot;&gt;Me &amp;amp; Company&lt;/a&gt; | Düsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mealme.ai&quot;&gt;MealMe&lt;/a&gt; | San Francisco, California | Initial introductory interview, 1 hour technical interview with CTO (real-world problem), rapid fire questions about thinking and working in a start-up.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediapop.co&quot;&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetrics.com&quot;&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://underthehood.meltwater.com/jobs&quot;&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mention.workable.com&quot;&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.mercadolibre.com&quot;&gt;Mercado Livre&lt;/a&gt; | São Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate’s previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mercatus.com/company/careers&quot;&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.metro-markets.de/careers/&quot;&gt;Metro Markets&lt;/a&gt; | Düsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mfind.pl/dolacz-do-nas/&quot;&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://midrive.com/careers&quot;&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.milchundzucker.de&quot;&gt;milch &amp;amp; zucker&lt;/a&gt; | Gießen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.minutemedia.com/careers/&quot;&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mirumee.com/jobs&quot;&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate’s experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmax.com/careers&quot;&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobilecashout.com&quot;&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilethinking.ch&quot;&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.modeanalytics.com/careers&quot;&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mokahr.com&quot;&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moneytree.jp&quot;&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com&quot;&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moteefe.com/jobs&quot;&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mutualmobile.com/careers&quot;&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you’ll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mutualofomaha.com/careers&quot;&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mutuallyhuman.com&quot;&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mux.com/jobs/&quot;&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mytaxi.com&quot;&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.myheritage.com&quot;&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/mytutor/&quot;&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.native-instruments.com&quot;&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nearsoft.com/join-us/&quot;&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href=&quot;https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/&quot;&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lifeatnedap.com/vacatures&quot;&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neoteric.eu/career/&quot;&gt;Neoteric&lt;/a&gt; | Gdańsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdwallet.com/careers&quot;&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee’s platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.netflix.com/jobs/867042&quot;&gt;Netflix&lt;/a&gt; | Los Gatos, CA | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and our director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netguru.co/career&quot;&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlandish.com&quot;&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/careers&quot;&gt;Netlify&lt;/a&gt; | San Francisco, CA / Remote | Takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://newrelic.com/about/careers&quot;&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newstore.com/careers/&quot;&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newvoicemedia.com/about-newvoicemedia/careers&quot;&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexapp.ca/career/&quot;&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexcess.net&quot;&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there’s a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nimblehq.co&quot;&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ninjaneers.de&quot;&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.niteoweb.com/careers&quot;&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gonitro.com/about/jobs&quot;&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.nmbrs.com&quot;&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noa.one&quot;&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodesource.com/careers&quot;&gt;NodeSource&lt;/a&gt; | Remote | A person-to–person walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nomoko.world/jobs&quot;&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.norbsoft.com/careers&quot;&gt;Norbsoft&lt;/a&gt; | Kraków, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nordsoftware.com/en/jobs&quot;&gt;Nord Software&lt;/a&gt; | Helsinki, Finland; Tampere, Finland; Stockholm, Sweden | Take-home exercise &amp;amp; interview with CEO and senior developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordsecurity.com/careers&quot;&gt;NordPass&lt;/a&gt; | Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noredink.com/jobs&quot;&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacare.no&quot;&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacredit.com/careers&quot;&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novicap.com/en/careers.html&quot;&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novoda.com/joinus&quot;&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href=&quot;https://github.com/novoda/dojos&quot;&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novus.com/jobs&quot;&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noyo.com/careers/&quot;&gt;Noyo&lt;/a&gt; | San Francisco, CA / Durham, NC / Remote | Phone interview, take-home assignment, on-site code review, and walk through a past project you’re proud of&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nozbe.com/careers&quot;&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.com/jobs&quot;&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nubank.workable.com&quot;&gt;Nubank&lt;/a&gt; | São Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.numberly.com&quot;&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/numerai/jobs&quot;&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nutshell.com/jobs&quot;&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href=&quot;https://github.com/nutshellcrm/join-the-team&quot;&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nyon.nl/jobs&quot;&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oreilly.com/jobs&quot;&gt;O’Reilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oakstreethealth.com/careers&quot;&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://objectpartners.com/careers/&quot;&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objectiveinc.com/careers&quot;&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rejoins.octo.com&quot;&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming…&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.energy/careers/&quot;&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://olist.com&quot;&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omadahealth.com/jobs&quot;&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oncue.co&quot;&gt;Oncue&lt;/a&gt; | San Francisco, CA; Remote | Online coding test on real-world problems (2 hours). Technical discussion with developer team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.onemainfinancial.com&quot;&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com/careers&quot;&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onfido.com/jobs&quot;&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ontame.io&quot;&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opbeat.com/jobs#seniorbackendengineer&quot;&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/openbasecom&quot;&gt;Openbase&lt;/a&gt; | San Francisco, CA | Take-home exercise on real-world problem &amp;amp; discussion with engineers about exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmindonline.it&quot;&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.optoro.com/open_position_item/?oid=134960&quot;&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ori.co&quot;&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ostmodern.co.uk&quot;&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT=&quot;&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://outlandish.com&quot;&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outlook/jobs&quot;&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdery.com/careers&quot;&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/theoutline&quot;&gt;The Outline&lt;/a&gt; | New York, NY | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pace.car/jobs&quot;&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paessler.com/company/career/jobs&quot;&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagar.me&quot;&gt;Pagar.me&lt;/a&gt; | São Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pager.com&quot;&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagerduty.com/careers&quot;&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.palatinategroup.com&quot;&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parabol.co&quot;&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href=&quot;https://github.com/ParabolInc/action/projects&quot;&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parivedasolutions.com&quot;&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passfort.com/about#jobs&quot;&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passiv.com&quot;&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paws.com/careers&quot;&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paybase.io&quot;&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paybyphone.com/careers&quot;&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site “meet the team”&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://peaksware.com&quot;&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://info.peerstreet.com/careers&quot;&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pento/jobs&quot;&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://permutive.com/careers/&quot;&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.persgroep.nl/werken-bij-it&quot;&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.withpersona.com/about&quot;&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pexeso/jobs&quot;&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://philo.com/jobs&quot;&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and “soft skills” interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phoodster.com&quot;&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pillartechnology.com/careers&quot;&gt;Pillar Technology&lt;/a&gt; | Ann Arbor, MI; Columbus, OH; Des Moines, IA | Phone, take home exercise, in-person pairing session and site visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pilot.co/become-a-partner&quot;&gt;Pilot&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pingcap.com&quot;&gt;PingCAP&lt;/a&gt; | Beijing, China; Shanghai, China; Guangzhou, China; Shenzhen, China; Hangzhou, China; Chengdu, China; Remote | Phone interview with HR, then a take home project. Finally 1-4 rounds of business interviews and 1 round of Founder interview(via phone, video, Face to Face…).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pivotal.io/careers&quot;&gt;Pivotal&lt;/a&gt; | San Francisco, CA; Los Angeles, CA; New York, NY; Boston, MA; Denver, CO; Atlanta, GA; Chicago, IL; Seattle, WA; Washington, D.C.; London, UK; Sydney, Australia; Toronto, Canada; Paris, France; Berlin, Germany; Tokyo, Japan | Initial remote technical screen featuring pair programming; on-site pair programming interview, generally a full day pairing on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixiumdigital.com&quot;&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform.sh&quot;&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform45.com&quot;&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcatalyst.in/careers&quot;&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com/careers&quot;&gt;Pluralsight&lt;/a&gt; | Salt Lake City, UT; San Francisco, CA; Boston, MA; Orlando, FL | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pointman.bamboohr.com/jobs/&quot;&gt;Pointman&lt;/a&gt; | Buffalo, NY | Takehome exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.poki.com&quot;&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://polar.me/company/careers&quot;&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popstand.com&quot;&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popularpays.com&quot;&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pragma.team/talent&quot;&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.premiumbeat.com/careers&quot;&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primary.com/jobs&quot;&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.promptworks.com/jobs&quot;&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proxy.com&quot;&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/jobs&quot;&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pygmalios.com/en&quot;&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quietlightcom.com/positions-web.php&quot;&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.workatquintype.com&quot;&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quizizz.com&quot;&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ragnarson.com&quot;&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.railslove.com&quot;&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raisingit.com&quot;&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rapyuta-robotics.com/pages/jobs.html&quot;&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rayfeed.com&quot;&gt;Rayfeed&lt;/a&gt; | Vancouver, Warsaw | Video-call interview followed by a take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://razorpay.com/jobs&quot;&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reaktor.com/careers&quot;&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realhq.com/jobs&quot;&gt;Real HQ&lt;/a&gt; | Austin, TX / Chicago, IL / Remote | Phone/video interviews, a take-home coding exercise, and a remote pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realync.com/careers&quot;&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rebase.fi&quot;&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate’s profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://red-badger.com/about-us/join-us&quot;&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redballoonsecurity.com&quot;&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward uppon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redcarpetup.com/jobs&quot;&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/our-company/careers/current-opportunities/&quot;&gt;Redgate&lt;/a&gt; | Cambridge, UK | Simple couple of questions during screening phase (up to 30 min) followed by a second phase with up to two coding exercises (non-CS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reducer.co.uk&quot;&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reflektive.com/careers/&quot;&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relabe.com&quot;&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentify.com/jobs&quot;&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentomojo.com/about/careers&quot;&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repl.it/site/jobs&quot;&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://resin.io&quot;&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.respark.co.uk&quot;&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.restaurantops.co&quot;&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retailpulse.ai&quot;&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reverscore.com&quot;&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revlv.net&quot;&gt;Revlv&lt;/a&gt; | Manila, Philippines | Discussion about developer skills, previous projects and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revolut.com&quot;&gt;Revolut&lt;/a&gt; | London, UK / Berlin, Germany / Krakow, Poland / Moscow, Russia / St Petersburg, Russia | Take-home exercise reflecting day-to-day work, technical interview via hangouts or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rexsoftware.com/careers&quot;&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rizk.com&quot;&gt;Rizk.com&lt;/a&gt; | Ta’ Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.rocketmiles.com&quot;&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rockode.com&quot;&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rosedigital.co&quot;&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com&quot;&gt;RStudio&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.ruangguru.com&quot;&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygarage.org&quot;&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runtastic.com&quot;&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rvu.co.uk/careers&quot;&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.safebutler.com&quot;&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sahajsoft.com&quot;&gt;Sahaj Software Solutions&lt;/a&gt; | Bangalore, India; Chennai, India; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salecycle.com/careers&quot;&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salesfive.com/jobs&quot;&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salesforce.org&quot;&gt;Salesforce.org Tech &amp;amp; Products&lt;/a&gt; | Remote | Phone screen, hands-on programming test solving real-world problems, Google Hangouts video sessions with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://salesloft.com&quot;&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/jobs&quot;&gt;Samsara&lt;/a&gt; | San Francisco, CA; Atlanta, GA; London, UK | Phone interview, onsite interview (technical challenges based on real problems we’ve faced at Samsara)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sc5.io/careers&quot;&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyväskylä, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scapic.com/careers/&quot;&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schibsted.pl&quot;&gt;Schibsted Tech Polska&lt;/a&gt; | Gdańsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seitenbau.com/karriere/aktuelle-jobangebote&quot;&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendyne.com&quot;&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regardnig real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensortower.com/jobs&quot;&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensu.io&quot;&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sentisis.com/trabaja-con-nosotros&quot;&gt;Séntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogotá, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serpapi.com&quot;&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sertiscorp.com&quot;&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://setapp.pl/career&quot;&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sharoo.com/jobs/&quot;&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shipandco.com/en/&quot;&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getshogun.com&quot;&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.showmax.com/engineering-careers&quot;&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shuttlecloud.com/jobs&quot;&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.signal-ai.com/about-us/careers&quot;&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simple.com&quot;&gt;Simple&lt;/a&gt; | Portland, OR | Discussion about software development and architecture skills and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simpli.fi/about-us/careers&quot;&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.welcometothejungle.co/companies/simplifield/jobs&quot;&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplybusiness.co.uk/about-us/careers/tech&quot;&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sixfold.com/careers&quot;&gt;Sixfold&lt;/a&gt; |&amp;nbsp;Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sixt.jobs/en&quot;&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skylight.digital/join/&quot;&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.skyrisepro.com&quot;&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/jobs&quot;&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.small-improvements.com/careers&quot;&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartly.io/developer&quot;&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smile.io/careers&quot;&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snyk.io/jobs&quot;&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.socialtables.com&quot;&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwear.nl/vacatures&quot;&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry – remotely – in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sogilis.com&quot;&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/jobs&quot;&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.splice.com&quot;&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.splyt.com&quot;&gt;Splyt&lt;/a&gt; | London, UK; Singapore, Singapore; Kuala Lumpur, Malaysia; Tokyo, Japan | Initial screening with recruiters from hr department, take home assessment (React + Node.js), followed by remote/on-site interviews with hiring manager and CTO about the assessment, system design/architecture, and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreedly.com/jobs&quot;&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href=&quot;https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html&quot;&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natureasia.com&quot;&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sndigital.springernature.com&quot;&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spronq.nl&quot;&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squareup.com/careers&quot;&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://square-sense.com&quot;&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://srijan.net&quot;&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stardog.com&quot;&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startdee.com&quot;&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://statflo.com&quot;&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.store2be.com/de/jobs/tech&quot;&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stormx.io/about#jobs&quot;&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen –&amp;gt; Take-home coding assignment –&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams –&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.storytel.com/departments/tech&quot;&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Umeå, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; | San Francisco, CA / Seattle, WA / Dublin, Ireland / Singapore, SG / Remote | Programming/debugging phone screen + on site with your own laptop/setup and full access to internet, systems design discussion and talk with hiring manager about team alignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://structura.bio&quot;&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://strv.com/careers&quot;&gt;STRV&lt;/a&gt; | Prague, Czech Republic; Brno, Czech Republic; Remote | A social interview with a recruiter + take-home coding challenge followed by a technical interview session discussing your approach in solving the take-home assignment + a culture-fit interview with the head of engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.stylabs.in&quot;&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verticalchange.com/job_posts&quot;&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sulvo.com/careers&quot;&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn’t include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.summitto.com&quot;&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.superawesome.com&quot;&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superplayer.fm&quot;&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://surveysparrow.com/careers&quot;&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://svti.svt.se&quot;&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sweetiq.com/about/careers&quot;&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useswiftly.com/jobs&quot;&gt;Swiftly Systems&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.swisscom.ch/en/about/career.html&quot;&gt;Swisscom&lt;/a&gt; | Rotterdam, The Netherlands | A mix of behavioural, technical and cultural interview, take-home project, project review with engineers from different teams and cultural interview with staff members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symphonycommerce.com/careers&quot;&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symplicity.com/about/join-us&quot;&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sysgarage.com&quot;&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tablecheck.com/en/company/jobs/&quot;&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailorbrands.com/jobs&quot;&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tails.com/careers&quot;&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.takeaway.com&quot;&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madeintandem.com&quot;&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tanookilabs.com&quot;&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tara.ai/about/careers&quot;&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tattoodo.com&quot;&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taxdoo.com/#/jobs/&quot;&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tenthousandcoffees.com&quot;&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teraki.com&quot;&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.tes.com/recruitment/&quot;&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tesco.com&quot;&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testdouble.com/join/developer&quot;&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards&quot;&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href=&quot;https://textio.ai/how-we-hire-a74cdbadd1e8&quot;&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thebookofeveryone.workable.com&quot;&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thezebra.com/about/careers/&quot;&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.thescore.com/careers&quot;&gt;theScore&lt;/a&gt; | Toronto, Canada | Coding challenge &amp;amp; systems design challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au&quot;&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thinslices.com&quot;&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thoughtbot.com/jobs&quot;&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href=&quot;https://thoughtbot.com/playbook/our-company/hiring#interviewing&quot;&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers&quot;&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers/singapore&quot;&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thread.com/jobs&quot;&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.threatspike.com&quot;&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tilde.io&quot;&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.timbuktutravel.com&quot;&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tipalti.com&quot;&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titanium.codes&quot;&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal “Meet the Team” meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toggl.com/jobs&quot;&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tooploox.com/careers&quot;&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toowoxx.de/index.php/karriere/&quot;&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophat.com/company/work-with-us/&quot;&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophatter.com/careers&quot;&gt;Tophatter&lt;/a&gt; | San Francisco, CA; Portland, OR; Remote | Introductory call, followed by a technical phone screen that takes place on Coderpad. Next is the onsite interview, consisting in a bug squash, a refactoring exercise, a project, and closing with an informal chat about how the candidate likes to work and what they’re looking for in their next job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.jointorii.co&quot;&gt;Torii&lt;/a&gt; | Raanana, Israel | Take-home fun full-stack-app exercise followed by an on-site review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://toucantoco.com/fr/team#jobs&quot;&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotouche.com&quot;&gt;Touché&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trademark.vision&quot;&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trainheroic.com/careers/&quot;&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.trainingpeaks.com/careers.html&quot;&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transparentclassroom.com&quot;&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tripstack.com/company/careers/&quot;&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trivago.com&quot;&gt;Trivago&lt;/a&gt; | Düsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/trov&quot;&gt;Trōv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truefit.io/about/&quot;&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.truora.com&quot;&gt;Truora&lt;/a&gt; | Bogotá, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truss.works/jobs&quot;&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tunein.com&quot;&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twistlock.com&quot;&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typito.com/go&quot;&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system enegineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uberall.com/en/careers&quot;&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubiome.com/careers&quot;&gt;uBiome&lt;/a&gt; | San Francisco, CA / Santiago, Chile | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubots.com.br&quot;&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unbounce.com&quot;&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unboxed.co&quot;&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.unearthlabs.com/careers&quot;&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unito.io/careers/&quot;&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.untappd.com&quot;&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.updater.com/jobs/openings&quot;&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uprise.se&quot;&gt;Uprise&lt;/a&gt; | Uppsala, Sweden | Take-home assignment, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.upstatement.com/jobs/&quot;&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbdyn.com/careers&quot;&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href=&quot;https://github.com/urbdyn/coding_exercises&quot;&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbanmassage.com/jobs&quot;&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usertesting.com/about-us/jobs&quot;&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.valassis.com/digital-advertising&quot;&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.valuemotive.com/careers&quot;&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.varsitytutors.com&quot;&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://vayu.com.au&quot;&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.venasolutions.com&quot;&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.venminder.com&quot;&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verloop.io&quot;&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt; | Bangalore, India | Phone screen, Research Paper Discussion (ML Role), Code review/Open-source code navigation/on-screen Pair programming, and discussion with CTO/CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verve.co/careers&quot;&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.veteransunited.com/careers/&quot;&gt;Veterans United Home Loans&lt;/a&gt; | Columbia, MO | Phone screen, remote or in person pair-programming exercise, and multiple in person panel interviews with developers and managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.vingle.net&quot;&gt;Vingle&lt;/a&gt; | Seoul, Korea | Written interview, takehome project, in-person, conversational code review and interviews with engineers and engineering managers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vinta.com.br/careers/&quot;&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://virtual7.de/de/karriere&quot;&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-conomic.dk/om/job&quot;&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://voltra.co&quot;&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let’s pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://https://vsx.net/jobs&quot;&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.vtex.com/careers&quot;&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildingvts.com&quot;&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/wallapop/&quot;&gt;Wallapop&lt;/a&gt; | Barcelona, Spain | Intro call, technical take-home project OR tech repository you feel proud that highlights your skills for the job, practical interview and finally a competency interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waymark.com/jobs&quot;&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wealthsimple.com/work-with-us&quot;&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wearehive.co.uk&quot;&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webantic.co.uk/careers&quot;&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com&quot;&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.weebly.com&quot;&gt;Weebly&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; New York, NY | Phone screens (30 min to 1 hour) by a recruiter, an engineering manager (focused on your past experiences), an engineer (focused on system / db / api design). Followed by a paid 3 day onsite where you work on a project and then present it to a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weedmaps.com/careers&quot;&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wemake.services&quot;&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wend.nl&quot;&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.weployapp.com/join-our-team/&quot;&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wetransfer.homerun.co&quot;&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wheely.com/en/careers&quot;&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wilburlabs.com&quot;&gt;Wilbur Labs&lt;/a&gt; | San Francisco, CA | Technical phone screen, pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildbit.com&quot;&gt;Wildbit&lt;/a&gt; | Philadelphia, PA &amp;amp; Remote | Take-home project followed by interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://windy.com&quot;&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small programm on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wirecardbrasil.workable.com&quot;&gt;Wirecard Brasil&lt;/a&gt; | São Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://worldgaming.com&quot;&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woumedia.com&quot;&gt;woumedia&lt;/a&gt; | Remote | Getting to know each other and aligning expectations. Talking about past experiences, projects you are proud of and latest challenges you faced. It’s followed by a use case study from one of our current projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wyeworks.com&quot;&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://x-team.com&quot;&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xing.com&quot;&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ourxplor.com&quot;&gt;Xplor&lt;/a&gt; | Melborne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://18f.gsa.gov/join/&quot;&gt;18F&lt;/a&gt; | Remote; Washington, DC; New York, NY; Chicago, IL; San Francisco, CA | take-home coding exercise (2-4 hours), technical and values-match interviews over video chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://21re.de&quot;&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3boxlabs.com&quot;&gt;3BoxLabs&lt;/a&gt; | Remote | Intro call, resume walk-through, and finally live work exercise with ~2 hours indepdendent work followed by ~1.5 hour debrief discussing the work with the rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dhubs.com/jobs&quot;&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product’s domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://47-degrees.breezy.hr&quot;&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://4degrees.ai/about/&quot;&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that’s representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://500friends.com/who-we-are/careers&quot;&gt;500friends&lt;/a&gt; | San Francisco, CA; Remote | Take home challenge followed by onsite expansion of the submission and high level discussions (design exercise or overview of past projects)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://500Tech.com&quot;&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://8thlight.com&quot;&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yhat.com/jobs&quot;&gt;Yhat&lt;/a&gt; | Brooklyn, NY | Demo something cool you built and walk us thru the code + design decisions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/yld&quot;&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yodas.com&quot;&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yougov.com&quot;&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, Hong Kong | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yoyowallet.com&quot;&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.yunojuno.com&quot;&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.kenoby.com/grupozap/&quot;&gt;ZAP Group&lt;/a&gt; | São Paulo, Brazil | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zapier.com/jobs/&quot;&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zencargo.com/careers&quot;&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenefits.com/careers&quot;&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.com/careers&quot;&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zweitag.de/karriere&quot;&gt;Zweitag&lt;/a&gt; | Münster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, mentoring throughout the process, on-site pairing and discussion, talks for aligning expectations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/zype&quot;&gt;Zype&lt;/a&gt; | New York, NY &amp;amp; Remote | Skype/Video call with VP of Product and a take-home challenge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://they.whiteboarded.me&quot;&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards&quot;&gt;&lt;img src=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>appwrite/appwrite</title>
      <link>https://github.com/appwrite/appwrite</link>
      <description>&lt;p&gt;Appwrite is a secure end-to-end backend server for Web, Mobile, and Flutter developers that is packaged as a set of Docker containers for easy deployment 🚀&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://appwrite.io&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;260&quot; height=&quot;39&quot; src=&quot;https://appwrite.io/images/github-logo.png&quot; alt=&quot;Appwrite Logo&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;b&gt;A complete backend solution for your [Flutter / Vue / Angular / React / iOS / Android / *ANY OTHER*] app&lt;/b&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;!--[![Hacktoberfest](https://badgen.net/badge/hacktoberfest/friendly/pink)](CONTRIBUTING.md)--&gt; 
&lt;p&gt;&lt;a href=&quot;https://appwrite.io/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/564160730845151244?label=discord&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://store.appwrite.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/swag%20store-f02e65?style=flat-square&quot; alt=&quot;Swag Store&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/appwrite/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/appwrite/appwrite?color=f02e65&amp;amp;style=flat-square&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.com/appwrite/appwrite&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/com/appwrite/appwrite?style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/appwrite_io&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/appwrite_io?color=00acee&amp;amp;label=twitter&amp;amp;style=flat-square&quot; alt=&quot;Twitter Account&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.to/appwrite/announcing-appwrite-0-8-an-open-source-self-hosted-baas-kda&quot;&gt;&lt;strong&gt;Appwrite 0.8 has been released! Learn what’s new!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Appwrite is an end-to-end backend server for Web, Mobile, Native, or Backend apps packaged as a set of Docker
 &lt;nobr&gt;
   microservices. Appwrite abstracts the complexity and repetitiveness required to build a modern backend API from scratch and allows you to build secure apps faster.
 &lt;/nobr&gt;&lt;/p&gt;
&lt;nobr&gt; 
 &lt;p&gt;Using Appwrite, you can easily integrate your app with user authentication &amp;amp; multiple sign-in methods, a database for storing and querying users and team data, storage and file management, image manipulation, Cloud Functions, and &lt;a href=&quot;https://appwrite.io/docs&quot;&gt;more services&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/public/images/github.png&quot; alt=&quot;Appwrite&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;Find out more at: &lt;a href=&quot;https://appwrite.io&quot;&gt;https://appwrite.io&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Table of Contents:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#installation&quot;&gt;Installation&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#unix&quot;&gt;Unix&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#windows&quot;&gt;Windows&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#cmd&quot;&gt;CMD&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#powershell&quot;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#upgrade-from-an-older-version&quot;&gt;Upgrade from an Older Version&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#services&quot;&gt;Services&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#sdks&quot;&gt;SDKs&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#client&quot;&gt;Client&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#server&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#follow-us&quot;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;Installation&lt;/h2&gt; 
 &lt;p&gt;Appwrite backend server is designed to run in a container environment. Running your server is as easy as running one command from your terminal. You can either run Appwrite on your localhost using docker-compose or on any other container orchestration tool like Kubernetes, Docker Swarm, or Rancher.&lt;/p&gt; 
 &lt;p&gt;The easiest way to start running your Appwrite server is by running our docker-compose file. Before running the installation command make sure you have &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;Docker&lt;/a&gt; installed on your machine:&lt;/p&gt; 
 &lt;h3&gt;Unix&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -it --rm \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    --volume &quot;$(pwd)&quot;/appwrite:/usr/src/code/appwrite:rw \
    --entrypoint=&quot;install&quot; \
    appwrite/appwrite:0.8.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;h4&gt;CMD&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;docker run -it --rm ^
    --volume //var/run/docker.sock:/var/run/docker.sock ^
    --volume &quot;%cd%&quot;/appwrite:/usr/src/code/appwrite:rw ^
    --entrypoint=&quot;install&quot; ^
    appwrite/appwrite:0.8.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;PowerShell&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;docker run -it --rm ,
    --volume /var/run/docker.sock:/var/run/docker.sock ,
    --volume ${pwd}/appwrite:/usr/src/code/appwrite:rw ,
    --entrypoint=&quot;install&quot; ,
    appwrite/appwrite:0.8.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once the Docker installation completes, go to http://localhost to access the Appwrite console from your browser. Please note that on non-linux native hosts, the server might take a few minutes to start after installation completes.&lt;/p&gt; 
 &lt;p&gt;For advanced production and custom installation, check out our Docker &lt;a href=&quot;https://appwrite.io/docs/environment-variables&quot;&gt;environment variables&lt;/a&gt; docs. You can also use our public &lt;a href=&quot;https://gist.github.com/eldadfux/977869ff6bdd7312adfd4e629ee15cc5#file-docker-compose-yml&quot;&gt;docker-compose.yml&lt;/a&gt; file to manually set up an environment.&lt;/p&gt; 
 &lt;h3&gt;Upgrade from an Older Version&lt;/h3&gt; 
 &lt;p&gt;If you are upgrading your Appwrite server from an older version, you should use the Appwrite migration tool once your setup is completed. For more information regarding this, check out the &lt;a href=&quot;https://appwrite.io/docs/installation&quot;&gt;Installation Docs&lt;/a&gt;.&lt;/p&gt; 
 &lt;h2&gt;Getting Started&lt;/h2&gt; 
 &lt;p&gt;Getting started with Appwrite is as easy as creating a new project, choosing your platform, and integrating its SDK in your code. You can easily get started with your platform of choice by reading one of our Getting Started tutorials.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-web&quot;&gt;Getting Started for Web&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-flutter&quot;&gt;Getting Started for Flutter&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/getting-started-for-server&quot;&gt;Getting Started for Server&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/command-line&quot;&gt;Getting Started for CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Getting Started for Android (Coming soon…)&lt;/li&gt; 
  &lt;li&gt;Getting Started for iOS (Coming soon…)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Services&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/account&quot;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt; - Manage current user authentication and account. Track and manage the user sessions, devices, sign-in methods, and security logs.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/server/users&quot;&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/a&gt; - Manage and list all project users when in admin mode.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/teams&quot;&gt;&lt;strong&gt;Teams&lt;/strong&gt;&lt;/a&gt; - Manage and group users in teams. Manage memberships, invites, and user roles within a team.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/database&quot;&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/a&gt; - Manage database collections and documents. Read, create, update, and delete documents and filter lists of document collections using advanced filters.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/storage&quot;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/a&gt; - Manage storage files. Read, create, delete, and preview files. Manipulate the preview of your files to fit your app perfectly. All files are scanned by ClamAV and stored in a secure and encrypted way.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/server/functions&quot;&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/a&gt; - Customize your Appwrite server by executing your custom code in a secure, isolated environment. You can trigger your code on any Appwrite system event, manually or using a CRON schedule.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/locale&quot;&gt;&lt;strong&gt;Locale&lt;/strong&gt;&lt;/a&gt; - Track your user’s location, and manage your app locale-based data.&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://appwrite.io/docs/client/avatars&quot;&gt;&lt;strong&gt;Avatars&lt;/strong&gt;&lt;/a&gt; - Manage your users’ avatars, countries’ flags, browser icons, credit card symbols, and generate QR codes.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;For the complete API documentation, visit &lt;a href=&quot;https://appwrite.io/docs&quot;&gt;https://appwrite.io/docs&lt;/a&gt;. For more tutorials, news and announcements check out our &lt;a href=&quot;https://medium.com/appwrite-io&quot;&gt;blog&lt;/a&gt; and &lt;a href=&quot;https://discord.gg/GSeTUeA&quot;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
 &lt;h3&gt;SDKs&lt;/h3&gt; 
 &lt;p&gt;Below is a list of currently supported platforms and languages. If you wish to help us add support to your platform of choice, you can go over to our &lt;a href=&quot;https://github.com/appwrite/sdk-generator&quot;&gt;SDK Generator&lt;/a&gt; project and view our &lt;a href=&quot;https://github.com/appwrite/sdk-generator/raw/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
 &lt;h4&gt;Client&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-web&quot;&gt;Web&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-flutter&quot;&gt;Flutter&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Server&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-node&quot;&gt;NodeJS&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-php&quot;&gt;PHP&lt;/a&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-dart&quot;&gt;Dart&lt;/a&gt; &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-deno&quot;&gt;Deno&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-ruby&quot;&gt;Ruby&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-python&quot;&gt;Python&lt;/a&gt; - &lt;strong&gt;Beta&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
  &lt;li&gt;✅ &amp;nbsp; &lt;a href=&quot;https://github.com/appwrite/sdk-for-dotnet&quot;&gt;.NET&lt;/a&gt; - &lt;strong&gt;Experimental&lt;/strong&gt; (Maintained by the Appwrite Team)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Looking for more SDKs? - Help us by contributing a pull request to our &lt;a href=&quot;https://github.com/appwrite/sdk-generator&quot;&gt;SDK Generator&lt;/a&gt;!&lt;/p&gt; 
 &lt;h2&gt;Contributing&lt;/h2&gt; 
 &lt;p&gt;All code contributions - including those of people having commit access - must go through a pull request and be approved by a core developer before being merged. This is to ensure a proper review of all the code.&lt;/p&gt; 
 &lt;p&gt;We truly ❤️ pull requests! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
 &lt;h2&gt;Security&lt;/h2&gt; 
 &lt;p&gt;For security issues, kindly email us at &lt;a href=&quot;mailto:security@appwrite.io&quot;&gt;security@appwrite.io&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; 
 &lt;h2&gt;Follow Us&lt;/h2&gt; 
 &lt;p&gt;Join our growing community around the world! See our official &lt;a href=&quot;https://medium.com/appwrite-io&quot;&gt;Blog&lt;/a&gt;. Follow us on &lt;a href=&quot;https://twitter.com/appwrite_io&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/appwrite.io&quot;&gt;Facebook Page&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/groups/appwrite.developers/&quot;&gt;Facebook Group&lt;/a&gt; or join our live &lt;a href=&quot;https://discord.gg/GSeTUeA&quot;&gt;Discord server&lt;/a&gt; for more help, ideas, and discussions.&lt;/p&gt; 
 &lt;h2&gt;License&lt;/h2&gt; 
 &lt;p&gt;This repository is available under the &lt;a href=&quot;https://raw.githubusercontent.com/appwrite/appwrite/master/LICENSE&quot;&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt; 
&lt;/nobr&gt;</description>
    </item>
    
    <item>
      <title>AMAI-GmbH/AI-Expert-Roadmap</title>
      <link>https://github.com/AMAI-GmbH/AI-Expert-Roadmap</link>
      <description>&lt;p&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt; &lt;img src=&quot;https://uploads-ssl.webflow.com/58e6a2b25c28230d367487ad/5c32232ecb585fcc5c4645e1_icon_machine-learning.svg?sanitize=true&quot; alt=&quot;Developer Roadmap&quot; width=&quot;96&quot; height=&quot;96&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;i.am.ai&lt;br&gt;AI Expert Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/home?status=https://i.am.ai/roadmap Roadmap to becoming an Artificial Intelligence Expert in 2021&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tweet-blue.svg?logo=twitter&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://i.am.ai/roadmap&amp;amp;title=&amp;amp;summary=Roadmap to becoming an Artificial Intelligence Expert in 2021&amp;amp;source=&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/post-blue.svg?logo=linkedin&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Roadmap-2021-yellowgreen.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Badge&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://img.shields.io/badge/Author-AMAI GmbH-blue.svg&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT/&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a data scientist, machine learning or an ai expert. We made these charts for our new employees to make them AI Experts but we wanted to share them here to help the community.&lt;/p&gt; 
&lt;p&gt;If you are interested to become an AI EXPERT at &lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Become+Expert&quot;&gt;AMAI&lt;/a&gt; in Germany, or you want to &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Hire+Expert&quot;&gt;hire an AI Expert&lt;/a&gt;, please say &lt;a href=&quot;mailto:hi@am.ai&quot;&gt;hi@am.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Note&lt;/h2&gt; 
&lt;p&gt;👉 An &lt;strong&gt;interactive version with links to follow&lt;/strong&gt; about each bullet of the list can be found at &lt;a href=&quot;https://i.am.ai/roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Interactive&quot;&gt;i.am.ai/roadmap&lt;/a&gt; 👈&lt;/p&gt; 
&lt;p&gt;To receive updates &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/stargazers&quot;&gt;star :star:&lt;/a&gt; and watch :eyes: the &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/&quot;&gt;GitHub Repo&lt;/a&gt; to get notified, when we add new content to stay on the top of the most recent research.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#introduction?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Introduction&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/intro.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Fundamentals&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#fundamentals?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Fundamentals&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/fundamentals.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Science Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-science-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataScience&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/datascience.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Machine Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#machine-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+MachineLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/machine_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Deep Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#deep-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DeepLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/deep_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Big Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#big-data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+BigDataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/big_data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🚦 Wrap Up&lt;/h2&gt; 
&lt;p&gt;If you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, we will continue to improve this, so you might want to watch/star this repository to revisit.&lt;/p&gt; 
&lt;h2&gt;🙌 Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/contributing.md&quot;&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open pull request with improvements&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
 &lt;li&gt;Reach out with any feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported By&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+SupportedBy&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/amai.svg?sanitize=true&quot; style=&quot;display: inherit;max-width: 150px;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://digitalhub-ai.de?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/de-hub.svg?sanitize=true&quot; style=&quot;display: inherit; max-width: 150px;&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>amark/gun</title>
      <link>https://github.com/amark/gun</link>
      <description>&lt;p&gt;An open source cybersecurity protocol for syncing decentralized graph data.&lt;/p&gt;&lt;hr&gt;&lt;p id=&quot;readme&quot;&gt;&lt;a href=&quot;https://gun.eco/&quot;&gt;&lt;img width=&quot;40%&quot; src=&quot;https://cldup.com/TEy9yGh45l.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;img width=&quot;50%&quot; align=&quot;right&quot; vspace=&quot;25&quot; src=&quot;https://gun.eco/see/demo.gif&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jsdelivr.com/package/npm/gun&quot;&gt;&lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/gun/badge?style=rounded&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/amark/gun&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/amark/gun/master.svg?sanitize=true&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun.svg?size=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/amark/gun&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/amark/gun.js.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GUN&lt;/strong&gt; is an &lt;em&gt;ecosystem&lt;/em&gt; of tools that let you build &lt;a href=&quot;https://www.nbcnews.com/tech/tech-news/these-technologists-think-internet-broken-so-they-re-building-another-n1030136&quot;&gt;community run&lt;/a&gt; and &lt;a href=&quot;https://gun.eco/docs/Cartoon-Cryptography&quot;&gt;encrypted applications&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Currently, &lt;a href=&quot;https://news.ycombinator.com/item?id=17685682&quot;&gt;Internet Archive&lt;/a&gt; and &lt;a href=&quot;https://www.coindesk.com/hacker-noon-is-storing-content-on-a-blockchain-after-ditching-medium&quot;&gt;HackerNoon&lt;/a&gt; run GUN in production.&lt;/p&gt; 
&lt;p&gt;Decentralized alternatives to &lt;a href=&quot;https://www.zdnet.com/article/era-hatches-meething-an-open-source-browser-based-video-conferencing-system/&quot;&gt;Zoom&lt;/a&gt;, &lt;a href=&quot;https://notabug.io/t/whatever/comments/36588a16b9008da4e3f15663c2225e949eca4a15/gpu-bot-test&quot;&gt;Reddit&lt;/a&gt;, &lt;a href=&quot;https://iris.to/&quot;&gt;Slack&lt;/a&gt;, &lt;a href=&quot;https://d.tube/&quot;&gt;YouTube&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=17685682&quot;&gt;Wikipedia&lt;/a&gt;, etc. have already pushed terabytes of daily P2P traffic on GUN. We are a &lt;a href=&quot;http://chat.gun.eco/&quot;&gt;friendly community&lt;/a&gt; creating a &lt;a href=&quot;https://youtu.be/1HJdrBk3BlE&quot;&gt;free fun future for freedom&lt;/a&gt;:&lt;/p&gt; 
&lt;a href=&quot;https://youtu.be/s_m16-w6bBI&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/3dvr.gif&quot; title=&quot;3D VR&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/cstefanache/cstefanache.github.io/raw/06697003449e4fc531fd32ee068bab532976f47b/_posts/2016-08-02-gun-db-artificial-knowledge-sharing.md&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/aiml.gif&quot; title=&quot;AI/ML&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;http://gps.gunDB.io/&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/gps.gif&quot; title=&quot;GPS&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/lmangani/gun-scape#gun-scape&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/dataviz.gif&quot; title=&quot;Data Viz&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/amark/gun/wiki/Auth&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/p2p.gif&quot; title=&quot;P2P&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Stefdv/gun-ui-lcd#okay-what-about-gundb-&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/iot.gif&quot; title=&quot;IoT&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;http://chat.gun.eco&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/vr-world.gif&quot; title=&quot;VR World&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://youtu.be/1ASrmQ-CwX4&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/ar.gif&quot; title=&quot;AR&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;https://meething.space/&quot;&gt;&lt;img width=&quot;31%&quot; src=&quot;https://gun.eco/see/video-conf.gif&quot; title=&quot;Video Confernece&quot;&gt;&lt;/a&gt;
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;    
  &lt;/tr&gt; 
  &lt;tr&gt;    
  &lt;/tr&gt; 
  &lt;tr&gt;    
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;The ecosystem is one nice stack of technologies that looks like this: (names -&amp;gt; use case)&lt;/p&gt; 
&lt;div&gt;
 &lt;img width=&quot;48%&quot; src=&quot;https://gun.eco/see/stack.png&quot;&gt; 
 &lt;img width=&quot;48%&quot; align=&quot;right&quot; src=&quot;https://gun.eco/see/layers.png&quot;&gt;
&lt;/div&gt; 
&lt;p&gt;For now, it is best to start with GUN and &lt;em&gt;just use it&lt;/em&gt; to learn the basics, since it is &lt;em&gt;&lt;strong&gt;so easy&lt;/strong&gt;&lt;/em&gt;: (&lt;strong&gt;or&lt;/strong&gt; want to read more? Skip ahead to the “&lt;a href=&quot;https://raw.githubusercontent.com/amark/gun/master/#what-is-gun&quot;&gt;What is GUN?&lt;/a&gt;” section.)&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try the &lt;a href=&quot;https://gun.eco/docs/Todo-Dapp&quot;&gt;interactive tutorial&lt;/a&gt; in the browser (&lt;strong&gt;5min&lt;/strong&gt; ~ average developer).&lt;/li&gt; 
 &lt;li&gt;Or &lt;code&gt;npm install gun&lt;/code&gt; and run the examples with &lt;code&gt;cd node_modules/gun &amp;amp;&amp;amp; npm start&lt;/code&gt; (&lt;strong&gt;5min&lt;/strong&gt; ~ average developer).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don’t have &lt;a href=&quot;http://nodejs.org/&quot;&gt;node&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;, read &lt;a href=&quot;https://github.com/amark/gun/raw/master/examples/install.sh&quot;&gt;this&lt;/a&gt; first. If the &lt;code&gt;npm&lt;/code&gt; command line didn’t work, you may need to &lt;code&gt;mkdir node_modules&lt;/code&gt; first or use &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;An online demo of the examples are available here: http://gunjs.herokuapp.com/&lt;/li&gt; 
 &lt;li&gt;Or write a quick app: (&lt;a href=&quot;http://jsbin.com/sovihaveso/edit?js,console&quot;&gt;try now in jsbin&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/gun/gun.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
// var Gun = require(&#39;gun&#39;); // in NodeJS
// var Gun = require(&#39;gun/gun&#39;); // in React
var gun = Gun();

gun.get(&#39;mark&#39;).put({
  name: &quot;Mark&quot;,
  email: &quot;mark@gunDB.io&quot;,
});

gun.get(&#39;mark&#39;).on(function(data, key){
  console.log(&quot;update:&quot;, data);
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or try something &lt;strong&gt;mind blowing&lt;/strong&gt;, like saving circular references to a table of documents! (&lt;a href=&quot;http://jsbin.com/wefozepume/edit?js,console&quot;&gt;play&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var cat = {name: &quot;Fluffy&quot;, species: &quot;kitty&quot;};
var mark = {boss: cat};
cat.slave = mark;

// partial updates merge with existing data!
gun.get(&#39;mark&#39;).put(mark);

// access the data as if it is a document.
gun.get(&#39;mark&#39;).get(&#39;boss&#39;).get(&#39;name&#39;).once(function(data, key){
  // `val` grabs the data once, no subscriptions.
  console.log(&quot;Mark&#39;s boss is&quot;, data);
});

// traverse a graph of circular references!
gun.get(&#39;mark&#39;).get(&#39;boss&#39;).get(&#39;slave&#39;).once(function(data, key){
  console.log(&quot;Mark is the slave!&quot;, data);
});

// add both of them to a table!
gun.get(&#39;list&#39;).set(gun.get(&#39;mark&#39;).get(&#39;boss&#39;));
gun.get(&#39;list&#39;).set(gun.get(&#39;mark&#39;));

// grab each item once from the table, continuously:
gun.get(&#39;list&#39;).map().once(function(data, key){
  console.log(&quot;Item:&quot;, data);
});

// live update the table!
gun.get(&#39;list&#39;).set({type: &quot;cucumber&quot;, goal: &quot;scare cat&quot;});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want to keep building more? &lt;strong&gt;Jump to &lt;a href=&quot;https://raw.githubusercontent.com/amark/gun/master/#documentation&quot;&gt;THE DOCUMENTATION&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;What is GUN?&lt;/h1&gt; 
&lt;p&gt;First &amp;amp; foremost, GUN is &lt;strong&gt;a community of the nicest and most helpful people&lt;/strong&gt; out there. So &lt;a href=&quot;https://gitter.im/amark/gun&quot;&gt;I want to invite you&lt;/a&gt; to come tell us about what &lt;strong&gt;you&lt;/strong&gt; are working on &amp;amp; wanting to build (new or old school alike! Just be nice as well.) and ask us your questions directly. :)&lt;/p&gt; 
&lt;p&gt;On that note, let’s get some official shout outs covered first:&lt;/p&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Thanks to: &lt;/p&gt;
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td vlign=&quot;center&quot;&gt;&lt;a href=&quot;https://mozilla.org/builders&quot;&gt;&lt;img height=&quot;100&quot; src=&quot;https://user-images.githubusercontent.com/1423657/81992335-85346480-9643-11ea-8754-8275e98e06bc.png&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td vlign=&quot;center&quot;&gt;&lt;a href=&quot;http://unstoppabledomains.com/&quot;&gt;&lt;img src=&quot;https://gun.eco/img/unstoppable.png&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/robertheessels&quot;&gt;Robert Heessels&lt;/a&gt;, &lt;a href=&quot;http://qxip.net/&quot;&gt;Lorenzo Mangani&lt;/a&gt;, &lt;a href=&quot;https://nlnet.nl/&quot;&gt;NLnet Foundation&lt;/a&gt;, &lt;a href=&quot;http://github.com/samliu&quot;&gt;Sam Liu&lt;/a&gt;, &lt;a href=&quot;http://github.com/ddombrow&quot;&gt;Daniel Dombrowsky&lt;/a&gt;, &lt;a href=&quot;http://github.com/vincentwoo&quot;&gt;Vincent Woo&lt;/a&gt;, &lt;a href=&quot;http://github.com/coolaj86&quot;&gt;AJ ONeal&lt;/a&gt;, &lt;a href=&quot;http://github.com/ottman&quot;&gt;Bill Ottman&lt;/a&gt;, &lt;a href=&quot;http://github.com/mikewlange&quot;&gt;Mike Lange&lt;/a&gt;, &lt;a href=&quot;http://github.com/ctrlplusb&quot;&gt;Sean Matheson&lt;/a&gt;, &lt;a href=&quot;http://github.com/alanmimms&quot;&gt;Alan Mimms&lt;/a&gt;, &lt;a href=&quot;https://github.com/dfreire&quot;&gt;Dário Freire&lt;/a&gt;, &lt;a href=&quot;http://github.com/velua&quot;&gt;John Williamson&lt;/a&gt;, &lt;a href=&quot;http://github.com/finwo&quot;&gt;Robin Bron&lt;/a&gt;, &lt;a href=&quot;http://github.com/ElieMakhoul&quot;&gt;Elie Makhoul&lt;/a&gt;, &lt;a href=&quot;http://github.com/mikestaub&quot;&gt;Mike Staub&lt;/a&gt;, &lt;a href=&quot;http://github.com/bmatusiak&quot;&gt;Bradley Matusiak&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join others in sponsoring code: https://www.patreon.com/gunDB !&lt;/li&gt; 
 &lt;li&gt;Ask questions: http://stackoverflow.com/questions/tagged/gun ?&lt;/li&gt; 
 &lt;li&gt;Found a bug? Report at: https://github.com/amark/gun/issues ;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need help&lt;/strong&gt;? Chat with us: https://gitter.im/amark/gun .&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;History&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gun.eco&quot;&gt;GUN&lt;/a&gt; was created by &lt;a href=&quot;https://twitter.com/marknadal&quot;&gt;Mark Nadal&lt;/a&gt; in 2014 after he had spent 4 years trying to get his collaborative web app to scale up with traditional databases.&lt;/p&gt; 
&lt;p&gt;&lt;img width=&quot;250px&quot; src=&quot;https://gun.eco/see/problem.png&quot; align=&quot;left&quot; title=&quot;pain point&quot; style=&quot;margin: 0 1em 1em 0&quot;&gt; After he realized &lt;a href=&quot;https://gun.eco/distributed/matters.html&quot;&gt;Master-Slave database architecture causes one big bottleneck&lt;/a&gt;, he (as a complete newbie outsider) naively decided &lt;strong&gt;to question the status quo&lt;/strong&gt; and shake things up with controversial, heretical, and contrarian experiments:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The NoDB&lt;/strong&gt; - no master, no servers, no “single source of truth”, not built with a real programming language or real hardware, no DevOps, no locking, not &lt;em&gt;just&lt;/em&gt; SQL or NoSQL but both (&lt;strong&gt;all&lt;/strong&gt; - graphs, documents, tables, key/value).&lt;/p&gt; 
&lt;p&gt;The goal was to build a P2P database that could survive living inside &lt;strong&gt;any&lt;/strong&gt; browser, and could correctly sync data between &lt;strong&gt;any&lt;/strong&gt; device after assuming &lt;strong&gt;any&lt;/strong&gt; offline-first activity.&lt;/p&gt; 
&lt;img src=&quot;https://gun.eco/see/compare.png&quot; title=&quot;comparison table&quot;&gt; 
&lt;p&gt;Technically, &lt;strong&gt;GUN is a graph synchronization protocol&lt;/strong&gt; with a &lt;em&gt;lightweight embedded engine&lt;/em&gt;, capable of doing &lt;em&gt;&lt;a href=&quot;https://gun.eco/docs/Performance&quot;&gt;20M+ API ops/sec&lt;/a&gt;&lt;/em&gt; in &lt;strong&gt;just ~9KB gzipped size&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/API&quot;&gt;API reference&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Todo-Dapp&quot;&gt;Tutorials&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/amark/gun/tree/master/examples&quot;&gt;Examples&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/brysgo/graphql-gun&quot;&gt;GraphQL&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/PenguinMan98/electrontest&quot;&gt;Electron&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/React-Native&quot;&gt;React &amp;amp; Native&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/sjones6/vue-gun&quot;&gt;Vue&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Svelte&quot;&gt;Svelte&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/Stefdv/gun-ui-lcd#syncing&quot;&gt;Webcomponents&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/CAP-Theorem&quot;&gt;CAP Theorem Tradeoffs&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/distributed/matters.html&quot;&gt;How Data Sync Works&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Porting-GUN&quot;&gt;How GUN is Built&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Auth&quot;&gt;Crypto Auth&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://github.com/amark/gun/wiki/Awesome-GUN&quot;&gt;Modules&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
   &lt;td style=&quot;border: 0;&quot;&gt;&lt;h3&gt;&lt;a href=&quot;https://gun.eco/docs/Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/h3&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;This would not be possible without &lt;strong&gt;community contributors&lt;/strong&gt;, big shout out to:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ajmeyghani&quot;&gt;ajmeyghani&lt;/a&gt; (&lt;a href=&quot;https://medium.com/@ajmeyghani/gundb-a-graph-database-in-javascript-3860a08d873c&quot;&gt;Learn GUN Basics with Diagrams&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/anywhichway&quot;&gt;anywhichway&lt;/a&gt; (&lt;a href=&quot;https://github.com/anywhichway/gun-block&quot;&gt;Block Storage&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/beebase&quot;&gt;beebase&lt;/a&gt; (&lt;a href=&quot;https://github.com/beebase/gun-vuex-quasar&quot;&gt;Quasar&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/BrockAtkinson&quot;&gt;BrockAtkinson&lt;/a&gt; (&lt;a href=&quot;https://github.com/BrockAtkinson/brunch-gun&quot;&gt;brunch config&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/brysgo&quot;&gt;Brysgo&lt;/a&gt; (&lt;a href=&quot;https://github.com/brysgo/graphql-gun&quot;&gt;GraphQL&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/d3x0r&quot;&gt;d3x0r&lt;/a&gt; (&lt;a href=&quot;https://github.com/d3x0r/gun-db&quot;&gt;SQLite&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/forrestjt&quot;&gt;forrestjt&lt;/a&gt; (&lt;a href=&quot;https://github.com/amark/gun/raw/master/lib/file.js&quot;&gt;file.js&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/hillct&quot;&gt;hillct&lt;/a&gt; (Docker)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/josepedrodias&quot;&gt;JosePedroDias&lt;/a&gt; (&lt;a href=&quot;http://acor.sl.pt:9966&quot;&gt;graph visualizer&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/JuniperChicago&quot;&gt;JuniperChicago&lt;/a&gt; (&lt;a href=&quot;https://github.com/JuniperChicago/cycle-gun&quot;&gt;cycle.js bindings&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/jveres&quot;&gt;jveres&lt;/a&gt; (&lt;a href=&quot;https://github.com/jveres/todomvc&quot;&gt;todoMVC&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/kristianmandrup&quot;&gt;kristianmandrup&lt;/a&gt; (&lt;a href=&quot;https://github.com/kristianmandrup/gun-edge&quot;&gt;edge&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/Lightnet&quot;&gt;Lightnet&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://glitch.com/edit/#!/jsvuegunui?path=README.md:1:0&quot;&gt;Awesome Vue User Examples&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://gdb-auth-vue-node.glitch.me/&quot;&gt;User Kitchen Sink Playground&lt;/a&gt;); &lt;strong&gt;&lt;a href=&quot;https://github.com/lmangani&quot;&gt;lmangani&lt;/a&gt; (&lt;a href=&quot;https://github.com/lmangani/gun-scape&quot;&gt;Cytoscape Visualizer&lt;/a&gt;, &lt;a href=&quot;https://github.com/lmangani/gun-cassandra&quot;&gt;Cassandra&lt;/a&gt;, &lt;a href=&quot;https://github.com/lmangani/fastify-gundb&quot;&gt;Fastify&lt;/a&gt;, &lt;a href=&quot;https://github.com/lmangani/polyGun-letsencrypt&quot;&gt;LetsEncrypt&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/mhelander&quot;&gt;mhelander&lt;/a&gt; (&lt;a href=&quot;https://github.com/amark/gun/raw/master/sea.js&quot;&gt;SEA&lt;/a&gt;)&lt;/strong&gt;; &lt;a href=&quot;https://github.com/omarzion&quot;&gt;omarzion&lt;/a&gt; (&lt;a href=&quot;https://github.com/omarzion/stickies&quot;&gt;Sticky Note App&lt;/a&gt;); &lt;a href=&quot;https://github.com/PsychoLlama&quot;&gt;PsychoLlama&lt;/a&gt; (&lt;a href=&quot;https://github.com/PsychoLlama/gun-level&quot;&gt;LevelDB&lt;/a&gt;); &lt;strong&gt;&lt;a href=&quot;https://github.com/RangerMauve&quot;&gt;RangerMauve&lt;/a&gt; (&lt;a href=&quot;https://github.com/gundb/gun-schema&quot;&gt;schema&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/swifty&quot;&gt;robertheessels&lt;/a&gt; (&lt;a href=&quot;https://github.com/swifty/gun-p2p-auth&quot;&gt;gun-p2p-auth&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/rogowski&quot;&gt;rogowski&lt;/a&gt; (AXE)&lt;/strong&gt;; &lt;a href=&quot;https://github.com/sbeleidy&quot;&gt;sbeleidy&lt;/a&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/sbiaudet&quot;&gt;sbiaudet&lt;/a&gt; (&lt;a href=&quot;https://github.com/sbiaudet/cs-gun&quot;&gt;C# Port&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/ctrlplusb&quot;&gt;Sean Matheson&lt;/a&gt; (&lt;a href=&quot;https://github.com/ctrlplusb/gun-most&quot;&gt;Observable/RxJS/Most.js bindings&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/Shadyzpop&quot;&gt;Shadyzpop&lt;/a&gt; (&lt;a href=&quot;https://github.com/amark/gun/tree/master/examples/react-native&quot;&gt;React Native example&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/sjones6&quot;&gt;sjones6&lt;/a&gt; (&lt;a href=&quot;https://github.com/sjones6/gun-flint&quot;&gt;Flint&lt;/a&gt;)&lt;/strong&gt;; RIP &lt;strong&gt;&lt;a href=&quot;https://github.com/stefdv&quot;&gt;Stefdv&lt;/a&gt; (Polymer/web components)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/zrrrzzt&quot;&gt;zrrrzzt&lt;/a&gt; (&lt;a href=&quot;https://gist.github.com/zrrrzzt/6f88dc3cedee4ee18588236756d2cfce&quot;&gt;JWT Auth&lt;/a&gt;)&lt;/strong&gt;; &lt;strong&gt;&lt;a href=&quot;https://github.com/xmonader&quot;&gt;xmonader&lt;/a&gt; (&lt;a href=&quot;https://github.com/xmonader/pygundb&quot;&gt;Python Port&lt;/a&gt;)&lt;/strong&gt;;&lt;/p&gt; 
&lt;p&gt;I am missing many others, apologies, will be adding them soon! This list is infintiely old &amp;amp; way out of date, if you want to be listed in it please make a PR! :)&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;Tests may be run with &lt;code&gt;npm test&lt;/code&gt;. Tests will trigger persistent writes to the DB, so subsequent runs of the test will fail. You must clear the DB before running the tests again. This can be done by running the following command in the project directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;rm -rf *data*
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Additional Cryptography Libraries&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;These are only needed for NodeJS &amp;amp; React Native, they shim the native Browser WebCrypto API.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use &lt;a href=&quot;https://gun.eco/docs/SEA&quot;&gt;SEA&lt;/a&gt; for &lt;code&gt;User&lt;/code&gt; auth and security, you will need to install:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install text-encoding @peculiar/webcrypto --save&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://gun.eco/docs/React-Native&quot;&gt;our React Native docs&lt;/a&gt; for installation instructions!&lt;/p&gt; 
&lt;p&gt;Then you can require &lt;a href=&quot;https://gun.eco/docs/SEA&quot;&gt;SEA&lt;/a&gt; without an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var GUN = require(&#39;gun/gun&#39;);
var SEA = require(&#39;gun/sea&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploy&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The default examples that get auto-deployed on &lt;code&gt;npm start&lt;/code&gt; CDN-ify all GUN files, modules, &amp;amp; storage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To quickly spin up a GUN relay peer for your development team, utilize either &lt;a href=&quot;http://heroku.com&quot;&gt;Heroku&lt;/a&gt;, &lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;, any variant thereof &lt;a href=&quot;http://dokku.viewdocs.io/dokku/&quot;&gt;Dokku&lt;/a&gt;, &lt;a href=&quot;http://flynn.io&quot;&gt;Flynn.io&lt;/a&gt;, &lt;a href=&quot;https://zeit.co/now&quot;&gt;now.sh&lt;/a&gt;, etc. ! Or use all of them so your relays are decentralized too!&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/amark/gun&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; alt=&quot;Deploy&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Heroku deletes your data every 15 minutes, one way to fix this is by adding &lt;a href=&quot;https://gun.eco/docs/Using-Amazon-S3-for-Storage&quot;&gt;cheap storage&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/amark/gun.git
cd gun
heroku create
git push -f heroku HEAD:master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit the URL in the output of the ‘heroku create’ step, in a browser.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://zeit.co/now/&quot;&gt;Now.sh&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g now
now --npm amark/gun
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit the URL in the output of the ‘now –npm’ step, in your browser.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://unubo.app/&quot;&gt;Unubo&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Fork this GUN repo (Unubo only deploys from your own GitHub repo’s).&lt;br&gt; Add a Node.js app, select your GUN fork, set &lt;code&gt;npm start&lt;/code&gt; start as the command and deploy.&lt;/p&gt; 
&lt;p&gt;From the experience of &lt;a href=&quot;https://github.com/genderev&quot;&gt;genderev&lt;/a&gt;, this only works if you set your country to the United States.&lt;/p&gt; 
&lt;p&gt;Visit the deployed app by following the ‘view app’ button, in your browser.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Warning: Docker image is community contributed and may be old with missing security updates, please check version numbers to compare.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/automated/gundb/gun.svg?sanitize=true&quot; alt=&quot;Docker Automated buil&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://microbadger.com/images/gundb/gun&quot; title=&quot;Get your own image badge on microbadger.com&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/image/gundb/gun.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/gundb/gun.svg?sanitize=true&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/gundb/gun.svg?sanitize=true&quot; alt=&quot;Docker Stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pull from the &lt;a href=&quot;https://hub.docker.com/r/gundb/gun/&quot;&gt;Docker Hub&lt;/a&gt; &lt;a href=&quot;https://microbadger.com/images/gundb/gun&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/commit/gundb/gun.svg?sanitize=true&quot; alt=&quot;&quot;&gt;&lt;/a&gt;. Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -p 8765:8765 gundb/gun
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or build the &lt;a href=&quot;https://docs.docker.com/engine/installation/&quot;&gt;Docker&lt;/a&gt; image locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/amark/gun.git
cd gun
docker build -t myrepo/gundb:v1 .
docker run -p 8765:8765 myrepo/gundb:v1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, if you prefer your Docker image with metadata labels (Linux/Mac only):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run docker
docker run -p 8765:8765 username/gun:git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href=&quot;http://localhost:8765&quot;&gt;http://localhost:8765&lt;/a&gt; in your browser.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Designed with ♥ by Mark Nadal, the GUN team, and many amazing contributors.&lt;/p&gt; 
&lt;p&gt;Openly licensed under &lt;a href=&quot;https://github.com/amark/gun/raw/master/LICENSE.md&quot;&gt;Zlib / MIT / Apache 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Famark%2Fgun.svg?size=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCQAtpf-zi9Pp4__2nToOM8g&quot;&gt;YouTube&lt;/a&gt; . &lt;a href=&quot;https://twitter.com/marknadal&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;img src=&quot;https://assets.vercel.com/image/upload/v1607554385/repositories/next-js/next-logo.png&quot; height=&quot;128&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://nextjs.org&quot;&gt;Next.js&lt;/a&gt;&lt;/h1&gt;
&lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a aria-label=&quot;Vercel logo&quot; href=&quot;https://vercel.com&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;NPM version&quot; href=&quot;https://www.npmjs.com/package/next&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/vercel/next.js/raw/canary/license.md&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label=&quot;next.js learn&quot; href=&quot;https://nextjs.org/learn&quot;&gt;https://nextjs.org/learn&lt;/a&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world’s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/vercel/next.js/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>redwoodjs/redwood</title>
      <link>https://github.com/redwoodjs/redwood</link>
      <description>&lt;p&gt;Bringing full-stack to the Jamstack.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://avatars2.githubusercontent.com/u/45050444?v=4&quot; width=&quot;200&quot;&gt; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;Redwood&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;by Tom Preston-Werner, Peter Pistorius, Rob Cameron, David Price, and more than two hundred amazing contributors (see end of file for a full list).&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Redwood is an opinionated, full-stack, serverless web application framework that will allow you to build and deploy JAMstack applications with ease.&lt;/strong&gt; Imagine a React frontend, statically delivered by CDN, that talks via GraphQL to your backend running on AWS Lambdas around the world, all deployable with just a &lt;code&gt;git push&lt;/code&gt;—that’s Redwood. By making a lot of decisions for you, Redwood lets you get to work on what makes your application special, instead of wasting cycles choosing and re-choosing various technologies and configurations. Plus, because Redwood is a proper framework, you benefit from continued performance and feature upgrades over time and with minimum effort.&lt;/p&gt; 
&lt;p&gt;Redwood is the latest open source project initiated by Tom Preston-Werner, cofounder of GitHub (most popular code host on the planet), creator of Jekyll (one of the first and most popular static site generators), creator of Gravatar (the most popular avatar service on the planet), author of the Semantic Versioning specification (powers the Node packaging ecosystem), and inventor of TOML (an obvious, minimal configuration language used by many projects).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; RedwoodJS software has not reached a stable version 1.0 and should not be considered suitable for production use. In the “make it work; make it right; make it fast” paradigm, Redwood is in the later stages of the “make it work” phase. That said, your input can have a huge impact during this period, and we welcome your feedback and ideas! Check out the &lt;a href=&quot;https://community.redwoodjs.com/&quot;&gt;Redwood Community Forum&lt;/a&gt; to join in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;TUTORIAL:&lt;/strong&gt; The best way to get to know Redwood is by going through the extensive &lt;a href=&quot;https://redwoodjs.com/tutorial&quot;&gt;Redwood Tutorial&lt;/a&gt;. Have fun!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;QUICK START:&lt;/strong&gt; You can install and run a full-stack Redwood application on your machine with only a couple commands. Check out the &lt;a href=&quot;https://redwoodjs.com/docs/quick-start&quot;&gt;Quick Start&lt;/a&gt; guide to get started.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;EXAMPLES:&lt;/strong&gt; If you’d like to see some examples of what a Redwood application looks like, take a look at the following projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/redwoodjs/example-todo&quot;&gt;Todo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/redwoodjs/example-blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/redwoodjs/example-invoice&quot;&gt;Invoice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technologies&lt;/h2&gt; 
&lt;p&gt;We are obsessed with developer experience and eliminating as much boilerplate as possible. Where existing libraries elegantly solve our problems, we use them; where they don’t, we write our own solutions. The end result is a JavaScript development experience you can fall in love with!&lt;/p&gt; 
&lt;p&gt;Here’s a quick taste of the technologies a standard Redwood application will use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; (&lt;a href=&quot;https://github.com/apollographql&quot;&gt;Apollo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.prisma.io/&quot;&gt;Prisma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jestjs.io/&quot;&gt;Jest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://storybook.js.org/&quot;&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getpino.io&quot;&gt;Pino&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Opinionated defaults for formatting, file organization, webpack, Babel, and more.&lt;/li&gt; 
 &lt;li&gt;Simple but powerful routing (all routes defined in one file) with dynamic (typed) parameters, constraints, and named route functions (to generate correct URLs).&lt;/li&gt; 
 &lt;li&gt;Automatic page-based code-splitting.&lt;/li&gt; 
 &lt;li&gt;Boilerplate-less GraphQL API construction.&lt;/li&gt; 
 &lt;li&gt;Cells: a declarative way to fetch data from the backend API.&lt;/li&gt; 
 &lt;li&gt;Generators for pages, layouts, cells, SDL, services, etc.&lt;/li&gt; 
 &lt;li&gt;Scaffold generator for CRUD operations around a specific DB table.&lt;/li&gt; 
 &lt;li&gt;Forms with easy client- and/or server-side validation and error handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webpack.js.org/concepts/hot-module-replacement/&quot;&gt;Hot module replacement&lt;/a&gt; (HMR) for faster development.&lt;/li&gt; 
 &lt;li&gt;Database migrations (via Prisma 2).&lt;/li&gt; 
 &lt;li&gt;Logging using &lt;a href=&quot;https://getpino.io&quot;&gt;Pino&lt;/a&gt; including to &lt;a href=&quot;https://getpino.io/#/docs/transports&quot;&gt;transports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Signature verification and payload signing for handling incoming and outgoing Webhooks&lt;/li&gt; 
 &lt;li&gt;Page prerendering&lt;/li&gt; 
 &lt;li&gt;First class JAMstack-style deployment to &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel&lt;/a&gt;, &lt;a href=&quot;https://render.com/&quot;&gt;Render&lt;/a&gt;, and &lt;a href=&quot;https://www.serverless.com/&quot;&gt;Serverless&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;We intend to ship v1 in the first quarter of 2021. To see all the features we plan on including in Redwood’s first major release, you can check out our &lt;a href=&quot;https://redwoodjs.com/roadmap&quot;&gt;Roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A framework like Redwood has a lot of moving parts; the Roadmap is a great way to get a high-level overview of where the framework is relative to where we want it to be. And since we link to all of our GitHub project boards, it’s also a great way to get involved!&lt;/p&gt; 
&lt;h2&gt;The Redwood philosophy&lt;/h2&gt; 
&lt;p&gt;Redwood believes that &lt;a href=&quot;https://jamstack.org/&quot;&gt;JAMstack&lt;/a&gt; is a huge leap forward in how we can write web applications that are easy to write, deploy, scale, and maintain.&lt;/p&gt; 
&lt;p&gt;Redwood believes that there is power in standards, and makes decisions for you about which technologies to use, how to organize your code into files, and how to name things. With a shared understanding of the Redwood conventions, a developer should be able to jump into any Redwood application and get up to speed very quickly.&lt;/p&gt; 
&lt;p&gt;Redwood believes that traditional, relational databases like PostgreSQL and MySQL are still the workhorses of today’s web applications and should be first-class citizens. However, Redwood also shines with NoSQL databases like &lt;a href=&quot;https://fauna.com/&quot;&gt;FaunaDB&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Redwood believes that, as much as possible, you should be able to operate in a serverless mindset and deploy to a generic computational grid. This helps unlock the next point…&lt;/p&gt; 
&lt;p&gt;Redwood believes that deployment and scaling should be super easy. To deploy your application, you should only need to commit and push to your Git repository. To scale from zero to thousands of users should not require your intervention. The principles of JAMstack and serverless make this possible.&lt;/p&gt; 
&lt;p&gt;Redwood believes that it should be equally useful for writing both simple, toy applications and complex, mission-critical applications. In addition, it should require very little operational work to grow your app from the former to the latter.&lt;/p&gt; 
&lt;p&gt;Redwood believes that you can use JavaScript as your primary language on both the frontend and backend. Using a single language simplifies everything from code reuse to hiring developers.&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;A Redwood application is split into two parts: a frontend and a backend. This is represented as two node projects within a single monorepo. We use &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;Yarn&lt;/a&gt; to make it easy to operate across both projects while keeping them in a single Git repository.&lt;/p&gt; 
&lt;p&gt;The frontend project is called &lt;code&gt;web&lt;/code&gt; and the backend project is called &lt;code&gt;api&lt;/code&gt;. For clarity, we will refer to these in prose as “sides”, i.e. the “web side” and the “api side”. They are separate projects because code on the web side will end up running in the user’s browser while code on the api side will run on a server somewhere. It is important that you keep this distinction clear in your mind as you develop your application. The two separate projects are intended to make this obvious. In addition, separate projects allow for different dependencies and build processes for each project.&lt;/p&gt; 
&lt;p&gt;The api side is an implementation of a GraphQL API. Your business logic is organized into “services” that represent their own internal API and can be called both from external GraphQL requests and other internal services. Redwood can automatically connect your internal services with Apollo, reducing the amount of boilerplate you have to write. Your services can interact with a database via Prisma’s ORM, and Prisma’s migration tooling provides first-class migrations that take the pain out of evolving your database schema.&lt;/p&gt; 
&lt;p&gt;The web side is built with React. Redwood’s router makes it simple to map URL paths to React “Page” components (and automatically code-split your app on each route). Pages may contain a “Layout” component to wrap content. They also contain “Cells” and regular React components. Cells allow you to declaratively manage the lifecycle of a component that fetches and displays data. Other Redwood utility components make it trivial to implement smart forms and various common needs. An ideal development flow starts with Storybook entries and Jest tests, so Redwood closely integrates both, making it easy to do the right thing.&lt;/p&gt; 
&lt;p&gt;You’ll notice that the web side is called “web” and not “frontend”. This is because Redwood conceives of a world where you may have other sides like “mobile”, “desktop”, “cli”, etc., all consuming the same GraphQL API and living in the same monorepo.&lt;/p&gt; 
&lt;h2&gt;How can it be serverless if it involves a GraphQL API and database?&lt;/h2&gt; 
&lt;p&gt;I’m glad you asked! Currently, Redwood can deploy your GraphQL API to a Lambda function. This is not appropriate for all use cases, but on hosting providers like Netlify, it makes deployment a breeze. As time goes on, “functions” will continue to enjoy performance improvements which will further increase the number of use cases that can take advantage of this technology.&lt;/p&gt; 
&lt;p&gt;Databases are a little trickier, especially the traditional relational ones like PostgreSQL and MySQL. Right now, you still need to set these up manually, but we are working hard with Netlify and other providers to fulfill the serverless dream here too.&lt;/p&gt; 
&lt;p&gt;Redwood is intentionally pushing the boundaries of what’s possible with JAMstack. In fact, the whole reason I (Tom) started working on Redwood is because of a tweet I posted some time ago:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Prediction: within 5 years, you’ll build your next large scale, fully featured web app with #JAMstack and deploy on @Netlify. &lt;a href=&quot;https://twitter.com/mojombo/status/1016506622477135872&quot;&gt;—@mojombo • 9 July 2018&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;I kept waiting for a high quality full-stack framework to arrive, but it didn’t, so I decided to take matters into my own hands. And that’s why Redwood exists.&lt;/p&gt; 
&lt;p&gt;If you are like minded, then I hope you’ll join me in helping build Redwood and hasten the arrival of the future I predicted!&lt;/p&gt; 
&lt;h2&gt;Why is it called Redwood?&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;(A history, by Tom Preston-Werner)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Where I live in Northern California there is a type of tree called a redwood. Redwoods are HUGE, the tallest in the world, some topping out at 115 meters (380 feet) in height. The eldest of the still-living redwoods sprouted from the ground an astonishing 3,200 years ago. To stand among them is transcendent. Sometimes, when I need to think or be creative, I will journey to my favorite grove of redwoods and walk among these giants, soaking myself in their silent grandeur.&lt;/p&gt; 
&lt;p&gt;In addition, Redwoods have a few properties that I thought would be aspirational for my nascent web app framework. Namely:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Redwoods are beautiful as saplings, and grow to be majestic.&lt;/strong&gt; What if you could feel that way about your web app?&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Redwood pinecones are dense and surprisingly small.&lt;/strong&gt; Can we allow you to get more done with less code?&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Redwood trees are resistant to fire.&lt;/strong&gt; Surprisingly robust to disaster scenarios, just like a great web framework should be!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Redwoods appear complex from afar, but simple up close.&lt;/strong&gt; Their branching structure provides order and allows for emergent complexity within a simple framework. Can a web framework do the same?&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And there you have it.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;A gigantic “Thank YOU!” to everyone below who has contributed to one or more Redwood projects: &lt;a href=&quot;https://github.com/redwoodjs/redwood&quot;&gt;Framework&lt;/a&gt;, &lt;a href=&quot;https://github.com/redwoodjs/redwoodjs.com&quot;&gt;Website&lt;/a&gt; (docs!), and &lt;a href=&quot;https://github.com/redwoodjs/create-redwood-app&quot;&gt;Create-Redwood Template&lt;/a&gt;. 🚀&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Core Team&lt;/h3&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tom.preston-werner.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Preston-Werner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;founder, leadership&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://peterp.org/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/44849?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Pistorius&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;founder, leadership&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ridingtheclutch.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/300?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rob Cameron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;founder, leadership&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://thedavidprice.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2951?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Price&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;founder, leadership&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jtoar&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/32992335?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominic Saadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer, advocate&lt;/sub&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RobertBroersma&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4519828?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dthyresson&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1051633?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Thyresson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer, community&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://edamame.studio/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1521877?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Choudhury&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer, community&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tlundberg.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30793?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tobbe Lundberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aldonline&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/154884?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aldo Bucchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer&lt;/sub&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ajcwebdev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/12433465?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anthony Campolo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;advocate&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/clairefro&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/9841162?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Claire Froelich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;maintainer&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kimadeline&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/51720070?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kim-Adeline Miguel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;community&lt;/sub&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/forresthayes&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/44448047?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Forrest Hayes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;sub&gt;community&lt;/sub&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h3&gt;All Contributors&lt;/h3&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://antonmoiseev.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/182853?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton Moiseev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://azimi.me/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/543633?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mohsen Azimi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tapstudio.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/15834048?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christopher Burns&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://terrisjkremer.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/458233?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Terris Kremer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ghuser.io/jamesgeorge007&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/25279263?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James George&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://brettjackson.org/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/47246?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brett Jackson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gfpacheco&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3705660?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guilherme Pacheco&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/noire-munich&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/10271407?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;noire.munich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kasper.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/230404?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kasper Mikiewicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/chris-hailstorm&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1454260?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;chris-hailstorm&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Jaikant&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3472565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lachlanjc.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/5074763?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lachlan Campbell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://satyarohith.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/29819102?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Satya Rohith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://twitter.com/snormore&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/182290?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Normore&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Rosenberg96&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/22986012?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mads Rosenberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tedstoychev&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1466111?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ted Stoychev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/eurobob&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4255350?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eurobob&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/vikash-eatgeek&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/50338945?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vikash&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://adrianmato.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/589285?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrian Mato&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ackinc&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4007598?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anirudh Nimmagadda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.benmccann.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/322311?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ben McCann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cball&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/14339?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Ball&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/suvash&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/144952?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Suvash Thapaliya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Thieffen&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/847877?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thieffen Delabaere&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/swyx&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/6764957?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;swyx&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://maxleon.net/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/745236?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Max Leon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/maximgeerinck&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/615509?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maxim Geerinck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/nexneo&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/794?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niket Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/0xflotus&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/26602940?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;0xflotus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cephalization&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8948924?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anthony Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://thewebdevcoach.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8263430?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aryan J&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.brianketelsen.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/37492?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brian Ketelsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dominicchapman&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7607007?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominic Chapman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/evanmoncuso&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/12928071?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evan Moncuso&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/petukhov&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2112710?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Georgy Petukhov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leibowitz&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1508563?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gianni Moschini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/gielcobben&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2663212?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Giel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://pnfc.re/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/24176136?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hampus Kraft&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/janimo&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/50138?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jani Monoses&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/redstab&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26380995?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jens Lindström&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jeliasson&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/865493?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johan Eliasson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/leonardoelias&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1995213?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leonardo Elias&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://loganhoup.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/17230438?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Logan Houp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://lorensr.me/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/251288?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Loren ☺️&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://markpollmann.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5286559?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mark Pollmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mattleff&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/120155?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matthew Leffler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/michelegera&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3891?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michele Gerarduzzi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nickgilldev.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/42254038?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Gill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nhristov&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/59096521?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nicholas Joy Christ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.getalma.eu/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/314079?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Olivier Lance&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dnprock&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/497205?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Phuoc Do&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rockymeza&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/21784?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rocky Meza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sharcastic&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11964820?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sharan Kumar S&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SimeonGriggs&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9684022?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simeon Griggs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://taylormilliman.me/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/15217013?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Taylor Milliman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/zhammer&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6956487?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zach Hammer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/biphobe&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1573875?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Przemyslaw T&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://hd10.dev/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8195444?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hemil Desai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MontelAle&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/38809793?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alessio Montel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://anthonymorris.dev/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/16005567?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anthony Morris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://betocmn.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1548368?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Beto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://turadg.aleahmad.net/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/21505?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Turadg Aleahmad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.paulkarayan.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1227327?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paul Karayan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/nikolasburk&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4058327?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikolas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/guledali&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/20647282?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;guledali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://yongbakos.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5502?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yong Joseph Bakos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.engawa.de/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3391068?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gerd Jungbluth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/JamesHighsmith&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2617706?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Highsmith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://tmr08c.github.io/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/691365?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Troy Rosenberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://amrrkf.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/8496156?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amr Fahim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dfundingsland&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10798234?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dfundingsland&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.osiux.ws/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/204463?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eduardo Reveles&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://archive.org/download/cv_20200213&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/388761?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeffrey Horn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/matthewhembree&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47449406?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;matthewhembree&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://robertbolender.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/3677807?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Robert Bolender&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shivamsinghchahar&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16636757?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shivam Chahar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.aaronsumner.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/53491?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron Sumner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://alvincrespo.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/151311?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alvin Crespo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/csellis&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/814405?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Ellis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://colinscape.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1083708?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Colin Ross&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dangdennis.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22418429?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dennis Dang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/derrickpelletier&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/833426?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Derrick Pelletier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.jvanbaarsen.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1362793?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeroen van Baarsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/matchai&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4658208?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matan Kushner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://blog.matthewrathbone.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/279769?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matthew Rathbone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://zurda.github.io/portfolio/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/16784959?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal Weisman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ollermi&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5677929?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miguel Oller&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://mudssrali.github.io/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/24487349?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mudassar Ali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://n8finch.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7983116?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nate Finch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pavelloz&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/546845?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paweł Kowalski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://in.linkedin.com/in/punit-makwana/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/16760252?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Punit Makwana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://scottchacon.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/70?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Chacon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/scotato&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5290015?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;scott&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/swalkinshaw&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/295605?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Walkinshaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/stephanvd&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1248040?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stephan van Diepen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bpenno&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10125593?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bpenno&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/tctrautman&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/4513085?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Trautman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://zackmckenna.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/31899931?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zachary McKenna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://ryanhayes.net/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/438357?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Hayes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://faunadb.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/210?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evan Weaver&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/CR1AT0RS&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4299288?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;cr1at0rs&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/qooqu&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/23623824?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;qooqu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.youtube.com/c/awesomedevnotes&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/66256957?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Android Dev Notes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jeremykratz.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1337020?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeremy Kratz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://kriscoulson.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/6943688?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kris Coulson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.aboutmonica.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/6998954?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Monica Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bboygary&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/65660344?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ganesh Rane&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryanmdoyle&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/20651020?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Doyle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/matthewcarlreetz&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1760821?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Reetz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://in.linkedin.com/in/punit-makwana/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/16760252?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Punit Makwana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shzmr&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/55944948?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;shzmr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/esteban-url&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/14810250?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;esteban-url&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Irev-Dev&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/29681384?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kurt Hutten&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AntonioMeireles&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/743527?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;António Meireles&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/brentguf&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/16427929?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brent Guffens&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://santhoshle.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/23736018?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Santhosh Laguduwa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mbucchi&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/5379019?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marco Bucchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jchlu&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/496597?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Johnny Choudhury-Lucas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://stevenmichael.almeroth.net/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/204645?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Almeroth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/lumenCodes&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/60603806?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lumenCodes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://robobunny.surge.sh/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/62807704?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;_robobunny&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevPo&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/2813592?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Poston&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dhausser&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/24432220?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Davy Hausser&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mohinderps&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/16372215?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mohinder Saluja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/guillaumeLamanda&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10440081?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lamanda &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ryancwalsh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2086493?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ryancwalsh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/njjkgeerts&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/504749?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Geerts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://miku86.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/7271016?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;miku86&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Krisztiaan&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4700811?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krisztiaan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jderrough&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1108358?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Derrough&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AsdethPrime&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/22416004?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Asdethprime&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/solon&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/48528?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brian Solon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ccchapman&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/42548502?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chris Chapman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Jolg42&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1328733?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joël Galeran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.mariahbragg.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5139784?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mariah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ogdenstudios.xyz/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/29899554?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tyler Scott Williams&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://devkucher.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/11472929?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vania Kucher&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://virenb.cc/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/10731287?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Viren Bhagat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Chuloo&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22301208?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;William&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dcgoodwin2112&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4554388?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dcgoodwin2112&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bennettrogers&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/933251?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bennett Rogers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/byudaniel&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7226285?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel O&#39;Neill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/noobling&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/23206864?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Yu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/adithyasunil26&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/51863389?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adithya Sunil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://edjiang.com/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/918770?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Edward Jiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://manukall.de/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/117418?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manuel Kallenbach&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/NickSchmitt&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/23244885?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Schmitt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://monoglot.dev/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/13792200?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jon Meyers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mbush92&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/15862774?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matthew Bush&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://patrickgallagher.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/35622595?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrick Gallagher&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/himankpathak&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26011845?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Himank Pathak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://morganmspencer.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10109983?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Morgan Spencer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ppinera.es/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/663605?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pedro Piñera Buendía&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/msutkowski&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/784953?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Sutkowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.simplethread.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/64120?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justin Etheredge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://zainf.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6315466?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zain Fathoni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://shrill-shrestha-portfolio.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43284212?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shrill Shrestha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.brentjanderson.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45031?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brent Anderson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/VinayaSathyanarayana&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16976677?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vinaya Sathyanarayana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.willminshew.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9845502?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Will Minshew&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/agiannelli&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53096355?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amanda Giannelli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/tawfikyasser&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54971231?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tawfik Yasser&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sebastienlorber.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/749374?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sébastien Lorber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/o0charlie0o&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1259226?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Charlie Ray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jangxyz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52015?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kim, Jang-hwan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://simoncrypta.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18013532?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Simon Gagnon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://wafuwafu13.hateblo.jp/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50798936?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TagawaHirotaka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andrew-hwahin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61768800?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Lam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bdurette&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/403387?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brandon DuRette&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/cjreimer&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51102303?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Curtis Reimer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/webstacker&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6331356?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Brown&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/adriatic&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2712405?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikolaj Ivancic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/nunopato&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1523504?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nuno Pato&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/renansoares&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1657840?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Renan Andrade&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/saideepesh000&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/43727167?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sai Deepesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bl-ue&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/54780737?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bl-ue&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/magicjuju&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19280122?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;juju&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.figma.com/@realstandal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25166787?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Lockard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/svenhanssen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/445182?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sven Hanssen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://mudssrali.github.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24487349?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mudassar Ali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sangheestyle&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/319490?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SangHee Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://loonyb.in/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78673?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Subhash Chandra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/seonghyeonkimm&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13966404?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;KimSeonghyeon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/origami-z&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5257855?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zhihao Cui&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://corbt.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/176426?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kyle Corbitt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SEANDOUGHTY&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12256202?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean Doughty&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/zakmandhro&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15746?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zak Mandhro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bozdoz.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1410985?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bozdoz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://mountaintopcoding.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14932877?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Isaac Tait&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jace.pro/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/638764?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jace&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bernsno&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13946?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Noah Bernsohn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/rene-demonsters&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/20322259?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;rene-demonsters&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://sharov.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1423028?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergey Sharov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/blackpr&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30457?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Pap&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/in-in&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8797432?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;in-in&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mlabate&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17139676?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;mlabate&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pdjota&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/93544?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Pablo Dejuan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bugsfunny&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12965842?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bugsfunny&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/luispinto23&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4148663?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luís Pinto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://adityaworks.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2629902?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aditya Pandey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.leighhalliday.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/603921?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Leigh Halliday&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BlackHawkSigma&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14921811?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;BlackHawkSigma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/devhmac/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/52307383?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Devin MacGillivray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pachoclo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3608140?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Francisco Jaramillo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://orta.io/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49038?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Orta Therox&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/viperfx&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/328257?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tharshan Muthulingam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://brianypliu.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3888780?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brian Liu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ajoslin103&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/443893?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;allen joslin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/wongyouth&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/944583?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Vashiru&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11370057?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vashiru&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://prolabprints.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7111699?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ron Dyar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/toddpress&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2934422?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Todd Pressley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;Redwood projects &lt;em&gt;(mostly)&lt;/em&gt; follow the &lt;a href=&quot;https://allcontributors.org/&quot;&gt;all-contributions&lt;/a&gt; specification. Contributions of any kind are welcome.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goldbergyoni/javascript-testing-best-practices</title>
      <link>https://github.com/goldbergyoni/javascript-testing-best-practices</link>
      <description>&lt;p&gt;📗🌐 🚢 Comprehensive and exhaustive JavaScript &amp; Node.js testing best practices (June 2021)&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/jtbp-header-blue.png&quot; width=&quot;1920px&quot;&gt; 
&lt;br&gt; 
&lt;h1&gt;👇 Why this guide can take your testing skills to the next level&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;📗 46+ best practices: Super-comprehensive and exhaustive&lt;/h2&gt; 
&lt;p&gt;This is a guide for JavaScript &amp;amp; Node.js reliability from A-Z. It summarizes and curates for you dozens of the best blog posts, books and tools the market has to offer&lt;/p&gt; 
&lt;h2&gt;🚢 Advanced: Goes 10,000 miles beyond the basics&lt;/h2&gt; 
&lt;p&gt;Hop into a journey that travels way beyond the basics into advanced topics like testing in production, mutation testing, property-based testing and many other strategic &amp;amp; professional tools. Should you read every word in this guide your testing skills are likely to go way above the average&lt;/p&gt; 
&lt;h2&gt;🌐 Full-stack: front, backend, CI, anything&lt;/h2&gt; 
&lt;p&gt;Start by understanding the ubiquitous testing practices that are the foundation for any application tier. Then, delve into your area of choice: frontend/UI, backend, CI or maybe all of them?&lt;/p&gt; 
&lt;br&gt; 
&lt;h3&gt;Written By Yoni Goldberg&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript &amp;amp; Node.js consultant&lt;/li&gt; 
 &lt;li&gt;📗 &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt; - My comprehensive online course with more than &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;10 hours of video&lt;/a&gt;, 14 test types and more than 40 best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;Follow me on Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h3&gt;Translations - read in your own language&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🇨🇳&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-zh-CN.md&quot;&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/yvesyao&quot;&gt;Yves yao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇰🇷&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme.kr.md&quot;&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/ragubyun&quot;&gt;Rain Byun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇵🇱&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pl.md&quot;&gt;Polish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/mbiesiad&quot;&gt;Michal Biesiada&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇪🇸&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-es.md&quot;&gt;Spanish&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/sanguino&quot;&gt;Miguel G. Sanguino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🇧🇷&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/readme-pt-br.md&quot;&gt;Portuguese-BR&lt;/a&gt; - Courtesy of &lt;a href=&quot;https://github.com/iagocavalcante&quot;&gt;Iago Angelim Costa Cavalcante&lt;/a&gt; , &lt;a href=&quot;https://github.com/DouglasMV&quot;&gt;Douglas Mariano Valero&lt;/a&gt; and &lt;a href=&quot;https://github.com/koooge&quot;&gt;koooge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Want to translate to your own language? please open an issue 💜&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;Table of Contents&lt;/code&gt;&lt;/h2&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-0%EF%B8%8F%E2%83%A3-the-golden-rule&quot;&gt;&lt;code&gt;Section 0: The Golden Rule&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A single advice that inspires all the others (1 special bullet)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-1-the-test-anatomy-1&quot;&gt;&lt;code&gt;Section 1: The Test Anatomy&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;The foundation - structuring clean tests (12 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-2%EF%B8%8F%E2%83%A3-backend-testing&quot;&gt;&lt;code&gt;Section 2: Backend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing backend and Microservices tests efficiently (8 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-3%EF%B8%8F%E2%83%A3-frontend-testing&quot;&gt;&lt;code&gt;Section 3: Frontend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Writing tests for web UI including component and E2E tests (11 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-4%EF%B8%8F%E2%83%A3-measuring-test-effectiveness&quot;&gt;&lt;code&gt;Section 4: Measuring Tests Effectiveness&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Watching the watchman - measuring test quality (4 bullets)&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#section-5%EF%B8%8F%E2%83%A3-ci-and-other-quality-measures&quot;&gt;&lt;code&gt;Section 5: Continuous Integration&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Guidelines for CI in the JS world (9 bullets)&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 0️⃣: The Golden Rule&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪️ 0 The Golden Rule: Design for lean testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Testing code is not like production-code - design it to be dead-simple, short, abstraction-free, flat, delightful to work with, lean. One should look at a test and get the intent instantly.&lt;/p&gt; 
&lt;p&gt;Our minds are full with the main production code, we don’t have ‘headspace’ for additional complexity. Should we try to squeeze yet another challenging code into our poor brain it will slow the team down which works against the reason we do testing. Practically this is where many teams just abandon testing.&lt;/p&gt; 
&lt;p&gt;The tests are an opportunity for something else - a friendly and smiley assistant, one that it’s delightful to work with and delivers great value for such a small investment. Science tells us that we have two brain systems: system 1 is used for effortless activities like driving a car on an empty road and system 2 which is meant for complex and conscious operations like solving a math equation. Design your test for system 1, when looking at test code it should &lt;em&gt;feel&lt;/em&gt; as easy as modifying an HTML document and not like solving 2X(17 × 24).&lt;/p&gt; 
&lt;p&gt;This can be achieved by selectively cherry-picking techniques, tools and test targets that are cost-effective and provide great ROI. Test only as much as needed, strive to keep it nimble, sometimes it’s even worth dropping some tests and trade reliability for agility and simplicity.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/headspace.png&quot; alt=&quot;alt text&quot; title=&quot;We have no head room for additional complexity&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Most of the advice below are derivatives of this principle.&lt;/p&gt; 
&lt;h3&gt;Ready to start?&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 1: The Test Anatomy&lt;/h1&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 1.1 Include 3 parts in each test name&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; A test report should tell whether the current application revision satisfies the requirements for the people who are not necessarily familiar with the code: the tester, the DevOps engineer who is deploying and the future you two years from now. This can be achieved best if the tests speak at the requirements level and include 3 parts:&lt;/p&gt; 
&lt;p&gt;(1) What is being tested? For example, the ProductsService.addNewProduct method&lt;/p&gt; 
&lt;p&gt;(2) Under what circumstances and scenario? For example, no price is passed to the method&lt;/p&gt; 
&lt;p&gt;(3) What is the expected result? For example, the new product is not approved&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;👇 Note:&lt;/strong&gt; Each bullet has code examples and sometime also an image illustration. Click to expand &lt;br&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Mocha to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//1. unit under test
describe(&#39;Products Service&#39;, function() {
  describe(&#39;Add new product&#39;, function() {
    //2. scenario and 3. expectation
    it(&#39;When no price is specified, then the product status is pending approval&#39;, ()=&amp;gt; {
      const newProduct = new ProductService().add(...);
      expect(newProduct.status).to.equal(&#39;pendingApproval&#39;);
    });
  });
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-1-3-parts.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;© &lt;b&gt;Credits &amp;amp; read-more&lt;/b&gt;&lt;/summary&gt; 1. 
 &lt;a href=&quot;https://osherove.com/blog/2005/4/3/naming-standards-for-unit-tests.html&quot;&gt;Roy Osherove - Naming standards for unit tests&lt;/a&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.2 Structure tests by the AAA pattern&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Structure your tests with 3 well-separated sections Arrange, Act &amp;amp; Assert (AAA). Following this structure guarantees that the reader spends no brain-CPU on understanding the test plan:&lt;/p&gt; 
&lt;p&gt;1st A - Arrange: All the setup code to bring the system to the scenario the test aims to simulate. This might include instantiating the unit under test constructor, adding DB records, mocking/stubbing on objects and any other preparation code&lt;/p&gt; 
&lt;p&gt;2nd A - Act: Execute the unit under test. Usually 1 line of code&lt;/p&gt; 
&lt;p&gt;3rd A - Assert: Ensure that the received value satisfies the expectation. Usually 1 line of code&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Not only do you spend hours understanding the main code, but what should have been the simplest part of the day (testing) stretches your brain&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A test structured with the AAA pattern&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Customer classifier&quot;, () =&amp;gt; {
  test(&quot;When customer spent more than 500$, should be classified as premium&quot;, () =&amp;gt; {
    //Arrange
    const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
    const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });

    //Act
    const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);

    //Assert
    expect(receivedClassification).toMatch(&quot;premium&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: No separation, one bulk, harder to interpret&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Should be classified as premium&quot;, () =&amp;gt; {
  const customerToClassify = { spent: 505, joined: new Date(), id: 1 };
  const DBStub = sinon.stub(dataAccess, &quot;getCustomer&quot;).reply({ id: 1, classification: &quot;regular&quot; });
  const receivedClassification = customerClassifier.classifyCustomer(customerToClassify);
  expect(receivedClassification).toMatch(&quot;premium&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.3 Describe expectations in a product language: use BDD-style assertions&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Coding your tests in a declarative-style allows the reader to get the grab instantly without spending even a single brain-CPU cycle. When you write imperative code that is packed with conditional logic, the reader is forced to exert more brain-CPU cycles. In that case, code the expectation in a human-like language, declarative BDD style using &lt;code&gt;expect&lt;/code&gt; or &lt;code&gt;should&lt;/code&gt; and not using custom code. If Chai &amp;amp; Jest doesn’t include the desired assertion and it’s highly repeatable, consider &lt;a href=&quot;https://jestjs.io/docs/en/expect#expectextendmatchers&quot;&gt;extending Jest matcher (Jest)&lt;/a&gt; or writing a &lt;a href=&quot;https://www.chaijs.com/guide/plugins/&quot;&gt;custom Chai plugin&lt;/a&gt; &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The team will write less tests and decorate the annoying ones with .skip()&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: The reader must skim through not so short, and imperative code just to get the test story&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins &quot;admin1&quot;, &quot;admin2&quot; and &quot;user1&quot;
  const allAdmins = getUsers({ adminOnly: true });

  let admin1Found,
    adming2Found = false;

  allAdmins.forEach(aSingleUser =&amp;gt; {
    if (aSingleUser === &quot;user1&quot;) {
      assert.notEqual(aSingleUser, &quot;user1&quot;, &quot;A user was found and not admin&quot;);
    }
    if (aSingleUser === &quot;admin1&quot;) {
      admin1Found = true;
    }
    if (aSingleUser === &quot;admin2&quot;) {
      admin2Found = true;
    }
  });

  if (!admin1Found || !admin2Found) {
    throw new Error(&quot;Not all admins were returned&quot;);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Skimming through the following declarative test is a breeze&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When asking for an admin, ensure only ordered admins in results&quot;, () =&amp;gt; {
  //assuming we&#39;ve added here two admins
  const allAdmins = getUsers({ adminOnly: true });

  expect(allAdmins)
    .to.include.ordered.members([&quot;admin1&quot;, &quot;admin2&quot;])
    .but.not.include.ordered.members([&quot;user1&quot;]);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.4 Stick to black-box testing: Test only public methods&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Testing the internals brings huge overhead for almost nothing. If your code/API delivers the right results, should you really invest your next 3 hours in testing HOW it worked internally and then maintain these fragile tests? Whenever a public behavior is checked, the private implementation is also implicitly tested and your tests will break only if there is a certain problem (e.g. wrong output). This approach is also referred to as &lt;code&gt;behavioral testing&lt;/code&gt;. On the other side, should you test the internals (white box approach) — your focus shifts from planning the component outcome to nitty-gritty details and your test might break because of minor code refactors although the results are fine - this dramatically increases the maintenance burden &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Your tests behave like the &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Boy_Who_Cried_Wolf&quot;&gt;boy who cried wolf&lt;/a&gt;: shouting false-positive cries (e.g., A test fails because a private variable name was changed). Unsurprisingly, people will soon start to ignore the CI notifications until someday, a real bug gets ignored…&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test case is testing the internals for no good reason&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha &amp;amp; Chai&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ProductService {
  //this method is only used internally
  //Change this name will make the tests fail
  calculateVATAdd(priceWithoutVAT) {
    return { finalPrice: priceWithoutVAT * 1.2 };
    //Change the result format or key name above will make the tests fail
  }
  //public method
  getPrice(productId) {
    const desiredProduct = DB.getProduct(productId);
    finalPrice = this.calculateVATAdd(desiredProduct.price).finalPrice;
    return finalPrice;
  }
}

it(&quot;White-box test: When the internal methods get 0 vat, it return 0 response&quot;, async () =&amp;gt; {
  //There&#39;s no requirement to allow users to calculate the VAT, only show the final price. Nevertheless we falsely insist here to test the class internals
  expect(new ProductService().calculateVATAdd(0).finalPrice).to.equal(0);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ ️1.5 Choose the right test doubles: Avoid mocks in favor of stubs and spies&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Test doubles are a necessary evil because they are coupled to the application internals, yet some provide immense value (&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; data-href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot;&gt;Read here a reminder about test doubles: mocks vs stubs vs spies&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Before using test doubles, ask a very simple question: Do I use it to test functionality that appears, or could appear, in the requirements document? If no, it’s a white-box testing smell.&lt;/p&gt; 
&lt;p&gt;For example, if you want to test that your app behaves reasonably when the payment service is down, you might stub the payment service and trigger some ‘No Response’ return to ensure that the unit under test returns the right value. This checks our application behavior/response/outcome under certain scenarios. You might also use a spy to assert that an email was sent when that service is down — this is again a behavioral check which is likely to appear in a requirements doc (“Send an email if payment couldn’t be saved”). On the flip side, if you mock the Payment service and ensure that it was called with the right JavaScript types — then your test is focused on internal things that have nothing to do with the application functionality and are likely to change frequently &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Any refactoring of code mandates searching for all the mocks in the code and updating accordingly. Tests become a burden rather than a helpful friend&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern example: Mocks focus on the internals&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Sinon-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Sinon&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure data access DAL was called once, with the right product and right config&quot;, async () =&amp;gt; {
  //Assume we already added a product
  const dataAccessMock = sinon.mock(DAL);
  //hmmm BAD: testing the internals is actually our main goal here, not just a side-effect
  dataAccessMock
    .expects(&quot;deleteProduct&quot;)
    .once()
    .withArgs(DBConfig, theProductWeJustAdded, true, false);
  new ProductService().deletePrice(theProductWeJustAdded);
  dataAccessMock.verify();
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: spies are focused on testing the requirements but as a side-effect are unavoidably touching to the internals&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When a valid product is about to be deleted, ensure an email is sent&quot;, async () =&amp;gt; {
  //Assume we already added here a product
  const spy = sinon.spy(Emailer.prototype, &quot;sendEmail&quot;);
  new ProductService().deletePrice(theProductWeJustAdded);
  //hmmm OK: we deal with internals? Yes, but as a side effect of testing the requirements (sending an email)
  expect(spy.calledOnce).to.be.true;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;📗 Want to learn all these practices with live video?&lt;/h2&gt; 
&lt;h3&gt;Visit my online course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.6 Don’t “foo”, use realistic input data&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Often production bugs are revealed under some very specific and surprising input — the more realistic the test input is, the greater the chances are to catch bugs early. Use dedicated libraries like &lt;a href=&quot;https://www.npmjs.com/package/faker&quot;&gt;Faker&lt;/a&gt; to generate pseudo-real data that resembles the variety and form of production data. For example, such libraries can generate realistic phone numbers, usernames, credit card, company names, and even ‘lorem ipsum’ text. You may also create some tests (on top of unit tests, not as a replacement) that randomize fakers data to stretch your unit under test or even import real data from your production environment. Want to take it to the next level? See the next bullet (property-based testing). &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; All your development testing will falsely show green when you use synthetic inputs like “Foo”, but then production might turn red when a hacker passes-in a nasty string like “@3e2ddsf . ##’ 1 fdsfds . fds432 AAAA”&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test suite that passes due to non-realistic data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const addProduct = (name, price) =&amp;gt; {
  const productNameRegexNoSpace = /^\S*$/; //no white-space allowed

  if (!productNameRegexNoSpace.test(name)) return false; //this path never reached due to dull input

  //some logic here
  return true;
};

test(&quot;Wrong: When adding new product with valid properties, get successful confirmation&quot;, async () =&amp;gt; {
  //The string &quot;Foo&quot; which is used in all tests never triggers a false result
  const addProductResult = addProduct(&quot;Foo&quot;, 5);
  expect(addProductResult).toBe(true);
  //Positive-false: the operation succeeded because we never tried with long
  //product name including spaces
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: Randomizing realistic input&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;Better: When adding new valid product, get successful confirmation&quot;, async () =&amp;gt; {
  const addProductResult = addProduct(faker.commerce.productName(), faker.random.number());
  //Generated random input: {&#39;Sleek Cotton Computer&#39;,  85481}
  expect(addProductResult).to.be.true;
  //Test failed, the random input triggered some path we never planned for.
  //We discovered a bug early!
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.7 Test many input combinations using Property-based testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Typically we choose a few input samples for each test. Even when the input format resembles real-world data (see bullet ‘Don’t foo’), we cover only a few input combinations (method(‘’, true, 1), method(“string” , false” , 0)), However, in production, an API that is called with 5 parameters can be invoked with thousands of different permutations, one of them might render our process down (&lt;a href=&quot;https://en.wikipedia.org/wiki/Fuzzing&quot;&gt;see Fuzz Testing&lt;/a&gt;). What if you could write a single test that sends 1000 permutations of different inputs automatically and catches for which input our code fails to return the right response? Property-based testing is a technique that does exactly that: by sending all the possible input combinations to your unit under test it increases the serendipity of finding a bug. For example, given a method — addNewProduct(id, name, isDiscount) — the supporting libraries will call this method with many combinations of (number, string, boolean) like (1, “iPhone”, false), (2, “Galaxy”, true). You can run property-based testing using your favorite test runner (Mocha, Jest, etc) using libraries like &lt;a href=&quot;https://github.com/jsverify/jsverify&quot;&gt;js-verify&lt;/a&gt; or &lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot;&gt;testcheck&lt;/a&gt; (much better documentation). Update: Nicolas Dubien suggests in the comments below to &lt;a href=&quot;https://github.com/dubzzz/fast-check#readme&quot;&gt;checkout fast-check&lt;/a&gt; which seems to offer some additional features and also to be actively maintained &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Unconsciously, you choose the test inputs that cover only code paths that work well. Unfortunately, this decreases the efficiency of testing as a vehicle to expose bugs&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Testing many input permutations with “fast-check”&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import fc from &quot;fast-check&quot;;

describe(&quot;Product service&quot;, () =&amp;gt; {
  describe(&quot;Adding new&quot;, () =&amp;gt; {
    //this will run 100 times with different random properties
    it(&quot;Add new product with random yet valid properties, always successful&quot;, () =&amp;gt;
      fc.assert(
        fc.property(fc.integer(), fc.string(), (id, name) =&amp;gt; {
          expect(addNewProduct(id, name).status).toEqual(&quot;approved&quot;);
        })
      ));
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.8 If needed, use only short &amp;amp; inline snapshots&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When there is a need for &lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing&quot;&gt;snapshot testing&lt;/a&gt;, use only short and focused snapshots (i.e. 3-7 lines) that are included as part of the test (&lt;a href=&quot;https://jestjs.io/docs/en/snapshot-testing#inline-snapshots&quot;&gt;Inline Snapshot&lt;/a&gt;) and not within external files. Keeping this guideline will ensure your tests remain self-explanatory and less fragile.&lt;/p&gt; 
&lt;p&gt;On the other hand, ‘classic snapshots’ tutorials and tools encourage to store big files (e.g. component rendering markup, API JSON result) over some external medium and ensure each time when the test run to compare the received result with the saved version. This, for example, can implicitly couple our test to 1000 lines with 3000 data values that the test writer never read and reasoned about. Why is this wrong? By doing so, there are 1000 reasons for your test to fail - it’s enough for a single line to change for the snapshot to get invalid and this is likely to happen a lot. How frequently? for every space, comment or minor CSS/HTML change. Not only this, the test name wouldn’t give a clue about the failure as it just checks that 1000 lines didn’t change, also it encourages to the test writer to accept as the desired true a long document he couldn’t inspect and verify. All of these are symptoms of obscure and eager test that is not focused and aims to achieve too much&lt;/p&gt; 
&lt;p&gt;It’s worth noting that there are few cases where long &amp;amp; external snapshots are acceptable - when asserting on schema and not data (extracting out values and focusing on fields) or when the received document rarely changes &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; A UI test fails. The code seems right, the screen renders perfect pixels, what happened? your snapshot testing just found a difference from the origin document to current received one - a single space character was added to the markdown…&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Coupling our test to unseen 2000 lines of code&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;TestJavaScript.com is renderd correctly&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert
  expect(receivedPage).toMatchSnapshot();
  //We now implicitly maintain a 2000 lines long document
  //every additional line break or comment - will break this test
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Expectations are visible and focused&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When visiting TestJavaScript.com home page, a menu is displayed&quot;, () =&amp;gt; {
  //Arrange

  //Act
  const receivedPage = renderer
    .create(&amp;lt;DisplayPage page=&quot;http://www.testjavascript.com&quot;&amp;gt; Test JavaScript &amp;lt;/DisplayPage&amp;gt;)
    .toJSON();

  //Assert

  const menu = receivedPage.content.menu;
  expect(menu).toMatchInlineSnapshot(`
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; About &amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt; Contact &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
`);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.9 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (&lt;a href=&quot;https://en.wikipedia.org/wiki/Test_fixture&quot;&gt;also known as ‘test fixture’&lt;/a&gt;) for the sake of performance improvement. While performance is indeed a valid concern — it can be mitigated (see “Component testing” bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern — a balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let’s investigate, oh no — it seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });

  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);

  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 1.10 Don’t catch errors, expect them&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When trying to assert that some input triggers an error, it might look right to use try-catch-finally and asserts that the catch clause was entered. The result is an awkward and verbose test case (example below) that hides the simple test intent and the result expectations&lt;/p&gt; 
&lt;p&gt;A more elegant alternative is the using the one-line dedicated Chai assertion: expect(method).to.throw (or in Jest: expect(method).toThrow()). It’s absolutely mandatory to also ensure the exception contains a property that tells the error type, otherwise given just a generic error the application won’t be able to do much rather than show a disappointing message to the user &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; It will be challenging to infer from the test reports (e.g. CI reports) what went wrong&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern Example: A long test case that tries to assert the existence of error with try-catch&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  let errorWeExceptFor = null;
  try {
    const result = await addNewProduct({});
  } catch (error) {
    expect(error.code).to.equal(&quot;InvalidInput&quot;);
    errorWeExceptFor = error;
  }
  expect(errorWeExceptFor).not.to.be.null;
  //if this assertion fails, the tests results/reports will only show
  //that some value is null, there won&#39;t be a word about a missing Exception
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: A human-readable expectation that could be understood easily, maybe even by QA or technical PM&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When no product name, it throws error 400&quot;, async () =&amp;gt; {
  await expect(addNewProduct({}))
    .to.eventually.throw(AppError)
    .with.property(&quot;code&quot;, &quot;InvalidInput&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.11 Tag your tests&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha — grep ‘sanity’ &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Tagging tests as ‘#cold-test’ allows the test runner to execute only fast tests (Cold===quick tests that are doing no IO and can be executed frequently even as the developer is typing)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//this test is fast (no DB) and we&#39;re tagging it correspondigly
//now the user/CI can run it frequently
describe(&quot;Order service&quot;, function() {
  describe(&quot;Add new order #cold-test #sanity&quot;, function() {
    test(&quot;Scenario - no currency was supplied. Expectation - Use the default currency #sanity&quot;, function() {
      //code logic here
    });
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 1.12 Categorize tests under at least 2 levels&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Apply some structure to your test suite so an occasional visitor could easily understand the requirements (tests are the best documentation) and the various scenarios that are being tested. A common method for this is by placing at least 2 ‘describe’ blocks above your tests: the 1st is for the name of the unit under test and the 2nd for additional level of categorization like the scenario or custom categories (see code examples and print screen below). Doing so will also greatly improve the test reports: The reader will easily infer the tests categories, delve into the desired section and correlate failing tests. In addition, it will get much easier for a developer to navigate through the code of a suite with many tests. There are multiple alternative structures for test suite that you may consider like &lt;a href=&quot;https://github.com/searls/jasmine-given&quot;&gt;given-when-then&lt;/a&gt; and &lt;a href=&quot;https://github.com/ericelliott/riteway&quot;&gt;RITE&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When looking at a report with flat and long list of tests, the reader have to skim-read through long texts to conclude the major scenarios and correlate the commonality of failing tests. Consider the following case: When 7/100 tests fail, looking at a flat list will demand reading the failing tests text to see how they relate to each other. However, in a hierarchical report all of them could be under the same flow or category and the reader will quickly infer what or at least where is the root failure cause&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Structuring suite with the name of unit under test and scenarios will lead to the convenient report that is shown below&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Unit under test
describe(&quot;Transfer service&quot;, () =&amp;gt; {
  //Scenario
  describe(&quot;When no credit&quot;, () =&amp;gt; {
    //Expectation
    test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

    //Expectation
    test(&quot;Then it should send email to admin&quot;, () =&amp;gt; {});
  });
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/hierarchical-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-pattern Example: A flat list of tests will make it harder for the reader to identify the user stories and correlate failing tests&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Then the response status should decline&quot;, () =&amp;gt; {});

test(&quot;Then it should send email&quot;, () =&amp;gt; {});

test(&quot;Then there should not be a new transfer record&quot;, () =&amp;gt; {});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/flat-report.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️1.13 Other generic good testing hygiene&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;p&gt;Learn and practice &lt;a href=&quot;https://www.sm-cloud.com/book-review-test-driven-development-by-example-a-tldr/&quot;&gt;TDD principles&lt;/a&gt; — they are extremely valuable for many but don’t get intimidated if they don’t fit your style, you’re not the only one. Consider writing the tests before the code in a &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html&quot;&gt;red-green-refactor style&lt;/a&gt;, ensure each test checks exactly one thing, when you find a bug — before fixing write a test that will detect this bug in the future, let each test fail at least once before turning green, start a module by writing a quick and simplistic code that satisfies the test - then refactor gradually and take it to a production grade level, avoid any dependency on the environment (paths, OS, etc) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You‘ll miss pearls of wisdom that were collected for decades&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 2️⃣: Backend Testing&lt;/h1&gt; 
&lt;h2&gt;⚪ ️2.1 Enrich your testing portfolio: Look beyond unit tests and the pyramid&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The &lt;a href=&quot;https://martinfowler.com/bliki/TestPyramid.html&quot;&gt;testing pyramid&lt;/a&gt;, though 10&amp;gt; years old, is a great and relevant model that suggests three testing types and influences most developers’ testing strategy. At the same time, more than a handful of shiny new testing techniques emerged and are hiding in the shadows of the testing pyramid. Given all the dramatic changes that we’ve seen in the recent 10 years (Microservices, cloud, serverless), is it even possible that one quite-old model will suit &lt;em&gt;all&lt;/em&gt; types of applications? shouldn’t the testing world consider welcoming new testing techniques?&lt;/p&gt; 
&lt;p&gt;Don’t get me wrong, in 2019 the testing pyramid, TDD and unit tests are still a powerful technique and are probably the best match for many applications. Only like any other model, despite its usefulness, &lt;a href=&quot;https://en.wikipedia.org/wiki/All_models_are_wrong&quot;&gt;it must be wrong sometimes&lt;/a&gt;. For example, consider an IoT application that ingests many events into a message-bus like Kafka/RabbitMQ, which then flow into some data-warehouse and are eventually queried by some analytics UI. Should we really spend 50% of our testing budget on writing unit tests for an application that is integration-centric and has almost no logic? As the diversity of application types increase (bots, crypto, Alexa-skills) greater are the chances to find scenarios where the testing pyramid is not the best match.&lt;/p&gt; 
&lt;p&gt;It’s time to enrich your testing portfolio and become familiar with more testing types (the next bullets suggest few ideas), mind models like the testing pyramid but also match testing types to real-world problems that you’re facing (‘Hey, our API is broken, let’s write consumer-driven contract testing!’), diversify your tests like an investor that build a portfolio based on risk analysis — assess where problems might arise and match some prevention measures to mitigate those potential risks&lt;/p&gt; 
&lt;p&gt;A word of caution: the TDD argument in the software world takes a typical false-dichotomy face, some preach to use it everywhere, others think it’s the devil. Everyone who speaks in absolutes is wrong :]&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You’re going to miss some tools with amazing ROI, some like Fuzz, lint, and mutation can provide value in 10 minutes&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Cindy Sridharan suggests a rich testing portfolio in her amazing post ‘Testing Microservices — the same way’&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-rich-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Cindy Sridharan suggests a rich testing portfolio in her amazing post ‘Testing Microservices — the sane way’&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;☺️Example: &lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtube&quot; data-href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be&quot;&gt;YouTube: “Beyond Unit Tests: 5 Shiny Node.JS Test Types (2018)” (Yoni Goldberg)&lt;/a&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-12-Yoni-Goldberg-Testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;A test name that constitutes 3 parts&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️2.2 Component testing might be your best affair&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Each unit test covers a tiny portion of the application and it’s expensive to cover the whole, whereas end-to-end testing easily covers a lot of ground but is flaky and slower, why not apply a balanced approach and write tests that are bigger than unit tests but smaller than end-to-end testing? Component testing is the unsung song of the testing world — they provide the best from both worlds: reasonable performance and a possibility to apply TDD patterns + realistic and great coverage.&lt;/p&gt; 
&lt;p&gt;Component tests focus on the Microservice ‘unit’, they work against the API, don’t mock anything which belongs to the Microservice itself (e.g. real DB, or at least the in-memory version of that DB) but stub anything that is external like calls to other Microservices. By doing so, we test what we deploy, approach the app from outwards to inwards and gain great confidence in a reasonable amount of time. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Supertest allows approaching Express API in-process (fast and cover many layers)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-13-component-test-yoni-goldberg.png&quot; alt=&quot;alt text&quot; title=&quot; [Supertest](https://www.npmjs.com/package/supertest) allows approaching Express API in-process (fast and cover many layers)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️2.3 Ensure new releases don’t break the API using contract tests&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; So your Microservice has multiple clients, and you run multiple versions of the service for compatibility reasons (keeping everyone happy). Then you change some field and ‘boom!’, some important client who relies on this field is angry. This is the Catch-22 of the integration world: It’s very challenging for the server side to consider all the multiple client expectations — On the other hand, the clients can’t perform any testing because the server controls the release dates. &lt;a href=&quot;https://docs.pact.io/&quot;&gt;Consumer-driven contracts and the framework PACT&lt;/a&gt; were born to formalize this process with a very disruptive approach — not the server defines the test plan of itself rather the client defines the tests of the… server! PACT can record the client expectation and put in a shared location, “broker”, so the server can pull the expectations and run on every build using PACT library to detect broken contracts — a client expectation that is not met. By doing so, all the server-client API mismatches are caught early during build/CI and might save you a great deal of frustration &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The alternatives are exhausting manual testing or deployment fear&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20PACT-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with PACT&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-14-testing-best-practices-contract-flow.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 2.4 Test your middlewares in isolation&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Many avoid Middleware testing because they represent a small portion of the system and require a live Express server. Both reasons are wrong — Middlewares are small but affect all or most of the requests and can be tested easily as pure functions that get {req,res} JS objects. To test a middleware function one should just invoke it and spy (&lt;a href=&quot;https://www.npmjs.com/package/sinon&quot;&gt;using Sinon for example&lt;/a&gt;) on the interaction with the {req,res} objects to ensure the function performed the right action. The library &lt;a href=&quot;https://www.npmjs.com/package/node-mocks-http&quot;&gt;node-mock-http&lt;/a&gt; takes it even further and factors the {req,res} objects along with spying on their behavior. For example, it can assert whether the http status that was set on the res object matches the expectation (See example below) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap:Doing It Right Example: Testing middleware in isolation without issuing network calls and waking-up the entire Express machine&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Jest&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//the middleware we want to test
const unitUnderTest = require(&quot;./middleware&quot;);
const httpMocks = require(&quot;node-mocks-http&quot;);
//Jest syntax, equivelant to describe() &amp;amp; it() in Mocha
test(&quot;A request without authentication header, should return http status 403&quot;, () =&amp;gt; {
  const request = httpMocks.createRequest({
    method: &quot;GET&quot;,
    url: &quot;/user/42&quot;,
    headers: {
      authentication: &quot;&quot;
    }
  });
  const response = httpMocks.createResponse();
  unitUnderTest(request, response);
  expect(response.statusCode).toBe(403);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️2.5 Measure and refactor using static analysis tools&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keep your code maintainable. You can add static analysis tools to your CI build to abort when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt; (4,900+ &lt;a href=&quot;https://github.com/SonarSource/sonarqube&quot;&gt;stars&lt;/a&gt;) and &lt;a href=&quot;https://codeclimate.com/&quot;&gt;Code Climate&lt;/a&gt; (2,000+ &lt;a href=&quot;https://github.com/codeclimate/codeclimate&quot;&gt;stars&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Credit: &lt;a href=&quot;https://github.com/TheHollidayInn&quot; data-href=&quot;https://github.com/TheHollidayInn&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/TheHollidayInn&quot;&gt;Keith Holliday&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: CodeClimate, a commercial tool that can identify complex methods:&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Code%20Climate-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with CodeClimate&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-16-yoni-goldberg-quality.png&quot; alt=&quot;alt text&quot; title=&quot;CodeClimate, a commercial tool that can identify complex methods:&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 2.6 Check your readiness for Node-related chaos&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Weirdly, most software testings are about logic &amp;amp; data only, but some of the worst things that happen (and are really hard to mitigate) are infrastructural issues. For example, did you ever test what happens when your process memory is overloaded, or when the server/process dies, or does your monitoring system realizes when the API becomes 50% slower?. To test and mitigate these type of bad things — &lt;a href=&quot;https://principlesofchaos.org/&quot;&gt;Chaos engineering&lt;/a&gt; was born by Netflix. It aims to provide awareness, frameworks and tools for testing our app resiliency for chaotic issues. For example, one of its famous tools, &lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot;&gt;the chaos monkey&lt;/a&gt;, randomly kills servers to ensure that our service can still serve users and not relying on a single server (there is also a Kubernetes version, &lt;a href=&quot;https://github.com/asobti/kube-monkey&quot;&gt;kube-monkey&lt;/a&gt;, that kills pods). All these tools work on the hosting/platform level, but what if you wish to test and generate pure Node chaos like check how your Node process copes with uncaught errors, unhandled promise rejection, v8 memory overloaded with the max allowed of 1.7GB or whether your UX remains satisfactory when the event loop gets blocked often? to address this I’ve written, &lt;a href=&quot;https://github.com/i0natan/node-chaos-monkey&quot;&gt;node-chaos&lt;/a&gt; (alpha) which provides all sort of Node-related chaotic acts &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; No escape here, Murphy’s law will hit your production without mercy&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: : Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-17-yoni-goldberg-chaos-monkey-nodejs.png&quot; alt=&quot;alt text&quot; title=&quot;Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️2.7 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (also known as ‘test fixture’) for the sake of performance improvement. While performance is indeed a valid concern — it can be mitigated (see “Component testing” bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern — a balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let’s investigate, oh no — it seems that two tests were mutating the same seed data&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Mocha&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;before(async () =&amp;gt; {
  //adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework
  await DB.AddSeedDataFromJson(&#39;seed.json&#39;);
});
it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToUpdate = await SiteService.getSiteByName(&quot;Portal&quot;);
  const updateNameResult = await SiteService.changeName(siteToUpdate, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
it(&quot;When querying by site name, get the right site&quot;, async () =&amp;gt; {
  //I know that site name &quot;portal&quot; exists - I saw it in the seed files
  const siteToCheck = await SiteService.getSiteByName(&quot;Portal&quot;);
  expect(siteToCheck.name).to.be.equal(&quot;Portal&quot;); //Failure! The previous test change the name :[
});

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When updating site name, get successful confirmation&quot;, async () =&amp;gt; {
  //test is adding a fresh new records and acting on the records only
  const siteUnderTest = await SiteService.addSite({
    name: &quot;siteForUpdateTest&quot;
  });
  const updateNameResult = await SiteService.changeName(siteUnderTest, &quot;newName&quot;);
  expect(updateNameResult).to.be(true);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 3️⃣: Frontend Testing&lt;/h1&gt; 
&lt;h2&gt;⚪ ️ 3.1 Separate UI from functionality&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When focusing on testing component logic, UI details become a noise that should be extracted, so your tests can focus on pure data. Practically, extract the desired data from the markup in an abstract way that is not too coupled to the graphic implementation, assert only on pure data (vs HTML/CSS graphic details) and disable animations that slow down. You might get tempted to avoid rendering and test only the back part of the UI (e.g. services, actions, store) but this will result in fictional tests that don’t resemble the reality and won’t reveal cases where the right data doesn’t even arrive in the UI&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The pure calculated data of your test might be ready in 10ms, but then the whole test will last 500ms (100 tests = 1 min) due to some fancy and irrelevant animation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Separating out the UI details&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When users-list is flagged to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Extract the data from the UI first
  const allRenderedUsers = getAllByTestId(&quot;user&quot;).map(uiElement =&amp;gt; uiElement.textContent);
  const allRealVIPUsers = allUsers.filter(user =&amp;gt; user.vip).map(user =&amp;gt; user.name);
  expect(allRenderedUsers).toEqual(allRealVIPUsers); //compare data with data, no UI here
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Assertion mix UI details and data&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;When flagging to show only VIP, should display only VIP members&quot;, () =&amp;gt; {
  // Arrange
  const allUsers = [{ id: 1, name: &quot;Yoni Goldberg&quot;, vip: false }, { id: 2, name: &quot;John Doe&quot;, vip: true }];

  // Act
  const { getAllByTestId } = render(&amp;lt;UsersList users={allUsers} showOnlyVIP={true} /&amp;gt;);

  // Assert - Mix UI &amp;amp; data in assertion
  expect(getAllByTestId(&quot;user&quot;)).toEqual(&#39;[&amp;lt;li data-test-id=&quot;user&quot;&amp;gt;John Doe&amp;lt;/li&amp;gt;]&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 3.2 Query HTML elements based on attributes that are unlikely to change&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Query HTML elements based on attributes that are likely to survive graphic changes unlike CSS selectors and like form labels. If the designated element doesn’t have such attributes, create a dedicated test attribute like ‘test-id-submit-button’. Going this route not only ensures that your functional/logic tests never break because of look &amp;amp; feel changes but also it becomes clear to the entire team that this element and attribute are utilized by tests and shouldn’t get removed&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You want to test the login functionality that spans many components, logic and services, everything is set up perfectly - stubs, spies, Ajax calls are isolated. All seems perfect. Then the test fails because the designer changed the div CSS class from ‘thick-border’ to ‘thin-border’&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Querying an element using a dedicated attribute for testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;// the markup code (part of React component)
&amp;lt;h3&amp;gt;
  &amp;lt;Badge pill className=&quot;fixed_badge&quot; variant=&quot;dark&quot;&amp;gt;
    &amp;lt;span data-test-id=&quot;errorsLabel&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
    &amp;lt;!-- note the attribute data-test-id --&amp;gt;
  &amp;lt;/Badge&amp;gt;
&amp;lt;/h3&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this example is using react-testing-library
test(&quot;Whenever no data is passed to metric, show 0 as default&quot;, () =&amp;gt; {
  // Arrange
  const metricValue = undefined;

  // Act
  const { getByTestId } = render(&amp;lt;dashboardMetric value={undefined} /&amp;gt;);

  expect(getByTestId(&quot;errorsLabel&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Relying on CSS attributes&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- the markup code (part of React component) --&amp;gt;
&amp;lt;span id=&quot;metric&quot; className=&quot;d-flex-column&quot;&amp;gt;{value}&amp;lt;/span&amp;gt;
&amp;lt;!-- what if the designer changes the classs? --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this exammple is using enzyme
test(&quot;Whenever no data is passed, error metric shows zero&quot;, () =&amp;gt; {
  // ...

  expect(wrapper.find(&quot;[className=&#39;d-flex-column&#39;]&quot;).text()).toBe(&quot;0&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.3 Whenever possible, test with a realistic and fully rendered component&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Whenever reasonably sized, test your component from outside like your users do, fully render the UI, act on it and assert that the rendered UI behaves as expected. Avoid all sort of mocking, partial and shallow rendering - this approach might result in untrapped bugs due to lack of details and harden the maintenance as the tests mess with the internals (see bullet ‘Favour blackbox testing’). If one of the child components is significantly slowing down (e.g. animation) or complicating the setup - consider explicitly replacing it with a fake&lt;/p&gt; 
&lt;p&gt;With all that said, a word of caution is in order: this technique works for small/medium components that pack a reasonable size of child components. Fully rendering a component with too many children will make it hard to reason about test failures (root cause analysis) and might get too slow. In such cases, write only a few tests against that fat parent component and more tests against its children&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When poking into a component’s internal by invoking its private methods, and checking the inner state - you would have to refactor all tests when refactoring the components implementation. Do you really have a capacity for this level of maintenance?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Working realistically with a fully rendered component&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Enzyme-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Enzyme&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calendar extends React.Component {
  static defaultProps = { showFilters: false };

  render() {
    return (
      &amp;lt;div&amp;gt;
        A filters panel with a button to hide/show filters
        &amp;lt;FiltersPanel showFilter={showFilters} title=&quot;Choose Filters&quot; /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

//Examples use React &amp;amp; Enzyme
test(&quot;Realistic approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = mount(&amp;lt;Calendar showFilters={false} /&amp;gt;);

  // Act
  wrapper.find(&quot;button&quot;).simulate(&quot;click&quot;);

  // Assert
  expect(wrapper.text().includes(&quot;Choose Filter&quot;));
  // This is how the user will approach this element: by text
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: Mocking the reality with shallow rendering&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;Shallow/mocked approach: When clicked to show filters, filters are displayed&quot;, () =&amp;gt; {
  // Arrange
  const wrapper = shallow(&amp;lt;Calendar showFilters={false} title=&quot;Choose Filter&quot; /&amp;gt;);

  // Act
  wrapper
    .find(&quot;filtersPanel&quot;)
    .instance()
    .showFilters();
  // Tap into the internals, bypass the UI and invoke a method. White-box approach

  // Assert
  expect(wrapper.find(&quot;Filter&quot;).props()).toEqual({ title: &quot;Choose Filter&quot; });
  // what if we change the prop name or don&#39;t pass anything relevant?
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.4 Don’t sleep, use frameworks built-in support for async events. Also try to speed things up&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; In many cases, the unit under test completion time is just unknown (e.g. animation suspends element appearance) - in that case, avoid sleeping (e.g. setTimeOut) and prefer more deterministic methods that most platforms provide. Some libraries allows awaiting on operations (e.g. &lt;a href=&quot;https://docs.cypress.io/guides/references/best-practices.html#Unnecessary-Waiting&quot;&gt;Cypress cy.request(‘url’)&lt;/a&gt;), other provide API for waiting like &lt;a href=&quot;https://testing-library.com/docs/guide-disappearance&quot;&gt;@testing-library/dom method wait(expect(element))&lt;/a&gt;. Sometimes a more elegant way is to stub the slow resource, like API for example, and then once the response moment becomes deterministic the component can be explicitly re-rendered. When depending upon some external component that sleeps, it might turn useful to &lt;a href=&quot;https://jestjs.io/docs/en/timer-mocks&quot;&gt;hurry-up the clock&lt;/a&gt;. Sleeping is a pattern to avoid because it forces your test to be slow or risky (when waiting for a too short period). Whenever sleeping and polling is inevitable and there’s no support from the testing framework, some npm libraries like &lt;a href=&quot;https://www.npmjs.com/package/wait-for-expect&quot;&gt;wait-for-expect&lt;/a&gt; can help with a semi-deterministic solution &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When sleeping for a long time, tests will be an order of magnitude slower. When trying to sleep for small numbers, test will fail when the unit under test didn’t respond in a timely fashion. So it boils down to a trade-off between flakiness and bad performance&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: E2E API that resolves only when the async operations is done (Cypress)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Cypress
cy.get(&quot;#show-products&quot;).click(); // navigate
cy.wait(&quot;@products&quot;); // wait for route to appear
// this line will get executed only when the route is ready
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Testing library that waits for DOM elements&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// @testing-library/dom
test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // wait for appearance
  await wait(() =&amp;gt; {
    expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
  });

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: custom sleep code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;test(&quot;movie title appears&quot;, async () =&amp;gt; {
  // element is initially not present...

  // custom wait logic (caution: simplistic, no timeout)
  const interval = setInterval(() =&amp;gt; {
    const found = getByText(&quot;the lion king&quot;);
    if (found) {
      clearInterval(interval);
      expect(getByText(&quot;the lion king&quot;)).toBeInTheDocument();
    }
  }, 100);

  // wait for appearance and return the element
  const movie = await waitForElement(() =&amp;gt; getByText(&quot;the lion king&quot;));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.5 Watch how the content is served over the network&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Google%20LightHouse-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with Lighthouse&quot;&gt;&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Do:&lt;/strong&gt; Apply some active monitor that ensures the page load under real network is optimized - this includes any UX concern like slow page load or un-minified bundle. The inspection tools market is no short: basic tools like &lt;a href=&quot;https://www.pingdom.com/&quot;&gt;pingdom&lt;/a&gt;, AWS CloudWatch, &lt;a href=&quot;https://cloud.google.com/monitoring/uptime-checks/&quot;&gt;gcp StackDriver&lt;/a&gt; can be easily configured to watch whether the server is alive and response under a reasonable SLA. This only scratches the surface of what might get wrong, hence it’s preferable to opt for tools that specialize in frontend (e.g. &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;lighthouse&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;pagespeed&lt;/a&gt;) and perform richer analysis. The focus should be on symptoms, metrics that directly affect the UX, like page load time, &lt;a href=&quot;https://scotch.io/courses/10-web-performance-audit-tips-for-your-next-billion-users-in-2018/fmp-first-meaningful-paint&quot;&gt;meaningful paint&lt;/a&gt;, &lt;a href=&quot;https://calibreapp.com/blog/time-to-interactive/&quot;&gt;time until the page gets interactive (TTI)&lt;/a&gt;. On top of that, one may also watch for technical causes like ensuring the content is compressed, time to the first byte, optimize images, ensuring reasonable DOM size, SSL and many others. It’s advisable to have these rich monitors both during development, as part of the CI and most important - 24x7 over the production’s servers/CDN&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; It must be disappointing to realize that after such great care for crafting a UI, 100% functional tests passing and sophisticated bundling - the UX is horrible and slow due to CDN misconfiguration&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Lighthouse page load inspection report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/lighthouse2.png&quot; alt=&quot;&quot; title=&quot;Lighthouse page load inspection report&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.6 Stub flaky and slow resources like backend APIs&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When coding your mainstream tests (not E2E tests), avoid involving any resource that is beyond your responsibility and control like backend API and use stubs instead (i.e. test double). Practically, instead of real network calls to APIs, use some test double library (like &lt;a href=&quot;https://sinonjs.org/&quot;&gt;Sinon&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/testdouble&quot;&gt;Test doubles&lt;/a&gt;, etc) for stubbing the API response. The main benefit is preventing flakiness - testing or staging APIs by definition are not highly stable and from time to time will fail your tests although YOUR component behaves just fine (production env was not meant for testing and it usually throttles requests). Doing this will allow simulating various API behavior that should drive your component behavior as when no data was found or the case when API throws an error. Last but not least, network calls will greatly slow down the tests&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; The average test runs no longer than few ms, a typical API call last 100ms&amp;gt;, this makes each test ~20x slower&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Stubbing or intercepting API calls&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with React&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples with react-testing-library&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// unit under test
export default function ProductsList() {
  const [products, setProducts] = useState(false);

  const fetchProducts = async () =&amp;gt; {
    const products = await axios.get(&quot;api/products&quot;);
    setProducts(products);
  };

  useEffect(() =&amp;gt; {
    fetchProducts();
  }, []);

  return products ? &amp;lt;div&amp;gt;{products}&amp;lt;/div&amp;gt; : &amp;lt;div data-test-id=&quot;no-products-message&quot;&amp;gt;No products&amp;lt;/div&amp;gt;;
}

// test
test(&quot;When no products exist, show the appropriate message&quot;, () =&amp;gt; {
  // Arrange
  nock(&quot;api&quot;)
    .get(`/products`)
    .reply(404);

  // Act
  const { getByTestId } = render(&amp;lt;ProductsList /&amp;gt;);

  // Assert
  expect(getByTestId(&quot;no-products-message&quot;)).toBeTruthy();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.7 Have very few end-to-end tests that spans the whole system&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Although E2E (end-to-end) usually means UI-only testing with a real browser (See bullet 3.6), for other they mean tests that stretch the entire system including the real backend. The latter type of tests is highly valuable as they cover integration bugs between frontend and backend that might happen due to a wrong understanding of the exchange schema. They are also an efficient method to discover backend-to-backend integration issues (e.g. Microservice A sends the wrong message to Microservice B) and even to detect deployment failures - there are no backend frameworks for E2E testing that are as friendly and mature as UI frameworks like &lt;a href=&quot;https://www.cypress.io/&quot;&gt;Cypress&lt;/a&gt; and &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt;. The downside of such tests is the high cost of configuring an environment with so many components, and mostly their brittleness - given 50 microservices, even if one fails then the entire E2E just failed. For that reason, we should use this technique sparingly and probably have 1-10 of those and no more. That said, even a small number of E2E tests are likely to catch the type of issues they are targeted for - deployment &amp;amp; integration faults. It’s advisable to run those over a production-like staging environment&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; UI might invest much in testing its functionality only to realizes very late that the backend returned payload (the data schema the UI has to work with) is very different than expected&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.8 Speed-up E2E tests by reusing login credentials&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; In E2E tests that involve a real backend and rely on a valid user token for API calls, it doesn’t payoff to isolate the test to a level where a user is created and logged-in in every request. Instead, login only once before the tests execution start (i.e. before-all hook), save the token in some local storage and reuse it across requests. This seem to violate one of the core testing principle - keep the test autonomous without resources coupling. While this is a valid worry, in E2E tests performance is a key concern and creating 1-3 API requests before starting each individual tests might lead to horrible execution time. Reusing credentials doesn’t mean the tests have to act on the same user records - if relying on user records (e.g. test user payments history) than make sure to generate those records as part of the test and avoid sharing their existence with other tests. Also remember that the backend can be faked - if your tests are focused on the frontend it might be better to isolate it and stub the backend API (see bullet 3.6).&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Given 200 test cases and assuming login=100ms = 20 seconds only for logging-in again and again&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Logging-in before-all and not before-each&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;let authenticationToken;

// happens before ALL tests run
before(() =&amp;gt; {
  cy.request(&#39;POST&#39;, &#39;http://localhost:3000/login&#39;, {
    username: Cypress.env(&#39;username&#39;),
    password: Cypress.env(&#39;password&#39;),
  })
  .its(&#39;body&#39;)
  .then((responseFromLogin) =&amp;gt; {
    authenticationToken = responseFromLogin.token;
  })
})

// happens before EACH test
beforeEach(setUser =&amp;gt; () {
  cy.visit(&#39;/home&#39;, {
    onBeforeLoad (win) {
      win.localStorage.setItem(&#39;token&#39;, JSON.stringify(authenticationToken))
    },
  })
})

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.9 Have one E2E smoke test that just travels across the site map&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; For production monitoring and development-time sanity check, run a single E2E test that visits all/most of the site pages and ensures no one breaks. This type of test brings a great return on investment as it’s very easy to write and maintain, but it can detect any kind of failure including functional, network and deployment issues. Other styles of smoke and sanity checking are not as reliable and exhaustive - some ops teams just ping the home page (production) or developers who run many integration tests which don’t discover packaging and browser issues. Goes without saying that the smoke test doesn’t replace functional tests rather just aim to serve as a quick smoke detector&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Everything might seem perfect, all tests pass, production health-check is also positive but the Payment component had some packaging issue and only the /Payment route is not rendering&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Smoke travelling across all pages&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;it(&quot;When doing smoke testing over all page, should load them all successfully&quot;, () =&amp;gt; {
  // exemplified using Cypress but can be implemented easily
  // using any E2E suite
  cy.visit(&quot;https://mysite.com/home&quot;);
  cy.contains(&quot;Home&quot;);
  cy.contains(&quot;https://mysite.com/Login&quot;);
  cy.contains(&quot;Login&quot;);
  cy.contains(&quot;https://mysite.com/About&quot;);
  cy.contains(&quot;About&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;⚪ ️ 3.10 Expose the tests as a live collaborative document&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Besides increasing app reliability, tests bring another attractive opportunity to the table - serve as live app documentation. Since tests inherently speak at a less-technical and product/UX language, using the right tools they can serve as a communication artifact that greatly aligns all the peers - developers and their customers. For example, some frameworks allow expressing the flow and expectations (i.e. tests plan) using a human-readable language so any stakeholder, including product managers, can read, approve and collaborate on the tests which just became the live requirements document. This technique is also being referred to as ‘acceptance test’ as it allows the customer to define his acceptance criteria in plain language. This is &lt;a href=&quot;https://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;BDD (behavior-driven testing)&lt;/a&gt; at its purest form. One of the popular frameworks that enable this is &lt;a href=&quot;https://github.com/cucumber/cucumber-js&quot;&gt;Cucumber which has a JavaScript flavor&lt;/a&gt;, see example below. Another similar yet different opportunity, &lt;a href=&quot;https://storybook.js.org/&quot;&gt;StoryBook&lt;/a&gt;, allows exposing UI components as a graphic catalog where one can walk through the various states of each component (e.g. render a grid w/o filters, render that grid with multiple rows or with none, etc), see how it looks like, and how to trigger that state - this can appeal also to product folks but mostly serves as live doc for developers who consume those components.&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; After investing top resources on testing, it’s just a pity not to leverage this investment and win great value&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Describing tests in human-language using cucumber-js&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cucumber-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Examples using Cucumber&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// this is how one can describe tests using cucumber: plain language that allows anyone to understand and collaborate

Feature: Twitter new tweet

  I want to tweet something in Twitter

  @focus
  Scenario: Tweeting from the home page
    Given I open Twitter home
    Given I click on &quot;New tweet&quot; button
    Given I type &quot;Hello followers!&quot; in the textbox
    Given I click on &quot;Submit&quot; button
    Then I see message &quot;Tweet saved&quot;

&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Visualizing our components, their various states and inputs using Storybook&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20StoryBook-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using StoryBook&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/story-book.jpg&quot; alt=&quot;alt text&quot; title=&quot;Storybook&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 3.11 Detect visual issues with automated tools&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Setup automated tools to capture UI screenshots when changes are presented and detect visual issues like content overlapping or breaking. This ensures that not only the right data is prepared but also the user can conveniently see it. This technique is not widely adopted, our testing mindset leans toward functional tests but it’s the visuals what the user experience and with so many device types it’s very easy to overlook some nasty UI bug. Some free tools can provide the basics - generate and save screenshots for the inspection of human eyes. While this approach might be sufficient for small apps, it’s flawed as any other manual testing that demands human labor anytime something changes. On the other hand, it’s quite challenging to detect UI issues automatically due to the lack of clear definition - this is where the field of ‘Visual Regression’ chime in and solve this puzzle by comparing old UI with the latest changes and detect differences. Some OSS/free tools can provide some of this functionality (e.g. &lt;a href=&quot;https://github.com/BBC-News/wraith&quot;&gt;wraith&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/%5Bhttps://github.com/HuddleEng/PhantomCSS%5D(https://github.com/HuddleEng/PhantomCSS)&quot;&gt;PhantomCSS&lt;/a&gt; but might charge significant setup time. The commercial line of tools (e.g. &lt;a href=&quot;https://applitools.com/&quot;&gt;Applitools&lt;/a&gt;, &lt;a href=&quot;https://percy.io/&quot;&gt;Percy.io&lt;/a&gt;) takes is a step further by smoothing the installation and packing advanced features like management UI, alerting, smart capturing by eliminating ‘visual noise’ (e.g. ads, animations) and even root cause analysis of the DOM/CSS changes that led to the issue&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; How good is a content page that display great content (100% tests passed), loads instantly but half of the content area is hidden?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A typical visual regression - right content that is served badly&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/amazon-visual-regression.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Amazon page breaks&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Configuring wraith to capture and compare UI snapshots&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Wraith-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Wraith&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;​# Add as many domains as necessary. Key will act as a label​

domains:
  english: &quot;http://www.mysite.com&quot;​

​# Type screen widths below, here are a couple of examples​

screen_widths:

  - 600​
  - 768​
  - 1024​
  - 1280​

​# Type page URL paths below, here are a couple of examples​
paths:
  about:
    path: /about
    selector: &#39;.about&#39;​
  subscribe:
      selector: &#39;.subscribe&#39;​
    path: /subscribe
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Using Applitools to get snapshot comparison and other advanced features&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20AppliTools-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Applitools&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Cypress to illustrate the idea&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as todoPage from &quot;../page-objects/todo-page&quot;;

describe(&quot;visual validation&quot;, () =&amp;gt; {
  before(() =&amp;gt; todoPage.navigate());
  beforeEach(() =&amp;gt; cy.eyesOpen({ appName: &quot;TAU TodoMVC&quot; }));
  afterEach(() =&amp;gt; cy.eyesClose());

  it(&quot;should look good&quot;, () =&amp;gt; {
    cy.eyesCheckWindow(&quot;empty todo list&quot;);
    todoPage.addTodo(&quot;Clean room&quot;);
    todoPage.addTodo(&quot;Learn javascript&quot;);
    cy.eyesCheckWindow(&quot;two todos&quot;);
    todoPage.toggleTodo(0);
    cy.eyesCheckWindow(&quot;mark as completed&quot;);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 4️⃣: Measuring Test Effectiveness&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 4.1 Get enough coverage for being confident, ~80% seems to be the lucky number&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The purpose of testing is to get enough confidence for moving fast, obviously the more code is tested the more confident the team can be. Coverage is a measure of how many code lines (and branches, statements, etc) are being reached by the tests. So how much is enough? 10–30% is obviously too low to get any sense about the build correctness, on the other side 100% is very expensive and might shift your focus from the critical paths to the exotic corners of the code. The long answer is that it depends on many factors like the type of application — if you’re building the next generation of Airbus A380 than 100% is a must, for a cartoon pictures website 50% might be too much. Although most of the testing enthusiasts claim that the right coverage threshold is contextual, most of them also mention the number 80% as a thumb of a rule (&lt;a href=&quot;https://martinfowler.com/bliki/TestCoverage.html&quot;&gt;Fowler: “in the upper 80s or 90s”&lt;/a&gt;) that presumably should satisfy most of the applications.&lt;/p&gt; 
&lt;p&gt;Implementation tips: You may want to configure your continuous integration (CI) to have a coverage threshold (&lt;a href=&quot;https://jestjs.io/docs/en/configuration.html#collectcoverage-boolean&quot;&gt;Jest link&lt;/a&gt;) and stop a build that doesn’t stand to this standard (it’s also possible to configure threshold per component, see code example below). On top of this, consider detecting build coverage decrease (when a newly committed code has less coverage) — this will push developers raising or at least preserving the amount of tested code. All that said, coverage is only one measure, a quantitative based one, that is not enough to tell the robustness of your testing. And it can also be fooled as illustrated in the next bullets&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Confidence and numbers go hand in hand, without really knowing that you tested most of the system — there will also be some fear and fear will slow you down&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: A typical coverage report&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-yoni-goldberg-code-coverage.png&quot; alt=&quot;alt text&quot; title=&quot;A typical coverage report&quot;&gt;&lt;/p&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Setting up coverage per component (using Jest)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Jest-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Jest&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-18-code-coverage2.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Setting up coverage per component (using Jest)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 4.2 Inspect coverage reports to detect untested areas and other oddities&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Some issues sneak just under the radar and are really hard to find using traditional tools. These are not really bugs but more of surprising application behavior that might have a severe impact. For example, often some code areas are never or rarely being invoked — you thought that the ‘PricingCalculator’ class is always setting the product price but it turns out it is actually never invoked although we have 10000 products in DB and many sales… Code coverage reports help you realize whether the application behaves the way you believe it does. Other than that, it can also highlight which types of code is not tested — being informed that 80% of the code is tested doesn’t tell whether the critical parts are covered. Generating reports is easy — just run your app in production or during testing with coverage tracking and then see colorful reports that highlight how frequent each code area is invoked. If you take your time to glimpse into this data — you might find some gotchas &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; If you don’t know which parts of your code are left un-tested, you don’t know where the issues might come from&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: What’s wrong with this coverage report?&lt;/h3&gt; 
 &lt;p&gt;Based on a real-world scenario where we tracked our application usage in QA and find out interesting login patterns (Hint: the amount of login failures is non-proportional, something is clearly wrong. Finally it turned out that some frontend bug keeps hitting the backend login API)&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-19-coverage-yoni-goldberg-nodejs-consultant.png&quot; alt=&quot;alt text&quot; title=&quot;What’s wrong with this coverage report?&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 4.3 Measure logical coverage using mutation testing&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; The Traditional Coverage metric often lies: It may show you 100% code coverage, but none of your functions, even not one, return the right response. How come? it simply measures over which lines of code the test visited, but it doesn’t check if the tests actually tested anything — asserted for the right response. Like someone who’s traveling for business and showing his passport stamps — this doesn’t prove any work done, only that he visited few airports and hotels.&lt;/p&gt; 
&lt;p&gt;Mutation-based testing is here to help by measuring the amount of code that was actually TESTED not just VISITED. &lt;a href=&quot;https://stryker-mutator.io/&quot;&gt;Stryker&lt;/a&gt; is a JavaScript library for mutation testing and the implementation is really neat:&lt;/p&gt; 
&lt;p&gt;(1) it intentionally changes the code and “plants bugs”. For example the code newOrder.price===0 becomes newOrder.price!=0. This “bugs” are called mutations&lt;/p&gt; 
&lt;p&gt;(2) it runs the tests, if all succeed then we have a problem — the tests didn’t serve their purpose of discovering bugs, the mutations are so-called survived. If the tests failed, then great, the mutations were killed.&lt;/p&gt; 
&lt;p&gt;Knowing that all or most of the mutations were killed gives much higher confidence than traditional coverage and the setup time is similar &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll be fooled to believe that 85% coverage means your test will detect bugs in 85% of your code&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: 100% coverage, 0% testing&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Stryker-blue.svg?sanitize=true&quot; alt=&quot;&quot; title=&quot;Using Stryker&quot;&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function addNewOrder(newOrder) {
  logger.log(`Adding new order ${newOrder}`);
  DB.save(newOrder);
  Mailer.sendMail(newOrder.assignee, `A new order was places ${newOrder}`);

  return { approved: true };
}

it(&quot;Test addNewOrder, don&#39;t use such test names&quot;, () =&amp;gt; {
  addNewOrder({ assignee: &quot;John@mailer.com&quot;, price: 120 });
}); //Triggers 100% code coverage, but it doesn&#39;t check anything
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-20-yoni-goldberg-mutation-testing.jpeg&quot; alt=&quot;alt text&quot; title=&quot;Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️4.4 Preventing test code issues with Test linters&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; A set of ESLint plugins were built specifically for inspecting the tests code patterns and discover issues. For example, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-mocha&quot;&gt;eslint-plugin-mocha&lt;/a&gt; will warn when a test is written at the global level (not a son of a describe() statement) or when tests are &lt;a href=&quot;https://mochajs.org/#inclusive-tests&quot;&gt;skipped&lt;/a&gt; which might lead to a false belief that all tests are passing. Similarly, &lt;a href=&quot;https://github.com/jest-community/eslint-plugin-jest&quot;&gt;eslint-plugin-jest&lt;/a&gt; can, for example, warn when a test has no assertions at all (not checking anything)&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Seeing 90% code coverage and 100% green tests will make your face wear a big smile only until you realize that many tests aren’t asserting for anything and many test suites were just skipped. Hopefully, you didn’t deploy anything based on this false observation&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: A test case full of errors, luckily all are caught by Linters&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;describe(&quot;Too short description&quot;, () =&amp;gt; {
  const userToken = userService.getDefaultToken() // *error:no-setup-in-describe, use hooks (sparingly) instead
  it(&quot;Some description&quot;, () =&amp;gt; {});//* error: valid-test-description. Must include the word &quot;Should&quot; + at least 5 words
});

it.skip(&quot;Test name&quot;, () =&amp;gt; {// *error:no-skipped-tests, error:error:no-global-tests. Put tests only under describe or suite
  expect(&quot;somevalue&quot;); // error:no-assert
});

it(&quot;Test name&quot;, () =&amp;gt; {*//error:no-identical-title. Assign unique titles to tests
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Section 5️⃣: CI and Other Quality Measures&lt;/h1&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.1 Enrich your linters and abort builds that have linting issues&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Linters are a free lunch, with 5 min setup you get for free an auto-pilot guarding your code and catching significant issue as you type. Gone are the days where linting was about cosmetics (no semi-colons!). Nowadays, Linters can catch severe issues like errors that are not thrown correctly and losing information. On top of your basic set of rules (like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-standard&quot;&gt;ESLint standard&lt;/a&gt; or &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;Airbnb style&lt;/a&gt;), consider including some specializing Linters like &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-chai-expect&quot;&gt;eslint-plugin-chai-expect&lt;/a&gt; that can discover tests without assertions, &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-promise?activeTab=readme&quot;&gt;eslint-plugin-promise&lt;/a&gt; can discover promises with no resolve (your code will never continue), &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-security?activeTab=readme&quot;&gt;eslint-plugin-security&lt;/a&gt; which can discover eager regex expressions that might get used for DOS attacks, and &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-you-dont-need-lodash-underscore&quot;&gt;eslint-plugin-you-dont-need-lodash-underscore&lt;/a&gt; is capable of alarming when the code uses utility library methods that are part of the V8 core methods like Lodash._map(…) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a rainy day where your production keeps crashing but the logs don’t display the error stack trace. What happened? Your code mistakenly threw a non-error object and the stack trace was lost, a good reason for banging your head against a brick wall. A 5 min linter setup could detect this TYPO and save your day&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:thumbsdown: Anti-Pattern Example: The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-21-yoni-goldberg-eslint.jpeg&quot; alt=&quot;alt text&quot; title=&quot;The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.2 Shorten the feedback loop with local developer-CI&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Using a CI with shiny quality inspections like testing, linting, vulnerabilities check, etc? Help developers run this pipeline also locally to solicit instant feedback and shorten the &lt;a href=&quot;https://www.gocd.org/2016/03/15/are-you-ready-for-continuous-delivery-part-2-feedback-loops/&quot;&gt;feedback loop&lt;/a&gt;. Why? an efficient testing process constitutes many and iterative loops: (1) try-outs -&amp;gt; (2) feedback -&amp;gt; (3) refactor. The faster the feedback is, the more improvement iterations a developer can perform per-module and perfect the results. On the flip, when the feedback is late to come fewer improvement iterations could be packed into a single day, the team might already move forward to another topic/task/module and might not be up for refining that module.&lt;/p&gt; 
&lt;p&gt;Practically, some CI vendors (Example: &lt;a href=&quot;https://circleci.com/docs/2.0/local-cli/&quot;&gt;CircleCI local CLI&lt;/a&gt;) allow running the pipeline locally. Some commercial tools like &lt;a href=&quot;https://wallabyjs.com/&quot;&gt;wallaby provide highly-valuable &amp;amp; testing insights&lt;/a&gt; as a developer prototype (no affiliation). Alternatively, you may just add npm script to package.json that runs all the quality commands (e.g. test, lint, vulnerabilities) — use tools like &lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot;&gt;concurrently&lt;/a&gt; for parallelization and non-zero exit code if one of the tools failed. Now the developer should just invoke one command — e.g. ‘npm run quality’ — to get instant feedback. Consider also aborting a commit if the quality check failed using a githook (&lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky can help&lt;/a&gt;) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; When the quality results arrive the day after the code, testing doesn’t become a fluent part of development rather an after the fact formal artifact&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: npm scripts that perform code quality inspection, all are run in parallel on demand or when a developer is trying to push new code&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&quot;scripts&quot;: {
    &quot;inspect:sanity-testing&quot;: &quot;mocha **/**--test.js --grep \&quot;sanity\&quot;&quot;,
    &quot;inspect:lint&quot;: &quot;eslint .&quot;,
    &quot;inspect:vulnerabilities&quot;: &quot;npm audit&quot;,
    &quot;inspect:license&quot;: &quot;license-checker --failOn GPLv2&quot;,
    &quot;inspect:complexity&quot;: &quot;plato .&quot;,

    &quot;inspect:all&quot;: &quot;concurrently -c \&quot;bgBlue.bold,bgMagenta.bold,yellow\&quot; \&quot;npm:inspect:quick-testing\&quot; \&quot;npm:inspect:lint\&quot; \&quot;npm:inspect:vulnerabilities\&quot; \&quot;npm:inspect:license\&quot;&quot;
  },
  &quot;husky&quot;: {
    &quot;hooks&quot;: {
      &quot;precommit&quot;: &quot;npm run inspect:all&quot;,
      &quot;prepush&quot;: &quot;npm run inspect:all&quot;
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.3 Perform e2e testing over a true production-mirror&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; End to end (e2e) testing are the main challenge of every CI pipeline — creating an identical ephemeral production mirror on the fly with all the related cloud services can be tedious and expensive. Finding the best compromise is your game: &lt;a href=&quot;https://serverless.com/&quot;&gt;Docker-compose&lt;/a&gt; allows crafting isolated dockerized environment with identical containers using a single plain text file but the backing technology (e.g. networking, deployment model) is different from real-world productions. You may combine it with &lt;a href=&quot;https://github.com/localstack/localstack&quot;&gt;‘AWS Local’&lt;/a&gt; to work with a stub of the real AWS services. If you went &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless&lt;/a&gt; multiple frameworks like serverless and &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/serverless_app.html&quot;&gt;AWS SAM&lt;/a&gt; allows the local invocation of FaaS code.&lt;/p&gt; 
&lt;p&gt;The huge Kubernetes ecosystem is yet to formalize a standard convenient tool for local and CI-mirroring though many new tools are launched frequently. One approach is running a ‘minimized-Kubernetes’ using tools like &lt;a href=&quot;https://kubernetes.io/docs/setup/minikube/&quot;&gt;Minikube&lt;/a&gt; and &lt;a href=&quot;https://microk8s.io/&quot;&gt;MicroK8s&lt;/a&gt; which resemble the real thing only come with less overhead. Another approach is testing over a remote ‘real-Kubernetes’, some CI providers (e.g. &lt;a href=&quot;https://codefresh.io/&quot;&gt;Codefresh&lt;/a&gt;) has native integration with Kubernetes environment and make it easy to run the CI pipeline over the real thing, others allow custom scripting against a remote Kubernetes. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Using different technologies for production and testing demands maintaining two deployment models and keeps the developers and the ops team separated&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: a CI pipeline that generates Kubernetes cluster on the fly &lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; data-href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;https://container-solutions.com/dynamic-environments-kubernetes/&quot;&gt;Credit: Dynamic-environments Kubernetes&lt;/a&gt;)&lt;/h3&gt; 
 &lt;pre name=&quot;38d9&quot; id=&quot;38d9&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;deploy:&lt;br&gt;stage: deploy&lt;br&gt;image: registry.gitlab.com/gitlab-examples/kubernetes-deploy&lt;br&gt;script:&lt;br&gt;- ./configureCluster.sh $KUBE_CA_PEM_FILE $KUBE_URL $KUBE_TOKEN&lt;br&gt;- kubectl create ns $NAMESPACE&lt;br&gt;- kubectl create secret -n $NAMESPACE docker-registry gitlab-registry --docker-server=&quot;$CI_REGISTRY&quot; --docker-username=&quot;$CI_REGISTRY_USER&quot; --docker-password=&quot;$CI_REGISTRY_PASSWORD&quot; --docker-email=&quot;$GITLAB_USER_EMAIL&quot;&lt;br&gt;- mkdir .generated&lt;br&gt;- echo &quot;$CI_BUILD_REF_NAME-$CI_BUILD_REF&quot;&lt;br&gt;- sed -e &quot;s/TAG/$CI_BUILD_REF_NAME-$CI_BUILD_REF/g&quot; templates/deals.yaml | tee &quot;.generated/deals.yaml&quot;&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f .generated/deals.yaml&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f templates/my-sock-shop.yaml&lt;br&gt;environment:&lt;br&gt;name: test-for-ci&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.4 Parallelize test execution&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; When done right, testing is your 24/7 friend providing almost instant feedback. In practice, executing 500 CPU-bounded unit test on a single thread can take too long. Luckily, modern test runners and CI platforms (like &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt;, &lt;a href=&quot;https://github.com/avajs/ava&quot;&gt;AVA&lt;/a&gt; and &lt;a href=&quot;https://github.com/yandex/mocha-parallel-tests&quot;&gt;Mocha extensions&lt;/a&gt;) can parallelize the test into multiple processes and achieve significant improvement in feedback time. Some CI vendors do also parallelize tests across containers (!) which shortens the feedback loop even further. Whether locally over multiple processes, or over some cloud CLI using multiple machines — parallelizing demand keeping the tests autonomous as each might run on different processes&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Getting test results 1 hour long after pushing new code, as you already code the next features, is a great recipe for making testing less relevant&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example: Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (&lt;a href=&quot;https://medium.com/dailyjs/javascript-test-runners-benchmark-3a78d4117b4&quot;&gt;Credit: JavaScript Test-Runners Benchmark&lt;/a&gt;)&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-24-yonigoldberg-jest-parallel.png&quot; alt=&quot;alt text&quot; title=&quot;Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (Credit: JavaScript Test-Runners Benchmark)&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.5 Stay away from legal issues using license and plagiarism check&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Licensing and plagiarism issues are probably not your main concern right now, but why not tick this box as well in 10 minutes? A bunch of npm packages like &lt;a href=&quot;https://www.npmjs.com/package/license-checker&quot;&gt;license check&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/plagiarism-checker&quot;&gt;plagiarism check&lt;/a&gt; (commercial with free plan) can be easily baked into your CI pipeline and inspect for sorrows like dependencies with restrictive licenses or code that was copy-pasted from Stack Overflow and apparently violates some copyrights&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Unintentionally, developers might use packages with inappropriate licenses or copy paste commercial code and run into legal issues&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Doing It Right Example:&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//install license-checker in your CI environment or also locally
npm install -g license-checker

//ask it to scan all licenses and fail with exit code other than 0 if it found unauthorized license. The CI system should catch this failure and stop the build
license-checker --summary --failOn BSD

&lt;/code&gt;&lt;/pre&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-25-nodejs-licsense.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community tools such as &lt;a href=&quot;https://docs.npmjs.com/getting-started/running-a-security-audit&quot;&gt;npm audit&lt;/a&gt;, or commercial tools like &lt;a href=&quot;https://snyk.io/&quot;&gt;snyk&lt;/a&gt; (offer also a free community version). Both can be invoked from your CI on every build&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: NPM Audit result&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-26-npm-audit-snyk.png&quot; alt=&quot;alt text&quot; title=&quot;NPM Audit result&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️5.7 Automate dependency updates&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Yarn and npm latest introduction of package-lock.json introduced a serious challenge (the road to hell is paved with good intentions) — by default now, packages are no longer getting updates. Even a team running many fresh deployments with ‘npm install’ &amp;amp; ‘npm update’ won’t get any new updates. This leads to subpar dependent packages versions at best or to vulnerable code at worst. Teams now rely on developers goodwill and memory to manually update the package.json or use tools &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;like ncu&lt;/a&gt; manually. A more reliable way could be to automate the process of getting the most reliable dependency versions, though there are no silver bullet solutions yet there are two possible automation roads:&lt;/p&gt; 
&lt;p&gt;(1) CI can fail builds that have obsolete dependencies — using tools like &lt;a href=&quot;https://docs.npmjs.com/cli/outdated&quot;&gt;‘npm outdated’&lt;/a&gt; or ‘npm-check-updates (ncu)’ . Doing so will enforce developers to update dependencies.&lt;/p&gt; 
&lt;p&gt;(2) Use commercial tools that scan the code and automatically send pull requests with updated dependencies. One interesting question remaining is what should be the dependency update policy — updating on every patch generates too many overhead, updating right when a major is released might point to an unstable version (many packages found vulnerable on the very first days after being released, &lt;a href=&quot;https://nodesource.com/blog/a-high-level-post-mortem-of-the-eslint-scope-security-incident/&quot;&gt;see the&lt;/a&gt; eslint-scope incident).&lt;/p&gt; 
&lt;p&gt;An efficient update policy may allow some ‘vesting period’ — let the code lag behind the @latest for some time and versions before considering the local copy as obsolete (e.g. local version is 1.3.1 and repository version is 1.3.8) &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: &lt;a href=&quot;https://www.npmjs.com/package/npm-check-updates&quot;&gt;ncu&lt;/a&gt; can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&lt;/h3&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/bp-27-yoni-goldberg-npm.png&quot; alt=&quot;alt text&quot; title=&quot;ncu can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.8 Other, non-Node related, CI tips&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt; 
&lt;ol class=&quot;postList&quot;&gt;
 &lt;li name=&quot;e3e4&quot; id=&quot;e3e4&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Use a declarative syntax. This is the only option for most vendors but older versions of Jenkins allows using code or UI&lt;/li&gt;
 &lt;li name=&quot;1fdc&quot; id=&quot;1fdc&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Opt for a vendor that has native Docker support&lt;/li&gt;
 &lt;li name=&quot;edcd&quot; id=&quot;edcd&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Fail early, run your fastest tests first. Create a ‘Smoke testing’ step/milestone that groups multiple fast inspections (e.g. linting, unit tests) and provide snappy feedback to the code committer&lt;/li&gt;
 &lt;li name=&quot;0375&quot; id=&quot;0375&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Make it easy to skim-through all build artifacts including test reports, coverage reports, mutation reports, logs, etc&lt;/li&gt;
 &lt;li name=&quot;df82&quot; id=&quot;df82&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Create multiple pipelines/jobs for each event, reuse steps between them. For example, configure a job for feature branch commits and a different one for master PR. Let each reuse logic using shared steps (most vendors provide some mechanism for code reuse)&lt;/li&gt;
 &lt;li name=&quot;19b0&quot; id=&quot;19b0&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Never embed secrets in a job declaration, grab them from a secret store or from the job’s configuration&lt;/li&gt;
 &lt;li name=&quot;b70d&quot; id=&quot;b70d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Explicitly bump version in a release build or at least ensure the developer did so&lt;/li&gt;
 &lt;li name=&quot;957c&quot; id=&quot;957c&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Build only once and perform all the inspections over the single build artifact (e.g. Docker image)&lt;/li&gt;
 &lt;li name=&quot;339b&quot; id=&quot;339b&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Test in an ephemeral environment that doesn’t drift state between builds. Caching node_modules might be the only exception&lt;/li&gt;
&lt;/ol&gt; 
&lt;br&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; You‘ll miss years of wisdom&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⚪ ️ 5.9 Build matrix: Run the same CI steps using multiple Node versions&lt;/h2&gt; 
&lt;p&gt;:white_check_mark: &lt;strong&gt;Do:&lt;/strong&gt; Quality checking is about serendipity, the more ground you cover the luckier you get in detecting issues early. When developing reusable packages or running a multi-customer production with various configuration and Node versions, the CI must run the pipeline of tests over all the permutations of configurations. For example, assuming we use MySQL for some customers and Postgres for others — some CI vendors support a feature called ‘Matrix’ which allow running the suit of testing against all permutations of MySQL, Postgres and multiple Node version like 8, 9 and 10. This is done using configuration only without any additional effort (assuming you have testing or any other quality checks). Other CIs who doesn’t support Matrix might have extensions or tweaks to allow that &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;❌ &lt;strong&gt;Otherwise:&lt;/strong&gt; So after doing all that hard work of writing testing are we going to let bugs sneak in only because of configuration issues?&lt;/p&gt; 
&lt;br&gt; 
&lt;details&gt;
 &lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;h3&gt;:clap: Example: Using Travis (CI vendor) build definition to run the same test over multiple Node versions&lt;/h3&gt; 
 &lt;pre name=&quot;f909&quot; id=&quot;f909&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;language: node_js&lt;br&gt;node_js:&lt;br&gt;  - &quot;7&quot;&lt;br&gt;  - &quot;6&quot;&lt;br&gt;  - &quot;5&quot;&lt;br&gt;  - &quot;4&quot;&lt;br&gt;install:&lt;br&gt;  - npm install&lt;br&gt;script:&lt;br&gt;  - npm run test&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h1&gt;Team&lt;/h1&gt; 
&lt;h2&gt;Yoni Goldberg&lt;/h2&gt; 
&lt;br&gt; 
&lt;img width=&quot;480px&quot; src=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/assets/yoni-goldberg.jpg&quot;&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Writer&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; I’m an independent consultant who works with Fortune 500 companies and garage startups on polishing their JS &amp;amp; Node.js applications. More than any other topic I’m fascinated by and aims to master the art of testing. I’m also the author of &lt;a href=&quot;https://github.com/goldbergyoni/nodebestpractices&quot;&gt;Node.js Best Practices&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;📗 Online Course:&lt;/strong&gt; Liked this guide and wish to take your testing skills to the extreme? Consider visiting my comprehensive course &lt;a href=&quot;https://www.testjavascript.com&quot;&gt;Testing Node.js &amp;amp; JavaScript From A To Z&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;Follow:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goldbergyoni/&quot;&gt;🐦 Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/contact-2/&quot;&gt;📞 Contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testjavascript.com/newsletter//&quot;&gt;✉️ Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/BrunoScheufler&quot;&gt;Bruno Scheufler&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Tech reviewer and advisor&lt;/p&gt; 
&lt;p&gt;Took care to revise, improve, lint and polish all the texts&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt; 
&lt;hr&gt; 
&lt;br&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/idori&quot;&gt;Ido Richter&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Concept, design and great advice&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; A savvy frontend developer, CSS expert and emojis freak&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/js-kyle&quot;&gt;Kyle Martin&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Helps keep this project running, and reviews security related practices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; Loves working on Node.js projects and web application security.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://geospatialscott.blogspot.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1326248?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-stdavis&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AdrienRedon&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5978436?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrien REDON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AdrienRedon&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/NoriSte&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/173663?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefano Magni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-NoriSte&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.joer.im&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/47742486?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yjoer&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://jhonnymoreira.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2177742?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jhonny Moreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jhonnymoreira&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Germanika&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8846678?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Germann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Germanika&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/AbdelrahmanHafez&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/19984935?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AbdelrahmanHafez&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.ruxandrafediuc.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11021586?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ruxandra Fediuc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-ruxandrafed&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jacklee814&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9951291?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jacklee814&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.petercarrero.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/231727?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Carrero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aloyr&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/huhgawz&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/369338?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Huhgawz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-huhgawz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/haakonmb&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/7099302?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Haakon Borch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-haakonmb&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jaimemendoza.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/5395811?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaime Mendoza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jaimemendozadev&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/camerondunford&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/840612?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cameron Dunford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-camerondunford&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/shadowspawn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/15719847?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Gee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-shadowspawn&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aurelijusrozenas&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3273544?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aurelijus Rožėnas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aurelijusrozenas&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://aaronshivers.com&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/42848750?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-aaronshivers&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tomdoes.tech/&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/8683577?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Nagle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-tomanagle&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yvesyao&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/7723729?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yves yao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-yvesyao&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Userbit&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/34487074?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Userbit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-Userbit&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://glaucialemos.netlify.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/1631477?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Glaucia Lemos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#maintenance-glaucia86&quot; title=&quot;Maintenance&quot;&gt;🚧&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/koooge&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7419215?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;koooge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-koooge&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/michalbiesiada&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/18367606?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-mbiesiad&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://roywalker.me&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/611846?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;roywalker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-roywalker&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dangen-effy.github.io/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/23185799?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dangen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-dangen-effy&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://dev.to/mbiesiad&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/60202305?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;biesiadamich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-biesiadamich&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tarojsx.github.io&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/127009?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yanlin Jiang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-cncolder&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/sanguino&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/2077168?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sanguino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-sanguino&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MorganGeek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/3721240?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-MorganGeek&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luk4s.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/8350985?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Bischof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=lukasbischof&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-lukasbischof&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://juanmaruiz.surge.sh&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1837650?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JuanMa Ruiz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-JuanMaRuiz&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://luisangelorjr.com.br&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/22268900?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luís Ângelo Rodrigues Jr.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-luisangelorjr&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://jfernandezpe.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/12046620?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;José Fernández&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jfernandezpe&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.linkedin.com/in/AlejandroGutierrezB&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/56408597?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alejandro Gutierrez Barcenilla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-AlejandroGutierrezB&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/jasonandmonte&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/30088000?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-jasonandmonte&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/otavionetoca&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11263232?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Otavio Araujo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/goldbergyoni/javascript-testing-best-practices/commits?author=otavionetoca&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-otavionetoca&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://contributor.pw&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5027939?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Ivanov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/goldbergyoni/javascript-testing-best-practices/master/#content-contributorpw&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>facebook/create-react-app</title>
      <link>https://github.com/facebook/create-react-app</link>
      <description>&lt;p&gt;Set up a modern web app by running one command.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Create React App &lt;a href=&quot;https://dev.azure.com/facebook/create-react-app/_build/latest?definitionId=1&amp;amp;branchName=master&quot;&gt;&lt;img src=&quot;https://dev.azure.com/facebook/create-react-app/_apis/build/status/facebook.create-react-app?branchName=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/facebook/create-react-app/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-green.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;img alt=&quot;Logo&quot; align=&quot;right&quot; src=&quot;https://create-react-app.dev/img/logo.svg?sanitize=true&quot; width=&quot;20%&quot;&gt; 
&lt;p&gt;Create React apps with no build configuration.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/#creating-an-app&quot;&gt;Creating an App&lt;/a&gt; – How to create a new app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;User Guide&lt;/a&gt; – How to develop apps bootstrapped with Create React App.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Create React App works on macOS, Windows, and Linux.&lt;br&gt; If something doesn’t work, please &lt;a href=&quot;https://github.com/facebook/create-react-app/issues/new&quot;&gt;file an issue&lt;/a&gt;.&lt;br&gt; If you have questions or need help, please ask in &lt;a href=&quot;https://github.com/facebook/create-react-app/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
cd my-app
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you’ve previously installed &lt;code&gt;create-react-app&lt;/code&gt; globally via &lt;code&gt;npm install -g create-react-app&lt;/code&gt;, we recommend you uninstall the package using &lt;code&gt;npm uninstall -g create-react-app&lt;/code&gt; or &lt;code&gt;yarn global remove create-react-app&lt;/code&gt; to ensure that npx always uses the latest version.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Then open &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; to see your app.&lt;br&gt; When you’re ready to deploy to production, create a minified bundle with &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.jsdelivr.net/gh/facebook/create-react-app@27b42ac7efa018f2541153ab30d63180f5fa39e0/screencast.svg?sanitize=true&quot; width=&quot;600&quot; alt=&quot;npm start&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;Get Started Immediately&lt;/h3&gt; 
&lt;p&gt;You &lt;strong&gt;don’t&lt;/strong&gt; need to install or configure tools like webpack or Babel.&lt;br&gt; They are preconfigured and hidden so that you can focus on the code.&lt;/p&gt; 
&lt;p&gt;Create a project, and you’re good to go.&lt;/p&gt; 
&lt;h2&gt;Creating an App&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You’ll need to have Node 10.16.0 or later version on your local development machine&lt;/strong&gt; (but it’s not required on the server). We recommend using the latest LTS version. You can use &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (macOS/Linux) or &lt;a href=&quot;https://github.com/coreybutler/nvm-windows#node-version-manager-nvm-for-windows&quot;&gt;nvm-windows&lt;/a&gt; to switch Node versions between different projects.&lt;/p&gt; 
&lt;p&gt;To create a new app, you may choose one of the following methods:&lt;/p&gt; 
&lt;h3&gt;npx&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npx create-react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt; is a package runner tool that comes with npm 5.2+ and higher, see &lt;a href=&quot;https://gist.github.com/gaearon/4064d3c23a77c74a3614c498a8bb1c5f&quot;&gt;instructions for older npm versions&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm init react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;code&gt;npm init &amp;lt;initializer&amp;gt;&lt;/code&gt; is available in npm 6+&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Yarn&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn create react-app my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://yarnpkg.com/lang/en/docs/cli/create/&quot;&gt;&lt;code&gt;yarn create &amp;lt;starter-kit-package&amp;gt;&lt;/code&gt;&lt;/a&gt; is available in Yarn 0.25+&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;It will create a directory called &lt;code&gt;my-app&lt;/code&gt; inside the current folder.&lt;br&gt; Inside that directory, it will generate the initial project structure and install the transitive dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;my-app
├── README.md
├── node_modules
├── package.json
├── .gitignore
├── public
│   ├── favicon.ico
│   ├── index.html
│   └── manifest.json
└── src
    ├── App.css
    ├── App.js
    ├── App.test.js
    ├── index.css
    ├── index.js
    ├── logo.svg
    └── serviceWorker.js
    └── setupTests.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No configuration or complicated folder structures, only the files you need to build your app.&lt;br&gt; Once the installation is done, you can open your project folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cd my-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside the newly created project, you can run some built-in commands:&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;yarn start&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the app in development mode.&lt;br&gt; Open &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt; 
&lt;p&gt;The page will automatically reload if you make changes to the code.&lt;br&gt; You will see the build errors and lint warnings in the console.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://cdn.jsdelivr.net/gh/marionebl/create-react-app@9f6282671c54f0874afd37a72f6689727b562498/screencast-error.svg?sanitize=true&quot; width=&quot;600&quot; alt=&quot;Build errors&quot;&gt; &lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm test&lt;/code&gt; or &lt;code&gt;yarn test&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Runs the test watcher in an interactive mode.&lt;br&gt; By default, runs tests related to files changed since the last commit.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/running-tests&quot;&gt;Read more about testing.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;yarn build&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Builds the app for production to the &lt;code&gt;build&lt;/code&gt; folder.&lt;br&gt; It correctly bundles React in production mode and optimizes the build for the best performance.&lt;/p&gt; 
&lt;p&gt;The build is minified and the filenames include the hashes.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;Your app is ready to be deployed.&lt;/p&gt; 
&lt;h2&gt;User Guide&lt;/h2&gt; 
&lt;p&gt;You can find detailed instructions on using Create React App and many tips in &lt;a href=&quot;https://facebook.github.io/create-react-app/&quot;&gt;its documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to Update to New Versions?&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/updating-to-new-releases&quot;&gt;User Guide&lt;/a&gt; for this and other information.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;One Dependency:&lt;/strong&gt; There is only one build dependency. It uses webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Configuration Required:&lt;/strong&gt; You don’t need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No Lock-In:&lt;/strong&gt; You can “eject” to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What’s Included?&lt;/h2&gt; 
&lt;p&gt;Your environment will have everything you need to build a modern single-page React app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React, JSX, ES6, TypeScript and Flow syntax support.&lt;/li&gt; 
 &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
 &lt;li&gt;Autoprefixed CSS, so you don’t need &lt;code&gt;-webkit-&lt;/code&gt; or other prefixes.&lt;/li&gt; 
 &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
 &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
 &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
 &lt;li&gt;An offline-first &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/service-workers&quot;&gt;service worker&lt;/a&gt; and a &lt;a href=&quot;https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/&quot;&gt;web app manifest&lt;/a&gt;, meeting all the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app&quot;&gt;Progressive Web App&lt;/a&gt; criteria. (&lt;em&gt;Note: Using the service worker is opt-in as of &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Hassle-free updates for the above tools with a single dependency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/nitishdayal/cra_closer_look&quot;&gt;this guide&lt;/a&gt; for an overview of how these tools fit together.&lt;/p&gt; 
&lt;p&gt;The tradeoff is that &lt;strong&gt;these tools are preconfigured to work in a specific way&lt;/strong&gt;. If your project needs more customization, you can &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/available-scripts#npm-run-eject&quot;&gt;“eject”&lt;/a&gt; and customize it, but then you will need to maintain this configuration.&lt;/p&gt; 
&lt;h2&gt;Popular Alternatives&lt;/h2&gt; 
&lt;p&gt;Create React App is a great fit for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Learning React&lt;/strong&gt; in a comfortable and feature-rich development environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Starting new single-page React applications.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Creating examples&lt;/strong&gt; with React for your libraries and components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here are a few common cases where you might want to try something else:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you want to &lt;strong&gt;try React&lt;/strong&gt; without hundreds of transitive build tool dependencies, consider &lt;a href=&quot;https://reactjs.org/docs/try-react.html&quot;&gt;using a single HTML file or an online sandbox instead&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;integrate React code with a server-side template framework&lt;/strong&gt; like Rails, Django or Symfony, or if you’re &lt;strong&gt;not building a single-page app&lt;/strong&gt;, consider using &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt;, or &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; which are more flexible. For Rails specifically, you can use &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;Rails Webpacker&lt;/a&gt;. For Symfony, try &lt;a href=&quot;https://symfony.com/doc/current/frontend/encore/reactjs.html&quot;&gt;Symfony’s webpack Encore&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you need to &lt;strong&gt;publish a React component&lt;/strong&gt;, &lt;a href=&quot;https://github.com/insin/nwb&quot;&gt;nwb&lt;/a&gt; can &lt;a href=&quot;https://github.com/insin/nwb#react-components-and-libraries&quot;&gt;also do this&lt;/a&gt;, as well as &lt;a href=&quot;https://neutrino.js.org/packages/react-components/&quot;&gt;Neutrino’s react-components preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to do &lt;strong&gt;server rendering&lt;/strong&gt; with React and Node.js, check out &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/jaredpalmer/razzle&quot;&gt;Razzle&lt;/a&gt;. Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your website is &lt;strong&gt;mostly static&lt;/strong&gt; (for example, a portfolio or a blog), consider using &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; or &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;. Unlike Create React App, Gatsby pre-renders the website into HTML at build time. Next.js supports both server rendering and pre-rendering.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, if you need &lt;strong&gt;more customization&lt;/strong&gt;, check out &lt;a href=&quot;https://neutrino.js.org/&quot;&gt;Neutrino&lt;/a&gt; and its &lt;a href=&quot;https://neutrino.js.org/packages/react/&quot;&gt;React preset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All of the above tools can work with little to no configuration.&lt;/p&gt; 
&lt;p&gt;If you prefer configuring the build yourself, &lt;a href=&quot;https://reactjs.org/docs/add-react-to-an-existing-app.html&quot;&gt;follow this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;Looking for something similar, but for React Native?&lt;br&gt; Check out &lt;a href=&quot;https://github.com/expo/expo-cli&quot;&gt;Expo CLI&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We’d love to have your helping hand on &lt;code&gt;create-react-app&lt;/code&gt;! See &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we’re looking for and how to get started.&lt;/p&gt; 
&lt;h2&gt;Supporting Create React App&lt;/h2&gt; 
&lt;p&gt;Create React App is a community maintained project and all contributors are volunteers. If you’d like to support the future development of Create React App then please consider donating to our &lt;a href=&quot;https://opencollective.com/create-react-app&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who &lt;a href=&quot;https://raw.githubusercontent.com/facebook/create-react-app/master/CONTRIBUTING.md&quot;&gt;contribute&lt;/a&gt;.&lt;br&gt; &lt;a href=&quot;https://github.com/facebook/create-react-app/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/create-react-app/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; for hosting our documentation.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We are grateful to the authors of existing related projects for their ideas and collaboration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eanplatter&quot;&gt;@eanplatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insin&quot;&gt;@insin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxstbr&quot;&gt;@mxstbr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Create React App is open source software &lt;a href=&quot;https://github.com/facebook/create-react-app/raw/master/LICENSE&quot;&gt;licensed as MIT&lt;/a&gt;. The Create React App logo is licensed under a &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oldboyxx/jira_clone</title>
      <link>https://github.com/oldboyxx/jira_clone</link>
      <description>&lt;p&gt;A simplified Jira clone built with React/Babel (Client), and Node/TypeScript (API). Auto formatted with Prettier, tested with Cypress.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;A simplified Jira clone built with React and Node&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt;
 Auto formatted with Prettier, tested with Cypress 🎗
&lt;/div&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://jira.ivorreic.com/&quot;&gt;Visit the live app&lt;/a&gt; | &lt;a href=&quot;https://github.com/oldboyxx/jira_clone/tree/master/client&quot;&gt;View client&lt;/a&gt; | &lt;a href=&quot;https://github.com/oldboyxx/jira_clone/tree/master/api&quot;&gt;View API&lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/DVFj8PL/tech-icons.jpg&quot; alt=&quot;Tech logos&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/W3qVvCn/jira-optimized.jpg&quot; alt=&quot;App screenshot&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;What is this and who is it for 🤷‍♀️&lt;/h2&gt; 
&lt;p&gt;I do React consulting and this is a showcase product I’ve built in my spare time. It’s a very good example of modern, real-world React codebase.&lt;/p&gt; 
&lt;p&gt;There are many showcase/example React projects out there but most of them are way too simple. I like to think that this codebase contains enough complexity to offer valuable insights to React developers of all skill levels while still being &lt;em&gt;relatively&lt;/em&gt; easy to understand.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Proven, scalable, and easy to understand project structure&lt;/li&gt; 
 &lt;li&gt;Written in modern React, only functional components with hooks&lt;/li&gt; 
 &lt;li&gt;A variety of custom light-weight UI components such as datepicker, modal, various form elements etc&lt;/li&gt; 
 &lt;li&gt;Simple local React state management, without redux, mobx, or similar&lt;/li&gt; 
 &lt;li&gt;Custom webpack setup, without create-react-app or similar&lt;/li&gt; 
 &lt;li&gt;Client written in Babel powered JavaScript&lt;/li&gt; 
 &lt;li&gt;API written in TypeScript and using TypeORM&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setting up development environment 🛠&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;postgreSQL&lt;/a&gt; if you don’t have it already and create a database named &lt;code&gt;jira_development&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git clone https://github.com/oldboyxx/jira_clone.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create an empty &lt;code&gt;.env&lt;/code&gt; file in &lt;code&gt;/api&lt;/code&gt;, copy &lt;code&gt;/api/.env.example&lt;/code&gt; contents into it, and fill in your database username and password.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run install-dependencies&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd api &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd client &amp;amp;&amp;amp; npm start&lt;/code&gt; in another terminal tab&lt;/li&gt; 
 &lt;li&gt;App should now be running on &lt;code&gt;http://localhost:8080/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running cypress end-to-end tests 🚥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set up development environment&lt;/li&gt; 
 &lt;li&gt;Create a database named &lt;code&gt;jira_test&lt;/code&gt; and start the api with &lt;code&gt;cd api &amp;amp;&amp;amp; npm run start:test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd client &amp;amp;&amp;amp; npm run test:cypress&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What’s missing?&lt;/h2&gt; 
&lt;p&gt;There are features missing from this showcase product which should exist in a real product:&lt;/p&gt; 
&lt;h3&gt;Migrations 🗄&lt;/h3&gt; 
&lt;p&gt;We’re currently using TypeORM’s &lt;code&gt;synchronize&lt;/code&gt; feature which auto creates the database schema on every application launch. It’s fine to do this in a showcase product or during early development while the product is not used by anyone, but before going live with a real product, we should &lt;a href=&quot;https://github.com/typeorm/typeorm/raw/master/docs/migrations.md&quot;&gt;introduce migrations&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Proper authentication system 🔐&lt;/h3&gt; 
&lt;p&gt;We currently auto create an auth token and seed a project with issues and users for anyone who visits the API without valid credentials. In a real product we’d want to implement a proper &lt;a href=&quot;https://www.google.com/search?q=email+and+password+authentication+node+js&amp;amp;oq=email+and+password+authentication+node+js&quot;&gt;email and password authentication system&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Accessibility ♿&lt;/h3&gt; 
&lt;p&gt;Not all components have properly defined &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;aria attributes&lt;/a&gt;, visual focus indicators etc. Most early stage companies tend to ignore this aspect of their product but in many cases they shouldn’t, especially once their userbase starts growing.&lt;/p&gt; 
&lt;h3&gt;Unit/Integration tests 🧪&lt;/h3&gt; 
&lt;p&gt;Both Client and API are currently tested through &lt;a href=&quot;https://github.com/oldboyxx/jira_clone/tree/master/client/cypress/integration&quot;&gt;end-to-end Cypress tests&lt;/a&gt;. That’s good enough for a relatively simple application such as this, even if it was a real product. However, as the app grows in complexity, it might be wise to start writing additional unit/integration tests.&lt;/p&gt; 
&lt;h2&gt;Author: Ivor Reic ✍️&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: https://getivor.com/&lt;/li&gt; 
 &lt;li&gt;Skype handle: ivor.reic 💬&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;I will not be accepting PR’s on this repository. Feel free to fork and maintain your own version.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt; &lt;a href=&quot;https://jira.ivorreic.com/&quot;&gt;Visit the live app&lt;/a&gt; | &lt;a href=&quot;https://github.com/oldboyxx/jira_clone/tree/master/client&quot;&gt;View client&lt;/a&gt; | &lt;a href=&quot;https://github.com/oldboyxx/jira_clone/tree/master/api&quot;&gt;View API&lt;/a&gt; &lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; · &lt;a href=&quot;https://github.com/facebook/react/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don’t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you’re looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/docs&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render “Hello Taylor” into a container on the page.&lt;/p&gt; 
&lt;p&gt;You’ll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you’re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>parcel-bundler/parcel</title>
      <link>https://github.com/parcel-bundler/parcel</link>
      <description>&lt;p&gt;📦🚀 Blazing fast, zero configuration web application bundler&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://parceljs.org/&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;Parcel&quot; src=&quot;https://user-images.githubusercontent.com/19409/31321658-f6aed0f2-ac3d-11e7-8100-1587e676e0ec.png&quot; width=&quot;749&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/parcel/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/parcel/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/devongovett/devongovett/_build/latest?definitionId=1&quot;&gt;&lt;img src=&quot;https://dev.azure.com/devongovett/devongovett/_apis/build/status/parcel-bundler.parcel?branchName=v2&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/parcel&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/parcel.svg?sanitize=true&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/parcel&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/parcel.svg?sanitize=true&quot; alt=&quot;npm package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/parceljs&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/parceljs.svg?style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Blazing fast&lt;/strong&gt; bundle times - multicore compilation, and a filesystem cache for fast rebuilds even after a restart.&lt;/li&gt; 
 &lt;li&gt;📦 Out of the box support for JS, CSS, HTML, file assets, and more - &lt;strong&gt;no plugins to install&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;🐠 &lt;strong&gt;Automatically transforms modules&lt;/strong&gt; using Babel, PostCSS, and PostHTML when needed - even &lt;code&gt;node_modules&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;✂️ Zero configuration &lt;strong&gt;code splitting&lt;/strong&gt; using dynamic &lt;code&gt;import()&lt;/code&gt; statements.&lt;/li&gt; 
 &lt;li&gt;🔥 Built in support for &lt;strong&gt;hot module replacement&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;🚨 Friendly error logging experience - syntax highlighted code frames help pinpoint the problem.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Below is the design document that was created before work on the implementation of Parcel 2 started and some sections are outdated. The actual (somewhat complete) documentation for Parcel 2 is available here: https://v2.parceljs.org/.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Before we get started, you’ll need to install Node and Yarn (or npm) and create a &lt;code&gt;package.json&lt;/code&gt; for your project if you haven’t already.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then with Yarn you can install &lt;code&gt;parcel&lt;/code&gt; into your app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn add --dev parcel@next
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From there you just need to point Parcel at some of your entry files. Like if you’re building a website, an &lt;code&gt;index.html&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;My First Parcel App&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now if you just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn parcel index.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should get a URL that looks something like: &lt;code&gt;http://localhost:1234/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Next you can start adding dependencies by specifying them in your code (however your language specifies other assets). So for HTML we could create a &lt;code&gt;styles.css&lt;/code&gt; file next to our &lt;code&gt;index.html&lt;/code&gt; file and include it with a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;h1 {
  color: hotpink;
  font-family: cursive;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;My First Parcel App&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./styles.css&quot; /&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If we want parcel to update our changes in the browser without refreshing the page, we need to add at least a dummy javascript file e.g. &lt;code&gt;app.js&lt;/code&gt; next to our &lt;code&gt;index.html&lt;/code&gt;. This file allows parcel to inject all the necessary code to show your changes. This file will later contain your javascript application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(&quot;Hello World&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;My First Parcel App&amp;lt;/title&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./styles.css&quot; /&amp;gt;
    &amp;lt;script src=&quot;./app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-cli&quot;&gt;Parcel CLI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#cli-args--flags&quot;&gt;CLI Args &amp;amp; Flags&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-serve&quot;&gt;&lt;code&gt;parcel serve&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-watch&quot;&gt;&lt;code&gt;parcel watch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-build&quot;&gt;&lt;code&gt;parcel build&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#entries&quot;&gt;&lt;code&gt;[...entries]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--target-name&quot;&gt;&lt;code&gt;--target [name]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--open--o-browser&quot;&gt;&lt;code&gt;--open, -o [browser]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--host-host&quot;&gt;&lt;code&gt;--host &amp;lt;host&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--port-port--p&quot;&gt;&lt;code&gt;--port &amp;lt;port&amp;gt;, -p&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--https&quot;&gt;&lt;code&gt;--https&lt;/code&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--cert-path&quot;&gt;&lt;code&gt;--cert &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--key-path&quot;&gt;&lt;code&gt;--key &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--dist-dir-dir&quot;&gt;&lt;code&gt;--dist-dir &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--cache-dir-dir---no-cache&quot;&gt;&lt;code&gt;--cache-dir &amp;lt;dir&amp;gt;&lt;/code&gt;, &lt;code&gt;--no-cache&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--config-path&quot;&gt;&lt;code&gt;--config &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--hot---no-hot&quot;&gt;&lt;code&gt;--hot&lt;/code&gt;, &lt;code&gt;--no-hot&lt;/code&gt;&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--hot-host-hostname&quot;&gt;&lt;code&gt;--hot-host &amp;lt;hostname&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--hot-port-port&quot;&gt;&lt;code&gt;--hot-port &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--no-source-maps&quot;&gt;&lt;code&gt;--[no-]source-maps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--autoinstall-npmyarn---no-autoinstall&quot;&gt;&lt;code&gt;--autoinstall [npm/yarn], --no-autoinstall&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--log-level-level&quot;&gt;&lt;code&gt;--log-level &amp;lt;level&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--version--v--v&quot;&gt;&lt;code&gt;--version, -v, -V&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#--help--h&quot;&gt;&lt;code&gt;--help, -h&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-config&quot;&gt;Parcel Config&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#configuring-external-tools&quot;&gt;Configuring external tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#configuring-parcel&quot;&gt;Configuring Parcel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejson&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonname&quot;&gt;&lt;code&gt;package.json#name&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonversion&quot;&gt;&lt;code&gt;package.json#version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonmain&quot;&gt;&lt;code&gt;package.json#main&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonmodule&quot;&gt;&lt;code&gt;package.json#module&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonbrowser&quot;&gt;&lt;code&gt;package.json#browser&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonsource&quot;&gt;&lt;code&gt;package.json#source&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonbrowserslist&quot;&gt;&lt;code&gt;package.json#browserslist&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonengines&quot;&gt;&lt;code&gt;package.json#engines&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsontargets&quot;&gt;&lt;code&gt;package.json#targets&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagejsonalias&quot;&gt;&lt;code&gt;package.json#alias&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrc&quot;&gt;&lt;code&gt;.parcelrc&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#glob-maps-in-parcelrc&quot;&gt;Glob maps in &lt;code&gt;.parcelrc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcextends&quot;&gt;&lt;code&gt;.parcelrc#extends&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcresolvers&quot;&gt;&lt;code&gt;.parcelrc#resolvers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrctransformers&quot;&gt;&lt;code&gt;.parcelrc#transformers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcbundler&quot;&gt;&lt;code&gt;.parcelrc#bundler&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcnamers&quot;&gt;&lt;code&gt;.parcelrc#namers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcruntimes&quot;&gt;&lt;code&gt;.parcelrc#runtimes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcpackagers&quot;&gt;&lt;code&gt;.parcelrc#packagers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcoptimizers&quot;&gt;&lt;code&gt;.parcelrc#optimizers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcreporters&quot;&gt;&lt;code&gt;.parcelrc#reporters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcelrcvalidators&quot;&gt;&lt;code&gt;.parcelrc#validators&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#parcel-architecture&quot;&gt;Parcel Architecture&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#phases-of-parcel&quot;&gt;Phases of Parcel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#asset-graph&quot;&gt;Asset Graph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundles&quot;&gt;Bundles&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sources&quot;&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#target-configuration&quot;&gt;Target Configuration&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#environments&quot;&gt;Environments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#caching&quot;&gt;Caching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#asset-resolution&quot;&gt;Asset Resolution&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#local-paths&quot;&gt;Local Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#package-paths&quot;&gt;Package Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#urls&quot;&gt;URLs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#tilde-paths&quot;&gt;Tilde Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#aliases&quot;&gt;Aliases&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#plugins&quot;&gt;Plugins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#resolvers&quot;&gt;Resolvers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#transformers&quot;&gt;Transformers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundlers&quot;&gt;Bundlers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#namers&quot;&gt;Namers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#runtimes&quot;&gt;Runtimes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagers&quot;&gt;Packagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#optimizers&quot;&gt;Optimizers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#reporters&quot;&gt;Reporters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#validators&quot;&gt;Validators&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#creating-plugins&quot;&gt;Creating Plugins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#naming&quot;&gt;Naming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#engines&quot;&gt;Engines&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#plugin-apis&quot;&gt;Plugin APIs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#resolvers-1&quot;&gt;Resolvers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#transformers-1&quot;&gt;Transformers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundler&quot;&gt;Bundler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#namers-1&quot;&gt;Namers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#runtimes-1&quot;&gt;Runtimes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagers-1&quot;&gt;Packagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#optimizers-1&quot;&gt;Optimizers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#reporters-1&quot;&gt;Reporters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#validators-1&quot;&gt;Validators&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Parcel is a compiler for all your code, regardless of the language or toolchain.&lt;/p&gt; 
&lt;p&gt;Parcel takes all of your files and dependencies, transforms them, and merges them together into a smaller set of output files that can be used to run your code.&lt;/p&gt; 
&lt;p&gt;Parcel supports many different languages and file types out of the box, from web technologies like HTML, CSS, and JavaScript, to lower level languages like Rust, and anything that compiles to WebAssembly (WASM), to assets like images, fonts, videos, and more.&lt;/p&gt; 
&lt;p&gt;Parcel makes your code portable. You can build your code for different environments, for the web for your server, or for an app. You can even build multiple targets at once and have them live update as you make changes.&lt;/p&gt; 
&lt;p&gt;Parcel is fast and predictable. It compiles all of your files in isolation in parallel inside workers, caching all of them as it goes along. Caches are stable across machines and are only affected by the files and configs within your project (unless you want to pass specific environment variables).&lt;/p&gt; 
&lt;h2&gt;Parcel CLI&lt;/h2&gt; 
&lt;p&gt;The Parcel CLI is built into the main &lt;code&gt;parcel&lt;/code&gt; package. While you can install it globally and run it, it is much better to install it locally into your project as a dev dependency.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn add --dev parcel@next
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should also add some “scripts” to your &lt;code&gt;package.json&lt;/code&gt; to run it easier.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;my-project&quot;,
  &quot;scripts&quot;: {
    &quot;build&quot;: &quot;parcel build index.html&quot;,
    &quot;start&quot;: &quot;parcel serve index.html&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;parcel&quot;: &quot;latest&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can run &lt;code&gt;yarn build&lt;/code&gt; to bundle your project for production and &lt;code&gt;yarn start&lt;/code&gt; to dev on your project.&lt;/p&gt; 
&lt;h3&gt;CLI Args &amp;amp; Flags&lt;/h3&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ parcel [command] [...entries] [...flags]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;parcel serve&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Serve assets on a local server.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;parcel watch&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Watch and rebuild code on file changes.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;parcel build&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Build code once, in production mode.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;[...entries]&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Entry files to start bundling, these will be preserved as entry points in the output. Defaults to &lt;code&gt;package.json#source&lt;/code&gt;, falling back to &lt;code&gt;src/index.*&lt;/code&gt; or &lt;code&gt;index.*&lt;/code&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sources&quot;&gt;#Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--target [name]&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specifies a specific target to build. If unspecified, Parcel builds all targets specified in package.json. See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;#Targets&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--open, -o [browser]&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Open your local server in a browser. You can optionally pass the name of the browser you want to open, otherwise it will use your default browser.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--host &amp;lt;host&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the host to serve assets on. The default is to listen on all interfaces.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--port &amp;lt;port&amp;gt;, -p&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the port to serve assets on. Alternatively you can use the &lt;code&gt;$PORT&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--https&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This will generate a local certificate (which will be untrusted by your browser, you’ll need to approve it) and serve your assets over &lt;code&gt;https://&lt;/code&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--cert &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Specify the filepath to your SSL certificate when using &lt;code&gt;--https&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--key &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Specify the filepath to your SSL key when using &lt;code&gt;--https&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--dist-dir &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the directory where compiled assets are output. Default is &lt;code&gt;./dist&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--cache-dir &amp;lt;dir&amp;gt;&lt;/code&gt;, &lt;code&gt;--no-cache&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure the cache directory with &lt;code&gt;--cache &amp;lt;dir&amp;gt;&lt;/code&gt; or disable it altogether with &lt;code&gt;--no-cache&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--config &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;specify which config to use. can be a path or a package name. &lt;code&gt;--config ../.myparcelrc&lt;/code&gt; or &lt;code&gt;--config @parcel/config-default&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--hot&lt;/code&gt;, &lt;code&gt;--no-hot&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Turn hot reloading on or off.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--hot-host &amp;lt;hostname&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Configure the hot reloading hostname.&lt;/p&gt; 
&lt;h5&gt;&lt;code&gt;--hot-port &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Configure the hot reloading port.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--[no-]source-maps&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Turn source maps on or off. Source maps are turned on by default.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--autoinstall [npm/yarn], --no-autoinstall&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;When enabled, whenever Parcel discovers a dependency that isn’t installed it will attempt to install it with either npm or Yarn (defaults to npm unless a &lt;code&gt;yarn.lock&lt;/code&gt; exists).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--log-level &amp;lt;level&amp;gt;&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Set the log level, either either “none”, “error”, “warn”, “info”, or “verbose”. The default is “info”.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--version, -v, -V&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Return the current version of Parcel.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--help, -h&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Get help with the CLI.&lt;/p&gt; 
&lt;h2&gt;Parcel Config&lt;/h2&gt; 
&lt;p&gt;Parcel has always and will always work out of the box for many projects with zero configuration. It should always be extremely simple to get started. But if you do want more control, we give you the tools to do so.&lt;/p&gt; 
&lt;h3&gt;Configuring external tools&lt;/h3&gt; 
&lt;p&gt;A huge part of what Parcel does is run other tools over your code. Instead of pulling all that configuration into Parcel, we make use of their own configuration systems. So if you’re using Babel, you should just use &lt;code&gt;.babelrc&lt;/code&gt; files to configure it.&lt;/p&gt; 
&lt;p&gt;When we do need to introduce config, we create tool specific config files in order to do so.&lt;/p&gt; 
&lt;h3&gt;Configuring Parcel&lt;/h3&gt; 
&lt;p&gt;When you do need to configure Parcel, it will be in one of 3 places.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you need to configure the CLI, it will be a CLI flag&lt;/li&gt; 
 &lt;li&gt;If you need to configure your package, it will be in the &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you need to configure something with your files or the Parcel asset pipeline, it will be in &lt;code&gt;.parcelrc&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;[todo]&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;foo&quot;,
  &quot;main&quot;: &quot;dist/main/index.js&quot;,
  &quot;module&quot;: &quot;dist/module/index.js&quot;,
  &quot;browser&quot;: &quot;dist/browser/index.js&quot;,
  &quot;browserslist&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;],
  &quot;engines&quot;: {
    &quot;node&quot;: &quot;&amp;gt;=4.x&quot;
  },
  &quot;source&quot;: &quot;src/index.js&quot;,
  &quot;targets&quot;: {
    &quot;main&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=4.x&quot;
      }
    },
    &quot;module&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=8.x&quot;
      }
    },
    &quot;browser&quot;: {
      &quot;engines&quot;: {
        &quot;browsers&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;]
      }
    }
  },
  &quot;alias&quot;: {
    &quot;react&quot;: &quot;preact-compat&quot;,
    &quot;react-dom&quot;: &quot;preact-compat&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;package.json#name&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;(Required)&lt;/strong&gt; The name of the package is always required in order to be considered a valid &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;my-package&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;package.json#version&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;(Required)&lt;/strong&gt; All packages inside &lt;code&gt;node_modules&lt;/code&gt; must have a &lt;code&gt;package.json#version&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;version&quot;: &quot;1.0.0&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;package.json#main&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the “main” target’s entry point for the package, by default in library mode (doesn’t bundle dependencies).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;main&quot;: &quot;dist/main/index.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#module&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the “module” target’s entry point for the package, by default in library mode (doesn’t bundle dependencies).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;module&quot;: &quot;dist/module/index.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#browser&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;This is the “browser” target’s entry point for the package, by default in library mode (doesn’t bundle dependencies).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;browser&quot;: &quot;dist/browser/index.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#source&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specify the entry points for your source code which gets mapped to your targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;source&quot;: &quot;src/index.js&quot;,
  &quot;source&quot;: [&quot;src/index.js&quot;, &quot;src/index.html&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#sources&quot;&gt;Sources&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#browserslist&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;As specified by Browserslist, this field is for specifying which transformers should be applied to browser bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;browserslist&quot;: [&quot;&amp;gt; 0.2%&quot;, &quot;not dead&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#environments&quot;&gt;Environments&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#engines&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Specify what versions of what engines you want to support.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;engines&quot;: {
    &quot;node&quot;: &quot;&amp;gt;=4.x&quot;,
    &quot;electron&quot;: &quot;&amp;gt;=2.x&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#environments&quot;&gt;Environments&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#targets&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configuration for individual targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;targets&quot;: {
    &quot;main&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=4.x&quot;,
        &quot;electron&quot;: &quot;&amp;gt;=2.x&quot;
      },
    },
    &quot;browser&quot;: {
      &quot;engines&quot;: {
        &quot;browsers&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#targets&quot;&gt;Targets&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;package.json#alias&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Aliases asset names/paths to other assets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;alias&quot;: {
    &quot;react&quot;: &quot;preact-compat&quot;,
    &quot;react-dom&quot;: &quot;preact-compat&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#aliases&quot;&gt;Aliases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;.parcelrc&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Your &lt;code&gt;.parcelrc&lt;/code&gt; file will likely contain just a few fields (if you have one at all), but here’s an example of a &lt;code&gt;.parcelrc&lt;/code&gt; file that contains every field:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [&quot;@parcel/config-default&quot;],
  &quot;resolvers&quot;: [&quot;@parcel/resolver-default&quot;],
  &quot;transformers&quot;: {
    &quot;*.vue&quot;: [&quot;@parcel/transformer-vue&quot;],
    &quot;*.scss&quot;: [&quot;@parcel/transformer-sass&quot;],
    &quot;*.js&quot;: [&quot;@parcel/transformer-babel&quot;],
    &quot;*.css&quot;: [&quot;@parcel/transformer-postcss&quot;],
    &quot;*.html&quot;: [&quot;@parcel/transformer-posthtml&quot;]
  },
  &quot;bundler&quot;: &quot;@parcel/bundler-default&quot;,
  &quot;namers&quot;: [&quot;@parcel/namer-default&quot;],
  &quot;runtimes&quot;: [&quot;@parcel/runtime-js&quot;, &quot;@parcel/runtime-browser-hmr&quot;],
  &quot;packagers&quot;: {
    &quot;*.js&quot;: &quot;@parcel/packager-js&quot;,
    &quot;*.css&quot;: &quot;@parcel/packager-css&quot;,
    &quot;*.html&quot;: &quot;@parcel/packager-html&quot;,
    &quot;*.wasm&quot;: &quot;@parcel/packager-wasm&quot;,
    &quot;*.raw&quot;: &quot;@parcel/packager-raw&quot;
  },
  &quot;optimizers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/optimizer-uglify&quot;],
    &quot;*.css&quot;: [&quot;@parcel/optimizer-cssnano&quot;],
    &quot;*.html&quot;: [&quot;@parcel/optimizer-htmlnano&quot;],
    &quot;*.{png,jpg,jpeg,svg,...}&quot;: [&quot;@parcel/optimizer-imagemin&quot;]
  },
  &quot;reporters&quot;: [&quot;@parcel/reporter-cli&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Glob maps in &lt;code&gt;.parcelrc&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Many config properties like &lt;code&gt;transformers&lt;/code&gt; or &lt;code&gt;packagers&lt;/code&gt; use objects as maps of globs to package names. While objects in JSON are technically unordered, Parcel does use the order to give globs priority when a file name is being tested against them.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: {
    &quot;icons/*.svg&quot;: [&quot;highest-priority&quot;],
    &quot;*.svg&quot;: [&quot;lowest-priority&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here if we are trying to find a transform for the file &lt;code&gt;icons/home.svg&lt;/code&gt;, we’ll work our way down the globs until we find a match, which would be &lt;code&gt;icons/*.svg&lt;/code&gt;, we never reach &lt;code&gt;*.svg&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#extends&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;extends&lt;/code&gt; can either be a string or an array of strings that specify base configs to extend. That base configuration can be the path to another &lt;code&gt;.parcelrc&lt;/code&gt; file or the name of a Parcel config package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: &quot;@parcel/config-default&quot;,
  &quot;extends&quot;: &quot;../.parcelrc&quot;,
  &quot;extends&quot;: [&quot;@parcel/config-default&quot;, &quot;@company/parcel-config&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When extending a config, Parcel does a shallow merge of the two configs.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#resolvers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;resolvers&lt;/code&gt; is an array of strings that specifies the name of a Parcel resolver package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;resolvers&quot;: [&quot;@parcel/resolver-default&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#resolvers&quot;&gt;Resolvers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#transformers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;transformers&lt;/code&gt; is an object map of globs to arrays of Parcel transform packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/transformer-babel&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#transformers&quot;&gt;Transformers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#bundler&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bundler&lt;/code&gt; is a string that specifies the name of a Parcel bundler package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;bundler&quot;: &quot;@parcel/bundler-default&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#bundlers&quot;&gt;Bundlers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#namers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;namers&lt;/code&gt; is an array of Parcel namer packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;namers&quot;: [&quot;@parcel/namer-default&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#namers&quot;&gt;Namers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#runtimes&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;runtimes&lt;/code&gt; is an array of Parcel runtime packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;runtimes&quot;: [&quot;@parcel/runtime-js&quot;, &quot;@parcel/runtime-browser-hmr&quot;],
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#runtimes&quot;&gt;Runtimes&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#packagers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;packagers&lt;/code&gt; is an object map of globs to Parcel packager packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;packagers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/packager-js&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#packagers&quot;&gt;Packagers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#optimizers&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;optimizers&lt;/code&gt; is an object map of globs to arrays of Parcel optimizer packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;optimizers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/optimizer-uglify&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#optimizers&quot;&gt;Optimizers&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#reporters&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;reporters&lt;/code&gt; is an array of Parcel reporter packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;reporters&quot;: [&quot;@parcel/reporter-detailed&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#reporters&quot;&gt;Reporters&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;.parcelrc#validators&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;validators&lt;/code&gt; is an object map of globs to arrays of Parcel validator packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;
  &quot;validators&quot;: {
    &quot;*.ts&quot;: [&quot;@parcel/validator-typescript&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#validators&quot;&gt;Validators&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Parcel Architecture&lt;/h2&gt; 
&lt;p&gt;Even if you aren’t doing anything that complex, if you are going to use Parcel a lot it makes sense to take some time and understand how it works.&lt;/p&gt; 
&lt;h3&gt;Phases of Parcel&lt;/h3&gt; 
&lt;p&gt;At a high level Parcel runs through several phases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resolving&lt;/li&gt; 
 &lt;li&gt;Transforming&lt;/li&gt; 
 &lt;li&gt;Bundling&lt;/li&gt; 
 &lt;li&gt;Packaging&lt;/li&gt; 
 &lt;li&gt;Optimizing&lt;/li&gt; 
 &lt;li&gt;(Validating)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;strong&gt;resolving&lt;/strong&gt; and &lt;strong&gt;transforming&lt;/strong&gt; phases work together in parallel to build a graph of all your assets.&lt;/p&gt; 
&lt;p&gt;This asset graph gets translated into bundles in the &lt;strong&gt;bundling&lt;/strong&gt; phase.&lt;/p&gt; 
&lt;p&gt;Then the &lt;strong&gt;packaging&lt;/strong&gt; phase takes the assets in the calculated bundles and merges them together into files each containing an entire bundle.&lt;/p&gt; 
&lt;p&gt;Finally, in the &lt;strong&gt;optimizing&lt;/strong&gt; phase, Parcel takes these bundles files and runs them through optimizing transforms.&lt;/p&gt; 
&lt;h3&gt;Asset Graph&lt;/h3&gt; 
&lt;p&gt;During the resolving and transforming phases, Parcel discovers all the assets in your app or program. Every asset can have its own dependencies on other assets which Parcel will pull in.&lt;/p&gt; 
&lt;p&gt;The data structure that represents all of these assets and their dependencies on one another is known as “The Asset Graph”.&lt;/p&gt; 
&lt;p&gt;| Asset Name | Dependencies | | ———— | —————–– | | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;app.css&lt;/code&gt;, &lt;code&gt;app.js&lt;/code&gt; | | &lt;code&gt;app.css&lt;/code&gt; | N/A | | &lt;code&gt;app.js&lt;/code&gt; | &lt;code&gt;navbar.js&lt;/code&gt; | | &lt;code&gt;navbar.js&lt;/code&gt; | etc. |&lt;/p&gt; 
&lt;h3&gt;Bundles&lt;/h3&gt; 
&lt;p&gt;Once Parcel has built the entire Asset Graph, it begins turning it into “bundles”. These bundles are groupings of assets that get placed together in a single file.&lt;/p&gt; 
&lt;p&gt;Bundles will (generally) contain only assets in the same language:&lt;/p&gt; 
&lt;p&gt;| Bundle Name | Assets | | ———— | ————————— | | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;index.html&lt;/code&gt; | | &lt;code&gt;app.css&lt;/code&gt; | &lt;code&gt;app.css&lt;/code&gt; | | &lt;code&gt;app.js&lt;/code&gt; | &lt;code&gt;app.js&lt;/code&gt;, &lt;code&gt;navbar.js&lt;/code&gt;, etc. |&lt;/p&gt; 
&lt;p&gt;Some assets are considered “entry” points into your app, and will stay as separate bundles. For example, if your &lt;code&gt;index.html&lt;/code&gt; file links to an &lt;code&gt;about.html&lt;/code&gt; file, they won’t be merged together.&lt;/p&gt; 
&lt;p&gt;| Bundle Name | Assets | Entry URL | | ———— | ———— | ——— | | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;index.html&lt;/code&gt; | &lt;code&gt;/&lt;/code&gt; | | &lt;code&gt;about.html&lt;/code&gt; | &lt;code&gt;about.html&lt;/code&gt; | &lt;code&gt;/about&lt;/code&gt; |&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;“Sources” are the files that contain the source code to your app before being compiled by Parcel.&lt;/p&gt; 
&lt;p&gt;Parcel discovers these sources by following their dependencies on one another starting at your “entries”.&lt;/p&gt; 
&lt;p&gt;These entries will be one of:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$ parcel &amp;lt;...entries&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;~/package.json#source&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./src/index.*&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./index.*&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;From there, everything those assets depend on will be considered a “source” in Parcel.&lt;/p&gt; 
&lt;h3&gt;Targets&lt;/h3&gt; 
&lt;p&gt;When Parcel runs, it can build your asset graph in multiple different ways simultaneously. These are called “targets”.&lt;/p&gt; 
&lt;p&gt;For example, you could have a “modern” target that &lt;em&gt;targets&lt;/em&gt; newer browsers and a “legacy” target for older browsers.&lt;/p&gt; 
&lt;p&gt;Sources get mapped to targets,&lt;/p&gt; 
&lt;h4&gt;Target Configuration&lt;/h4&gt; 
&lt;p&gt;In the most explicit form, targets are configured via the &lt;code&gt;package.json#targets&lt;/code&gt; field.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
  &quot;app&quot;: &quot;dist/browser/index.js&quot;,
  &quot;appModern&quot;: &quot;dist/browserModern/index.js&quot;,
  &quot;targets&quot;: {
    &quot;app&quot;: { /* target env */ },
    &quot;appModern&quot;: { /* target env */ }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each target has a name which corresponds to a top-level &lt;code&gt;package.json&lt;/code&gt; field such as &lt;code&gt;package.json#main&lt;/code&gt; or &lt;code&gt;package.json#browser&lt;/code&gt; which specify the primary entry point for that target.&lt;/p&gt; 
&lt;p&gt;Inside each of those targets contains the target’s environment configuration:&lt;/p&gt; 
&lt;p&gt;| Option | Possible values | Description | | –––––––––– | ————— | ———– | | &lt;code&gt;context&lt;/code&gt; | &lt;code&gt;&#39;node&#39; \| &#39;browser&#39; \| &#39;web-worker&#39; \| &#39;electron-main&#39; \| &#39;electron-renderer&#39;&lt;/code&gt; | Where the bundle should run | | &lt;code&gt;includeNodeModules&lt;/code&gt; | &lt;code&gt;boolean \| [String]&lt;/code&gt; | Whether to bundle all/none/some &lt;code&gt;node_module&lt;/code&gt; dependency | | &lt;code&gt;outputFormat&lt;/code&gt; | &lt;code&gt;&#39;global&#39; \| &#39;esmodule&#39; \| &#39;commonjs&#39;&lt;/code&gt; | Which type of imports/exports should be emitted| | &lt;code&gt;publicUrl&lt;/code&gt; | &lt;code&gt;string&lt;/code&gt; | The public url of the bundle at runtime | | &lt;code&gt;isLibrary&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt; | Library as in ‘npm library’ | | &lt;code&gt;sourceMap&lt;/code&gt; | &lt;code&gt;boolean \| {inlineSources?: boolean, sourceRoot?: string, inline?: boolean}&lt;/code&gt; | Enable/disable sourcemap and set options | &lt;code&gt;engines&lt;/code&gt; | Engines | Same as &lt;code&gt;package.json#engines&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;However, a lot of the normal configuration you might want will already have defaults provided for you:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;targets = {
  main: {
    engines: {
      node: value(&quot;package.json#engines.node&quot;),
      browsers: unless exists(&quot;package.json#browser&quot;) then value(&quot;package.json#browserlist&quot;)
    },
    isLibrary: true
  },
  module: {
    engines: {
      node: value(&quot;package.json#engines.node&quot;),
      browsers: unless exists(&quot;package.json#browser&quot;) then value(&quot;package.json#browserlist&quot;)
    },
    isLibrary: true
  },
  browser: {
    engines: {
      browsers: value(&quot;package.json#browserslist&quot;)
    },
    isLibrary: true
  },
  ...value(&quot;package.json#targets&quot;),
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environments&lt;/h3&gt; 
&lt;p&gt;Environments tell Parcel how to transform and bundle each asset. They tell Parcel if an asset is going to be run in a browser or in NodeJS/Electron.&lt;/p&gt; 
&lt;p&gt;They also tell Parcel’s transform plugins how they should run. They tell &lt;a href=&quot;http://babeljs.io/docs/en/babel-preset-env#targetsbrowsers&quot;&gt;Babel&lt;/a&gt; or &lt;a href=&quot;https://github.com/postcss/autoprefixer#browsers&quot;&gt;Autoprefixer&lt;/a&gt; what browsers your asset is targetting.&lt;/p&gt; 
&lt;p&gt;You can configure environments through your targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;targets&quot;: {
    &quot;main&quot;: {
      &quot;engines&quot;: {
        &quot;node&quot;: &quot;&amp;gt;=4.x&quot;,
        &quot;electron&quot;: &quot;&amp;gt;=2.x&quot;,
        &quot;browsers&quot;: [&quot;&amp;gt; 1%&quot;, &quot;not dead&quot;]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When one asset depends on another, the environment is inherited from its parent. But how you depend on the asset can change some properties of that environment.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;navigator.serviceWorker.register(&#39;./service-worker.js&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let childEnvironment = {...parentEnvironment, browserContext: &#39;service-worker&#39;};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Caching&lt;/h3&gt; 
&lt;p&gt;Parcel will create a &lt;code&gt;/.parcel-cache&lt;/code&gt; directory. It will be filled with directories with two letters, which are the start of a hash which is finished by the names of the JSON files inside.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/.parcel-cache
  /00/
    213debd8ddd45819b79a3a974ed487.json
    40ae9b581afc53841307a4b3c2463d.json
    63a9dd58fc1e8f8bb819759ea9793c.json
    ...
  /01/
  /../
  /zy/
  /zz/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It follows this weird structure in order to avoid too many files being created in a single directory, which degrades file system performance.&lt;/p&gt; 
&lt;h2&gt;Asset Resolution&lt;/h2&gt; 
&lt;p&gt;Parcel follows the Node module resolution algorithm with a few additions.&lt;/p&gt; 
&lt;h3&gt;Local Paths&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./path/to/file
./path/to/file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These follow the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;Node module resolution algorithm&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Package Paths&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;preact
lodash/cloneDeep
@sindresorhus/is
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These follow the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;Node module resolution algorithm&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;URLs&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;https://unpkg.com/preact@8.2.9/dist/preact.min.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Parcel by default will ignore URL dependencies, other resolver plugins may choose to do something with them.&lt;/p&gt; 
&lt;h3&gt;Tilde Paths&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;~/src/file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only when used outside of &lt;code&gt;node_modules&lt;/code&gt; directories, the &lt;code&gt;~&lt;/code&gt; is replaced by an absolute path to the closest package root:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;/path/to/app #(/package.json)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To form a path that looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/path/to/app/src/file.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then it follows the &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_all_together&quot;&gt;Node module resolution algorithm&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Aliases&lt;/h3&gt; 
&lt;p&gt;Aliases come in two forms:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Package Aliases: &lt;code&gt;react -&amp;gt; preact&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;File/Directory Aliases: &lt;code&gt;utils&lt;/code&gt; -&amp;gt; &lt;code&gt;./src/utils&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;my-project&quot;,
  &quot;alias&quot;: {
    &quot;react&quot;: &quot;preact-compat&quot;,
    &quot;react-dom&quot;: &quot;preact-compat&quot;,
    &quot;utils&quot;: &quot;./src/utils&quot;,
    &quot;components&quot;: &quot;./src/components&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are a couple of rules:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Aliases will only be respected when specified outside of &lt;code&gt;node_modules&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Aliases specified outside of &lt;code&gt;node_modules&lt;/code&gt; will affect assets inside of &lt;code&gt;node_modules&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Aliases cannot build off of other aliases.&lt;/li&gt; 
 &lt;li&gt;Only one alias will be applied at a time.&lt;/li&gt; 
 &lt;li&gt;Aliases must be valid npm package names.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;h3&gt;Resolvers&lt;/h3&gt; 
&lt;p&gt;When one asset depends on another through an asset specifier, the resolver is responsible for determining what asset is being requested.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/parcel-bundler/parcel/v2/#asset-resolution&quot;&gt;Asset Resolution&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;resolvers&quot;: [&quot;@parcel/resolver-v1&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Resolvers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/resolver-v1&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Transformers&lt;/h3&gt; 
&lt;p&gt;transformers &lt;em&gt;transform&lt;/em&gt; single assets as they are discovered and added to the asset graph. They mostly call out to different compilers and preprocessors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/transformer-babel&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-babel&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-coffeescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-glsl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-graphql&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-json5&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-less&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-posthtml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-postcss&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-pug&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-raw&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-reason&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-rust&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-stylus&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-vue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-wasm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-webmanifest&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-yaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/transformer-elm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bundlers&lt;/h3&gt; 
&lt;p&gt;Bundlers accept the entire asset graph and turn it into sets of bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;bundler&quot;: &quot;@parcel/bundler-default&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Bundlers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/bundler-default&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Namers&lt;/h3&gt; 
&lt;p&gt;Namers accept a bundle and return a filename for that bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;namers&quot;: [&quot;@parcel/namer-default&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Namers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/namer-default&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Runtimes&lt;/h3&gt; 
&lt;p&gt;Runtimes get called after the bundler phase and generate an asset which gets included in the final bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;runtimes&quot;: [&quot;@parcel/runtime-js&quot;, &quot;@parcel/runtime-browser-hmr&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Runtimes:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/runtime-js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/runtime-hmr&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packagers&lt;/h3&gt; 
&lt;p&gt;Packagers determine how to merge different asset types into a single bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;packagers&quot;: {
    &quot;*.css&quot;: &quot;@parcel/packager-css&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Packagers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-html&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-css&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-wasm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-raw&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimizers&lt;/h3&gt; 
&lt;p&gt;Optimizers are similar to transformers, but they accept a bundle instead of a single asset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;optimizers&quot;: {
    &quot;*.js&quot;: [&quot;@parcel/optimizer-terser&quot;],
    &quot;*.css&quot;: [&quot;@parcel/optimizer-csso&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Optimizers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-terser&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/packager-csso&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[todo]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reporters&lt;/h3&gt; 
&lt;p&gt;Reporters receive events as they happen and can either use the Parcel logger to output to stdout/stderr or they can return assets to be generated on the file system.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;reporters&quot;: [&quot;@parcel/reporter-cli&quot;, &quot;@parcel/reporter-dev-server&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Reporters:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/reporter-cli&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/reporter-dev-server&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[todo]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Validators&lt;/h3&gt; 
&lt;p&gt;Validators emit errors for source code after a build is completed. For example, type checking and linting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;validators&quot;: {
    &quot;*.ts&quot;: [&quot;@parcel/validator-typescript&quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Official Validators:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/validator-typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@parcel/validator-eslint&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[todo]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Creating Plugins&lt;/h2&gt; 
&lt;h3&gt;Naming&lt;/h3&gt; 
&lt;p&gt;All plugins must follow a naming system:&lt;/p&gt; 
&lt;p&gt;| | Official package | Community packages | Private company/scoped team packages | | ––––– | ––––––––––––– | ———————–– | ———————————— | | Configs | &lt;code&gt;@parcel/config-{name}&lt;/code&gt; | &lt;code&gt;parcel-config-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-config[-{name}]&lt;/code&gt; | | Resolvers | &lt;code&gt;@parcel/resolver-{name}&lt;/code&gt; | &lt;code&gt;parcel-resolver-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-resolver[-{name}]&lt;/code&gt; | | Transformers | &lt;code&gt;@parcel/transformer-{name}&lt;/code&gt; | &lt;code&gt;parcel-transformer-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-transformer[-{name}]&lt;/code&gt; | | Bundlers | &lt;code&gt;@parcel/bundler-{name}&lt;/code&gt; | &lt;code&gt;parcel-bundler-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-bundler[-{name}]&lt;/code&gt; | | Namers | &lt;code&gt;@parcel/namer-{name}&lt;/code&gt; | &lt;code&gt;parcel-namer-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-namer[-{name}]&lt;/code&gt; | | Runtimes | &lt;code&gt;@parcel/runtime-{name}&lt;/code&gt; | &lt;code&gt;parcel-runtime-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-runtime[-{name}]&lt;/code&gt; | | Packagers | &lt;code&gt;@parcel/packager-{name}&lt;/code&gt; | &lt;code&gt;parcel-packager-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-packager[-{name}]&lt;/code&gt; | | Optimizers | &lt;code&gt;@parcel/optimizer-{name}&lt;/code&gt; | &lt;code&gt;parcel-optimizer-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-optimizer[-{name}]&lt;/code&gt; | | Reporters | &lt;code&gt;@parcel/reporter-{name}&lt;/code&gt; | &lt;code&gt;parcel-reporter-{name}&lt;/code&gt; | &lt;code&gt;@scope/parcel-reporter[-{name}]&lt;/code&gt; | | Validators | &lt;code&gt;@parcel/validator-{name}&lt;/code&gt; | &lt;code&gt;parcel-validator-{name}&lt;/code&gt;| &lt;code&gt;@scope/parcel-validator[-{name}]&lt;/code&gt; |&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;{name}&lt;/code&gt; must be descriptive and directly related to the purpose of the package. Someone should be able to have an idea of what the package does simply by reading the name in a &lt;code&gt;.parcelrc&lt;/code&gt; or &lt;code&gt;package.json#devDependencies&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;parcel-transformer-posthtml
parcel-packager-wasm
parcel-reporter-graph-visualizer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your plugin adds support for a specific tool, please use the name of the tool.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;parcel-transformer-es6 (bad)
parcel-transformer-babel (good)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your plugin is a reimplementation of something that exists, try naming it something that explains why it is a separate:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;parcel-transformer-better-typescript (bad)
parcel-transformer-typescript-server (good)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We ask that community members work together and when forks happen to try and resolve them. If someone made a better version of your plugin, please consider giving the better package name over, have them make a major version bump, and redirect people to the new tool.&lt;/p&gt; 
&lt;h3&gt;Versioning&lt;/h3&gt; 
&lt;p&gt;You must follow semantic versioning (to the best of your ability). No, it’s not the perfect system, but it’s the best one we have and people do depend on it.&lt;/p&gt; 
&lt;p&gt;If plugin authors intentionally don’t follow semantic versioning, Parcel may start warning users that they should be locking down the version number for your plugin.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Warning: The plugin “parcel-transform-typescript” does not follow semantic versioning. You should lock the version range down so your code does not break when they make changes. Please upvote this issue to encourage them to follow semver: https://github.com/user/parcel-transform-typescript/issues/43&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Engines&lt;/h3&gt; 
&lt;p&gt;You must specify a &lt;code&gt;package.json#engines.parcel&lt;/code&gt; field with the version range of Parcel that your plugin supports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;parcel-transform-imagemin&quot;,
  &quot;engines&quot;: {
    &quot;parcel&quot;: &quot;2.x&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not specify this field, Parcel will output a warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Warning: The plugin &quot;parcel-transform-typescript&quot; needs to specify a `package.json#engines.parcel` field with the supported Parcel version range.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do specify the parcel engine field and the user is using an incompatible version of Parcel, they will see an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Error: The plugin &quot;parcel-transform-typescript&quot; is not compatible with the
current version of Parcel. Requires &quot;2.x&quot; but the current version is &quot;3.1.4&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Parcel uses node-semver to match version ranges.&lt;/p&gt; 
&lt;h2&gt;Plugin APIs&lt;/h2&gt; 
&lt;p&gt;There are several different types of plugins. They all look very similar, but are kept separate so we can have strict contracts one what each one is allowed to do.&lt;/p&gt; 
&lt;p&gt;There are some rules that should be followed across every type of plugin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Stateless&lt;/strong&gt; — Avoid any kind of state, it will likely be the source of bugs for your users. For example, the same transform may exist in multiple separate workers which are not allowed to communicate with one another, state will not work as expected.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pure&lt;/strong&gt; — Given the same input, a plugin must produce the same output, and you must not have any observable side effects, or implicit dependencies. Otherwise Parcel’s caching will break and your users will be sad. You should never have to tell users to delete their caches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The plugin APIs all follow a common shape:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {NameOfPluginType} from &#39;@parcel/plugin&#39;;

export default new NameOfPluginType({
  async methodName(opts: JSONObject): Promise&amp;lt;JSONObject&amp;gt; {
    return result;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;They are made up of modules with well-known named exports of async functions that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Accept a strictly validated JSON-serializable &lt;code&gt;opts&lt;/code&gt; object.&lt;/li&gt; 
 &lt;li&gt;Return a strictly validated JSON-serializable &lt;code&gt;vals&lt;/code&gt; object.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If something you need is not being passed through &lt;code&gt;opts&lt;/code&gt;, please come talk to the Parcel team about it. Avoid trying to get information yourself from other sources, especially from the file system.&lt;/p&gt; 
&lt;h3&gt;Resolvers&lt;/h3&gt; 
&lt;p&gt;Resolvers get called with an asset request (consisting of a source file path and the specifier of what is being requested) which it then attempts to resolve. If the resolver isn’t sure how to handle a request, it can also return &lt;code&gt;null&lt;/code&gt; and pass it to the next resolver in the chain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Resolver} from &#39;@parcel/plugin&#39;;

export default new Resolver({
  async resolve({dependency}) {
    // ...
    return {filePath} || null;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Transformers&lt;/h3&gt; 
&lt;p&gt;Transformers &lt;em&gt;transform&lt;/em&gt; single assets as they are discovered and added to the asset graph. They mostly call out to different compilers and preprocessors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Transform} from &#39;@parcel/plugin&#39;;

export default new Transform({
  async parse({asset}) {
    // ...
    return ast;
  },

  async transform({asset}) {
    // ...
    return [assets];
  },

  async generate({asset}) {
    // ...
    return {code, map};
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Bundler&lt;/h3&gt; 
&lt;p&gt;Bundlers accept the entire asset graph and modify it to add bundle nodes that group the assets into output bundles.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Bundler} from &#39;@parcel/plugin&#39;;

export default new Bundler({
  async bundle({graph}) {
    // ...
  },

  async optimize({graph}) {
    // ...
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Namers&lt;/h3&gt; 
&lt;p&gt;Namers accept a bundle and output a filename for that bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Namer} from &#39;@parcel/plugin&#39;;

export default new Namer({
  async name({bundle, bundleGraph}) {
    // ...
    return name;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Runtimes&lt;/h3&gt; 
&lt;p&gt;Runtimes accept a bundle and return assets to be inserted into that bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Runtime} from &#39;@parcel/runtime&#39;;

export default new Runtime({
  async apply({bundle, bundleGraph}) {
    // ...
    return assets;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Packagers&lt;/h3&gt; 
&lt;p&gt;Packagers determine how to merge different asset types into a single bundle.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Packager} from &#39;@parcel/plugin&#39;;

export default new Packager({
  async package({bundle}) {
    // ...
    return {contents, map};
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optimizers&lt;/h3&gt; 
&lt;p&gt;Optimizers are similar to transformers, but they accept a bundle instead of a single asset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Optimizer} from &#39;@parcel/plugin&#39;;

export default new Optimizer({
  async optimize({bundle, contents, map}) {
    // ...
    return {contents, map};
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reporters&lt;/h3&gt; 
&lt;p&gt;Reporters receive events as they happen and can output to stdout/stderr, or perform other actions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Reporter} from &#39;@parcel/plugin&#39;;

export default new Reporter({
  async report({ event: { type, ... } }) {
    // ...
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Validators&lt;/h3&gt; 
&lt;p&gt;Validators receive an asset, and can throw errors if that asset is invalid in some way, e.g. type errors or linting errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Validator} from &#39;@parcel/plugin&#39;;

export default new Validator({
  async validate({asset}) {
    // ...
    throw error;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some validators (such as &lt;code&gt;@parcel/validator-typescript&lt;/code&gt;) may wish to maintain a project-wide cache for efficiency. For these cases, it is appropriate to use a different interface where parcel hands &lt;em&gt;all&lt;/em&gt; changed files to the validator at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {Validator} from &#39;@parcel/plugin&#39;;

export default new Validator({
  async validateAll({assets}) {
    // ...
    throw error;
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your plugin implements &lt;code&gt;validateAll&lt;/code&gt;, Parcel will make sure to always invoke this method on the same thread (so that your cache state is accessible).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://github.com/parcel-bundler/parcel/raw/v2/LICENSE&quot;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twbs/bootstrap</title>
      <link>https://github.com/twbs/bootstrap</link>
      <description>&lt;p&gt;The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://getbootstrap.com/&quot;&gt; &lt;img src=&quot;https://getbootstrap.com/docs/5.0/assets/brand/bootstrap-logo-shadow.png&quot; alt=&quot;Bootstrap logo&quot; width=&quot;200&quot; height=&quot;165&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Bootstrap&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Sleek, intuitive, and powerful front-end framework for faster and easier web development. &lt;br&gt; &lt;a href=&quot;https://getbootstrap.com/docs/5.0/&quot;&gt;&lt;strong&gt;Explore Bootstrap docs »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?template=bug_report.md&quot;&gt;Report bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?template=feature_request.md&quot;&gt;Request feature&lt;/a&gt; · &lt;a href=&quot;https://themes.getbootstrap.com/&quot;&gt;Themes&lt;/a&gt; · &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;Blog&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Bootstrap 5&lt;/h2&gt; 
&lt;p&gt;Our default branch is for development of our Bootstrap 5 release. Head to the &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/v4-dev&quot;&gt;&lt;code&gt;v4-dev&lt;/code&gt; branch&lt;/a&gt; to view the readme, documentation, and source code for Bootstrap 4.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#quick-start&quot;&gt;Quick start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#status&quot;&gt;Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#whats-included&quot;&gt;What’s included&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#bugs-and-feature-requests&quot;&gt;Bugs and feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#creators&quot;&gt;Creators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#thanks&quot;&gt;Thanks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#copyright-and-license&quot;&gt;Copyright and license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Several quick start options are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/archive/v5.0.1.zip&quot;&gt;Download the latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clone the repo: &lt;code&gt;git clone https://github.com/twbs/bootstrap.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;: &lt;code&gt;npm install bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;: &lt;code&gt;composer require twbs/bootstrap:5.0.1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt;: CSS: &lt;code&gt;Install-Package bootstrap&lt;/code&gt; Sass: &lt;code&gt;Install-Package bootstrap.sass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://getbootstrap.com/docs/5.0/getting-started/introduction/&quot;&gt;Getting started page&lt;/a&gt; for information on the framework contents, templates and examples, and more.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://bootstrap-slack.herokuapp.com/badge.svg?sanitize=true&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/actions?query=workflow%3AJS+Tests+branch%3Amain&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/twbs/bootstrap/JS%20Tests/main?label=JS%20Tests&amp;amp;logo=github&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/bootstrap&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/bootstrap&quot; alt=&quot;Gem version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://atmospherejs.com/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue&quot; alt=&quot;Meteor Atmosphere&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagist.org/packages/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/packagist/vpre/twbs/bootstrap&quot; alt=&quot;Packagist Prerelease&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/bootstrap/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/bootstrap&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/twbs/bootstrap?type=peer&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/peer/twbs/bootstrap&quot; alt=&quot;peerDependencies Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/twbs/bootstrap?type=dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/dev/twbs/bootstrap&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/twbs/bootstrap?branch=main&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/github/twbs/bootstrap/main&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=gzip&amp;amp;label=CSS%20gzip%20size&quot; alt=&quot;CSS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=brotli&amp;amp;label=CSS%20Brotli%20size&quot; alt=&quot;CSS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=gzip&amp;amp;label=JS%20gzip%20size&quot; alt=&quot;JS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=brotli&amp;amp;label=JS%20Brotli%20size&quot; alt=&quot;JS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot;&gt;&lt;img src=&quot;https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot; alt=&quot;BrowserStack Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#backers&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/bootstrap&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#sponsors&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/bootstrap&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What’s included&lt;/h2&gt; 
&lt;p&gt;Within the download you’ll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You’ll see something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;bootstrap/
├── css/
│   ├── bootstrap-grid.css
│   ├── bootstrap-grid.css.map
│   ├── bootstrap-grid.min.css
│   ├── bootstrap-grid.min.css.map
│   ├── bootstrap-grid.rtl.css
│   ├── bootstrap-grid.rtl.css.map
│   ├── bootstrap-grid.rtl.min.css
│   ├── bootstrap-grid.rtl.min.css.map
│   ├── bootstrap-reboot.css
│   ├── bootstrap-reboot.css.map
│   ├── bootstrap-reboot.min.css
│   ├── bootstrap-reboot.min.css.map
│   ├── bootstrap-reboot.rtl.css
│   ├── bootstrap-reboot.rtl.css.map
│   ├── bootstrap-reboot.rtl.min.css
│   ├── bootstrap-reboot.rtl.min.css.map
│   ├── bootstrap-utilities.css
│   ├── bootstrap-utilities.css.map
│   ├── bootstrap-utilities.min.css
│   ├── bootstrap-utilities.min.css.map
│   ├── bootstrap-utilities.rtl.css
│   ├── bootstrap-utilities.rtl.css.map
│   ├── bootstrap-utilities.rtl.min.css
│   ├── bootstrap-utilities.rtl.min.css.map
│   ├── bootstrap.css
│   ├── bootstrap.css.map
│   ├── bootstrap.min.css
│   ├── bootstrap.min.css.map
│   ├── bootstrap.rtl.css
│   ├── bootstrap.rtl.css.map
│   ├── bootstrap.rtl.min.css
│   └── bootstrap.rtl.min.css.map
└── js/
    ├── bootstrap.bundle.js
    ├── bootstrap.bundle.js.map
    ├── bootstrap.bundle.min.js
    ├── bootstrap.bundle.min.js.map
    ├── bootstrap.esm.js
    ├── bootstrap.esm.js.map
    ├── bootstrap.esm.min.js
    ├── bootstrap.esm.min.js.map
    ├── bootstrap.js
    ├── bootstrap.js.map
    ├── bootstrap.min.js
    └── bootstrap.min.js.map
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We provide compiled CSS and JS (&lt;code&gt;bootstrap.*&lt;/code&gt;), as well as compiled and minified CSS and JS (&lt;code&gt;bootstrap.min.*&lt;/code&gt;). &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps&quot;&gt;source maps&lt;/a&gt; (&lt;code&gt;bootstrap.*.map&lt;/code&gt;) are available for use with certain browsers’ developer tools. Bundled JS files (&lt;code&gt;bootstrap.bundle.js&lt;/code&gt; and minified &lt;code&gt;bootstrap.bundle.min.js&lt;/code&gt;) include &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bugs and feature requests&lt;/h2&gt; 
&lt;p&gt;Have a bug or a feature request? Please first read the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md#using-the-issue-tracker&quot;&gt;issue guidelines&lt;/a&gt; and search for existing and closed issues. If your problem or idea is not addressed yet, &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new&quot;&gt;please open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Bootstrap’s documentation, included in this repo in the root directory, is built with &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; and publicly hosted on GitHub Pages at &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;https://getbootstrap.com/&lt;/a&gt;. The docs may also be run locally.&lt;/p&gt; 
&lt;p&gt;Documentation search is powered by &lt;a href=&quot;https://community.algolia.com/docsearch/&quot;&gt;Algolia’s DocSearch&lt;/a&gt;. Working on our search? Be sure to set &lt;code&gt;debug: true&lt;/code&gt; in &lt;code&gt;site/assets/js/search.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Running documentation locally&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the Node.js dependencies, including Hugo (the site builder).&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run test&lt;/code&gt; (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.&lt;/li&gt; 
 &lt;li&gt;From the root &lt;code&gt;/bootstrap&lt;/code&gt; directory, run &lt;code&gt;npm run docs-serve&lt;/code&gt; in the command line.&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:9001/&lt;/code&gt; in your browser, and voilà.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more about using Hugo by reading its &lt;a href=&quot;https://gohugo.io/documentation/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Documentation for previous releases&lt;/h3&gt; 
&lt;p&gt;You can find all our previous releases docs on &lt;a href=&quot;https://getbootstrap.com/docs/versions/&quot;&gt;https://getbootstrap.com/docs/versions/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;Previous releases&lt;/a&gt; and their documentation are also available for download.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, coding standards, and notes on development.&lt;/p&gt; 
&lt;p&gt;Moreover, if your pull request contains JavaScript patches or features, you must include &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/main/js/tests&quot;&gt;relevant unit tests&lt;/a&gt;. All HTML and CSS should conform to the &lt;a href=&quot;https://github.com/mdo/code-guide&quot;&gt;Code Guide&lt;/a&gt;, maintained by &lt;a href=&quot;https://github.com/mdo&quot;&gt;Mark Otto&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Editor preferences are available in the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.editorconfig&quot;&gt;editor config&lt;/a&gt; for easy use in common text editors. Read more and download plugins at &lt;a href=&quot;https://editorconfig.org/&quot;&gt;https://editorconfig.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Get updates on Bootstrap’s development and chat with the project maintainers and community members.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/getbootstrap&quot;&gt;@getbootstrap on Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read and subscribe to &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;The Official Bootstrap Blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join &lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;the official Slack room&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with fellow Bootstrappers in IRC. On the &lt;code&gt;irc.libera.chat&lt;/code&gt; server, in the &lt;code&gt;#bootstrap&lt;/code&gt; channel.&lt;/li&gt; 
 &lt;li&gt;Implementation help may be found at Stack Overflow (tagged &lt;a href=&quot;https://stackoverflow.com/questions/tagged/bootstrap-5&quot;&gt;&lt;code&gt;bootstrap-5&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Developers should use the keyword &lt;code&gt;bootstrap&lt;/code&gt; on packages which modify or add to the functionality of Bootstrap when distributing through &lt;a href=&quot;https://www.npmjs.com/browse/keyword/bootstrap&quot;&gt;npm&lt;/a&gt; or similar delivery mechanisms for maximum discoverability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under &lt;a href=&quot;https://semver.org/&quot;&gt;the Semantic Versioning guidelines&lt;/a&gt;. Sometimes we screw up, but we adhere to those rules whenever possible.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;the Releases section of our GitHub project&lt;/a&gt; for changelogs for each release version of Bootstrap. Release announcement posts on &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;the official Bootstrap blog&lt;/a&gt; contain summaries of the most noteworthy changes made in each release.&lt;/p&gt; 
&lt;h2&gt;Creators&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mark Otto&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mdo&quot;&gt;https://twitter.com/mdo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdo&quot;&gt;https://github.com/mdo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Jacob Thornton&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/fat&quot;&gt;https://twitter.com/fat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fat&quot;&gt;https://github.com/fat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;a href=&quot;https://www.browserstack.com/&quot;&gt; &lt;img src=&quot;https://live.browserstack.com/images/opensource/browserstack-logo.svg?sanitize=true&quot; alt=&quot;BrowserStack Logo&quot; width=&quot;192&quot; height=&quot;42&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; for providing the infrastructure that allows us to test in real browsers!&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/bootstrap#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/bootstrap#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/backers.svg?width=890&quot; alt=&quot;Backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Copyright and license&lt;/h2&gt; 
&lt;p&gt;Code and documentation copyright 2011–2021 the &lt;a href=&quot;https://github.com/twbs/bootstrap/graphs/contributors&quot;&gt;Bootstrap Authors&lt;/a&gt; and &lt;a href=&quot;https://twitter.com&quot;&gt;Twitter, Inc.&lt;/a&gt; Code released under the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;. Docs released under &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Budibase/budibase</title>
      <link>https://github.com/Budibase/budibase</link>
      <description>&lt;p&gt;Budibase is an open-source low code platform that helps you build, automate and self-host internal and external tools in minutes 🚀&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.budibase.com&quot;&gt; &lt;img alt=&quot;Budibase&quot; src=&quot;https://d33wubrfki0l68.cloudfront.net/aac32159d7207b5085e74a7ef67afbb7027786c5/2b1fd/img/logo/bb-emblem.svg?sanitize=true&quot; width=&quot;60&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Budibase &lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt; Build, automate and self-host internal tools in minutes &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Budibase is an open-source low-code platform, helping developers and IT professionals build, automate, and ship internal tools on their own infrastructure in minutes. &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; 🤖 🎨 🚀 &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.imgur.com/k9ANC3b.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt; &lt;img alt=&quot;GitHub all releases&quot; src=&quot;https://img.shields.io/github/downloads/Budibase/budibase/total&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt; &lt;img alt=&quot;GitHub release (latest by date)&quot; src=&quot;https://img.shields.io/github/v/release/Budibase/budibase&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=budibase&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/budibase?style=social&quot; alt=&quot;Follow @budibase&quot;&gt; &lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&quot; alt=&quot;Code of conduct&quot;&gt; &lt;a href=&quot;https://codecov.io/gh/Budibase/budibase&quot;&gt; &lt;img src=&quot;https://codecov.io/gh/Budibase/budibase/graph/badge.svg?token=E8W2ZFXQOH&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://docs.budibase.com/getting-started&quot;&gt;Get started&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://docs.budibase.com&quot;&gt;Docs&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Feature request&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/issues&quot;&gt;Report a bug&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; Support: &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Discussions&lt;/a&gt; &lt;/h3&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build and ship real software.&lt;/strong&gt; Unlike other platforms, with Budibase you build and ship single page applications. Budibase applications have performance baked in and can be designed responsively, providing your users with a great experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open source and extensible.&lt;/strong&gt; Budibase is open-source - licensed as GPL v3. This should fill you with confidence that Budibase will always be around. You can also code against Budibase or fork it and make changes as you please, providing a developer-friendly experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Load data or start from scratch.&lt;/strong&gt; Budibase pulls in data from multiple sources, including MongoDB, CouchDB, PostgreSQL, mySQL, Airtable, S3, DyanmoDB, or a REST API. And unlike other platforms, with Budibase you can start from scratch and create business apps with no data sources. &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new data sources&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design and build apps with powerful pre-made components.&lt;/strong&gt; Budibase comes out of the box with beautifully designed, powerful components which you can use like building blocks to build your UI. We also expose a lot of your favourite CSS styling options so you can go that extra creative mile. &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new component&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automate processes, integrate with other tools, and connect to webhooks.&lt;/strong&gt; Save time by automating manual processes and workflows. From connecting to webhooks, to automating emails, simply tell Budibase what to do and let it work for you. You can easily &lt;a href=&quot;https://github.com/Budibase/automations&quot;&gt;create new automations for Budibase here&lt;/a&gt; or &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new automation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Admin paradise.&lt;/strong&gt; Budibase is made to scale. With Budibase, you can self-host on your own infrastructure and globally manage users, onboarding, SMTP, apps, groups, theming and more. You can also provide users/groups with an app portal and disseminate user-management to the group manager.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase design ui&quot; src=&quot;https://i.imgur.com/5BnXPsN.png&quot;&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🏁 Getting Started with Budibase in 5 minutes&lt;/h2&gt; 
&lt;p&gt;To get started, you must have docker and docker compose installed on your machine. Once you have Docker installed, the process takes 5 minutes, with these four steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Budibase CLI.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;$ npm i -g @budibase/cli 
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Setup Budibase (select where to store Budibase, and the port to run it on)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;budi hosting --init 
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Run Budibase&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;budi hosting --start 
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Create your admin user&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Enter the email and password for the new admin user.&lt;/p&gt; 
&lt;p&gt;Done! You are now ready to build powerful internal tools in minutes. For additional information on how to get started and learn Budibase, visit our &lt;a href=&quot;https://docs.budibase.com/getting-started&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🎓 Learning Budibase&lt;/h2&gt; 
&lt;p&gt;The Budibase &lt;a href=&quot;https://docs.budibase.com&quot;&gt;documentation lives here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;⌛ Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[x] Alpha: We are demoing Budibase to users and receiving feedback&lt;/li&gt; 
 &lt;li&gt;[x] Private Beta: We are testing Budibase with a closed set of customers&lt;/li&gt; 
 &lt;li&gt;[x] Public Beta: Anyone can &lt;a href=&quot;https://docs.budibase.com/getting-started&quot;&gt;get started&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[ ] Official Launch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Watch “releases” of this repo to get notified of major updates, and give the star button a click whilst you’re there.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://i.imgur.com/cJpgqm8.png&quot;&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Budibase/budibase&quot;&gt;&lt;img src=&quot;https://starchart.cc/Budibase/budibase.svg?sanitize=true&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you are having issues between updates of the builder, please use the guide &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CONTRIBUTING.md#troubleshooting&quot;&gt;here&lt;/a&gt; to clear down your environment.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;❗ Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Budibase is dedicated to providing a welcoming, diverse, and harrassment-free experience for everyone. We expect everyone in the Budibase community to abide by our &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CODE_OF_CONDUCT.md&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🙌 Contributing to Budibase&lt;/h2&gt; 
&lt;p&gt;From opening a bug report to creating a pull request: every contribution is appreciated and welcomed. If you’re planning to implement a new feature or change the API please create an issue first. This way we can ensure your work is not in vain.&lt;/p&gt; 
&lt;h3&gt;Not Sure Where to Start?&lt;/h3&gt; 
&lt;p&gt;A good place to start contributing, is the &lt;a href=&quot;https://github.com/Budibase/budibase/projects/22&quot;&gt;First time issues project&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How the repository is organized&lt;/h3&gt; 
&lt;p&gt;Budibase is a monorepo managed by lerna. Lerna manages the building and publishing of the budibase packages. At a high level, here are the packages that make up Budibase.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/builder&quot;&gt;packages/builder&lt;/a&gt; - contains code for the budibase builder client side svelte application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/client&quot;&gt;packages/client&lt;/a&gt; - A module that runs in the browser responsible for reading JSON definition and creating living, breathing web apps from it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/server&quot;&gt;packages/server&lt;/a&gt; - The budibase server. This Koa app is responsible for serving the JS for the builder and budibase apps, as well as providing the API for interaction with the database and file system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Budibase is open-source, licensed as &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GPL v3&lt;/a&gt;. The client and component libraries are licensed as &lt;a href=&quot;https://directory.fsf.org/wiki/License:MPL-2.0&quot;&gt;MPL&lt;/a&gt; - so the apps that you build can be licensed however you like.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;💬 Get in touch&lt;/h2&gt; 
&lt;p&gt;If you have a question or would like to talk with other Budibase users and join our community, please hop over to &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Github discussions&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://martinmck.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11256663?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin McKeaveney&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/master/#infra-shogunpurple&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.michaeldrury.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4407001?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Drury&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/master/#infra-mike12345567&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aptkingston&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9075550?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Kingston&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/master/#design-aptkingston&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://budibase.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3524181?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Shanks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevmodrome&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/534488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Åberg Kultalahti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.budibase.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/49767913?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=joebudi&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=joebudi&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/master/#content-joebudi&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/master/#design-joebudi&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Conor-Mack&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/36074859?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Conor_Mack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Conor-Mack&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Conor-Mack&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pngwn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/12937446?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pngwn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=pngwn&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=pngwn&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HugoLd&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26521848?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HugoLd&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=HugoLd&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/victoriasloan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9913651?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;victoriasloan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=victoriasloan&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yashank09&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37672190?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yashank09&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=yashank09&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SOVLOOKUP&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53158137?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SOVLOOKUP&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=SOVLOOKUP&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;p&gt;| # Day | Topics | | —– | :———————————————————————————————————————————————––: | | 01 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt; | | 02 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt; | | 03 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt; | | 04 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt; | | 05 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt; | | 06 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt; | | 07 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt; | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt; | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt; | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt; | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt; | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt; | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt; | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt; | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt; | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt; | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt; | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt; | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt; | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt; | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt; | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt; | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt; | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt; | | 25 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt; | | 26 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt; | | 27 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt; | | 28 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt; | | 29 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt; | | 30 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;div&gt; 
 &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://www.paypal.me/asabeneh&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/paypal_lg.png&quot; alt=&quot;Paypal Logo&quot; style=&quot;width:10%&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/in/asabeneh/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot;&gt; &lt;/a&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/Asabeneh&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/asabeneh?style=social&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&quot;https://www.linkedin.com/in/asabeneh/&quot; target=&quot;_blank&quot;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;  
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed ‘Hello, World’ as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;conole.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/_ This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; _/&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won’t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    //it could be in the header or in the body // Here is the recommended place
    to put the external script
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: … -3, -2, -1, 0, 1, 2, 3 …&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example … -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 …&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;`We can also create a string using a backtick`
;(&#39;A string could be just as small as one character as big as many pages&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons return a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light on ,the value is true
false // if the light off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don’t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) //not defined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
    let location = &#39;Helsinki&#39;;
    let age = 100;
    let isMarried = true;
    This is a Multiple line comment
    */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do no change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don’t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScrip. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 True
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in oC
const PI = 3.14 // geometrical constant

console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
  job = &#39;teacher&#39;,
  live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jgraph/drawio-desktop</title>
      <link>https://github.com/jgraph/drawio-desktop</link>
      <description>&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a &lt;strong&gt;diagrams.net&lt;/strong&gt; desktop app based on &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. draw.io is the old name for diagrams.net, we just don’t want the hassle of changing all the binary’s names.&lt;/p&gt; 
&lt;p&gt;Download built binaries from the &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;releases section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; 
&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To run this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; runs the app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To release:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; 
 &lt;li&gt;Wait for the builds to complete (https://travis-ci.org/jgraph/drawio-desktop and https://ci.appveyor.com/project/davidjgraph/drawio-desktop)&lt;/li&gt; 
 &lt;li&gt;Go to https://github.com/jgraph/drawio-desktop/releases, edit the preview release.&lt;/li&gt; 
 &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add release notes&lt;/li&gt; 
 &lt;li&gt;Publish release&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
