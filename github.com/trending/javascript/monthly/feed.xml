<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Monthly Trending</title>
    <description>Monthly Trending of JavaScript in GitHub</description>
    <pubDate>Fri, 29 Jan 2021 02:23:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>signalapp/Signal-Desktop</title>
      <link>https://github.com/signalapp/Signal-Desktop</link>
      <description>&lt;p&gt;Signal — Private Messenger for Windows, Mac, and Linux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Signal Desktop&lt;/h1&gt; 
&lt;p&gt;Signal Desktop is an Electron application that links with Signal on &lt;a href=&quot;https://github.com/signalapp/Signal-Android&quot;&gt;Android&lt;/a&gt; or &lt;a href=&quot;https://github.com/signalapp/Signal-iOS&quot;&gt;iOS&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Install the production version: https://signal.org/download/&lt;/h2&gt; 
&lt;h2&gt;Install the beta&lt;/h2&gt; 
&lt;p&gt;You can install the beta version of Signal Desktop alongside the production version. The beta uses different data and install locations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Windows:&lt;/em&gt; First, download &lt;a href=&quot;https://updates.signal.org/desktop/beta.yml&quot;&gt;this file&lt;/a&gt; and look for the &lt;code&gt;url&lt;/code&gt; property that specifies the location for the latest beta installer. Download the installer by constructing a final URL that looks like this: &lt;code&gt;https://updates.signal.org/desktop/&amp;lt;installer location&amp;gt;&lt;/code&gt;. Then run the installer.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;macOS:&lt;/em&gt; First, download &lt;a href=&quot;https://updates.signal.org/desktop/beta-mac.yml&quot;&gt;this file&lt;/a&gt; and look for the &lt;code&gt;url&lt;/code&gt; property that specifies the location for the latest beta installer. Download the installer by constructing a final URL that looks like this: &lt;code&gt;https://updates.signal.org/desktop/&amp;lt;package location&amp;gt;&lt;/code&gt;. Then unzip that package and copy the &lt;code&gt;.app&lt;/code&gt; file into the &lt;code&gt;/Applications&lt;/code&gt; folder using Finder.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Linux:&lt;/em&gt; Follow the production instructions to set up the APT repository and run &lt;code&gt;apt install signal-desktop-beta&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Got a question?&lt;/h2&gt; 
&lt;p&gt;You can find answers to a number of frequently asked questions on our &lt;a href=&quot;https://support.signal.org/&quot;&gt;support site&lt;/a&gt;. The &lt;a href=&quot;https://community.signalusers.org/&quot;&gt;community forum&lt;/a&gt; is another good place for questions.&lt;/p&gt; 
&lt;h2&gt;Found a Bug? Have a feature request?&lt;/h2&gt; 
&lt;p&gt;Please search for any &lt;a href=&quot;https://github.com/signalapp/Signal-Desktop/issues&quot;&gt;existing issues&lt;/a&gt; that describe your bug in order to avoid duplicate submissions.&lt;/p&gt; 
&lt;h2&gt;Contributing Translations&lt;/h2&gt; 
&lt;p&gt;Interested in helping to translate Signal? Contribute here:&lt;/p&gt; 
&lt;p&gt;https://www.transifex.com/projects/p/signal-desktop&lt;/p&gt; 
&lt;h2&gt;Contributing Code&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://github.com/signalapp/Signal-Desktop/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions and guidelines for new contributors. Don&#39;t forget to sign the &lt;a href=&quot;https://signal.org/cla/&quot;&gt;CLA&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing Funds&lt;/h2&gt; 
&lt;p&gt;You can donate to Signal development through the &lt;a href=&quot;https://signal.org/donate&quot;&gt;Signal Technology Foundation&lt;/a&gt;, an independent 501c3 nonprofit.&lt;/p&gt; 
&lt;h2&gt;Cryptography Notice&lt;/h2&gt; 
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&quot;http://www.wassenaar.org/&quot;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2013–2020 Signal, a 501c3 nonprofit&lt;/p&gt; 
&lt;p&gt;Licensed under the AGPLv3: https://opensource.org/licenses/agpl-3.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereumbook/ethereumbook</title>
      <link>https://github.com/ethereumbook/ethereumbook</link>
      <description>&lt;p&gt;Mastering Ethereum, by Andreas M. Antonopoulos, Gavin Wood&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastering Ethereum&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ethereumbook/ethereumbook/develop/images/cover_thumb.png&quot; alt=&quot;Mastering Ethereum Cover&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is a book for developers, offering a guide to the operation and use of the Ethereum, Ethereum Classic, RootStock (RSK) and other compatible EVM-based open blockchains.&lt;/p&gt; 
&lt;h2&gt;Reading this book&lt;/h2&gt; 
&lt;p&gt;To read this book, see &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/book.asciidoc&quot;&gt;book.asciidoc&lt;/a&gt;. Click on each of the chapters to read in your browser. Other parties may choose to release PDFs of the book online.&lt;/p&gt; 
&lt;h2&gt;Chapters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preface: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/preface.asciidoc&quot;&gt;Preface&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 1: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/01what-is.asciidoc&quot;&gt;What Is Ethereum&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 2: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/02intro.asciidoc&quot;&gt;Ehtereum Basics&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 3: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/03clients.asciidoc&quot;&gt;Ethereum Clients&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 4: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/04keys-addresses.asciidoc&quot;&gt;Cryptography&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 5: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/05wallets.asciidoc&quot;&gt;Wallets&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 6: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/06transactions.asciidoc&quot;&gt;Transactions&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 7: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/07smart-contracts-solidity.asciidoc&quot;&gt;Smart Contracts and Solidity&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 8: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/08smart-contracts-vyper.asciidoc&quot;&gt;Smart Contracts and Vyper&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 9: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/09smart-contracts-security.asciidoc&quot;&gt;Smart Contract Security&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 10: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/10tokens.asciidoc&quot;&gt;Tokens&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 11: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/11oracles.asciidoc&quot;&gt;Oracles&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 12: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/12dapps.asciidoc&quot;&gt;Decentralized Applications (DApps)&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 13: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/13evm.asciidoc&quot;&gt;The Ethereum Virtual Machine&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 14: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/14consensus.asciidoc&quot;&gt;Consensus&lt;/a&gt;&#39;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;p&gt;The content status is &quot;COMPLETE&quot;. The first edition of this book was published on December 1st, 2018. That edition is available in print and ebook format at many popular bookstores. It is tagged &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;&quot;first_edition_first_print&quot;&lt;/a&gt; in the develop branch of this repository.&lt;/p&gt; 
&lt;p&gt;At this time, &lt;strong&gt;only bug fix requests are accepted&lt;/strong&gt;. If you find a bug, start an issue or better yet, fix the problem with a pull request. We will start work on the second edition in late 2019.&lt;/p&gt; 
&lt;h2&gt;Source and license&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;first edition&lt;/a&gt; of this book, as printed and sold by O&#39;Reilly Media, is available in this repository.&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is released under the &lt;em&gt;Creative Commons CC-BY-SA license&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;This &quot;Free Culture&quot; compliant license was approved by our publisher O&#39;Reilly Media (http://oreilly.com), who understands the value of open source. O&#39;Reilly Media is not just the world&#39;s best publisher of technical books, but is also a strong supporter of this open culture and the sharing of knowledge.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Mastering Ethereum
 &lt;!-- raw HTML omitted --&gt; by 
 &lt;!-- raw HTML omitted --&gt;Andreas M. Antonopoulos, Gavin Wood
 &lt;!-- raw HTML omitted --&gt; is licensed under a 
 &lt;!-- raw HTML omitted --&gt;Creative Commons Attribution-ShareAlike 4.0 International License
 &lt;!-- raw HTML omitted --&gt;.
 &lt;!-- raw HTML omitted --&gt;Based on a work at 
 &lt;!-- raw HTML omitted --&gt;https://github.com/ethereumbook/ethereumbook
 &lt;!-- raw HTML omitted --&gt;.&lt;/p&gt; 
&lt;h1&gt;Translate This Book!&lt;/h1&gt; 
&lt;p&gt;If you are interested in translating this book, please join our team of volunteers at: https://www.transifex.com/aantonop/ethereumbook&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptv-org/iptv</title>
      <link>https://github.com/iptv-org/iptv</link>
      <description>&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPTV&lt;/h1&gt; 
&lt;p&gt;Collection of 5000+ publicly available IPTV channels from all over the world.&lt;/p&gt; 
&lt;p&gt;Internet Protocol television (IPTV) is the delivery of television content over Internet Protocol (IP) networks.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To watch IPTV you just need to paste this link &lt;code&gt;https://iptv-org.github.io/iptv/index.m3u&lt;/code&gt; to any player which supports M3U-playlists.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.readme/preview.png&quot; alt=&quot;VLC Network Panel&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Also you can instead use one of these playlists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.country.m3u&lt;/code&gt; (grouped by country)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.category.m3u&lt;/code&gt; (grouped by category)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;https://iptv-org.github.io/iptv/index.language.m3u&lt;/code&gt; (grouped by language)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or select one of the playlists from the list below.&lt;/p&gt; 
&lt;h2&gt;Playlists by category&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by language&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Playlists by country&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;In addition to the above methods, you can also get a list of all available channels in JSON format.&lt;/p&gt; 
&lt;p&gt;To do this, you just have to make a GET request to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://iptv-org.github.io/iptv/channels.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If successful, you should get the following response:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  ...
  {
    &quot;name&quot;: &quot;CNN&quot;,
    &quot;logo&quot;: &quot;https://i.imgur.com/ilZJT5s.png&quot;,
    &quot;url&quot;: &quot;http://ott-cdn.ucom.am/s27/index.m3u8&quot;,
    &quot;category&quot;: &quot;News&quot;,
    &quot;language&quot;: [
      {
        &quot;code&quot;: &quot;eng&quot;,
        &quot;name&quot;: &quot;English&quot;
      }
    ],
    &quot;country&quot;: {
      &quot;code&quot;: &quot;us&quot;,
      &quot;name&quot;: &quot;United States&quot;
    },
    &quot;tvg&quot;: {
      &quot;id&quot;: &quot;cnn.us&quot;,
      &quot;name&quot;: &quot;CNN&quot;,
      &quot;url&quot;: &quot;http://epg.streamstv.me/epg/guide-usa.xml.gz&quot;
    }
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;You can find links to various IPTV related resources in this repository &lt;a href=&quot;https://github.com/iptv-org/awesome-iptv&quot;&gt;iptv-org/awesome-iptv&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/iptv-org/iptv/master/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before sending an issue or making a pull request.&lt;/p&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;No video files are stored in this repository. The repository simply contains user-submitted links to publicly available video stream URLs, which to the best of our knowledge have been intentionally made publicly by the copyright holders. If any links in these playlists infringe on your rights as a copyright holder, they may be removed by sending a pull request or opening an issue.&lt;/p&gt; 
&lt;p&gt;However, note that we have &lt;strong&gt;no control&lt;/strong&gt; over the destination of the link, and just removing the link from the playlist will not remove its contents from the web. Note that linking does not directly infringe copyright because no copy is made on the site providing the link, and thus this is &lt;strong&gt;not&lt;/strong&gt; a valid reason to send a DMCA notice to GitHub. To remove this content from the web, you should contact the web host that&#39;s actually hosting the content (&lt;strong&gt;not&lt;/strong&gt; GitHub, nor the maintainers of this repository).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>brave/brave-browser</title>
      <link>https://github.com/brave/brave-browser</link>
      <description>&lt;p&gt;Next generation Brave browser for Android, Linux, macOS, Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Brave Browser&lt;/h1&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux. In particular, it fetches and syncs code from the projects we define in &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;src/brave/DEPS&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chromium.googlesource.com/chromium/src.git&quot;&gt;Chromium&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Fetches code via &lt;code&gt;depot_tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;sets the branch for Chromium (ex: 65.0.3325.181).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brave/brave-core&quot;&gt;brave-core&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Mounted at &lt;code&gt;src/brave&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Maintains patches for 3rd party Chromium code.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brave/adblock-rust&quot;&gt;adblock-rust&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Implements Brave&#39;s ad-block engine.&lt;/li&gt; 
   &lt;li&gt;Linked through &lt;a href=&quot;https://github.com/brave/adblock-rust-ffi&quot;&gt;brave/adblock-rust-ffi&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;You can &lt;a href=&quot;https://brave.com/download&quot;&gt;visit our website&lt;/a&gt; to get the latest stable release.&lt;/p&gt; 
&lt;h2&gt;Other repositories&lt;/h2&gt; 
&lt;p&gt;For other versions of our browser, please see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS - &lt;a href=&quot;https://github.com/brave/brave-ios&quot;&gt;brave/brave-ios&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://raw.githubusercontent.com/brave/brave-browser/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://community.brave.com/&quot;&gt;Join the Q&amp;amp;A community&lt;/a&gt; if you&#39;d like to get more involved with Brave. You can &lt;a href=&quot;https://community.brave.com/c/support-and-troubleshooting&quot;&gt;ask for help&lt;/a&gt;, &lt;a href=&quot;https://community.brave.com/c/brave-feature-requests&quot;&gt;discuss features you&#39;d like to see&lt;/a&gt;, and a lot more. We&#39;d love to have your help so that we can continue improving Brave.&lt;/p&gt; 
&lt;p&gt;Help us translate Brave to your language by submitting translations at https://www.transifex.com/brave/brave/&lt;/p&gt; 
&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brave&quot;&gt;@brave&lt;/a&gt; on Twitter for important news and announcements.&lt;/p&gt; 
&lt;h2&gt;Install prerequisites&lt;/h2&gt; 
&lt;p&gt;Follow the instructions for your platform:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brave/brave-browser/wiki/macOS-Development-Environment&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brave/brave-browser/wiki/Windows-Development-Environment&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brave/brave-browser/wiki/Linux-Development-Environment&quot;&gt;Linux/Android&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Clone and initialize the repo&lt;/h2&gt; 
&lt;p&gt;Once you have the prerequisites installed, you can get the code and initialize the build environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:brave/brave-browser.git
cd brave-browser
npm install

# this takes 30-45 minutes to run
# the Chromium source is downloaded which has a large history
npm run init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;brave-core based android builds should use &lt;code&gt;npm run init -- --target_os=android --target_arch=arm&lt;/code&gt; (or whatever cpu type you want to build for)&lt;/p&gt; 
&lt;p&gt;You can also set the target_os and target_arch for init and build using&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm config set target_os android
npm config set target_arch arm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build Brave&lt;/h2&gt; 
&lt;p&gt;The default build type is component.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# start the component build compile
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To do a release build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# start the release compile
npm run build Release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;brave-core based android builds should use &lt;code&gt;npm run build -- --target_os=android --target_arch=arm&lt;/code&gt; or set the npm config variables as specified above for &lt;code&gt;init&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Build Configurations&lt;/h3&gt; 
&lt;p&gt;Running a release build with &lt;code&gt;npm run build Release&lt;/code&gt; can be very slow and use a lot of RAM especially on Linux with the Gold LLVM plugin.&lt;/p&gt; 
&lt;p&gt;To run a statically linked build (takes longer to build, but starts faster)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build -- Static
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run a debug build (Component build with is_debug=true)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build -- Debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also want to try [[using sccache|sccache-for-faster-builds]].&lt;/p&gt; 
&lt;h2&gt;Run Brave&lt;/h2&gt; 
&lt;p&gt;To start the build:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm start [Release|Component|Static|Debug]&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;Update Brave&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;npm run sync -- [--force] [--init] [--create] [brave_core_ref]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This will attempt to stash your local changes in brave-core, but it&#39;s safer to commit local changes before running this&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run sync&lt;/code&gt; will (depending on the below flags):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;📥 Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)&lt;/li&gt; 
 &lt;li&gt;🤕 Apply patches&lt;/li&gt; 
 &lt;li&gt;🔄 Update gclient DEPS dependencies&lt;/li&gt; 
 &lt;li&gt;⏩ Run hooks (e.g. to perform &lt;code&gt;npm install&lt;/code&gt; on child projects)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;| flag | Description | |---|---| |&lt;code&gt;[no flags]&lt;/code&gt;|updates chromium if needed and re-applies patches. If the chromium version did not change it will only re-apply patches that have changed. Will update child dependencies &lt;strong&gt;only if any project needed updating during this script run&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branch manually. **| |&lt;code&gt;--create&lt;/code&gt;|when used with &lt;code&gt;brave_core_ref&lt;/code&gt; it will create a branch if one does not already exist| |&lt;code&gt;--force&lt;/code&gt;|updates both &lt;em&gt;Chromium&lt;/em&gt; and &lt;em&gt;brave-core&lt;/em&gt; to the latest remote commit for the current brave-core branch and the &lt;em&gt;Chromium&lt;/em&gt; ref specified in brave-browser/package.json (e.g. &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;74.0.0.103&lt;/code&gt;). Will re-apply all patches. Will force update all child dependencies 
 &lt;!-- raw HTML omitted --&gt; **Use this if you&#39;re having trouble and want to force the branches back to a known state. **| |&lt;code&gt;--init&lt;/code&gt;|force update both &lt;em&gt;Chromium&lt;/em&gt; and &lt;em&gt;brave-core&lt;/em&gt; to the versions specified in brave-browser/package.json and force updates all dependent repos - same as &lt;code&gt;npm run init&lt;/code&gt;|&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;npm run sync brave_core_ref&lt;/code&gt; to checkout the specified &lt;em&gt;brave-core&lt;/em&gt; ref and update all dependent repos including chromium if needed&lt;/p&gt; 
&lt;h3&gt;Scenarios&lt;/h3&gt; 
&lt;h4&gt;Create a new branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-core&amp;gt; git checkout -b branch_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-browser&amp;gt; npm run sync -- --create branch_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Checkout an existing branch or tag&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-core&amp;gt; git fetch origin
brave-core&amp;gt; git checkout [-b] branch_name
brave-core&amp;gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-browser&amp;gt; npm run sync --create branch_name
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update the current branch to latest remote&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-core&amp;gt; git pull
brave-core&amp;gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reset to latest brave-browser master, brave-core master and chromium&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-browser&amp;gt; git checkout master
brave-browser&amp;gt; git pull
brave-browser&amp;gt; npm run sync -- --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;When you know that DEPS didn&#39;t change, but .patch files did (quickest)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brave-core&amp;gt; git checkout featureB
brave-core&amp;gt; git pull
brave-browser&amp;gt; npm run apply_patches
...Applying 2 patches...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Enabling third-party APIs:&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Google Safe Browsing&lt;/strong&gt;: Get an API key with SafeBrowsing API enabled from https://console.developers.google.com/. Update the &lt;code&gt;GOOGLE_API_KEY&lt;/code&gt; environment variable with your key as per https://www.chromium.org/developers/how-tos/api-keys to enable Google SafeBrowsing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Troubleshooting&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/brave/brave-browser/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt; for solutions to common problems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jhu-ep-coursera/fullstack-course4</title>
      <link>https://github.com/jhu-ep-coursera/fullstack-course4</link>
      <description>&lt;p&gt;Example code for HTML, CSS, and Javascript for Web Developers Coursera Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coursera: HTML, CSS and Javascript for Web Developers&lt;/h1&gt; 
&lt;h2&gt;Example Source Code&lt;/h2&gt; 
&lt;p&gt;This repository contains all of the example source code used in the Coursera.org course called &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;HTML, CSS and Javascript for Web Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers&quot;&gt;Enroll now! It&#39;s free!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please check our FAQ to see if a question you want to ask on the forums has been answered already. Here is the link to the FAQ:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jhu-ep-coursera/fullstack-course4/master/FAQ.md&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Customer Website Launched&lt;/h2&gt; 
&lt;p&gt;As part of this course we developed a &lt;em&gt;real&lt;/em&gt; website for a &lt;em&gt;real&lt;/em&gt; client. Below is a link to the final product. (&lt;em&gt;Note&lt;/em&gt;, the site is left without speed optimization to keep it exactly as it was in the course. Site optimization wasn&#39;t part of the course).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.davidchuschinabistro.com/&quot;&gt;David Chu&#39;s China Bistro Restaurant in Baltimore, MD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Koenkk/zigbee2mqtt</title>
      <link>https://github.com/Koenkk/zigbee2mqtt</link>
      <description>&lt;p&gt;Zigbee 🐝 to MQTT bridge 🌉, get rid of your proprietary Zigbee bridges 🔨&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;a href=&quot;https://www.zigbee2mqtt.io/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.zigbee2mqtt.io/&quot;&gt;documentation&lt;/a&gt; provides you all the information needed to get up and running! Make sure you don&#39;t skip sections if this is your first visit, as there might be important details in there for you.&lt;/p&gt; 
&lt;p&gt;If you aren&#39;t familiar with &lt;strong&gt;Zigbee&lt;/strong&gt; terminology make sure you &lt;a href=&quot;https://www.zigbee2mqtt.io/information/zigbee_network.html&quot;&gt;read this&lt;/a&gt; to help you out.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://www.zigbee2mqtt.io/#integration&quot;&gt;Integrations&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Zigbee2MQTT integrates well with (almost) every home automation solution because it uses MQTT. However the following integrations are worth mentioning:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.home-assistant.io/hassio/&quot;&gt;Home Assistant&lt;/a&gt;: Using &lt;a href=&quot;https://github.com/danielwelch/hassio-zigbee2mqtt&quot;&gt;the official addon&lt;/a&gt; from &lt;a href=&quot;https://github.com/danielwelch&quot;&gt;danielwelch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generic install or Hassbian: Using instructions &lt;a href=&quot;https://www.zigbee2mqtt.io/integration/home_assistant.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.domoticz.com/&quot;&gt;Domoticz&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integration implemented in &lt;a href=&quot;https://github.com/stas-demydiuk/domoticz-zigbee2mqtt-plugin&quot;&gt;domoticz-zigbee2mqtt-plugin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/architecture.png&quot; alt=&quot;Architecture&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Internal Architecture&lt;/h3&gt; 
&lt;p&gt;Zigbee2MQTT is made up of three modules, each developed in its own Github project. Starting from the hardware (adapter) and moving up; &lt;a href=&quot;https://github.com/koenkk/zigbee-herdsman&quot;&gt;zigbee-herdsman&lt;/a&gt; connects to your Zigbee adapter an makes an API available to the higher levels of the stack. For e.g. Texas Instruments hardware, zigbee-herdsman uses the &lt;a href=&quot;https://github.com/koenkk/zigbee-herdsman/raw/master/docs/Z-Stack%20Monitor%20and%20Test%20API.pdf&quot;&gt;TI zStack monitoring and test API&lt;/a&gt; to communicate with the adapter. Zigbee-herdsman handles the core Zigbee communication. The module &lt;a href=&quot;https://github.com/koenkk/zigbee-herdsman-converters&quot;&gt;zigbee-herdsman-converters&lt;/a&gt; handles the mapping from individual device models to the Zigbee clusters they support. &lt;a href=&quot;https://github.com/Koenkk/zigbee-herdsman/raw/master/docs/Zigbee%20Cluster%20Library%20Specification%20v7.pdf&quot;&gt;Zigbee clusters&lt;/a&gt; are the layers of the Zigbee protocol on top of the base protocol that define things like how lights, sensors and switches talk to each other over the Zigbee network. Finally, the Zigbee2MQTT module drives zigbee-herdsman and maps the zigbee messages to MQTT messages. Zigbee2MQTT also keeps track of the state of the system. It uses a &lt;code&gt;database.db&lt;/code&gt; file to store this state; a text file with a JSON database of connected devices and their capabilities.&lt;/p&gt; 
&lt;h2&gt;Supported devices&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.zigbee2mqtt.io/information/supported_devices.html&quot;&gt;Supported devices&lt;/a&gt; to check whether your device is supported. There is quite an extensive list, including devices from vendors like Xiaomi, Ikea, Philips, OSRAM and more.&lt;/p&gt; 
&lt;p&gt;If it&#39;s not listed in &lt;a href=&quot;https://www.zigbee2mqtt.io/information/supported_devices.html&quot;&gt;Supported devices&lt;/a&gt;, support can be added (fairly) easy, see &lt;a href=&quot;https://www.zigbee2mqtt.io/how_tos/how_to_support_new_devices.html&quot;&gt;How to support new devices&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support &amp;amp; help&lt;/h2&gt; 
&lt;p&gt;If you need assistance you can check &lt;a href=&quot;https://github.com/Koenkk/zigbee2mqtt/issues&quot;&gt;opened issues&lt;/a&gt;. Feel free to help with Pull Requests when you were able to fix things or add new devices or just share the love on social media.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step by step guide to learn JavaScript programming language in 30 days. This challenge may take up to 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;p&gt;| # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------------------------------: | | 01 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt; | | 02 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt; | | 03 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt; | | 04 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt; | | 05 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt; | | 06 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt; | | 07 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt; | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt; | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt; | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt; | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt; | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt; | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt; | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt; | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt; | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt; | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt; | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt; | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt; | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt; | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt; | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt; | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt; | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt; | | 25 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt; | | 26 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt; | | 27 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt; | | 28 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt; | | 29 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt; | | 30 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Author: 
 &lt;!-- raw HTML omitted --&gt;Asabeneh Yetayeh
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; January, 2020
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;conole.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/_ This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; _/&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    //it could be in the header or in the body // Here is the recommended place
    to put the external script
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;`We can also create a string using a backtick`
;(&#39;A string could be just as small as one character as big as many pages&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons return a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light on ,the value is true
false // if the light off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) //not defined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
    let location = &#39;Helsinki&#39;;
    let age = 100;
    let isMarried = true;
    This is a Multiple line comment
    */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do no change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScrip. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 True
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in oC
const PI = 3.14 // geometrical constant

console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
  job = &#39;teacher&#39;,
  live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>star7th/showdoc</title>
      <link>https://github.com/star7th/showdoc</link>
      <description>&lt;p&gt;ShowDoc is a tool greatly applicable for an IT team to share documents online一个非常适合IT团队的在线API文档、技术文档工具&lt;/p&gt;&lt;hr&gt;&lt;p&gt;﻿## 中文版教程：https://www.showdoc.com.cn/help&lt;/p&gt; 
&lt;h3&gt;What is ShowDoc ?&lt;/h3&gt; 
&lt;p&gt;Whenever we take over a module or project which has been developed by other people, we always feel crazy watching at those codes without notes. Where is the document?! Where is the document?! &lt;strong&gt;Show me the doc !!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A programmer often hopes the others to write technical documents, with the hope of not writing them on his/her own. Because writing a technical document needs a lot of time to handle the format and layout, and the person who writes it has to think of all kinds of non-technical details such as which catalog to put in the newly-established word document&lt;/p&gt; 
&lt;p&gt;All kinds of the word documents are kept by different persons in a team dispersedly. The person who needs other documents gets the documents by shouting out. He/She gives a shout asking for the documents and then receives them from other people by IMs or the e-mail. This kind of communication is not bad, but the efficiency is not high.&lt;/p&gt; 
&lt;p&gt;ShowDoc is a tool greatly applicable for an IT team to share documents online. It can promote communication efficiency among members of the team.&lt;/p&gt; 
&lt;h3&gt;What can it be used for?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;API Document （ &lt;a href=&quot;https://www.showdoc.com.cn/demo-en&quot;&gt;Demo&lt;/a&gt;）&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the development of mobile Internet, BaaS (Backend as a Service) becomes more and more popular. The Server end provides API, and the APP end or Webpage frontend can invoke data conveniently. Using ShowDoc can compile exquisite API documents in a very fast and convenient way.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Data Dictionary （ &lt;a href=&quot;https://www.showdoc.com.cn/demo-en&quot;&gt;Demo&lt;/a&gt;）&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A good Data Dictionary can easily exhibit database structure to other people, such as definition of each field and the like.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Explanation Document （ &lt;a href=&quot;https://www.showdoc.com.cn/help-en&quot;&gt;Demo&lt;/a&gt;）&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can absolutely use ShowDoc to compile the explanation documents for some tools, as well as to compile some technical specifications explanation documents for the team to look up.&lt;/p&gt; 
&lt;h3&gt;What functions does it have?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Sharing and Exporting&lt;/h4&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Responsive webpage design can share the project documents to computer or mobile devices for reading. It can also export the project into word document for browsing offline.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Permission Management&lt;/h4&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Public Project and Private Project&lt;/p&gt; &lt;p&gt;Projects on ShowDoc are divided into two categories including Public Project and Private Project. Public Project can be visited by any user no matter he/she logs in or not, while inputting password for verification is needed for visiting the Private Project. The password is set by project creator.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Project Transfer&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The project creator can transfer the project to other users of the website freely.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Project Members&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can easily add or delete project members in the project of ShowDoc. Members of the project can edit the project, but they can not transfer or delete the project (only creator of the project has the permission).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h4&gt;Edit Function&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Markdown Edit&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;ShowDoc adopts Markdown Editor, and it is excellent both in editing and reading experience. If you know nothing about Markdown, please search “Learning and Introduction of Markdown” on the search engine.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Template Insert&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;On the editing page of ShowDoc, a click on the button which is on the top of the Editor can easily insert API interface template and data dictionary template. After inserting the template, altering data is the only thing that need to do and it reduces a lot of work in editing.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;History Version&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;ShowDoc provides a function of History Version on the page, and you can easily restore the page to the former version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deploy It to Your Own Server&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ShowDoc Deploy&lt;/p&gt; &lt;p&gt;Please refer to: &lt;a href=&quot;https://github.com/star7th/showdoc/blob/master/documentation/en/AutoInstall.md&quot;&gt;AutoInstall.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Development &amp;amp; Contribution&lt;/p&gt; &lt;p&gt;Please refer to: &lt;a href=&quot;https://github.com/star7th/showdoc/blob/master/documentation/en/Development&amp;amp;Contribution.md&quot;&gt;Development&amp;amp;Contribution.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Copyright&lt;/h3&gt; 
&lt;p&gt;ShowDoc is issued complying with Apache2 Open Source License, and it is for free use.&lt;/p&gt; 
&lt;p&gt;Copyright © star7th&lt;/p&gt; 
&lt;p&gt;E-mail: xing7th#gmail.com (change # into @)&lt;/p&gt; 
&lt;p&gt;All rights reserved.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GoogleChrome/chrome-extensions-samples</title>
      <link>https://github.com/GoogleChrome/chrome-extensions-samples</link>
      <description>&lt;p&gt;Chrome Extensions Samples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chrome Extensions samples&lt;/h1&gt; 
&lt;p&gt;Official samples for Chrome Extensions and the Chrome Apps platform. Note that Chrome Apps are deprecated—learn more &lt;a href=&quot;https://blog.chromium.org/2020/08/changes-to-chrome-app-support-timeline.html&quot;&gt;on the Chromium blog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information on extensions, see &lt;a href=&quot;https://developer.chrome.com&quot;&gt;Chrome Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Samples&lt;/h2&gt; 
&lt;p&gt;The directory structure is as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;api/ - extensions focused on a single API package&lt;/li&gt; 
 &lt;li&gt;howto/ - extensions that show how to perform a particular task&lt;/li&gt; 
 &lt;li&gt;tutorials/ - multi-step walkthroughs referenced inline in the docs&lt;/li&gt; 
 &lt;li&gt;extensions/ - full featured extensions spanning multiple API packages&lt;/li&gt; 
 &lt;li&gt;apps/ - deprecated Chrome Apps platform (not listed below)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To experiment with these samples, please clone this repo and use &#39;Load Unpacked Extension&#39;. Read more on &lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Sample | Calls --- | --- &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/bookmarks/basic&quot;&gt;My Bookmarks&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A browser action with a popup dump of all bookmarks, including search, add, edit and delete. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.getTree
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/make_page_red&quot;&gt;Page Redder&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Make the current page red | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/print&quot;&gt;Print this page&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds a print button to the browser. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/set_icon_path&quot;&gt;A browser action which changes its icon when clicked&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Click browser action icon to change color! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browserAction/set_page_color&quot;&gt;A browser action with a popup that changes the page color&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Change the current page color | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/browsingData/basic&quot;&gt;BrowsingData API: Basics&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A trivial usage example. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browsingData.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/commands&quot;&gt;Sample Extension Commands extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Press Ctrl+Shift+F to open the browser action popup, press Ctrl+Shift+Y to send an event. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contentSettings&quot;&gt;Content settings&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows the content settings for the current site. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contextMenus/basic&quot;&gt;Context Menus Sample&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows some of the features of the Context Menus API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contextMenus/event_page&quot;&gt;Context Menus Sample (with Event Page)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows some of the features of the Context Menus API using an event page | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/contextMenus/global_context_search&quot;&gt;Global Google Search&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Use the context menu to search a different country&#39;s Google | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/cookies&quot;&gt;Cookie API Test Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Testing Cookie API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;cookies.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;cookies.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;cookies.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/debugger/live-headers&quot;&gt;Live HTTP headers&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the live log with the http requests headers | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.attach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.detach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.onEvent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.sendCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/debugger/pause-resume&quot;&gt;JavaScript pause/resume&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Pauses / resumes JavaScript execution | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.attach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.detach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.onDetach
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.onEvent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;debugger.sendCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/default_command_override&quot;&gt;Tab Flipper&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Press Ctrl+Shift+Right or Ctrl+Shift+Left (Command+Shift+Right or Command+Shift+Left on a Mac) to flip through window tabs | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/desktopCapture&quot;&gt;Desktop Capture Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Show desktop media picker UI | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;desktopCapture.cancelChooseDesktopMedia
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;desktopCapture.chooseDesktopMedia
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/deviceInfo/basic&quot;&gt;My Devices&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A browser action with a popup dump of all devices signed into the same account as the current profile. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;signedInDevices.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;signedInDevices.onDeviceInfoChange
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/devtools/network/chrome-firephp&quot;&gt;FirePHP for Chrome&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Extends the Developer Tools, adding support for parsing FirePHP messages from server | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.network.getHAR
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.network.onRequestFinished
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/devtools/panels/chrome-query&quot;&gt;Chrome Query&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Extends the Developer Tools, adding a sidebar that displays the jQuery data associated with the selected DOM element. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.panels.ElementsPanel.createSidebarPane
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;devtools.panels.ElementsPanel.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/displaySource/tabCast&quot;&gt;tabCast&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Creates a WiFi Display Session from the captured tab media stream using chrome.displaySource API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.getAvailableSinks
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.onSessionTerminated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.onSinksUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.startSession
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;displaySource.terminateSession
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabCapture.capture
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/document_scan&quot;&gt;Document Scanning API Sample&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;documentScan.scan
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_filename_controller&quot;&gt;Download Filename Controller&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Download Filename Controller | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onDeterminingFilename
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_links&quot;&gt;Download Selected Links&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Select links on a page and download them. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_manager&quot;&gt;Download Manager Button&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Browser Action Download Manager User Interface for Google Chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.acceptDanger
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.cancel
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.erase
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.getFileIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onErased
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.open
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.pause
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.removeFile
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.resume
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.search
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.setShelfEnabled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.show
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.showDefaultFolder
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/download_open&quot;&gt;Download and Open Button&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Download and Open Context Menu Button | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.open
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/downloads/downloads_overwrite&quot;&gt;Downloads Overwrite Existing Files&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;All downloads overwrite existing files instead of adding &#39; (1)&#39;, &#39; (2)&#39;, etc. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.onDeterminingFilename
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/eventPage/basic&quot;&gt;Event Page Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates usage and features of the event page | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.onAlarm
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RedirectRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RequestMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onSuspend
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/extension/isAllowedAccess&quot;&gt;&lt;code&gt;extension.isAllowedFileSchemeAccess&lt;/code&gt; and &lt;code&gt;extension.isAllowedIncognitoAccess&lt;/code&gt; Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates the &lt;code&gt;extension.isAllowedFileSchemeAccess&lt;/code&gt; and &lt;code&gt;extesion.isAllowedIncognitoAccess&lt;/code&gt; APIs | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedFileSchemeAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/fileSystemProvider/archive&quot;&gt;Fake Archive Handler App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate File System Provider API usage for apps. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.mount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onCloseFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onGetMetadataRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onOpenFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadDirectoryRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onUnmountRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.unmount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onSuspend
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/fileSystemProvider/basic&quot;&gt;File System Provider API Extension Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate features of the API like mounting, listing directories, etc for extensions. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.mount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onCloseFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onGetMetadataRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onMountRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onOpenFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadDirectoryRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onReadFileRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.onUnmountRequested
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fileSystemProvider.unmount
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/fontSettings&quot;&gt;Advanced Font Settings&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Customize per-script font settings. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearDefaultFixedFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearDefaultFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearFont
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.clearMinimumFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getDefaultFixedFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getDefaultFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getFont
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getFontList
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.getMinimumFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onDefaultFixedFontSizeChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onDefaultFontSizeChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onFontChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.onMinimumFontSizeChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setDefaultFixedFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setDefaultFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setFont
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;fontSettings.setMinimumFontSize
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/history/historyOverride&quot;&gt;History Override&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Overrides the History Page | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.deleteAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.deleteUrl
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.search
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/history/showHistory&quot;&gt;Typed URL History&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Reads your history, and shows the top ten pages you go to by typing the URL. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.getVisits
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;history.search
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/cld&quot;&gt;CLD&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the language of a tab | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.detectLanguage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/detectLanguage&quot;&gt;Detect Language&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Detects up to 3 languages and their percentages of the provided string | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.detectLanguage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/getMessage&quot;&gt;AcceptLanguage&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Returns accept languages of the browser | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getAcceptLanguages
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/i18n/localizedHostedApp&quot;&gt;Minimal Localized Hosted App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This is the minimal set of data required to upload a localized hosted application to the web store. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/idle/idle_simple&quot;&gt;Idle - Simple Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates the Idle API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;idle.onStateChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;idle.queryState
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/input.ime/basic&quot;&gt;Test IME&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A simple IME that converts all keystrokes to upper case. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.commitText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onActivate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onBlur
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onDeactivated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onFocus
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;input.ime.onKeyEvent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/messaging/timer&quot;&gt;Message Timer&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Times how long it takes to send a message to a content script and back. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/nativeMessaging/app&quot;&gt;Native Messaging Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Send a message to a native application. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connectNative
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/notifications&quot;&gt;Notification Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows off desktop notifications, which are &quot;toast&quot; windows that pop up on the desktop. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/omnibox/newtab_search&quot;&gt;Omnibox New Tab Search&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Type &#39;nt&#39; plus a search term into the Omnibox to open search in new tab. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputEntered
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/omnibox/simple-example&quot;&gt;Omnibox Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;To use, type &#39;omnix&#39; plus a search term into the Omnibox. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputEntered
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/override/blank_ntp&quot;&gt;Blank new tab page&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Override the new tab page with a blank one | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/override/override_igoogle&quot;&gt;iGoogle new tab page&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Override the new tab page with iGoogle | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/pageAction/pageaction_by_content&quot;&gt;Page action by content&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows a page action for HTML pages containing a video | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/pageAction/pageaction_by_url&quot;&gt;Page action by URL&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows a page action for urls which have the letter &#39;g&#39; in them. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/pageAction/set_icon&quot;&gt;Animated Page Action&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension adds an animated browser action to the toolbar. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.hide
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.show
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/permissions/extension-questions&quot;&gt;Top Chrome Extension Questions&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample demonstration of the optional permissions API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.onAdded
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/power&quot;&gt;Keep Awake&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Override system power-saving settings. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;power.releaseKeepAwake
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;power.requestKeepAwake
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/preferences/allowThirdPartyCookies&quot;&gt;Block/allow third-party cookies API example extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample extension which demonstrates how to access a preference. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/preferences/enableReferrer&quot;&gt;Block/allow referrer API example extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample extension which demonstrates how to access a preference. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/printing&quot;&gt;Print Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sends print job directly to the printers installed on the Chromebook | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printing.getPrinterInfo
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printing.getPrinters
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printing.submitJob
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/printingMetrics&quot;&gt;Print Job History&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Reads your print history and displays the recent print jobs. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printingMetrics.getPrintJobs
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;printingMetrics.onPrintJobFinished
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/processes/process_monitor&quot;&gt;Process Monitor&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds a browser action that monitors resource usage of all browser processes. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;processes.onUpdatedWithMemory
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;processes.terminate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/processes/show_tabs&quot;&gt;Show Tabs in Process&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds a browser action showing which tabs share the current tab&#39;s process. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;processes.getProcessIdForTab
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/storage/stylizr&quot;&gt;Stylizr&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Spruce up your pages with custom CSS. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.local
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.insertCSS
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabCapture&quot;&gt;Tab Capture Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Capture a tab and play in a | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabCapture.capture
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabCapture.getMediaStreamId
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/inspector&quot;&gt;Tab Inspector&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Utility for working with the extension tabs api | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getAllInWindow
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.move
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onAttached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onDetached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getLastFocused
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onFocusChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/pin&quot;&gt;Keyboard Pin&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Creates a keyboard shortcut (Alt + Shift + P) to toggle the pinned state of the currently selected tab | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/screenshot&quot;&gt;Test Screenshot Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate screenshot functionality in the chrome.tabs api. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getViews
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.captureVisibleTab
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/tabs/zoom&quot;&gt;Tabs Zoom API Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension allows the user to explore features of the new tabs zoom api. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getZoom
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getZoomSettings
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onZoomChange
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.setZoom
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.setZoomSettings
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/topsites/basic&quot;&gt;Top Sites&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Shows the top sites in a browser action | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;topSites.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/topsites/magic8ball&quot;&gt;NTP prototyping extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;extension to prototype new NTP designs | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;topSites.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/ttsEngine/console_tts_engine&quot;&gt;Console TTS Engine&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A &quot;silent&quot; TTS engine that prints text to a small window rather than synthesizing speech. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getViews
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;ttsEngine.onSpeak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;ttsEngine.onStop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/water_alarm_notification&quot;&gt;Drink Water Event Popup&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates usage and features of the event page by reminding user to drink water | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.clearAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.onAlarm
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.onButtonClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webNavigation/basic&quot;&gt;WebNavigation Tech Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstration of the WebNavigation extension API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onBeforeNavigate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onCommitted
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onCompleted
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onCreatedNavigationTarget
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onErrorOccurred
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onHistoryStateUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onReferenceFragmentUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webview/capturevisibleregion&quot;&gt;Webview transparency&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Sample of the webview.captureVisibleRegion api | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webview/comm_demo_app&quot;&gt;WebView Extension Communications Demo: App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/webview/comm_demo_ext&quot;&gt;WebView Extension Communications Demo: Extension&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Provides content scripts to an app hosting a WebView. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.id
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnectExternal
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/api/windows/merge_windows&quot;&gt;Merge Windows&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Merges all of the browser&#39;s windows into the current window | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getAllInWindow
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.move
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/apps/background-simple&quot;&gt;Simple Background App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/apps/calculator/app&quot;&gt;Calculator&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A simple calculator. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/app_launcher&quot;&gt;App Launcher&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Get access to your apps in a browser action | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;management.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;management.launchApp
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/buildbot&quot;&gt;Chromium Buildbot Monitor&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the status of the Chromium buildbot in the toolbar. Click to see more detailed status in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getViews
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/calendar&quot;&gt;Google Calendar Checker (by Google)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Quickly see the time until your next meeting from any of your calendars. Click on the button to be taken to your calendar. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;management.uninstallSelf
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.onButtonClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;notifications.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.id
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/catblock&quot;&gt;CatBlock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;I can&#39;t has cheezburger! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webRequest.onBeforeRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/catifier&quot;&gt;Catifier&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Moar cats! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.IgnoreRules
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RedirectRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeWebRequest.RequestMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/chrome_search&quot;&gt;Chromium Search&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Add support to the omnibox to search the Chromium source code. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputCancelled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputEntered
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.onInputStarted
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;omnibox.setDefaultSuggestion
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/constant_context&quot;&gt;Constant Context&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Highlights elements with keywords on developer.chrome | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/download_images&quot;&gt;Download Images&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays all webpage images and allows user to download | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;downloads.download
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/email_this_page&quot;&gt;Email this page (by Google)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension adds an email button to the toolbar which allows you to email the page link using your default mail client or Gmail. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/fx&quot;&gt;Chrome Sounds&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Enjoy a more magical and immersive experience when browsing the web using the power of sound. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onAttached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onDetached
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onSelectionChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onFocusChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/gdocs&quot;&gt;Google Document List Viewer&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates how to use OAuth to connect the Google Documents List Data API. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/gmail&quot;&gt;Google Mail Checker&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the number of unread messages in your Google Mail inbox. You can also click the button to open your inbox. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;alarms.onAlarm
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onStartup
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getAllInWindow
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onDOMContentLoaded
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onDOMContentLoaded
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onReferenceFragmentUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webNavigation.onReferenceFragmentUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.onCreated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/imageinfo&quot;&gt;Imageinfo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Get image info for images, including EXIF data | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contextMenus.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.getCurrent
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/irc/app&quot;&gt;Chromium IRC App&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/managed_bookmarks&quot;&gt;Managed Bookmarks&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Adds bookmarks configured by your system administrator to Chrome. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.getChildren
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.move
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onMoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.onRemoved
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.removeTree
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;bookmarks.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.onChanged
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/mappy&quot;&gt;Mappy&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Finds addresses in the web page you&#39;re on and pops up a map window. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;pageAction.show
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.sendMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/maps_app&quot;&gt;Google Maps&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/news&quot;&gt;News Reader (by Google)&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the latest stories from Google News in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/news_a11y&quot;&gt;News Reader&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the first 5 items from the &#39;Google News - top news&#39; RSS feed in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/news_i18n&quot;&gt;News Reader&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Displays the first 5 items from the &#39;$Google$ News - top news&#39; RSS feed in a popup. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/no_cookies&quot;&gt;No Cookies&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Removes &#39;Cookie&#39; and &#39;Set-Cookie&#39; headers. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webRequest.onBeforeSendHeaders
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;webRequest.onHeadersReceived
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/oauth_contacts&quot;&gt;Sample - OAuth Contacts&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Uses OAuth to connect to Google&#39;s contacts service and display a list of your contacts. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getBackgroundPage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.onUpdated
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.remove
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/optional_permissions&quot;&gt;Optional Permissions New Tab&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrates optional permissions in extensions | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.contains
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;permissions.request
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;topSites.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/plugin_settings&quot;&gt;Per-plugin content settings&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Customize your content setting for different plugins. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.plugins
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.clear
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.getResourceIdentifiers
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;contentSettings.ContentSetting.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/proxy_configuration&quot;&gt;Proxy Extension API Sample&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Set Chrome-specific proxies; a demonstration of Chrome&#39;s Proxy API | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeBackgroundColor
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setBadgeText
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setTitle
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.isAllowedIncognitoAccess
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;i18n.getMessage
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;proxy.onProxyError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/speak_selection&quot;&gt;Speak Selection&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Speaks the current selection out loud. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.getURL
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.onRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;extension.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.sendRequest
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;windows.getAll
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/talking_alarm_clock&quot;&gt;Talking Alarm Clock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A clock with two configurable alarms that will play a sound and speak a phrase of your choice. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.setIcon
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.connect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onConnect
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/ttsdebug&quot;&gt;TTS Debug&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Tool for developers of Chrome TTS engine extensions to help them test their engines are implementing the API correctly. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/extensions/ttsdemo&quot;&gt;TTS Demo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demo Chrome&#39;s synthesized text-to-speech capabilities. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.getVoices
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.isSpeaking
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.speak
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tts.stop
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/howto/sandbox&quot;&gt;Sandboxed Frame&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Demonstrate use of handlebars inside a sandboxed frame | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/howto/tab_shortcuts&quot;&gt;Tab Shortcuts&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Allows pinning and duplication of tabs via keyboard shortcuts. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;commands.onCommand
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.duplicate
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.update
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/analytics&quot;&gt;Event Tracking with Google Analytics&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;A sample extension which uses Google Analytics to track usage. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/broken_background_color&quot;&gt;Broken Background Color&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Fix an Extension! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/get_started&quot;&gt;Getting Started Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Build an Extension! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/get_started_complete&quot;&gt;Getting Started Example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Build an Extension! | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.PageStateMatcher
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;declarativeContent.ShowPageAction
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.onInstalled
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/getstarted&quot;&gt;Getting started example&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;This extension allows the user to change the background color of the current page. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;runtime.lastError
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.local
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.sync
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.get
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;storage.StorageArea.set
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.executeScript
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.query
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/hello_extensions&quot;&gt;Hello Extensions&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Base Level Extension | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/oauth_starter&quot;&gt;OAuth Tutorial FriendBlock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Uses OAuth to connect to Google&#39;s People API and display contacts photos. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;identity.getAuthToken
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/GoogleChrome/chrome-extensions-samples/master/tutorials/oauth_tutorial_complete&quot;&gt;OAuth Tutorial FriendBlock&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;Uses OAuth to connect to Google&#39;s People API and display contacts photos. | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;browserAction.onClicked
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;identity.getAuthToken
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;tabs.create
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TheAlgorithms/Javascript</title>
      <link>https://github.com/TheAlgorithms/Javascript</link>
      <description>&lt;p&gt;A repository for All algorithms implemented in Javascript (for educational purposes only)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - JavaScript&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TheAlgorithms/Javascript/blob/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&quot; alt=&quot;contributions welcome&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://lgtm.com/projects/g/TheAlgorithms/Javascript/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/TheAlgorithms/Javascript.svg?logo=lgtm&amp;amp;logoWidth=18&quot; alt=&quot;Language grade: JavaScript&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/TheAlgorithms/Javascript/workflows/Node%20CI/badge.svg&quot; alt=&quot;Node CI&quot;&gt; &lt;img src=&quot;https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg&quot; alt=&quot;update_directory_md&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/TheAlgorithms/Javascript.svg?label=Repo%20size&amp;amp;style=flat-square&quot; alt=&quot;&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;All algorithms implemented in JavaScript (for educational purposes only)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/TheAlgorithms/Javascript&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;These are for demonstration purposes only. There are many implementations of sorts in the JavaScript standard library that are much better for performance reasons.&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://raw.githubusercontent.com/TheAlgorithms/Javascript/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; 
&lt;h2&gt;List of Algorithms&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://raw.githubusercontent.com/TheAlgorithms/Javascript/master/DIRECTORY.md&quot;&gt;directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Algorithm Explanation&lt;/h2&gt; 
&lt;p&gt;see our &lt;a href=&quot;https://github.com/TheAlgorithms/Javascript/wiki&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qeeqbox/social-analyzer</title>
      <link>https://github.com/qeeqbox/social-analyzer</link>
      <description>&lt;p&gt;API, CLI &amp; Web App for analyzing &amp; finding a person&#39;s profile across 300+ social media websites (Detections are updated regularly)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=version&amp;amp;query=$.version&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=verified%20sites&amp;amp;query=$.websites&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=verified%20detections&amp;amp;query=$.detections&amp;amp;colorB=blue&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=build&amp;amp;query=$.build&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=test&amp;amp;query=$.test&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/blob/main/info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/info&amp;amp;label=docker&amp;amp;query=$.docker&amp;amp;colorB=green&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=%F0%9F%91%8D&amp;amp;message=!&amp;amp;color=yellow&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/tweet?text=API,%20CLI,%20and%20Web%20App%20for%20analyzing%20and%20finding%20a%20person%20profile%20across%20300%20social%20media%20websites&amp;amp;url=https://github.com/qeeqbox/social-analyzer&amp;amp;via=qeeqbox&amp;amp;hashtags=osint,pentest,javascript,nodejs,python&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;API, CLI &amp;amp; Web App for analyzing &amp;amp; finding a person&#39;s profile across +300 social media websites. It includes different string analysis and detection modules, you can choose which combination of modules to use during the investigation process.&lt;/p&gt; 
&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module intended to have less false positive and it&#39;s documented in this &lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/wiki&quot;&gt;Wiki&lt;/a&gt; link&lt;/p&gt; 
&lt;p&gt;The analysis and extracted social media information from this OSINT tool could help in investigating profiles related to suspicious or malicious activities such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Cyberbullying&quot;&gt;cyberbullying&lt;/a&gt;, &lt;a href=&quot;https://de.wikipedia.org/wiki/Cyber-Grooming&quot;&gt;cybergrooming&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyberstalking&quot;&gt;cyberstalking&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Misinformation&quot;&gt;spreading misinformation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project &lt;em&gt;is currently used by some law enforcement agencies in countries where resources are limited&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added shared detections to NodeJS Web App &amp;amp; CLI 👏&lt;/li&gt; 
 &lt;li&gt;API, CLIs &amp;amp; Web App produce: 
  &lt;ul&gt; 
   &lt;li&gt;[Detected] -&amp;gt; 0 to 100 (No-Maybe-Yes)&lt;/li&gt; 
   &lt;li&gt;[Unknown] -&amp;gt; Detection did not meet the requirement&lt;/li&gt; 
   &lt;li&gt;[Failed] -&amp;gt; Profile website did not respond&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security Testing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;-------------------------------------              ---------------------------------
|        Security Testing           |              |        Social-Analyzer        |
-------------------------------------              ---------------------------------
|   Passive Information Gathering   |     &amp;lt;--&amp;gt;     |   Find Social Media Profiles  |
|                                   |              |                               |
|    Active Information Gathering   |     &amp;lt;--&amp;gt;     |    Post Analysis Activities   |
-------------------------------------              ---------------------------------
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Find Profile WEB APP (Fast)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Find Profile WEB APP (Slow)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Profile images &lt;strong&gt;will not&lt;/strong&gt; be blurred. If you want them to be blurred, turn that option on&lt;/p&gt; 
&lt;h2&gt;(New) Find Profile CLI (Fast)&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;String &amp;amp; name analysis&lt;/li&gt; 
 &lt;li&gt;Find profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; 
 &lt;li&gt;Multi layers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; 
 &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; 
 &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; 
 &lt;li&gt;Profile screenshot, title, info and website description&lt;/li&gt; 
 &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; 
 &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; 
 &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; 
 &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; 
 &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; 
 &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; 
 &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qeeqbox/social-analyzer/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Detections&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facebook (Phone number, name or profile name)&lt;/li&gt; 
 &lt;li&gt;Gmail (example@gmail.com)&lt;/li&gt; 
 &lt;li&gt;Google (example@example.com)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install and run as web app (Linux + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo add-apt-repository ppa:mozillateam/ppa
sudo apt-get update
sudo apt-get install -y firefox-esr tesseract-ocr git
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install lodash
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as web app (Windows + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Download &amp;amp; Install firfox esr (Extended Support Release) from https://www.mozilla.org/en-US/firefox/enterprise/#download
Download &amp;amp; Install https://nodejs.org/en/download/
Download &amp;amp; Extract https://github.com/qeeqbox/social-analyzer/archive/main.zip
cd social-analyzer
npm install lodash
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as CLI (Linux + NodeJS + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo add-apt-repository ppa:mozillateam/ppa
sudo apt-get update
sudo apt-get install -y firefox-esr tesseract-ocr git
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install lodash
npm install
# If you want to list all websites use node app.js --cli --list
# Remember the following runs as FindUserProfilesFast
# You can also scan all websites using --websites &quot;all&quot;
node app.js --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;youtube pinterest tumblr&quot; --output &quot;pretty&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as CLI (Linux + Python3 + NPM + Firefox)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo add-apt-repository ppa:mozillateam/ppa
sudo apt-get update
sudo apt-get install -y firefox-esr tesseract-ocr git
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
pip3 install lxml BeautifulSoup4 tld pygments langdetect
# If you want to list all websites use python3 app.py --cli --list
# Remember the following runs as FindUserProfilesFast
# You can also scan all websites using --websites &quot;all&quot;
python3 app.py --cli --mode &quot;fast&quot; --username &quot;johndoe&quot; --websites &quot;youtube pinterest tumblr&quot; --output &quot;pretty&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as web app with a grid (docker-compose)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
docker-compose -f docker-compose.yml up --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install and run as web app (docker)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
docker build -t social-analyzer . &amp;amp;&amp;amp; docker run -p 9005:9005 -it social-analyzer
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Issues&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Make sure to update to the latest nodejs and npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Closing the app by port number&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;sudo kill -9 $(sudo lsof -t -i:9005)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Adding the generic websites detections (These need some reviewing, but I will try to add them in 2021)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; 
 &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This tool meant to be used locally (It does not have any type of Access Control)&lt;/li&gt; 
 &lt;li&gt;If you want your website to be excluded from this project, please reach out&lt;/li&gt; 
 &lt;li&gt;Make sure to download this tool from GitHub - (ONLY) ⚠️&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interviews&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://console.substack.com/p/console-37&quot;&gt;Console 37&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Articles&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.kitploit.com/2020/12/social-analyzer-api-and-web-app-for.html&quot;&gt;kitploit&lt;/a&gt; &lt;a href=&quot;https://professionalhackers.in/social-analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;professionalhackers&lt;/a&gt; &lt;a href=&quot;https://secnhack.in/social-analyzer-analyzing-finding-a-person-profiles/&quot;&gt;secnhack.in&lt;/a&gt; &lt;a href=&quot;https://www.meethackers.com/social-media-websites-social-analyzer/&quot;&gt;meethackers&lt;/a&gt; &lt;a href=&quot;https://raidforums.com/Thread-social-analyzer-An-API-for-analyzing-finding-a-person-profile-across-300-social&quot;&gt;raidforums&lt;/a&gt; &lt;a href=&quot;https://bddung.tistory.com/288&quot;&gt;bddung Blog&lt;/a&gt; &lt;a href=&quot;https://www.redpacketsecurity.com/social-analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;redpacketsecurity&lt;/a&gt; &lt;a href=&quot;https://www.hacking.reviews/2020/12/social-analyzer-api-and-web-app-for.html&quot;&gt;hacking.reviews&lt;/a&gt; &lt;a href=&quot;https://www.hacking.land/2020/12/social-analyzer-api-and-web-app-for.html&quot;&gt;hacking.land&lt;/a&gt; &lt;a href=&quot;https://securityonline.info/social-analyzer-api-for-analyzing-finding-a-person-profile-across-300-social-media-websites/&quot;&gt;securityonline&lt;/a&gt; &lt;a href=&quot;https://skynettools.com/social-analyzer-cross-reference-accounts-over-300-social-media-websites/&quot;&gt;skynettools&lt;/a&gt; &lt;a href=&quot;https://luca-mercatanti.com/2021/01/03/social-analyzer-scoprire-tutto-su-una-persona-partendo-dal-nome/&quot;&gt;luca-mercatanti&lt;/a&gt; &lt;a href=&quot;https://pentesttools.net/social-analyzer-finding-a-person-profile-across-300-social-media-sites/&quot;&gt;pentesttools.net&lt;/a&gt; &lt;a href=&quot;https://anonymousmedia.org/2020/12/26/analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;anonymousmedia.org&lt;/a&gt; &lt;a href=&quot;https://www.ddosi.com/social-analyzer/&quot;&gt;ddosi&lt;/a&gt; &lt;a href=&quot;https://tenochtitlan-sec.blogspot.com/2020/12/social-analyzer-api-and-web-app-for.html&quot;&gt;tenochtitlan-sec.blogspot&lt;/a&gt; &lt;a href=&quot;https://modernnetsec.io/social-analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;modernnetsec&lt;/a&gt; &lt;a href=&quot;https://www.haktechs.com/hacking-pentesting-tools/social-analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;haktechs&lt;/a&gt; &lt;a href=&quot;https://haxf4rall.com/2020/12/27/social-analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;haxf4rall&lt;/a&gt; &lt;a href=&quot;https://hacker-gadgets.com/blog/2020/12/27/social-analyzer-api-and-web-app-for-analyzing-and-finding-a-person-profile-across-300-social-media-websites-detections-are-updated-regularly/&quot;&gt;hacker-gadgets&lt;/a&gt; &lt;a href=&quot;https://mrhacker.co/pentest/information-gathering-pentest/social-analyzer-finding-a-person-profile-across-300-social-media-sites&quot;&gt;mrhacker.co&lt;/a&gt; &lt;a href=&quot;https://sector035.nl/articles/2021-03&quot;&gt;sector035.nl&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://qeeqbox.slack.com/messages/social-analyzer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-@qeeqbox-yellow.svg?logo=slack&amp;amp;style=flat-square&quot; alt=&quot;Generic badge&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-React</title>
      <link>https://github.com/Asabeneh/30-Days-Of-React</link>
      <description>&lt;p&gt;30 Days of React challenge is a step by step guide to learn React in 30 days. It requires HTML, CSS, and JavaScript knowledge. You should be comfortable with JavaScript before you start to React. If you are not comfortable with JavaScript check out 30DaysOfJavaScript. This is a continuation of 30 Days Of JS. This challenge may take up to 100 day…&lt;/p&gt;&lt;hr&gt;&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;Author: 
 &lt;!-- raw HTML omitted --&gt;Asabeneh Yetayeh
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; October, 2020
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;| # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------: | | 00 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; | | 01 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;JavaScript Refresher&lt;/a&gt; | | 02 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;Getting Started React&lt;/a&gt; | | 03 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/03_Day_Setting_Up/03_setting_up.md&quot;&gt;Setting Up&lt;/a&gt; | | 04 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/04_Day_Components/04_components.md&quot;&gt;Components&lt;/a&gt; | | 05 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/05_Day_Props/05_props.md&quot;&gt;Props&lt;/a&gt; | | 06 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/06_Day_Map_List_Keys/06_map_list_keys.md&quot;&gt;List, Map and Keys&lt;/a&gt; | | 07 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/07_Day_Class_Components/07_class_components.md&quot;&gt;Class Components&lt;/a&gt; | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/08_Day_States/08_states.md&quot;&gt;States&lt;/a&gt; | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/09_Day_Conditional_Rendering/09_conditional_rendering.md&quot;&gt;Conditional Rendering&lt;/a&gt; | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/10_React_Project_Folder_Structure/10_react_project_folder_structure.md&quot;&gt;React Project Folder Structure&lt;/a&gt; | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/11_Day_Events/11_events.md&quot;&gt;Events&lt;/a&gt; | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/12_Day_Forms/12_forms.md&quot;&gt;Forms&lt;/a&gt; | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/13_Day_Controlled_Versus_Uncontrolled_Input/13_uncontrolled_input.md&quot;&gt;Controlled and Uncontrolled Component&lt;/a&gt; | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/14_Day_Component_Life_Cycles/14_component_life_cycles.md&quot;&gt;Component Life Cycles&lt;/a&gt; | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/15_Third_Party_Packages/15_third_party_packages.md&quot;&gt;Third Party Packages&lt;/a&gt; | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/16_Higher_Order_Component/16_higher_order_component.md&quot;&gt;Higher Order Components&lt;/a&gt; | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/17_React_Router/17_react_router.md&quot;&gt;React Router&lt;/a&gt; | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/18_Fetch_And_Axios/18_fetch_axios.md&quot;&gt;Fetch versus Axios&lt;/a&gt; | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/19_projects/19_projects.md&quot;&gt;Projects&lt;/a&gt; | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/20_projects/20_projects.md&quot;&gt;Projects&lt;/a&gt; | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/21_Introducing_Hooks/21_introducing_hooks.md&quot;&gt;Hooks&lt;/a&gt; | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/22_Form_Using_Hooks/22_form_using_hooks.md&quot;&gt;Forms Using Hook&lt;/a&gt; | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/23_Fetching_Data_Using_Hooks/23_fetching_data_using_hooks.md&quot;&gt;Fetching Data Using Hooks&lt;/a&gt; | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/24_projects/24_projects.md&quot;&gt;Project using Hooks&lt;/a&gt; | | 25 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/25_Custom_Hooks/25_custom_hooks.md&quot;&gt;Custom Hooks&lt;/a&gt; | | 26 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/26_Context/26_context.md&quot;&gt;Context&lt;/a&gt; | | 27 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/27_Ref/27_ref.md&quot;&gt;Ref&lt;/a&gt; | | 28 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/28_project/28_project.md&quot;&gt;project&lt;/a&gt; | | 29 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/29_explore/29_explore.md&quot;&gt;Explore&lt;/a&gt; | | 30 | &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/30_conclusions/30_conclusions.md&quot;&gt;Conclusions&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-repo&quot;&gt;How to Use Repo&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#star-and-fork-this-repo&quot;&gt;Star and Fork this Repo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#clone-your-fork&quot;&gt;Clone your Fork&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#create-a-new-branch&quot;&gt;Create a New Branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#structure-exercise-solutions&quot;&gt;Structure Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#commit-exercise-solutions&quot;&gt;Commit Exercise Solutions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#update-your-fork-daily&quot;&gt;Update your Fork Daily&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#setup&quot;&gt;Setup&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#browser&quot;&gt;Browser&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of React programming challenge. In this challenge you will learn everything you need to use to develop a React application. In the end of the challenge you will get a 30DaysOfReact programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/thirtydaysofreact&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfReact&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript and React developers. Welcome to 30 Days Of React. React is a JavaScript library. I enjoy using and teaching React and I hope you will do so too. In this step by step 30 Days React challenge, you will learn React which is one of most popular user interface JavaScript libraries. React can do everything that JavaScript can do. React can be used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt;. I believe you will learn quite a lot in the next 30 days and your programming and problem solving skills will also be improved significantly.&lt;/p&gt; 
&lt;p&gt;I will use conversational English and less jargons to write this challenge. The content will be continuously updated. If you find a typo or grammar mistakes don&#39;t be surprised because I don&#39;t do any proof read before I publish it. I would recommend you to focus on the main message of the challenge instead of the English and some minor mistakes. I really appreciate if you send me pull requests for improvement and remember to pull first from master before you send pull requests. Most of the images I have used in this challenge came from 30DaysOfJavaScript challenge therefore you may need to rename file names and folders 30DaysOfReact. If you are good at arrays, loops, functions, objects, functional programming, destructuring and spreading and class then you will be able to follow the challenge properly. Otherwise, I strongly recommend you to check &lt;a href=&quot;https://github.com/Asabeneh/30-Days-Of-JavaScript&quot;&gt;30DaysOfJavaScript&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before you dive into this course, you may check the &lt;a href=&quot;https://t.me/thirtydaysofreact/992&quot;&gt;review&lt;/a&gt; of 30 Days Of React.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;To get along with the challenge you need to have the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
 &lt;li&gt;HTML, CSS and JavaScript intermediate level skill&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to Use Repo&lt;/h2&gt; 
&lt;h3&gt;Star and Fork this Repo&lt;/h3&gt; 
&lt;p&gt;Star this repo to support this work and Fork the repo to create your own copy to work from.&lt;/p&gt; 
&lt;h3&gt;Clone your Fork&lt;/h3&gt; 
&lt;p&gt;You should always work directly from your forked copy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# note that an `ssh` link is used here, but an `https` link will work the same
git clone git@github.com:username/30-Days-Of-React.git
cd 30-Days-Of-React
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create a New Branch&lt;/h3&gt; 
&lt;p&gt;To complete daily exercises, my suggestion is to create a separate branch to house your exercise folder or any other changes you make. This will keep your master branch clean at all times, which means your master will always be similar to the original master.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git checkout -b exercise-solutions # `-b` creates the branch if it does not exist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Structure Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;In your new branch, you can use files/folders to structure your solutions to daily exercises&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p solutions/day-01 # `-p` helps create nested directories
touch solutions/day-01/level1.js # touch creates a file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commit Exercise Solutions&lt;/h3&gt; 
&lt;p&gt;Commit your solutions to your Fork&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git add solutions/day-01/level1.js
git commit -m &quot;chore: exercise level1 complete&quot;
git push origin exercise-solutions # branch `exercise-solutions` was created earlier
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update your Fork Daily&lt;/h3&gt; 
&lt;p&gt;This repo will be updated daily throughout the month. When a new day&#39;s content becomes available, you can update your forked copy with the steps below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. switch to master branch
git checkout master
# 2. check if your local copy has a link to original `...Asabeneh/30-Days-Of-React.git`
git remote -v
# 3. if not, add a link to original, you can choose any name for the link or use `upstream`
git remote add upstream git@github.com:Asabeneh/30-Days-Of-React.git
# 4. check again to confirm link added
git remote -v
# 5. now you can fetch updates from original repo, assuming you named this `upstream`
git fetch upstream
# 6. merge the updates to your local master branch
git merge upstream/master master
# 7. push the merged updates to your Forked copy on GitHub
git push origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that the updates are only applied to the master branch. If you wish to update any other branch, repeat steps 6-7 with the branch name. See snippet below for &lt;code&gt;exercise-solutions&lt;/code&gt; branch&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git merge upstream/master exercise-solutions
git push origin exercise-solutions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. In addition to that basic to intermediate level HTML, CSS and JS. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using node version 12.14.0, but now the recommended version of node.js for download is 12.17.0.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;google chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut. It is good to know the shortcut too as a JavaScript and React developer you will spend much time on a browser console and don&#39;t be lazy to open it during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by comma. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments. It is recommended to use as many console.log() prints to check what is happening in your code but don&#39;t keep all console.log() tests on your code forever. Make your life easy by keeping the browser console open.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is &lt;em&gt;the structure of statements in a computer language.&lt;/em&gt; Programing languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Congratulations! You have completed the setup you need to get started with React, but before we dive into React let&#39;s do a JavaScript refresher. If you are very comfortable with JavaScript you may skip day 1 JavaScript refresher. The JavaScript refresher section is vast and it may take more than one day. From my experience people usually get stuck in React because their JavaScript knowledge is very shallow therefore to fill that gap all the necessary JavaScript features which can be used in React are covered in the JavaScript refresher section. There are many exercises but you are not required to solve them. Click &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/30-Days-Of-React/02_Day_Introduction_to_React/02_introduction_to_react.md&quot;&gt;here&lt;/a&gt; if you want skip JavaScript and jump directly into React.&lt;/p&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-React/master/01_Day_JavaScript_Refresher/01_javascript_refresher.md&quot;&gt;Day 1 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;📜 33 concepts every JavaScript developer should know.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;﻿
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;&amp;lt;img src=&quot;https://i.imgur.com/dsHmk6H.jpg&quot; alt=&quot;33 Concepts Every JS Developer Should Know&quot; width=200&quot;&amp;gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt; 33 Concepts Every JavaScript Developer Should Know 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/leonardomso&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/leonardomso.svg?style=for-the-badge&quot; alt=&quot;Follow me&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by &lt;a href=&quot;https://twitter.com/stephenthecurt&quot;&gt;Stephen Curtis&lt;/a&gt; and you can read it &lt;a href=&quot;https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href=&quot;https://blog.github.com/2018-12-13-new-open-source-projects/&quot;&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eldrinf/33-js-concepts-albanian.git&quot;&gt;Albanian&lt;/a&gt; — Eldrin Ereqi&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amrsekilly/33-js-concepts&quot;&gt;Arabic&lt;/a&gt; — Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stephentian/33-js-concepts&quot;&gt;Chinese&lt;/a&gt; — Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tiagoboeing/33-js-concepts&quot;&gt;Portuguese-BR&lt;/a&gt; — Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yjs03057/33-js-concepts.git&quot;&gt;Korean&lt;/a&gt; — Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adonismendozaperez/33-js-conceptos&quot;&gt;Spanish&lt;/a&gt; — Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ilker0/33-js-concepts&quot;&gt;Turkish&lt;/a&gt; — İlker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gumennii/33-js-concepts&quot;&gt;Russian&lt;/a&gt; — Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nguyentranchung/33-js-concepts&quot;&gt;Tiếng Việt&lt;/a&gt; — Nguyễn Trần Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lip3k/33-js-concepts&quot;&gt;Polish&lt;/a&gt; — Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/majidalavizadeh/33-js-concepts&quot;&gt;Persian&lt;/a&gt; — Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rijdz/33-js-concepts&quot;&gt;Indonesian&lt;/a&gt; — Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robinmetral/33-concepts-js&quot;&gt;French&lt;/a&gt; — Robin Métral&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vikaschauhan/33-js-concepts&quot;&gt;Hindi&lt;/a&gt; — Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimitrisZx/33-js-concepts&quot;&gt;Greek&lt;/a&gt; — Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oimo23/33-js-concepts&quot;&gt;Japanese&lt;/a&gt; — oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/burhannn/33-js-concepts&quot;&gt;German&lt;/a&gt; — burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation&quot;&gt;Ukrainian&lt;/a&gt; — Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ududsha/33-js-concepts&quot;&gt;Sinhala&lt;/a&gt; — Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Donearm/33-js-concepts&quot;&gt;Italian&lt;/a&gt; - Gianluca Fiore&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack&quot;&gt;Call Stack&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types&quot;&gt;Primitive Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types&quot;&gt;Value Types and Reference Types&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing&quot;&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof&quot;&gt;== vs === vs typeof&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope&quot;&gt;Function Scope, Block Scope and Lexical Scope&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement&quot;&gt;Expression vs Statement&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces&quot;&gt;IIFE, Modules and Namespaces&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop&quot;&gt;Message Queue and Event Loop&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe&quot;&gt;setTimeout, setInterval and requestAnimationFrame&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines&quot;&gt;JavaScript Engines&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers&quot;&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees&quot;&gt;DOM and Layout Trees&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes&quot;&gt;Factories and Classes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind&quot;&gt;this, call, apply and bind&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances&quot;&gt;new, Constructor, instanceof and Instances&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain&quot;&gt;Prototype Inheritance and Prototype Chain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign&quot;&gt;Object.create and Object.assign&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter&quot;&gt;map, reduce, filter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-and-state-mutation&quot;&gt;Pure Functions, Side Effects and State Mutation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures&quot;&gt;Closures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions&quot;&gt;High Order Functions&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion&quot;&gt;Recursion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators&quot;&gt;Collections and Generators&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises&quot;&gt;Promises&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait&quot;&gt;async/await&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures&quot;&gt;Data Structures&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation&quot;&gt;Expensive Operation and Big O Notation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms&quot;&gt;Algorithms&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse&quot;&gt;Inheritance, Polymorphism and Code Reuse&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns&quot;&gt;Design Patterns&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe&quot;&gt;Partial Applications, Currying, Compose and Pipe&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code&quot;&gt;Clean Code&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec&quot;&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4&quot;&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://web.archive.org/web/20180701233338/https://www.valentinog.com/blog/js-execution-context-call-stack/&quot;&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0&quot;&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Call_stack&quot;&gt;Call Stack — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0&quot;&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf&quot;&gt;How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o&quot;&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w6QGEiQceOM&quot;&gt;Javascript: the Call Stack explained — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=W8AeMrVtFLY&quot;&gt;The JS Call Stack Explained In 9 Minutes — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jT0USJeNFEA&quot;&gt;JavaScript Execution Stack — Codecademy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=w7QWQlkLY_s&quot;&gt;What is the Call Stack? — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Q2sFmqvpBe0&quot;&gt;The Call Stack — Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD&quot;&gt;Understanding JavaScript Execution — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Nt-qa_LlUH0&quot;&gt;The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ygA5U7Wgsg8&quot;&gt;La PILA DE EJECUCIÓN (Call Stack) de JavaScript — La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2012/04/number-encoding.html&quot;&gt;How numbers are encoded in JavaScript — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascripts-number-type-8d59199db1b6&quot;&gt;What You Need to Know About JavaScript Number Type — Max Wizard K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/&quot;&gt;What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/&quot;&gt;The Secret Life of JavaScript Primitives — Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flow.org/en/docs/types/primitives/&quot;&gt;Primitive Types — Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d4nyll/not-everything-in-javascript-is-an-object&quot;&gt;(Not) Everything in JavaScript is an Object — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values&quot;&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12&quot;&gt;Diving Deeper in JavaScripts Objects — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c&quot;&gt;The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9ooYYRLdg_g&quot;&gt;JavaScript Reference vs Primitive Types — Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HsbWQsSCE5Y&quot;&gt;JavaScript Primitive Types — Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-_mDyqm2oU&quot;&gt;Value Types and Reference Types in JavaScript — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qw3j0A3DIzQ&quot;&gt;JavaScript Primitive Data Types — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=MqHDDtVYJRI&quot;&gt;Everything you never wanted to know about JavaScript numbers — Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=B4Bbmei_thw&quot;&gt;What are variables in Javascript? — JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cC65D2q5f8I&quot;&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0&quot;&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.zsoltnagy.eu/understand-value-and-reference-types-in-javascript/&quot;&gt;Understand Value and Reference Types in JavaScript — Zsolt Nagy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c&quot;&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851&quot;&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18&quot;&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293&quot;&gt;Grasp “By Value” and “By Reference” in JavaScript — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0&quot;&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/&quot;&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value&quot;&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f&quot;&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=E-dAnFdq8k8&quot;&gt;Javascript Pass by Value vs Pass by Reference — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fD0t_DKREbE&quot;&gt;JavaScript Value vs Reference Types — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AvkyOrWkuQc&quot;&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23&quot;&gt;What you need to know about Javascript&#39;s Implicit Coercion — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839&quot;&gt;JavaScript Type Coercion Explained — Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-coercion-explained-545c895213d3&quot;&gt;Javascript Coercion Explained — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript&quot;&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed/types%20%26%20grammar&quot;&gt;You Don&#39;t Know JS: Types &amp;amp; Grammar, 1st Edition [Book] — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thedevs.network/blog/type-coercion-in-javascript-and-why-everyone-gets-it-wrong&quot;&gt;Type Coercion in JavaScript, and why everyone gets it wrong.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t&quot;&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=b04Q_vyqEG8&quot;&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=z4-8wMSPJyI&quot;&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=C5fr0LZLMAs&quot;&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ei4nb49GKo&quot;&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a&quot;&gt;JavaScript Double Equals vs. Triple Equals — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bytearcher.com/articles/equality-comparison-operator-javascript/&quot;&gt;Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/javascript/tutorial/double-equals-and-coercion-in-javascript&quot;&gt;== vs === JavaScript: Double Equals and Coercion — AJ Meyghani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.impressivewebs.com/why-use-triple-equals-javascipt/&quot;&gt;Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript&quot;&gt;What is the difference between == and === in JavaScript? — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object&quot;&gt;Why javascript&#39;s typeof always return &quot;object&quot;? — Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://tobyho.com/2011/01/28/checking-types-in-javascript/&quot;&gt;Checking Types in Javascript — Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://webbjocke.com/javascript-check-data-types/&quot;&gt;How to better check data types in JavaScript — Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html&quot;&gt;Checking for the Absence of a Value in JavaScript — Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ol_su88I3kw&quot;&gt;JavaScript - The typeof operator — Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qPYhTPt_SbQ&quot;&gt;Javascript typeof operator — DevDelight&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures&quot;&gt;You Don&#39;t Know JS Yet: Scope &amp;amp; Closures, 2nd Edition [Book] — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99&quot;&gt;JavaScript Functions — Understanding The Basics — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/2017-04-11-es6-var-let-and-const-the-battle-between-function-scope-and-block-scope/&quot;&gt;The battle between Function Scope and Block Scope — Marius Herring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html&quot;&gt;Emulating Block Scope in JavaScript — Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe&quot;&gt;The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://edgecoders.com/function-scopes-and-block-scopes-in-javascript-25bbd7f293d7&quot;&gt;Function Scopes and Block Scopes in JavaScript — Samer Buna&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://ryanmorr.com/understanding-scope-and-context-in-javascript/&quot;&gt;Understanding Scope and Context in JavaScript | Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/javascript-scope-closures/&quot;&gt;JavaScript Scope and Closures — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/&quot;&gt;Understanding Scope in JavaScript — Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://speakingjs.com/es5/ch16.html&quot;&gt;Speaking JavaScript - Variables: Scopes, Environments, and Closures — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-scope-in-javascript&quot;&gt;Understanding Scope in JavaScript ― Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0&quot;&gt;When to use a function declaration vs. a function expression ― Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai&quot;&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and “this” ― Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SBwoFkRjZvE&quot;&gt;What Makes Javascript Weird ... and Awesome pt. 4 — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dhp57T3p760&quot;&gt;Variable Scope in JavaScript — Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aK_nuUAdr8E&quot;&gt;JavaScript Block Scope and Function Scope — mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhNA0r10MmA&quot;&gt;What the Heck is Lexical Scope? — NWCalvank&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2&quot;&gt;All you need to know about Javascript&#39;s Expressions, Statements and Expression Statements — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/function-expressions-vs-declarations/&quot;&gt;Function Expressions vs Function Declarations — Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38&quot;&gt;JavaScript Function — Declaration vs Expression — Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052&quot;&gt;Function Declarations vs. Function Expressions — Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/&quot;&gt;Function Declarations vs. Function Expressions — Anguls Croll&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=WVyCrI1cHi8&quot;&gt;Expressions vs. Statements in JavaScript — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3jDpNGJkupA&quot;&gt;JavaScript - Expression vs. Statement — WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=oB5rH_9bqAI&quot;&gt;Function Statements and Function Expressions — Codeacademy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6&quot;&gt;Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hashnode.com/post/do-es6-modules-make-the-case-of-iifes-obsolete-civ96wet80scqgc538un20es0&quot;&gt;Do ES6 Modules make the case of IIFEs obsolete?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/&quot;&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Modules ― Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&quot;&gt;ES modules: A cartoon deep-dive — Lin Clark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/understanding-es6-modules/&quot;&gt;Understanding ES6 Modules — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/&quot;&gt;An overview of ES6 Modules in JavaScript — Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-modules-in-depth&quot;&gt;ES6 Modules in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b&quot;&gt;ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc&quot;&gt;JavaScript Modules: A Beginner’s Guide — Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/modules&quot;&gt;Using JavaScript modules on the web&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-modules-from-iifes-to-commonjs-to-es6-modules-4d10c16f55d4&quot;&gt;JavaScript Modules: From IIFEs to CommonJS to ES6 Modules — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5&quot;&gt;IIFE: Immediately Invoked Function Expressions — Parwinder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=3cbiZV4H22c&quot;&gt;Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=I5EntfMeIIQ&quot;&gt;Understanding JavaScript IIFE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=_3oSWwapPKQ&quot;&gt;JavaScript Modules: ES6 Import and Export — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aQr2bV1BPyE&quot;&gt;ES6 - Modules — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=fIP4pjAqCtQ&quot;&gt;ES6 Modules in the Real World — Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5P04OK6KlXA&quot;&gt;ES6 Modules — TempleCoding&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4&quot;&gt;JavaScript Event Loop Explained — Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&quot;&gt;The JavaScript Event Loop: Explained — Erin Sweson-Healey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.wptutor.io/web/js/javascript-event-loop&quot;&gt;What is the Event Loop in Javascript — WP Tutor.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40&quot;&gt;Understanding JS: The Event Loop — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.zeolearn.com/magazine/understanding-the-javascript-event-loop&quot;&gt;Understanding the JavaScript Event Loop — Ashish Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.likeagirl.io/what-the-heck-is-event-loop-1e414fccef49&quot;&gt;Event Loop in Javascript — Manjula Dube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-event-loop/&quot;&gt;The JavaScript Event Loop — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&quot;&gt;How JavaScript works: Event loop — Alexander Zlatkov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot;&gt;Tasks, microtasks, queues and schedules — Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8&quot;&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy — Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif&quot;&gt;JavaScript Visualized: Event Loop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot;&gt;What the heck is the event loop anyway? | JSConf EU — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XzXIMZMN9k4&quot;&gt;JavaScript Event Loop — ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6MXRNXXgP_0&quot;&gt;I&#39;m stuck in an Event Loop — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=cCOL7MC4Pl0&quot;&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Eqq2Rb7LzYE&quot;&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/settimeout-setinterval&quot;&gt;setTimeout and setInterval — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9&quot;&gt;Why not to use setInterval — Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://develoger.com/settimeout-vs-setinterval-cff85142555b&quot;&gt;setTimeout VS setInterval — Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/using-requestanimationframe/&quot;&gt;Using requestAnimationFrame — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.javascriptkit.com/javatutors/requestanimationframe.shtml&quot;&gt;Understanding JavaScript&#39;s requestAnimationFrame() — JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/&quot;&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6bPKyl8WYWI&quot;&gt;Javascript: How setTimeout and setInterval works — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=TbCgGWe8LN8&quot;&gt;setTimeout and setInterval in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0VVJSvlUgtg&quot;&gt;JavaScript Timers — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mVKfrWCOB60&quot;&gt;JavaScript setTimeOut and setInterval Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.softwaremag.com/javascript-engines/&quot;&gt;JavaScript Engines — Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964&quot;&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775&quot;&gt;Understanding V8’s Bytecode — Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.mediacurrent.com/blog/brief-history-googles-v8-javascript-engine/&quot;&gt;A Brief History of Google’s V8 Javascript Engine — Clair Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553&quot;&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/shapes-ics&quot;&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://v8.dev/blog/elements-kinds&quot;&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=5nmpokoRaZI&quot;&gt;JavaScript Engines: The Good Parts™ — Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4&quot;&gt;Programming with JS: Bitwise Operations — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5&quot;&gt;Using JavaScript’s Bitwise Operators in Real Life — ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.w3resource.com/javascript/operators/bitwise-operator.php&quot;&gt;JavaScript Bitwise Operators — w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3&quot;&gt;Bitwise Operators in Javascript — Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04&quot;&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript — Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript&quot;&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mesu75PTDC8&quot;&gt;JavaScript Bitwise Operators — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/introduction-to-the-dom&quot;&gt;How To Understand and Modify the DOM in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d&quot;&gt;What’s the Document Object Model, and why you should know how to use it — Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html&quot;&gt;JavaScript DOM Tutorial with Example — Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/dom/&quot;&gt;What is the DOM? — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://zellwk.com/blog/dom-traversals/&quot;&gt;Traversing the DOM with JavaScript — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/14_dom.html&quot;&gt;Eloquent JavaScript [Book] — The Document Object Model&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/dom-nodes&quot;&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e&quot;&gt;How to traverse the DOM in Javascript — Vojislav Grujić&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&quot;&gt;Render Tree Construction — Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://bitsofco.de/what-exactly-is-the-dom/&quot;&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bouhm/a-vanilla-js-guide-on-mastering-the-dom-3l9b&quot;&gt;A Vanilla JS Guide On Mastering the DOM — Brian Pak&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FIORjGvT0kk&quot;&gt;JavaScript DOM — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=0ik6X4DJKCc&quot;&gt;JavaScript DOM Crash Course — Traversy Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript&quot;&gt;How To Use Classes in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677&quot;&gt;Javascript Classes — Under The Hood — Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.javascriptjanuary.com/blog/es6-classes&quot;&gt;ES6 Classes — Nathaniel Foster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes&quot;&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd&quot;&gt;Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://atendesigngroup.com/blog/factory-functions-javascript&quot;&gt;Factory Functions in JavaScript — Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9&quot;&gt;The Factory Pattern in JS ES6 — SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15&quot;&gt;Class vs Factory function: exploring the way forward — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a&quot;&gt;How ES6 classes really work and how to build your own — Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jordankasper.com/understanding-super-in-javascript&quot;&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm&quot;&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jpegXpQpb3o&quot;&gt;JavaScript Factory Functions — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ImwrezYhw4w&quot;&gt;Factory Functions in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=R7-IwpH80UE&quot;&gt;Javascript Tutorial Function Factories — Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b&quot;&gt;Grokking call(), apply() and bind() methods in JavaScript — Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/niladrisekhardutta/how-to-call-apply-and-bind-in-javascript-8i1jca6jp&quot;&gt;How-to: call() , apply() and bind() in JavaScript — Niladri Sekhar Dutta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/&quot;&gt;JavaScript’s Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/this-keyword-call-apply-bind-javascript/&quot;&gt;WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb&quot;&gt;Javascript: call(), apply() and bind() — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b&quot;&gt;The difference between call / apply / bind — Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce&quot;&gt;What the hack is call, apply, bind in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/&quot;&gt;Mastering &#39;this&#39; in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo&quot;&gt;JavaScript’s apply, call, and bind explained by hosting a cookout — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb&quot;&gt;How AND When to use bind, call, and apply in Javascript — Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.hacksparrow.com/javascript-bind-vs-apply-and-call.html&quot;&gt;JavaScript .bind() vs .apply() and .call() — Hack Sparrow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind&quot;&gt;bind() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.brew.com.hk/what-is-this-in-javascript/&quot;&gt;What is &#39;this&#39; in JavaScript? — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja&quot;&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) — Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8&quot;&gt;Understanding the “this” Keyword in JavaScript — Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8&quot;&gt;How to understand the keyword this and context in JavaScript — Lukas Gisder-Dubé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1&quot;&gt;What the heck is this in Javascript? — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam&quot;&gt;This and Bind In Javascript — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf&quot;&gt;3 Techniques for Maintaining Your Sanity Using &quot;This&quot; in JavaScript — Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa&quot;&gt;Mastering the JavaScript &quot;this&quot; Keyword — Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n&quot;&gt;This binding in JavaScript – 4. New binding — Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp&quot;&gt;A quick intro to &#39;this&#39; in JavaScript — Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/cat__logic/explaining-javascript-this-to-my-cat-1kig&quot;&gt;Explaining JavaScript &#39;this&#39; to my cat — Andrey K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g&quot;&gt;A conversation with the &#39;this&#39; keyword in Javascript — Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jscurious.com/what-are-call-apply-and-bind-in-javascript/&quot;&gt;What are call(), apply() and bind() in JavaScript — Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=c0mLRpw-9rI&quot;&gt;JavaScript call, apply and bind — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AYVYxezrMWA&quot;&gt;JavaScript Practical Applications of Call, Apply and Bind functions— techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uy0NOXLBraE&quot;&gt;JavaScript (call, bind, apply) — curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AOSYY1_np_4&quot;&gt;Understanding Functions and &#39;this&#39; In The World of ES2017 — Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GhbhD1HR5vk&quot;&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uBdH0iB1VDM&quot;&gt;JS Function Methods call(), apply(), and bind() — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e&quot;&gt;JavaScript For Beginners: the ‘new’ operator — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c&quot;&gt;Let’s demystify JavaScript’s ‘new’ keyword — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/constructor-new&quot;&gt;Constructor, operator &quot;new&quot; — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://css-tricks.com/understanding-javascript-constructors/&quot;&gt;Understanding JavaScript Constructors — Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions&quot;&gt;Use Constructor Functions — Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://2ality.com/2017/08/type-right.html&quot;&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appendto.com/2016/10/what-is-the-instanceof-operator-in-javascript/&quot;&gt;What Is the Instanceof Operator in JavaScript — appendTo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac&quot;&gt;Function and Object, instances of each other — Kiro Risk&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b&quot;&gt;Javascript : Prototype vs Class — Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-prototype-cb29d82b8809&quot;&gt;JavaScript Prototype — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/sandeepranjan2007/prototype-in-javascipt-knbve0lqo&quot;&gt;Prototype in Javascript — Sandeep Ranjan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/prototypes-in-javascript-5bba2990e04b&quot;&gt;Prototypes in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872&quot;&gt;Prototype in JavaScript: it’s quirky, but here’s how it works — Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain&quot;&gt;Inheritance and the prototype chain — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2&quot;&gt;Understanding JavaScript: Prototype and Inheritance — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d&quot;&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl&quot;&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript — Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/prototype-inheritance&quot;&gt;Prototypal Inheritance — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript&quot;&gt;How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e&quot;&gt;Master JavaScript Prototypes &amp;amp; Inheritance — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/tree/1st-ed/this%20%26%20object%20prototypes&quot;&gt;You Don&#39;t Know JS: this &amp;amp; Object Prototypes, 1st Edition [Book] — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4&quot;&gt;JavaScript’s Prototypal Inheritance Explained Using CSS — Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gist.github.com/derhuerst/a585c4916b1c361cc6f0&quot;&gt;Prototypal Inheritance in JavaScript — Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.competa.com/blog/classical-prototypical-inheritance-javascript/&quot;&gt;Classical and Prototypical Inheritance in JavaScript — Danny Cornelisse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance&quot;&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/danny/intro-to-prototypal-inheritance---js-9di&quot;&gt;Intro To Prototypal Inheritance — Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.brew.com.hk/classes-in-javascript-explained/&quot;&gt;Classes in JavaScript - Explained — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm&quot;&gt;Let’s Build Prototypal Inheritance in JS — var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b&quot;&gt;Objects, Prototypes and Classes in JavaScript — Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/shoupn/javascript-prototypes-and-object-creation-2onh&quot;&gt;JavaScript Prototypal Inheritance and Object Creation — Nick Shoup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg&quot;&gt;The magical world of JavaScript prototypes — Belén&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4&quot;&gt;Understanding Prototypal Inheritance In JavaScript — Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie&quot;&gt;Objects and Prototypes in JavaScript — Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=sOrtAjyk4lQ&quot;&gt;Javascript Prototype Inheritance — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7oNWNlMrkpc&quot;&gt;JavaScript Prototype Inheritance Explained pt. I — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uIlj6_z_wL8&quot;&gt;JavaScript Prototype Inheritance Explained pt. II — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qMO-LTOrJaE&quot;&gt;JavaScript Prototype Inheritance Explained — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=G6l5CHl67HQ&quot;&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=phwzuiJJPpQ&quot;&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4jb4AYEyhRc&quot;&gt;Object Oriented JavaScript - Prototype — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2rkEbcptR64&quot;&gt;Prototype in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=oCwCcNvaXAQ&quot;&gt;JavaScript Using Prototypes — O&#39;Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XskMWBXNbp0&quot;&gt;A Beginner&#39;s Guide to Javascript&#39;s Prototype — Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hS_WqkyUah8&quot;&gt;Prototypes in Javascript - p5.js Tutorial — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/object-create-in-javascript-fa8674df6ed2&quot;&gt;Object.create in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html&quot;&gt;Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html&quot;&gt;Basic Inheritance with Object.create — Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.geeksforgeeks.org/object-create-javascript/&quot;&gt;Object.create() In JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358&quot;&gt;Understanding the difference between Object.create() and the new operator — Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/&quot;&gt;JavaScript Object Creation: Patterns and Best Practices — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/dealing-with-objects/&quot;&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/copying-objects-in-javascript&quot;&gt;Copying Objects in JavaScript ― Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-object-assign-bc9696dcbb6e&quot;&gt;JavaScript: Object.assign() — Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/how-to-clone-javascript-object/&quot;&gt;How to deep clone a JavaScript Object — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nas5w/object-assignment-vs-primitive-assignment-in-javascript-for-beginners-2moi&quot;&gt;Object Assignment vs. Primitive Assignment in JavaScript for Beginners — Nick Scialli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/vzing/object-create-when-and-why-to-use-20m9&quot;&gt;Object.create(): When and Why to Use — VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=aw7NfYhR5rc&quot;&gt;Object.assign() explained — Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9Ky4X6inpi4&quot;&gt;Object.assign() Method — techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d&quot;&gt;JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4&quot;&gt;Learn map, filter and reduce in Javascript — João Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter&quot;&gt;JavaScript’s Map, Reduce, and Filter — Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209&quot;&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4&quot;&gt;JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf&quot;&gt;Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464&quot;&gt;Understanding map, filter and reduce in Javascript — Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f&quot;&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/functional-javascript-map-filter-reduce/&quot;&gt;JavaScript: Map, Filter, Reduce — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/&quot;&gt;Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc&quot;&gt;JavaScript: Arrow Functions for Beginners — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26&quot;&gt;When (and why) you should use ES6 arrow functions — and when you shouldn’t — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946&quot;&gt;JavaScript — Learn &amp;amp; Understand Arrow Functions — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83&quot;&gt;(JavaScript )=&amp;gt; Arrow functions — sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@panderson.dev/javascript-reduce-79aab078da23&quot;&gt;Javascript.reduce() — Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://gofore.com/en/why-you-should-replace-foreach/&quot;&gt;Why you should replace forEach with map and filter in JavaScript — Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d&quot;&gt;Simplify your JavaScript – Use .map(), .reduce(), and .filter() — Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/&quot;&gt;JavaScript’s Reduce Method Explained By Going On a Diet — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160&quot;&gt;Difference between map, filter and reduce in JavaScript — Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/map-filter-reduce-ebbed4be4201&quot;&gt;Map⇄Filter⇄Reduce↻ — ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6&quot;&gt;Finding Your Way With .map() — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26&quot;&gt;How to write your own map, filter and reduce functions in JavaScript — Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/&quot;&gt;How to Manipulate Arrays in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://itnext.io/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f&quot;&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript — Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/pickleat/map-filter-and-reduce-2efb&quot;&gt;.map(), .filter(), and .reduce() — Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan&quot;&gt;Map/Filter/Reduce Crash Course — Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47&quot;&gt;Map, Filter and Reduce – Animated — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209&quot;&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard — Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24&quot;&gt;How to Use JavaScript’s .map, .filter, and .reduce — Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://towardsdatascience.com/javascript-performance-test-for-vs-for-each-vs-map-reduce-filter-find-32c1113f19d7&quot;&gt;Javascript performance test - for vs for each vs (map, reduce, filter, find) — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2&quot;&gt;Using .map(), .filter() and .reduce() properly — Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj&quot;&gt;Mastering the JavaScript Reduce method ✂️ — sanderdebr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=UXiYii0Y7Nw&quot;&gt;Map, Filter and Reduce — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vytzLlY_wmU&quot;&gt;Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=qTeeVd8hOFY&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=gIm9xLYudL0&quot;&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zYBeEPxNSbw&quot;&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce — Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=4qWlqD0yYTU&quot;&gt;[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=6sQDTgOqh-I&quot;&gt;Arrow functions in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s&quot;&gt;Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s&quot;&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl98eZpkp-c&quot;&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s&quot;&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=IXp06KekEjM&quot;&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=P4RAFdZDn3M&quot;&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects and State Mutation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c&quot;&gt;Javascript and Functional Programming — Pure Functions — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976&quot;&gt;Master the JavaScript Interview: What is a Pure Function? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c&quot;&gt;JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/&quot;&gt;Pure functions in JavaScript — @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/functional-programming-pure-functions/&quot;&gt;Functional Programming: Pure Functions — Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://appdividend.com/2017/04/10/pure-functions-in-javascript/&quot;&gt;Pure Functions In Javascript — Krunal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alistapart.com/article/making-your-javascript-pure&quot;&gt;Making your JavaScript Pure — Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://slemgrim.com/mutate-or-not-to-mutate/&quot;&gt;To mutate, or not to mutate, in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa&quot;&gt;Arrays, Objects and Mutations — Federico Knüssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310&quot;&gt;The State of Immutability — Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/&quot;&gt;How to deal with dirty side effects in your pure functional JavaScript — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/preventing-sideeffects-javascript&quot;&gt;Preventing Side Effects in JavaScript — David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/wielding-pure-functions-in-javascript-and-function-composition&quot;&gt;Wielding Pure Functions in JavaScript and Function Composition — Peleke Sengstacke &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://wsvincent.com/javascript-pure-functions/&quot;&gt;JavaScript: Pure Functions — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1&quot;&gt;Functional programming paradigms in modern JavaScript: Pure functions — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3&quot;&gt;Understanding Javascript Mutation and Pure Functions — Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08&quot;&gt;Functional-ish JavaScript — Daniel Brain&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dZ41D6LDSBg&quot;&gt;Pure Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Jh_Uzqzz_wM&quot;&gt;Pure Functions - Functional Programming in JavaScript — Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=frT3H-eBmPc&quot;&gt;JavaScript Pure Functions — Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=AHbRVJzpB54&quot;&gt;JavaScript Pure vs Impure Functions Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Pure Functions - Programação Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8&quot;&gt;I never understood JavaScript closures — Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/closure&quot;&gt;Closure — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/understand-javascript-closures-with-ease/&quot;&gt;Understand JavaScript Closures With Ease — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-javascript-closures-da6aab330302&quot;&gt;Understanding JavaScript Closures — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understand-closures-in-javascript-d07852fa51e7&quot;&gt;Understand Closures in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4&quot;&gt;A simple guide to help you understand closures in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach&quot;&gt;Understanding JavaScript Closures: A Practical Approach — Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b&quot;&gt;Understanding JavaScript: Closures — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b&quot;&gt;How to use JavaScript closures with confidence — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example&quot;&gt;JavaScript closures by example — tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-closures-and-scope-3784c75b9290&quot;&gt;JavaScript — Closures and Scope — Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7&quot;&gt;Discover the power of closures in JavaScript — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://code.likeagirl.io/simplified-javascript-getting-started-with-closures-f40f65317d00&quot;&gt;Simplified JavaScript: Getting Started with Closures — Code Like A Girl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/&quot;&gt;The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://reallifejs.com/the-meat/getting-closure/&quot;&gt;Getting Closure — RealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9&quot;&gt;Closure, Currying and IIFE in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda&quot;&gt;Understanding Closures in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e&quot;&gt;A basic guide to Closures in JavaScript — Parathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/steelvoltage/closures-using-memoization-3597&quot;&gt;Closures: Using Memoization — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232&quot;&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript — Ashutosh K Singh &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/stereobooster/demystify-closures-5g42&quot;&gt;Demystify Closures — stereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj&quot;&gt;Scopes and Closures - JavaScript Concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d&quot;&gt;Understanding Closures in JavaScript — Matt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://whatthefuck.is/closure&quot;&gt;whatthefuck.is · A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/brandonleboeuf/closure-in-javascript-49n7&quot;&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XTAzsODSCsM&quot;&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=71AtaJpJHw0&quot;&gt;Javascript Closure — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=CQqwU2Ixu-U&quot;&gt;Closures — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-xqJo5VRP4A&quot;&gt;Closures in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yiEeiMN2Khs&quot;&gt;JavaScript Closures 101: What is a closure? — JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=1JsJx1x35c0&quot;&gt;Closures — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=-rLrGAXK8WE&quot;&gt;JavaScript Closures — CodeWorkr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/05_higher_order.html&quot;&gt;Higher-Order Functions — Eloquent JavaScript [Book]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/higher-order-functions-javascript/&quot;&gt;Higher-Order Functions in JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528&quot;&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a&quot;&gt;First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.lullabot.com/articles/higher-order-functions-in-javascript&quot;&gt;Higher Order Functions in JavaScript — John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://javascriptissexy.com/tag/higher-order-functions/&quot;&gt;Higher-order Functions — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.zsoltnagy.eu/higher-order-functions-in-javascript/&quot;&gt;Higher Order Functions in JavaScript — Zsolt Nagy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://derickbailey.com/2015/10/21/fun-with-higher-order-functions-in-javascript/&quot;&gt;Fun With Higher Order Functions In JavaScript — Derick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/pedroapfilho/high-order-functions&quot;&gt;Just a reminder on how to use high order functions — Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad&quot;&gt;Understanding Higher-Order Functions in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nas5w/what-is-a-higher-order-function-5gk9&quot;&gt;What is a Higher-Order Function? — Nick Scialli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb&quot;&gt;Higher Order Functions - A pragmatic approach — emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=rRgD1yVwIvE&quot;&gt;JavaScript Higher Order Functions &amp;amp; Arrays — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=BMUiFMZr7vk&quot;&gt;Higher Order Functions — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=dTlpYnmBW9I&quot;&gt;Higher Order Functions in Javascript — Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=GYRMNp1SKXA&quot;&gt;Higher Order Iterators in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H4awPsyugS0&quot;&gt;Higher Order Functions in JavaScript — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=7E8ctomPQJw&quot;&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=28MXziDZkE4&quot;&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f&quot;&gt;Recursion in JavaScript — Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03&quot;&gt;Understanding Recursion in JavaScript — Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea&quot;&gt;Learn and Understand Recursion in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/recursion-functional-javascript/&quot;&gt;Recursion in Functional JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/programming-with-js-recursion-31371e2bf808&quot;&gt;Programming with JS: Recursion — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/simov/anonymous-recursion-in-javascript&quot;&gt;Anonymous Recursion in JavaScript — simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/&quot;&gt;Recursion, iteration and tail calls in JS — loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.thecodingdelight.com/understanding-recursion-javascript/&quot;&gt;Understanding Recursion in JavaScript with Confidence — Jay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b&quot;&gt;Intro to Recursion — Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datadriveninvestor/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3&quot;&gt;Accio Recursion!: Your New Favorite JavaScript Spell — Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m&quot;&gt;Recursion Explained (with Examples) — Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VtG0WAUvq2w&quot;&gt;Recursion In JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=k7-N8R0-KY4&quot;&gt;Recursion — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vLhHyGTkjCs&quot;&gt;Recursion and Recursive Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=kGXVsd8pBLw&quot;&gt;Recursion: Recursion() — JS Monthly — Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=uyjsR9eNTIw&quot;&gt;Recursive Function in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mv9NEXX1VHc&quot;&gt;What on Earth is Recursion? — Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9NO5dXSlbv8&quot;&gt;Javascript Tutorial 34: Introduction To Recursion — codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=FmiQr4nfoPQ&quot;&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 — Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-collections/&quot;&gt;ES6 In Depth: Collections — Jason Orendorff&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/&quot;&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth&quot;&gt;ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/sets-introduction/&quot;&gt;Introduction to Sets in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/maps-introduction/&quot;&gt;Introduction to Maps in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/map-set-weakmap-weakset&quot;&gt;Map, Set, WeakMap and WeakSet — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk&quot;&gt;Maps in ES6 - A Quick Guide — Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a&quot;&gt;ES6 — Set vs Array — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373&quot;&gt;ES6 — Map vs Object — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.deadcoderising.com/es6-working-with-sets-in-javascript/&quot;&gt;ES6: Working with Sets in JavaScript — Dead Code Rising&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b&quot;&gt;Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6&quot;&gt;How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e&quot;&gt;What You Should Know About ES6 Maps — Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-maps-in-depth&quot;&gt;ES6 Maps in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator&quot;&gt;Generator — MDN web docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e&quot;&gt;What are JavaScript Generators and how to use them — Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5&quot;&gt;Understanding JavaScript Generators With Examples — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://davidwalsh.name/es6-generators&quot;&gt;The Basics of ES6 Generators — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/parkroolucas/here-s-everything-you-d-want-to-know-about-es2015-generators-13an&quot;&gt;Here&#39;s everything you&#39;d want to know about ES2015+ generators — Lucas Chen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224&quot;&gt;An Introduction to JavaScript Generators — Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ycohYSx5h9w&quot;&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=m4abICrldQI&quot;&gt;The Differences between ES6 Maps and Sets — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO07THdLWQo&quot;&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/javascript-promises-for-dummies&quot;&gt;JavaScript Promises for Dummies ― Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1&quot;&gt;Understanding promises in JavaScript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261&quot;&gt;Master the JavaScript Interview: What is a Promise? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/overview-javascript-promises/&quot;&gt;An Overview of JavaScript Promises — Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de&quot;&gt;How to use Promises in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51&quot;&gt;Implementing Promises In JavaScript — Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138&quot;&gt;JavaScript: Promises explained with simple real life analogies — Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_promises.html&quot;&gt;Promises for Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/&quot;&gt;JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918&quot;&gt;ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a&quot;&gt;A Simple Guide to ES6 Promises — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/the-es6-promises-87a979ab27e4&quot;&gt;The ES6 Promises — Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;ES6 Promises in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3&quot;&gt;Playing with Javascript Promises: A Comprehensive Approach — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8&quot;&gt;How to Write a JavaScript Promise — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c&quot;&gt;A Coding Writer’s Guide: An Introduction To ES6 Promises — Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/full_stackgeek/asynchronous-javascript-callbacks-closures-promises-353h&quot;&gt;Asynchronous JavaScript | Callbacks | Closures | Promises — Full Stack Geek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/itnext/reverse-engineering-understand-promises-1jfc&quot;&gt;Understanding Promises in JavaScript — Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zellwk/converting-callbacks-to-promises-nhn&quot;&gt;Converting callbacks to promises — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa&quot;&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet — Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/boywithsilverwings/promises-javascript-concepts-293c&quot;&gt;Promises - JavaScript concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/iggredible/javascript-promise-101-3idl&quot;&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 — Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/sunnysingh/simplify-javascript-promises-4djb&quot;&gt;Simplify JavaScript Promises — Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-low-down-on-promises-af4a96bbb95f&quot;&gt;The Lowdown on Promises — Aphinya Dechalert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/peterklingelhofer/promises-in-javascript-3h5k&quot;&gt;Promises in JavaScript — Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/somedood/best-practices-for-es6-promises-36da&quot;&gt;Best Practices for ES6 Promises — Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=vQ3MoXnKfuQ&quot;&gt;Let&#39;s Learn ES6 - Promises — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XJEHuBZQ5dU&quot;&gt;JavaScript ES6 / ES2015 Promises — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=2d7s3spWAzo&quot;&gt;Promises — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=f8IgdnYIwOU&quot;&gt;Error Handling Promises in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=QO4NXhWo_NM&quot;&gt;Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;async/await — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c&quot;&gt;Understanding async/await in Javascript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://eloquentjavascript.net/11_async.html&quot;&gt;Asynchronous Programming — Eloquent JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://alligator.io/js/async-functions/&quot;&gt;Exploring Async/Await Functions in JavaScript — Alligator.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/tutorials/asynchronous-javascript-using-async-await&quot;&gt;Asynchronous Javascript using async/await — Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://flaviocopes.com/javascript-async-await/&quot;&gt;Modern Asynchronous JavaScript with async/await — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.toptal.com/javascript/asynchronous-javascript-async-await-tutorial&quot;&gt;Asynchronous JavaScript: From Callback Hell to Async and Await — Demir Selmanovic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a&quot;&gt;Javascript — ES8 Introducing async/await Functions — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c&quot;&gt;How to escape async/await hell — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt;Understanding JavaScript’s async await — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://techbrij.com/javascript-async-await-parallel-sequence&quot;&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://exploringjs.com/es6/ch_async.html&quot;&gt;Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.pusher.com/promises-async-await/&quot;&gt;From JavaScript Promises to Async/Await: why bother? — Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/flow-control-callbacks-promises-async-await/&quot;&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dzone.com/articles/javascript-promises-and-why-asyncawait-wins-the-ba&quot;&gt;JavaScript: Promises and Why Async/Await Wins the Battle — Nick Parsons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/how-to-master-async-await-with-this-real-world-example-19107e7558ad&quot;&gt;How To Master Async/Await With This Real World Example — Adrian Hajdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda&quot;&gt;How to improve your asynchronous Javascript code with async and await — Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6&quot;&gt;Making Fetches Easy With Async Await — Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9&quot;&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises — Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b&quot;&gt;Asynchronous Operations in JavaScript — Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/joeyhub/async-await-a-slight-design-flaw-2h2j&quot;&gt;Async/await: A slight design flaw. — Joey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789&quot;&gt;JavaScript: Promises or async-await — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22&quot;&gt;Async / Await: From Zero to Hero — Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke&quot;&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=9YkUCxvaLEk&quot;&gt;Async + Await — Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=SrNQS8J67zc&quot;&gt;Asynchrony: Under the Hood — Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6&quot;&gt;async/await in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx&quot;&gt;async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=krAYA4rvbdA&quot;&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 — Colt Steele&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c&quot;&gt;Data Structures in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays&quot;&gt;Data Structures: Objects and Arrays ― Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&quot;&gt;Data structures in JavaScript — Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d&quot;&gt;Playing with Data Structures in Javascript — Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9&quot;&gt;The Little Guide of Queue in JavaScript — Germán Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/barretlee/algorithms&quot;&gt;All algorithms writing with JavaScript in the book &#39;Algorithms Fourth Edition&#39;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/nzakas/computer-science-in-javascript&quot;&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/jamiebuilds/itsy-bitsy-data-structures&quot;&gt;All the things you didn&#39;t know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/miku86/series/3259&quot;&gt;JavaScript Data Structures: 40 Part Series — miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5&quot;&gt;Data Structures: Understanding Graphs — Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61&quot;&gt;Data Structures Two Ways: Linked List (Pt 1) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60&quot;&gt;Data Structures Two Ways: Linked List (Pt 2) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn&quot;&gt;Graph Data Structures Explained in JavaScript — Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=PylQlISSH8U&amp;amp;list=PLujX4CIdBGCa-65N3uN8CDbUMrYsHBrz-&quot;&gt;Algorithms in JavaScript — Seth Koch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa&quot;&gt;Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ&quot;&gt;Data Structures and Algorithms in JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Ymh_AurrMbA&quot;&gt;Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b&quot;&gt;Big O Notation in Javascript — César Antón Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b&quot;&gt;Time Complexity/Big O Notation — Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051&quot;&gt;Big O in JavaScript — Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html&quot;&gt;Big O Search Algorithms in JavaScript — Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.jenniferbland.com/time-complexity-analysis-in-javascript/&quot;&gt;Time Complexity Analysis in JavaScript — Jennifer Bland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c&quot;&gt;Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o&quot;&gt;An Introduction to Big O Notation — Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=HgA5VOFan5E&quot;&gt;JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=KatlvCFHPRo&quot;&gt;Essential Big O for JavaScript Developers — Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=ALl86xJiTD8&quot;&gt;Big O Notation - Time Complexity Analysis — WebTunings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/Crizstian/data-structure-and-algorithms-with-ES6&quot;&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms&quot;&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://www.thatjsdude.com/interview/js1.html&quot;&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038&quot;&gt;Algorithms in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158&quot;&gt;JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/felipernb/algorithms.js&quot;&gt;Atwood&#39;s Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/idosela/algorithms-in-javascript&quot;&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3&quot;&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://javascript.info/class-inheritance&quot;&gt;Class inheritance, super — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance&quot;&gt;Inheritance in JavaScript — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f&quot;&gt;Inheritance in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/simple-inheritance-javascript/&quot;&gt;Simple Inheritance with JavaScript — David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-inheritance-25fe61ab9f85&quot;&gt;JavaScript — Inheritance, delegation patterns and Object linking — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/&quot;&gt;Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/yld-engineering-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2&quot;&gt;Program Like Proteus — A beginner’s guide to polymorphism in Javascript — Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/&quot;&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=yXlFR81tDBM&quot;&gt;Inheritance in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RBLIm5LMrmc&quot;&gt;JavaScript ES6 Classes and Inheritance — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=zdovG9cuEBA&quot;&gt;Polymorphism in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know&quot;&gt;4 JavaScript Design Patterns You Should Know — Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15&quot;&gt;JavaScript Design Patterns – Beginner&#39;s Guide to Mobile Web Development — Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81&quot;&gt;JavaScript Design Patterns — Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://seesparkbox.com/foundry/javascript_design_patterns&quot;&gt;Javascript Design Patterns: What They Are &amp;amp; How To Use Them — Patrick Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd&quot;&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/fbeline/Design-Patterns-JS&quot;&gt;All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8&quot;&gt;The Power of the Module Pattern in JavaScript — jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://addyosmani.com/resources/essentialjsdesignpatterns/book/&quot;&gt;Learning JavaScript Design Patterns — Addy Osmani &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e&quot;&gt;Design Patterns for Developers using JavaScript pt. I — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39&quot;&gt;Design Patterns for Developers using JavaScript pt. II — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca&quot;&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd&quot;&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! — Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p&quot;&gt;JavaScript Design Patterns - Factory Pattern — KristijanFištrek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd&quot;&gt;JavaScript Design Pattern — Module Pattern - Factory Pattern — Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/better-programming/design-patterns-null-object-5ee839e37892&quot;&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/strategy-pattern-5oh&quot;&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/francescoxx/adapter-pattern-5bjk&quot;&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732&quot;&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/bytebodger/in-defense-of-defensive-programming-k45&quot;&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.udacity.com/course/javascript-design-patterns--ud989&quot;&gt;JavaScript Design Patterns — Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=hO7mzO83N1Q&quot;&gt;JavaScript Patterns for 2017 — Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.codementor.io/michelre/use-function-composition-in-javascript-gkmxos5mj&quot;&gt;Use function composition in JavaScript — Rémi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.benestudio.co/currying-in-javascript-es6-540d2ad09400&quot;&gt;Currying in JavaScript ES6 — Adam Bene&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b&quot;&gt;Composition and Currying Elegance in JavaScript — Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10&quot;&gt;Functional JavaScript: Function Composition For Every Day Use — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f&quot;&gt;Functional Composition: compose() and pipe() — Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://busypeoples.github.io/post/functional-composing-javascript/&quot;&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/&quot;&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/&quot;&gt;Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://vanslaars.io/post/create-pipe-function/&quot;&gt;Function Composition in JavaScript with Pipe — Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://developer.telerik.com/featured/practical-functional-javascript-ramda/&quot;&gt;Practical Functional JavaScript with Ramda — Andrew D&#39;Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574&quot;&gt;The beauty in Partial Application, Currying, and Function Composition — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8&quot;&gt;Curry or Partial Application? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://benalman.com/news/2012/09/partial-application-in-javascript/&quot;&gt;Partial Application in JavaScript — Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://hackernoon.com/partial-application-of-functions-dbe7d9b80760&quot;&gt;Partial Application of Functions — Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/javascript-currying-vs-partial-application-4db5b2442be8&quot;&gt;Currying vs Partial Application — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;http://raganwald.com/2015/04/01/partial-application.html&quot;&gt;Partial Application in ECMAScript 2015 — Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://joecortopassi.com/articles/functional-composition-in-javascript/&quot;&gt;Functional Composition in Javascript — Joe Cortopassi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536&quot;&gt;So You Want to be a Functional Programmer pt. I — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a&quot;&gt;So You Want to be a Functional Programmer pt. II — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7&quot;&gt;So You Want to be a Functional Programmer pt. III — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49&quot;&gt;So You Want to be a Functional Programmer pt. IV — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a&quot;&gt;So You Want to be a Functional Programmer pt. V — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch3.md&quot;&gt;Functional-Light JavaScript Chapter 3: Managing Function Inputs — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84&quot;&gt;An introduction to the basic principles of Functional Programming — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa&quot;&gt;Concepts of Functional Programming in Javascript — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064&quot;&gt;An Introduction to Functional Programming Style in JavaScript — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71&quot;&gt;A practical guide to writing more functional JavaScript — Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj&quot;&gt;A simple explanation of functional pipe in JavaScript — Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Wl2ejJOqHUU&quot;&gt;Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jigHxo9YR30&quot;&gt;JavaScript Functional Programing: Compose — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=mth5WpEc4Qs&quot;&gt;Function Composition - Functional JavaScript — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Uam37AlzPYw&quot;&gt;JavaScript Function Composition Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=VGB9HbL1GHk&quot;&gt;Let&#39;s code with function composition — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=DzLkRsUN2vE&quot;&gt;Partial Application vs. Currying — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=jkebgHEcvac&quot;&gt;JavaScript Partial Application — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot;&gt;Clean Code concepts adapted for JavaScript — Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://blog.risingstack.com/javascript-clean-coding-best-practices-node-js-at-scale/&quot;&gt;JavaScript Clean Coding Best Practices — András Tóth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b&quot;&gt;Function parameters in JavaScript Clean Code — Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://codeburst.io/keeping-your-code-clean-d30bcffd1a10&quot;&gt;Keeping your code clean — Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://www.sitepoint.com/modern-javascript-best-practices/&quot;&gt;Best Practices for Using Modern JavaScript Syntax — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://github.com/cross-js/cross-js&quot;&gt;best practices for cross node/web development - Jimmy Wärting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/ganderzz/on-writing-clean-code-57cm&quot;&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k&quot;&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm&quot;&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href=&quot;https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4&quot;&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=Mus_vwhTCq0&quot;&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href=&quot;https://www.youtube.com/watch?v=RR_dQ4sBSBM&quot;&gt;Clean Code: Functions(Part 1) - Beau teaches&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ebazhanov/linkedin-skill-assessments-quizzes</title>
      <link>https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes</link>
      <description>&lt;p&gt;Full reference of linkedin skill assessments, linkedin test, questions and answers (aws-lambda, rest-api, javascript, react, git, html, jquery, mongodb, java, css, python, machine-learning, power-poin, excel ...) ответы на квиз, LinkedIn quiz lösungen, linkedin quiz las respuestas&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Linkedin Quiz Answers, Skill Assessments Test&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/#contributors-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/all_contributors-237-orange.svg?style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository is for those looking for answers to the LinkedIn assessment quiz questions or willing to help others by contributing to the tests. Or possibly you would like to create your first pull request and be added as a contributor. Whatever is your goal - you are always welcome here!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| Linkedin-quiz-questions | | Status | | ---------------------------------------------------------------------------- | --------------- | ------------------------------ | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-illustrator/adobe-illustrator-quiz.md&quot;&gt;Adobe-Illustrator&lt;/a&gt; | =&amp;gt; 51 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/adobe-photoshop/adobe-photoshop-quiz.md&quot;&gt;Adobe-Photoshop&lt;/a&gt; | =&amp;gt; 36 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/agile-methodologies/agile-methodologies-quiz.md&quot;&gt;Agile Methodologies&lt;/a&gt; | =&amp;gt; 76 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/android/android-quiz.md&quot;&gt;Android&lt;/a&gt; | =&amp;gt; 44 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/angularjs/angularjs-quiz.md&quot;&gt;AngularJs&lt;/a&gt; | =&amp;gt; 15 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/aws/aws-quiz.md&quot;&gt;AWS&lt;/a&gt; | =&amp;gt; 28 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/aws-lambda/aws-lambda-quiz.md&quot;&gt;AWS-Lambda&lt;/a&gt; :fire: | =&amp;gt; 44 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/bash/bash-quiz.md&quot;&gt;Bash&lt;/a&gt; | =&amp;gt; 53 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c%23/c-sharp-quiz.md&quot;&gt;C#&lt;/a&gt; | =&amp;gt; 48 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c%2B%2B/c%2B%2Bquiz.md&quot;&gt;C++&lt;/a&gt; | =&amp;gt; 33 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/c-(programming-language)/c-quiz.md&quot;&gt;C (Programming Language)&lt;/a&gt; | =&amp;gt; 25 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/css/css-quiz.md&quot;&gt;CSS&lt;/a&gt; | =&amp;gt; 54 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/django/django-quiz.md&quot;&gt;Django&lt;/a&gt; | =&amp;gt; 48 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/dotnet-framework/dotnet-framework-quiz.md&quot;&gt;.NET Framework&lt;/a&gt; | =&amp;gt; 37 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/git/git-quiz.md&quot;&gt;Git&lt;/a&gt; :star: | =&amp;gt; 90 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/google-analytics/google-analytics-quiz.md&quot;&gt;Google Analytics&lt;/a&gt; | =&amp;gt; 65 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/google-cloud-platform/gcp-quiz.md&quot;&gt;Google Cloud Platform (GCP)&lt;/a&gt; | =&amp;gt; 27 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/hadoop/hadoop-quiz.md&quot;&gt;Hadoop&lt;/a&gt; | =&amp;gt; 18 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/html/html-quiz.md&quot;&gt;HTML&lt;/a&gt; | =&amp;gt; 61 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/java/java-quiz.md&quot;&gt;Java&lt;/a&gt; | =&amp;gt; 64 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/javascript/javascript-quiz.md&quot;&gt;Javascript&lt;/a&gt; | =&amp;gt; 69 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/jquery/jquery-quiz.md&quot;&gt;jQuery&lt;/a&gt; :open_mouth: | =&amp;gt; 50 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/json/json-quiz.md&quot;&gt;JSON&lt;/a&gt; | =&amp;gt; 51 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/machine-learning/machine-learning-quiz.md&quot;&gt;Machine Learning&lt;/a&gt; | =&amp;gt; 67 questions | answers required | | Kotlin | =&amp;gt; 0 questions | NO question and NO answers yet | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/matlab/matlab-quiz.md&quot;&gt;MATLAB&lt;/a&gt; | =&amp;gt; 45 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/maven/maven-quiz.md&quot;&gt;Maven&lt;/a&gt; :fire: | =&amp;gt; 34 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-azure/microsoft-azure-quiz.md&quot;&gt;Microsoft Azure&lt;/a&gt; | =&amp;gt; 44 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-excel/microsoft-excel-quiz.md&quot;&gt;Microsoft Excel&lt;/a&gt; | =&amp;gt; 48 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-power-bi/microsoft-power-bi-quiz.md&quot;&gt;Microsoft Power BI&lt;/a&gt; | =&amp;gt; 26 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-power-point/microsoft-power-point-quiz.md&quot;&gt;Microsoft Power Point&lt;/a&gt; | =&amp;gt; 21 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-project/microsoft-project-quiz.md&quot;&gt;Microsoft Project&lt;/a&gt; | =&amp;gt; 41 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/microsoft-word/microsoft-word-quiz.md&quot;&gt;Microsoft Word&lt;/a&gt; | =&amp;gt; 42 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/mongodb/mongodb-quiz.md&quot;&gt;MongoDB&lt;/a&gt; | =&amp;gt; 46 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/mysql/mysql-quiz.md&quot;&gt;MySQL&lt;/a&gt; | =&amp;gt; 64 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/node.js/node.js-quiz.md&quot;&gt;node.js&lt;/a&gt; | =&amp;gt; 40 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/nosql/nosql-quiz.md&quot;&gt;NoSQL&lt;/a&gt; | =&amp;gt; 43 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/objective-c/objective-c-quiz.md&quot;&gt;objective-c&lt;/a&gt; | =&amp;gt; 33 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/oop/object-oriented-programming-quiz.md&quot;&gt;OOP&lt;/a&gt; | =&amp;gt; 50 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/php/php-quiz.md&quot;&gt;PHP&lt;/a&gt; | =&amp;gt; 29 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/python/python-quiz.md&quot;&gt;Python&lt;/a&gt; | =&amp;gt; 67 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/r/r-quiz.md&quot;&gt;R&lt;/a&gt; | =&amp;gt; 29 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/react/reactjs-quiz.md&quot;&gt;React.js&lt;/a&gt; :rose: | =&amp;gt; 51 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/rest-api/rest-api-quiz.md&quot;&gt;REST API&lt;/a&gt; :+1: | =&amp;gt; 34 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/scala/scala-quiz.md&quot;&gt;Scala&lt;/a&gt; | =&amp;gt; 25 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/seo/search-engine-optimization-quiz.md&quot;&gt;Search Engine Optimization (SEO)&lt;/a&gt; | =&amp;gt; 30 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/sharepoint/sharepoint-quiz.md&quot;&gt;SharePoint&lt;/a&gt; | =&amp;gt; 29 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/swift/swift-quiz.md&quot;&gt;Swift&lt;/a&gt; | =&amp;gt; 48 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/t-sql/t-sql-quiz.md&quot;&gt;Transact-SQL (T-SQL)&lt;/a&gt; | =&amp;gt; 28 questions | with answers | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/vba/vba-quiz.md&quot;&gt;Visual Basic for Applications (VBA)&lt;/a&gt; | =&amp;gt; 11 questions | answers required | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/windows-server/windows-server-quiz.md&quot;&gt;Windows Server&lt;/a&gt; | =&amp;gt; 46 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/wordpress/wordpress-quiz.md&quot;&gt;WordPress&lt;/a&gt; | =&amp;gt; 42 questions | partially answered | | &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/xml/xml-quiz.md&quot;&gt;XML&lt;/a&gt; | =&amp;gt; 21 questions | answers required |&lt;/p&gt; 
&lt;p&gt;:point_right: If you want to improve your skills on another test platform &lt;a href=&quot;https://www.pluralsight.com/product/skill-iq&quot;&gt;&lt;strong&gt;Pluralsight IQ Skill&lt;/strong&gt;&lt;/a&gt; find &lt;strong&gt;questions and answers&lt;/strong&gt; in &lt;strong&gt;@Timo Körner&lt;/strong&gt; &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-test&quot;&gt;repository&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;| Pluralsight IQ Skill quiz | Status | | ----------------------------------------------------------------------------------------------------------------------------------- | ---------- | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/angular.md&quot;&gt;Angular&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/angularjs.md&quot;&gt;AngularJs&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/aws_big_data.md&quot;&gt;Aws Big Data&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/aws_machine_learning.md&quot;&gt;Aws Machine Learning&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/building_websites.md&quot;&gt;Building Websites&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/building_web_apps_with_react.md&quot;&gt;Building Web Apps with React&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/java.md&quot;&gt;Java&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/javascript.md&quot;&gt;Javascript&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/mysql.md&quot;&gt;Mysql&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/powershell.md&quot;&gt;Powershell&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_core.md&quot;&gt;Python Core&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_data_analysis.md&quot;&gt;Python Data Analysis&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_applied_data_mining.md&quot;&gt;Python applied Data Mining&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_web_scraping.md&quot;&gt;Python Web Scraping&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_exploratory_data_analysis.md&quot;&gt;Python Exploratory Data Analysis&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_clean_data.md&quot;&gt;Python Clean Data&lt;/a&gt; | 18 answers | | &lt;a href=&quot;https://github.com/tik9/pluralsight-skill-tests/blob/master/python_data_visualization.md&quot;&gt;Python Data Visualization&lt;/a&gt; | 18 answers |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Format&lt;/h2&gt; 
&lt;p&gt;We recommend formatting files using &lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt; code formatter. Prettier comes installed with the IDE &lt;a href=&quot;https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/code.visualstudio.com&quot;&gt;Vscode&lt;/a&gt; which we recommend for preparing the md files. It works on all OS. If you want to run it independently, get &lt;strong&gt;npm&lt;/strong&gt; and:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run format
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments&quot;&gt;&lt;img src=&quot;https://starchart.cc/Ebazhanov/linkedin-quiz-assessments.svg&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alpinejs/alpine</title>
      <link>https://github.com/alpinejs/alpine</link>
      <description>&lt;p&gt;A rugged, minimal framework for composing JavaScript behavior in your markup.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Alpine.js&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/bundlephobia/minzip/alpinejs&quot; alt=&quot;npm bundle size&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/alpinejs&quot; alt=&quot;npm version&quot;&gt; &lt;a href=&quot;https://alpinejs.codewithhugo.com/chat/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alpine.js offers you the reactive and declarative nature of big frameworks like Vue or React at a much lower cost.&lt;/p&gt; 
&lt;p&gt;You get to keep your DOM, and sprinkle in behavior as you see fit.&lt;/p&gt; 
&lt;p&gt;Think of it like &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind&lt;/a&gt; for JavaScript.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: This tool&#39;s syntax is almost entirely borrowed from &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; (and by extension &lt;a href=&quot;https://angularjs.org/&quot;&gt;Angular&lt;/a&gt;). I am forever grateful for the gift they are to the web.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Translated documentation&lt;/h2&gt; 
&lt;p&gt;| Language | Link for documentation | | --- | --- | | Arabic | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ar.md&quot;&gt;&lt;strong&gt;التوثيق باللغة العربية&lt;/strong&gt;&lt;/a&gt; | | Chinese Traditional | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.zh-TW.md&quot;&gt;&lt;strong&gt;繁體中文說明文件&lt;/strong&gt;&lt;/a&gt; | | German | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.de.md&quot;&gt;&lt;strong&gt;Dokumentation in Deutsch&lt;/strong&gt;&lt;/a&gt; | | Indonesian | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.id.md&quot;&gt;&lt;strong&gt;Dokumentasi Bahasa Indonesia&lt;/strong&gt;&lt;/a&gt; | | Japanese | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ja.md&quot;&gt;&lt;strong&gt;日本語ドキュメント&lt;/strong&gt;&lt;/a&gt; | | Portuguese | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.pt.md&quot;&gt;&lt;strong&gt;Documentação em Português&lt;/strong&gt;&lt;/a&gt; | | Russian | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ru.md&quot;&gt;&lt;strong&gt;Документация на русском&lt;/strong&gt;&lt;/a&gt; | | Spanish | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.es.md&quot;&gt;&lt;strong&gt;Documentación en Español&lt;/strong&gt;&lt;/a&gt; | | Turkish | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.tr.md&quot;&gt;&lt;strong&gt;Türkçe Dokümantasyon&lt;/strong&gt;&lt;/a&gt; | | Français | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.fr.md&quot;&gt;&lt;strong&gt;Documentation en Français&lt;/strong&gt;&lt;/a&gt; | | Korean | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/README.ko.md&quot;&gt;&lt;strong&gt;한국어 문서&lt;/strong&gt;&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;From CDN:&lt;/strong&gt; Add the following script to the end of your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js&quot; defer&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That&#39;s it. It will initialize itself.&lt;/p&gt; 
&lt;p&gt;For production environments, it&#39;s recommended to pin a specific version number in the link to avoid unexpected breakage from newer versions. For example, to use version &lt;code&gt;2.8.0&lt;/code&gt; (latest):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.0/dist/alpine.min.js&quot; defer&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;From npm:&lt;/strong&gt; Install the package from npm.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npm i alpinejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include it in your script.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import &#39;alpinejs&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For IE11 support&lt;/strong&gt; Use the following scripts instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script nomodule src=&quot;https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine-ie11.min.js&quot; defer&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The pattern above is the &lt;a href=&quot;https://philipwalton.com/articles/deploying-es2015-code-in-production-today/&quot;&gt;module/nomodule pattern&lt;/a&gt; that will result in the modern bundle automatically loaded on modern browsers, and the IE11 bundle loaded automatically on IE11 and other legacy browsers.&lt;/p&gt; 
&lt;h2&gt;Use&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Dropdown/Modal&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ open: false }&quot;&amp;gt;
    &amp;lt;button @click=&quot;open = true&quot;&amp;gt;Open Dropdown&amp;lt;/button&amp;gt;

    &amp;lt;ul
        x-show=&quot;open&quot;
        @click.away=&quot;open = false&quot;
    &amp;gt;
        Dropdown Body
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Tabs&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ tab: &#39;foo&#39; }&quot;&amp;gt;
    &amp;lt;button :class=&quot;{ &#39;active&#39;: tab === &#39;foo&#39; }&quot; @click=&quot;tab = &#39;foo&#39;&quot;&amp;gt;Foo&amp;lt;/button&amp;gt;
    &amp;lt;button :class=&quot;{ &#39;active&#39;: tab === &#39;bar&#39; }&quot; @click=&quot;tab = &#39;bar&#39;&quot;&amp;gt;Bar&amp;lt;/button&amp;gt;

    &amp;lt;div x-show=&quot;tab === &#39;foo&#39;&quot;&amp;gt;Tab Foo&amp;lt;/div&amp;gt;
    &amp;lt;div x-show=&quot;tab === &#39;bar&#39;&quot;&amp;gt;Tab Bar&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can even use it for non-trivial things: &lt;em&gt;Pre-fetching a dropdown&#39;s HTML content on hover.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ open: false }&quot;&amp;gt;
    &amp;lt;button
        @mouseenter.once=&quot;
            fetch(&#39;/dropdown-partial.html&#39;)
                .then(response =&amp;gt; response.text())
                .then(html =&amp;gt; { $refs.dropdown.innerHTML = html })
        &quot;
        @click=&quot;open = true&quot;
    &amp;gt;Show Dropdown&amp;lt;/button&amp;gt;

    &amp;lt;div x-ref=&quot;dropdown&quot; x-show=&quot;open&quot; @click.away=&quot;open = false&quot;&amp;gt;
        Loading Spinner...
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Learn&lt;/h2&gt; 
&lt;p&gt;There are 14 directives available to you:&lt;/p&gt; 
&lt;p&gt;| Directive | Description | | --- | --- | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-data&quot;&gt;&lt;code&gt;x-data&lt;/code&gt;&lt;/a&gt; | Declares a new component scope. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-init&quot;&gt;&lt;code&gt;x-init&lt;/code&gt;&lt;/a&gt; | Runs an expression when a component is initialized. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-show&quot;&gt;&lt;code&gt;x-show&lt;/code&gt;&lt;/a&gt; | Toggles &lt;code&gt;display: none;&lt;/code&gt; on the element depending on expression (true or false). | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-bind&quot;&gt;&lt;code&gt;x-bind&lt;/code&gt;&lt;/a&gt; | Sets the value of an attribute to the result of a JS expression. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-on&quot;&gt;&lt;code&gt;x-on&lt;/code&gt;&lt;/a&gt; | Attaches an event listener to the element. Executes JS expression when emitted. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-model&quot;&gt;&lt;code&gt;x-model&lt;/code&gt;&lt;/a&gt; | Adds &quot;two-way data binding&quot; to an element. Keeps input element in sync with component data. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-text&quot;&gt;&lt;code&gt;x-text&lt;/code&gt;&lt;/a&gt; | Works similarly to &lt;code&gt;x-bind&lt;/code&gt;, but will update the &lt;code&gt;innerText&lt;/code&gt; of an element. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-html&quot;&gt;&lt;code&gt;x-html&lt;/code&gt;&lt;/a&gt; | Works similarly to &lt;code&gt;x-bind&lt;/code&gt;, but will update the &lt;code&gt;innerHTML&lt;/code&gt; of an element. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-ref&quot;&gt;&lt;code&gt;x-ref&lt;/code&gt;&lt;/a&gt; | Convenient way to retrieve raw DOM elements out of your component. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-if&quot;&gt;&lt;code&gt;x-if&lt;/code&gt;&lt;/a&gt; | Remove an element completely from the DOM. Needs to be used on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-for&quot;&gt;&lt;code&gt;x-for&lt;/code&gt;&lt;/a&gt; | Create new DOM nodes for each item in an array. Needs to be used on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-transition&quot;&gt;&lt;code&gt;x-transition&lt;/code&gt;&lt;/a&gt; | Directives for applying classes to various stages of an element&#39;s transition. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-spread&quot;&gt;&lt;code&gt;x-spread&lt;/code&gt;&lt;/a&gt; | Allows you to bind an object of Alpine directives to an element for better reusability. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#x-cloak&quot;&gt;&lt;code&gt;x-cloak&lt;/code&gt;&lt;/a&gt; | This attribute is removed when Alpine initializes. Useful for hiding pre-initialized DOM. |&lt;/p&gt; 
&lt;p&gt;And 6 magic properties:&lt;/p&gt; 
&lt;p&gt;| Magic Properties | Description | | --- | --- | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#el&quot;&gt;&lt;code&gt;$el&lt;/code&gt;&lt;/a&gt; | Retrieve the root component DOM node. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#refs&quot;&gt;&lt;code&gt;$refs&lt;/code&gt;&lt;/a&gt; | Retrieve DOM elements marked with &lt;code&gt;x-ref&lt;/code&gt; inside the component. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#event&quot;&gt;&lt;code&gt;$event&lt;/code&gt;&lt;/a&gt; | Retrieve the native browser &quot;Event&quot; object within an event listener. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#dispatch&quot;&gt;&lt;code&gt;$dispatch&lt;/code&gt;&lt;/a&gt; | Create a &lt;code&gt;CustomEvent&lt;/code&gt; and dispatch it using &lt;code&gt;.dispatchEvent()&lt;/code&gt; internally. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#nexttick&quot;&gt;&lt;code&gt;$nextTick&lt;/code&gt;&lt;/a&gt; | Execute a given expression AFTER Alpine has made its reactive DOM updates. | | &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/#watch&quot;&gt;&lt;code&gt;$watch&lt;/code&gt;&lt;/a&gt; | Will fire a provided callback when a component property you &quot;watched&quot; gets changed. |&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&lt;strong&gt;Want your logo here? &lt;a href=&quot;https://twitter.com/calebporzio&quot;&gt;DM on Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Community Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alpinejs.codewithhugo.com/newsletter/&quot;&gt;AlpineJS Weekly Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryangjchandler/spruce&quot;&gt;Spruce (State Management)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SimoTod/alpine-turbolinks-adapter&quot;&gt;Turbolinks Adapter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KevinBatdorf/alpine-magic-helpers&quot;&gt;Alpine Magic Helpers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ryangjchandler/awesome-alpine&quot;&gt;Awesome Alpine&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Directives&lt;/h3&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-data&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;{ foo: &#39;bar&#39; }&quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;[object literal]&quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-data&lt;/code&gt; declares a new component scope. It tells the framework to initialize a new component with the following data object.&lt;/p&gt; 
&lt;p&gt;Think of it like the &lt;code&gt;data&lt;/code&gt; property of a Vue component.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Extract Component Logic&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can extract data (and behavior) into reusable functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;dropdown()&quot;&amp;gt;
    &amp;lt;button x-on:click=&quot;open&quot;&amp;gt;Open&amp;lt;/button&amp;gt;

    &amp;lt;div x-show=&quot;isOpen()&quot; x-on:click.away=&quot;close&quot;&amp;gt;
        // Dropdown
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
    function dropdown() {
        return {
            show: false,
            open() { this.show = true },
            close() { this.show = false },
            isOpen() { return this.show === true },
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;For bundler users&lt;/strong&gt;, note that Alpine.js accesses functions that are in the global scope (&lt;code&gt;window&lt;/code&gt;), you&#39;ll need to explicitly assign your functions to &lt;code&gt;window&lt;/code&gt; in order to use them with &lt;code&gt;x-data&lt;/code&gt; for example &lt;code&gt;window.dropdown = function () {}&lt;/code&gt; (this is because with Webpack, Rollup, Parcel etc. &lt;code&gt;function&lt;/code&gt;&#39;s you define will default to the module&#39;s scope not &lt;code&gt;window&lt;/code&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can also mix-in multiple data objects using object destructuring:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{...dropdown(), ...tabs()}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-init&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;{ foo: &#39;bar&#39; }&quot; x-init=&quot;foo = &#39;baz&#39;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;...&quot; x-init=&quot;[expression]&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-init&lt;/code&gt; runs an expression when a component is initialized.&lt;/p&gt; 
&lt;p&gt;If you wish to run code AFTER Alpine has made its initial updates to the DOM (something like a &lt;code&gt;mounted()&lt;/code&gt; hook in VueJS), you can return a callback from &lt;code&gt;x-init&lt;/code&gt;, and it will be run after:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-init=&quot;() =&amp;gt; { // we have access to the post-dom-initialization state here // }&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-show&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-show=&quot;open&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-show=&quot;[expression]&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-show&lt;/code&gt; toggles the &lt;code&gt;display: none;&lt;/code&gt; style on the element depending if the expression resolves to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;x-show.transition&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-show.transition&lt;/code&gt; is a convenience API for making your &lt;code&gt;x-show&lt;/code&gt;s more pleasant using CSS transitions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-show.transition=&quot;open&quot;&amp;gt;
    These contents will be transitioned in and out.
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;| Directive | Description | | --- | --- | | &lt;code&gt;x-show.transition&lt;/code&gt; | A simultaneous fade and scale. (opacity, scale: 0.95, timing-function: cubic-bezier(0.4, 0.0, 0.2, 1), duration-in: 150ms, duration-out: 75ms) | &lt;code&gt;x-show.transition.in&lt;/code&gt; | Only transition in. | | &lt;code&gt;x-show.transition.out&lt;/code&gt; | Only transition out. | | &lt;code&gt;x-show.transition.opacity&lt;/code&gt; | Only use the fade. | | &lt;code&gt;x-show.transition.scale&lt;/code&gt; | Only use the scale. | | &lt;code&gt;x-show.transition.scale.75&lt;/code&gt; | Customize the CSS scale transform &lt;code&gt;transform: scale(.75)&lt;/code&gt;. | | &lt;code&gt;x-show.transition.duration.200ms&lt;/code&gt; | Sets the &quot;in&quot; transition to 200ms. The out will be set to half that (100ms). | | &lt;code&gt;x-show.transition.origin.top.right&lt;/code&gt; | Customize the CSS transform origin &lt;code&gt;transform-origin: top right&lt;/code&gt;. | | &lt;code&gt;x-show.transition.in.duration.200ms.out.duration.50ms&lt;/code&gt; | Different durations for &quot;in&quot; and &quot;out&quot;. |&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: All of these transition modifiers can be used in conjunction with each other. This is possible (although ridiculous lol): &lt;code&gt;x-show.transition.in.duration.100ms.origin.top.right.opacity.scale.85.out.duration.200ms.origin.bottom.left.opacity.scale.95&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-show&lt;/code&gt; will wait for any children to finish transitioning out. If you want to bypass this behavior, add the &lt;code&gt;.immediate&lt;/code&gt; modifier:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-show.immediate=&quot;open&quot;&amp;gt;
    &amp;lt;div x-show.transition=&quot;open&quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-bind&lt;/code&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You are free to use the shorter &quot;:&quot; syntax: &lt;code&gt;:type=&quot;...&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-bind:type=&quot;inputType&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-bind:[attribute]=&quot;[expression]&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-bind&lt;/code&gt; sets the value of an attribute to the result of a JavaScript expression. The expression has access to all the keys of the component&#39;s data object, and will update every-time its data is updated.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: attribute bindings ONLY update when their dependencies update. The framework is smart enough to observe data changes and detect which bindings care about them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;x-bind&lt;/code&gt; for class attributes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-bind&lt;/code&gt; behaves a little differently when binding to the &lt;code&gt;class&lt;/code&gt; attribute.&lt;/p&gt; 
&lt;p&gt;For classes, you pass in an object whose keys are class names, and values are boolean expressions to determine if those class names are applied or not.&lt;/p&gt; 
&lt;p&gt;For example: &lt;code&gt;&amp;lt;div x-bind:class=&quot;{ &#39;hidden&#39;: foo }&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;In this example, the &quot;hidden&quot; class will only be applied when the value of the &lt;code&gt;foo&lt;/code&gt; data attribute is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;x-bind&lt;/code&gt; for boolean attributes&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-bind&lt;/code&gt; supports boolean attributes in the same way as value attributes, using a variable as the condition or any JavaScript expression that resolves to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Given: --&amp;gt;
&amp;lt;button x-bind:disabled=&quot;myVar&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;

&amp;lt;!-- When myVar == true: --&amp;gt;
&amp;lt;button disabled=&quot;disabled&quot;&amp;gt;Click me&amp;lt;/button&amp;gt;

&amp;lt;!-- When myVar == false: --&amp;gt;
&amp;lt;button&amp;gt;Click me&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will add or remove the &lt;code&gt;disabled&lt;/code&gt; attribute when &lt;code&gt;myVar&lt;/code&gt; is true or false respectively.&lt;/p&gt; 
&lt;p&gt;Boolean attributes are supported as per the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute&quot;&gt;HTML specification&lt;/a&gt;, for example &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;checked&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;selected&lt;/code&gt;, &lt;code&gt;open&lt;/code&gt;, etc.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If you need a false state to show for your attribute, such as &lt;code&gt;aria-*&lt;/code&gt;, chain &lt;code&gt;.toString()&lt;/code&gt; to the value while binding to the attribute. For example: &lt;code&gt;:aria-expanded=&quot;isOpen.toString()&quot;&lt;/code&gt; would persist whether &lt;code&gt;isOpen&lt;/code&gt; was &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.camel&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;svg x-bind:view-box.camel=&quot;viewBox&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;camel&lt;/code&gt; modifier will bind to the camel case equivalent of the attribute name. In the example above, the value of &lt;code&gt;viewBox&lt;/code&gt; will be bound the &lt;code&gt;viewBox&lt;/code&gt; attribute as opposed to the &lt;code&gt;view-box&lt;/code&gt; attribute.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-on&lt;/code&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You are free to use the shorter &quot;@&quot; syntax: &lt;code&gt;@click=&quot;...&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:click=&quot;foo = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:[event]=&quot;[expression]&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-on&lt;/code&gt; attaches an event listener to the element it&#39;s declared on. When that event is emitted, the JavaScript expression set as its value is executed. You can use &lt;code&gt;x-on&lt;/code&gt; with any event available for the element you&#39;re adding the directive on, for a full list of events, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;the Event reference on MDN&lt;/a&gt; for a list of possible values.&lt;/p&gt; 
&lt;p&gt;If any data is modified in the expression, other element attributes &quot;bound&quot; to this data, will be updated.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can also specify a JavaScript function name.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This is equivalent to: &lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction($event)&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;keydown&lt;/code&gt; modifiers&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;text&quot; x-on:keydown.escape=&quot;open = false&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can specify specific keys to listen for using keydown modifiers appended to the &lt;code&gt;x-on:keydown&lt;/code&gt; directive. Note that the modifiers are kebab-cased versions of &lt;code&gt;Event.key&lt;/code&gt; values.&lt;/p&gt; 
&lt;p&gt;Examples: &lt;code&gt;enter&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;arrow-up&lt;/code&gt;, &lt;code&gt;arrow-down&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can also listen for system-modifier key combinations like: &lt;code&gt;x-on:keydown.cmd.enter=&quot;foo&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.away&lt;/code&gt; modifier&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:click.away=&quot;showModal = false&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;.away&lt;/code&gt; modifier is present, the event handler will only be executed when the event originates from a source other than itself, or its children.&lt;/p&gt; 
&lt;p&gt;This is useful for hiding dropdowns and modals when a user clicks away from them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.prevent&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; x-on:click.prevent&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.prevent&lt;/code&gt; to an event listener will call &lt;code&gt;preventDefault&lt;/code&gt; on the triggered event. In the above example, this means the checkbox wouldn&#39;t actually get checked when a user clicks on it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.stop&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:click=&quot;foo = &#39;bar&#39;&quot;&amp;gt;&amp;lt;button x-on:click.stop&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.stop&lt;/code&gt; to an event listener will call &lt;code&gt;stopPropagation&lt;/code&gt; on the triggered event. In the above example, this means the &quot;click&quot; event won&#39;t bubble from the button to the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Or in other words, when a user clicks the button, &lt;code&gt;foo&lt;/code&gt; won&#39;t be set to &lt;code&gt;&#39;bar&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.self&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:click.self=&quot;foo = &#39;bar&#39;&quot;&amp;gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.self&lt;/code&gt; to an event listener will only trigger the handler if the &lt;code&gt;$event.target&lt;/code&gt; is the element itself. In the above example, this means the &quot;click&quot; event that bubbles from the button to the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; run the handler.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.window&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-on:resize.window=&quot;isOpen = window.outerWidth &amp;gt; 768 ? false : open&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding &lt;code&gt;.window&lt;/code&gt; to an event listener will install the listener on the global window object instead of the DOM node on which it is declared. This is useful for when you want to modify component state when something changes with the window, like the resize event. In this example, when the window grows larger than 768 pixels wide, we will close the modal/dropdown, otherwise maintain the same state.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: You can also use the &lt;code&gt;.document&lt;/code&gt; modifier to attach listeners to &lt;code&gt;document&lt;/code&gt; instead of &lt;code&gt;window&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.once&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:mouseenter.once=&quot;fetchSomething()&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding the &lt;code&gt;.once&lt;/code&gt; modifier to an event listener will ensure that the listener will only be handled once. This is useful for things you only want to do once, like fetching HTML partials and such.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.passive&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;button x-on:mousedown.passive=&quot;interactive = true&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Adding the &lt;code&gt;.passive&lt;/code&gt; modifier to an event listener will make the listener a passive one, which means &lt;code&gt;preventDefault()&lt;/code&gt; will not work on any events being processed, this can help, for example with scroll performance on touch devices.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.debounce&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-on:input.debounce=&quot;fetchSomething()&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;debounce&lt;/code&gt; modifier allows you to &quot;debounce&quot; an event handler. In other words, the event handler will NOT run until a certain amount of time has elapsed since the last event that fired. When the handler is ready to be called, the last handler call will execute.&lt;/p&gt; 
&lt;p&gt;The default debounce &quot;wait&quot; time is 250 milliseconds.&lt;/p&gt; 
&lt;p&gt;If you wish to customize this, you can specify a custom wait time like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;input x-on:input.debounce.750=&quot;fetchSomething()&quot;&amp;gt;
&amp;lt;input x-on:input.debounce.750ms=&quot;fetchSomething()&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.camel&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-on:event-name.camel=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;camel&lt;/code&gt; modifier will attach an event listener for the camel case equivalent event name. In the example above, the expression will be evaluated when the &lt;code&gt;eventName&lt;/code&gt; event is fired on the element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-model&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;text&quot; x-model=&quot;foo&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;input type=&quot;text&quot; x-model=&quot;[data item]&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-model&lt;/code&gt; adds &quot;two-way data binding&quot; to an element. In other words, the value of the input element will be kept in sync with the value of the data item of the component.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-model&lt;/code&gt; is smart enough to detect changes on text inputs, checkboxes, radio buttons, textareas, selects, and multiple selects. It should behave &lt;a href=&quot;https://vuejs.org/v2/guide/forms.html&quot;&gt;how Vue would&lt;/a&gt; in those scenarios.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.number&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-model.number=&quot;age&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;number&lt;/code&gt; modifier will convert the input&#39;s value to a number. If the value cannot be parsed as a valid number, the original value is returned.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;.debounce&lt;/code&gt; modifier&lt;/strong&gt; &lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;input x-model.debounce=&quot;search&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;debounce&lt;/code&gt; modifier allows you to add a &quot;debounce&quot; to a value update. In other words, the event handler will NOT run until a certain amount of time has elapsed since the last event that fired. When the handler is ready to be called, the last handler call will execute.&lt;/p&gt; 
&lt;p&gt;The default debounce &quot;wait&quot; time is 250 milliseconds.&lt;/p&gt; 
&lt;p&gt;If you wish to customize this, you can specifiy a custom wait time like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;input x-model.debounce.750=&quot;search&quot;&amp;gt;
&amp;lt;input x-model.debounce.750ms=&quot;search&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-text&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-text=&quot;foo&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-text=&quot;[expression]&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-text&lt;/code&gt; works similarly to &lt;code&gt;x-bind&lt;/code&gt;, except instead of updating the value of an attribute, it will update the &lt;code&gt;innerText&lt;/code&gt; of an element.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-html&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-html=&quot;foo&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;span x-html=&quot;[expression]&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-html&lt;/code&gt; works similarly to &lt;code&gt;x-bind&lt;/code&gt;, except instead of updating the value of an attribute, it will update the &lt;code&gt;innerHTML&lt;/code&gt; of an element.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;:warning: &lt;strong&gt;Only use on trusted content and never on user-provided content.&lt;/strong&gt; :warning:&lt;/p&gt; 
 &lt;p&gt;Dynamically rendering HTML from third parties can easily lead to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt; vulnerabilities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-ref&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-ref=&quot;foo&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;button x-on:click=&quot;$refs.foo.innerText = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-ref=&quot;[ref name]&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;button x-on:click=&quot;$refs.[ref name].innerText = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-ref&lt;/code&gt; provides a convenient way to retrieve raw DOM elements out of your component. By setting an &lt;code&gt;x-ref&lt;/code&gt; attribute on an element, you are making it available to all event handlers inside an object called &lt;code&gt;$refs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This is a helpful alternative to setting ids and using &lt;code&gt;document.querySelector&lt;/code&gt; all over the place.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: you can also bind dynamic values for x-ref: &lt;code&gt;&amp;lt;span :x-ref=&quot;item.id&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; if you need to.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-if&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;template x-if=&quot;true&quot;&amp;gt;&amp;lt;div&amp;gt;Some Element&amp;lt;/div&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structure:&lt;/strong&gt; &lt;code&gt;&amp;lt;template x-if=&quot;[expression]&quot;&amp;gt;&amp;lt;div&amp;gt;Some Element&amp;lt;/div&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For cases where &lt;code&gt;x-show&lt;/code&gt; isn&#39;t sufficient (&lt;code&gt;x-show&lt;/code&gt; sets an element to &lt;code&gt;display: none&lt;/code&gt; if it&#39;s false), &lt;code&gt;x-if&lt;/code&gt; can be used to actually remove an element completely from the DOM.&lt;/p&gt; 
&lt;p&gt;It&#39;s important that &lt;code&gt;x-if&lt;/code&gt; is used on a &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; tag because Alpine doesn&#39;t use a virtual DOM. This implementation allows Alpine to stay rugged and use the real DOM to work its magic.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-if&lt;/code&gt; must have a single root element inside the &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using &lt;code&gt;template&lt;/code&gt; in a &lt;code&gt;svg&lt;/code&gt; tag, you need to add a &lt;a href=&quot;https://github.com/alpinejs/alpine/issues/637#issuecomment-654856538&quot;&gt;polyfill&lt;/a&gt; that should be run before Alpine.js is initialized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-for&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;item in items&quot; :key=&quot;item&quot;&amp;gt;
    &amp;lt;div x-text=&quot;item&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: the &lt;code&gt;:key&lt;/code&gt; binding is optional, but HIGHLY recommended.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;x-for&lt;/code&gt; is available for cases when you want to create new DOM nodes for each item in an array. This should appear similar to &lt;code&gt;v-for&lt;/code&gt; in Vue, with one exception of needing to exist on a &lt;code&gt;template&lt;/code&gt; tag, and not a regular DOM element.&lt;/p&gt; 
&lt;p&gt;If you want to access the current index of the iteration, use the following syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;(item, index) in items&quot; :key=&quot;index&quot;&amp;gt;
    &amp;lt;!-- You can also reference &quot;index&quot; inside the iteration if you need. --&amp;gt;
    &amp;lt;div x-text=&quot;index&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to access the array object (collection) of the iteration, use the following syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;(item, index, collection) in items&quot; :key=&quot;index&quot;&amp;gt;
    &amp;lt;!-- You can also reference &quot;collection&quot; inside the iteration if you need. --&amp;gt;
    &amp;lt;!-- Current item. --&amp;gt;
    &amp;lt;div x-text=&quot;item&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;!-- Same as above. --&amp;gt;
    &amp;lt;div x-text=&quot;collection[index]&quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;!-- Previous item. --&amp;gt;
    &amp;lt;div x-text=&quot;collection[index - 1]&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;x-for&lt;/code&gt; must have a single root element inside of the &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using &lt;code&gt;template&lt;/code&gt; in a &lt;code&gt;svg&lt;/code&gt; tag, you need to add a &lt;a href=&quot;https://github.com/alpinejs/alpine/issues/637#issuecomment-654856538&quot;&gt;polyfill&lt;/a&gt; that should be run before Alpine.js is initialized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Nesting &lt;code&gt;x-for&lt;/code&gt;s&lt;/h4&gt; 
&lt;p&gt;You can nest &lt;code&gt;x-for&lt;/code&gt; loops, but you MUST wrap each loop in an element. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;item in items&quot;&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;template x-for=&quot;subItem in item.subItems&quot;&amp;gt;
            &amp;lt;div x-text=&quot;subItem&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/template&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Iterating over a range&lt;/h4&gt; 
&lt;p&gt;Alpine supports the &lt;code&gt;i in n&lt;/code&gt; syntax, where &lt;code&gt;n&lt;/code&gt; is an integer, allowing you to iterate over a fixed range of elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-for=&quot;i in 10&quot;&amp;gt;
    &amp;lt;span x-text=&quot;i&quot;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-transition&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div
    x-show=&quot;open&quot;
    x-transition:enter=&quot;transition ease-out duration-300&quot;
    x-transition:enter-start=&quot;opacity-0 transform scale-90&quot;
    x-transition:enter-end=&quot;opacity-100 transform scale-100&quot;
    x-transition:leave=&quot;transition ease-in duration-300&quot;
    x-transition:leave-start=&quot;opacity-100 transform scale-100&quot;
    x-transition:leave-end=&quot;opacity-0 transform scale-90&quot;
&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;template x-if=&quot;open&quot;&amp;gt;
    &amp;lt;div
        x-transition:enter=&quot;transition ease-out duration-300&quot;
        x-transition:enter-start=&quot;opacity-0 transform scale-90&quot;
        x-transition:enter-end=&quot;opacity-100 transform scale-100&quot;
        x-transition:leave=&quot;transition ease-in duration-300&quot;
        x-transition:leave-start=&quot;opacity-100 transform scale-100&quot;
        x-transition:leave-end=&quot;opacity-0 transform scale-90&quot;
    &amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The example above uses classes from &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Alpine offers 6 different transition directives for applying classes to various stages of an element&#39;s transition between &quot;hidden&quot; and &quot;shown&quot; states. These directives work both with &lt;code&gt;x-show&lt;/code&gt; AND &lt;code&gt;x-if&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;These behave exactly like VueJS&#39;s transition directives, except they have different, more sensible names:&lt;/p&gt; 
&lt;p&gt;| Directive | Description | | --- | --- | | &lt;code&gt;:enter&lt;/code&gt; | Applied during the entire entering phase. | | &lt;code&gt;:enter-start&lt;/code&gt; | Added before element is inserted, removed one frame after element is inserted. | | &lt;code&gt;:enter-end&lt;/code&gt; | Added one frame after element is inserted (at the same time &lt;code&gt;enter-start&lt;/code&gt; is removed), removed when transition/animation finishes. | &lt;code&gt;:leave&lt;/code&gt; | Applied during the entire leaving phase. | | &lt;code&gt;:leave-start&lt;/code&gt; | Added immediately when a leaving transition is triggered, removed after one frame. | | &lt;code&gt;:leave-end&lt;/code&gt; | Added one frame after a leaving transition is triggered (at the same time &lt;code&gt;leave-start&lt;/code&gt; is removed), removed when the transition/animation finishes.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-spread&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;dropdown()&quot;&amp;gt;
    &amp;lt;button x-spread=&quot;trigger&quot;&amp;gt;Open Dropdown&amp;lt;/button&amp;gt;

    &amp;lt;span x-spread=&quot;dialogue&quot;&amp;gt;Dropdown Contents&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
    function dropdown() {
        return {
            open: false,
            trigger: {
                [&#39;@click&#39;]() {
                    this.open = true
                },
            },
            dialogue: {
                [&#39;x-show&#39;]() {
                    return this.open
                },
                [&#39;@click.away&#39;]() {
                    this.open = false
                },
            }
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;x-spread&lt;/code&gt; allows you to extract an element&#39;s Alpine bindings into a reusable object.&lt;/p&gt; 
&lt;p&gt;The object keys are the directives (Can be any directive including modifiers), and the values are callbacks to be evaluated by Alpine.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: There are a couple of caveats to x-spread:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;When the directive being &quot;spread&quot; is &lt;code&gt;x-for&lt;/code&gt;, you should return a normal expression string from the callback. For example: &lt;code&gt;[&#39;x-for&#39;]() { return &#39;item in items&#39; }&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;x-data&lt;/code&gt; and &lt;code&gt;x-init&lt;/code&gt; can&#39;t be used inside a &quot;spread&quot; object.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;x-cloak&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;&amp;lt;div x-data=&quot;{}&quot; x-cloak&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;x-cloak&lt;/code&gt; attributes are removed from elements when Alpine initializes. This is useful for hiding pre-initialized DOM. It&#39;s typical to add the following global style for this to work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;style&amp;gt;
    [x-cloak] { display: none; }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Magic Properties&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;With the exception of &lt;code&gt;$el&lt;/code&gt;, magic properties are &lt;strong&gt;not available within &lt;code&gt;x-data&lt;/code&gt;&lt;/strong&gt; as the component isn&#39;t initialized yet.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$el&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data&amp;gt;
    &amp;lt;button @click=&quot;$el.innerHTML = &#39;foo&#39;&quot;&amp;gt;Replace me with &quot;foo&quot;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$el&lt;/code&gt; is a magic property that can be used to retrieve the root component DOM node.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;$refs&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;span x-ref=&quot;foo&quot;&amp;gt;&amp;lt;/span&amp;gt;

&amp;lt;button x-on:click=&quot;$refs.foo.innerText = &#39;bar&#39;&quot;&amp;gt;&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$refs&lt;/code&gt; is a magic property that can be used to retrieve DOM elements marked with &lt;code&gt;x-ref&lt;/code&gt; inside the component. This is useful when you need to manually manipulate DOM elements.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$event&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input x-on:input=&quot;alert($event.target.value)&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$event&lt;/code&gt; is a magic property that can be used within an event listener to retrieve the native browser &quot;Event&quot; object.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The $event property is only available in DOM expressions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you need to access $event inside of a JavaScript function you can pass it in directly:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction($event)&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$dispatch&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div @custom-event=&quot;console.log($event.detail.foo)&quot;&amp;gt;
    &amp;lt;button @click=&quot;$dispatch(&#39;custom-event&#39;, { foo: &#39;bar&#39; })&quot;&amp;gt;
    &amp;lt;!-- When clicked, will console.log &quot;bar&quot; --&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note on Event Propagation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Notice that, because of &lt;a href=&quot;https://en.wikipedia.org/wiki/Event_bubbling&quot;&gt;event bubbling&lt;/a&gt;, when you need to capture events dispatched from nodes that are under the same nesting hierarchy, you&#39;ll need to use the &lt;a href=&quot;https://github.com/alpinejs/alpine#x-on&quot;&gt;&lt;code&gt;.window&lt;/code&gt;&lt;/a&gt; modifier:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data&amp;gt;
    &amp;lt;span @custom-event=&quot;console.log($event.detail.foo)&quot;&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;button @click=&quot;$dispatch(&#39;custom-event&#39;, { foo: &#39;bar&#39; })&quot;&amp;gt;
&amp;lt;div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This won&#39;t work because when &lt;code&gt;custom-event&lt;/code&gt; is dispatched, it&#39;ll propagate to its common ancestor, the &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Dispatching to Components&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can also take advantage of the previous technique to make your components talk to each other:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data @custom-event.window=&quot;console.log($event.detail)&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;button x-data @click=&quot;$dispatch(&#39;custom-event&#39;, &#39;Hello World!&#39;)&quot;&amp;gt;
&amp;lt;!-- When clicked, will console.log &quot;Hello World!&quot;. --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$dispatch&lt;/code&gt; is a shortcut for creating a &lt;code&gt;CustomEvent&lt;/code&gt; and dispatching it using &lt;code&gt;.dispatchEvent()&lt;/code&gt; internally. There are lots of good use cases for passing data around and between components using custom events. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events&quot;&gt;Read here&lt;/a&gt; for more information on the underlying &lt;code&gt;CustomEvent&lt;/code&gt; system in browsers.&lt;/p&gt; 
&lt;p&gt;You will notice that any data passed as the second parameter to &lt;code&gt;$dispatch(&#39;some-event&#39;, { some: &#39;data&#39; })&lt;/code&gt;, becomes available through the new events &quot;detail&quot; property: &lt;code&gt;$event.detail.some&lt;/code&gt;. Attaching custom event data to the &lt;code&gt;.detail&lt;/code&gt; property is standard practice for &lt;code&gt;CustomEvent&lt;/code&gt;s in browsers. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail&quot;&gt;Read here&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;You can also use &lt;code&gt;$dispatch()&lt;/code&gt; to trigger data updates for &lt;code&gt;x-model&lt;/code&gt; bindings. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ foo: &#39;bar&#39; }&quot;&amp;gt;
    &amp;lt;span x-model=&quot;foo&quot;&amp;gt;
        &amp;lt;button @click=&quot;$dispatch(&#39;input&#39;, &#39;baz&#39;)&quot;&amp;gt;
        &amp;lt;!-- After the button is clicked, `x-model` will catch the bubbling &quot;input&quot; event, and update foo to &quot;baz&quot;. --&amp;gt;
    &amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The $dispatch property is only available in DOM expressions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you need to access $dispatch inside of a JavaScript function you can pass it in directly:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;button x-on:click=&quot;myFunction($dispatch)&quot;&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$nextTick&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ fruit: &#39;apple&#39; }&quot;&amp;gt;
    &amp;lt;button
        x-on:click=&quot;
            fruit = &#39;pear&#39;;
            $nextTick(() =&amp;gt; { console.log($event.target.innerText) });
        &quot;
        x-text=&quot;fruit&quot;
    &amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;$nextTick&lt;/code&gt; is a magic property that allows you to only execute a given expression AFTER Alpine has made its reactive DOM updates. This is useful for times you want to interact with the DOM state AFTER it&#39;s reflected any data updates you&#39;ve made.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;code&gt;$watch&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div x-data=&quot;{ open: false }&quot; x-init=&quot;$watch(&#39;open&#39;, value =&amp;gt; console.log(value))&quot;&amp;gt;
    &amp;lt;button @click=&quot;open = ! open&quot;&amp;gt;Toggle Open&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can &quot;watch&quot; a component property with the &lt;code&gt;$watch&lt;/code&gt; magic method. In the above example, when the button is clicked and &lt;code&gt;open&lt;/code&gt; is changed, the provided callback will fire and &lt;code&gt;console.log&lt;/code&gt; the new value.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you find a security vulnerability, please send an email to &lt;a href=&quot;&quot;&gt;calebporzio@gmail.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alpine relies on a custom implementation using the &lt;code&gt;Function&lt;/code&gt; object to evaluate its directives. Despite being more secure then &lt;code&gt;eval()&lt;/code&gt;, its use is prohibited in some environments, such as Google Chrome App, using restrictive Content Security Policy (CSP).&lt;/p&gt; 
&lt;p&gt;If you use Alpine in a website dealing with sensitive data and requiring &lt;a href=&quot;https://csp.withgoogle.com/docs/strict-csp.html&quot;&gt;CSP&lt;/a&gt;, you need to include &lt;code&gt;unsafe-eval&lt;/code&gt; in your policy. A robust policy correctly configured will help protecting your users when using personal or financial data.&lt;/p&gt; 
&lt;p&gt;Since a policy applies to all scripts in your page, it&#39;s important that other external libraries included in the website are carefully reviewed to ensure that they are trustworthy and they won&#39;t introduce any Cross Site Scripting vulnerability either using the &lt;code&gt;eval()&lt;/code&gt; function or manipulating the DOM to inject malicious code in your page.&lt;/p&gt; 
&lt;h2&gt;V3 Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Move from &lt;code&gt;x-ref&lt;/code&gt; to &lt;code&gt;ref&lt;/code&gt; for Vue parity?&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;Alpine.directive()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;Alpine.component(&#39;foo&#39;, {...})&lt;/code&gt; (With magic &lt;code&gt;__init()&lt;/code&gt; method)&lt;/li&gt; 
 &lt;li&gt;Dispatch Alpine events for &quot;loaded&quot;, &quot;transition-start&quot;, etc... (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/299&quot;&gt;#299&lt;/a&gt;) ?&lt;/li&gt; 
 &lt;li&gt;Remove &quot;object&quot; (and array) syntax from &lt;code&gt;x-bind:class=&quot;{ &#39;foo&#39;: true }&quot;&lt;/code&gt; (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/236&quot;&gt;#236&lt;/a&gt; to add support for object syntax for the &lt;code&gt;style&lt;/code&gt; attribute)&lt;/li&gt; 
 &lt;li&gt;Improve &lt;code&gt;x-for&lt;/code&gt; mutation reactivity (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/165&quot;&gt;#165&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Add &quot;deep watching&quot; support in V3 (&lt;a href=&quot;https://github.com/alpinejs/alpine/pull/294&quot;&gt;#294&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;$el&lt;/code&gt; shortcut&lt;/li&gt; 
 &lt;li&gt;Change &lt;code&gt;@click.away&lt;/code&gt; to &lt;code&gt;@click.outside&lt;/code&gt;?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2019-2020 Caleb Porzio and contributors&lt;/p&gt; 
&lt;p&gt;Licensed under the MIT license, see &lt;a href=&quot;https://raw.githubusercontent.com/alpinejs/alpine/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>snowpackjs/snowpack</title>
      <link>https://github.com/snowpackjs/snowpack</link>
      <description>&lt;p&gt;WASM-powered frontend build tool. Fast, lightweight, unbundled ESM. ✌️&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Snowpack is a lightning-fast frontend build tool, designed to leverage JavaScript&#39;s native module system (
 &lt;!-- raw HTML omitted --&gt;known as ESM
 &lt;!-- raw HTML omitted --&gt;). It is an alternative to heavier, more complex bundlers like webpack or Parcel in your development workflow.&lt;/p&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Develop faster, with a dev server that starts up in &lt;strong&gt;50ms or less.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;See changes reflected &lt;a href=&quot;https://www.snowpack.dev/concepts/hot-module-replacement&quot;&gt;instantly in the browser.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Integrate your favorite bundler for a &lt;a href=&quot;https://www.snowpack.dev/concepts/build-pipeline&quot;&gt;production-optimized build.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Enjoy out-of-the-box support for &lt;a href=&quot;https://www.snowpack.dev/reference/supported-files&quot;&gt;TypeScript, JSX, CSS Modules and more.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Connect your favorite tools with &lt;a href=&quot;https://www.snowpack.dev/plugins&quot;&gt;third-party plugins.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;💁 More info at the official &lt;a href=&quot;https://snowpack.dev&quot;&gt;Snowpack website ➞&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Contributor Guidelines:&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/snowpackjs/snowpack/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;br&gt; &lt;strong&gt;License:&lt;/strong&gt; &lt;a href=&quot;https://github.com/snowpackjs/snowpack/blob/main/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>scutan90/DeepLearning-500-questions</title>
      <link>https://github.com/scutan90/DeepLearning-500-questions</link>
      <description>&lt;p&gt;深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。 全书分为18个章节，50余万字。由于水平有限，书中不妥之处恳请广大读者批评指正。 未完待续............ 如有意合作，联系scutjy2015@163.com 版权所有，违权必究 Tan 2018.06&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;京东预售链接：https://item.jd.com/12785031.html&lt;/h1&gt; 
&lt;h2&gt;深度学习500问——AI工程师面试宝典(博文视点出品)，谈继勇 主编，郭子钊，李剑，佃松宜 副主编 著&lt;/h2&gt; 
&lt;h1&gt;内容简介&lt;/h1&gt; 
&lt;p&gt;本书系统地描述了深度学习的基本理论算法及应用。全书共14章，第1-3章论述了数学基础、机器学习基础和深度学习基础；第4-7章介绍了一些经典网络及计算机视觉领域中常用的CNN、RNN、GAN等网络结构技术；第8-9章介绍了深度学习在计算机视觉领域的目标检测及图像分割两大应用；第10-14章介绍了计算机视觉领域主要的优化方法及思路等，包括迁移学习、网络架构及训练、网络优化技巧、超参数调整及模型的压缩和加速等。本书凝聚了众多一线科研人员及工程师的经验，旨在培养读者发现问题、解决问题、扩展问题的能力。&lt;/p&gt; 
&lt;p&gt;本书内容取材于编者在日常学习过程中总结的知识点及各大公司常见的笔试、面试题。本书可为高等院校计算机科学、信息科学、人工智能、控制科学与工程、电子科学与技术等领域的研究及教学人员提供参考，也可为相关专业本科生及研究生提供思考方向，还可为深度学习及计算机视觉领域的初、中级研究人员和工程技术人员提供参考，尤其适合需要查漏补缺的应聘者及提供相关岗位的面试官阅读。&lt;/p&gt; 
&lt;h1&gt;作者简介&lt;/h1&gt; 
&lt;p&gt;谈继勇 主编&lt;/p&gt; 
&lt;p&gt;南方科技大学和哈尔滨工业大学联合培养博士（在读），现任瀚维智能医疗技术总监，深圳工信局专家库专家，兼任南方科技大学、四川大学研究生企业导师，南方科技大学和瀚维智能医疗联合实验室副主任，北京探工所特聘技术专家，曾先后在中科院信工所、香港中文大学（深圳）、FOXCONN机器人与人工智能实验室、顺丰科技等单位任职。主要专注于智能感知与控制、实时智能与计算机视觉方向的研究，主持/主研国家自然科学基金、省重点研发计划、深圳战略性新兴产业计划等项目20余项，发表SCI/EI论文20余篇，申请发明专利40余项，获全国发明金奖。&lt;/p&gt; 
&lt;p&gt;郭子钊 副主编&lt;/p&gt; 
&lt;p&gt;四川大学计算机科学专业博士，硕士毕业于四川大学自动化系，主要从事AI芯片、深度学习、行为检测识别、人脸检测识别等相关研究工作。&lt;/p&gt; 
&lt;p&gt;李剑 副主编&lt;/p&gt; 
&lt;p&gt;同济大学计算机科学专业博士，浙江农林大学副教授、硕士生导师，主要从事推荐系统、排序学习、凸优化等机器学习领域的科研和教学工作，发表SCI论文10余篇，曾获浙江省科技进步二等奖等多项省部级奖项。&lt;/p&gt; 
&lt;p&gt;佃松宜 副主编&lt;/p&gt; 
&lt;p&gt;日本东北大学博士，四川大学电气工程学院教授、自动化系系主任，四川省信息与自动化技术重点实验室主任。主要专注于先进控制理论与人工智能算法研究、嵌入式计算与实时智能系统的研究与开发、机器人与智能装备的智能感知与控制技术的研究、工业测控与智能物联的研究。近5年来主持包括国家重点研发计划、基金、国网总部项目等各类科研项目近30项，累计总经费近2200万元；发表论文100多篇，其中SCI/EI检索近40篇，ESI高引论文1篇。参与编撰专著3部（其中英文专著1部），参编国家九五规划教材1部。&lt;/p&gt; 
&lt;p&gt;王晋东 特邀编委&lt;/p&gt; 
&lt;p&gt;中科院计算所博士，微软亚洲研究院机器学习研究员，主要从事迁移学习和机器学习方向的研究工作，在IJCAI、CVPR、ICDM、UbiComp、ACMMM、PERCOM、IJCNN、PRICAI、IEEE TNNLS、NEUNET、PRL、PMCJ、IMWUT、IJMLC、ICME、ACM TIST等国际权威期刊和会议上发表论文20余篇，多次获得“最佳论文”奖。作品有《迁移学习简明手册》等。&lt;/p&gt; 
&lt;p&gt;王超锋&lt;/p&gt; 
&lt;p&gt;上海大学硕士，百度计算机视觉算法工程师，主研图像处理，深度学习等方向。曾多次在国内外各类知名计算机视觉挑战赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;郭晓锋&lt;/p&gt; 
&lt;p&gt;中国科学院硕士，爱奇艺算法工程师，主要从事图像处理、深度学习等方向的研究，曾获“2017华为软件精英挑战赛”复赛第6名。&lt;/p&gt; 
&lt;p&gt;黄伟&lt;/p&gt; 
&lt;p&gt;华南理工大学硕士，顺丰科技机器人算法工程师，主要从事计算机视觉和自然语言处理方向的研究。曾在相关领域国际期刊、会议上发表论文，并在相关竞赛中获得优异成绩。&lt;/p&gt; 
&lt;p&gt;陈方杰（Amusi）&lt;/p&gt; 
&lt;p&gt;上海大学硕士，CVer（计算机视觉知识分享和学习交流平台）创始人。&lt;/p&gt; 
&lt;p&gt;李元伟&lt;/p&gt; 
&lt;p&gt;国防科技大学硕士，深圳瀚维智能医疗科技公司高级算法工程师，南方科技大学和瀚维智能医疗联合实验室委员，主要从事机器视觉、图像处理及深度学习方向的研究工作，参编普通高等教育十三五规划教材《图像通信基础》，在IEEE TCSVT、COGN COMPUT等发表学术论文多篇，曾获湖南省/全军优秀硕士论文。&lt;/p&gt; 
&lt;p&gt;陈琳&lt;/p&gt; 
&lt;p&gt;北京航空航天大学博士（在读），研究方向为无人机智能控制与决策、仿生智能计算。&lt;/p&gt; 
&lt;h1&gt;目录&lt;/h1&gt; 
&lt;p&gt;第1章 数学基础 1&lt;/p&gt; 
&lt;p&gt;1.1 向量和矩阵 1&lt;/p&gt; 
&lt;p&gt;1.1.1 标量、向量、矩阵和张量 1&lt;/p&gt; 
&lt;p&gt;1.1.2 张量与矩阵的区别 2&lt;/p&gt; 
&lt;p&gt;1.1.3 矩阵和向量相乘的结果 2&lt;/p&gt; 
&lt;p&gt;1.1.4 向量和矩阵的范数归纳 2&lt;/p&gt; 
&lt;p&gt;1.1.5 判断一个矩阵是否为正定矩阵 4&lt;/p&gt; 
&lt;p&gt;1.2 导数和偏导数 5&lt;/p&gt; 
&lt;p&gt;1.2.1 导数偏导计算 5&lt;/p&gt; 
&lt;p&gt;1.2.2 导数和偏导数的区别 6&lt;/p&gt; 
&lt;p&gt;1.3 特征值和特征向量 6&lt;/p&gt; 
&lt;p&gt;1.3.1 特征值分解 6&lt;/p&gt; 
&lt;p&gt;1.3.2 奇异值和特征值的关系 6&lt;/p&gt; 
&lt;p&gt;1.4 概率分布与随机变量 7&lt;/p&gt; 
&lt;p&gt;1.4.1 机器学习为什么要使用概率 7&lt;/p&gt; 
&lt;p&gt;1.4.2 变量与随机变量的区别 7&lt;/p&gt; 
&lt;p&gt;1.4.3 随机变量与概率分布的联系 8&lt;/p&gt; 
&lt;p&gt;1.4.4 离散型随机变量和概率质量函数 8&lt;/p&gt; 
&lt;p&gt;1.4.5 连续型随机变量和概率密度函数 8&lt;/p&gt; 
&lt;p&gt;1.4.6 举例理解条件概率 9&lt;/p&gt; 
&lt;p&gt;1.4.7 联合概率与边缘概率的区别和联系 9&lt;/p&gt; 
&lt;p&gt;1.4.8 条件概率的链式法则 10&lt;/p&gt; 
&lt;p&gt;1.4.9 独立性和条件独立性 10&lt;/p&gt; 
&lt;p&gt;1.5 常见概率分布 11&lt;/p&gt; 
&lt;p&gt;1.5.1 伯努利分布 11&lt;/p&gt; 
&lt;p&gt;1.5.2 高斯分布 11&lt;/p&gt; 
&lt;p&gt;1.5.3 何时采用正态分布 12&lt;/p&gt; 
&lt;p&gt;1.5.4 指数分布 12&lt;/p&gt; 
&lt;p&gt;1.5.5 Laplace分布 13&lt;/p&gt; 
&lt;p&gt;1.5.6 Dirac分布和经验分布 13&lt;/p&gt; 
&lt;p&gt;1.6 期望、方差、协方差、相关系数 13&lt;/p&gt; 
&lt;p&gt;1.6.1 期望 13&lt;/p&gt; 
&lt;p&gt;1.6.2 方差 14&lt;/p&gt; 
&lt;p&gt;1.6.3 协方差 14&lt;/p&gt; 
&lt;p&gt;1.6.4 相关系数 15&lt;/p&gt; 
&lt;p&gt;第2章 机器学习基础 16&lt;/p&gt; 
&lt;p&gt;2.1 基本概念 16&lt;/p&gt; 
&lt;p&gt;2.1.1 大话机器学习本质 16&lt;/p&gt; 
&lt;p&gt;2.1.2 什么是神经网络 16&lt;/p&gt; 
&lt;p&gt;2.1.3 各种常见算法图示 17&lt;/p&gt; 
&lt;p&gt;2.1.4 计算图的导数计算 17&lt;/p&gt; 
&lt;p&gt;2.1.5 理解局部最优与全局最优 18&lt;/p&gt; 
&lt;p&gt;2.1.6 大数据与深度学习之间的关系 19&lt;/p&gt; 
&lt;p&gt;2.2 机器学习的学习方式 20&lt;/p&gt; 
&lt;p&gt;2.2.1 监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.2 非监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.3 半监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.4 弱监督学习 20&lt;/p&gt; 
&lt;p&gt;2.2.5 监督学习模型的搭建步骤 21&lt;/p&gt; 
&lt;p&gt;2.3 分类算法 22&lt;/p&gt; 
&lt;p&gt;2.3.1 常用分类算法的优缺点 22&lt;/p&gt; 
&lt;p&gt;2.3.2 分类算法的评估方法 23&lt;/p&gt; 
&lt;p&gt;2.3.3 正确率能否很好地评估分类算法 25&lt;/p&gt; 
&lt;p&gt;2.3.4 什么样的分类器是最好的 26&lt;/p&gt; 
&lt;p&gt;2.4 逻辑回归 26&lt;/p&gt; 
&lt;p&gt;2.4.1 回归的种类 26&lt;/p&gt; 
&lt;p&gt;2.4.2 逻辑回归适用性 27&lt;/p&gt; 
&lt;p&gt;2.4.3 逻辑回归与朴素贝叶斯的区别 27&lt;/p&gt; 
&lt;p&gt;2.4.4 线性回归与逻辑回归的区别 27&lt;/p&gt; 
&lt;p&gt;2.5 代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.1 为什么需要代价函数 28&lt;/p&gt; 
&lt;p&gt;2.5.2 代价函数作用原理 28&lt;/p&gt; 
&lt;p&gt;2.5.3 常见代价函数 30&lt;/p&gt; 
&lt;p&gt;2.5.4 为什么代价函数要非负 31&lt;/p&gt; 
&lt;p&gt;2.5.5 为什么用交叉熵代替二次代价函数 31&lt;/p&gt; 
&lt;p&gt;2.6 损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.1 什么是损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.2 常见的损失函数 32&lt;/p&gt; 
&lt;p&gt;2.6.3 逻辑回归为什么使用对数损失函数 34&lt;/p&gt; 
&lt;p&gt;2.6.4 对数损失函数如何度量损失 34&lt;/p&gt; 
&lt;p&gt;2.7 梯度下降法 35&lt;/p&gt; 
&lt;p&gt;2.7.1 梯度下降法的作用 36&lt;/p&gt; 
&lt;p&gt;2.7.2 梯度下降法的直观理解 36&lt;/p&gt; 
&lt;p&gt;2.7.3 梯度下降法算法描述 37&lt;/p&gt; 
&lt;p&gt;2.7.4 梯度下降法的缺点 38&lt;/p&gt; 
&lt;p&gt;2.7.5 如何对梯度下降法进行调优 38&lt;/p&gt; 
&lt;p&gt;2.7.6 随机梯度下降和批量梯度下降的区别 38&lt;/p&gt; 
&lt;p&gt;2.7.7 各种梯度下降法性能比较 40&lt;/p&gt; 
&lt;p&gt;2.8 线性判别分析 40&lt;/p&gt; 
&lt;p&gt;2.8.1 LDA思想总结 40&lt;/p&gt; 
&lt;p&gt;2.8.2 图解LDA核心思想 41&lt;/p&gt; 
&lt;p&gt;2.8.3 二类LDA算法原理 41&lt;/p&gt; 
&lt;p&gt;2.8.4 LDA算法流程总结 42&lt;/p&gt; 
&lt;p&gt;2.8.5 LDA和PCA的异同 43&lt;/p&gt; 
&lt;p&gt;2.8.6 LDA的优缺点 43&lt;/p&gt; 
&lt;p&gt;2.9 主成分分析 43&lt;/p&gt; 
&lt;p&gt;2.9.1 图解PCA核心思想 43&lt;/p&gt; 
&lt;p&gt;2.9.2 PCA算法推理 44&lt;/p&gt; 
&lt;p&gt;2.9.3 PCA算法流程总结 45&lt;/p&gt; 
&lt;p&gt;2.9.4 PCA思想总结 46&lt;/p&gt; 
&lt;p&gt;2.9.5 PCA算法的优缺点 46&lt;/p&gt; 
&lt;p&gt;2.9.6 降维的必要性及目的 46&lt;/p&gt; 
&lt;p&gt;2.9.7 KPCA与PCA的区别 47&lt;/p&gt; 
&lt;p&gt;2.10 模型评估 47&lt;/p&gt; 
&lt;p&gt;2.10.1 模型评估常用方法 48&lt;/p&gt; 
&lt;p&gt;2.10.2 误差、偏差和方差的区别和联系 48&lt;/p&gt; 
&lt;p&gt;2.10.3 为什么使用标准差 49&lt;/p&gt; 
&lt;p&gt;2.10.4 经验误差与泛化误差 50&lt;/p&gt; 
&lt;p&gt;2.10.5 图解欠拟合与过拟合 50&lt;/p&gt; 
&lt;p&gt;2.10.6 如何解决欠拟合与过拟合 52&lt;/p&gt; 
&lt;p&gt;2.10.7 交叉验证的主要作用 52&lt;/p&gt; 
&lt;p&gt;2.10.8 理解K折交叉验证 53&lt;/p&gt; 
&lt;p&gt;2.10.9 理解混淆矩阵 53&lt;/p&gt; 
&lt;p&gt;2.10.10 理解查准率与查全率 53&lt;/p&gt; 
&lt;p&gt;2.10.11 理解ROC与AUC 54&lt;/p&gt; 
&lt;p&gt;2.10.12 如何绘制ROC曲线 55&lt;/p&gt; 
&lt;p&gt;2.10.13 如何计算TPR和FPR 56&lt;/p&gt; 
&lt;p&gt;2.10.14 如何计算AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.15 直观理解AUC 58&lt;/p&gt; 
&lt;p&gt;2.10.16 ROC评估分类器 60&lt;/p&gt; 
&lt;p&gt;2.10.17 代价敏感错误率与代价曲线 60&lt;/p&gt; 
&lt;p&gt;2.10.18 比较检验方法 61&lt;/p&gt; 
&lt;p&gt;2.11 决策树 61&lt;/p&gt; 
&lt;p&gt;2.11.1 决策树的基本原理 62&lt;/p&gt; 
&lt;p&gt;2.11.2 决策树的生成过程 62&lt;/p&gt; 
&lt;p&gt;2.11.3 决策树学习基本算法步骤 62&lt;/p&gt; 
&lt;p&gt;2.11.4 决策树算法的优缺点 63&lt;/p&gt; 
&lt;p&gt;2.11.5 决策树和熵的联系 63&lt;/p&gt; 
&lt;p&gt;2.11.6 熵的概念及定义 63&lt;/p&gt; 
&lt;p&gt;2.11.7 理解信息增益 64&lt;/p&gt; 
&lt;p&gt;2.11.8 决策树中熵、条件熵和信息增益的联系 64&lt;/p&gt; 
&lt;p&gt;2.11.9 决策树算法中剪枝的作用及策略 65&lt;/p&gt; 
&lt;p&gt;2.12 支持向量机（SVM） 65&lt;/p&gt; 
&lt;p&gt;2.12.1 什么是SVM 65&lt;/p&gt; 
&lt;p&gt;2.12.2 SVM能解决的问题 66&lt;/p&gt; 
&lt;p&gt;2.12.3 核函数特点及其作用 67&lt;/p&gt; 
&lt;p&gt;2.12.4 SVM为什么引入对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.5 如何理解SVM中的对偶问题 67&lt;/p&gt; 
&lt;p&gt;2.12.6 常见的核函数 69&lt;/p&gt; 
&lt;p&gt;2.12.7 SVM的主要特点 69&lt;/p&gt; 
&lt;p&gt;2.12.8 SVM的主要缺点 70&lt;/p&gt; 
&lt;p&gt;2.12.9 逻辑回归与SVM的异同 70&lt;/p&gt; 
&lt;p&gt;2.13 贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.1 贝叶斯分类器的基本原理 72&lt;/p&gt; 
&lt;p&gt;2.13.2 朴素贝叶斯分类器 72&lt;/p&gt; 
&lt;p&gt;2.13.3 举例理解朴素贝叶斯分类器 73&lt;/p&gt; 
&lt;p&gt;2.13.4 半朴素贝叶斯分类器 75&lt;/p&gt; 
&lt;p&gt;2.13.5 极大似然估计和贝叶斯估计的联系与区别 75&lt;/p&gt; 
&lt;p&gt;2.13.6 极大似然估计原理 76&lt;/p&gt; 
&lt;p&gt;2.13.7 图解极大似然估计 76&lt;/p&gt; 
&lt;p&gt;2.14 EM算法 77&lt;/p&gt; 
&lt;p&gt;2.14.1 EM算法的基本思想 77&lt;/p&gt; 
&lt;p&gt;2.14.2 EM算法推导 77&lt;/p&gt; 
&lt;p&gt;2.14.3 图解EM算法 78&lt;/p&gt; 
&lt;p&gt;2.14.4 EM算法流程 79&lt;/p&gt; 
&lt;p&gt;2.15 降维和聚类 79&lt;/p&gt; 
&lt;p&gt;2.15.1 图解为什么会产生维数灾难 79&lt;/p&gt; 
&lt;p&gt;2.15.2 怎样避免维数灾难 83&lt;/p&gt; 
&lt;p&gt;2.15.3 聚类和降维 83&lt;/p&gt; 
&lt;p&gt;2.15.4 聚类算法优劣的衡量标准 84&lt;/p&gt; 
&lt;p&gt;2.15.5 聚类和分类 85&lt;/p&gt; 
&lt;p&gt;2.15.6 聚类算法的性能比较 85&lt;/p&gt; 
&lt;p&gt;2.15.7 4种常用聚类方法比较 85&lt;/p&gt; 
&lt;p&gt;第3章 深度学习基础 89&lt;/p&gt; 
&lt;p&gt;3.1 基本概念 89&lt;/p&gt; 
&lt;p&gt;3.1.1 神经网络的类型 89&lt;/p&gt; 
&lt;p&gt;3.1.2 神经网络的常用模型结构 92&lt;/p&gt; 
&lt;p&gt;3.1.3 深度学习和机器学习的区别与联系 93&lt;/p&gt; 
&lt;p&gt;3.1.4 为什么使用深层表示 93&lt;/p&gt; 
&lt;p&gt;3.1.5 深度学习架构分类 94&lt;/p&gt; 
&lt;p&gt;3.1.6 如何选择深度学习开发平台 94&lt;/p&gt; 
&lt;p&gt;3.2 神经网络计算 95&lt;/p&gt; 
&lt;p&gt;3.2.1 前向传播和反向传播 95&lt;/p&gt; 
&lt;p&gt;3.2.2 如何计算神经网络的输出 96&lt;/p&gt; 
&lt;p&gt;3.2.3 如何计算卷积神经网络输出值 97&lt;/p&gt; 
&lt;p&gt;3.2.4 如何计算池化层输出值 100&lt;/p&gt; 
&lt;p&gt;3.2.5 反向传播实例 101&lt;/p&gt; 
&lt;p&gt;3.2.6 神经网络更“深”的意义 104&lt;/p&gt; 
&lt;p&gt;3.3 激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.1 为什么需要激活函数 104&lt;/p&gt; 
&lt;p&gt;3.3.2 为什么激活函数需要非线性函数 105&lt;/p&gt; 
&lt;p&gt;3.3.3 常见的激活函数及其图像 105&lt;/p&gt; 
&lt;p&gt;3.3.4 常见激活函数的导数计算 107&lt;/p&gt; 
&lt;p&gt;3.3.5 激活函数有哪些性质 108&lt;/p&gt; 
&lt;p&gt;3.3.6 如何选择激活函数 108&lt;/p&gt; 
&lt;p&gt;3.3.7 为什么tanh收敛速度比sigmoid快 109&lt;/p&gt; 
&lt;p&gt;3.3.8 Relu激活函数的优点 109&lt;/p&gt; 
&lt;p&gt;3.3.9 理解Relu激活函数的稀疏激活性 109&lt;/p&gt; 
&lt;p&gt;3.3.10 什么时候可以用线性激活函数 109&lt;/p&gt; 
&lt;p&gt;3.3.11 softmax函数的定义及作用 110&lt;/p&gt; 
&lt;p&gt;3.3.12 softmax函数如何应用于多分类 110&lt;/p&gt; 
&lt;p&gt;3.4 BATCH SIZE 112&lt;/p&gt; 
&lt;p&gt;3.4.1 为什么需要Batch Size 112&lt;/p&gt; 
&lt;p&gt;3.4.2 如何选择Batch Size值 112&lt;/p&gt; 
&lt;p&gt;3.4.3 调节Batch Size对训练效果的影响 113&lt;/p&gt; 
&lt;p&gt;3.4.4 在合理范围内增大Batch Size的好处 113&lt;/p&gt; 
&lt;p&gt;3.4.5 盲目增大Batch Size的坏处 114&lt;/p&gt; 
&lt;p&gt;3.5 归一化 114&lt;/p&gt; 
&lt;p&gt;3.5.1 理解归一化含义 114&lt;/p&gt; 
&lt;p&gt;3.5.2 归一化和标准化的联系与区别 114&lt;/p&gt; 
&lt;p&gt;3.5.3 为什么要归一化或标准化 115&lt;/p&gt; 
&lt;p&gt;3.5.4 图解为什么要归一化 115&lt;/p&gt; 
&lt;p&gt;3.5.5 为什么归一化能提高求最优解速度 115&lt;/p&gt; 
&lt;p&gt;3.5.6 归一化有哪些类型 116&lt;/p&gt; 
&lt;p&gt;3.5.7 局部响应归一化作用 116&lt;/p&gt; 
&lt;p&gt;3.5.8 局部响应归一化原理 117&lt;/p&gt; 
&lt;p&gt;3.5.9 什么是批归一化 118&lt;/p&gt; 
&lt;p&gt;3.5.10 批归一化的优点 118&lt;/p&gt; 
&lt;p&gt;3.5.11 批归一化算法流程 118&lt;/p&gt; 
&lt;p&gt;3.5.12 批归一化和组归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.13 权重归一化和批归一化比较 119&lt;/p&gt; 
&lt;p&gt;3.5.14 批归一化适用范围 120&lt;/p&gt; 
&lt;p&gt;3.5.15 BN、LN、IN和GN的对比 120&lt;/p&gt; 
&lt;p&gt;3.6 参数初始化 121&lt;/p&gt; 
&lt;p&gt;3.6.1 参数初始化应满足的条件 121&lt;/p&gt; 
&lt;p&gt;3.6.2 常用的几种初始化方式 121&lt;/p&gt; 
&lt;p&gt;3.6.3 全0初始化带来的问题 121&lt;/p&gt; 
&lt;p&gt;3.6.4 全都初始化为同样的值 122&lt;/p&gt; 
&lt;p&gt;3.6.5 初始化为小的随机数 123&lt;/p&gt; 
&lt;p&gt;3.6.6 用 校准方差 123&lt;/p&gt; 
&lt;p&gt;3.7 预训练与微调 123&lt;/p&gt; 
&lt;p&gt;3.7.1 什么是预训练和微调 123&lt;/p&gt; 
&lt;p&gt;3.7.2 预训练和微调的作用 124&lt;/p&gt; 
&lt;p&gt;3.7.3 预训练模型的复用 124&lt;/p&gt; 
&lt;p&gt;3.7.4 预训练和迁移学习 125&lt;/p&gt; 
&lt;p&gt;3.7.5 微调时网络参数是否更新 125&lt;/p&gt; 
&lt;p&gt;3.7.6 微调模型的三种状态 125&lt;/p&gt; 
&lt;p&gt;3.7.7 为什么深层神经网络难以训练 125&lt;/p&gt; 
&lt;p&gt;3.8 超参数 127&lt;/p&gt; 
&lt;p&gt;3.8.1 超参数有哪些 127&lt;/p&gt; 
&lt;p&gt;3.8.2 参数和模型的关系 127&lt;/p&gt; 
&lt;p&gt;3.8.3 参数和超参数的区别 127&lt;/p&gt; 
&lt;p&gt;3.8.4 如何寻找超参数的最优值 128&lt;/p&gt; 
&lt;p&gt;3.8.5 超参数搜索的一般过程 128&lt;/p&gt; 
&lt;p&gt;3.9 学习率 129&lt;/p&gt; 
&lt;p&gt;3.9.1 学习率的作用 129&lt;/p&gt; 
&lt;p&gt;3.9.2 学习率衰减的常用参数 129&lt;/p&gt; 
&lt;p&gt;3.9.3 常用的学习率衰减方法 129&lt;/p&gt; 
&lt;p&gt;3.10 正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.1 为什么要正则化 133&lt;/p&gt; 
&lt;p&gt;3.10.2 常见正则化方法 133&lt;/p&gt; 
&lt;p&gt;3.10.3 图解L1和L2正则化 134&lt;/p&gt; 
&lt;p&gt;3.10.4 Dropout具体工作流程 135&lt;/p&gt; 
&lt;p&gt;3.10.5 为什么Dropout可以解决过拟合问题 137&lt;/p&gt; 
&lt;p&gt;3.10.6 Dropout的缺点&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>laurent22/joplin</title>
      <link>https://github.com/laurent22/joplin</link>
      <description>&lt;p&gt;Joplin - an open source note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: https://discourse.joplinapp.org/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=E8JMYD2LQ8MMA&amp;amp;lc=GB&amp;amp;item_name=Joplin+Development&amp;amp;currency_code=EUR&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Donate-PayPal-green.svg&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/laurent22/&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/GitHub-Badge.svg&quot; alt=&quot;Sponsor on GitHub&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/joplin&quot;&gt;&lt;img src=&quot;https://joplinapp.org/images/badges/Patreon-Badge.svg&quot; alt=&quot;Become a patron&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Joplin&lt;/strong&gt; is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#markdown&quot;&gt;Markdown format&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Notes exported from Evernote via .enex files &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#importing&quot;&gt;can be imported&lt;/a&gt; into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.&lt;/p&gt; 
&lt;p&gt;The notes can be &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#synchronisation&quot;&gt;synchronised&lt;/a&gt; with various cloud services including &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;, Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.&lt;/p&gt; 
&lt;p&gt;The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;, to save web pages and screenshots from your browser, is also available for &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/joplin-web-clipper/&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Three types of applications are available: for the &lt;strong&gt;desktop&lt;/strong&gt; (Windows, macOS and Linux), for &lt;strong&gt;mobile&lt;/strong&gt; (Android and iOS) and for &lt;strong&gt;terminal&lt;/strong&gt; (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.&lt;/p&gt; 
&lt;h2&gt;Desktop applications&lt;/h2&gt; 
&lt;p&gt;Operating System | Download ---|--- Windows (32 and 64-bit) | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; macOS | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; Linux | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Windows&lt;/strong&gt;, you may also use the 
 &lt;!-- raw HTML omitted --&gt;Portable version
 &lt;!-- raw HTML omitted --&gt;. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Portable_application&quot;&gt;portable application&lt;/a&gt; allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called &quot;JoplinProfile&quot; next to the executable file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Linux&lt;/strong&gt;, the recommended way is to use the following installation script as it will handle the desktop icon too:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Mobile applications&lt;/h2&gt; 
&lt;p&gt;Operating System | Download | Alt. Download ---|---|--- Android | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | or download the APK file: &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.6.7/joplin-v1.6.7.apk&quot;&gt;64-bit&lt;/a&gt; &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.6.7/joplin-v1.6.7-32bit.apk&quot;&gt;32-bit&lt;/a&gt; iOS | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; | -&lt;/p&gt; 
&lt;h2&gt;Terminal application&lt;/h2&gt; 
&lt;p&gt;Operating system | Method -----------------|---------------- macOS, Linux, or Windows (via &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;amp;MSPPError=-2147217396&quot;&gt;WSL&lt;/a&gt;) | &lt;strong&gt;Important:&lt;/strong&gt; First, &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;install Node 12+&lt;/a&gt;.
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;By default, the application binary will be installed under &lt;code&gt;~/.joplin-bin&lt;/code&gt;. You may change this directory if needed. Alternatively, if your npm permissions are setup as described &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory&quot;&gt;here&lt;/a&gt; (Option 2) then simply running &lt;code&gt;npm -g install joplin&lt;/code&gt; would work.&lt;/p&gt; 
&lt;p&gt;To start it, type &lt;code&gt;joplin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For usage information, please refer to the full &lt;a href=&quot;https://joplinapp.org/terminal/&quot;&gt;Joplin Terminal Application Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Unsupported methods&lt;/h3&gt; 
&lt;p&gt;There are other ways to install the terminal application. However, they are not supported and problems must be reported to the upstream projects.&lt;/p&gt; 
&lt;p&gt;Operating system | Method -----------------|---------------- macOS | &lt;code&gt;brew install joplin&lt;/code&gt; Arch Linux | An Arch Linux package is available &lt;a href=&quot;https://aur.archlinux.org/packages/joplin/&quot;&gt;here&lt;/a&gt;. To install it, use an AUR wrapper such as yay: &lt;code&gt;yay -S joplin&lt;/code&gt;. Both the CLI tool (type &lt;code&gt;joplin&lt;/code&gt;) and desktop app (type &lt;code&gt;joplin-desktop&lt;/code&gt;) are packaged. You can also install a compiled version with the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur&quot;&gt;chaotic-aur&lt;/a&gt; repository. For support, please go to the &lt;a href=&quot;https://github.com/masterkorp/joplin-pkgbuild&quot;&gt;GitHub repo&lt;/a&gt;. If you are interested in &lt;a href=&quot;https://joplinapp.org/prereleases/&quot;&gt;pre-release&lt;/a&gt; you have &lt;a href=&quot;https://aur.archlinux.org/packages/joplin-beta&quot;&gt;joplin-beta&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Web Clipper&lt;/h2&gt; 
&lt;p&gt;The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper Help Page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;| | | | | :---: | :---: | :---: | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/devonzuegel&quot;&gt;Devon Zuegel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/konishi-t&quot;&gt;小西　孝宗&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/avanderberg&quot;&gt;Alexander van der Berg&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/nicholashead&quot;&gt;Nicholas Head&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/fbloise&quot;&gt;Frank Bloise&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/thomasbroussard&quot;&gt;Thomas Broussard&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/dbrandonjohnson&quot;&gt;Brandon Johnson&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/c-nagy&quot;&gt;@cnagy&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/clmntsl&quot;&gt;clmntsl&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://github.com/mcejp&quot;&gt;mcejp&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Applications&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/desktop.md&quot;&gt;Desktop application&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/mobile.md&quot;&gt;Mobile applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/terminal.md&quot;&gt;Terminal application&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Support&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://discourse.joplinapp.org&quot;&gt;Joplin Forum&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/e2ee.md&quot;&gt;How to enable end-to-end encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/conflict.md&quot;&gt;What is a conflict?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/debugging.md&quot;&gt;How to enable debug mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/rich_text_editor.md&quot;&gt;About the Rich Text editor limitations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/faq.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Joplin API - Get Started&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/overview.md&quot;&gt;Joplin API Overview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/get_started/plugins.md&quot;&gt;Plugin development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/tutorials/toc_plugin.md&quot;&gt;Plugin tutorial&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Joplin API - References&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://joplinapp.org/api/references/plugin_api/classes/joplin.html&quot;&gt;Plugin API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/references/rest_api.md&quot;&gt;Data API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/references/plugin_manifest.md&quot;&gt;Plugin manifest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/api/references/plugin_loading_rules.md&quot;&gt;Plugin loading rules&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Development&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/BUILD.md&quot;&gt;How to build the apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/e2ee.md&quot;&gt;End-to-end encryption spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/history.md&quot;&gt;Note History spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/sync_lock.md&quot;&gt;Sync Lock spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/plugins.md&quot;&gt;Plugin Architecture spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/search_sorting.md&quot;&gt;Search Sorting spec&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/server_file_url_format.md&quot;&gt;Server: File URL Format&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/server_delta_sync.md&quot;&gt;Server: Delta Sync&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Google Summer of Code 2020&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/gsoc2020/index.md&quot;&gt;Google Summer of Code 2020&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/gsoc2020/ideas.md&quot;&gt;Project Ideas&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;About&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/changelog.md&quot;&gt;Changelog (Desktop App)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/changelog_cli.md&quot;&gt;Changelog (CLI App)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/changelog_server.md&quot;&gt;Changelog (Server)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/stats.md&quot;&gt;Stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/donate.md&quot;&gt;Donate&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Desktop, mobile and terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt; for Firefox and Chrome.&lt;/li&gt; 
 &lt;li&gt;End To End Encryption (E2EE).&lt;/li&gt; 
 &lt;li&gt;Note history (revisions).&lt;/li&gt; 
 &lt;li&gt;Synchronisation with various services, including Nextcloud, Dropbox, WebDAV and OneDrive.&lt;/li&gt; 
 &lt;li&gt;Offline first, so the entire data is always available on the device even without an internet connection.&lt;/li&gt; 
 &lt;li&gt;Import Enex files (Evernote export format) and Markdown files.&lt;/li&gt; 
 &lt;li&gt;Export JEX files (Joplin Export format) and raw files.&lt;/li&gt; 
 &lt;li&gt;Support notes, to-dos, tags and notebooks.&lt;/li&gt; 
 &lt;li&gt;Sort notes by multiple criteria - title, updated time, etc.&lt;/li&gt; 
 &lt;li&gt;Support for alarms (notifications) in mobile and desktop applications.&lt;/li&gt; 
 &lt;li&gt;Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.&lt;/li&gt; 
 &lt;li&gt;Choice of both Markdown and Rich Text (WYSIWYG) editors.&lt;/li&gt; 
 &lt;li&gt;File attachment support - images are displayed, other files are linked and can be opened in the relevant application.&lt;/li&gt; 
 &lt;li&gt;Inline display of PDF, video and audio files.&lt;/li&gt; 
 &lt;li&gt;Goto Anything feature.&lt;/li&gt; 
 &lt;li&gt;Search functionality.&lt;/li&gt; 
 &lt;li&gt;Geo-location support.&lt;/li&gt; 
 &lt;li&gt;Supports multiple languages.&lt;/li&gt; 
 &lt;li&gt;External editor support - open notes in your favorite external editor with one click in Joplin.&lt;/li&gt; 
 &lt;li&gt;Extensible functionality through plugin and data APIs.&lt;/li&gt; 
 &lt;li&gt;Template support with data variables for auto creation of time &amp;amp; dates.&lt;/li&gt; 
 &lt;li&gt;Custom CSS support for customisation of both the rendered markdown and overall user interface.&lt;/li&gt; 
 &lt;li&gt;Customisable layout allows toggling, movement and sizing of various elements.&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts are editable and allow binding of most Joplin commands with export/import functionality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Importing&lt;/h1&gt; 
&lt;h2&gt;Importing from Evernote&lt;/h2&gt; 
&lt;p&gt;Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Recognition data - Evernote images, in particular scanned (or photographed) documents have &lt;a href=&quot;https://en.wikipedia.org/wiki/Optical_character_recognition&quot;&gt;recognition data&lt;/a&gt; associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting. If it is essential that this extra data is preserved then Joplin also allows import of ENEX files as HTML.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To import Evernote data, first export your Evernote notebooks to ENEX files as described &lt;a href=&quot;https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks&quot;&gt;here&lt;/a&gt;. Then follow these steps:&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import /path/to/file.enex&lt;/code&gt;. This will import the notes into a new notebook named after the filename.&lt;/p&gt; 
&lt;h2&gt;Importing from Markdown files&lt;/h2&gt; 
&lt;p&gt;Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;File import&lt;/strong&gt;: Go to File &amp;gt; Import &amp;gt; MD - Markdown (file) and select the Markdown file. This file will then be imported to the currently selected Notebook.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Directory import&lt;/strong&gt;: Go to File &amp;gt; Import &amp;gt; MD - Markdown (directory) and select the top level of the directory that is being imported. Directory (folder) structure will be preserved in the Notebook &amp;gt; Subnotebook &amp;gt; Note structure within Joplin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import --format md /path/to/file.md&lt;/code&gt; or &lt;code&gt;import --format md /path/to/directory/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Importing from other applications&lt;/h2&gt; 
&lt;p&gt;In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard Notes: Please see &lt;a href=&quot;https://programadorwebvalencia.com/migrate-notes-from-standard-notes-to-joplin/&quot;&gt;this tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tomboy Notes: Export the notes to ENEX files &lt;a href=&quot;https://askubuntu.com/questions/243691/how-can-i-export-my-tomboy-notes-into-evernote/608551&quot;&gt;as described here&lt;/a&gt; for example, and import these ENEX files into Joplin.&lt;/li&gt; 
 &lt;li&gt;OneNote: First &lt;a href=&quot;https://discussion.evernote.com/topic/107736-is-there-a-way-to-import-from-onenote-into-evernote-on-the-mac/&quot;&gt;import the notes from OneNote into Evernote&lt;/a&gt;. Then export the ENEX file from Evernote and import it into Joplin.&lt;/li&gt; 
 &lt;li&gt;NixNote: Synchronise with Evernote, then export the ENEX files and import them into Joplin. More info &lt;a href=&quot;https://discourse.joplinapp.org/t/import-from-nixnote/183/3&quot;&gt;in this thread&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Exporting&lt;/h1&gt; 
&lt;p&gt;Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A &quot;raw&quot; format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file. Joplin is also capable of exporting to a number of other formats including HTML and PDF which can be done for single notes, notebooks or everything.&lt;/p&gt; 
&lt;h1&gt;Synchronisation&lt;/h1&gt; 
&lt;p&gt;One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.&lt;/p&gt; 
&lt;p&gt;Currently, synchronisation is possible with Nextcloud, WebDAV, Dropbox, OneDrive or the local filesystem. To enable synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on &quot;Synchronise&quot; to start a synchronisation manually. Joplin will background sync automatically after any content change is made on the local application.&lt;/p&gt; 
&lt;p&gt;If the &lt;strong&gt;terminal client&lt;/strong&gt; has been installed, it is possible to also synchronise outside of the user interface by typing &lt;code&gt;joplin sync&lt;/code&gt; from the terminal. This can be used to setup a cron script to synchronise at a regular interval. For example, this would do it every 30 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt; */30 * * * * /path/to/joplin sync&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Nextcloud synchronisation&lt;/h2&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;Nextcloud
 &lt;!-- raw HTML omitted --&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it&#39;s open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, go to the Configuration screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally &lt;code&gt;https://example.com/nextcloud/remote.php/webdav/Joplin&lt;/code&gt; (&lt;strong&gt;make sure to create the &quot;Joplin&quot; directory in Nextcloud&lt;/strong&gt;), and set the username and password. If it does not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues/61#issuecomment-373282608&quot;&gt;see this explanation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, you will need to set the &lt;code&gt;sync.target&lt;/code&gt; config variable and all the &lt;code&gt;sync.5.path&lt;/code&gt;, &lt;code&gt;sync.5.username&lt;/code&gt; and &lt;code&gt;sync.5.password&lt;/code&gt; config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
:config sync.5.username YOUR_USERNAME
:config sync.5.password YOUR_PASSWORD
:config sync.target 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.&lt;/p&gt; 
&lt;h2&gt;WebDAV synchronisation&lt;/h2&gt; 
&lt;p&gt;Select the &quot;WebDAV&quot; synchronisation target and follow the same instructions as for Nextcloud above (for the &lt;strong&gt;terminal application&lt;/strong&gt; you will need to select sync target 6 rather than 5)&lt;/p&gt; 
&lt;p&gt;WebDAV-compatible services that are known to work with Joplin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://httpd.apache.org/docs/current/mod/mod_dav.html&quot;&gt;Apache WebDAV Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivehq.com&quot;&gt;DriveHQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastmail.com/&quot;&gt;Fastmail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.strato.fr/stockage-en-ligne/&quot;&gt;HiDrive&lt;/a&gt; from Strato. &lt;a href=&quot;https://github.com/laurent22/joplin/issues/309&quot;&gt;Setup help&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_dav_module.html&quot;&gt;Nginx WebDAV Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://owncloud.org/&quot;&gt;OwnCloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seafile.com/&quot;&gt;Seafile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transip.nl/stack/&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.synology.com/en-us/dsm/packages/WebDAVServer&quot;&gt;Synology WebDAV Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schimera.com/products/webdav-nav-server/&quot;&gt;WebDAV Nav&lt;/a&gt;, a macOS server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zimbra.com/&quot;&gt;Zimbra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dropbox synchronisation&lt;/h2&gt; 
&lt;p&gt;When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in &lt;code&gt;/Apps/Joplin&lt;/code&gt; and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;Dropbox&quot; as the synchronisation target in the Configuration screen (it is selected by default). Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application.&lt;/p&gt; 
&lt;h2&gt;OneDrive synchronisation&lt;/h2&gt; 
&lt;p&gt;When syncing with OneDrive, Joplin creates a sub-directory in OneDrive, in /Apps/Joplin and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;OneDrive&quot; as the synchronisation target in the Configuration screen. Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application (simply input your Microsoft credentials - you do not need to register with OneDrive).&lt;/p&gt; 
&lt;h1&gt;Encryption&lt;/h1&gt; 
&lt;p&gt;Joplin supports end-to-end encryption (E2EE) on all the applications. E2EE is a system where only the owner of the notes, notebooks, tags or resources can read them. It prevents potential eavesdroppers - including telecom providers, internet providers, and even the developers of Joplin from being able to access the data. Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/e2ee.md&quot;&gt;End-To-End Encryption Tutorial&lt;/a&gt; for more information about this feature and how to enable it.&lt;/p&gt; 
&lt;p&gt;For a more technical description, mostly relevant for development or to review the method being used, please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/spec/e2ee.md&quot;&gt;Encryption specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Note history&lt;/h1&gt; 
&lt;p&gt;The Joplin applications automatically save previous versions of your notes at regular intervals. These versions are synced across devices and can be viewed from the desktop application. To do so, click on the &quot;Information&quot; button on a note, then click on &quot;Previous version of this note&quot;. From this screen you can view the previous versions of the note as well as restore any of them.&lt;/p&gt; 
&lt;p&gt;This feature can be disabled from the &quot;Note history&quot; section in the Configuration screen, and it is also possible to change for how long the history of a note is saved.&lt;/p&gt; 
&lt;p&gt;More information please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/note_history.md&quot;&gt;Note History page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;External text editor&lt;/h1&gt; 
&lt;p&gt;Joplin notes can be opened and edited using an external editor of your choice. It can be a simple text editor like Notepad++ or Sublime Text or an actual Markdown editor like Typora. In that case, images will also be displayed within the editor. To open the note in an external editor, click on the icon in the toolbar or press Ctrl+E (or Cmd+E). Your default text editor will be used to open the note. If needed, you can also specify the editor directly in the General Options, under &quot;Text editor command&quot;.&lt;/p&gt; 
&lt;h1&gt;Attachments&lt;/h1&gt; 
&lt;p&gt;Any kind of file can be attached to a note. In Markdown, links to these files are represented as a simple ID to the attachment, clicking on this link will open the file in the default application. In the case of audio, video and pdf files, these will be displayed inline with the note and so can be viewed or played within Joplin.&lt;/p&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, files can be attached either by clicking the &quot;Attach file&quot; icon in the editor or via drag and drop. If you prefer to create a link to a local file instead, hold the ALT key while performing the drag and drop operation. You can also copy and paste images directly in the editor via Ctrl+V.&lt;/p&gt; 
&lt;p&gt;Resources that are not attached to any note will be automatically deleted in accordance to the &lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/#note-history&quot;&gt;Note History&lt;/a&gt; settings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Resources larger than 10 MB are not currently supported on mobile. They will crash the application when synchronising so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/p&gt; 
&lt;h2&gt;Downloading attachments&lt;/h2&gt; 
&lt;p&gt;The way the attachments are downloaded during synchronisation can be customised in the Configuration screen, under &quot;Attachment download behaviour&quot;. The default option (&quot;Always&quot;) is to download all the attachments, all the time, so that the data is available even when the device is offline. There is also the option to download the attachments manually (option &quot;Manual&quot;), by clicking on it, or automatically (Option &quot;Auto&quot;), in which case the attachments are downloaded only when a note is opened. These options should help saving disk space and network bandwidth, especially on mobile.&lt;/p&gt; 
&lt;h1&gt;Notifications&lt;/h1&gt; 
&lt;p&gt;In the desktop and mobile apps, an alarm can be associated with any to-do. It will be triggered at the given time by displaying a notification. How the notification will be displayed depends on the operating system since each has a different way to handle this. Please see below for the requirements for the desktop applications:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &amp;gt;= 8. Make sure the Action Center is enabled on Windows. Task bar balloon for Windows &amp;lt; 8. Growl as fallback. Growl takes precedence over Windows balloons.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &amp;gt;= 10.8 or Growl if earlier.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;notify-osd&lt;/code&gt; or &lt;code&gt;libnotify-bin&lt;/code&gt; installed (Ubuntu should have this by default). Growl otherwise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/mikaelbr/node-notifier/blob/master/DECISION_FLOW.md&quot;&gt;documentation and flow chart for reporter choice&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On mobile, the alarms will be displayed using the built-in notification system.&lt;/p&gt; 
&lt;p&gt;If for any reason the notifications do not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Sub-notebooks&lt;/h1&gt; 
&lt;p&gt;Sub-notebooks allow organising multiple notebooks into a tree of notebooks. For example it can be used to regroup all the notebooks related to work, to family or to a particular project under a parent notebook.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://joplinapp.org/images/SubNotebooks.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, to create a subnotebook, drag and drop it onto another notebook. To move it back to the root, drag and drop it on the &quot;Notebooks&quot; header. Currently only the desktop app can be used to organise the notebooks.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;mobile application&lt;/strong&gt; supports displaying and collapsing/expanding the tree of notebooks, however it does not currently support moving the subnotebooks to different notebooks.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;terminal app&lt;/strong&gt; supports displaying the tree of subnotebooks but it does not support collapsing/expanding them or moving the subnotebooks around.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Markdown&lt;/h1&gt; 
&lt;p&gt;Joplin uses and renders a Github-flavoured Markdown with a few variations and additions. In particular it adds math formula support, interactive checkboxes and support for note links. Joplin also supports Markdown plugins which allow enabling and disabling various advanced Markdown features. Have a look at the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h1&gt;Custom CSS&lt;/h1&gt; 
&lt;p&gt;Rendered markdown can be customized by placing a userstyle file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userstyle.css&lt;/code&gt; (This path might be different on your device - check at the top of the &lt;code&gt;General&lt;/code&gt; page of the Configuration menu for the exact path). This file supports standard CSS syntax. Joplin &lt;em&gt;&lt;strong&gt;must&lt;/strong&gt;&lt;/em&gt; be restarted for the new css to be applied, please ensure that Joplin is not closing to the tray, but is actually exiting. Note that this file is used for both displaying the notes and printing the notes. Be aware how the CSS may look printed (for example, printing white text over a black background is usually not wanted).&lt;/p&gt; 
&lt;p&gt;The whole UI can be customized by placing a custom editor style file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userchrome.css&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Important: userstyle.css and userchrome.css are provided for your convenience, but they are advanced settings, and styles you define may break from one version to the next. If you want to use them, please know that it might require regular development work from you to keep them working. The Joplin team cannot make a commitment to keep the application HTML structure stable.&lt;/p&gt; 
&lt;h1&gt;Note templates&lt;/h1&gt; 
&lt;p&gt;In the &lt;strong&gt;desktop app&lt;/strong&gt;, templates can be used to create new notes or to insert into existing ones by adding a template file to the &lt;code&gt;templates&lt;/code&gt; directory (File &amp;gt; Templates). For example creating the file &lt;code&gt;hours.md&lt;/code&gt; in the &lt;code&gt;templates&lt;/code&gt; directory with the contents:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-markdown&quot;&gt;Date: {{date}}
Hours:
Details:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Templates can then be inserted from the menu (File-&amp;gt;Templates).&lt;/p&gt; 
&lt;p&gt;The currently supported template variables are:&lt;/p&gt; 
&lt;p&gt;| Variable | Description | Example | | --- | --- | --- | | &lt;code&gt;{{date}}&lt;/code&gt; | Today&#39;s date formatted based on the settings format | 2019-01-01 | | &lt;code&gt;{{time}}&lt;/code&gt; | Current time formatted based on the settings format | 13:00 | | &lt;code&gt;{{datetime}}&lt;/code&gt; | Current date and time formatted based on the settings format | 01/01/19 1:00 PM | | &lt;code&gt;{{#custom_datetime}}&lt;/code&gt; | Current date and/or time formatted based on a supplied string (using &lt;a href=&quot;https://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; formatting) | &lt;code&gt;{{#custom_datetime}}M d{{/custom_datetime}}&lt;/code&gt; | | &lt;code&gt;{{bowm}}&lt;/code&gt; | Date of the beginning of the week (when week starts on Monday) based on the settings format | | | &lt;code&gt;{{bows}}&lt;/code&gt; | Date of the beginning of the week (when week starts on Sunday) based on the settings format | |&lt;/p&gt; 
&lt;h1&gt;Plugins&lt;/h1&gt; 
&lt;p&gt;The &lt;strong&gt;desktop app&lt;/strong&gt; has the ability to extend beyond its standard functionality by the way of plugins. These plugins adhere to the Joplin plugin API and can be installed &amp;amp; configured within the application via the &lt;code&gt;Plugins&lt;/code&gt; page in the Configuration screen. This menu allows the manual installation of the plugin using the single &#39;Joplin Plugin Archive&#39; (*.jpl) file. Once the application is reloaded the plugins will appear within the plugins menu where they can be toggled on/off or removed entirely.&lt;/p&gt; 
&lt;p&gt;Plugins are currently maintained by the community in the &lt;a href=&quot;https://discourse.joplinapp.org/c/plugins/18&quot;&gt;Joplin Discourse &#39;plugins&#39; category&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information see &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/plugins.md&quot;&gt;Plugins&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Searching&lt;/h1&gt; 
&lt;p&gt;Joplin implements the SQLite Full Text Search (FTS4) extension. It means the content of all the notes is indexed in real time and search queries return results very fast. Both &lt;a href=&quot;https://www.sqlite.org/fts3.html#simple_fts_queries&quot;&gt;Simple FTS Queries&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/fts3.html#full_text_index_queries&quot;&gt;Full-Text Index Queries&lt;/a&gt; are supported. See below for the list of supported queries:&lt;/p&gt; 
&lt;h2&gt;Supported queries&lt;/h2&gt; 
&lt;p&gt;Search type | Description | Example ------------|-------------|--------- Single word | Returns all the notes that contain this term. | For example, searching for &lt;code&gt;cat&lt;/code&gt; will return all the notes that contain this exact word. Note: it will not return the notes that contain the substring - thus, for &quot;cat&quot;, notes that contain &quot;cataclysmic&quot; or &quot;prevaricate&quot; will &lt;strong&gt;not&lt;/strong&gt; be returned. Multiple word | Returns all the notes that contain &lt;strong&gt;all&lt;/strong&gt; these words, but not necessarily next to each other. | &lt;code&gt;dog cat&lt;/code&gt; - will return any notes that contain the words &quot;dog&quot; and &quot;cat&quot; anywhere in the note, no necessarily in that order nor next to each other. It will &lt;strong&gt;not&lt;/strong&gt; return results that contain &quot;dog&quot; or &quot;cat&quot; only. Phrase | Add double quotes to return the notes that contain exactly this phrase. | &lt;code&gt;&quot;shopping list&quot;&lt;/code&gt; - will return the notes that contain these &lt;strong&gt;exact terms&lt;/strong&gt; next to each other and in this order. It will &lt;strong&gt;not&lt;/strong&gt; return for example a note that contains &quot;going shopping with my list&quot;. Prefix | Add a wildcard to return all the notes that contain a term with a specified prefix. | &lt;code&gt;swim*&lt;/code&gt; - will return all the notes that contain eg. &quot;swim&quot;, but also &quot;swimming&quot;, &quot;swimsuit&quot;, etc. IMPORTANT: The wildcard &lt;strong&gt;can only be at the end&lt;/strong&gt; - it will be ignored at the beginning of a word (eg. &lt;code&gt;*swim&lt;/code&gt;) and will be treated as a literal asterisk in the middle of a word (eg. &lt;code&gt;ast*rix&lt;/code&gt;) Switch to basic search | One drawback of Full Text Search is that it ignores most non-alphabetical characters. However in some cases you might want to search for this too. To do that, you can use basic search. You switch to this mode by prefixing your search with a slash &lt;code&gt;/&lt;/code&gt;. This won&#39;t provide the benefits of FTS but it will allow searching exactly for what you need. Note that it can also be much slower, even extremely slow, depending on your query. | &lt;code&gt;/&quot;- [ ]&quot;&lt;/code&gt; - will return all the notes that contain unchecked checkboxes.&lt;/p&gt; 
&lt;h2&gt;Search filters&lt;/h2&gt; 
&lt;p&gt;You can also use search filters to further restrict the search.&lt;/p&gt; 
&lt;p&gt;| Operator | Description | Example | | --- | --- | --- | |&lt;strong&gt;-&lt;/strong&gt;|If placed before a text term, it excludes the notes that contain that term. You can also place it before a filter to negate it. |&lt;code&gt;-spam&lt;/code&gt; searches for all notes without the word &lt;code&gt;spam&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;office -trash&lt;/code&gt; searches for all notes with the word&lt;code&gt;office&lt;/code&gt; and without the word &lt;code&gt;trash&lt;/code&gt;.| |&lt;strong&gt;any:&lt;/strong&gt;|Return notes that satisfy any/all of the required conditions. &lt;code&gt;any:0&lt;/code&gt; is the default, which means all conditions must be satisfied.|&lt;code&gt;any:1 cat dog&lt;/code&gt; will return notes that have the word &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;dog&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;any:0 cat dog&lt;/code&gt; will return notes with both the words &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;dog&lt;/code&gt;. | | &lt;strong&gt;title:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;body:&lt;/strong&gt;|Restrict your search to just the title or the body field.|&lt;code&gt;title:&quot;hello world&quot;&lt;/code&gt; searches for notes whose title contains &lt;code&gt;hello&lt;/code&gt; and &lt;code&gt;world&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;title:hello -body:world&lt;/code&gt; searches for notes whose title contains &lt;code&gt;hello&lt;/code&gt; and body does not contain &lt;code&gt;world&lt;/code&gt;. | &lt;strong&gt;tag:&lt;/strong&gt; |Restrict the search to the notes with the specified tags.|&lt;code&gt;tag:office&lt;/code&gt; searches for all notes having tag office.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:office tag:important&lt;/code&gt; searches for all notes having both office and important tags.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:office -tag:spam&lt;/code&gt; searches for notes having tag &lt;code&gt;office&lt;/code&gt; which do not have tag &lt;code&gt;spam&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;any:1 tag:office tag:spam&lt;/code&gt; searches for notes having tag &lt;code&gt;office&lt;/code&gt; or tag &lt;code&gt;spam&lt;/code&gt;.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:be*ful&lt;/code&gt; does a search with wildcards.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;tag:*&lt;/code&gt; returns all notes with tags.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;-tag:*&lt;/code&gt; returns all notes without tags.| | &lt;strong&gt;notebook:&lt;/strong&gt; | Restrict the search to the specified notebook(s). It cannot be negated. |&lt;code&gt;notebook:books&lt;/code&gt; limits the search scope within &lt;code&gt;books&lt;/code&gt; and all its subnotebooks.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;notebook:wheel*time&lt;/code&gt; does a wildcard search.| | &lt;strong&gt;created:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;updated:&lt;/strong&gt; | Searches for notes created/updated on dates specified using YYYYMMDD format. You can also search relative to the current day, week, month, or year. | &lt;code&gt;created:20201218&lt;/code&gt; will return notes created on or after December 18, 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;-updated:20201218&lt;/code&gt; will return notes updated before December 18, 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;created:20200118 -created:20201215&lt;/code&gt; will return notes created between January 18, 2020, and before December 15, 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;created:202001 -created:202003&lt;/code&gt; will return notes created on or after January and before March 2020.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;updated:1997 -updated:2020&lt;/code&gt; will return all notes updated between the years 1997 and 2019.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;created:day-2&lt;/code&gt; searches for all notes created in the past two days.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;updated:year-0&lt;/code&gt; searches all notes updated in the current year. | &lt;strong&gt;type:&lt;/strong&gt; |Restrict the search to either notes or todos. | &lt;code&gt;type:note&lt;/code&gt; to return all notes
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;type:todo&lt;/code&gt; to return all todos | | &lt;strong&gt;iscompleted:&lt;/strong&gt; | Restrict the search to either completed or uncompleted todos. | &lt;code&gt;iscompleted:1&lt;/code&gt; to return all completed todos
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;iscompleted:0&lt;/code&gt; to return all uncompleted todos| |&lt;strong&gt;latitude:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;longitude:&lt;/strong&gt; 
 &lt;!-- raw HTML omitted --&gt; &lt;strong&gt;altitude:&lt;/strong&gt;|Filter by location|&lt;code&gt;latitude:40 -latitude:50&lt;/code&gt; to return notes with latitude &amp;gt;= 40 and &amp;lt; 50 | |&lt;strong&gt;resource:&lt;/strong&gt;|Filter by attachment MIME type|&lt;code&gt;resource:image/jpeg&lt;/code&gt; to return notes with a jpeg attachment.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;-resource:application/pdf&lt;/code&gt; to return notes without a pdf attachment.
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;resource:image/*&lt;/code&gt; to return notes with any images.| |&lt;strong&gt;sourceurl:&lt;/strong&gt;|Filter by source URL|&lt;code&gt;sourceurl:https://www.google.com&lt;/code&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;sourceurl:*joplinapp.org&lt;/code&gt; to perform a wildcard search.|&lt;/p&gt; 
&lt;p&gt;Note: In the CLI client you have to escape the query using &lt;code&gt;--&lt;/code&gt; when using negated filters. Eg. &lt;code&gt;:search -- &quot;-tag:tag1&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The filters are implicitly connected by and/or connectives depending on the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, all filters are connected by &quot;AND&quot;.&lt;/li&gt; 
 &lt;li&gt;To override this default behaviour, use the &lt;code&gt;any&lt;/code&gt; filter, in which case the search terms will be connected by &quot;OR&quot; instead.&lt;/li&gt; 
 &lt;li&gt;There&#39;s an exception for the &lt;code&gt;notebook&lt;/code&gt; filters which are connected by &quot;OR&quot;. The reason being that no note can be in multiple notebooks at once.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Search order&lt;/h2&gt; 
&lt;p&gt;Notes are sorted by &quot;relevance&quot;. Currently it means the notes that contain the requested terms the most times are on top. For queries with multiple terms, it also matters how close to each other the terms are. This is a bit experimental so if you notice a search query that returns unexpected results, please report it in the forum, providing as many details as possible to replicate the issue.&lt;/p&gt; 
&lt;h1&gt;Goto Anything&lt;/h1&gt; 
&lt;p&gt;In the desktop application, press 
 &lt;!-- raw HTML omitted --&gt;Ctrl+G
 &lt;!-- raw HTML omitted --&gt; or 
 &lt;!-- raw HTML omitted --&gt;Cmd+G
 &lt;!-- raw HTML omitted --&gt; and type a note title or part of its content to jump to it. Or type 
 &lt;!-- raw HTML omitted --&gt;#
 &lt;!-- raw HTML omitted --&gt; followed by a tag name, or 
 &lt;!-- raw HTML omitted --&gt;@
 &lt;!-- raw HTML omitted --&gt; followed by a notebook name.&lt;/p&gt; 
&lt;h1&gt;Privacy&lt;/h1&gt; 
&lt;p&gt;Joplin values your privacy and security by giving you complete control over your information and digital footprint.&lt;/p&gt; 
&lt;p&gt;Joplin applications do not send any data to any service without your authorisation. Any data that Joplin saves, such as notes or images, are saved to your own device and you are free to delete this data at any time.&lt;/p&gt; 
&lt;p&gt;Joplin has many modern features, some of which use third-party services. You can disable any or all of these features in the application settings. These features are:&lt;/p&gt; 
&lt;p&gt;|Feature | Description | Default| |--------|-------------|--------| |Auto-update|Joplin periodically connects to GitHub to check for new releases.|Enabled| |Geo-location|Joplin saves geo-location information in note properties when you create a note.|Enabled| |Synchronisation|Joplin supports synchronisation of your notes across multiple devices. If you choose to synchronise with a third-party, such as OneDrive, the notes will be sent to your OneDrive account, in which case the third-party privacy policy applies.|Disabled|&lt;/p&gt; 
&lt;p&gt;Joplin is developed as an open-source application and the source code is freely available online to inspect.&lt;/p&gt; 
&lt;p&gt;For any question about Joplin privacy, please leave a message on the &lt;a href=&quot;https://discourse.joplinapp.org/&quot;&gt;Joplin Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Donations&lt;/h1&gt; 
&lt;p&gt;Donations to Joplin support the development of the project. Developing quality applications mostly takes time, but there are also some expenses, such as digital certificates to sign the applications, app store fees, hosting, etc. Most of all, your donation will make it possible to keep up the current development standard.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/readme/donate.md&quot;&gt;donation page&lt;/a&gt; for information on how to support the development of Joplin.&lt;/p&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;Name | Description --- | --- &lt;a href=&quot;https://discourse.joplinapp.org/&quot;&gt;Support Forum&lt;/a&gt; | This is the main place for general discussion about Joplin, user support, software development questions, and to discuss new features. Also where the latest beta versions are released and discussed. &lt;a href=&quot;https://www.reddit.com/r/joplinapp/&quot;&gt;Sub-reddit&lt;/a&gt; | Also a good place to get help &lt;a href=&quot;https://discordapp.com/invite/d2HMPwE&quot;&gt;Discord server&lt;/a&gt; | Our chat server &lt;a href=&quot;https://www.patreon.com/joplin&quot;&gt;Patreon page&lt;/a&gt; |The latest news are often posted there &lt;a href=&quot;https://mastodon.social/@joplinapp&quot;&gt;Mastodon feed&lt;/a&gt; | Follow us on Mastodon &lt;a href=&quot;https://twitter.com/joplinapp&quot;&gt;Twitter feed&lt;/a&gt; | Follow us on Twitter&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please see the guide for information on how to contribute to the development of Joplin: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md&lt;/p&gt; 
&lt;h1&gt;Localisation&lt;/h1&gt; 
&lt;p&gt;Joplin is currently available in the languages below. If you would like to contribute a &lt;strong&gt;new translation&lt;/strong&gt;, it is quite straightforward, please follow these steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://poedit.net/&quot;&gt;Download Poedit&lt;/a&gt;, the translation editor, and install it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/laurent22/joplin/dev/packages/tools/locales/joplin.pot&quot;&gt;Download the file to be translated&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;In Poedit, open this .pot file, go into the Catalog menu and click Configuration. Change &quot;Country&quot; and &quot;Language&quot; to your own country and language.&lt;/li&gt; 
 &lt;li&gt;From then you can translate the file.&lt;/li&gt; 
 &lt;li&gt;Once it is done, please &lt;a href=&quot;https://github.com/laurent22/joplin/pulls&quot;&gt;open a pull request&lt;/a&gt; and add the file to it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This translation will apply to the three applications - desktop, mobile and terminal.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;update a translation&lt;/strong&gt;, follow the same steps as above but instead of getting the .pot file, get the .po file for your language from the table below.&lt;/p&gt; 
&lt;p&gt;Current translations:&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;&amp;nbsp; | Language | Po File | Last translator | Percent done ---|---|---|---|--- &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/arableague.png&quot; alt=&quot;&quot;&gt; | Arabic | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ar.po&quot;&gt;ar&lt;/a&gt; | &lt;a href=&quot;mailto:fi_ahmed_bacha@esi.dz&quot;&gt;أحمد باشا إبراهيم&lt;/a&gt; | 73% &lt;img src=&quot;https://joplinapp.org/images/flags/es/basque_country.png&quot; alt=&quot;&quot;&gt; | Basque | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/eu.po&quot;&gt;eu&lt;/a&gt; | juan.abasolo@ehu.eus | 31% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ba.png&quot; alt=&quot;&quot;&gt; | Bosnian (Bosna i Hercegovina) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/bs_BA.po&quot;&gt;bs_BA&lt;/a&gt; | &lt;a href=&quot;mailto:dervis.t@pm.me&quot;&gt;Derviš T.&lt;/a&gt; | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/bg.png&quot; alt=&quot;&quot;&gt; | Bulgarian (България) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/bg_BG.po&quot;&gt;bg_BG&lt;/a&gt; | | 60% &lt;img src=&quot;https://joplinapp.org/images/flags/es/catalonia.png&quot; alt=&quot;&quot;&gt; | Catalan | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ca.po&quot;&gt;ca&lt;/a&gt; | jmontane, 2019 | 87% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/hr.png&quot; alt=&quot;&quot;&gt; | Croatian (Hrvatska) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/hr_HR.po&quot;&gt;hr_HR&lt;/a&gt; | &lt;a href=&quot;mailto:trbuhom@net.hr&quot;&gt;Hrvoje Mandić&lt;/a&gt; | 25% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/cz.png&quot; alt=&quot;&quot;&gt; | Czech (Česká republika) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/cs_CZ.po&quot;&gt;cs_CZ&lt;/a&gt; | &lt;a href=&quot;mailto:lukas@aiya.cz&quot;&gt;Lukas Helebrandt&lt;/a&gt; | 91% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/dk.png&quot; alt=&quot;&quot;&gt; | Dansk (Danmark) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/da_DK.po&quot;&gt;da_DK&lt;/a&gt; | Mustafa Al-Dailemi (dailemi@hotmail.com)Language-Team: | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/de.png&quot; alt=&quot;&quot;&gt; | Deutsch (Deutschland) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/de_DE.po&quot;&gt;de_DE&lt;/a&gt; | &lt;a href=&quot;mailto:atalanttore@users.noreply.github.com&quot;&gt;Ettore Atalan&lt;/a&gt; | 93% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ee.png&quot; alt=&quot;&quot;&gt; | Eesti Keel (Eesti) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/et_EE.po&quot;&gt;et_EE&lt;/a&gt; | | 60% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/gb.png&quot; alt=&quot;&quot;&gt; | English (United Kingdom) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/en_GB.po&quot;&gt;en_GB&lt;/a&gt; | | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/us.png&quot; alt=&quot;&quot;&gt; | English (United States of America) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/en_US.po&quot;&gt;en_US&lt;/a&gt; | | 100% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/es.png&quot; alt=&quot;&quot;&gt; | Español (España) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/es_ES.po&quot;&gt;es_ES&lt;/a&gt; | &lt;a href=&quot;mailto:mario.campo@gmail.com&quot;&gt;Mario Campo&lt;/a&gt; | 96% &lt;img src=&quot;https://joplinapp.org/images/flags/esperanto.png&quot; alt=&quot;&quot;&gt; | Esperanto | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/eo.po&quot;&gt;eo&lt;/a&gt; | Marton Paulo | 34% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/fi.png&quot; alt=&quot;&quot;&gt; | Finnish (Suomi) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/fi_FI.po&quot;&gt;fi_FI&lt;/a&gt; | | 91% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/fr.png&quot; alt=&quot;&quot;&gt; | Français (France) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/fr_FR.po&quot;&gt;fr_FR&lt;/a&gt; | Laurent Cozic | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/es/galicia.png&quot; alt=&quot;&quot;&gt; | Galician (España) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/gl_ES.po&quot;&gt;gl_ES&lt;/a&gt; | &lt;a href=&quot;mailto:marcoslansgarza@gmail.com&quot;&gt;Marcos Lans&lt;/a&gt; | 39% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/id.png&quot; alt=&quot;&quot;&gt; | Indonesian (Indonesia) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/id_ID.po&quot;&gt;id_ID&lt;/a&gt; | &lt;a href=&quot;mailto:16875937+fathyar@users.noreply.github.com&quot;&gt;Fathy AR&lt;/a&gt; | 95% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/it.png&quot; alt=&quot;&quot;&gt; | Italiano (Italia) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/it_IT.po&quot;&gt;it_IT&lt;/a&gt; | &lt;a href=&quot;mailto:mailfilledwithspam@gmail.com&quot;&gt;Alessandro Bernardello&lt;/a&gt; | 94% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/be.png&quot; alt=&quot;&quot;&gt; | Nederlands (België,&amp;nbsp;Belgique,&amp;nbsp;Belgien) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/nl_BE.po&quot;&gt;nl_BE&lt;/a&gt; | | 31% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/nl.png&quot; alt=&quot;&quot;&gt; | Nederlands (Nederland) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/nl_NL.po&quot;&gt;nl_NL&lt;/a&gt; | &lt;a href=&quot;mailto:metbril@users.noreply.github.com&quot;&gt;MetBril&lt;/a&gt; | 91% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/no.png&quot; alt=&quot;&quot;&gt; | Norwegian (Norge,&amp;nbsp;Noreg) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/nb_NO.po&quot;&gt;nb_NO&lt;/a&gt; | &lt;a href=&quot;mailto:code@mxe.no&quot;&gt;Mats Estensen&lt;/a&gt; | 80% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ir.png&quot; alt=&quot;&quot;&gt; | Persian | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/fa.po&quot;&gt;fa&lt;/a&gt; | &lt;a href=&quot;mailto:kourox@protonmail.com&quot;&gt;Kourosh Firoozbakht&lt;/a&gt; | 75% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/pl.png&quot; alt=&quot;&quot;&gt; | Polski (Polska) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/pl_PL.po&quot;&gt;pl_PL&lt;/a&gt; | | 90% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/br.png&quot; alt=&quot;&quot;&gt; | Português (Brasil) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/pt_BR.po&quot;&gt;pt_BR&lt;/a&gt; | &lt;a href=&quot;mailto:rnbastos@gmail.com&quot;&gt;Renato Nunes Bastos&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/pt.png&quot; alt=&quot;&quot;&gt; | Português (Portugal) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/pt_PT.po&quot;&gt;pt_PT&lt;/a&gt; | &lt;a href=&quot;mailto:jduar@protonmail.com&quot;&gt;João Duarte&lt;/a&gt; | 90% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ro.png&quot; alt=&quot;&quot;&gt; | Română | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ro.po&quot;&gt;ro&lt;/a&gt; | &lt;a href=&quot;mailto:cristi.duluta@gmail.com&quot;&gt;Cristi Duluta&lt;/a&gt; | 70% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/si.png&quot; alt=&quot;&quot;&gt; | Slovenian (Slovenija) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/sl_SI.po&quot;&gt;sl_SI&lt;/a&gt; | | 39% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/se.png&quot; alt=&quot;&quot;&gt; | Svenska | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/sv.po&quot;&gt;sv&lt;/a&gt; | &lt;a href=&quot;mailto:jonatan@autistici.org&quot;&gt;Jonatan Nyberg&lt;/a&gt; | 64% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/th.png&quot; alt=&quot;&quot;&gt; | Thai (ประเทศไทย) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/th_TH.po&quot;&gt;th_TH&lt;/a&gt; | | 48% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/vi.png&quot; alt=&quot;&quot;&gt; | Tiếng Việt | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/vi.po&quot;&gt;vi&lt;/a&gt; | | 77% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/tr.png&quot; alt=&quot;&quot;&gt; | Türkçe (Türkiye) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/tr_TR.po&quot;&gt;tr_TR&lt;/a&gt; | &lt;a href=&quot;mailto:arda@kilicdagi.com&quot;&gt;Arda Kılıçdağı&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/gr.png&quot; alt=&quot;&quot;&gt; | Ελληνικά (Ελλάδα) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/el_GR.po&quot;&gt;el_GR&lt;/a&gt; | &lt;a href=&quot;mailto:xaris@tuta.io&quot;&gt;Harris Arvanitis&lt;/a&gt; | 87% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/ru.png&quot; alt=&quot;&quot;&gt; | Русский (Россия) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ru_RU.po&quot;&gt;ru_RU&lt;/a&gt; | &lt;a href=&quot;mailto:thesermanarm@gmail.com&quot;&gt;Sergey Segeda&lt;/a&gt; | 94% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/rs.png&quot; alt=&quot;&quot;&gt; | српски језик (Србија) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/sr_RS.po&quot;&gt;sr_RS&lt;/a&gt; | | 67% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/cn.png&quot; alt=&quot;&quot;&gt; | 中文 (简体) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/zh_CN.po&quot;&gt;zh_CN&lt;/a&gt; | &lt;a href=&quot;mailto:fungdaat31@outlook.com&quot;&gt;WhiredPlanck&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/tw.png&quot; alt=&quot;&quot;&gt; | 中文 (繁體) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/zh_TW.po&quot;&gt;zh_TW&lt;/a&gt; | &lt;a href=&quot;mailto:yaozeye@yahoo.co.jp&quot;&gt;Yaoze Ye&lt;/a&gt; | 92% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/jp.png&quot; alt=&quot;&quot;&gt; | 日本語 (日本) | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ja_JP.po&quot;&gt;ja_JP&lt;/a&gt; | &lt;a href=&quot;mailto:genneko217@gmail.com&quot;&gt;genneko&lt;/a&gt; | 97% &lt;img src=&quot;https://joplinapp.org/images/flags/country-4x3/kr.png&quot; alt=&quot;&quot;&gt; | 한국어 | &lt;a href=&quot;https://github.com/laurent22/joplin/blob/dev/packages/tools/locales/ko.po&quot;&gt;ko&lt;/a&gt; | &lt;a href=&quot;mailto:potatogim@potatogim.net&quot;&gt;Ji-Hyeon Gim&lt;/a&gt; | 97%&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;p&gt;Thank you to everyone who&#39;ve contributed to Joplin&#39;s source code!&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;| | | | | | | :---: | :---: | :---: | :---: | :---: | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/laurent22&quot;&gt;laurent22&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tessus&quot;&gt;tessus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mic704b&quot;&gt;mic704b&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/CalebJohn&quot;&gt;CalebJohn&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/PackElend&quot;&gt;PackElend&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tanrax&quot;&gt;tanrax&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rtmkrlv&quot;&gt;rtmkrlv&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fmrtn&quot;&gt;fmrtn&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/genneko&quot;&gt;genneko&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/devonzuegel&quot;&gt;devonzuegel&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gabcoh&quot;&gt;gabcoh&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/matsest&quot;&gt;matsest&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/abonte&quot;&gt;abonte&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Abijeet&quot;&gt;Abijeet&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ishantgupta777&quot;&gt;ishantgupta777&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/foxmask&quot;&gt;foxmask&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/innocuo&quot;&gt;innocuo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/anjulalk&quot;&gt;anjulalk&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rabeehrz&quot;&gt;rabeehrz&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/coderrsid&quot;&gt;coderrsid&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/alexdevero&quot;&gt;alexdevero&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Runo-saduwa&quot;&gt;Runo-saduwa&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/marcosvega91&quot;&gt;marcosvega91&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/petrz12&quot;&gt;petrz12&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/moltenform&quot;&gt;moltenform&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zuphilip&quot;&gt;zuphilip&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/readingsnail&quot;&gt;readingsnail&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/XarisA&quot;&gt;XarisA&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zblesk&quot;&gt;zblesk&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/0ndrey&quot;&gt;0ndrey&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/amitsin6h&quot;&gt;amitsin6h&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/martonpaulo&quot;&gt;martonpaulo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rccavalcanti&quot;&gt;rccavalcanti&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Rahulm2310&quot;&gt;Rahulm2310&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/metbril&quot;&gt;metbril&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ShaneKilkelly&quot;&gt;ShaneKilkelly&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/stweil&quot;&gt;stweil&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/archont00&quot;&gt;archont00&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bradmcl&quot;&gt;bradmcl&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tfinnberg&quot;&gt;tfinnberg&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/marcushill&quot;&gt;marcushill&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/nathanleiby&quot;&gt;nathanleiby&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/RaphaelKimmig&quot;&gt;RaphaelKimmig&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/RenatoXSR&quot;&gt;RenatoXSR&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sensor-freak&quot;&gt;sensor-freak&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Ardakilic&quot;&gt;Ardakilic&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/BartBucknill&quot;&gt;BartBucknill&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mrwulf&quot;&gt;mrwulf&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chrisb86&quot;&gt;chrisb86&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chrmoritz&quot;&gt;chrmoritz&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ethan42411&quot;&gt;ethan42411&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/JOJ0&quot;&gt;JOJ0&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jdrobertso&quot;&gt;jdrobertso&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jmontane&quot;&gt;jmontane&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/solariz&quot;&gt;solariz&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mmahmoudian&quot;&gt;mmahmoudian&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/maicki&quot;&gt;maicki&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mjjzf&quot;&gt;mjjzf&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/naviji&quot;&gt;naviji&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rt-oliveira&quot;&gt;rt-oliveira&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Rishgod&quot;&gt;Rishgod&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sebastienjust&quot;&gt;sebastienjust&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sealch&quot;&gt;sealch&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/StarFang208&quot;&gt;StarFang208&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/SubodhDahal&quot;&gt;SubodhDahal&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/TobiasDev&quot;&gt;TobiasDev&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/conyx&quot;&gt;conyx&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/vsimkus&quot;&gt;vsimkus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Zorbeyd&quot;&gt;Zorbeyd&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/axq&quot;&gt;axq&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/barbowza&quot;&gt;barbowza&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lightray22&quot;&gt;lightray22&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/pf-siedler&quot;&gt;pf-siedler&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ruuti&quot;&gt;ruuti&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/s1nceri7y&quot;&gt;s1nceri7y&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kornava&quot;&gt;kornava&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ShuiHuo&quot;&gt;ShuiHuo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ikunya&quot;&gt;ikunya&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bedwardly-down&quot;&gt;bedwardly-down&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/hexclover&quot;&gt;hexclover&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/2jaeyeol&quot;&gt;2jaeyeol&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/aaronxn&quot;&gt;aaronxn&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/alanfortlink&quot;&gt;alanfortlink&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/apankratov&quot;&gt;apankratov&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/teterkin&quot;&gt;teterkin&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/serenitatis&quot;&gt;serenitatis&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lex111&quot;&gt;lex111&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tekdel&quot;&gt;tekdel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Shaxine&quot;&gt;Shaxine&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/assimd&quot;&gt;assimd&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/baymoe&quot;&gt;baymoe&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bimlas&quot;&gt;bimlas&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/carlbordum&quot;&gt;carlbordum&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chaifeng&quot;&gt;chaifeng&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/charles-e&quot;&gt;charles-e&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Techwolf12&quot;&gt;Techwolf12&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/cloudtrends&quot;&gt;cloudtrends&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/daniellandau&quot;&gt;daniellandau&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/daukadolt&quot;&gt;daukadolt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/NeverMendel&quot;&gt;NeverMendel&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/diego-betto&quot;&gt;diego-betto&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/erdody&quot;&gt;erdody&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/domgoodwin&quot;&gt;domgoodwin&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/b4mboo&quot;&gt;b4mboo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/donbowman&quot;&gt;donbowman&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/dflock&quot;&gt;dflock&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/drobilica&quot;&gt;drobilica&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/einverne&quot;&gt;einverne&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Atalanttore&quot;&gt;Atalanttore&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/eodeluga&quot;&gt;eodeluga&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fer22f&quot;&gt;fer22f&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fpindado&quot;&gt;fpindado&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/FleischKarussel&quot;&gt;FleischKarussel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/talkdirty&quot;&gt;talkdirty&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gmag11&quot;&gt;gmag11&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/guiemi&quot;&gt;guiemi&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gusbemacbe&quot;&gt;gusbemacbe&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Fvbor&quot;&gt;Fvbor&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bennetthanna&quot;&gt;bennetthanna&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sczhg&quot;&gt;sczhg&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Vistaus&quot;&gt;Vistaus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/iahmedbacha&quot;&gt;iahmedbacha&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/IrvinDominin&quot;&gt;IrvinDominin&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ishammahajan&quot;&gt;ishammahajan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/JRaiden16&quot;&gt;JRaiden16&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jacobherrington&quot;&gt;jacobherrington&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jamesadjinwa&quot;&gt;jamesadjinwa&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jaredcrowe&quot;&gt;jaredcrowe&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/potatogim&quot;&gt;potatogim&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/JoelRSimpson&quot;&gt;JoelRSimpson&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/joeltaylor&quot;&gt;joeltaylor&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/exic&quot;&gt;exic&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jony0008&quot;&gt;jony0008&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/joybinchen&quot;&gt;joybinchen&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/y-usuzumi&quot;&gt;y-usuzumi&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xuhcc&quot;&gt;xuhcc&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kirtanprht&quot;&gt;kirtanprht&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kklas&quot;&gt;kklas&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xmlangel&quot;&gt;xmlangel&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/troilus&quot;&gt;troilus&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Lorinson&quot;&gt;Lorinson&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lboullo0&quot;&gt;lboullo0&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/dbinary&quot;&gt;dbinary&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mvonmaltitz&quot;&gt;mvonmaltitz&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mlkood&quot;&gt;mlkood&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Marmo&quot;&gt;Marmo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/freaktechnik&quot;&gt;freaktechnik&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/mgroth0&quot;&gt;mgroth0&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/silentmatt&quot;&gt;silentmatt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/MichipX&quot;&gt;MichipX&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/MrTraduttore&quot;&gt;MrTraduttore&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/NJannasch&quot;&gt;NJannasch&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Ouvill&quot;&gt;Ouvill&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/shorty2380&quot;&gt;shorty2380&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Rakleed&quot;&gt;Rakleed&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Diadlo&quot;&gt;Diadlo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/R-L-T-Y&quot;&gt;R-L-T-Y&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rajprakash00&quot;&gt;rajprakash00&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/RedDocMD&quot;&gt;RedDocMD&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/reinhart1010&quot;&gt;reinhart1010&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ruzaq&quot;&gt;ruzaq&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/SamuelBlickle&quot;&gt;SamuelBlickle&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/bronson&quot;&gt;bronson&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/semperor&quot;&gt;semperor&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sinkuu&quot;&gt;sinkuu&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/SFoskitt&quot;&gt;SFoskitt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kcrt&quot;&gt;kcrt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xissy&quot;&gt;xissy&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Tekki&quot;&gt;Tekki&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/TheoDutch&quot;&gt;TheoDutch&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tbroadley&quot;&gt;tbroadley&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Kriechi&quot;&gt;Kriechi&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tkilaker&quot;&gt;tkilaker&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tcyrus&quot;&gt;tcyrus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tobias-grasse&quot;&gt;tobias-grasse&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/strobeltobias&quot;&gt;strobeltobias&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tbergeron&quot;&gt;tbergeron&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/Ullas-Aithal&quot;&gt;Ullas-Aithal&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/MyTheValentinus&quot;&gt;MyTheValentinus&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/WisdomCode&quot;&gt;WisdomCode&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xsak&quot;&gt;xsak&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ymitsos&quot;&gt;ymitsos&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jyuvaraj03&quot;&gt;jyuvaraj03&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/kowalskidev&quot;&gt;kowalskidev&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/abolishallprivateproperty&quot;&gt;abolishallprivateproperty&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/aerotog&quot;&gt;aerotog&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/anihm136&quot;&gt;anihm136&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/boring10&quot;&gt;boring10&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/chenlhlinux&quot;&gt;chenlhlinux&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/cybertramp&quot;&gt;cybertramp&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/delta-emil&quot;&gt;delta-emil&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/doc75&quot;&gt;doc75&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/ebayer&quot;&gt;ebayer&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/espinosa&quot;&gt;espinosa&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/exponentactivity&quot;&gt;exponentactivity&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/exprez135&quot;&gt;exprez135&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fab4x&quot;&gt;fab4x&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/fabianski7&quot;&gt;fabianski7&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rasperepodvipodvert&quot;&gt;rasperepodvipodvert&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/gasolin&quot;&gt;gasolin&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/githubaccount073&quot;&gt;githubaccount073&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/hydrandt&quot;&gt;hydrandt&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/jabdoa2&quot;&gt;jabdoa2&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/johanvanheusden&quot;&gt;johanvanheusden&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/krzysiekwie&quot;&gt;krzysiekwie&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/lighthousebulb&quot;&gt;lighthousebulb&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/luzpaz&quot;&gt;luzpaz&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/nmiquan&quot;&gt;nmiquan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/nullpointer666&quot;&gt;nullpointer666&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/oscaretu&quot;&gt;oscaretu&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/daehruoydeef&quot;&gt;daehruoydeef&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/pensierocrea&quot;&gt;pensierocrea&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rhtenhove&quot;&gt;rhtenhove&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rikanotank1&quot;&gt;rikanotank1&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/rnbastos&quot;&gt;rnbastos&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/simonsan&quot;&gt;simonsan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/stellarpower&quot;&gt;stellarpower&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/sumomo-99&quot;&gt;sumomo-99&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/taw00&quot;&gt;taw00&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/tcassaert&quot;&gt;tcassaert&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/vicoutorama&quot;&gt;vicoutorama&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xcffl&quot;&gt;xcffl&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zaoyifan&quot;&gt;zaoyifan&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zen-quo&quot;&gt;zen-quo&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/xcession&quot;&gt;xcession&lt;/a&gt; | | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/paventyang&quot;&gt;paventyang&lt;/a&gt; | 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://api.github.com/users/zhangmx&quot;&gt;zhangmx&lt;/a&gt; | | | |&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h1&gt;Known bugs&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resources larger than 10 MB are not currently supported on mobile as they can crash the application.&lt;/li&gt; 
 &lt;li&gt;Non-alphabetical characters such as Chinese or Arabic might create glitches in the terminal on Windows. This is a limitation of the current Windows console.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2016-2020 Laurent Cozic&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NARKOZ/hacker-scripts</title>
      <link>https://github.com/NARKOZ/hacker-scripts</link>
      <description>&lt;p&gt;Based on a true story&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/NARKOZ/hacker-scripts/master/README.zh-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Hacker Scripts&lt;/h1&gt; 
&lt;p&gt;Based on a &lt;em&gt;&lt;a href=&quot;https://www.jitbit.com/alexblog/249-now-thats-what-i-call-a-hacker/&quot;&gt;true story&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: So we&#39;re sitting here, looking through his, uhm, &quot;legacy&quot;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: You&#39;re gonna love this&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/blob/master/smack-my-bitch-up.sh&quot;&gt;&lt;code&gt;smack-my-bitch-up.sh&lt;/code&gt;&lt;/a&gt; - sends a text message &quot;late at work&quot; to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/blob/master/kumar-asshole.sh&quot;&gt;&lt;code&gt;kumar-asshole.sh&lt;/code&gt;&lt;/a&gt; - scans the inbox for emails from &quot;Kumar&quot; (a DBA at our clients). Looks for keywords like &quot;help&quot;, &quot;trouble&quot;, &quot;sorry&quot; etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply &quot;no worries mate, be careful next time&quot;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/blob/master/hangover.sh&quot;&gt;&lt;code&gt;hangover.sh&lt;/code&gt;&lt;/a&gt; - another cron-job that is set to specific dates. Sends automated emails like &quot;not feeling well/gonna work from home&quot; etc. Adds a random &quot;reason&quot; from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: (and the oscar goes to) &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/blob/master/fucking-coffee.sh&quot;&gt;&lt;code&gt;fucking-coffee.sh&lt;/code&gt;&lt;/a&gt; - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like &lt;code&gt;sys brew&lt;/code&gt;. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: holy sh*t I&#39;m keeping those&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Original: http://bash.im/quote/436725 (in Russian)&lt;br&gt; Pull requests with other implementations (Python, Perl, Shell, etc) are welcome.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You need these environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# used in `smack-my-bitch-up` and `hangover` scripts
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# used in `kumar_asshole` script
GMAIL_USERNAME=admin@example.org
GMAIL_PASSWORD=password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Ruby scripts you need to install gems: &lt;code&gt;gem install dotenv twilio-ruby gmail&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Cron jobs&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.
20 21 * * 1-5 /path/to/scripts/smack-my-bitch-up.sh &amp;gt;&amp;gt; /path/to/smack-my-bitch-up.log 2&amp;gt;&amp;amp;1

# Runs `hangover.sh` monday to friday at 8:45 am.
45 8 * * 1-5 /path/to/scripts/hangover.sh &amp;gt;&amp;gt; /path/to/hangover.log 2&amp;gt;&amp;amp;1

# Runs `kumar-asshole.sh` every 10 minutes.
*/10 * * * * /path/to/scripts/kumar-asshole.sh

# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.
0 9-18 * * 1-5 /path/to/scripts/fucking-coffee.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;Code is released under WTFPL.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ccxt/ccxt</title>
      <link>https://github.com/ccxt/ccxt</link>
      <description>&lt;p&gt;A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CCXT – CryptoCurrency eXchange Trading Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.com/ccxt/ccxt&quot;&gt;&lt;img src=&quot;https://travis-ci.com/ccxt/ccxt.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.com/package/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/ccxt.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/ccxt.svg&quot; alt=&quot;PyPI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dy/ccxt.svg&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/dhzSKYU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Exchange-Markets&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/exchanges-123-blue.svg&quot; alt=&quot;Supported Exchanges&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/backers/badge.svg&quot; alt=&quot;Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/ccxt_official&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ccxt_official.svg?style=social&amp;amp;label=CCXT&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A JavaScript / Python / PHP library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#install&quot;&gt;Install&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#usage&quot;&gt;Usage&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/tree/master/examples&quot;&gt;Examples&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#social&quot;&gt;Social&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;strong&gt;CCXT&lt;/strong&gt; library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.&lt;/p&gt; 
&lt;p&gt;It is intended to be used by &lt;strong&gt;coders, developers, technically-skilled traders, data-scientists and financial analysts&lt;/strong&gt; for building trading algorithms.&lt;/p&gt; 
&lt;p&gt;Current feature list:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;support for many cryptocurrency exchanges — more coming soon&lt;/li&gt; 
 &lt;li&gt;fully implemented public and private APIs&lt;/li&gt; 
 &lt;li&gt;optional normalized data for cross-exchange analytics and arbitrage&lt;/li&gt; 
 &lt;li&gt;an out of the box unified API that is extremely easy to integrate&lt;/li&gt; 
 &lt;li&gt;works in Node 7.6+, Python 3, PHP 5.4+, and web browsers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsored Promotion&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/106092533-865ce180-613f-11eb-8d67-0830771fde32.png&quot; alt=&quot;CCXT Pro – A JavaScript / Python / PHP cryptocurrency exchange trading WebSocket API for professionals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.pionex.com/en-US/sign?r=8wSFCbNk&amp;amp;utm_source=ad&amp;amp;utm_medium=banner&amp;amp;utm_campaign=ccxt-1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/106110516-e2cdfa00-615b-11eb-9c70-9a9639f28673.png&quot; alt=&quot;Pionex – The biggest Binance Broker that provides 12 free crypto trading bots&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://quadency.com?utm_source=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69334382-a0618100-0c6b-11ea-9ba9-40aa97440cfa.png&quot; alt=&quot;Quadency&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;&amp;nbsp; &lt;strong&gt;&lt;a href=&quot;https://quadency.com?utm_source=ccxt&quot;&gt;Quadency&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;—&amp;nbsp;trading automation terminal for leading exchanges with streaming APIs + Python IDE.&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://tab-trader.com/?utm_source=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66755907-9c3e8880-eea1-11e9-846e-0bff349ceb87.png&quot; alt=&quot;TabTrader&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;&amp;nbsp; &lt;strong&gt;&lt;a href=&quot;https://tab-trader.com/?utm_source=ccxt&quot;&gt;TabTrader&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;—&amp;nbsp;trading on all exchanges in one app. Avaliable on &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.tabtrader.android&amp;amp;referrer=utm_source%3Dccxt&quot;&gt;Android&lt;/a&gt; and &lt;a href=&quot;https://itunes.apple.com/app/apple-store/id1095716562?mt=8&quot;&gt;iOS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://www.pionex.com/en-US/sign?r=8wSFCbNk&amp;amp;utm_source=ad&amp;amp;utm_medium=banner&amp;amp;utm_campaign=ccxt-2&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/106112806-c2ec0580-615e-11eb-870c-0b7aef021db2.png&quot; alt=&quot;Pionex&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;&amp;nbsp; &lt;strong&gt;&lt;a href=&quot;https://www.pionex.com/en-US/sign?r=8wSFCbNk&amp;amp;utm_source=ad&amp;amp;utm_medium=banner&amp;amp;utm_campaign=ccxt-2&quot;&gt;Pionex&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;—&amp;nbsp;6 grid bots, spot-futures arb bot, smart trade and DCA bots. Free for &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.pionex.client&amp;amp;referrer=utm_source%3Dccxt&quot;&gt;Android&lt;/a&gt; and &lt;a href=&quot;https://apps.apple.com/us/app/pionex/id1485348891?pt=ccxt&amp;amp;ct=inline&quot;&gt;iOS&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Certified Cryptocurrency Exchanges&lt;/h2&gt; 
&lt;p&gt;| logo | id | name | ver | doc | certified | pro | |------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------|-----------------------------------------------------------------------------|:---:|:------------------------------------------------------------------:|-----------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------| | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg&quot; alt=&quot;binance&quot;&gt;&lt;/a&gt; | binance | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;Binance&lt;/a&gt; | * | &lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex&quot;&gt;&lt;/a&gt; | bitfinex | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.bitfinex.com/v1/docs&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg&quot; alt=&quot;bittrex&quot;&gt;&lt;/a&gt; | bittrex | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;Bittrex&lt;/a&gt; | 3 | &lt;a href=&quot;https://bittrex.github.io/api/v3&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83165440-2f1cf200-a116-11ea-9046-a255d09fb2ed.jpg&quot; alt=&quot;bitvavo&quot;&gt;&lt;/a&gt; | bitvavo | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;Bitvavo&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.bitvavo.com/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg&quot; alt=&quot;bytetrade&quot;&gt;&lt;/a&gt; | bytetrade | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;ByteTrade&lt;/a&gt; | * | &lt;a href=&quot;https://docs.byte-trade.com/#description&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg&quot; alt=&quot;currencycom&quot;&gt;&lt;/a&gt; | currencycom | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;Currency.com&lt;/a&gt; | 1 | &lt;a href=&quot;https://currency.com/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/82067900-faeb0f80-96d9-11ea-9f22-0071cfcb9871.jpg&quot; alt=&quot;eterbase&quot;&gt;&lt;/a&gt; | eterbase | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;Eterbase&lt;/a&gt; | 1 | &lt;a href=&quot;https://developers.eterbase.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg&quot; alt=&quot;ftx&quot;&gt;&lt;/a&gt; | ftx | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;FTX&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/ftexchange/ftx&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.gopax.co.kr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/102897212-ae8a5e00-4478-11eb-9bab-91507c643900.jpg&quot; alt=&quot;gopax&quot;&gt;&lt;/a&gt; | gopax | &lt;a href=&quot;https://www.gopax.co.kr&quot;&gt;GOPAX&lt;/a&gt; | 1 | &lt;a href=&quot;https://gopax.github.io/API/index.en.html&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://idex.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg&quot; alt=&quot;idex&quot;&gt;&lt;/a&gt; | idex | &lt;a href=&quot;https://idex.io&quot;&gt;IDEX&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.idex.io/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.kraken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg&quot; alt=&quot;kraken&quot;&gt;&lt;/a&gt; | kraken | &lt;a href=&quot;https://www.kraken.com&quot;&gt;Kraken&lt;/a&gt; | 0 | &lt;a href=&quot;https://www.kraken.com/features/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://waves.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg&quot; alt=&quot;wavesexchange&quot;&gt;&lt;/a&gt; | wavesexchange | &lt;a href=&quot;https://waves.exchange&quot;&gt;Waves.Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://docs.waves.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://xena.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87489843-bb469280-c64c-11ea-91aa-69c6326506af.jpg&quot; alt=&quot;xena&quot;&gt;&lt;/a&gt; | xena | &lt;a href=&quot;https://xena.exchange&quot;&gt;Xena Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://support.xena.exchange/support/solutions/44000808700&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | |&lt;/p&gt; 
&lt;h2&gt;Supported Cryptocurrency Exchange Markets&lt;/h2&gt; 
&lt;p&gt;The CCXT library currently supports the following 123 cryptocurrency exchange markets and trading APIs:&lt;/p&gt; 
&lt;p&gt;| logo | id | name | ver | doc | certified | pro | |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|-----------------------------------------------------------------------------------------|:---:|:-------------------------------------------------------------------------------------------:|-----------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------| | &lt;a href=&quot;https://acx.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30247614-1fe61c74-9621-11e7-9e8c-f1a627afa279.jpg&quot; alt=&quot;acx&quot;&gt;&lt;/a&gt; | acx | &lt;a href=&quot;https://acx.io&quot;&gt;ACX&lt;/a&gt; | 2 | &lt;a href=&quot;https://acx.io/documents/api_v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://aofex.com/#/register?key=9763840&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77670271-056d1080-6f97-11ea-9ac2-4268e9ed0c1f.jpg&quot; alt=&quot;aofex&quot;&gt;&lt;/a&gt; | aofex | &lt;a href=&quot;https://aofex.com/#/register?key=9763840&quot;&gt;AOFEX&lt;/a&gt; | * | &lt;a href=&quot;https://aofex.zendesk.com/hc/en-us/sections/360005576574-API&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bequant.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg&quot; alt=&quot;bequant&quot;&gt;&lt;/a&gt; | bequant | &lt;a href=&quot;https://bequant.io&quot;&gt;Bequant&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.bequant.io/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://w2.bibox365.com/login/register?invite_code=05Kj3I&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77257418-3262b000-6c85-11ea-8fb8-20bdf20b3592.jpg&quot; alt=&quot;bibox&quot;&gt;&lt;/a&gt; | bibox | &lt;a href=&quot;https://w2.bibox365.com/login/register?invite_code=05Kj3I&quot;&gt;Bibox&lt;/a&gt; | 1 | &lt;a href=&quot;https://biboxcom.github.io/en/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://b1.run/users/new?code=D3LLBVFT&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg&quot; alt=&quot;bigone&quot;&gt;&lt;/a&gt; | bigone | &lt;a href=&quot;https://b1.run/users/new?code=D3LLBVFT&quot;&gt;BigONE&lt;/a&gt; | 3 | &lt;a href=&quot;https://open.big.one/docs/api.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg&quot; alt=&quot;binance&quot;&gt;&lt;/a&gt; | binance | &lt;a href=&quot;https://www.binance.com/?ref=10205187&quot;&gt;Binance&lt;/a&gt; | * | &lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.binance.us/?ref=35005074&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg&quot; alt=&quot;binanceus&quot;&gt;&lt;/a&gt; | binanceus | &lt;a href=&quot;https://www.binance.us/?ref=35005074&quot;&gt;Binance US&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/binance-us/binance-official-api-docs&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg&quot; alt=&quot;bit2c&quot;&gt;&lt;/a&gt; | bit2c | &lt;a href=&quot;https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf&quot;&gt;Bit2C&lt;/a&gt; | * | &lt;a href=&quot;https://www.bit2c.co.il/home/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitbank.cc/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg&quot; alt=&quot;bitbank&quot;&gt;&lt;/a&gt; | bitbank | &lt;a href=&quot;https://bitbank.cc/&quot;&gt;bitbank&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.bitbank.cc/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://auth.bitbay.net/ref/jHlbB4mIkdS1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg&quot; alt=&quot;bitbay&quot;&gt;&lt;/a&gt; | bitbay | &lt;a href=&quot;https://auth.bitbay.net/ref/jHlbB4mIkdS1&quot;&gt;BitBay&lt;/a&gt; | * | &lt;a href=&quot;https://bitbay.net/public-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://exchange.bitcoin.com/referral/da948b21d6c92d69&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/97296144-514fa300-1861-11eb-952b-3d55d492200b.jpg&quot; alt=&quot;bitcoincom&quot;&gt;&lt;/a&gt; | bitcoincom | &lt;a href=&quot;https://exchange.bitcoin.com/referral/da948b21d6c92d69&quot;&gt;bitcoin.com&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.exchange.bitcoin.com/api/2/explore&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex&quot;&gt;&lt;/a&gt; | bitfinex | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.bitfinex.com/v1/docs&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex2&quot;&gt;&lt;/a&gt; | bitfinex2 | &lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.bitfinex.com/v2/docs/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitflyer.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg&quot; alt=&quot;bitflyer&quot;&gt;&lt;/a&gt; | bitflyer | &lt;a href=&quot;https://bitflyer.com&quot;&gt;bitFlyer&lt;/a&gt; | 1 | &lt;a href=&quot;https://lightning.bitflyer.com/docs?lang=en&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitforex.com/en/invitationRegister?inviterId=1867438&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295553-1160ec00-c50e-11ea-8ea0-df79276a9646.jpg&quot; alt=&quot;bitforex&quot;&gt;&lt;/a&gt; | bitforex | &lt;a href=&quot;https://www.bitforex.com/en/invitationRegister?inviterId=1867438&quot;&gt;Bitforex&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/githubdev2020/API_Doc_en/wiki&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/88317935-a8a21c80-cd22-11ea-8e2b-4b9fac5975eb.jpg&quot; alt=&quot;bitget&quot;&gt;&lt;/a&gt; | bitget | &lt;a href=&quot;https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j&quot;&gt;Bitget&lt;/a&gt; | 3 | &lt;a href=&quot;https://bitgetlimited.github.io/apidoc/en/swap&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bithumb.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg&quot; alt=&quot;bithumb&quot;&gt;&lt;/a&gt; | bithumb | &lt;a href=&quot;https://www.bithumb.com&quot;&gt;Bithumb&lt;/a&gt; | * | &lt;a href=&quot;https://apidocs.bithumb.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitkk.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg&quot; alt=&quot;bitkk&quot;&gt;&lt;/a&gt; | bitkk | &lt;a href=&quot;https://www.bitkk.com&quot;&gt;bitkk&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.bitkk.com/i/developer&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/61835713-a2662f80-ae85-11e9-9d00-6442919701fd.jpg&quot; alt=&quot;bitmart&quot;&gt;&lt;/a&gt; | bitmart | &lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;BitMart&lt;/a&gt; | 1 | &lt;a href=&quot;https://developer-pro.bitmart.com/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitmax.io/#/register?inviteCode=EL6BXBQM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66820319-19710880-ef49-11e9-8fbe-16be62a11992.jpg&quot; alt=&quot;bitmax&quot;&gt;&lt;/a&gt; | bitmax | &lt;a href=&quot;https://bitmax.io/#/register?inviteCode=EL6BXBQM&quot;&gt;BitMax&lt;/a&gt; | 1 | &lt;a href=&quot;https://bitmax-exchange.github.io/bitmax-pro-api/#bitmax-pro-api-documentation&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitmex.com/register/upZpOX&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg&quot; alt=&quot;bitmex&quot;&gt;&lt;/a&gt; | bitmex | &lt;a href=&quot;https://www.bitmex.com/register/upZpOX&quot;&gt;BitMEX&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.bitmex.com/app/apiOverview&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitpanda.com/en/pro&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87591171-9a377d80-c6f0-11ea-94ac-97a126eac3bc.jpg&quot; alt=&quot;bitpanda&quot;&gt;&lt;/a&gt; | bitpanda | &lt;a href=&quot;https://www.bitpanda.com/en/pro&quot;&gt;Bitpanda Pro&lt;/a&gt; | 1 | &lt;a href=&quot;https://developers.bitpanda.com/exchange/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bitso.com/?ref=itej&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295554-11f98280-c50e-11ea-80d6-15b3bafa8cbf.jpg&quot; alt=&quot;bitso&quot;&gt;&lt;/a&gt; | bitso | &lt;a href=&quot;https://bitso.com/?ref=itej&quot;&gt;Bitso&lt;/a&gt; | 3 | &lt;a href=&quot;https://bitso.com/api_info&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg&quot; alt=&quot;bitstamp&quot;&gt;&lt;/a&gt; | bitstamp | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;Bitstamp&lt;/a&gt; | 2 | &lt;a href=&quot;https://www.bitstamp.net/api&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg&quot; alt=&quot;bitstamp1&quot;&gt;&lt;/a&gt; | bitstamp1 | &lt;a href=&quot;https://www.bitstamp.net&quot;&gt;Bitstamp&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.bitstamp.net/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg&quot; alt=&quot;bittrex&quot;&gt;&lt;/a&gt; | bittrex | &lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;Bittrex&lt;/a&gt; | 3 | &lt;a href=&quot;https://bittrex.github.io/api/v3&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83165440-2f1cf200-a116-11ea-9046-a255d09fb2ed.jpg&quot; alt=&quot;bitvavo&quot;&gt;&lt;/a&gt; | bitvavo | &lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;Bitvavo&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.bitvavo.com/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://u.bitz.com/register?invite_code=1429193&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443304-fec5e000-c5fd-11ea-98f8-ba8e67f7eaff.jpg&quot; alt=&quot;bitz&quot;&gt;&lt;/a&gt; | bitz | &lt;a href=&quot;https://u.bitz.com/register?invite_code=1429193&quot;&gt;Bit-Z&lt;/a&gt; | 2 | &lt;a href=&quot;https://apidoc.bitz.com/en/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bl3p.eu&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg&quot; alt=&quot;bl3p&quot;&gt;&lt;/a&gt; | bl3p | &lt;a href=&quot;https://bl3p.eu&quot;&gt;BL3P&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/BitonicNL/bl3p-api/tree/master/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://bleutrade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30303000-b602dbe6-976d-11e7-956d-36c5049c01e7.jpg&quot; alt=&quot;bleutrade&quot;&gt;&lt;/a&gt; | bleutrade | &lt;a href=&quot;https://bleutrade.com&quot;&gt;Bleutrade&lt;/a&gt; | * | &lt;a href=&quot;https://app.swaggerhub.com/apis-docs/bleu/white-label/3.0.0&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://braziliex.com/?ref=5FE61AB6F6D67DA885BC98BA27223465&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/34703593-c4498674-f504-11e7-8d14-ff8e44fb78c1.jpg&quot; alt=&quot;braziliex&quot;&gt;&lt;/a&gt; | braziliex | &lt;a href=&quot;https://braziliex.com/?ref=5FE61AB6F6D67DA885BC98BA27223465&quot;&gt;Braziliex&lt;/a&gt; | * | &lt;a href=&quot;https://braziliex.com/exchange/api.php&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://btc-alpha.com/?r=123788&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg&quot; alt=&quot;btcalpha&quot;&gt;&lt;/a&gt; | btcalpha | &lt;a href=&quot;https://btc-alpha.com/?r=123788&quot;&gt;BTC-Alpha&lt;/a&gt; | 1 | &lt;a href=&quot;https://btc-alpha.github.io/api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.btcbox.co.jp/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87327317-98c55400-c53c-11ea-9a11-81f7d951cc74.jpg&quot; alt=&quot;btcbox&quot;&gt;&lt;/a&gt; | btcbox | &lt;a href=&quot;https://www.btcbox.co.jp/&quot;&gt;BtcBox&lt;/a&gt; | 1 | &lt;a href=&quot;https://blog.btcbox.jp/en/archives/8762&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://btcmarkets.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/89731817-b3fb8480-da52-11ea-817f-783b08aaf32b.jpg&quot; alt=&quot;btcmarkets&quot;&gt;&lt;/a&gt; | btcmarkets | &lt;a href=&quot;https://btcmarkets.net&quot;&gt;BTC Markets&lt;/a&gt; | 3 | &lt;a href=&quot;https://api.btcmarkets.net/doc/v3&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://btc-trade.com.ua/registration/22689&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg&quot; alt=&quot;btctradeua&quot;&gt;&lt;/a&gt; | btctradeua | &lt;a href=&quot;https://btc-trade.com.ua/registration/22689&quot;&gt;BTC Trade UA&lt;/a&gt; | * | &lt;a href=&quot;https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.btcturk.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153926-efbef500-c2c0-11ea-9842-05b63612c4b9.jpg&quot; alt=&quot;btcturk&quot;&gt;&lt;/a&gt; | btcturk | &lt;a href=&quot;https://www.btcturk.com&quot;&gt;BTCTurk&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/BTCTrader/broker-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.buda.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg&quot; alt=&quot;buda&quot;&gt;&lt;/a&gt; | buda | &lt;a href=&quot;https://www.buda.com&quot;&gt;Buda&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.buda.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69436317-31128c80-0d52-11ea-91d1-eb7bb5818812.jpg&quot; alt=&quot;bw&quot;&gt;&lt;/a&gt; | bw | &lt;a href=&quot;https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0&quot;&gt;BW&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/bw-exchange/api_docs_en/wiki&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.bybit.com/app/register?ref=X7Prm&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76547799-daff5b80-649e-11ea-87fb-3be9bac08954.jpg&quot; alt=&quot;bybit&quot;&gt;&lt;/a&gt; | bybit | &lt;a href=&quot;https://www.bybit.com/app/register?ref=X7Prm&quot;&gt;Bybit&lt;/a&gt; | 2 | &lt;a href=&quot;https://bybit-exchange.github.io/docs/inverse/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg&quot; alt=&quot;bytetrade&quot;&gt;&lt;/a&gt; | bytetrade | &lt;a href=&quot;https://www.byte-trade.com&quot;&gt;ByteTrade&lt;/a&gt; | * | &lt;a href=&quot;https://docs.byte-trade.com/#description&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://cdax.io/invite?invite_code=esc74&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/102157692-fd406280-3e90-11eb-8d46-4511b617cd17.jpg&quot; alt=&quot;cdax&quot;&gt;&lt;/a&gt; | cdax | &lt;a href=&quot;https://cdax.io/invite?invite_code=esc74&quot;&gt;CDAX&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/cloudapidoc/API_Docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://cex.io/r/0/up105393824/0/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg&quot; alt=&quot;cex&quot;&gt;&lt;/a&gt; | cex | &lt;a href=&quot;https://cex.io/r/0/up105393824/0/&quot;&gt;CEX.IO&lt;/a&gt; | * | &lt;a href=&quot;https://cex.io/cex-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://chilebit.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27991414-1298f0d8-647f-11e7-9c40-d56409266336.jpg&quot; alt=&quot;chilebit&quot;&gt;&lt;/a&gt; | chilebit | &lt;a href=&quot;https://chilebit.net&quot;&gt;ChileBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://blinktrade.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinbase.com/join/58cbe25a355148797479dbd2&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg&quot; alt=&quot;coinbase&quot;&gt;&lt;/a&gt; | coinbase | &lt;a href=&quot;https://www.coinbase.com/join/58cbe25a355148797479dbd2&quot;&gt;Coinbase&lt;/a&gt; | 2 | &lt;a href=&quot;https://developers.coinbase.com/api/v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://prime.coinbase.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg&quot; alt=&quot;coinbaseprime&quot;&gt;&lt;/a&gt; | coinbaseprime | &lt;a href=&quot;https://prime.coinbase.com&quot;&gt;Coinbase Prime&lt;/a&gt; | * | &lt;a href=&quot;https://docs.prime.coinbase.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://pro.coinbase.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg&quot; alt=&quot;coinbasepro&quot;&gt;&lt;/a&gt; | coinbasepro | &lt;a href=&quot;https://pro.coinbase.com/&quot;&gt;Coinbase Pro&lt;/a&gt; | * | &lt;a href=&quot;https://docs.pro.coinbase.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://coincheck.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg&quot; alt=&quot;coincheck&quot;&gt;&lt;/a&gt; | coincheck | &lt;a href=&quot;https://coincheck.com&quot;&gt;coincheck&lt;/a&gt; | * | &lt;a href=&quot;https://coincheck.com/documents/exchange/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinegg.com/user/register?invite=523218&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/36770310-adfa764e-1c5a-11e8-8e09-449daac3d2fb.jpg&quot; alt=&quot;coinegg&quot;&gt;&lt;/a&gt; | coinegg | &lt;a href=&quot;https://www.coinegg.com/user/register?invite=523218&quot;&gt;CoinEgg&lt;/a&gt; | * | &lt;a href=&quot;https://www.coinegg.com/explain.api.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinex.com/register?refer_code=yw5fz&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg&quot; alt=&quot;coinex&quot;&gt;&lt;/a&gt; | coinex | &lt;a href=&quot;https://www.coinex.com/register?refer_code=yw5fz&quot;&gt;CoinEx&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/coinexcom/coinex_exchange_api/wiki&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinfalcon.com/?ref=CFJSVGTUPASB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg&quot; alt=&quot;coinfalcon&quot;&gt;&lt;/a&gt; | coinfalcon | &lt;a href=&quot;https://coinfalcon.com/?ref=CFJSVGTUPASB&quot;&gt;CoinFalcon&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.coinfalcon.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinfloor.co.uk&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153925-ef265e80-c2c0-11ea-91b5-020c804b90e0.jpg&quot; alt=&quot;coinfloor&quot;&gt;&lt;/a&gt; | coinfloor | &lt;a href=&quot;https://www.coinfloor.co.uk&quot;&gt;coinfloor&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/coinfloor/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coingi.com/?r=XTPPMC&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28619707-5c9232a8-7212-11e7-86d6-98fe5d15cc6e.jpg&quot; alt=&quot;coingi&quot;&gt;&lt;/a&gt; | coingi | &lt;a href=&quot;https://www.coingi.com/?r=XTPPMC&quot;&gt;Coingi&lt;/a&gt; | * | &lt;a href=&quot;https://coingi.docs.apiary.io&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinmarketcap.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182086-1cd4cd00-c2ec-11ea-9ec4-d0cf2a2abf62.jpg&quot; alt=&quot;coinmarketcap&quot;&gt;&lt;/a&gt; | coinmarketcap | &lt;a href=&quot;https://coinmarketcap.com&quot;&gt;CoinMarketCap&lt;/a&gt; | 1 | &lt;a href=&quot;https://coinmarketcap.com/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg&quot; alt=&quot;coinmate&quot;&gt;&lt;/a&gt; | coinmate | &lt;a href=&quot;https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0&quot;&gt;CoinMate&lt;/a&gt; | * | &lt;a href=&quot;https://coinmate.docs.apiary.io&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://coinone.co.kr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg&quot; alt=&quot;coinone&quot;&gt;&lt;/a&gt; | coinone | &lt;a href=&quot;https://coinone.co.kr&quot;&gt;CoinOne&lt;/a&gt; | 2 | &lt;a href=&quot;https://doc.coinone.co.kr&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.coinspot.com.au/register?code=PJURCU&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg&quot; alt=&quot;coinspot&quot;&gt;&lt;/a&gt; | coinspot | &lt;a href=&quot;https://www.coinspot.com.au/register?code=PJURCU&quot;&gt;CoinSpot&lt;/a&gt; | * | &lt;a href=&quot;https://www.coinspot.com.au/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://crex24.com/?refid=slxsjsjtil8xexl9hksr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/47813922-6f12cc00-dd5d-11e8-97c6-70f957712d47.jpg&quot; alt=&quot;crex24&quot;&gt;&lt;/a&gt; | crex24 | &lt;a href=&quot;https://crex24.com/?refid=slxsjsjtil8xexl9hksr&quot;&gt;CREX24&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.crex24.com/trade-api/v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg&quot; alt=&quot;currencycom&quot;&gt;&lt;/a&gt; | currencycom | &lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;Currency.com&lt;/a&gt; | 1 | &lt;a href=&quot;https://currency.com/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.delta.exchange/app/signup/?code=IULYNB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/99450025-3be60a00-2931-11eb-9302-f4fd8d8589aa.jpg&quot; alt=&quot;delta&quot;&gt;&lt;/a&gt; | delta | &lt;a href=&quot;https://www.delta.exchange/app/signup/?code=IULYNB&quot;&gt;Delta Exchange&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.delta.exchange&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.deribit.com/reg-1189.4038&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg&quot; alt=&quot;deribit&quot;&gt;&lt;/a&gt; | deribit | &lt;a href=&quot;https://www.deribit.com/reg-1189.4038&quot;&gt;Deribit&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.deribit.com/v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443315-01283a00-c5fe-11ea-8628-c2a0feaf07ac.jpg&quot; alt=&quot;digifinex&quot;&gt;&lt;/a&gt; | digifinex | &lt;a href=&quot;https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp&quot;&gt;DigiFinex&lt;/a&gt; | 3 | &lt;a href=&quot;https://docs.digifinex.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://dsxglobal.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76909626-cb2bb100-68bc-11ea-99e0-28ba54f04792.jpg&quot; alt=&quot;dsx&quot;&gt;&lt;/a&gt; | dsx | &lt;a href=&quot;https://dsxglobal.com&quot;&gt;DSX&lt;/a&gt; | 3 | &lt;a href=&quot;https://dsxglobal.com/developers/publicApi&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/82067900-faeb0f80-96d9-11ea-9f22-0071cfcb9871.jpg&quot; alt=&quot;eterbase&quot;&gt;&lt;/a&gt; | eterbase | &lt;a href=&quot;https://eterbase.exchange/invite/1wjjh4Pe&quot;&gt;Eterbase&lt;/a&gt; | 1 | &lt;a href=&quot;https://developers.eterbase.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://exmo.me/?ref=131685&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg&quot; alt=&quot;exmo&quot;&gt;&lt;/a&gt; | exmo | &lt;a href=&quot;https://exmo.me/?ref=131685&quot;&gt;EXMO&lt;/a&gt; | 1.1 | &lt;a href=&quot;https://exmo.me/en/api_doc?ref=131685&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.exx.com/r/fde4260159e53ab8a58cc9186d35501f?recommQd=1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/37770292-fbf613d0-2de4-11e8-9f79-f2dc451b8ccb.jpg&quot; alt=&quot;exx&quot;&gt;&lt;/a&gt; | exx | &lt;a href=&quot;https://www.exx.com/r/fde4260159e53ab8a58cc9186d35501f?recommQd=1&quot;&gt;EXX&lt;/a&gt; | * | &lt;a href=&quot;https://www.exx.com/help/restApi&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.fcoin.com/i/Z5P7V&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/42244210-c8c42e1e-7f1c-11e8-8710-a5fb63b165c4.jpg&quot; alt=&quot;fcoin&quot;&gt;&lt;/a&gt; | fcoin | &lt;a href=&quot;https://www.fcoin.com/i/Z5P7V&quot;&gt;FCoin&lt;/a&gt; | 2 | &lt;a href=&quot;https://developer.fcoin.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.fcoinjp.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/54219174-08b66b00-4500-11e9-862d-f522d0fe08c6.jpg&quot; alt=&quot;fcoinjp&quot;&gt;&lt;/a&gt; | fcoinjp | &lt;a href=&quot;https://www.fcoinjp.com&quot;&gt;FCoinJP&lt;/a&gt; | 2 | &lt;a href=&quot;https://developer.fcoin.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.flowbtc.com.br&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443317-01c0d080-c5fe-11ea-95c2-9ebe1a8fafd9.jpg&quot; alt=&quot;flowbtc&quot;&gt;&lt;/a&gt; | flowbtc | &lt;a href=&quot;https://www.flowbtc.com.br&quot;&gt;flowBTC&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.flowbtc.com.br/api.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://foxbit.com.br/exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443320-01c0d080-c5fe-11ea-92e2-4ef56d32b026.jpg&quot; alt=&quot;foxbit&quot;&gt;&lt;/a&gt; | foxbit | &lt;a href=&quot;https://foxbit.com.br/exchange&quot;&gt;FoxBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://foxbit.com.br/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg&quot; alt=&quot;ftx&quot;&gt;&lt;/a&gt; | ftx | &lt;a href=&quot;https://ftx.com/#a=1623029&quot;&gt;FTX&lt;/a&gt; | * | &lt;a href=&quot;https://github.com/ftexchange/ftx&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.gate.io/signup/2436035&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg&quot; alt=&quot;gateio&quot;&gt;&lt;/a&gt; | gateio | &lt;a href=&quot;https://www.gate.io/signup/2436035&quot;&gt;Gate.io&lt;/a&gt; | 2 | &lt;a href=&quot;https://gate.io/api2&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://gemini.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg&quot; alt=&quot;gemini&quot;&gt;&lt;/a&gt; | gemini | &lt;a href=&quot;https://gemini.com/&quot;&gt;Gemini&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.gemini.com/rest-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.gopax.co.kr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/102897212-ae8a5e00-4478-11eb-9bab-91507c643900.jpg&quot; alt=&quot;gopax&quot;&gt;&lt;/a&gt; | gopax | &lt;a href=&quot;https://www.gopax.co.kr&quot;&gt;GOPAX&lt;/a&gt; | 1 | &lt;a href=&quot;https://gopax.github.io/API/index.en.html&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.hbtc.com/register/O2S8NS&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/80134449-70663300-85a7-11ea-8942-e204cdeaab5d.jpg&quot; alt=&quot;hbtc&quot;&gt;&lt;/a&gt; | hbtc | &lt;a href=&quot;https://www.hbtc.com/register/O2S8NS&quot;&gt;HBTC&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/bhexopen/BHEX-OpenApi/tree/master/doc&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://hitbtc.com/?ref_id=5a5d39a65d466&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg&quot; alt=&quot;hitbtc&quot;&gt;&lt;/a&gt; | hitbtc | &lt;a href=&quot;https://hitbtc.com/?ref_id=5a5d39a65d466&quot;&gt;HitBTC&lt;/a&gt; | 2 | &lt;a href=&quot;https://api.hitbtc.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://pro.hollaex.com/signup?affiliation_code=QSWA6G&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg&quot; alt=&quot;hollaex&quot;&gt;&lt;/a&gt; | hollaex | &lt;a href=&quot;https://pro.hollaex.com/signup?affiliation_code=QSWA6G&quot;&gt;HollaEx&lt;/a&gt; | 1 | &lt;a href=&quot;https://apidocs.hollaex.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.huobi.co.jp/register/?invite_code=znnq3&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/85734211-85755480-b705-11ea-8b35-0b7f1db33a2f.jpg&quot; alt=&quot;huobijp&quot;&gt;&lt;/a&gt; | huobijp | &lt;a href=&quot;https://www.huobi.co.jp/register/?invite_code=znnq3&quot;&gt;Huobi Japan&lt;/a&gt; | 1 | &lt;a href=&quot;https://api-doc.huobi.co.jp&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.huobi.com/en-us/topic/invited/?invite_code=rwrd3&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg&quot; alt=&quot;huobipro&quot;&gt;&lt;/a&gt; | huobipro | &lt;a href=&quot;https://www.huobi.com/en-us/topic/invited/?invite_code=rwrd3&quot;&gt;Huobi Pro&lt;/a&gt; | 1 | &lt;a href=&quot;https://huobiapi.github.io/docs/spot/v1/cn/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://ice3x.com?ref=14341802&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460809-1dd06c00-c616-11ea-98ad-7d5e1cb7fcdd.jpg&quot; alt=&quot;ice3x&quot;&gt;&lt;/a&gt; | ice3x | &lt;a href=&quot;https://ice3x.com?ref=14341802&quot;&gt;ICE3X&lt;/a&gt; | 1 | &lt;a href=&quot;https://ice3x.co.za/ice-cubed-bitcoin-exchange-api-documentation-1-june-2017&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://idex.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg&quot; alt=&quot;idex&quot;&gt;&lt;/a&gt; | idex | &lt;a href=&quot;https://idex.io&quot;&gt;IDEX&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.idex.io/&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.independentreserve.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg&quot; alt=&quot;independentreserve&quot;&gt;&lt;/a&gt; | independentreserve | &lt;a href=&quot;https://www.independentreserve.com&quot;&gt;Independent Reserve&lt;/a&gt; | * | &lt;a href=&quot;https://www.independentreserve.com/API&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://indodax.com/ref/testbitcoincoid/1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg&quot; alt=&quot;indodax&quot;&gt;&lt;/a&gt; | indodax | &lt;a href=&quot;https://indodax.com/ref/testbitcoincoid/1&quot;&gt;INDODAX&lt;/a&gt; | 2.0 | &lt;a href=&quot;https://github.com/btcid/indodax-official-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.itbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg&quot; alt=&quot;itbit&quot;&gt;&lt;/a&gt; | itbit | &lt;a href=&quot;https://www.itbit.com&quot;&gt;itBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.itbit.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.kraken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg&quot; alt=&quot;kraken&quot;&gt;&lt;/a&gt; | kraken | &lt;a href=&quot;https://www.kraken.com&quot;&gt;Kraken&lt;/a&gt; | 0 | &lt;a href=&quot;https://www.kraken.com/features/api&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.kucoin.com/?rcode=E5wkqe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg&quot; alt=&quot;kucoin&quot;&gt;&lt;/a&gt; | kucoin | &lt;a href=&quot;https://www.kucoin.com/?rcode=E5wkqe&quot;&gt;KuCoin&lt;/a&gt; | 2 | &lt;a href=&quot;https://docs.kucoin.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://kuna.io?r=kunaid-gvfihe8az7o4&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153927-f0578b80-c2c0-11ea-84b6-74612568e9e1.jpg&quot; alt=&quot;kuna&quot;&gt;&lt;/a&gt; | kuna | &lt;a href=&quot;https://kuna.io?r=kunaid-gvfihe8az7o4&quot;&gt;Kuna&lt;/a&gt; | 2 | &lt;a href=&quot;https://kuna.io/documents/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.lakebtc.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28074120-72b7c38a-6660-11e7-92d9-d9027502281d.jpg&quot; alt=&quot;lakebtc&quot;&gt;&lt;/a&gt; | lakebtc | &lt;a href=&quot;https://www.lakebtc.com&quot;&gt;LakeBTC&lt;/a&gt; | 2 | &lt;a href=&quot;https://www.lakebtc.com/s/api_v2&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://latoken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg&quot; alt=&quot;latoken&quot;&gt;&lt;/a&gt; | latoken | &lt;a href=&quot;https://latoken.com&quot;&gt;Latoken&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.latoken.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.lbex.io/invite?icode=7QCY&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg&quot; alt=&quot;lbank&quot;&gt;&lt;/a&gt; | lbank | &lt;a href=&quot;https://www.lbex.io/invite?icode=7QCY&quot;&gt;LBank&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/LBank-exchange/lbank-official-api-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/45798859-1a872600-bcb4-11e8-8746-69291ce87b04.jpg&quot; alt=&quot;liquid&quot;&gt;&lt;/a&gt; | liquid | &lt;a href=&quot;https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976&quot;&gt;Liquid&lt;/a&gt; | 2 | &lt;a href=&quot;https://developers.liquid.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.luno.com/invite/44893A&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg&quot; alt=&quot;luno&quot;&gt;&lt;/a&gt; | luno | &lt;a href=&quot;https://www.luno.com/invite/44893A&quot;&gt;luno&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.luno.com/en/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.lykke.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg&quot; alt=&quot;lykke&quot;&gt;&lt;/a&gt; | lykke | &lt;a href=&quot;https://www.lykke.com&quot;&gt;Lykke&lt;/a&gt; | 1 | &lt;a href=&quot;https://hft-api.lykke.com/swagger/ui/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.mercadobitcoin.com.br&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg&quot; alt=&quot;mercado&quot;&gt;&lt;/a&gt; | mercado | &lt;a href=&quot;https://www.mercadobitcoin.com.br&quot;&gt;Mercado Bitcoin&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.mercadobitcoin.com.br/api-doc&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://mixcoins.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460810-1dd06c00-c616-11ea-9276-956f400d6ffa.jpg&quot; alt=&quot;mixcoins&quot;&gt;&lt;/a&gt; | mixcoins | &lt;a href=&quot;https://mixcoins.com&quot;&gt;MixCoins&lt;/a&gt; | 1 | &lt;a href=&quot;https://mixcoins.com/help/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.novadax.com.br/?s=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg&quot; alt=&quot;novadax&quot;&gt;&lt;/a&gt; | novadax | &lt;a href=&quot;https://www.novadax.com.br/?s=ccxt&quot;&gt;NovaDAX&lt;/a&gt; | 1 | &lt;a href=&quot;https://doc.novadax.com/pt-BR/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://oceanex.pro/signup?referral=VE24QX&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg&quot; alt=&quot;oceanex&quot;&gt;&lt;/a&gt; | oceanex | &lt;a href=&quot;https://oceanex.pro/signup?referral=VE24QX&quot;&gt;OceanEx&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.oceanex.pro/doc/v1&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg&quot; alt=&quot;okcoin&quot;&gt;&lt;/a&gt; | okcoin | &lt;a href=&quot;https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513&quot;&gt;OKCoin&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.okcoin.com/docs/en/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg&quot; alt=&quot;okex&quot;&gt;&lt;/a&gt; | okex | &lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;OKEX&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.okex.com/docs/en/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg&quot; alt=&quot;paymium&quot;&gt;&lt;/a&gt; | paymium | &lt;a href=&quot;https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj&quot;&gt;Paymium&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/Paymium/api-documentation&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://phemex.com/register?referralCode=EDNVJ&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg&quot; alt=&quot;phemex&quot;&gt;&lt;/a&gt; | phemex | &lt;a href=&quot;https://phemex.com/register?referralCode=EDNVJ&quot;&gt;Phemex&lt;/a&gt; | 1 | &lt;a href=&quot;https://github.com/phemex/phemex-api-docs&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://poloniex.com/signup?c=UBFZJRPJ&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg&quot; alt=&quot;poloniex&quot;&gt;&lt;/a&gt; | poloniex | &lt;a href=&quot;https://poloniex.com/signup?c=UBFZJRPJ&quot;&gt;Poloniex&lt;/a&gt; | * | &lt;a href=&quot;https://docs.poloniex.com&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.probit.com/r/34608773&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg&quot; alt=&quot;probit&quot;&gt;&lt;/a&gt; | probit | &lt;a href=&quot;https://www.probit.com/r/34608773&quot;&gt;ProBit&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs-en.probit.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://qtrade.io/?ref=BKOQWVFGRH2C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/80491487-74a99c00-896b-11ea-821e-d307e832f13e.jpg&quot; alt=&quot;qtrade&quot;&gt;&lt;/a&gt; | qtrade | &lt;a href=&quot;https://qtrade.io/?ref=BKOQWVFGRH2C&quot;&gt;qTrade&lt;/a&gt; | 1 | &lt;a href=&quot;https://qtrade-exchange.github.io/qtrade-docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.rightbtc.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182092-1f372700-c2ec-11ea-8f9e-01b4d3ff8941.jpg&quot; alt=&quot;rightbtc&quot;&gt;&lt;/a&gt; | rightbtc | &lt;a href=&quot;https://www.rightbtc.com&quot;&gt;RightBTC&lt;/a&gt; | * | &lt;a href=&quot;https://docs.rightbtc.com/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://exchange.ripio.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/94507548-a83d6a80-0218-11eb-9998-28b9cec54165.jpg&quot; alt=&quot;ripio&quot;&gt;&lt;/a&gt; | ripio | &lt;a href=&quot;https://exchange.ripio.com&quot;&gt;Ripio&lt;/a&gt; | 1 | &lt;a href=&quot;https://exchange.ripio.com/en/api/&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.southxchange.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg&quot; alt=&quot;southxchange&quot;&gt;&lt;/a&gt; | southxchange | &lt;a href=&quot;https://www.southxchange.com&quot;&gt;SouthXchange&lt;/a&gt; | * | &lt;a href=&quot;https://www.southxchange.com/Home/Api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://app.stex.com?ref=36416021&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg&quot; alt=&quot;stex&quot;&gt;&lt;/a&gt; | stex | &lt;a href=&quot;https://app.stex.com?ref=36416021&quot;&gt;STEX&lt;/a&gt; | 3 | &lt;a href=&quot;https://help.stex.com/en/collections/1593608-api-v3-documentation&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://surbitcoin.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27991511-f0a50194-6481-11e7-99b5-8f02932424cc.jpg&quot; alt=&quot;surbitcoin&quot;&gt;&lt;/a&gt; | surbitcoin | &lt;a href=&quot;https://surbitcoin.com&quot;&gt;SurBitcoin&lt;/a&gt; | 1 | &lt;a href=&quot;https://blinktrade.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://therocktrading.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg&quot; alt=&quot;therock&quot;&gt;&lt;/a&gt; | therock | &lt;a href=&quot;https://therocktrading.com&quot;&gt;TheRockTrading&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.therocktrading.com/doc/v1/index.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;http://bit.ly/2IX0LrM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460811-1e690280-c616-11ea-8652-69f187305add.jpg&quot; alt=&quot;tidebit&quot;&gt;&lt;/a&gt; | tidebit | &lt;a href=&quot;http://bit.ly/2IX0LrM&quot;&gt;TideBit&lt;/a&gt; | 2 | &lt;a href=&quot;https://www.tidebit.com/documents/api/guide&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://tidex.com/exchange/?ref=57f5638d9cd7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg&quot; alt=&quot;tidex&quot;&gt;&lt;/a&gt; | tidex | &lt;a href=&quot;https://tidex.com/exchange/?ref=57f5638d9cd7&quot;&gt;Tidex&lt;/a&gt; | 3 | &lt;a href=&quot;https://tidex.com/exchange/public-api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://timex.io/?refcode=1x27vNkTbP1uwkCck&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg&quot; alt=&quot;timex&quot;&gt;&lt;/a&gt; | timex | &lt;a href=&quot;https://timex.io/?refcode=1x27vNkTbP1uwkCck&quot;&gt;TimeX&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.timex.io&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://upbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg&quot; alt=&quot;upbit&quot;&gt;&lt;/a&gt; | upbit | &lt;a href=&quot;https://upbit.com&quot;&gt;Upbit&lt;/a&gt; | 1 | &lt;a href=&quot;https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C&quot;&gt;API&lt;/a&gt; | | &lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt; | | &lt;a href=&quot;https://www.vaultoro.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766880-f205e870-5ee9-11e7-8fe2-0d5b15880752.jpg&quot; alt=&quot;vaultoro&quot;&gt;&lt;/a&gt; | vaultoro | &lt;a href=&quot;https://www.vaultoro.com&quot;&gt;Vaultoro&lt;/a&gt; | 1 | &lt;a href=&quot;https://api.vaultoro.com&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://vbtc.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27991481-1f53d1d8-6481-11e7-884e-21d17e7939db.jpg&quot; alt=&quot;vbtc&quot;&gt;&lt;/a&gt; | vbtc | &lt;a href=&quot;https://vbtc.exchange&quot;&gt;VBTC&lt;/a&gt; | 1 | &lt;a href=&quot;https://blinktrade.com/docs&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://vcc.exchange?ref=l4xhrH&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/100545356-8427f500-326c-11eb-9539-7d338242d61b.jpg&quot; alt=&quot;vcc&quot;&gt;&lt;/a&gt; | vcc | &lt;a href=&quot;https://vcc.exchange?ref=l4xhrH&quot;&gt;VCC Exchange&lt;/a&gt; | 3 | &lt;a href=&quot;https://vcc.exchange/api&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://waves.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg&quot; alt=&quot;wavesexchange&quot;&gt;&lt;/a&gt; | wavesexchange | &lt;a href=&quot;https://waves.exchange&quot;&gt;Waves.Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://docs.waves.exchange&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg&quot; alt=&quot;whitebit&quot;&gt;&lt;/a&gt; | whitebit | &lt;a href=&quot;https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963&quot;&gt;WhiteBit&lt;/a&gt; | 2 | &lt;a href=&quot;https://documenter.getpostman.com/view/7473075/Szzj8dgv?version=latest&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://xbtce.com/?agent=XX97BTCXXXG687021000B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28059414-e235970c-662c-11e7-8c3a-08e31f78684b.jpg&quot; alt=&quot;xbtce&quot;&gt;&lt;/a&gt; | xbtce | &lt;a href=&quot;https://xbtce.com/?agent=XX97BTCXXXG687021000B&quot;&gt;xBTCe&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.xbtce.com/tradeapi&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://xena.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87489843-bb469280-c64c-11ea-91aa-69c6326506af.jpg&quot; alt=&quot;xena&quot;&gt;&lt;/a&gt; | xena | &lt;a href=&quot;https://xena.exchange&quot;&gt;Xena Exchange&lt;/a&gt; | * | &lt;a href=&quot;https://support.xena.exchange/support/solutions/44000808700&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt; | | | &lt;a href=&quot;https://www.yobit.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg&quot; alt=&quot;yobit&quot;&gt;&lt;/a&gt; | yobit | &lt;a href=&quot;https://www.yobit.net&quot;&gt;YoBit&lt;/a&gt; | 3 | &lt;a href=&quot;https://www.yobit.net/en/api/&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://zaif.jp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg&quot; alt=&quot;zaif&quot;&gt;&lt;/a&gt; | zaif | &lt;a href=&quot;https://zaif.jp&quot;&gt;Zaif&lt;/a&gt; | 1 | &lt;a href=&quot;https://techbureau-api-document.readthedocs.io/ja/latest/index.html&quot;&gt;API&lt;/a&gt; | | | | &lt;a href=&quot;https://www.zb.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg&quot; alt=&quot;zb&quot;&gt;&lt;/a&gt; | zb | &lt;a href=&quot;https://www.zb.com&quot;&gt;ZB&lt;/a&gt; | 1 | &lt;a href=&quot;https://www.zb.com/i/developer&quot;&gt;API&lt;/a&gt; | | |&lt;/p&gt; 
&lt;p&gt;The list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details. If you can&#39;t find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email.&lt;/p&gt; 
&lt;p&gt;The library is under &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;, that means it&#39;s absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install the CCXT library is to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt; (JavaScript / Node v7.6+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt; (Python 3.5.3+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://packagist.org/packages/ccxt/ccxt&quot;&gt;ccxt in &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 5.4+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/js/&quot;&gt;&lt;code&gt;js/&lt;/code&gt;&lt;/a&gt; in JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/python/&quot;&gt;&lt;code&gt;python/&lt;/code&gt;&lt;/a&gt; in Python (generated from JS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/php/&quot;&gt;&lt;code&gt;php/&lt;/code&gt;&lt;/a&gt; in PHP (generated from JS)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also clone it into your project directory from &lt;a href=&quot;https://github.com/ccxt/ccxt&quot;&gt;ccxt GitHub repository&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/ccxt/ccxt.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (NPM)&lt;/h3&gt; 
&lt;p&gt;JavaScript version of CCXT works in both Node and web browsers. Requires ES6 and &lt;code&gt;async/await&lt;/code&gt; syntax support (Node 7.6.0+). When compiling with Webpack and Babel, make sure it is &lt;a href=&quot;https://github.com/ccxt/ccxt/issues/225#issuecomment-331905178&quot;&gt;not excluded&lt;/a&gt; in your &lt;code&gt;babel-loader&lt;/code&gt; config.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;var ccxt = require (&#39;ccxt&#39;)

console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (for use with the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag):&lt;/h3&gt; 
&lt;p&gt;All-in-one browser bundle (dependencies included), served from a CDN of your choice:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;jsDelivr: https://cdn.jsdelivr.net/npm/ccxt@1.41.12/dist/ccxt.browser.js&lt;/li&gt; 
 &lt;li&gt;unpkg: https://unpkg.com/ccxt@1.41.12/dist/ccxt.browser.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CDNs are not updated in real-time and may have delays. Defaulting to the most recent version without specifying the version number is not recommended. Please, keep in mind that we are not responsible for the correct operation of those CDN servers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/ccxt@1.41.12/dist/ccxt.browser.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Creates a global &lt;code&gt;ccxt&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pip install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import ccxt
print(ccxt.exchanges) # print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The library supports concurrent asynchronous mode with asyncio and async/await in Python 3.5.3+&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import ccxt.async_support as ccxt # link against the asynchronous version of ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://packagist.org/packages/ccxt/ccxt&quot;&gt;ccxt in PHP with &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 5.4+)&lt;/p&gt; 
&lt;p&gt;It requires common PHP modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cURL&lt;/li&gt; 
 &lt;li&gt;mbstring (using UTF-8 is highly recommended)&lt;/li&gt; 
 &lt;li&gt;PCRE&lt;/li&gt; 
 &lt;li&gt;iconv&lt;/li&gt; 
 &lt;li&gt;gmp (this is a built-in extension as of PHP 7.2+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;include &quot;ccxt.php&quot;;
var_dump (\ccxt\Exchange::$exchanges); // print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests — please see the &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; document for the details on that).&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;docker-compose&lt;/code&gt; (in the cloned CCXT repository):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose run --rm ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You don&#39;t need the Docker image if you&#39;re not going to develop CCXT. If you just want to use CCXT –&amp;nbsp;just install it as a regular package into your project.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Intro&lt;/h3&gt; 
&lt;p&gt;The CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key.&lt;/p&gt; 
&lt;p&gt;Public APIs include the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;market data&lt;/li&gt; 
 &lt;li&gt;instruments/trading pairs&lt;/li&gt; 
 &lt;li&gt;price feeds (exchange rates)&lt;/li&gt; 
 &lt;li&gt;order books&lt;/li&gt; 
 &lt;li&gt;trade history&lt;/li&gt; 
 &lt;li&gt;tickers&lt;/li&gt; 
 &lt;li&gt;OHLC(V) for charting&lt;/li&gt; 
 &lt;li&gt;other public endpoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In order to trade with private APIs you need to obtain API keys from an exchange&#39;s website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don&#39;t. You will have to sign up and create API keys on their websites.&lt;/p&gt; 
&lt;p&gt;Private APIs allow the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;manage personal account info&lt;/li&gt; 
 &lt;li&gt;query account balances&lt;/li&gt; 
 &lt;li&gt;trade by making market and limit orders&lt;/li&gt; 
 &lt;li&gt;deposit and withdraw fiat and crypto funds&lt;/li&gt; 
 &lt;li&gt;query personal orders&lt;/li&gt; 
 &lt;li&gt;get ledger history&lt;/li&gt; 
 &lt;li&gt;transfer funds between accounts&lt;/li&gt; 
 &lt;li&gt;use merchant services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library implements full public and private REST APIs for all exchanges. WebSocket and FIX implementations in JavaScript, PHP, Python are available in &lt;a href=&quot;https://ccxt.pro&quot;&gt;CCXT Pro&lt;/a&gt;, which is a professional addon to CCXT with support for WebSocket streams.&lt;/p&gt; 
&lt;p&gt;The CCXT library supports both camelcase notation (preferred in JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;// both of these notations work in JavaScript/Python/PHP
exchange.methodName ()  // camelcase pseudocode
exchange.method_name () // underscore pseudocode
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;JavaScript&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;&#39;use strict&#39;;
const ccxt = require (&#39;ccxt&#39;);

(async function () {
    let kraken    = new ccxt.kraken ()
    let bitfinex  = new ccxt.bitfinex ({ verbose: true })
    let huobipro  = new ccxt.huobipro ()
    let okcoinusd = new ccxt.okcoinusd ({
        apiKey: &#39;YOUR_PUBLIC_API_KEY&#39;,
        secret: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
    })

    const exchangeId = &#39;binance&#39;
        , exchangeClass = ccxt[exchangeId]
        , exchange = new exchangeClass ({
            &#39;apiKey&#39;: &#39;YOUR_API_KEY&#39;,
            &#39;secret&#39;: &#39;YOUR_SECRET&#39;,
            &#39;timeout&#39;: 30000,
            &#39;enableRateLimit&#39;: true,
        })

    console.log (kraken.id,    await kraken.loadMarkets ())
    console.log (bitfinex.id,  await bitfinex.loadMarkets  ())
    console.log (huobipro.id,  await huobipro.loadMarkets ())

    console.log (kraken.id,    await kraken.fetchOrderBook (kraken.symbols[0]))
    console.log (bitfinex.id,  await bitfinex.fetchTicker (&#39;BTC/USD&#39;))
    console.log (huobipro.id,  await huobipro.fetchTrades (&#39;ETH/USDT&#39;))

    console.log (okcoinusd.id, await okcoinusd.fetchBalance ())

    // sell 1 BTC/USD for market price, sell a bitcoin for dollars immediately
    console.log (okcoinusd.id, await okcoinusd.createMarketSellOrder (&#39;BTC/USD&#39;, 1))

    // buy 1 BTC/USD for $2500, you pay $2500 and receive ฿1 when the order is closed
    console.log (okcoinusd.id, await okcoinusd.createLimitBuyOrder (&#39;BTC/USD&#39;, 1, 2500.00))

    // pass/redefine custom exchange-specific order params: type, amount, price or whatever
    // use a custom order type
    bitfinex.createLimitSellOrder (&#39;BTC/USD&#39;, 1, 10, { &#39;type&#39;: &#39;trailing-stop&#39; })

}) ();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# coding=utf-8

import ccxt

hitbtc   = ccxt.hitbtc({&#39;verbose&#39;: True})
bitmex   = ccxt.bitmex()
huobipro = ccxt.huobipro()
exmo     = ccxt.exmo({
    &#39;apiKey&#39;: &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
})
kraken = ccxt.kraken({
    &#39;apiKey&#39;: &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
})

exchange_id = &#39;binance&#39;
exchange_class = getattr(ccxt, exchange_id)
exchange = exchange_class({
    &#39;apiKey&#39;: &#39;YOUR_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET&#39;,
    &#39;timeout&#39;: 30000,
    &#39;enableRateLimit&#39;: True,
})

hitbtc_markets = hitbtc.load_markets()

print(hitbtc.id, hitbtc_markets)
print(bitmex.id, bitmex.load_markets())
print(huobipro.id, huobipro.load_markets())

print(hitbtc.fetch_order_book(hitbtc.symbols[0]))
print(bitmex.fetch_ticker(&#39;BTC/USD&#39;))
print(huobipro.fetch_trades(&#39;LTC/USDT&#39;))

print(exmo.fetch_balance())

# sell one ฿ for market price and receive $ right now
print(exmo.id, exmo.create_market_sell_order(&#39;BTC/USD&#39;, 1))

# limit buy BTC/EUR, you pay €2500 and receive ฿1  when the order is closed
print(exmo.id, exmo.create_limit_buy_order(&#39;BTC/EUR&#39;, 1, 2500.00))

# pass/redefine custom exchange-specific order params: type, amount, price, flags, etc...
kraken.create_market_buy_order(&#39;BTC/USD&#39;, 1, {&#39;trading_agreement&#39;: &#39;agree&#39;})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;include &#39;ccxt.php&#39;;

$poloniex = new \ccxt\poloniex ();
$bittrex  = new \ccxt\bittrex  (array (&#39;verbose&#39; =&amp;gt; true));
$quoinex  = new \ccxt\quoinex   ();
$zaif     = new \ccxt\zaif     (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
));
$hitbtc   = new \ccxt\hitbtc   (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
));

$exchange_id = &#39;binance&#39;;
$exchange_class = &quot;\\ccxt\\$exchange_id&quot;;
$exchange = new $exchange_class (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET&#39;,
    &#39;timeout&#39; =&amp;gt; 30000,
    &#39;enableRateLimit&#39; =&amp;gt; true,
));

$poloniex_markets = $poloniex-&amp;gt;load_markets ();

var_dump ($poloniex_markets);
var_dump ($bittrex-&amp;gt;load_markets ());
var_dump ($quoinex-&amp;gt;load_markets ());

var_dump ($poloniex-&amp;gt;fetch_order_book ($poloniex-&amp;gt;symbols[0]));
var_dump ($bittrex-&amp;gt;fetch_trades (&#39;BTC/USD&#39;));
var_dump ($quoinex-&amp;gt;fetch_ticker (&#39;ETH/EUR&#39;));
var_dump ($zaif-&amp;gt;fetch_ticker (&#39;BTC/JPY&#39;));

var_dump ($zaif-&amp;gt;fetch_balance ());

// sell 1 BTC/JPY for market price, you pay ¥ and receive ฿ immediately
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_market_sell_order (&#39;BTC/JPY&#39;, 1));

// buy BTC/JPY, you receive ฿1 for ¥285000 when the order closes
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_limit_buy_order (&#39;BTC/JPY&#39;, 1, 285000));

// set a custom user-defined id to your order
$hitbtc-&amp;gt;create_order (&#39;BTC/USD&#39;, &#39;limit&#39;, &#39;buy&#39;, 1, 3000, array (&#39;clientOrderId&#39; =&amp;gt; &#39;123&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; document before making changes that you would like adopted in the code. Also, read the &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Support Developer Team&lt;/h2&gt; 
&lt;p&gt;We are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://opencollective.com/ccxt#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Supporters&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a supporter. Your avatar will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://opencollective.com/ccxt#supporter&quot;&gt;Become a supporter&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! [&lt;a href=&quot;https://opencollective.com/ccxt#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h3&gt;Crypto&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ETH 0x26a3CB49578F07000575405a57888681249c35Fd (ETH only)
BTC 33RmVRfhK2WZVQR1R83h2e9yXoqRNDvJva
BCH 1GN9p233TvNcNQFthCgfiHUnj5JRKEc2Ze
LTC LgM5hkvPzytEFfQGGDFGKYkE743jwUA7qv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thank you!&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/ccxt_official&quot;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@ccxt&quot;&gt;Read our blog on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;a href=&quot;https://discord.gg/dhzSKYU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;
  &lt;!-- raw HTML omitted --&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;For business inquiries: info@ccxt.trade&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;h2&gt;Hey! We are hiring JavaScript Engineers! &lt;a href=&quot;https://boards.greenhouse.io/consensys/jobs/2572388&quot;&gt;Apply here&lt;/a&gt;!&lt;/h2&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href=&quot;https://metamask.io/&quot;&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us&quot;&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360000682532-General&quot;&gt;general questions&lt;/a&gt;, &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360000682552-Feature-Requests-Ideas&quot;&gt;feature requests&lt;/a&gt;, or &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics/360001751291-Developer-Questions&quot;&gt;developer questions&lt;/a&gt;, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us/community/topics&quot;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow our &lt;a href=&quot;https://twitter.com/metamask_io&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://medium.com/metamask&quot;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&quot;https://metamask.github.io/metamask-docs/&quot;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask project itself, visit our &lt;a href=&quot;https://github.com/MetaMask/metamask-extension/tree/develop/docs&quot;&gt;Internal Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building locally&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version 10 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Copy the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file to &lt;code&gt;.metamaskrc&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href=&quot;https://infura.io/docs&quot;&gt;Infura Project ID&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you&#39;ll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href=&quot;https://segment.com/docs/connections/find-writekey/&quot;&gt;Segment write key&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Optionally, to start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt; instead. 
  &lt;ul&gt; 
   &lt;li&gt;To start the &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React DevTools&lt;/a&gt; and &lt;a href=&quot;http://extension.remotedev.io&quot;&gt;Redux DevTools Extension&lt;/a&gt; alongside the app, use &lt;code&gt;yarn start:dev&lt;/code&gt;. 
    &lt;ul&gt; 
     &lt;li&gt;React DevTools will open in a separate window; no browser extension is required&lt;/li&gt; 
     &lt;li&gt;Redux DevTools will need to be installed as a browser extension. Open the Redux Remote Devtools to access Redux state logs. This can be done by either right clicking within the web browser to bring up the context menu, expanding the Redux DevTools panel and clicking Open Remote DevTools OR clicking the Redux DevTools extension icon and clicking Open Remote DevTools. 
      &lt;ul&gt; 
       &lt;li&gt;You will also need to check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked)&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they&#39;re built.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;Run tests with &lt;code&gt;yarn test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also test with a continuously watching process, via &lt;code&gt;yarn watch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/architecture.png&quot; alt=&quot;Architecture Diagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build for Publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn dist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-chrome.md&quot;&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-firefox.md&quot;&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/translating-guide.md&quot;&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/publishing.md&quot;&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/trezor-emulator.md&quot;&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/gource-viz.sh&quot;&gt;How to generate a visualization of this repository&#39;s development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>leerob/leerob.io</title>
      <link>https://github.com/leerob/leerob.io</link>
      <description>&lt;p&gt;✨ My portfolio built with Next.js, MDX, Tailwind CSS, and Vercel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fleerob%2Fleerob.io&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;Deploy with Vercel&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;leerob.io&lt;/h1&gt; 
&lt;p&gt;My portfolio has transformed over the years - from a static HTML site, to Jekyll, to Hugo, and finally to Next.js/React/MDX. My personal slice of the internet provides a platform for my writing and to showcase my latest work.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;pages/api/*&lt;/code&gt; - &lt;a href=&quot;https://nextjs.org/docs/api-routes/introduction&quot;&gt;API routes&lt;/a&gt; powering &lt;a href=&quot;https://leerob.io/dashboard&quot;&gt;&lt;code&gt;/dashboard&lt;/code&gt;&lt;/a&gt;, newsletter subscription, and post views.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pages/blog/*&lt;/code&gt; - Static pre-rendered blog pages using &lt;a href=&quot;https://github.com/mdx-js/mdx&quot;&gt;MDX&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pages/dashboard&lt;/code&gt; - &lt;a href=&quot;https://leerob.io/dashboard&quot;&gt;Personal dashboard&lt;/a&gt; containing metrics like sales, views, and subscribers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pages/*&lt;/code&gt; - All other static pages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running Locally&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/leerob/leerob.io.git
$ cd leerob.io
$ yarn
$ yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file similar to &lt;a href=&quot;https://github.com/leerob/leerob.io/blob/master/.env.example&quot;&gt;&lt;code&gt;.env.example&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Built Using&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vercel.com&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdx-js/mdx&quot;&gt;MDX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>cehui0303/Tmall_Tickets</title>
      <link>https://github.com/cehui0303/Tmall_Tickets</link>
      <description>&lt;p&gt;天猫超市茅台抢票功能&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tmall_Tickets&lt;/h1&gt; 
&lt;p&gt;天猫超市茅台抢票功能&lt;/p&gt; 
&lt;h1&gt;抢票方法&lt;/h1&gt; 
&lt;p&gt;1.为了方便和简化抢票业务逻辑，提高代码的效率，本抢票软件只负责提交抢票和发起付款请求。
 &lt;!-- raw HTML omitted --&gt; 2.通过手机端将天猫超市端的茅台加入购物车，然后执行下面的操作
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h1&gt;打开页面&lt;/h1&gt; 
&lt;p&gt;https://cart.tmall.com/cart.htm&lt;/p&gt; 
&lt;h1&gt;Chrome浏览器加载插件运行&lt;/h1&gt; 
&lt;p&gt;插件自动运行后，时间到了后，看看是否订单里面有付款项，有的话就说抢票成功，没有则是没中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sudheerj/reactjs-interview-questions</title>
      <link>https://github.com/sudheerj/reactjs-interview-questions</link>
      <description>&lt;p&gt;List of top 500 ReactJS Interview Questions &amp; Answers....Coding exercise questions are coming soon!!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Interview Questions &amp;amp; Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click :star:if you like the project. Pull Request are highly appreciated. Follow me &lt;a href=&quot;https://twitter.com/SudheerJonna&quot;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;hr&gt; 
&lt;h2&gt;Downloading PDF/Epub formats&lt;/h2&gt; 
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&quot;https://github.com/sudheerj/reactjs-interview-questions/actions&quot;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;p&gt;| No. | Questions | | --- | --------- | | | &lt;strong&gt;Core React&lt;/strong&gt; | |1 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react&quot;&gt;What is React?&lt;/a&gt; | |2 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react&quot;&gt;What are the major features of React?&lt;/a&gt; | |3 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx&quot;&gt;What is JSX?&lt;/a&gt; | |4 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component&quot;&gt;What is the difference between Element and Component?&lt;/a&gt; | |5 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react&quot;&gt;How to create components in React?&lt;/a&gt; | |6 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component&quot;&gt;When to use a Class Component over a Function Component?&lt;/a&gt; | |7 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-pure-components&quot;&gt;What are Pure Components?&lt;/a&gt; | |8 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-state-in-react&quot;&gt;What is state in React?&lt;/a&gt; | |9 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-props-in-react&quot;&gt;What are props in React?&lt;/a&gt; | |10 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-state-and-props&quot;&gt;What is the difference between state and props?&lt;/a&gt; | |11 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-we-not-update-the-state-directly&quot;&gt;Why should we not update the state directly?&lt;/a&gt; | |12 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-callback-function-as-an-argument-of-setstate&quot;&gt;What is the purpose of callback function as an argument of setState()?&lt;/a&gt; |13 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-html-and-react-event-handling&quot;&gt;What is the difference between HTML and React event handling?&lt;/a&gt; | |14 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-bind-methods-or-event-handlers-in-jsx-callbacks&quot;&gt;How to bind methods or event handlers in JSX callbacks?&lt;/a&gt; | |15 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-a-parameter-to-an-event-handler-or-callback&quot;&gt;How to pass a parameter to an event handler or callback?&lt;/a&gt; | |16 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-synthetic-events-in-react&quot;&gt;What are synthetic events in React?&lt;/a&gt; | |17 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-inline-conditional-expressions&quot;&gt;What are inline conditional expressions?&lt;/a&gt; | |18 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements&quot;&gt;What is &quot;key&quot; prop and what is the benefit of using it in arrays of elements?&lt;/a&gt; | |19 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-refs&quot;&gt;What is the use of refs?&lt;/a&gt; | |20 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-refs&quot;&gt;How to create refs?&lt;/a&gt; |21 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-forward-refs&quot;&gt;What are forward refs?&lt;/a&gt; | |22 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#which-is-preferred-option-with-in-callback-refs-and-finddomnode&quot;&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/a&gt; | |23 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-string-refs-legacy&quot;&gt;Why are String Refs legacy?&lt;/a&gt; | |24 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-virtual-dom&quot;&gt;What is Virtual DOM?&lt;/a&gt; | |25 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-virtual-dom-works&quot;&gt;How Virtual DOM works?&lt;/a&gt; | |26 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-shadow-dom-and-virtual-dom&quot;&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/a&gt; | |27 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-fiber&quot;&gt;What is React Fiber?&lt;/a&gt; | |28 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-goal-of-react-fiber&quot;&gt;What is the main goal of React Fiber?&lt;/a&gt; | |29 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-controlled-components&quot;&gt;What are controlled components?&lt;/a&gt; | |30 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-uncontrolled-components&quot;&gt;What are uncontrolled components?&lt;/a&gt; | |31 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-createelement-and-cloneelement&quot;&gt;What is the difference between createElement and cloneElement?&lt;/a&gt; | |32 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-lifting-state-up-in-react&quot;&gt;What is Lifting State Up in React?&lt;/a&gt; | |33 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-phases-of-component-lifecycle&quot;&gt;What are the different phases of component lifecycle?&lt;/a&gt; | |34 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-of-react&quot;&gt;What are the lifecycle methods of React?&lt;/a&gt; | |35 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-higher-order-components&quot;&gt;What are Higher-Order components?&lt;/a&gt; | |36 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-props-proxy-for-hoc-component&quot;&gt;How to create props proxy for HOC component?&lt;/a&gt; | |37 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-context&quot;&gt;What is context?&lt;/a&gt; | |38 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-children-prop&quot;&gt;What is children prop?&lt;/a&gt; | |39 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-write-comments-in-react&quot;&gt;How to write comments in React?&lt;/a&gt; | |40 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-using-super-constructor-with-props-argument&quot;&gt;What is the purpose of using super constructor with props argument?&lt;/a&gt; | |41 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reconciliation&quot;&gt;What is reconciliation?&lt;/a&gt; | |42 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-state-with-a-dynamic-key-name&quot;&gt;How to set state with a dynamic key name?&lt;/a&gt; | |43 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-would-be-the-common-mistake-of-function-being-called-every-time-the-component-renders&quot;&gt;What would be the common mistake of function being called every time the component renders?&lt;/a&gt; | |44 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-lazy-function-supports-named-exports&quot;&gt;Is lazy function supports named exports?&lt;/a&gt; | |45 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-uses-classname-over-class-attribute&quot;&gt;Why React uses className over class attribute?&lt;/a&gt; | |46 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-fragments&quot;&gt;What are fragments?&lt;/a&gt; | |47 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-fragments-are-better-than-container-divs&quot;&gt;Why fragments are better than container divs?&lt;/a&gt; | |48 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-portals-in-react&quot;&gt;What are portals in React?&lt;/a&gt; | |49 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateless-components&quot;&gt;What are stateless components?&lt;/a&gt; | |50 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateful-components&quot;&gt;What are stateful components?&lt;/a&gt; | |51 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-apply-validation-on-props-in-react&quot;&gt;How to apply validation on props in React?&lt;/a&gt; | |52 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react&quot;&gt;What are the advantages of React?&lt;/a&gt; | |53 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-of-react&quot;&gt;What are the limitations of React?&lt;/a&gt; | |54 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-error-boundaries-in-react-v16&quot;&gt;What are error boundaries in React v16&lt;/a&gt; | |55 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-error-boundaries-handled-in-react-v15&quot;&gt;How error boundaries handled in React v15?&lt;/a&gt; | |56 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-recommended-ways-for-static-type-checking&quot;&gt;What are the recommended ways for static type checking?&lt;/a&gt; | |57 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-react-dom-package&quot;&gt;What is the use of react-dom package?&lt;/a&gt; | |58 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-render-method-of-react-dom&quot;&gt;What is the purpose of render method of react-dom?&lt;/a&gt; | |59 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reactdomserver&quot;&gt;What is ReactDOMServer?&lt;/a&gt; | |60 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-innerhtml-in-react&quot;&gt;How to use InnerHtml in React?&lt;/a&gt; | |61 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-styles-in-react&quot;&gt;How to use styles in React?&lt;/a&gt; | |62 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-events-are-different-in-react&quot;&gt;How events are different in React?&lt;/a&gt; | |63 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-setstate-in-constructor&quot;&gt;What will happen if you use setState in constructor?&lt;/a&gt; | |64 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-impact-of-indexes-as-keys&quot;&gt;What is the impact of indexes as keys?&lt;/a&gt; | |65 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-setstate-in-componentwillmount-method&quot;&gt;Is it good to use setState() in componentWillMount() method?&lt;/a&gt; | |66 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-props-in-initial-state&quot;&gt;What will happen if you use props in initial state?&lt;/a&gt; | |67 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-conditionally-render-components&quot;&gt;How do you conditionally render components?&lt;/a&gt; |68 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-be-careful-when-spreading-props-on-dom-elements&quot;&gt;Why we need to be careful when spreading props on DOM elements??&lt;/a&gt; | |69 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-use-decorators-in-react&quot;&gt;How you use decorators in React?&lt;/a&gt; | |70 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-memoize-a-component&quot;&gt;How do you memoize a component?&lt;/a&gt; | |71 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-implement-server-side-rendering-or-ssr&quot;&gt;How you implement Server-Side Rendering or SSR?&lt;/a&gt; | |72 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-enable-production-mode-in-react&quot;&gt;How to enable production mode in React?&lt;/a&gt; | |73 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-cra-and-its-benefits&quot;&gt;What is CRA and its benefits?&lt;/a&gt; | |74 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-lifecycle-methods-order-in-mounting&quot;&gt;What is the lifecycle methods order in mounting?&lt;/a&gt; | |75 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-going-to-be-deprecated-in-react-v16&quot;&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/a&gt; | |76 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromprops-lifecycle-method&quot;&gt;What is the purpose of getDerivedStateFromProps() lifecycle method?&lt;/a&gt; | |77 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getsnapshotbeforeupdate-lifecycle-method&quot;&gt;What is the purpose of getSnapshotBeforeUpdate() lifecycle method?&lt;/a&gt; | |78 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-hooks-replace-render-props-and-higher-order-components&quot;&gt;Do Hooks replace render props and higher order components?&lt;/a&gt; | |79 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-way-for-naming-components&quot;&gt;What is the recommended way for naming components?&lt;/a&gt; | |80 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-ordering-of-methods-in-component-class&quot;&gt;What is the recommended ordering of methods in component class?&lt;/a&gt; | |81 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-switching-component&quot;&gt;What is a switching component?&lt;/a&gt; | |82 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-pass-a-function-to-setstate&quot;&gt;Why we need to pass a function to setState()?&lt;/a&gt; | |83 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-strict-mode-in-react&quot;&gt;What is strict mode in React?&lt;/a&gt; | |84 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-mixins&quot;&gt;What are React Mixins?&lt;/a&gt; | |85 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-ismounted-an-anti-pattern-and-what-is-the-proper-solution&quot;&gt;Why is isMounted() an anti-pattern and what is the proper solution?&lt;/a&gt; | |86 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-pointer-events-supported-in-react&quot;&gt;What are the Pointer Events supported in React?&lt;/a&gt; | |87 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-component-names-start-with-capital-letter&quot;&gt;Why should component names start with capital letter?&lt;/a&gt; | |88 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-custom-dom-attributes-supported-in-react-v16&quot;&gt;Are custom DOM attributes supported in React v16?&lt;/a&gt; | |89 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-constructor-and-getinitialstate&quot;&gt;What is the difference between constructor and getInitialState?&lt;/a&gt; | |90 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-force-a-component-to-re-render-without-calling-setstate&quot;&gt;Can you force a component to re-render without calling setState?&lt;/a&gt; | |91 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-super-and-superprops-in-react-using-es6-classes&quot;&gt;What is the difference between super() and super(props) in React using ES6 classes?&lt;/a&gt; | |92 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-loop-inside-jsx&quot;&gt;How to loop inside JSX?&lt;/a&gt; | |93 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-props-in-attribute-quotes&quot;&gt;How do you access props in attribute quotes?&lt;/a&gt; | |94 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-proptype-array-with-shape&quot;&gt;What is React PropType array with shape?&lt;/a&gt; | |95 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-conditionally-apply-class-attributes&quot;&gt;How to conditionally apply class attributes?&lt;/a&gt; | |96 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-reactdom&quot;&gt;What is the difference between React and ReactDOM?&lt;/a&gt; | |97 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-reactdom-is-separated-from-react&quot;&gt;Why ReactDOM is separated from React?&lt;/a&gt; | |98 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-react-label-element&quot;&gt;How to use React label element?&lt;/a&gt; | |99 | &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-combine-multiple-inline-style-objects&quot;&gt;How to combine multiple inline style objects?&lt;/a&gt; | |100| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-re-render-the-view-when-the-browser-is-resized&quot;&gt;How to re-render the view when the browser is resized?&lt;/a&gt; |101| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-setstate-and-replacestate-methods&quot;&gt;What is the difference between setState and replaceState methods?&lt;/a&gt; | |102| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-listen-to-state-changes&quot;&gt;How to listen to state changes?&lt;/a&gt; | |103| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-approach-of-removing-an-array-element-in-react-state&quot;&gt;What is the recommended approach of removing an array element in react state?&lt;/a&gt; | |104| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-rendering-html&quot;&gt;Is it possible to use React without rendering HTML?&lt;/a&gt; | |105| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pretty-print-json-with-react&quot;&gt;How to pretty print JSON with React?&lt;/a&gt; | |106| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-cant-update-props-in-react&quot;&gt;Why you can&#39;t update props in React?&lt;/a&gt; | |107| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-focus-an-input-element-on-page-load&quot;&gt;How to focus an input element on page load?&lt;/a&gt; | |108| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-ways-of-updating-objects-in-state&quot;&gt;What are the possible ways of updating objects in state?&lt;/a&gt; | |110| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-can-we-find-the-version-of-react-at-runtime-in-the-browser&quot;&gt;How can we find the version of React at runtime in the browser?&lt;/a&gt; | |111| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-approaches-to-include-polyfills-in-your-create-react-app&quot;&gt;What are the approaches to include polyfills in your create-react-app?&lt;/a&gt; | |112| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-https-instead-of-http-in-create-react-app&quot;&gt;How to use https instead of http in create-react-app?&lt;/a&gt; | |113| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-avoid-using-relative-path-imports-in-create-react-app&quot;&gt;How to avoid using relative path imports in create-react-app?&lt;/a&gt; | |114| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-google-analytics-for-react-router&quot;&gt;How to add Google Analytics for react-router?&lt;/a&gt; | |115| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-update-a-component-every-second&quot;&gt;How to update a component every second?&lt;/a&gt; | |116| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react&quot;&gt;How do you apply vendor prefixes to inline styles in React?&lt;/a&gt; | |117| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-import-and-export-components-using-react-and-es6&quot;&gt;How to import and export components using react and ES6?&lt;/a&gt; | |118| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-exceptions-on-react-component-naming&quot;&gt;What are the exceptions on React component naming?&lt;/a&gt; | |119| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-a-component-constructor-called-only-once&quot;&gt;Why is a component constructor called only once?&lt;/a&gt; | |120| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-define-constants-in-react&quot;&gt;How to define constants in React?&lt;/a&gt; | |121| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-programmatically-trigger-click-event-in-react&quot;&gt;How to programmatically trigger click event in React?&lt;/a&gt; | |122| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-asyncawait-in-plain-react&quot;&gt;Is it possible to use async/await in plain React?&lt;/a&gt; | |123| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-common-folder-structures-for-react&quot;&gt;What are the common folder structures for React?&lt;/a&gt; | |124| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-packages-for-animation&quot;&gt;What are the popular packages for animation?&lt;/a&gt; | |125| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-styles-modules&quot;&gt;What is the benefit of styles modules?&lt;/a&gt; | |126| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-react-specific-linters&quot;&gt;What are the popular React-specific linters?&lt;/a&gt; | |127| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-call-and-in-which-component-lifecycle-methods-should-i-make-an-ajax-call&quot;&gt;How to make AJAX call and In which component lifecycle methods should I make an AJAX call?&lt;/a&gt; | |128| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-render-props&quot;&gt;What are render props?&lt;/a&gt; | | | &lt;strong&gt;React Router&lt;/strong&gt; | |129| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-router&quot;&gt;What is React Router?&lt;/a&gt; | |130| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-router-is-different-from-history-library&quot;&gt;How React Router is different from history library?&lt;/a&gt; | |131| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-router-components-of-react-router-v4&quot;&gt;What are the &amp;lt;Router&amp;gt; components of React Router v4?&lt;/a&gt; | |132| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-push-and-replace-methods-of-history&quot;&gt;What is the purpose of push and replace methods of history?&lt;/a&gt; | |133| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-programmatically-navigate-using-react-router-v4&quot;&gt;How do you programmatically navigate using React router v4?&lt;/a&gt; | |134| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-query-parameters-in-react-router-v4&quot;&gt;How to get query parameters in React Router v4&lt;/a&gt; | |135| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-get-router-may-have-only-one-child-element-warning&quot;&gt;Why you get &quot;Router may have only one child element&quot; warning?&lt;/a&gt; | |136| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-params-to-historypush-method-in-react-router-v4&quot;&gt;How to pass params to history.push method in React Router v4?&lt;/a&gt; | |137| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-implement-default-or-notfound-page&quot;&gt;How to implement default or NotFound page?&lt;/a&gt; | |138| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-history-on-react-router-v4&quot;&gt;How to get history on React Router v4?&lt;/a&gt; | |139| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-perform-automatic-redirect-after-login&quot;&gt;How to perform automatic redirect after login?&lt;/a&gt; | | | &lt;strong&gt;React Internationalization&lt;/strong&gt; | |140| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-intl&quot;&gt;What is React-Intl?&lt;/a&gt; | |141| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-react-intl&quot;&gt;What are the main features of React Intl?&lt;/a&gt; | |142| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-two-ways-of-formatting-in-react-intl&quot;&gt;What are the two ways of formatting in React Intl?&lt;/a&gt; | |143| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-formattedmessage-as-placeholder-using-react-intl&quot;&gt;How to use FormattedMessage as placeholder using React Intl?&lt;/a&gt; | |144| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-current-locale-with-react-intl&quot;&gt;How to access current locale with React Intl&lt;/a&gt; | |145| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-format-date-using-react-intl&quot;&gt;How to format date using React Intl?&lt;/a&gt; | | | &lt;strong&gt;React Testing&lt;/strong&gt; | |146| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-shallow-renderer-in-react-testing&quot;&gt;What is Shallow Renderer in React testing?&lt;/a&gt; | |147| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-testrenderer-package-in-react&quot;&gt;What is TestRenderer package in React?&lt;/a&gt; | |148| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-reacttestutils-package&quot;&gt;What is the purpose of ReactTestUtils package?&lt;/a&gt; | |149| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jest&quot;&gt;What is Jest?&lt;/a&gt; | |150| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-jest-over-jasmine&quot;&gt;What are the advantages of Jest over Jasmine?&lt;/a&gt; | |151| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-a-simple-example-of-jest-test-case&quot;&gt;Give a simple example of Jest test case&lt;/a&gt; | | | &lt;strong&gt;React Redux&lt;/strong&gt; | |152| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flux&quot;&gt;What is Flux?&lt;/a&gt; | |153| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux&quot;&gt;What is Redux?&lt;/a&gt; | |154| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-core-principles-of-redux&quot;&gt;What are the core principles of Redux?&lt;/a&gt; | |155| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-downsides-of-redux-compared-to-flux&quot;&gt;What are the downsides of Redux compared to Flux?&lt;/a&gt; | |156| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the difference between mapStateToProps() and mapDispatchToProps()?&lt;/a&gt; | |157| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-dispatch-an-action-in-reducer&quot;&gt;Can I dispatch an action in reducer?&lt;/a&gt; | |158| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-redux-store-outside-a-component&quot;&gt;How to access Redux store outside a component?&lt;/a&gt; | |159| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-drawbacks-of-mvw-pattern&quot;&gt;What are the drawbacks of MVW pattern&lt;/a&gt; | |160| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-there-any-similarities-between-redux-and-rxjs&quot;&gt;Are there any similarities between Redux and RxJS?&lt;/a&gt; | |161| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-dispatch-an-action-on-load&quot;&gt;How to dispatch an action on load?&lt;/a&gt; | |162| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-connect-from-react-redux&quot;&gt;How to use connect from React Redux?&lt;/a&gt; | |163| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-reset-state-in-redux&quot;&gt;How to reset state in Redux?&lt;/a&gt; | |164| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#whats-the-purpose-of-at-symbol-in-the-redux-connect-decorator&quot;&gt;Whats the purpose of at symbol in the redux connect decorator?&lt;/a&gt; | |165| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-context-and-react-redux&quot;&gt;What is the difference between React context and React Redux?&lt;/a&gt; | |166| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-redux-state-functions-called-reducers&quot;&gt;Why are Redux state functions called reducers?&lt;/a&gt; | |167| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-request-in-redux&quot;&gt;How to make AJAX request in Redux?&lt;/a&gt; | |168| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-keep-all-components-state-in-redux-store&quot;&gt;Should I keep all component&#39;s state in Redux store?&lt;/a&gt; | |169| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-way-to-access-redux-store&quot;&gt;What is the proper way to access Redux store?&lt;/a&gt; | |170| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-component-and-container-in-react-redux&quot;&gt;What is the difference between component and container in React Redux?&lt;/a&gt; | |171| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-the-constants-in-redux&quot;&gt;What is the purpose of the constants in Redux? &lt;/a&gt; | |172| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-ways-to-write-mapdispatchtoprops&quot;&gt;What are the different ways to write mapDispatchToProps()?&lt;/a&gt; | |173| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-the-ownprops-parameter-in-mapstatetoprops-and-mapdispatchtoprops&quot;&gt;What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?&lt;/a&gt; | |174| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-structure-redux-top-level-directories&quot;&gt;How to structure Redux top level directories?&lt;/a&gt; | |175| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-saga&quot;&gt;What is redux-saga?&lt;/a&gt; | |176| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-mental-model-of-redux-saga&quot;&gt;What is the mental model of redux-saga?&lt;/a&gt; | |177| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-call-and-put-in-redux-saga&quot;&gt;What are the differences between call and put in redux-saga&lt;/a&gt; | |178| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-thunk&quot;&gt;What is Redux Thunk?&lt;/a&gt; | |179| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-saga-and-redux-thunk&quot;&gt;What are the differences between redux-saga and redux-thunk&lt;/a&gt; | |180| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-devtools&quot;&gt;What is Redux DevTools?&lt;/a&gt; | |181| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-redux-devtools&quot;&gt;What are the features of Redux DevTools?&lt;/a&gt; | |182| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-redux-selectors-and-why-to-use-them&quot;&gt;What are Redux selectors and Why to use them?&lt;/a&gt; | |183| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-form&quot;&gt;What is Redux Form?&lt;/a&gt; | |184| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-redux-form&quot;&gt;What are the main features of Redux Form?&lt;/a&gt; | |185| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-multiple-middlewares-to-redux&quot;&gt;How to add multiple middlewares to Redux?&lt;/a&gt; | |186| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-initial-state-in-redux&quot;&gt;How to set initial state in Redux?&lt;/a&gt; | |187| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-relay-is-different-from-redux&quot;&gt;How Relay is different from Redux?&lt;/a&gt; | |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-an-action-in-redux&quot;&gt;What is an action in Redux?&lt;/a&gt; | | | &lt;strong&gt;React Native&lt;/strong&gt; | |188| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-native-and-react&quot;&gt;What is the difference between React Native and React?&lt;/a&gt; | |189| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-test-react-native-apps&quot;&gt;How to test React Native apps?&lt;/a&gt; | |190| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-do-logging-in-react-native&quot;&gt;How to do logging in React Native?&lt;/a&gt; | |191| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-your-react-native&quot;&gt;How to debug your React Native?&lt;/a&gt; | | | &lt;strong&gt;React supported libraries and Integration&lt;/strong&gt; | |192| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reselect-and-how-it-works&quot;&gt;What is reselect and how it works?&lt;/a&gt; | |193| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flow&quot;&gt;What is Flow?&lt;/a&gt; | |194| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-flow-and-proptypes&quot;&gt;What is the difference between Flow and PropTypes?&lt;/a&gt; | |195| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-font-awesome-icons-in-react&quot;&gt;How to use font-awesome icons in React?&lt;/a&gt; | |196| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-dev-tools&quot;&gt;What is React Dev Tools?&lt;/a&gt; | |197| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-devtools-not-loading-in-chrome-for-local-files&quot;&gt;Why is DevTools not loading in Chrome for local files?&lt;/a&gt; | |198| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-polymer-in-react&quot;&gt;How to use Polymer in React?&lt;/a&gt; | |199| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react-over-vuejs&quot;&gt;What are the advantages of React over Vue.js?&lt;/a&gt; | |200| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-angular&quot;&gt;What is the difference between React and Angular?&lt;/a&gt; | |201| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-tab-is-not-showing-up-in-devtools&quot;&gt;Why React tab is not showing up in DevTools?&lt;/a&gt; | |202| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-styled-components&quot;&gt;What are styled components?&lt;/a&gt; | |203| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-styled-components&quot;&gt;Give an example of Styled Components?&lt;/a&gt; | |204| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-relay&quot;&gt;What is Relay?&lt;/a&gt; | |205| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-typescript-in-create-react-app-application&quot;&gt;How to use TypeScript in create-react-app application?&lt;/a&gt; | | | &lt;strong&gt;Miscellaneous&lt;/strong&gt; | |206| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-reselect-library&quot;&gt;What are the main features of reselect library?&lt;/a&gt; | |207| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-reselect-usage&quot;&gt;Give an example of reselect usage?&lt;/a&gt; | |209| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-the-statics-object-work-with-es6-classes-in-react&quot;&gt;Does the statics object work with ES6 classes in React?&lt;/a&gt; | |210| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-redux-only-be-used-with-react&quot;&gt;Can Redux only be used with React?&lt;/a&gt; | |211| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-you-need-to-have-a-particular-build-tool-to-use-redux&quot;&gt;Do you need to have a particular build tool to use Redux?&lt;/a&gt; | |212| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-redux-form-initialvalues-get-updated-from-state&quot;&gt;How Redux Form initialValues get updated from state?&lt;/a&gt; | |213| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-proptypes-allow-different-types-for-one-prop&quot;&gt;How React PropTypes allow different type for one prop?&lt;/a&gt; | |214| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-import-an-svg-file-as-react-component&quot;&gt;Can I import an SVG file as react component?&lt;/a&gt; | |215| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-inline-ref-callbacks-or-functions-not-recommended&quot;&gt;Why are inline ref callbacks or functions not recommended?&lt;/a&gt;| |216| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-render-hijacking-in-react&quot;&gt;What is render hijacking in React?&lt;/a&gt;| |217| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hoc-factory-implementations&quot;&gt;What are HOC factory implementations?&lt;/a&gt;| |218| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-numbers-to-react-component&quot;&gt;How to pass numbers to React component?&lt;/a&gt;| |219| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-keep-all-my-state-into-redux-should-i-ever-use-react-internal-state&quot;&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/a&gt;| |220| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-registerserviceworker-in-react&quot;&gt;What is the purpose of registerServiceWorker in React?&lt;/a&gt;| |221| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-memo-function&quot;&gt;What is React memo function?&lt;/a&gt;| |222| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-lazy-function&quot;&gt;What is React lazy function?&lt;/a&gt;| |223| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-unnecessary-updates-using-setstate&quot;&gt;How to prevent unnecessary updates using setState?&lt;/a&gt;| |224| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-render-array-strings-and-numbers-in-react-16-version&quot;&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/a&gt;| |225| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-class-field-declarations-syntax-in-react-classes&quot;&gt;How to use class field declarations syntax in React classes?&lt;/a&gt;| |226| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hooks&quot;&gt;What are hooks?&lt;/a&gt;| |227| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-needs-to-follow-for-hooks&quot;&gt;What are the rules needs to follow for hooks?&lt;/a&gt;| |228| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-ensure-hooks-followed-the-rules-in-your-project&quot;&gt;How to ensure hooks followed the rules in your project?&lt;/a&gt;| |229| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-flux-and-redux&quot;&gt;What are the differences between Flux and Redux?&lt;/a&gt;| |230| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-react-router-v4&quot;&gt;What are the benefits of React Router V4?&lt;/a&gt;| |231| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-describe-about-componentdidcatch-lifecycle-method-signature&quot;&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/a&gt;| |232| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#in-which-scenarios-error-boundaries-do-not-catch-errors&quot;&gt;In which scenarios error boundaries do not catch errors?&lt;/a&gt;| |233| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-not-you-need-error-boundaries-for-event-handlers&quot;&gt;Why do not you need error boundaries for event handlers?&lt;/a&gt;| |234| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-try-catch-block-and-error-boundaries&quot;&gt;What is the difference between try catch block and error boundaries?&lt;/a&gt;| |235| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-behavior-of-uncaught-errors-in-react-16&quot;&gt;What is the behavior of uncaught errors in react 16?&lt;/a&gt;| |236| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-placement-for-error-boundaries&quot;&gt;What is the proper placement for error boundaries?&lt;/a&gt;| |237| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-component-stack-trace-from-error-boundary&quot;&gt;What is the benefit of component stack trace from error boundary?&lt;/a&gt;| |238| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-required-method-to-be-defined-for-a-class-component&quot;&gt;What is the required method to be defined for a class component?&lt;/a&gt;| |239| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-return-types-of-render-method&quot;&gt;What are the possible return types of render method?&lt;/a&gt;| |240| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-purpose-of-constructor&quot;&gt;What is the main purpose of constructor?&lt;/a&gt;| |241| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-mandatory-to-define-constructor-for-react-component&quot;&gt;Is it mandatory to define constructor for React component?&lt;/a&gt;| |242| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-default-props&quot;&gt;What are default props?&lt;/a&gt;| |243| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-not-call-setstate-in-componentwillunmount&quot;&gt;Why should not call setState in componentWillUnmount?&lt;/a&gt;| |244| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromerror&quot;&gt;What is the purpose of getDerivedStateFromError?&lt;/a&gt;| |245| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-methods-order-when-component-re-rendered&quot;&gt;What is the methods order when component re-rendered?&lt;/a&gt;| |246| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-methods-invoked-during-error-handling&quot;&gt;What are the methods invoked during error handling?&lt;/a&gt;| |247| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-displayname-class-property&quot;&gt;What is the purpose of displayName class property?&lt;/a&gt;| |248| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-browser-support-for-react-applications&quot;&gt;What is the browser support for react applications?&lt;/a&gt;| |249| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-unmountcomponentatnode-method&quot;&gt;What is the purpose of unmountComponentAtNode method?&lt;/a&gt;| |250| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-code-splitting&quot;&gt;What is code-splitting?&lt;/a&gt;| |251| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-strict-mode&quot;&gt;What is the benefit of strict mode?&lt;/a&gt;| |252| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-keyed-fragments&quot;&gt;What are Keyed Fragments?&lt;/a&gt;| |253| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-react-support-all-html-attributes&quot;&gt;Does React support all HTML attributes?&lt;/a&gt;| |254| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-with-hocs&quot;&gt;What are the limitations with HOCs?&lt;/a&gt;| |255| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-forwardrefs-in-devtools&quot;&gt;How to debug forwardRefs in DevTools?&lt;/a&gt;| |256| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-component-props-defaults-to-true&quot;&gt;When component props defaults to true?&lt;/a&gt;| |257| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-nextjs-and-major-features-of-it&quot;&gt;What is NextJS and major features of it?&lt;/a&gt;| |258| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-an-event-handler-to-a-component&quot;&gt;How do you pass an event handler to a component?&lt;/a&gt;| |259| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-arrow-functions-in-render-methods&quot;&gt;Is it good to use arrow functions in render methods?&lt;/a&gt;| |260| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-a-function-from-being-called-multiple-times&quot;&gt;How to prevent a function from being called multiple times?&lt;/a&gt;| |261| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-jsx-prevents-injection-attacks&quot;&gt;How JSX prevents Injection Attacks?&lt;/a&gt;| |262| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-update-rendered-elements&quot;&gt;How do you update rendered elements?&lt;/a&gt;| |263| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-props-are-read-only&quot;&gt;How do you say that props are read only?&lt;/a&gt;| |264| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-state-updates-are-merged&quot;&gt;How do you say that state updates are merged?&lt;/a&gt;| |265| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-arguments-to-an-event-handler&quot;&gt;How do you pass arguments to an event handler?&lt;/a&gt;| |266| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-component-from-rendering&quot;&gt;How to prevent component from rendering?&lt;/a&gt;| |267| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-conditions-to-safely-use-the-index-as-a-key&quot;&gt;What are the conditions to safely use the index as a key?&lt;/a&gt;| |268| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-keys-should-be-globally-unique&quot;&gt;Is it keys should be globally unique?&lt;/a&gt;| |269| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-popular-choice-for-form-handling&quot;&gt;What is the popular choice for form handling?&lt;/a&gt;| |270| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-formik-over-redux-form-library&quot;&gt;What are the advantages of formik over redux form library?&lt;/a&gt;| |271| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-required-to-use-inheritance&quot;&gt;Why do you not required to use inheritance?&lt;/a&gt;| |272| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-web-components-in-react-application&quot;&gt;Can I use web components in react application?&lt;/a&gt;| |273| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-dynamic-import&quot;&gt;What is dynamic import?&lt;/a&gt;| |274| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-loadable-components&quot;&gt;What are loadable components?&lt;/a&gt;| |275| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-suspense-component&quot;&gt;What is suspense component?&lt;/a&gt;| |276| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-route-based-code-splitting&quot;&gt;What is route based code splitting?&lt;/a&gt;| |277| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-on-how-to-use-context&quot;&gt;Give an example on How to use context?&lt;/a&gt;| |278| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-default-value-in-context&quot;&gt;What is the purpose of default value in context?&lt;/a&gt;| |279| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-use-contexttype&quot;&gt;How do you use contextType?&lt;/a&gt;| |280| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-consumer&quot;&gt;What is a consumer?&lt;/a&gt;| |281| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-solve-performance-corner-cases-while-using-context&quot;&gt;How do you solve performance corner cases while using context?&lt;/a&gt;| |282| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-forward-ref-in-hocs&quot;&gt;What is the purpose of forward ref in HOCs?&lt;/a&gt;| |283| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-ref-argument-available-for-all-functions-or-class-components&quot;&gt;Is it ref argument available for all functions or class components?&lt;/a&gt;| |284| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-need-additional-care-for-component-libraries-while-using-forward-refs&quot;&gt;Why do you need additional care for component libraries while using forward refs?&lt;/a&gt;| |285| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-react-class-components-without-es6&quot;&gt;How to create react class components without ES6?&lt;/a&gt;| |286| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-jsx&quot;&gt;Is it possible to use react without JSX?&lt;/a&gt;| |287| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-diffing-algorithm&quot;&gt;What is diffing algorithm?&lt;/a&gt;| |288| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-covered-by-diffing-algorithm&quot;&gt;What are the rules covered by diffing algorithm?&lt;/a&gt;| |289| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-do-you-need-to-use-refs&quot;&gt;When do you need to use refs?&lt;/a&gt;| |290| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-prop-must-be-named-as-render-for-render-props&quot;&gt;Is it prop must be named as render for render props?&lt;/a&gt;| |291| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-problems-of-using-render-props-with-pure-components&quot;&gt;What are the problems of using render props with pure components?&lt;/a&gt;| |292| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-create-hoc-using-render-props&quot;&gt;How do you create HOC using render props?&lt;/a&gt;| |293| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-windowing-technique&quot;&gt;What is windowing technique?&lt;/a&gt;| |294| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-print-falsy-values-in-jsx&quot;&gt;How do you print falsy values in JSX?&lt;/a&gt;| |295| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-typical-use-case-of-portals?&quot;&gt;What is the typical use case of portals?&lt;/a&gt;| |296| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-set-default-value-for-uncontrolled-component&quot;&gt;How do you set default value for uncontrolled component?&lt;/a&gt;| |297| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-your-favorite-react-stack&quot;&gt;What is your favorite React stack?&lt;/a&gt;| |298| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-real-dom-and-virtual-dom&quot;&gt;What is the difference between Real DOM and Virtual DOM?&lt;/a&gt;| |299| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-bootstrap-to-a-react-application&quot;&gt;How to add Bootstrap to a react application?&lt;/a&gt;| |300| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-list-down-top-websites-or-applications-using-react-as-front-end-framework&quot;&gt;Can you list down top websites or applications using react as front end framework?&lt;/a&gt;| |301| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-recommended-to-use-css-in-js-technique-in-react&quot;&gt;Is it recommended to use CSS In JS technique in React?&lt;/a&gt;| |302| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-rewrite-all-my-class-components-with-hooks&quot;&gt;Do I need to rewrite all my class components with hooks?&lt;/a&gt;| |303| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-fetch-data-with-react-hooks&quot;&gt;How to fetch data with React Hooks?&lt;/a&gt;| |304| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-hooks-cover-all-use-cases-for-classes&quot;&gt;Is Hooks cover all use cases for classes?&lt;/a&gt;| |305| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-stable-release-for-hooks-support&quot;&gt;What is the stable release for hooks support?&lt;/a&gt;| |306| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-we-use-array-destructuring-square-brackets-notation-in-usestate&quot;&gt;Why do we use array destructuring (square brackets notation) in useState?&lt;/a&gt;| |307| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-sources-used-for-introducing-hooks&quot;&gt;What are the sources used for introducing hooks?&lt;/a&gt;| |308| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-imperative-api-of-web-components&quot;&gt;How do you access imperative API of web components?&lt;/a&gt;| |309| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-formik&quot;&gt;What is formik?&lt;/a&gt;| |310| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-typical-middleware-choices-for-handling-asynchronous-calls-in-redux&quot;&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/a&gt;| |311| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-browsers-understand-jsx-code&quot;&gt;Do browsers understand JSX code?&lt;/a&gt;| |312| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#describe-about-data-flow-in-react&quot;&gt;Describe about data flow in react?&lt;/a&gt;| |313| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-scripts&quot;&gt;What is react scripts?&lt;/a&gt;| |314| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-create-react-app&quot;&gt;What are the features of create react app?&lt;/a&gt;| |315| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-rendertonodestream-method&quot;&gt;What is the purpose of renderToNodeStream method?&lt;/a&gt;| |316| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-mobx&quot;&gt;What is MobX?&lt;/a&gt;| |317| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-and-mobx&quot;&gt;What are the differences between Redux and MobX?&lt;/a&gt;| |318| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-learn-es6-before-learning-reactjs&quot;&gt;Should I learn ES6 before learning ReactJS?&lt;/a&gt;| |319| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-concurrent-rendering&quot;&gt;What is Concurrent Rendering?&lt;/a&gt;| |320| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-async-mode-and-concurrent-mode&quot;&gt;What is the difference between async mode and concurrent mode?&lt;/a&gt;| |321| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-javascript-urls-in-react169&quot;&gt;Can I use javascript urls in react16.9?&lt;/a&gt;| |322| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-eslint-plugin-for-hooks&quot;&gt;What is the purpose of eslint plugin for hooks?&lt;/a&gt;| |323| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-imperative-and-declarative-in-react&quot;&gt;What is the difference between Imperative and Declarative in React?&lt;/a&gt;| |324| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-using-typescript-with-reactjs&quot;&gt;What are the benefits of using typescript with reactjs?&lt;/a&gt;| |325| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-make-sure-that-user-remains-authenticated-on-page-refresh-while-using-context-api-state-management&quot;&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/a&gt;| |326| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-new-jsx-transform&quot;&gt;What are the benefits of new JSX transform?&lt;/a&gt;| |327| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-does-new-jsx-transform-different-from-old-transform&quot;&gt;How does new JSX transform different from old transform?&lt;/a&gt;| |328| &lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-get-redux-scaffolding-using-create-react-app&quot;&gt;How do you get redux scaffolding using create-react-app?&lt;/a&gt;|&lt;/p&gt; 
&lt;h2&gt;Core React&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;h3&gt;What is React?&lt;/h3&gt; &lt;p&gt;React is an &lt;strong&gt;open-source frontend JavaScript library&lt;/strong&gt; which is used for building user interfaces especially for single page applications. It is used for handling view layer for web and mobile apps. React was created by &lt;a href=&quot;https://github.com/jordwalke&quot;&gt;Jordan Walke&lt;/a&gt;, a software engineer working for Facebook. React was first deployed on Facebook&#39;s News Feed in 2011 and on Instagram in 2012.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the major features of React?&lt;/h3&gt; &lt;p&gt;The major features of React are:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It uses &lt;strong&gt;VirtualDOM&lt;/strong&gt; instead of RealDOM considering that RealDOM manipulations are expensive.&lt;/li&gt; 
   &lt;li&gt;Supports &lt;strong&gt;server-side rendering&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Follows &lt;strong&gt;Unidirectional&lt;/strong&gt; data flow or data binding.&lt;/li&gt; 
   &lt;li&gt;Uses &lt;strong&gt;reusable/composable&lt;/strong&gt; UI components to develop the view.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is JSX?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;JSX&lt;/em&gt; is a XML-like syntax extension to ECMAScript (the acronym stands for &lt;em&gt;JavaScript XML&lt;/em&gt;). Basically it just provides syntactic sugar for the &lt;code&gt;React.createElement()&lt;/code&gt; function, giving us expressiveness of JavaScript along with HTML like template syntax.&lt;/p&gt; &lt;p&gt;In the example below text inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is returned as JavaScript function to the render function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component {
  render() {
    return(
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{&#39;Welcome to React world!&#39;}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Element and Component?&lt;/h3&gt; &lt;p&gt;An &lt;em&gt;Element&lt;/em&gt; is a plain object describing what you want to appear on the screen in terms of the DOM nodes or other components. &lt;em&gt;Elements&lt;/em&gt; can contain other &lt;em&gt;Elements&lt;/em&gt; in their props. Creating a React element is cheap. Once an element is created, it is never mutated.&lt;/p&gt; &lt;p&gt;The object representation of React Element would be as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const element = React.createElement(
  &#39;div&#39;,
  {id: &#39;login-btn&#39;},
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;React.createElement()&lt;/code&gt; function returns an object:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: &#39;div&#39;,
  props: {
    children: &#39;Login&#39;,
    id: &#39;login-btn&#39;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And finally it renders to the DOM using &lt;code&gt;ReactDOM.render()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div id=&#39;login-btn&#39;&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas a &lt;strong&gt;component&lt;/strong&gt; can be declared in several different ways. It can be a class with a &lt;code&gt;render()&lt;/code&gt; method. Alternatively, in simple cases, it can be defined as a function. In either case, it takes props as an input, and returns a JSX tree as the output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt;
  &amp;lt;div id={&#39;login-btn&#39;} onClick={onLogin}&amp;gt;Login&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then JSX gets transpiled to a &lt;code&gt;React.createElement()&lt;/code&gt; function tree:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const Button = ({ onLogin }) =&amp;gt; React.createElement(
  &#39;div&#39;,
  { id: &#39;login-btn&#39;, onClick: onLogin },
  &#39;Login&#39;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How to create components in React?&lt;/h3&gt; &lt;p&gt;There are two possible ways to create a component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function Components:&lt;/strong&gt; This is the simplest way to create a component. Those are pure JavaScript functions that accept props object as first parameter and return React elements:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function Greeting({ message }) {
  return &amp;lt;h1&amp;gt;{`Hello, ${message}`}&amp;lt;/h1&amp;gt;

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Class Components:&lt;/strong&gt; You can also use ES6 class to define a component. The above function component can be written as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;h1&amp;gt;{`Hello, ${this.props.message}`}&amp;lt;/h1&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;When to use a Class Component over a Function Component?&lt;/h3&gt; &lt;p&gt;If the component needs &lt;em&gt;state or lifecycle methods&lt;/em&gt; then use class component otherwise use function component. &lt;em&gt;However, from React 16.8 with the addition of Hooks, you could use state , lifecycle methods and other features that were only available in class component right in your function component.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are Pure Components?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;&lt;code&gt;React.PureComponent&lt;/code&gt;&lt;/em&gt; is exactly the same as &lt;em&gt;&lt;code&gt;React.Component&lt;/code&gt;&lt;/em&gt; except that it handles the &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; method for you. When props or state changes, &lt;em&gt;PureComponent&lt;/em&gt; will do a shallow comparison on both props and state. &lt;em&gt;Component&lt;/em&gt; on the other hand won&#39;t compare current props and state to next out of the box. Thus, the component will re-render by default whenever &lt;code&gt;shouldComponentUpdate&lt;/code&gt; is called.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is state in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;State&lt;/em&gt; of a component is an object that holds some information that may change over the lifetime of the component. We should always try to make our state as simple as possible and minimize the number of stateful components.&lt;/p&gt; &lt;p&gt;Let&#39;s create an user component with message state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      message: &#39;Welcome to React world&#39;
    }
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;h1&amp;gt;{this.state.message}&amp;lt;/h1&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/state.jpg&quot; alt=&quot;state&quot;&gt;&lt;/p&gt; &lt;p&gt;State is similar to props, but it is private and fully controlled by the component. i.e, It is not accessible to any component other than the one that owns and sets it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are props in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Props&lt;/em&gt; are inputs to components. They are single values or objects containing a set of values that are passed to components on creation using a naming convention similar to HTML-tag attributes. They are data passed down from a parent component to a child component.&lt;/p&gt; &lt;p&gt;The primary purpose of props in React is to provide following component functionality:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Pass custom data to your component.&lt;/li&gt; 
   &lt;li&gt;Trigger state changes.&lt;/li&gt; 
   &lt;li&gt;Use via &lt;code&gt;this.props.reactProp&lt;/code&gt; inside component&#39;s &lt;code&gt;render()&lt;/code&gt; method.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, let us create an element with &lt;code&gt;reactProp&lt;/code&gt; property:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Element reactProp={&#39;1&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This &lt;code&gt;reactProp&lt;/code&gt; (or whatever you came up with) name then becomes a property attached to React&#39;s native props object which originally already exists on all components created using React library.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;props.reactProp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between state and props?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;props&lt;/em&gt; and &lt;em&gt;state&lt;/em&gt; are plain JavaScript objects. While both of them hold information that influences the output of render, they are different in their functionality with respect to component. Props get passed to the component similar to function parameters whereas state is managed within the component similar to variables declared within a function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should we not update the state directly?&lt;/h3&gt; &lt;p&gt;If you try to update state directly then it won&#39;t re-render the component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Wrong
this.state.message = &#39;Hello world&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead use &lt;code&gt;setState()&lt;/code&gt; method. It schedules an update to a component&#39;s state object. When state changes, the component responds by re-rendering.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Correct
this.setState({ message: &#39;Hello World&#39; })
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can directly assign to the state object either in &lt;em&gt;constructor&lt;/em&gt; or using latest javascript&#39;s class field declaration syntax.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;12&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of callback function as an argument of &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;The callback function is invoked when setState finished and the component gets rendered. Since &lt;code&gt;setState()&lt;/code&gt; is &lt;strong&gt;asynchronous&lt;/strong&gt; the callback function is used for any post action.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is recommended to use lifecycle method rather than this callback function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;setState({ name: &#39;John&#39; }, () =&amp;gt; console.log(&#39;The name has updated and component re-rendered&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;13&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between HTML and React event handling?&lt;/h3&gt; &lt;p&gt;Below are some of the main differences between HTML and React event handling,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, the event name should be in &lt;em&gt;lowercase&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onclick=&#39;activateLasers()&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React it follows &lt;em&gt;camelCase&lt;/em&gt; convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={activateLasers}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you can return &lt;code&gt;false&lt;/code&gt; to prevent default behavior:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&#39;#&#39; onclick=&#39;console.log(&quot;The link was clicked.&quot;); return false;&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React you must call &lt;code&gt;preventDefault()&lt;/code&gt; explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function handleClick(event) {
  event.preventDefault()
  console.log(&#39;The link was clicked.&#39;)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In HTML, you need to invoke the function by appending &lt;code&gt;()&lt;/code&gt; Whereas in react you should not append &lt;code&gt;()&lt;/code&gt; with the function name. (refer &quot;activateLasers&quot; function in the first point for example)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;14&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to bind methods or event handlers in JSX callbacks?&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to achieve this:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Binding in Constructor:&lt;/strong&gt; In JavaScript classes, the methods are not bound by default. The same thing applies for React event handlers defined as class methods. Normally we bind them in constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  constructor(props) {
    super(props)
    this.handleClick = this.handleClick.bind(this)
  }

  handleClick() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Public class fields syntax:&lt;/strong&gt; If you don&#39;t like to use bind approach then &lt;em&gt;public class fields syntax&lt;/em&gt; can be used to correctly bind callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;handleClick = () =&amp;gt; {
  console.log(&#39;this is:&#39;, this)
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arrow functions in callbacks:&lt;/strong&gt; You can use &lt;em&gt;arrow functions&lt;/em&gt; directly in the callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={(event) =&amp;gt; this.handleClick(event)}&amp;gt;
  {&#39;Click me&#39;}
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the callback is passed as prop to child components, those components might do an extra re-rendering. In those cases, it is preferred to go with &lt;code&gt;.bind()&lt;/code&gt; or &lt;em&gt;public class fields syntax&lt;/em&gt; approach considering performance.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;15&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass a parameter to an event handler or callback?&lt;/h3&gt; &lt;p&gt;You can use an &lt;em&gt;arrow function&lt;/em&gt; to wrap around an &lt;em&gt;event handler&lt;/em&gt; and pass parameters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={() =&amp;gt; this.handleClick(id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is an equivalent to calling &lt;code&gt;.bind&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick.bind(this, id)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Apart from these two approaches, you can also pass arguments to a function which is defined as arrow function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button onClick={this.handleClick(id)} /&amp;gt;
handleClick = (id) =&amp;gt; () =&amp;gt; {
    console.log(&quot;Hello, your ticket number is&quot;, id)
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;16&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are synthetic events in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt; is a cross-browser wrapper around the browser&#39;s native event. It&#39;s API is same as the browser&#39;s native event, including &lt;code&gt;stopPropagation()&lt;/code&gt; and &lt;code&gt;preventDefault()&lt;/code&gt;, except the events work identically across all browsers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;17&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are inline conditional expressions?&lt;/h3&gt; &lt;p&gt;You can use either &lt;em&gt;if statements&lt;/em&gt; or &lt;em&gt;ternary expressions&lt;/em&gt; which are available from JS to conditionally render expressions. Apart from these approaches, you can also embed any expressions in JSX by wrapping them in curly braces and then followed by JS logical operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;
{
    messages.length &amp;gt; 0 &amp;amp;&amp;amp; !isLogin?
      &amp;lt;h2&amp;gt;
          You have {messages.length} unread messages.
      &amp;lt;/h2&amp;gt;
      :
      &amp;lt;h2&amp;gt;
          You don&#39;t have unread messages.
      &amp;lt;/h2&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;18&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &quot;key&quot; prop and what is the benefit of using it in arrays of elements?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;key&lt;/code&gt; is a special string attribute you &lt;strong&gt;should&lt;/strong&gt; include when creating arrays of elements. &lt;em&gt;Key&lt;/em&gt; prop helps React identify which items have changed, are added, or are removed.&lt;/p&gt; &lt;p&gt;Most often we use ID from our data as &lt;em&gt;key&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo) =&amp;gt;
  &amp;lt;li key={todo.id}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When you don&#39;t have stable IDs for rendered items, you may use the item &lt;em&gt;index&lt;/em&gt; as a &lt;em&gt;key&lt;/em&gt; as a last resort:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const todoItems = todos.map((todo, index) =&amp;gt;
  &amp;lt;li key={index}&amp;gt;
    {todo.text}
  &amp;lt;/li&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using &lt;em&gt;indexes&lt;/em&gt; for &lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;not recommended&lt;/strong&gt; if the order of items may change. This can negatively impact performance and may cause issues with component state.&lt;/li&gt; 
   &lt;li&gt;If you extract list item as separate component then apply &lt;em&gt;keys&lt;/em&gt; on list component instead of &lt;code&gt;li&lt;/code&gt; tag.&lt;/li&gt; 
   &lt;li&gt;There will be a warning message in the console if the &lt;code&gt;key&lt;/code&gt; prop is not present on list items.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;19&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of refs?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;ref&lt;/em&gt; is used to return a reference to the element. They &lt;em&gt;should be avoided&lt;/em&gt; in most cases, however, they can be useful when you need a direct access to the DOM element or an instance of a component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;20&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create refs?&lt;/h3&gt; &lt;p&gt;There are two approaches&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;This is a recently added approach. &lt;em&gt;Refs&lt;/em&gt; are created using &lt;code&gt;React.createRef()&lt;/code&gt; method and attached to React elements via the &lt;code&gt;ref&lt;/code&gt; attribute. In order to use &lt;em&gt;refs&lt;/em&gt; throughout the component, just assign the &lt;em&gt;ref&lt;/em&gt; to the instance property within constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.myRef = React.createRef()
  }
  render() {
    return &amp;lt;div ref={this.myRef} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use ref callbacks approach regardless of React version. For example, the search bar component&#39;s input element accessed as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SearchBar extends Component {
   constructor(props) {
      super(props);
      this.txtSearch = null;
      this.state = { term: &#39;&#39; };
      this.setInputSearchRef = e =&amp;gt; {
         this.txtSearch = e;
      }
   }
   onInputChange(event) {
      this.setState({ term: this.txtSearch.value });
   }
   render() {
      return (
         &amp;lt;input
            value={this.state.term}
            onChange={this.onInputChange.bind(this)}
            ref={this.setInputSearchRef} /&amp;gt;
      );
   }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;You can also use &lt;em&gt;refs&lt;/em&gt; in function components using &lt;strong&gt;closures&lt;/strong&gt;. &lt;strong&gt;Note&lt;/strong&gt;: You can also use inline ref callbacks even though it is not a recommended approach&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;21&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are forward refs?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Ref forwarding&lt;/em&gt; is a feature that lets some components take a &lt;em&gt;ref&lt;/em&gt; they receive, and pass it further down to a child.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ButtonElement = React.forwardRef((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;CustomButton&quot;&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));

// Create ref to the DOM button:
const ref = React.createRef();
&amp;lt;ButtonElement ref={ref}&amp;gt;{&#39;Forward Ref&#39;}&amp;lt;/ButtonElement&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;22&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/h3&gt; &lt;p&gt;It is preferred to use &lt;em&gt;callback refs&lt;/em&gt; over &lt;code&gt;findDOMNode()&lt;/code&gt; API. Because &lt;code&gt;findDOMNode()&lt;/code&gt; prevents certain improvements in React in the future.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;legacy&lt;/strong&gt; approach of using &lt;code&gt;findDOMNode&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  componentDidMount() {
    findDOMNode(this).scrollIntoView()
  }

  render() {
    return &amp;lt;div /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The recommended approach is:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends Component {
  constructor(props){
    super(props);
    this.node = createRef();
  }
  componentDidMount() {
    this.node.current.scrollIntoView();
  }

  render() {
    return &amp;lt;div ref={this.node} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;23&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are String Refs legacy?&lt;/h3&gt; &lt;p&gt;If you worked with React before, you might be familiar with an older API where the &lt;code&gt;ref&lt;/code&gt; attribute is a string, like &lt;code&gt;ref={&#39;textInput&#39;}&lt;/code&gt;, and the DOM node is accessed as &lt;code&gt;this.refs.textInput&lt;/code&gt;. We advise against it because &lt;em&gt;string refs have below issues&lt;/em&gt;, and are considered legacy. String refs were &lt;strong&gt;removed in React v16&lt;/strong&gt;.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;They &lt;em&gt;force React to keep track of currently executing component&lt;/em&gt;. This is problematic because it makes react module stateful, and thus causes weird errors when react module is duplicated in the bundle.&lt;/li&gt; 
   &lt;li&gt;They are &lt;em&gt;not composable&lt;/em&gt; — if a library puts a ref on the passed child, the user can&#39;t put another ref on it. Callback refs are perfectly composable.&lt;/li&gt; 
   &lt;li&gt;They &lt;em&gt;don&#39;t work with static analysis&lt;/em&gt; like Flow. Flow can&#39;t guess the magic that framework does to make the string ref appear on &lt;code&gt;this.refs&lt;/code&gt;, as well as its type (which could be different). Callback refs are friendlier to static analysis.&lt;/li&gt; 
   &lt;li&gt;It doesn&#39;t work as most people would expect with the &quot;render callback&quot; pattern (e.g. 
    &lt;!-- raw HTML omitted --&gt;) &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends Component {
  renderRow = (index) =&amp;gt; {
    // This won&#39;t work. Ref will get attached to DataTable rather than MyComponent:
    return &amp;lt;input ref={&#39;input-&#39; + index} /&amp;gt;;

    // This would work though! Callback refs are awesome.
    return &amp;lt;input ref={input =&amp;gt; this[&#39;input-&#39; + index] = input} /&amp;gt;;
  }

  render() {
    return &amp;lt;DataTable data={this.props.data} renderRow={this.renderRow} /&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;24&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; (VDOM) is an in-memory representation of &lt;em&gt;Real DOM&lt;/em&gt;. The representation of a UI is kept in memory and synced with the &quot;real&quot; DOM. It&#39;s a step that happens between the render function being called and the displaying of elements on the screen. This entire process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;25&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Virtual DOM works?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; works in three simple steps.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Whenever any underlying data changes, the entire UI is re-rendered in Virtual DOM representation.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom1.png&quot; alt=&quot;vdom&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Then the difference between the previous DOM representation and the new one is calculated.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom2.png&quot; alt=&quot;vdom2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Once the calculations are done, the real DOM will be updated with only the things that have actually changed.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom3.png&quot; alt=&quot;vdom3&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;26&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Shadow DOM&lt;/em&gt; is a browser technology designed primarily for scoping variables and CSS in &lt;em&gt;web components&lt;/em&gt;. The &lt;em&gt;Virtual DOM&lt;/em&gt; is a concept implemented by libraries in JavaScript on top of browser APIs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;27&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Fiber?&lt;/h3&gt; &lt;p&gt;Fiber is the new &lt;em&gt;reconciliation&lt;/em&gt; engine or reimplementation of core algorithm in React v16. The goal of React Fiber is to increase its suitability for areas like animation, layout, gestures, ability to pause, abort, or reuse work and assign priority to different types of updates; and new concurrency primitives.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;28&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main goal of React Fiber?&lt;/h3&gt; &lt;p&gt;The goal of &lt;em&gt;React Fiber&lt;/em&gt; is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is &lt;strong&gt;incremental rendering&lt;/strong&gt;: the ability to split rendering work into chunks and spread it out over multiple frames.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;29&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are controlled components?&lt;/h3&gt; &lt;p&gt;A component that controls the input elements within the forms on subsequent user input is called &lt;strong&gt;Controlled Component&lt;/strong&gt;, i.e, every state mutation will have an associated handler function.&lt;/p&gt; &lt;p&gt;For example, to write all the names in uppercase letters, we use handleChange as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleChange(event) {
  this.setState({value: event.target.value.toUpperCase()})
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;30&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are uncontrolled components?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Uncontrolled Components&lt;/strong&gt; are the ones that store their own state internally, and you query the DOM using a ref to find its current value when you need it. This is a bit more like traditional HTML.&lt;/p&gt; &lt;p&gt;In the below UserProfile component, the &lt;code&gt;name&lt;/code&gt; input is accessed using ref.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserProfile extends React.Component {
  constructor(props) {
    super(props)
    this.handleSubmit = this.handleSubmit.bind(this)
    this.input = React.createRef()
  }

  handleSubmit(event) {
    alert(&#39;A name was submitted: &#39; + this.input.current.value)
    event.preventDefault()
  }

  render() {
    return (
      &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
        &amp;lt;label&amp;gt;
          {&#39;Name:&#39;}
          &amp;lt;input type=&quot;text&quot; ref={this.input} /&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
      &amp;lt;/form&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In most cases, it&#39;s recommend to use controlled components to implement forms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;31&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between createElement and cloneElement?&lt;/h3&gt; &lt;p&gt;JSX elements will be transpiled to &lt;code&gt;React.createElement()&lt;/code&gt; functions to create React elements which are going to be used for the object representation of UI. Whereas &lt;code&gt;cloneElement&lt;/code&gt; is used to clone an element and pass it new props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;32&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Lifting State Up in React?&lt;/h3&gt; &lt;p&gt;When several components need to share the same changing data then it is recommended to &lt;em&gt;lift the shared state up&lt;/em&gt; to their closest common ancestor. That means if two child components share the same data from its parent, then move the state to parent instead of maintaining local state in both of the child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;33&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different phases of component lifecycle?&lt;/h3&gt; &lt;p&gt;The component lifecycle has three distinct lifecycle phases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mounting:&lt;/strong&gt; The component is ready to mount in the browser DOM. This phase covers initialization from &lt;code&gt;constructor()&lt;/code&gt;, &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, and &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Updating:&lt;/strong&gt; In this phase, the component get updated in two ways, sending the new props and updating the state either from &lt;code&gt;setState()&lt;/code&gt; or &lt;code&gt;forceUpdate()&lt;/code&gt;. This phase covers &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;shouldComponentUpdate()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; and &lt;code&gt;componentDidUpdate()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unmounting:&lt;/strong&gt; In this last phase, the component is not needed and get unmounted from the browser DOM. This phase includes &lt;code&gt;componentWillUnmount()&lt;/code&gt; lifecycle method.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It&#39;s worth mentioning that React internally has a concept of phases when applying changes to the DOM. They are separated as follows&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Render&lt;/strong&gt; The component will render without any side-effects. This applies for Pure components and in this phase, React can pause, abort, or restart the render.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pre-commit&lt;/strong&gt; Before the component actually applies the changes to the DOM, there is a moment that allows React to read from the DOM through the &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; React works with the DOM and executes the final lifecycles respectively &lt;code&gt;componentDidMount()&lt;/code&gt; for mounting, &lt;code&gt;componentDidUpdate()&lt;/code&gt; for updating, and &lt;code&gt;componentWillUnmount()&lt;/code&gt; for unmounting.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;React 16.3+ Phases (or an &lt;a href=&quot;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot;&gt;interactive version&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases16.3.jpg&quot; alt=&quot;phases 16.3+&quot;&gt;&lt;/p&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases.png&quot; alt=&quot;phases 16.2&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;34&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods of React?&lt;/h3&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillMount:&lt;/strong&gt; Executed before rendering and is used for App level configuration in your root component.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and here all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillReceiveProps:&lt;/strong&gt; Executed when particular prop updates to trigger state transitions.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUpdate:&lt;/strong&gt; Executed before re-rendering the component when there are props &amp;amp; state changes confirmed by &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; which returns true.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount:&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;React 16.3+&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;getDerivedStateFromProps:&lt;/strong&gt; Invoked right before calling &lt;code&gt;render()&lt;/code&gt; and is invoked on &lt;em&gt;every&lt;/em&gt; render. This exists for rare use cases where you need derived state. Worth reading &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;if you need derived state&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and where all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;getSnapshotBeforeUpdate:&lt;/strong&gt; Executed right before rendered output is committed to the DOM. Any value returned by this will be passed into &lt;code&gt;componentDidUpdate()&lt;/code&gt;. This is useful to capture information from the DOM i.e. scroll position.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes. This will not fire if &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;componentWillUnmount&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;35&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Higher-Order Components?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;higher-order component&lt;/em&gt; (&lt;em&gt;HOC&lt;/em&gt;) is a function that takes a component and returns a new component. Basically, it&#39;s a pattern that is derived from React&#39;s compositional nature.&lt;/p&gt; &lt;p&gt;We call them &lt;strong&gt;pure components&lt;/strong&gt; because they can accept any dynamically provided child component but they won&#39;t modify or copy any behavior from their input components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const EnhancedComponent = higherOrderComponent(WrappedComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;HOC can be used for many use cases:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Code reuse, logic and bootstrap abstraction.&lt;/li&gt; 
   &lt;li&gt;Render hijacking.&lt;/li&gt; 
   &lt;li&gt;State abstraction and manipulation.&lt;/li&gt; 
   &lt;li&gt;Props manipulation.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;36&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create props proxy for HOC component?&lt;/h3&gt; &lt;p&gt;You can add/edit props passed to the component using &lt;em&gt;props proxy&lt;/em&gt; pattern like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HOC(WrappedComponent) {
  return class Test extends Component {
    render() {
      const newProps = {
        title: &#39;New Header&#39;,
        footer: false,
        showFeatureX: false,
        showFeatureY: true
      }

      return &amp;lt;WrappedComponent {...this.props} {...newProps} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;37&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is context?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Context&lt;/em&gt; provides a way to pass data through the component tree without having to pass props down manually at every level.&lt;/p&gt; &lt;p&gt;For example, authenticated user, locale preference, UI theme need to be accessed in the application by many components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const {Provider, Consumer} = React.createContext(defaultValue)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;38&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is children prop?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Children&lt;/em&gt; is a prop (&lt;code&gt;this.props.children&lt;/code&gt;) that allow you to pass components as data to other components, just like any other prop you use. Component tree put between component&#39;s opening and closing tag will be passed to that component as &lt;code&gt;children&lt;/code&gt; prop.&lt;/p&gt; &lt;p&gt;There are a number of methods available in the React API to work with this prop. These include &lt;code&gt;React.Children.map&lt;/code&gt;, &lt;code&gt;React.Children.forEach&lt;/code&gt;, &lt;code&gt;React.Children.count&lt;/code&gt;, &lt;code&gt;React.Children.only&lt;/code&gt;, &lt;code&gt;React.Children.toArray&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A simple usage of children prop looks as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyDiv = React.createClass({
  render: function() {
    return &amp;lt;div&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;
  }
})

ReactDOM.render(
  &amp;lt;MyDiv&amp;gt;
    &amp;lt;span&amp;gt;{&#39;Hello&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;{&#39;World&#39;}&amp;lt;/span&amp;gt;
  &amp;lt;/MyDiv&amp;gt;,
  node
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;39&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to write comments in React?&lt;/h3&gt; &lt;p&gt;The comments in React/JSX are similar to JavaScript Multiline comments but are wrapped in curly braces.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Single-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Single-line comments(In vanilla JavaScript, the single-line comments are represented by double slash(//)) */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Multi-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div&amp;gt;
  {/* Multi-line comments for more than
   one line */}
  {`Welcome ${user}, let&#39;s play React`}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;40&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of using super constructor with props argument?&lt;/h3&gt; &lt;p&gt;A child class constructor cannot make use of &lt;code&gt;this&lt;/code&gt; reference until &lt;code&gt;super()&lt;/code&gt; method has been called. The same applies for ES6 sub-classes as well. The main reason of passing props parameter to &lt;code&gt;super()&lt;/code&gt; call is to access &lt;code&gt;this.props&lt;/code&gt; in your child constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Not passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()

    console.log(this.props) // prints undefined

    // but props parameter is still available
    console.log(props) // prints { name: &#39;John&#39;, age: 42 }
  }

  render() {
    // no difference outside constructor
    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code snippets reveals that &lt;code&gt;this.props&lt;/code&gt; is different only within the constructor. It would be the same outside the constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;41&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reconciliation?&lt;/h3&gt; &lt;p&gt;When a component&#39;s props or state change, React decides whether an actual DOM update is necessary by comparing the newly returned element with the previously rendered one. When they are not equal, React will update the DOM. This process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;42&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set state with a dynamic key name?&lt;/h3&gt; &lt;p&gt;If you are using ES6 or the Babel transpiler to transform your JSX code then you can accomplish this with &lt;em&gt;computed property names&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;handleInputChange(event) {
  this.setState({ [event.target.id]: event.target.value })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;43&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What would be the common mistake of function being called every time the component renders?&lt;/h3&gt; &lt;p&gt;You need to make sure that function is not being called while passing the function as a parameter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Wrong: handleClick is called instead of passed as a reference!
  return &amp;lt;button onClick={this.handleClick()}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead, pass the function itself without parenthesis:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  // Correct: handleClick is passed as a reference!
  return &amp;lt;button onClick={this.handleClick}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;44&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is lazy function supports named exports?&lt;/h3&gt; No, currently &lt;code&gt;React.lazy&lt;/code&gt; function supports default exports only. If you would like to import modules which are named exports, you can create an intermediate module that reexports it as the default. It also ensures that tree shaking keeps working and don’t pull unused components. Let&#39;s take a component file which exports multiple named components, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// MoreComponents.js
export const SomeComponent = /* ... */;
export const UnusedComponent = /* ... */;
&lt;/code&gt;&lt;/pre&gt; and reexport &lt;code&gt;MoreComponents.js&lt;/code&gt; components in an intermediate file &lt;code&gt;IntermediateComponent.js&lt;/code&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// IntermediateComponent.js
export { SomeComponent as default } from &quot;./MoreComponents.js&quot;;
&lt;/code&gt;&lt;/pre&gt; Now you can import the module using lazy function as below, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { lazy } from &#39;react&#39;;
const SomeComponent = lazy(() =&amp;gt; import(&quot;./IntermediateComponent.js&quot;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;45&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React uses &lt;code&gt;className&lt;/code&gt; over &lt;code&gt;class&lt;/code&gt; attribute?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;class&lt;/code&gt; is a keyword in JavaScript, and JSX is an extension of JavaScript. That&#39;s the principal reason why React uses &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt;. Pass a string as the &lt;code&gt;className&lt;/code&gt; prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;span className={&#39;menu navigation-menu&#39;}&amp;gt;{&#39;Menu&#39;}&amp;lt;/span&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;46&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are fragments?&lt;/h3&gt; &lt;p&gt;It&#39;s common pattern in React which is used for a component to return multiple elements. &lt;em&gt;Fragments&lt;/em&gt; let you group a list of children without adding extra nodes to the DOM.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;React.Fragment&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/React.Fragment&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is also a &lt;em&gt;shorter syntax&lt;/em&gt;, but it&#39;s not supported in many tools:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;ChildA /&amp;gt;
      &amp;lt;ChildB /&amp;gt;
      &amp;lt;ChildC /&amp;gt;
    &amp;lt;/&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;47&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why fragments are better than container divs?&lt;/h3&gt; &lt;p&gt;Below are the list of reasons,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Fragments are a bit faster and use less memory by not creating an extra DOM node. This only has a real benefit on very large and deep trees.&lt;/li&gt; 
   &lt;li&gt;Some CSS mechanisms like &lt;em&gt;Flexbox&lt;/em&gt; and &lt;em&gt;CSS Grid&lt;/em&gt; have a special parent-child relationships, and adding divs in the middle makes it hard to keep the desired layout.&lt;/li&gt; 
   &lt;li&gt;The DOM Inspector is less cluttered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;48&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are portals in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Portal&lt;/em&gt; is a recommended way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.createPortal(child, container)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first argument is any render-able React child, such as an element, string, or fragment. The second argument is a DOM element.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;49&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateless components?&lt;/h3&gt; &lt;p&gt;If the behaviour is independent of its state then it can be a stateless component. You can use either a function or a class for creating stateless components. But unless you need to use a lifecycle hook in your components, you should go for function components. There are a lot of benefits if you decide to use function components here; they are easy to write, understand, and test, a little faster, and you can avoid the &lt;code&gt;this&lt;/code&gt; keyword altogether.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;50&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are stateful components?&lt;/h3&gt; &lt;p&gt;If the behaviour of a component is dependent on the &lt;em&gt;state&lt;/em&gt; of the component then it can be termed as stateful component. These &lt;em&gt;stateful components&lt;/em&gt; are always &lt;em&gt;class components&lt;/em&gt; and have a state that gets initialized in the &lt;code&gt;constructor&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  constructor(props) {
    super(props)
    this.state = { count: 0 }
  }

  render() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;React 16.8 Update:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Hooks let you use state and other React features without writing classes.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; import React, {useState} from &#39;react&#39;;

 const App = (props) =&amp;gt; {
   const [count, setCount] = useState(0);

   return (
     // JSX
   )
 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;51&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to apply validation on props in React?&lt;/h3&gt; &lt;p&gt;When the application is running in &lt;em&gt;development mode&lt;/em&gt;, React will automatically check all props that we set on components to make sure they have &lt;em&gt;correct type&lt;/em&gt;. If the type is incorrect, React will generate warning messages in the console. It&#39;s disabled in &lt;em&gt;production mode&lt;/em&gt; due to performance impact. The mandatory props are defined with &lt;code&gt;isRequired&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The set of predefined prop types:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.func&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.node&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.element&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.bool&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;PropTypes.any&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;We can define &lt;code&gt;propTypes&lt;/code&gt; for &lt;code&gt;User&lt;/code&gt; component as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

class User extends React.Component {
  static propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }

  render() {
    return (
      &amp;lt;&amp;gt;
        &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
        &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
      &amp;lt;/&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In React v15.5 &lt;em&gt;PropTypes&lt;/em&gt; were moved from &lt;code&gt;React.PropTypes&lt;/code&gt; to &lt;code&gt;prop-types&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import PropTypes from &#39;prop-types&#39;

function User() {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;
    &amp;lt;/&amp;gt;
  )
}

User.propTypes = {
    name: PropTypes.string.isRequired,
    age: PropTypes.number.isRequired
  }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;52&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React?&lt;/h3&gt; &lt;p&gt;Below are the list of main advantages of React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Increases the application&#39;s performance with &lt;em&gt;Virtual DOM&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;JSX makes code easy to read and write.&lt;/li&gt; 
   &lt;li&gt;It renders both on client and server side (&lt;em&gt;SSR&lt;/em&gt;).&lt;/li&gt; 
   &lt;li&gt;Easy to integrate with frameworks (Angular, Backbone) since it is only a view library.&lt;/li&gt; 
   &lt;li&gt;Easy to write unit and integration tests with tools such as Jest.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;53&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations of React?&lt;/h3&gt; &lt;p&gt;Apart from the advantages, there are few limitations of React too,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React is just a view library, not a full framework.&lt;/li&gt; 
   &lt;li&gt;There is a learning curve for beginners who are new to web development.&lt;/li&gt; 
   &lt;li&gt;Integrating React into a traditional MVC framework requires some additional configuration.&lt;/li&gt; 
   &lt;li&gt;The code complexity increases with inline templating and JSX.&lt;/li&gt; 
   &lt;li&gt;Too many smaller components leading to over engineering or boilerplate.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;54&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are error boundaries in React v16?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Error boundaries&lt;/em&gt; are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.&lt;/p&gt; &lt;p&gt;A class component becomes an error boundary if it defines a new lifecycle method called &lt;code&gt;componentDidCatch(error, info)&lt;/code&gt; or &lt;code&gt;static getDerivedStateFromError() &lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props)
    this.state = { hasError: false }
  }

  componentDidCatch(error, info) {
    // You can also log the error to an error reporting service
    logErrorToMyService(error, info)
  }

  static getDerivedStateFromError(error) {
     // Update state so the next render will show the fallback UI.
     return { hasError: true };
   }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;{&#39;Something went wrong.&#39;}&amp;lt;/h1&amp;gt;
    }
    return this.props.children
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that use it as a regular component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyWidget /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;55&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How error boundaries handled in React v15?&lt;/h3&gt; &lt;p&gt;React v15 provided very basic support for &lt;em&gt;error boundaries&lt;/em&gt; using &lt;code&gt;unstable_handleError&lt;/code&gt; method. It has been renamed to &lt;code&gt;componentDidCatch&lt;/code&gt; in React v16.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;56&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the recommended ways for static type checking?&lt;/h3&gt; &lt;p&gt;Normally we use &lt;em&gt;PropTypes library&lt;/em&gt; (&lt;code&gt;React.PropTypes&lt;/code&gt; moved to a &lt;code&gt;prop-types&lt;/code&gt; package since React v15.5) for &lt;em&gt;type checking&lt;/em&gt; in the React applications. For large code bases, it is recommended to use &lt;em&gt;static type checkers&lt;/em&gt; such as Flow or TypeScript, that perform type checking at compile time and provide auto-completion features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;57&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of &lt;code&gt;react-dom&lt;/code&gt; package?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-dom&lt;/code&gt; package provides &lt;em&gt;DOM-specific methods&lt;/em&gt; that can be used at the top level of your app. Most of the components are not required to use this module. Some of the methods of this package are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;hydrate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;unmountComponentAtNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;findDOMNode()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;createPortal()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;58&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of render method of &lt;code&gt;react-dom&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;This method is used to render a React element into the DOM in the supplied container and return a reference to the component. If the React element was previously rendered into container, it will perform an update on it and only mutate the DOM as necessary to reflect the latest changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ReactDOM.render(element, container[, callback])
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the optional callback is provided, it will be executed after the component is rendered or updated.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;59&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is ReactDOMServer?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;ReactDOMServer&lt;/code&gt; object enables you to render components to static markup (typically used on node server). This object is mainly used for &lt;em&gt;server-side rendering&lt;/em&gt; (SSR). The following methods can be used in both the server and browser environments:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;renderToString()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;renderToStaticMarkup()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;For example, you generally run a Node-based web server like Express, Hapi, or Koa, and you call &lt;code&gt;renderToString&lt;/code&gt; to render your root component to a string, which you then send as response.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// using Express
import { renderToString } from &#39;react-dom/server&#39;
import MyPage from &#39;./MyPage&#39;

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
  res.write(&#39;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&#39;)
  res.write(&#39;&amp;lt;div id=&quot;content&quot;&amp;gt;&#39;)
  res.write(renderToString(&amp;lt;MyPage/&amp;gt;))
  res.write(&#39;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;)
  res.end()
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;60&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use innerHTML in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute is React&#39;s replacement for using &lt;code&gt;innerHTML&lt;/code&gt; in the browser DOM. Just like &lt;code&gt;innerHTML&lt;/code&gt;, it is risky to use this attribute considering cross-site scripting (XSS) attacks. You just need to pass a &lt;code&gt;__html&lt;/code&gt; object as key and HTML text as value.&lt;/p&gt; &lt;p&gt;In this example MyComponent uses &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute for setting HTML markup:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function createMarkup() {
  return { __html: &#39;First &amp;amp;middot; Second&#39; }
}

function MyComponent() {
  return &amp;lt;div dangerouslySetInnerHTML={createMarkup()} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;61&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use styles in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;style&lt;/code&gt; attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM style JavaScript property, is more efficient, and prevents XSS security holes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const divStyle = {
  color: &#39;blue&#39;,
  backgroundImage: &#39;url(&#39; + imgUrl + &#39;)&#39;
};

function HelloWorldComponent() {
  return &amp;lt;div style={divStyle}&amp;gt;Hello World!&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Style keys are camelCased in order to be consistent with accessing the properties on DOM nodes in JavaScript (e.g. &lt;code&gt;node.style.backgroundImage&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;62&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How events are different in React?&lt;/h3&gt; &lt;p&gt;Handling events in React elements has some syntactic differences:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React event handlers are named using camelCase, rather than lowercase.&lt;/li&gt; 
   &lt;li&gt;With JSX you pass a function as the event handler, rather than a string.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;63&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use &lt;code&gt;setState()&lt;/code&gt; in constructor?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt;, then apart from assigning to the object state React also re-renders the component and all its children. You would get error like this: &lt;em&gt;Can only update a mounted or mounting component.&lt;/em&gt; So we need to use &lt;code&gt;this.state&lt;/code&gt; to initialize variables inside constructor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;64&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the impact of indexes as keys?&lt;/h3&gt; &lt;p&gt;Keys should be stable, predictable, and unique so that React can keep track of elements.&lt;/p&gt; &lt;p&gt;In the below code snippet each element&#39;s key will be based on ordering, rather than tied to the data that is being represented. This limits the optimizations that React can do.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo, index) =&amp;gt;
  &amp;lt;Todo
    {...todo}
    key={index}
  /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use element data for unique key, assuming todo.id is unique to this list and stable, React would be able to reorder elements without needing to reevaluate them as much.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;{todos.map((todo) =&amp;gt;
  &amp;lt;Todo {...todo}
    key={todo.id} /&amp;gt;
)}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;65&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillMount()&lt;/code&gt; method?&lt;/h3&gt; &lt;p&gt;Yes, it is safe to use &lt;code&gt;setState()&lt;/code&gt; inside &lt;code&gt;componentWillMount()&lt;/code&gt; method. But at the same it is recommended to avoid async initialization in &lt;code&gt;componentWillMount()&lt;/code&gt; lifecycle method. &lt;code&gt;componentWillMount()&lt;/code&gt; is invoked immediately before mounting occurs. It is called before &lt;code&gt;render()&lt;/code&gt;, therefore setting state in this method will not trigger a re-render. Avoid introducing any side-effects or subscriptions in this method. We need to make sure async calls for component initialization happened in &lt;code&gt;componentDidMount()&lt;/code&gt; instead of &lt;code&gt;componentWillMount()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;componentDidMount() {
  axios.get(`api/todos`)
    .then((result) =&amp;gt; {
      this.setState({
        messages: [...result.data]
      })
    })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;66&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What will happen if you use props in initial state?&lt;/h3&gt; &lt;p&gt;If the props on the component are changed without the component being refreshed, the new prop value will never be displayed because the constructor function will never update the current state of the component. The initialization of state from props only runs when the component is first created.&lt;/p&gt; &lt;p&gt;The below component won&#39;t display the updated input value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      records: [],
      inputValue: this.props.inputValue
    };
  }

  render() {
    return &amp;lt;div&amp;gt;{this.state.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using props inside render method will update the value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)

    this.state = {
      record: []
    }
  }

  render() {
    return &amp;lt;div&amp;gt;{this.props.inputValue}&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;67&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you conditionally render components?&lt;/h3&gt; &lt;p&gt;In some cases you want to render different components depending on some state. JSX does not render &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so you can use conditional &lt;em&gt;short-circuiting&lt;/em&gt; to render a given part of your component only if a certain condition is true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address &amp;amp;&amp;amp;
      &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need an &lt;code&gt;if-else&lt;/code&gt; condition then use &lt;em&gt;ternary operator&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = ({ name, address }) =&amp;gt; (
  &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;
    {address
      ? &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;
      : &amp;lt;p&amp;gt;{&#39;Address is not available&#39;}&amp;lt;/p&amp;gt;
    }
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;68&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to be careful when spreading props on DOM elements?&lt;/h3&gt; &lt;p&gt;When we &lt;em&gt;spread props&lt;/em&gt; we run into the risk of adding unknown HTML attributes, which is a bad practice. Instead we can use prop destructuring with &lt;code&gt;...rest&lt;/code&gt; operator, so it will add only required props.&lt;/p&gt; &lt;p&gt;For example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ComponentA = () =&amp;gt;
  &amp;lt;ComponentB isDisplay={true} className={&#39;componentStyle&#39;} /&amp;gt;

const ComponentB = ({ isDisplay, ...domProps }) =&amp;gt;
  &amp;lt;div {...domProps}&amp;gt;{&#39;ComponentB&#39;}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;69&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you use decorators in React?&lt;/h3&gt; &lt;p&gt;You can &lt;em&gt;decorate&lt;/em&gt; your &lt;em&gt;class&lt;/em&gt; components, which is the same as passing the component into a function. &lt;strong&gt;Decorators&lt;/strong&gt; are flexible and readable way of modifying component functionality.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;@setTitle(&#39;Profile&#39;)
class Profile extends React.Component {
    //....
}

/*
  title is a string that will be set as a document title
  WrappedComponent is what our decorator will receive when
  put directly above a component class as seen in the example above
*/
const setTitle = (title) =&amp;gt; (WrappedComponent) =&amp;gt; {
  return class extends React.Component {
    componentDidMount() {
      document.title = title
    }

    render() {
      return &amp;lt;WrappedComponent {...this.props} /&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Decorators are a feature that didn&#39;t make it into ES7, but are currently a &lt;em&gt;stage 2 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;70&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you memoize a component?&lt;/h3&gt; &lt;p&gt;There are memoize libraries available which can be used on function components.&lt;/p&gt; &lt;p&gt;For example &lt;code&gt;moize&lt;/code&gt; library can memoize the component in another component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import moize from &#39;moize&#39;
import Component from &#39;./components/Component&#39; // this module exports a non-memoized component

const MemoizedFoo = moize.react(Component)

const Consumer = () =&amp;gt; {
  &amp;lt;div&amp;gt;
    {&#39;I will memoize the following entry:&#39;}
    &amp;lt;MemoizedFoo/&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Since React v16.6.0, we have a &lt;code&gt;React.memo&lt;/code&gt;. It provides a higher order component which memoizes component unless the props change. To use it, simply wrap the component using React.memo before you use it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const MemoComponent = React.memo(function MemoComponent(props) {
    /* render using props */
  });
  OR
  export default React.memo(MyFunctionComponent);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;71&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How you implement Server Side Rendering or SSR?&lt;/h3&gt; &lt;p&gt;React is already equipped to handle rendering on Node servers. A special version of the DOM renderer is available, which follows the same pattern as on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ReactDOMServer from &#39;react-dom/server&#39;
import App from &#39;./App&#39;

ReactDOMServer.renderToString(&amp;lt;App /&amp;gt;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This method will output the regular HTML as a string, which can be then placed inside a page body as part of the server response. On the client side, React detects the pre-rendered content and seamlessly picks up where it left off.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;72&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to enable production mode in React?&lt;/h3&gt; &lt;p&gt;You should use Webpack&#39;s &lt;code&gt;DefinePlugin&lt;/code&gt; method to set &lt;code&gt;NODE_ENV&lt;/code&gt; to &lt;code&gt;production&lt;/code&gt;, by which it strip out things like propType validation and extra warnings. Apart from this, if you minify the code, for example, Uglify&#39;s dead-code elimination to strip out development only code and comments, it will drastically reduce the size of your bundle.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;73&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is CRA and its benefits?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;create-react-app&lt;/code&gt; CLI tool allows you to quickly create &amp;amp; run React applications with no configuration step.&lt;/p&gt; &lt;p&gt;Let&#39;s create Todo App using &lt;em&gt;CRA&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;# Installation
$ npm install -g create-react-app

# Create new project
$ create-react-app todo-app
$ cd todo-app

# Build, test and run
$ npm run build
$ npm run test
$ npm start
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It includes everything we need to build a React app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS, so you don’t need -webkit- or other prefixes.&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; 
   &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;74&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the lifecycle methods order in mounting?&lt;/h3&gt; &lt;p&gt;The lifecycle methods are called in the following order when an instance of a component is being created and inserted into the DOM.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;static getDerivedStateFromProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;75&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/h3&gt; &lt;p&gt;The following lifecycle methods going to be unsafe coding practices and will be more problematic with async rendering.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;Starting with React v16.3 these methods are aliased with &lt;code&gt;UNSAFE_&lt;/code&gt; prefix, and the unprefixed version will be removed in React v17.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;76&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new static &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method is invoked after a component is instantiated as well as before it is re-rendered. It can return an object to update state, or &lt;code&gt;null&lt;/code&gt; to indicate that the new props do not require any state updates.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static getDerivedStateFromProps(props, state) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillReceiveProps()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;77&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method is called right before DOM updates. The return value from this method will be passed as the third parameter to &lt;code&gt;componentDidUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  getSnapshotBeforeUpdate(prevProps, prevState) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;78&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do Hooks replace render props and higher order components?&lt;/h3&gt; &lt;p&gt;Both render props and higher-order components render only a single child but in most of the cases Hooks are a simpler way to serve this by reducing nesting in your tree.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;79&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended way for naming components?&lt;/h3&gt; &lt;p&gt;It is recommended to name the component by reference instead of using &lt;code&gt;displayName&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;displayName&lt;/code&gt; for naming component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default React.createClass({
  displayName: &#39;TodoApp&#39;,
  // ...
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;strong&gt;recommended&lt;/strong&gt; approach:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export default class TodoApp extends React.Component {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;80&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended ordering of methods in component class?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt; ordering of methods from &lt;em&gt;mounting&lt;/em&gt; to &lt;em&gt;render stage&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;static&lt;/code&gt; methods&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;getChildContext()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentDidUpdate()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;componentWillUnmount()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;click handlers or event handlers like &lt;code&gt;onClickSubmit()&lt;/code&gt; or &lt;code&gt;onChangeDescription()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;getter methods for render like &lt;code&gt;getSelectReason()&lt;/code&gt; or &lt;code&gt;getFooterContent()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;optional render methods like &lt;code&gt;renderNavigation()&lt;/code&gt; or &lt;code&gt;renderProfilePicture()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;81&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a switching component?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;switching component&lt;/em&gt; is a component that renders one of many components. We need to use object to map prop values to components.&lt;/p&gt; &lt;p&gt;For example, a switching component to display different pages based on &lt;code&gt;page&lt;/code&gt; prop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import HomePage from &#39;./HomePage&#39;
import AboutPage from &#39;./AboutPage&#39;
import ServicesPage from &#39;./ServicesPage&#39;
import ContactPage from &#39;./ContactPage&#39;

const PAGES = {
  home: HomePage,
  about: AboutPage,
  services: ServicesPage,
  contact: ContactPage
}

const Page = (props) =&amp;gt; {
  const Handler = PAGES[props.page] || ContactPage

  return &amp;lt;Handler {...props} /&amp;gt;
}

// The keys of the PAGES object can be used in the prop types to catch dev-time errors.
Page.propTypes = {
  page: PropTypes.oneOf(Object.keys(PAGES)).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;82&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why we need to pass a function to setState()?&lt;/h3&gt; &lt;p&gt;The reason behind for this is that &lt;code&gt;setState()&lt;/code&gt; is an asynchronous operation. React batches state changes for performance reasons, so the state may not change immediately after &lt;code&gt;setState()&lt;/code&gt; is called. That means you should not rely on the current state when calling &lt;code&gt;setState()&lt;/code&gt; since you can&#39;t be sure what that state will be. The solution is to pass a function to &lt;code&gt;setState()&lt;/code&gt;, with the previous state as an argument. By doing this you can avoid issues with the user getting the old state value on access due to the asynchronous nature of &lt;code&gt;setState()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Let&#39;s say the initial count value is zero. After three consecutive increment operations, the value is going to be incremented only by one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// assuming this.state.count === 0
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
this.setState({ count: this.state.count + 1 })
// this.state.count === 1, not 3
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we pass a function to &lt;code&gt;setState()&lt;/code&gt;, the count gets incremented correctly.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState((prevState, props) =&amp;gt; ({
  count: prevState.count + props.increment
}))
// this.state.count === 3 as expected
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;h3&gt;Why function is preferred over object for &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;React may batch multiple &lt;code&gt;setState()&lt;/code&gt; calls into a single update for performance. Because &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; may be updated asynchronously, you should not rely on their values for calculating the next state.&lt;/p&gt; &lt;p&gt;This counter example will fail to update as expected:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Wrong
this.setState({
  counter: this.state.counter + this.props.increment,
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The preferred approach is to call &lt;code&gt;setState()&lt;/code&gt; with function rather than object. That function will receive the previous state as the first argument, and the props at the time the update is applied as the second argument.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Correct
this.setState((prevState, props) =&amp;gt; ({
  counter: prevState.counter + props.increment
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;83&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is strict mode in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a useful component for highlighting potential problems in an application. Just like &lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt; does not render any extra DOM elements. It activates additional checks and warnings for its descendants. These checks apply for &lt;em&gt;development mode&lt;/em&gt; only.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;

function ExampleApplication() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Header /&amp;gt;
      &amp;lt;React.StrictMode&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;ComponentOne /&amp;gt;
          &amp;lt;ComponentTwo /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/React.StrictMode&amp;gt;
      &amp;lt;Footer /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, the &lt;em&gt;strict mode&lt;/em&gt; checks apply to &lt;code&gt;&amp;lt;ComponentOne&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ComponentTwo&amp;gt;&lt;/code&gt; components only.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;84&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are React Mixins?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Mixins&lt;/em&gt; are a way to totally separate components to have a common functionality. Mixins &lt;strong&gt;should not be used&lt;/strong&gt; and can be replaced with &lt;em&gt;higher-order components&lt;/em&gt; or &lt;em&gt;decorators&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;One of the most commonly used mixins is &lt;code&gt;PureRenderMixin&lt;/code&gt;. You might be using it in some components to prevent unnecessary re-renders when the props and state are shallowly equal to the previous props and state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const PureRenderMixin = require(&#39;react-addons-pure-render-mixin&#39;)

const Button = React.createClass({
  mixins: [PureRenderMixin],
  // ...
})
&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- raw HTML omitted --&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;85&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is &lt;code&gt;isMounted()&lt;/code&gt; an anti-pattern and what is the proper solution?&lt;/h3&gt; &lt;p&gt;The primary use case for &lt;code&gt;isMounted()&lt;/code&gt; is to avoid calling &lt;code&gt;setState()&lt;/code&gt; after a component has been unmounted, because it will emit a warning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (this.isMounted()) {
  this.setState({...})
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Checking &lt;code&gt;isMounted()&lt;/code&gt; before calling &lt;code&gt;setState()&lt;/code&gt; does eliminate the warning, but it also defeats the purpose of the warning. Using &lt;code&gt;isMounted()&lt;/code&gt; is a code smell because the only reason you would check is because you think you might be holding a reference after the component has unmounted.&lt;/p&gt; &lt;p&gt;An optimal solution would be to find places where &lt;code&gt;setState()&lt;/code&gt; might be called after a component has unmounted, and fix them. Such situations most commonly occur due to callbacks, when a component is waiting for some data and gets unmounted before the data arrives. Ideally, any callbacks should be canceled in &lt;code&gt;componentWillUnmount()&lt;/code&gt;, prior to unmounting.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;86&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the Pointer Events supported in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Pointer Events&lt;/em&gt; provide a unified way of handling all input events. In the old days we had a mouse and respective event listeners to handle them but nowadays we have many devices which don&#39;t correlate to having a mouse, like phones with touch surface or pens. We need to remember that these events will only work in browsers that support the &lt;em&gt;Pointer Events&lt;/em&gt; specification.&lt;/p&gt; &lt;p&gt;The following event types are now available in &lt;em&gt;React DOM&lt;/em&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerUp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerCancel&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onGotPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onLostPointerCapture&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerEnter&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerLeave&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOver&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;onPointerOut&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;87&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should component names start with capital letter?&lt;/h3&gt; &lt;p&gt;If you are rendering your component using JSX, the name of that component has to begin with a capital letter otherwise React will throw an error as unrecognized tag. This convention is because only HTML elements and SVG tags can begin with a lowercase letter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class SomeComponent extends Component {
 // Code goes here
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can define component class which name starts with lowercase letter, but when it&#39;s imported it should have capital letter. Here lowercase is fine:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class myComponent extends Component {
  render() {
    return &amp;lt;div /&amp;gt;
  }
}

export default myComponent
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While when imported in another file it should start with capital letter:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import MyComponent from &#39;./MyComponent&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;What are the exceptions on React component naming?&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt; The component names should start with a uppercase letter but there are few exceptions on this convention. The lowercase tag names with a dot (property accessors) are still considered as valid component names.

 For example the below tag can be compiled to a valid component,
 
 ```jsx harmony
 render(){
    return (
        &amp;lt;obj.component /&amp;gt; // `React.createElement(obj.component)`
       )
 }
 ```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;88&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are custom DOM attributes supported in React v16?&lt;/h3&gt; &lt;p&gt;Yes. In the past, React used to ignore unknown DOM attributes. If you wrote JSX with an attribute that React doesn&#39;t recognize, React would just skip it.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take a look at the below attribute:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div mycustomattribute={&#39;something&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Would render an empty div to the DOM with React v15:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In React v16 any unknown attributes will end up in the DOM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div mycustomattribute=&#39;something&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for supplying browser-specific non-standard attributes, trying new DOM APIs, and integrating with opinionated third-party libraries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;89&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between constructor and getInitialState?&lt;/h3&gt; &lt;p&gt;You should initialize state in the constructor when using ES6 classes, and &lt;code&gt;getInitialState()&lt;/code&gt; method when using &lt;code&gt;React.createClass()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ES6 classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = { /* initial state */ }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyComponent = React.createClass({
  getInitialState() {
    return { /* initial state */ }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;React.createClass()&lt;/code&gt; is deprecated and removed in React v16. Use plain JavaScript classes instead.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;90&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you force a component to re-render without calling setState?&lt;/h3&gt; &lt;p&gt;By default, when your component&#39;s state or props change, your component will re-render. If your &lt;code&gt;render()&lt;/code&gt; method depends on some other data, you can tell React that the component needs re-rendering by calling &lt;code&gt;forceUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;component.forceUpdate(callback)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is recommended to avoid all uses of &lt;code&gt;forceUpdate()&lt;/code&gt; and only read from &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; in &lt;code&gt;render()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;91&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;super()&lt;/code&gt; and &lt;code&gt;super(props)&lt;/code&gt; in React using ES6 classes?&lt;/h3&gt; &lt;p&gt;When you want to access &lt;code&gt;this.props&lt;/code&gt; in &lt;code&gt;constructor()&lt;/code&gt; then you should pass props to &lt;code&gt;super()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super(props)&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    console.log(this.props) // { name: &#39;John&#39;, ... }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super()
    console.log(this.props) // undefined
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Outside &lt;code&gt;constructor()&lt;/code&gt; both will display same value for &lt;code&gt;this.props&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;92&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to loop inside JSX?&lt;/h3&gt; &lt;p&gt;You can simply use &lt;code&gt;Array.prototype.map&lt;/code&gt; with ES6 &lt;em&gt;arrow function&lt;/em&gt; syntax.&lt;/p&gt; &lt;p&gt;For example, the &lt;code&gt;items&lt;/code&gt; array of objects is mapped into an array of components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  {items.map(item =&amp;gt; &amp;lt;SomeComponent key={item.id} name={item.name} /&amp;gt;)}
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can&#39;t iterate using &lt;code&gt;for&lt;/code&gt; loop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;tbody&amp;gt;
  for (let i = 0; i &amp;lt; items.length; i++) {
    &amp;lt;SomeComponent key={items[i].id} name={items[i].name} /&amp;gt;
  }
&amp;lt;/tbody&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is because JSX tags are transpiled into &lt;em&gt;function calls&lt;/em&gt;, and you can&#39;t use statements inside expressions. This may change thanks to &lt;code&gt;do&lt;/code&gt; expressions which are &lt;em&gt;stage 1 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;93&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access props in attribute quotes?&lt;/h3&gt; &lt;p&gt;React (or JSX) doesn&#39;t support variable interpolation inside an attribute value. The below representation won&#39;t work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src=&#39;images/{this.props.image}&#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can put any JS expression inside curly braces as the entire attribute value. So the below expression works:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={&#39;images/&#39; + this.props.image} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;em&gt;template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;img className=&#39;image&#39; src={`images/${this.props.image}`} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;94&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React proptype array with shape?&lt;/h3&gt; &lt;p&gt;If you want to pass an array of objects to a component with a particular shape then use &lt;code&gt;React.PropTypes.shape()&lt;/code&gt; as an argument to &lt;code&gt;React.PropTypes.arrayOf()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactComponent.propTypes = {
  arrayWithShape: React.PropTypes.arrayOf(React.PropTypes.shape({
    color: React.PropTypes.string.isRequired,
    fontSize: React.PropTypes.number.isRequired
  })).isRequired
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;95&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to conditionally apply class attributes?&lt;/h3&gt; &lt;p&gt;You shouldn&#39;t use curly braces inside quotes because it is going to be evaluated as a string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className=&quot;btn-panel {this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead you need to move curly braces outside (don&#39;t forget to include spaces between class names):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={&#39;btn-panel &#39; + (this.props.visible ? &#39;show&#39; : &#39;hidden&#39;)}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div className={`btn-panel ${this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}`}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;96&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and ReactDOM?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react&lt;/code&gt; package contains &lt;code&gt;React.createElement()&lt;/code&gt;, &lt;code&gt;React.Component&lt;/code&gt;, &lt;code&gt;React.Children&lt;/code&gt;, and other helpers related to elements and component classes. You can think of these as the isomorphic or universal helpers that you need to build components. The &lt;code&gt;react-dom&lt;/code&gt; package contains &lt;code&gt;ReactDOM.render()&lt;/code&gt;, and in &lt;code&gt;react-dom/server&lt;/code&gt; we have &lt;em&gt;server-side rendering&lt;/em&gt; support with &lt;code&gt;ReactDOMServer.renderToString()&lt;/code&gt; and &lt;code&gt;ReactDOMServer.renderToStaticMarkup()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;97&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why ReactDOM is separated from React?&lt;/h3&gt; &lt;p&gt;The React team worked on extracting all DOM-related features into a separate library called &lt;em&gt;ReactDOM&lt;/em&gt;. React v0.14 is the first release in which the libraries are split. By looking at some of the packages, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;react-art&lt;/code&gt;, &lt;code&gt;react-canvas&lt;/code&gt;, and &lt;code&gt;react-three&lt;/code&gt;, it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.&lt;/p&gt; &lt;p&gt;To build more environments that React can render to, React team planned to split the main React package into two: &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;. This paves the way to writing components that can be shared between the web version of React and React Native.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;98&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use React label element?&lt;/h3&gt; &lt;p&gt;If you try to render a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element bound to a text input using the standard &lt;code&gt;for&lt;/code&gt; attribute, then it produces HTML missing that attribute and prints a warning to the console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label for={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since &lt;code&gt;for&lt;/code&gt; is a reserved keyword in JavaScript, use &lt;code&gt;htmlFor&lt;/code&gt; instead.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;label htmlFor={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;
&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;99&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to combine multiple inline style objects?&lt;/h3&gt; &lt;p&gt;You can use &lt;em&gt;spread operator&lt;/em&gt; in regular React:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt; &amp;lt;button style={{...styles.panel.button, ...styles.panel.submitButton}}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you&#39;re using React Native then you can use the array notation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;button style={[styles.panel.button, styles.panel.submitButton]}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;100&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to re-render the view when the browser is resized?&lt;/h3&gt; &lt;p&gt;You can listen to the &lt;code&gt;resize&lt;/code&gt; event in &lt;code&gt;componentDidMount()&lt;/code&gt; and then update the dimensions (&lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;). You should remove the listener in &lt;code&gt;componentWillUnmount()&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class WindowDimensions extends React.Component {
  constructor(props){
    super(props);
    this.updateDimensions = this.updateDimensions.bind(this);
  }
   
  componentWillMount() {
    this.updateDimensions()
  }

  componentDidMount() {
    window.addEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  componentWillUnmount() {
    window.removeEventListener(&#39;resize&#39;, this.updateDimensions)
  }

  updateDimensions() {
    this.setState({width: window.innerWidth, height: window.innerHeight})
  }

  render() {
    return &amp;lt;span&amp;gt;{this.state.width} x {this.state.height}&amp;lt;/span&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;101&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;setState()&lt;/code&gt; and &lt;code&gt;replaceState()&lt;/code&gt; methods?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt; the current and previous states are merged. &lt;code&gt;replaceState()&lt;/code&gt; throws out the current state, and replaces it with only what you provide. Usually &lt;code&gt;setState()&lt;/code&gt; is used unless you really need to remove all previous keys for some reason. You can also set state to &lt;code&gt;false&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; in &lt;code&gt;setState()&lt;/code&gt; instead of using &lt;code&gt;replaceState()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;102&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to listen to state changes?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;componentDidUpdate&lt;/code&gt; lifecycle method will be called when state changes. You can compare provided state and props values with current state and props to determine if something meaningful changed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;componentDidUpdate(object prevProps, object prevState)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The previous releases of ReactJS also uses &lt;code&gt;componentWillUpdate(object nextProps, object nextState)&lt;/code&gt; for state changes. It has been deprecated in latest releases.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;103&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the recommended approach of removing an array element in React state?&lt;/h3&gt; &lt;p&gt;The better approach is to use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;For example, let&#39;s create a &lt;code&gt;removeItem()&lt;/code&gt; method for updating the state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;removeItem(index) {
  this.setState({
    data: this.state.data.filter((item, i) =&amp;gt; i !== index)
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;104&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use React without rendering HTML?&lt;/h3&gt; &lt;p&gt;It is possible with latest version (&amp;gt;=16.2). Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return false
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return null
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return []
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;React.Fragment&amp;gt;&amp;lt;/React.Fragment&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
  return &amp;lt;&amp;gt;&amp;lt;/&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Returning &lt;code&gt;undefined&lt;/code&gt; won&#39;t work.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;105&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pretty print JSON with React?&lt;/h3&gt; &lt;p&gt;We can use &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag so that the formatting of the &lt;code&gt;JSON.stringify()&lt;/code&gt; is retained:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const data = { name: &#39;John&#39;, age: 42 }

class User extends React.Component {
  render() {
    return (
      &amp;lt;pre&amp;gt;
        {JSON.stringify(data, null, 2)}
      &amp;lt;/pre&amp;gt;
    )
  }
}

React.render(&amp;lt;User /&amp;gt;, document.getElementById(&#39;container&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;106&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you can&#39;t update props in React?&lt;/h3&gt; &lt;p&gt;The React philosophy is that props should be &lt;em&gt;immutable&lt;/em&gt; and &lt;em&gt;top-down&lt;/em&gt;. This means that a parent can send any prop values to a child, but the child can&#39;t modify received props.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;107&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to focus an input element on page load?&lt;/h3&gt; &lt;p&gt;You can do it by creating &lt;em&gt;ref&lt;/em&gt; for &lt;code&gt;input&lt;/code&gt; element and using it in &lt;code&gt;componentDidMount()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class App extends React.Component{
  componentDidMount() {
    this.nameInput.focus()
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input
          defaultValue={&#39;Won\&#39;t focus&#39;}
        /&amp;gt;
        &amp;lt;input
          ref={(input) =&amp;gt; this.nameInput = input}
          defaultValue={&#39;Will focus&#39;}
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;108&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible ways of updating objects in state?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with an object to merge with state:&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;code&gt;Object.assign()&lt;/code&gt; to create a copy of the object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = Object.assign({}, this.state.user, { age: 42 })
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Using &lt;em&gt;spread operator&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const user = { ...this.state.user, age: 42 }
this.setState({ user })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with a function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.setState(prevState =&amp;gt; ({
  user: {
    ...prevState.user,
    age: 42
  }
}))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;110&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How can we find the version of React at runtime in the browser?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;React.version&lt;/code&gt; to get the version.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const REACT_VERSION = React.version

ReactDOM.render(
  &amp;lt;div&amp;gt;{`React version: ${REACT_VERSION}`}&amp;lt;/div&amp;gt;,
  document.getElementById(&#39;app&#39;)
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;111&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the approaches to include polyfills in your &lt;code&gt;create-react-app&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are approaches to include polyfills in create-react-app,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Manual import from &lt;code&gt;core-js&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a file called (something like) &lt;code&gt;polyfills.js&lt;/code&gt; and import it into root &lt;code&gt;index.js&lt;/code&gt; file. Run &lt;code&gt;npm install core-js&lt;/code&gt; or &lt;code&gt;yarn add core-js&lt;/code&gt; and import your specific required features.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;core-js/fn/array/find&#39;
import &#39;core-js/fn/array/includes&#39;
import &#39;core-js/fn/number/is-nan&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Polyfill service:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use the polyfill.io CDN to retrieve custom, browser-specific polyfills by adding this line to &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&#39;https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above script we had to explicitly request the &lt;code&gt;Array.prototype.includes&lt;/code&gt; feature as it is not included in the default feature set.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;112&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use https instead of http in create-react-app?&lt;/h3&gt; &lt;p&gt;You just need to use &lt;code&gt;HTTPS=true&lt;/code&gt; configuration. You can edit your &lt;code&gt;package.json&lt;/code&gt; scripts section:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;scripts&quot;: {
  &quot;start&quot;: &quot;set HTTPS=true &amp;amp;&amp;amp; react-scripts start&quot;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or just run &lt;code&gt;set HTTPS=true &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;113&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to avoid using relative path imports in create-react-app?&lt;/h3&gt; &lt;p&gt;Create a file called &lt;code&gt;.env&lt;/code&gt; in the project root and write the import path:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NODE_PATH=src/app
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that restart the development server. Now you should be able to import anything inside &lt;code&gt;src/app&lt;/code&gt; without relative paths.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;114&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Google Analytics for React Router?&lt;/h3&gt; &lt;p&gt;Add a listener on the &lt;code&gt;history&lt;/code&gt; object to record each page view:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;history.listen(function (location) {
  window.ga(&#39;set&#39;, &#39;page&#39;, location.pathname + location.search)
  window.ga(&#39;send&#39;, &#39;pageview&#39;, location.pathname + location.search)
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;115&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to update a component every second?&lt;/h3&gt; &lt;p&gt;You need to use &lt;code&gt;setInterval()&lt;/code&gt; to trigger the change, but you also need to clear the timer when the component unmounts to prevent errors and memory leaks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidMount() {
  this.interval = setInterval(() =&amp;gt; this.setState({ time: Date.now() }), 1000)
}

componentWillUnmount() {
  clearInterval(this.interval)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;116&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you apply vendor prefixes to inline styles in React?&lt;/h3&gt; &lt;p&gt;React &lt;em&gt;does not&lt;/em&gt; apply &lt;em&gt;vendor prefixes&lt;/em&gt; automatically. You need to add vendor prefixes manually.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;div style={{
  transform: &#39;rotate(90deg)&#39;,
  WebkitTransform: &#39;rotate(90deg)&#39;, // note the capital &#39;W&#39; here
  msTransform: &#39;rotate(90deg)&#39; // &#39;ms&#39; is the only lowercase vendor prefix
}} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;117&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to import and export components using React and ES6?&lt;/h3&gt; &lt;p&gt;You should use default for exporting the components&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import User from &#39;user&#39;

export default class MyProfile extends React.Component {
  render(){
    return (
      &amp;lt;User type=&quot;customer&quot;&amp;gt;
        //...
      &amp;lt;/User&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With the export specifier, the MyProfile is going to be the member and exported to this module and the same can be imported without mentioning the name in other components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;119&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is a component constructor called only once?&lt;/h3&gt; &lt;p&gt;React&#39;s &lt;em&gt;reconciliation&lt;/em&gt; algorithm assumes that without any information to the contrary, if a custom component appears in the same place on subsequent renders, it&#39;s the same component as before, so reuses the previous instance rather than creating a new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;120&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to define constants in React?&lt;/h3&gt; &lt;p&gt;You can use ES7 &lt;code&gt;static&lt;/code&gt; field to define constant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  static DEFAULT_PAGINATION = 10
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Static fields&lt;/em&gt; are part of the &lt;em&gt;Class Fields&lt;/em&gt; stage 3 proposal.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;121&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to programmatically trigger click event in React?&lt;/h3&gt; &lt;p&gt;You could use the ref prop to acquire a reference to the underlying &lt;code&gt;HTMLInputElement&lt;/code&gt; object through a callback, store the reference as a class property, then use that reference to later trigger a click from your event handlers using the &lt;code&gt;HTMLElement.click&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;This can be done in two steps:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create ref in render method:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;input ref={input =&amp;gt; this.inputElement = input} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Apply click event in your event handler:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.inputElement.click()
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;122&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use async/await in plain React?&lt;/h3&gt; &lt;p&gt;If you want to use &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; in React, you will need &lt;em&gt;Babel&lt;/em&gt; and &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt;transform-async-to-generator&lt;/a&gt; plugin. React Native ships with Babel and a set of transforms.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;123&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the common folder structures for React?&lt;/h3&gt; &lt;p&gt;There are two common practices for React project file structure.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by features or routes:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One common way to structure projects is locate CSS, JS, and tests together, grouped by feature or route.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;common/
├─ Avatar.js
├─ Avatar.css
├─ APIUtils.js
└─ APIUtils.test.js
feed/
├─ index.js
├─ Feed.js
├─ Feed.css
├─ FeedStory.js
├─ FeedStory.test.js
└─ FeedAPI.js
profile/
├─ index.js
├─ Profile.js
├─ ProfileHeader.js
├─ ProfileHeader.css
└─ ProfileAPI.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by file type:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Another popular way to structure projects is to group similar files together.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;api/
├─ APIUtils.js
├─ APIUtils.test.js
├─ ProfileAPI.js
└─ UserAPI.js
components/
├─ Avatar.js
├─ Avatar.css
├─ Feed.js
├─ Feed.css
├─ FeedStory.js
├─ FeedStory.test.js
├─ Profile.js
├─ ProfileHeader.js
└─ ProfileHeader.css
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;124&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular packages for animation?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Transition Group&lt;/em&gt; and &lt;em&gt;React Motion&lt;/em&gt; are popular animation packages in React ecosystem.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;125&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of styles modules?&lt;/h3&gt; &lt;p&gt;It is recommended to avoid hard coding style values in components. Any values that are likely to be used across different UI components should be extracted into their own modules.&lt;/p&gt; &lt;p&gt;For example, these styles could be extracted into a separate component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const colors = {
  white,
  black,
  blue
}

export const space = [
  0,
  8,
  16,
  32,
  64
]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then imported individually in other components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { space, colors } from &#39;./styles&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;126&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the popular React-specific linters?&lt;/h3&gt; &lt;p&gt;ESLint is a popular JavaScript linter. There are plugins available that analyse specific code styles. One of the most common for React is an npm package called &lt;code&gt;eslint-plugin-react&lt;/code&gt;. By default, it will check a number of best practices, with rules checking things from keys in iterators to a complete set of prop types.&lt;/p&gt; &lt;p&gt;Another popular plugin is &lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt;, which will help fix common issues with accessibility. As JSX offers slightly different syntax to regular HTML, issues with &lt;code&gt;alt&lt;/code&gt; text and &lt;code&gt;tabindex&lt;/code&gt;, for example, will not be picked up by regular plugins.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;127&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX call and in which component lifecycle methods should I make an AJAX call?&lt;/h3&gt; &lt;p&gt;You can use AJAX libraries such as Axios, jQuery AJAX, and the browser built-in &lt;code&gt;fetch&lt;/code&gt;. You should fetch data in the &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method. This is so you can use &lt;code&gt;setState()&lt;/code&gt; to update your component when the data is retrieved.&lt;/p&gt; &lt;p&gt;For example, the employees list fetched from API and set local state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      employees: [],
      error: null
    }
  }

  componentDidMount() {
    fetch(&#39;https://api.example.com/items&#39;)
      .then(res =&amp;gt; res.json())
      .then(
        (result) =&amp;gt; {
          this.setState({
            employees: result.employees
          })
        },
        (error) =&amp;gt; {
          this.setState({ error })
        }
      )
  }

  render() {
    const { error, employees } = this.state
    if (error) {
      return &amp;lt;div&amp;gt;Error: {error.message}&amp;lt;/div&amp;gt;;
    } else {
      return (
        &amp;lt;ul&amp;gt;
          {employees.map(employee =&amp;gt; (
            &amp;lt;li key={employee.name}&amp;gt;
              {employee.name}-{employee.experience}
            &amp;lt;/li&amp;gt;
          ))}
        &amp;lt;/ul&amp;gt;
      )
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;128&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are render props?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Render Props&lt;/strong&gt; is a simple technique for sharing code between components using a prop whose value is a function. The below component uses render prop which returns a React element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;DataProvider render={data =&amp;gt; (
  &amp;lt;h1&amp;gt;{`Hello ${data.target}`}&amp;lt;/h1&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Libraries such as React Router and DownShift are using this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Router&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;129&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Router?&lt;/h3&gt; &lt;p&gt;React Router is a powerful routing library built on top of React that helps you add new screens and flows to your application incredibly quickly, all while keeping the URL in sync with what&#39;s being displayed on the page.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;130&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React Router is different from history library?&lt;/h3&gt; &lt;p&gt;React Router is a wrapper around the &lt;code&gt;history&lt;/code&gt; library which handles interaction with the browser&#39;s &lt;code&gt;window.history&lt;/code&gt; with its browser and hash histories. It also provides memory history which is useful for environments that don&#39;t have global history, such as mobile app development (React Native) and unit testing with Node.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;131&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components of React Router v4?&lt;/h3&gt; &lt;p&gt;React Router v4 provides below 3 &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;HashRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;&amp;lt;MemoryRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The above components will create &lt;em&gt;browser&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, and &lt;em&gt;memory&lt;/em&gt; history instances. React Router v4 makes the properties and methods of the &lt;code&gt;history&lt;/code&gt; instance associated with your router available through the context in the &lt;code&gt;router&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;132&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods of &lt;code&gt;history&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;A history instance has two methods for navigation purpose.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;If you think of the history as an array of visited locations, &lt;code&gt;push()&lt;/code&gt; will add a new location to the array and &lt;code&gt;replace()&lt;/code&gt; will replace the current location in the array with the new one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;133&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you programmatically navigate using React Router v4?&lt;/h3&gt; &lt;p&gt;There are three different ways to achieve programmatic routing/navigation within components.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using the &lt;code&gt;withRouter()&lt;/code&gt; higher-order function:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;withRouter()&lt;/code&gt; higher-order function will inject the history object as a prop of the component. This object provides &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods to avoid the usage of context.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { withRouter } from &#39;react-router-dom&#39; // this also works with &#39;react-router-native&#39;

const Button = withRouter(({ history }) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component and render props pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component passes the same props as &lt;code&gt;withRouter()&lt;/code&gt;, so you will be able to access the history methods through the history prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Route } from &#39;react-router-dom&#39;

const Button = () =&amp;gt; (
  &amp;lt;Route render={({ history }) =&amp;gt; (
    &amp;lt;button
      type=&#39;button&#39;
      onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}
    &amp;gt;
      {&#39;Click Me!&#39;}
    &amp;lt;/button&amp;gt;
  )} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using context:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This option is not recommended and treated as unstable API.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const Button = (props, context) =&amp;gt; (
  &amp;lt;button
    type=&#39;button&#39;
    onClick={() =&amp;gt; {
      context.history.push(&#39;/new-location&#39;)
    }}
  &amp;gt;
    {&#39;Click Me!&#39;}
  &amp;lt;/button&amp;gt;
)

Button.contextTypes = {
  history: React.PropTypes.shape({
    push: React.PropTypes.func.isRequired
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;134&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get query parameters in React Router v4?&lt;/h3&gt; &lt;p&gt;The ability to parse query strings was taken out of React Router v4 because there have been user requests over the years to support different implementation. So the decision has been given to users to choose the implementation they like. The recommended approach is to use query strings library.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const queryString = require(&#39;query-string&#39;);
const parsed = queryString.parse(props.location.search);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;URLSearchParams&lt;/code&gt; if you want something native:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const params = new URLSearchParams(props.location.search)
const foo = params.get(&#39;name&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should use a &lt;em&gt;polyfill&lt;/em&gt; for IE11.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;135&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why you get &quot;Router may have only one child element&quot; warning?&lt;/h3&gt; &lt;p&gt;You have to wrap your Route&#39;s in a &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block because &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; is unique in that it renders a route exclusively.&lt;/p&gt; &lt;p&gt;At first you need to add &lt;code&gt;Switch&lt;/code&gt; to your imports:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { Switch, Router, Route } from &#39;react-router&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then define the routes within &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Router&amp;gt;
  &amp;lt;Switch&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
    &amp;lt;Route {/* ... */} /&amp;gt;
  &amp;lt;/Switch&amp;gt;
&amp;lt;/Router&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;136&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass params to &lt;code&gt;history.push&lt;/code&gt; method in React Router v4?&lt;/h3&gt; &lt;p&gt;While navigating you can pass props to the &lt;code&gt;history&lt;/code&gt; object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;this.props.history.push({
  pathname: &#39;/template&#39;,
  search: &#39;?name=sudheer&#39;,
  state: { detail: response.data }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;search&lt;/code&gt; property is used to pass query params in &lt;code&gt;push()&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;137&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to implement &lt;em&gt;default&lt;/em&gt; or &lt;em&gt;NotFound&lt;/em&gt; page?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; renders the first child &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; that matches. A &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; with no path always matches. So you just need to simply drop path attribute as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Switch&amp;gt;
  &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
  &amp;lt;Route path=&quot;/user&quot; component={User}/&amp;gt;
  &amp;lt;Route component={NotFound} /&amp;gt;
&amp;lt;/Switch&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;138&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to get history on React Router v4?&lt;/h3&gt; &lt;p&gt;Below are the list of steps to get history object on React Router v4,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a module that exports a &lt;code&gt;history&lt;/code&gt; object and import this module across the project.&lt;/p&gt; &lt;p&gt;For example, create &lt;code&gt;history.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createBrowserHistory } from &#39;history&#39;

export default createBrowserHistory({
  /* pass a configuration object here if needed */
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You should use the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; component instead of built-in routers. Imported the above &lt;code&gt;history.js&lt;/code&gt; inside &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { Router } from &#39;react-router-dom&#39;
import history from &#39;./history&#39;
import App from &#39;./App&#39;

ReactDOM.render((
  &amp;lt;Router history={history}&amp;gt;
    &amp;lt;App /&amp;gt;
  &amp;lt;/Router&amp;gt;
), holder)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use push method of &lt;code&gt;history&lt;/code&gt; object similar to built-in history object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// some-other-file.js
import history from &#39;./history&#39;

history.push(&#39;/go-here&#39;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;139&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to perform automatic redirect after login?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-router&lt;/code&gt; package provides &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; component in React Router. Rendering a &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; will navigate to a new location. Like server-side redirects, the new location will override the current location in the history stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;
import { Redirect } from &#39;react-router&#39;

export default class LoginComponent extends Component {
  render() {
    if (this.state.isLoggedIn === true) {
      return &amp;lt;Redirect to=&quot;/your/redirect/page&quot; /&amp;gt;
    } else {
      return &amp;lt;div&amp;gt;{&#39;Login Please&#39;}&amp;lt;/div&amp;gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Internationalization&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;140&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;React Intl&lt;/em&gt; library makes internalization in React straightforward, with off-the-shelf components and an API that can handle everything from formatting strings, dates, and numbers, to pluralization. React Intl is part of &lt;em&gt;FormatJS&lt;/em&gt; which provides bindings to React via its components and API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;141&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of React Intl?&lt;/h3&gt; &lt;p&gt;Below are the main features of React Intl,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Display numbers with separators.&lt;/li&gt; 
   &lt;li&gt;Display dates and times correctly.&lt;/li&gt; 
   &lt;li&gt;Display dates relative to &quot;now&quot;.&lt;/li&gt; 
   &lt;li&gt;Pluralize labels in strings.&lt;/li&gt; 
   &lt;li&gt;Support for 150+ languages.&lt;/li&gt; 
   &lt;li&gt;Runs in the browser and Node.&lt;/li&gt; 
   &lt;li&gt;Built on standards.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;142&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the two ways of formatting in React Intl?&lt;/h3&gt; &lt;p&gt;The library provides two ways to format strings, numbers, and dates:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using react components:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;FormattedMessage
  id={&#39;account&#39;}
  defaultMessage={&#39;The amount is less than minimum balance.&#39;}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;2. **Using an API:**

     ```javascript
     const messages = defineMessages({
       accountMessage: {
         id: &#39;account&#39;,
         defaultMessage: &#39;The amount is less than minimum balance.&#39;,
       }
     })

     formatMessage(messages.accountMessage)
     ```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;143&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;&amp;lt;FormattedMessage&amp;gt;&lt;/code&gt; as placeholder using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Formatted... /&amp;gt;&lt;/code&gt; components from &lt;code&gt;react-intl&lt;/code&gt; return elements, not plain text, so they can&#39;t be used for placeholders, alt text, etc. In that case, you should use lower level API &lt;code&gt;formatMessage()&lt;/code&gt;. You can inject the &lt;code&gt;intl&lt;/code&gt; object into your component using &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component and then format the message using &lt;code&gt;formatMessage()&lt;/code&gt; available on that object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; {
  const placeholder = intl.formatMessage({id: &#39;messageId&#39;})
  return &amp;lt;input placeholder={placeholder} /&amp;gt;
}

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;144&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access current locale with React Intl?&lt;/h3&gt; &lt;p&gt;You can get the current locale in any component of your application using &lt;code&gt;injectIntl()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const MyComponent = ({ intl }) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The current locale is ${intl.locale}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;145&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to format date using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component will give you access to the &lt;code&gt;formatDate()&lt;/code&gt; method via the props in your component. The method is used internally by instances of &lt;code&gt;FormattedDate&lt;/code&gt; and it returns the string representation of the formatted date.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;

const stringDate = this.props.intl.formatDate(date, {
  year: &#39;numeric&#39;,
  month: &#39;numeric&#39;,
  day: &#39;numeric&#39;
})

const MyComponent = ({intl}) =&amp;gt; (
  &amp;lt;div&amp;gt;{`The formatted date is ${stringDate}`}&amp;lt;/div&amp;gt;
)

MyComponent.propTypes = {
  intl: intlShape.isRequired
}

export default injectIntl(MyComponent)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Testing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;146&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Shallow Renderer in React testing?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Shallow rendering&lt;/em&gt; is useful for writing unit test cases in React. It lets you render a component &lt;em&gt;one level deep&lt;/em&gt; and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered.&lt;/p&gt; &lt;p&gt;For example, if you have the following component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;
      &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then you can assert as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ShallowRenderer from &#39;react-test-renderer/shallow&#39;

// in your test
const renderer = new ShallowRenderer()
renderer.render(&amp;lt;MyComponent /&amp;gt;)

const result = renderer.getRenderOutput()

expect(result.type).toBe(&#39;div&#39;)
expect(result.props.children).toEqual([
  &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;,
  &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;
])
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;147&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is &lt;code&gt;TestRenderer&lt;/code&gt; package in React?&lt;/h3&gt; &lt;p&gt;This package provides a renderer that can be used to render components to pure JavaScript objects, without depending on the DOM or a native mobile environment. This package makes it easy to grab a snapshot of the platform view hierarchy (similar to a DOM tree) rendered by a ReactDOM or React Native without using a browser or &lt;code&gt;jsdom&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import TestRenderer from &#39;react-test-renderer&#39;

const Link = ({page, children}) =&amp;gt; &amp;lt;a href={page}&amp;gt;{children}&amp;lt;/a&amp;gt;

const testRenderer = TestRenderer.create(
  &amp;lt;Link page={&#39;https://www.facebook.com/&#39;}&amp;gt;{&#39;Facebook&#39;}&amp;lt;/Link&amp;gt;
)

console.log(testRenderer.toJSON())
// {
//   type: &#39;a&#39;,
//   props: { href: &#39;https://www.facebook.com/&#39; },
//   children: [ &#39;Facebook&#39; ]
// }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;148&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of ReactTestUtils package?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;ReactTestUtils&lt;/em&gt; are provided in the &lt;code&gt;with-addons&lt;/code&gt; package and allow you to perform actions against a simulated DOM for the purpose of unit testing.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;149&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Jest?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Jest&lt;/em&gt; is a JavaScript unit testing framework created by Facebook based on Jasmine and provides automated mock creation and a &lt;code&gt;jsdom&lt;/code&gt; environment. It&#39;s often used for testing components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;150&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of Jest over Jasmine?&lt;/h3&gt; &lt;p&gt;There are couple of advantages compared to Jasmine:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Automatically finds tests to execute in your source code.&lt;/li&gt; 
   &lt;li&gt;Automatically mocks dependencies when running your tests.&lt;/li&gt; 
   &lt;li&gt;Allows you to test asynchronous code synchronously.&lt;/li&gt; 
   &lt;li&gt;Runs your tests with a fake DOM implementation (via &lt;code&gt;jsdom&lt;/code&gt;) so that your tests can be run on the command line.&lt;/li&gt; 
   &lt;li&gt;Runs tests in parallel processes so that they finish sooner.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;151&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give a simple example of Jest test case&lt;/h3&gt; &lt;p&gt;Let&#39;s write a test for a function that adds two numbers in &lt;code&gt;sum.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const sum = (a, b) =&amp;gt; a + b

export default sum
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a file named &lt;code&gt;sum.test.js&lt;/code&gt; which contains actual test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import sum from &#39;./sum&#39;

test(&#39;adds 1 + 2 to equal 3&#39;, () =&amp;gt; {
  expect(sum(1, 2)).toBe(3)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then add the following section to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Finally, run &lt;code&gt;yarn test&lt;/code&gt; or &lt;code&gt;npm test&lt;/code&gt; and Jest will print a result:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ yarn test
PASS ./sum.test.js
✓ adds 1 + 2 to equal 3 (2ms)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React Redux&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;152&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is flux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flux&lt;/em&gt; is an &lt;em&gt;application design paradigm&lt;/em&gt; used as a replacement for the more traditional MVC pattern. It is not a framework or a library but a new kind of architecture that complements React and the concept of Unidirectional Data Flow. Facebook uses this pattern internally when working with React.&lt;/p&gt; &lt;p&gt;The workflow between dispatcher, stores and views components with distinct inputs and outputs as follows:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/flux.png&quot; alt=&quot;flux&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;153&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux&lt;/em&gt; is a predictable state container for JavaScript apps based on the &lt;em&gt;Flux design pattern&lt;/em&gt;. Redux can be used together with React, or with any other view library. It is tiny (about 2kB) and has no dependencies.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;154&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the core principles of Redux?&lt;/h3&gt; &lt;p&gt;Redux follows three fundamental principles:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Single source of truth:&lt;/strong&gt; The state of your whole application is stored in an object tree within a single store. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;State is read-only:&lt;/strong&gt; The only way to change the state is to emit an action, an object describing what happened. This ensures that neither the views nor the network callbacks will ever write directly to the state.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Changes are made with pure functions:&lt;/strong&gt; To specify how the state tree is transformed by actions, you write reducers. Reducers are just pure functions that take the previous state and an action as parameters, and return the next state.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;155&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the downsides of Redux compared to Flux?&lt;/h3&gt; &lt;p&gt;Instead of saying downsides we can say that there are few compromises of using Redux over Flux. Those are as follows:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;You will need to learn to avoid mutations:&lt;/strong&gt; Flux is un-opinionated about mutating data, but Redux doesn&#39;t like mutations and many packages complementary to Redux assume you never mutate the state. You can enforce this with dev-only packages like &lt;code&gt;redux-immutable-state-invariant&lt;/code&gt;, Immutable.js, or instructing your team to write non-mutating code.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;You&#39;re going to have to carefully pick your packages:&lt;/strong&gt; While Flux explicitly doesn&#39;t try to solve problems such as undo/redo, persistence, or forms, Redux has extension points such as middleware and store enhancers, and it has spawned a rich ecosystem.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;There is no nice Flow integration yet:&lt;/strong&gt; Flux currently lets you do very impressive static type checks which Redux doesn&#39;t support yet.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;156&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;mapStateToProps()&lt;/code&gt; is a utility which helps your component get updated state (which is updated by some other components):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapStateToProps = (state) =&amp;gt; {
  return {
    todos: getVisibleTodos(state.todos, state.visibilityFilter)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;mapDispatchToProps()&lt;/code&gt; is a utility which will help your component to fire an action event (dispatching action which may cause change of application state):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; {
  return {
    onTodoClick: (id) =&amp;gt; {
      dispatch(toggleTodo(id))
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Recommend always using the “object shorthand” form for the &lt;code&gt;mapDispatchToProps&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redux wrap it in another function that looks like (…args) =&amp;gt; dispatch(onTodoClick(…args)), and pass that wrapper function as a prop to your component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const mapDispatchToProps = ({
   onTodoClick
 })
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;157&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I dispatch an action in reducer?&lt;/h3&gt; &lt;p&gt;Dispatching an action within a reducer is an &lt;strong&gt;anti-pattern&lt;/strong&gt;. Your reducer should be &lt;em&gt;without side effects&lt;/em&gt;, simply digesting the action payload and returning a new state object. Adding listeners and dispatching actions within the reducer can lead to chained actions and other side effects.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;158&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to access Redux store outside a component?&lt;/h3&gt; &lt;p&gt;You just need to export the store from the module where it created with &lt;code&gt;createStore()&lt;/code&gt;. Also, it shouldn&#39;t pollute the global window object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;store = createStore(myReducer)

export default store
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;159&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the drawbacks of MVW pattern?&lt;/h3&gt; 
  &lt;ol&gt; 
   &lt;li&gt;DOM manipulation is very expensive which causes applications to behave slow and inefficient.&lt;/li&gt; 
   &lt;li&gt;Due to circular dependencies, a complicated model was created around models and views.&lt;/li&gt; 
   &lt;li&gt;Lot of data changes happens for collaborative applications(like Google Docs).&lt;/li&gt; 
   &lt;li&gt;No way to do undo (travel back in time) easily without adding so much extra code.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;160&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Are there any similarities between Redux and RxJS?&lt;/h3&gt; &lt;p&gt;These libraries are very different for very different purposes, but there are some vague similarities.&lt;/p&gt; &lt;p&gt;Redux is a tool for managing state throughout the application. It is usually used as an architecture for UIs. Think of it as an alternative to (half of) Angular. RxJS is a reactive programming library. It is usually used as a tool to accomplish asynchronous tasks in JavaScript. Think of it as an alternative to Promises. Redux uses the Reactive paradigm because the Store is reactive. The Store observes actions from a distance, and changes itself. RxJS also uses the Reactive paradigm, but instead of being an architecture, it gives you basic building blocks, Observables, to accomplish this pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;161&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to dispatch an action on load?&lt;/h3&gt; &lt;p&gt;You can dispatch an action in &lt;code&gt;componentDidMount()&lt;/code&gt; method and in &lt;code&gt;render()&lt;/code&gt; method you can verify the data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends Component {
  componentDidMount() {
    this.props.fetchData()
  }

  render() {
    return this.props.isLoaded
      ? &amp;lt;div&amp;gt;{&#39;Loaded&#39;}&amp;lt;/div&amp;gt;
      : &amp;lt;div&amp;gt;{&#39;Not Loaded&#39;}&amp;lt;/div&amp;gt;
  }
}

const mapStateToProps = (state) =&amp;gt; ({
  isLoaded: state.isLoaded
})

const mapDispatchToProps = { fetchData }

export default connect(mapStateToProps, mapDispatchToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;162&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;connect()&lt;/code&gt; from React Redux?&lt;/h3&gt; &lt;p&gt;You need to follow two steps to use your store in your container:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use &lt;code&gt;mapStateToProps()&lt;/code&gt;:&lt;/strong&gt; It maps the state variables from your store to the props that you specify.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect the above props to your container:&lt;/strong&gt; The object returned by the &lt;code&gt;mapStateToProps&lt;/code&gt; function is connected to the container. You can import &lt;code&gt;connect()&lt;/code&gt; from &lt;code&gt;react-redux&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React from &#39;react&#39;
import { connect } from &#39;react-redux&#39;

class App extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;{this.props.containerData}&amp;lt;/div&amp;gt;
  }
}

function mapStateToProps(state) {
  return { containerData: state.data }
}

export default connect(mapStateToProps)(App)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;163&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to reset state in Redux?&lt;/h3&gt; &lt;p&gt;You need to write a &lt;em&gt;root reducer&lt;/em&gt; in your application which delegate handling the action to the reducer generated by &lt;code&gt;combineReducers()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take &lt;code&gt;rootReducer()&lt;/code&gt; to return the initial state after &lt;code&gt;USER_LOGOUT&lt;/code&gt; action. As we know, reducers are supposed to return the initial state when they are called with &lt;code&gt;undefined&lt;/code&gt; as the first argument, no matter the action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In case of using &lt;code&gt;redux-persist&lt;/code&gt;, you may also need to clean your storage. &lt;code&gt;redux-persist&lt;/code&gt; keeps a copy of your state in a storage engine. First, you need to import the appropriate storage engine and then, to parse the state before setting it to undefined and clean each storage state key.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const appReducer = combineReducers({
  /* your app&#39;s top-level reducers */
})

const rootReducer = (state, action) =&amp;gt; {
  if (action.type === &#39;USER_LOGOUT&#39;) {
    Object.keys(state).forEach(key =&amp;gt; {
      storage.removeItem(`persist:${key}`)
    })

    state = undefined
  }

  return appReducer(state, action)
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;164&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Whats the purpose of &lt;code&gt;at&lt;/code&gt; symbol in the Redux connect decorator?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;@&lt;/strong&gt; symbol is in fact a JavaScript expression used to signify decorators. &lt;em&gt;Decorators&lt;/em&gt; make it possible to annotate and modify classes and properties at design time.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example setting up Redux without and with a decorator.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Without decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

class MyApp extends React.Component {
  // ...define your main app here
}

export default connect(mapStateToProps, mapDispatchToProps)(MyApp)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;With decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import * as actionCreators from &#39;./actionCreators&#39;
import { bindActionCreators } from &#39;redux&#39;
import { connect } from &#39;react-redux&#39;

function mapStateToProps(state) {
  return { todos: state.todos }
}

function mapDispatchToProps(dispatch) {
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

@connect(mapStateToProps, mapDispatchToProps)
export default class MyApp extends React.Component {
  // ...define your main app here
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;The above examples are almost similar except the usage of decorator. The decorator syntax isn&#39;t built into any JavaScript runtimes yet, and is still experimental and subject to change. You can use babel for the decorators support.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;165&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React context and React Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;strong&gt;Context&lt;/strong&gt; in your application directly and is going to be great for passing down data to deeply nested components which what it was designed for.&lt;/p&gt; &lt;p&gt;Whereas &lt;strong&gt;Redux&lt;/strong&gt; is much more powerful and provides a large number of features that the Context API doesn&#39;t provide. Also, React Redux uses context internally but it doesn&#39;t expose this fact in the public API.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;166&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are Redux state functions called reducers?&lt;/h3&gt; &lt;p&gt;Reducers always return the accumulation of the state (based on all previous and current actions). Therefore, they act as a reducer of state. Each time a Redux reducer is called, the state and action are passed as parameters. This state is then reduced (or accumulated) based on the action, and then the next state is returned. You could &lt;em&gt;reduce&lt;/em&gt; a collection of actions and an initial state (of the store) on which to perform these actions to get the resulting final state.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;167&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to make AJAX request in Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;redux-thunk&lt;/code&gt; middleware which allows you to define async actions.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of fetching specific account as an AJAX call using &lt;em&gt;fetch API&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export function fetchAccount(id) {
  return dispatch =&amp;gt; {
    dispatch(setLoadingAccountState()) // Show a loading spinner
    fetch(`/account/${id}`, (response) =&amp;gt; {
      dispatch(doneFetchingAccount()) // Hide loading spinner
      if (response.status === 200) {
        dispatch(setAccount(response.json)) // Use a normal function to set the received state
      } else {
        dispatch(someError)
      }
    })
  }
}

function setAccount(data) {
 return { type: &#39;SET_Account&#39;, data: data }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;168&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I keep all component&#39;s state in Redux store?&lt;/h3&gt; &lt;p&gt;Keep your data in the Redux store, and the UI related state internally in the component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;169&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper way to access Redux store?&lt;/h3&gt; &lt;p&gt;The best way to access your store in a component is to use the &lt;code&gt;connect()&lt;/code&gt; function, that creates a new component that wraps around your existing one. This pattern is called &lt;em&gt;Higher-Order Components&lt;/em&gt;, and is generally the preferred way of extending a component&#39;s functionality in React. This allows you to map state and action creators to your component, and have them passed in automatically as your store updates.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of &lt;code&gt;&amp;lt;FilterLink&amp;gt;&lt;/code&gt; component using connect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { connect } from &#39;react-redux&#39;
import { setVisibilityFilter } from &#39;../actions&#39;
import Link from &#39;../components/Link&#39;

const mapStateToProps = (state, ownProps) =&amp;gt; ({
  active: ownProps.filter === state.visibilityFilter
})

const mapDispatchToProps = (dispatch, ownProps) =&amp;gt; ({
  onClick: () =&amp;gt; dispatch(setVisibilityFilter(ownProps.filter))
})

const FilterLink = connect(
  mapStateToProps,
  mapDispatchToProps
)(Link)

export default FilterLink
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Due to it having quite a few performance optimizations and generally being less likely to cause bugs, the Redux developers almost always recommend using &lt;code&gt;connect()&lt;/code&gt; over accessing the store directly (using context API).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent {
  someMethod() {
    doSomethingWith(this.context.store)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;170&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between component and container in React Redux?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Component&lt;/strong&gt; is a class or function component that describes the presentational part of your application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt; is an informal term for a component that is connected to a Redux store. Containers &lt;em&gt;subscribe&lt;/em&gt; to Redux state updates and &lt;em&gt;dispatch&lt;/em&gt; actions, and they usually don&#39;t render DOM elements; they delegate rendering to presentational child components.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;171&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of the constants in Redux?&lt;/h3&gt; &lt;p&gt;Constants allows you to easily find all usages of that specific functionality across the project when you use an IDE. It also prevents you from introducing silly bugs caused by typos – in which case, you will get a &lt;code&gt;ReferenceError&lt;/code&gt; immediately.&lt;/p&gt; &lt;p&gt;Normally we will save them in a single file (&lt;code&gt;constants.js&lt;/code&gt; or &lt;code&gt;actionTypes.js&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;export const ADD_TODO = &#39;ADD_TODO&#39;
export const DELETE_TODO = &#39;DELETE_TODO&#39;
export const EDIT_TODO = &#39;EDIT_TODO&#39;
export const COMPLETE_TODO = &#39;COMPLETE_TODO&#39;
export const COMPLETE_ALL = &#39;COMPLETE_ALL&#39;
export const CLEAR_COMPLETED = &#39;CLEAR_COMPLETED&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In Redux, you use them in two places:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;During action creation:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s take &lt;code&gt;actions.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;;

export function addTodo(text) {
  return { type: ADD_TODO, text }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;In reducers:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s create &lt;code&gt;reducer.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;

export default (state = [], action) =&amp;gt; {
  switch (action.type) {
    case ADD_TODO:
      return [
        ...state,
        {
          text: action.text,
          completed: false
        }
      ];
    default:
      return state
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;172&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the different ways to write &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are a few ways of binding &lt;em&gt;action creators&lt;/em&gt; to &lt;code&gt;dispatch()&lt;/code&gt; in &lt;code&gt;mapDispatchToProps()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: () =&amp;gt; dispatch(action())
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({
 action: bindActionCreators(action, dispatch)
})
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mapDispatchToProps = { action }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The third option is just a shorthand for the first one.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;173&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the use of the &lt;code&gt;ownProps&lt;/code&gt; parameter in &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;If the &lt;code&gt;ownProps&lt;/code&gt; parameter is specified, React Redux will pass the props that were passed to the component into your &lt;em&gt;connect&lt;/em&gt; functions. So, if you use a connected component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import ConnectedComponent from &#39;./containers/ConnectedComponent&#39;;

&amp;lt;ConnectedComponent user={&#39;john&#39;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;ownProps&lt;/code&gt; inside your &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt; functions will be an object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{ user: &#39;john&#39; }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can use this object to decide what to return from those functions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;174&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to structure Redux top level directories?&lt;/h3&gt; &lt;p&gt;Most of the applications has several top-level directories as below:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt;: Used for &lt;em&gt;dumb&lt;/em&gt; components unaware of Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: Used for &lt;em&gt;smart&lt;/em&gt; components connected to Redux.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: Used for all action creators, where file names correspond to part of the app.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reducers&lt;/strong&gt;: Used for all reducers, where files name correspond to state key.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: Used for store initialization.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;This structure works well for small and medium size apps.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;175&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;redux-saga&lt;/code&gt; is a library that aims to make side effects (asynchronous things like data fetching and impure things like accessing the browser cache) in React/Redux applications easier and better.&lt;/p&gt; &lt;p&gt;It is available in NPM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save redux-saga
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;176&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the mental model of redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Saga&lt;/em&gt; is like a separate thread in your application, that&#39;s solely responsible for side effects. &lt;code&gt;redux-saga&lt;/code&gt; is a redux &lt;em&gt;middleware&lt;/em&gt;, which means this thread can be started, paused and cancelled from the main application with normal Redux actions, it has access to the full Redux application state and it can dispatch Redux actions as well.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;177&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; in redux-saga?&lt;/h3&gt; &lt;p&gt;Both &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; are effect creator functions. &lt;code&gt;call()&lt;/code&gt; function is used to create effect description, which instructs middleware to call the promise. &lt;code&gt;put()&lt;/code&gt; function creates an effect, which instructs middleware to dispatch an action to the store.&lt;/p&gt; &lt;p&gt;Let&#39;s take example of how these effects work for fetching particular user data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function* fetchUserSaga(action) {
  // `call` function accepts rest arguments, which will be passed to `api.fetchUser` function.
  // Instructing middleware to call promise, it resolved value will be assigned to `userData` variable
  const userData = yield call(api.fetchUser, action.userId)

  // Instructing middleware to dispatch corresponding action.
  yield put({
    type: &#39;FETCH_USER_SUCCESS&#39;,
    userData
  })
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;178&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Thunk?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Thunk&lt;/em&gt; middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods &lt;code&gt;dispatch()&lt;/code&gt; and &lt;code&gt;getState()&lt;/code&gt; as parameters.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;179&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;redux-saga&lt;/code&gt; and &lt;code&gt;redux-thunk&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;Redux Thunk&lt;/em&gt; and &lt;em&gt;Redux Saga&lt;/em&gt; take care of dealing with side effects. In most of the scenarios, Thunk uses &lt;em&gt;Promises&lt;/em&gt; to deal with them, whereas Saga uses &lt;em&gt;Generators&lt;/em&gt;. Thunk is simple to use and Promises are familiar to many developers, Sagas/Generators are more powerful but you will need to learn them. But both middleware can coexist, so you can start with Thunks and introduce Sagas when/if you need them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;180&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux DevTools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux DevTools&lt;/em&gt; is a live-editing time travel environment for Redux with hot reloading, action replay, and customizable UI. If you don&#39;t want to bother with installing Redux DevTools and integrating it into your project, consider using Redux DevTools Extension for Chrome and Firefox.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;181&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of Redux DevTools?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux DevTools are below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Lets you inspect every state and action payload.&lt;/li&gt; 
   &lt;li&gt;Lets you go back in time by &lt;em&gt;cancelling&lt;/em&gt; actions.&lt;/li&gt; 
   &lt;li&gt;If you change the reducer code, each &lt;em&gt;staged&lt;/em&gt; action will be re-evaluated.&lt;/li&gt; 
   &lt;li&gt;If the reducers throw, you will see during which action this happened, and what the error was.&lt;/li&gt; 
   &lt;li&gt;With &lt;code&gt;persistState()&lt;/code&gt; store enhancer, you can persist debug sessions across page reloads.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;182&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Redux selectors and why to use them?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Selectors&lt;/em&gt; are functions that take Redux state as an argument and return some data to pass to the component.&lt;/p&gt; &lt;p&gt;For example, to get user details from the state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const getUserData = state =&amp;gt; state.user.data
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These selectors have two main benefits,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The selector can compute derived data, allowing Redux to store the minimal possible state&lt;/li&gt; 
   &lt;li&gt;The selector is not recomputed unless one of its arguments changes&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;183&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Redux Form?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Form&lt;/em&gt; works with React and Redux to enable a form in React to use Redux to store all of its state. Redux Form can be used with raw HTML5 inputs, but it also works very well with common UI frameworks like Material UI, React Widgets and React Bootstrap.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;184&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Redux Form?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux Form are:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Field values persistence via Redux store.&lt;/li&gt; 
   &lt;li&gt;Validation (sync/async) and submission.&lt;/li&gt; 
   &lt;li&gt;Formatting, parsing and normalization of field values.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;185&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add multiple middlewares to Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;applyMiddleware()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, you can add &lt;code&gt;redux-thunk&lt;/code&gt; and &lt;code&gt;logger&lt;/code&gt; passing them as arguments to &lt;code&gt;applyMiddleware()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createStore, applyMiddleware } from &#39;redux&#39;
const createStoreWithMiddleware = applyMiddleware(ReduxThunk, logger)(createStore)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;186&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to set initial state in Redux?&lt;/h3&gt; &lt;p&gt;You need to pass initial state as second argument to createStore:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const rootReducer = combineReducers({
  todos: todos,
  visibilityFilter: visibilityFilter
})

const initialState = {
  todos: [{ id: 123, name: &#39;example&#39;, completed: false }]
}

const store = createStore(
  rootReducer,
  initialState
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;187&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Relay is different from Redux?&lt;/h3&gt; &lt;p&gt;Relay is similar to Redux in that they both use a single store. The main difference is that relay only manages state originated from the server, and all access to the state is used via &lt;em&gt;GraphQL&lt;/em&gt; queries (for reading data) and mutations (for changing data). Relay caches the data for you and optimizes data fetching for you, by fetching only changed data and nothing more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What is an action in Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Actions&lt;/em&gt; are plain JavaScript objects or payloads of information that send data from your application to your store. They are the only source of information for the store. Actions must have a type property that indicates the type of action being performed.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take an action which represents adding a new todo item:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{
  type: ADD_TODO,
  text: &#39;Add todo item&#39;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;React Native&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;188&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React Native and React?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; is a JavaScript library, supporting both front end web and being run on the server, for building user interfaces and web applications.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; is a mobile framework that compiles to native app components, allowing you to build native mobile applications (iOS, Android, and Windows) in JavaScript that allows you to use React to build your components, and implements React under the hood.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;189&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to test React Native apps?&lt;/h3&gt; &lt;p&gt;React Native can be tested only in mobile simulators like iOS and Android. You can run the app in your mobile using expo app (https://expo.io) Where it syncs using QR code, your mobile and computer should be in same wireless network.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;190&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to do logging in React Native?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, etc. As of React Native v0.29 you can simply run the following to see logs in the console:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ react-native log-ios
$ react-native log-android
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;191&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug your React Native?&lt;/h3&gt; &lt;p&gt;Follow the below steps to debug React Native app:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Run your application in the iOS simulator.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + D&lt;/code&gt; and a webpage should open up at &lt;code&gt;http://localhost:8081/debugger-ui&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Enable &lt;em&gt;Pause On Caught Exceptions&lt;/em&gt; for a better debugging experience.&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Command + Option + I&lt;/code&gt; to open the Chrome Developer tools, or open it via &lt;code&gt;View&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer Tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;You should now be able to debug as you normally would.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;React supported libraries &amp;amp; Integration&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;192&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is reselect and how it works?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Reselect&lt;/em&gt; is a &lt;strong&gt;selector library&lt;/strong&gt; (for Redux) which uses &lt;em&gt;memoization&lt;/em&gt; concept. It was originally written to compute derived data from Redux-like applications state, but it can&#39;t be tied to any architecture or library.&lt;/p&gt; &lt;p&gt;Reselect keeps a copy of the last inputs/outputs of the last call, and recomputes the result only if one of the inputs changes. If the the same inputs are provided twice in a row, Reselect returns the cached output. It&#39;s memoization and cache are fully customizable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;193&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Flow?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flow&lt;/em&gt; is a &lt;em&gt;static type checker&lt;/em&gt; designed to find type errors in JavaScript. Flow types can express much more fine-grained distinctions than traditional type systems. For example, Flow helps you catch errors involving &lt;code&gt;null&lt;/code&gt;, unlike most type systems.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;194&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Flow and PropTypes?&lt;/h3&gt; &lt;p&gt;Flow is a &lt;em&gt;static analysis tool&lt;/em&gt; (static checker) which uses a superset of the language, allowing you to add type annotations to all of your code and catch an entire class of bugs at compile time.&lt;/p&gt; &lt;p&gt;PropTypes is a &lt;em&gt;basic type checker&lt;/em&gt; (runtime checker) which has been patched onto React. It can&#39;t check anything other than the types of the props being passed to a given component. If you want more flexible typechecking for your entire project Flow/TypeScript are appropriate choices.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;195&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Font Awesome icons in React?&lt;/h3&gt; &lt;p&gt;The below steps followed to include Font Awesome in React:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Install &lt;code&gt;font-awesome&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install --save font-awesome
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Import &lt;code&gt;font-awesome&lt;/code&gt; in your &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;font-awesome/css/font-awesome.min.css&#39;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Add Font Awesome classes in &lt;code&gt;className&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return &amp;lt;div&amp;gt;&amp;lt;i className={&#39;fa fa-spinner&#39;} /&amp;gt;&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;196&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React Dev Tools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Developer Tools&lt;/em&gt; let you inspect the component hierarchy, including component props and state. It exists both as a browser extension (for Chrome and Firefox), and as a standalone app (works with other environments including Safari, IE, and React Native).&lt;/p&gt; &lt;p&gt;The official extensions available for different browsers or environments.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Chrome extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Firefox extension&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Standalone app&lt;/strong&gt; (Safari, React Native, etc)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;197&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why is DevTools not loading in Chrome for local files?&lt;/h3&gt; &lt;p&gt;If you opened a local HTML file in your browser (&lt;code&gt;file://...&lt;/code&gt;) then you must first open &lt;em&gt;Chrome Extensions&lt;/em&gt; and check &lt;code&gt;Allow access to file URLs&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;198&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use Polymer in React?&lt;/h3&gt; &lt;p&gt;You need to follow below steps to use Polymer in React,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Create a Polymer element:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;../../bower_components/polymer/polymer.html&#39; /&amp;gt;
Polymer({
  is: &#39;calender-element&#39;,
  ready: function() {
    this.textContent = &#39;I am a calender&#39;
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Create the Polymer component HTML tag by importing it in a HTML document, e.g. import it in the &lt;code&gt;index.html&lt;/code&gt; of your React application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;./src/polymer-components/calender-element.html&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Use that element in the JSX file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;

class MyComponent extends React.Component {
  render() {
    return (
      &amp;lt;calender-element /&amp;gt;
    )
  }
}

export default MyComponent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;199&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of React over Vue.js?&lt;/h3&gt; &lt;p&gt;React has the following advantages over Vue.js:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Gives more flexibility in large apps developing.&lt;/li&gt; 
   &lt;li&gt;Easier to test.&lt;/li&gt; 
   &lt;li&gt;Suitable for mobile apps creating.&lt;/li&gt; 
   &lt;li&gt;More information and solutions available.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of advantages are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;200&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between React and Angular?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the difference between React and Angular in a table format.&lt;/p&gt; &lt;p&gt;| React | Angular | | ----- | ------- | | React is a library and has only the View layer | Angular is a framework and has complete MVC functionality | | React handles rendering on the server side | AngularJS renders only on the client side but Angular 2 and above renders on the server side | | React uses JSX that looks like HTML in JS which can be confusing | Angular follows the template approach for HTML, which makes code shorter and easy to understand | | React Native, which is a React type to build mobile applications are faster and more stable | Ionic, Angular&#39;s mobile native app is relatively less stable and slower | | In React, data flows only in one way and hence debugging is easy | In Angular, data flows both way i.e it has two-way data binding between children and parent and hence debugging is often difficult |&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of differences are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;201&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why React tab is not showing up in DevTools?&lt;/h3&gt; &lt;p&gt;When the page loads, &lt;em&gt;React DevTools&lt;/em&gt; sets a global named &lt;code&gt;__REACT_DEVTOOLS_GLOBAL_HOOK__&lt;/code&gt;, then React communicates with that hook during initialization. If the website is not using React or if React fails to communicate with DevTools then it won&#39;t show up the tab.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;202&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Styled Components?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;styled-components&lt;/code&gt; is a JavaScript library for styling React applications. It removes the mapping between styles and components, and lets you write actual CSS augmented with JavaScript.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;203&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example of Styled Components?&lt;/h3&gt; &lt;p&gt;Lets create &lt;code&gt;&amp;lt;Title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Wrapper&amp;gt;&lt;/code&gt; components with specific styles for each.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &#39;react&#39;
import styled from &#39;styled-components&#39;

// Create a &amp;lt;Title&amp;gt; component that renders an &amp;lt;h1&amp;gt; which is centered, red and sized at 1.5em
const Title = styled.h1`
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
`

// Create a &amp;lt;Wrapper&amp;gt; component that renders a &amp;lt;section&amp;gt; with some padding and a papayawhip background
const Wrapper = styled.section`
  padding: 4em;
  background: papayawhip;
`
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These two variables, &lt;code&gt;Title&lt;/code&gt; and &lt;code&gt;Wrapper&lt;/code&gt;, are now components that you can render just like any other react component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;&amp;lt;Wrapper&amp;gt;
  &amp;lt;Title&amp;gt;{&#39;Lets start first styled component!&#39;}&amp;lt;/Title&amp;gt;
&amp;lt;/Wrapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;204&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Relay?&lt;/h3&gt; &lt;p&gt;Relay is a JavaScript framework for providing a data layer and client-server communication to web applications using the React view layer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;205&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use TypeScript in &lt;code&gt;create-react-app&lt;/code&gt; application?&lt;/h3&gt; &lt;p&gt;Starting from react-scripts@2.1.0 or higher, there is a built-in support for typescript. i.e, &lt;code&gt;create-react-app&lt;/code&gt; now supports typescript natively. You can just pass &lt;code&gt;--typescript&lt;/code&gt; option as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-react-app my-app --typescript

# or

yarn create react-app my-app --typescript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But for lower versions of react scripts, just supply &lt;code&gt;--scripts-version&lt;/code&gt; option as &lt;code&gt;react-scripts-ts&lt;/code&gt; while you create a new project. &lt;code&gt;react-scripts-ts&lt;/code&gt; is a set of adjustments to take the standard &lt;code&gt;create-react-app&lt;/code&gt; project pipeline and bring TypeScript into the mix.&lt;/p&gt; &lt;p&gt;Now the project layout should look like the following:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;my-app/
├─ .gitignore
├─ images.d.ts
├─ node_modules/
├─ public/
├─ src/
│  └─ ...
├─ package.json
├─ tsconfig.json
├─ tsconfig.prod.json
├─ tsconfig.test.json
└─ tslint.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;206&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the main features of Reselect library?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the main features of Reselect library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Selectors can compute derived data, allowing Redux to store the minimal possible state.&lt;/li&gt; 
   &lt;li&gt;Selectors are efficient. A selector is not recomputed unless one of its arguments changes.&lt;/li&gt; 
   &lt;li&gt;Selectors are composable. They can be used as input to other selectors.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h4&gt;Give an example of Reselect usage?&lt;/h4&gt; &lt;p&gt;Let&#39;s take calculations and different amounts of a shipment order with the simplified usage of Reselect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { createSelector } from &#39;reselect&#39;

const shopItemsSelector = state =&amp;gt; state.shop.items
const taxPercentSelector = state =&amp;gt; state.shop.taxPercent

const subtotalSelector = createSelector(
  shopItemsSelector,
  items =&amp;gt; items.reduce((acc, item) =&amp;gt; acc + item.value, 0)
)

const taxSelector = createSelector(
  subtotalSelector,
  taxPercentSelector,
  (subtotal, taxPercent) =&amp;gt; subtotal * (taxPercent / 100)
)

export const totalSelector = createSelector(
  subtotalSelector,
  taxSelector,
  (subtotal, tax) =&amp;gt; ({ total: subtotal + tax })
)

let exampleState = {
  shop: {
    taxPercent: 8,
    items: [
      { name: &#39;apple&#39;, value: 1.20 },
      { name: &#39;orange&#39;, value: 0.95 },
    ]
  }
}

console.log(subtotalSelector(exampleState)) // 2.15
console.log(taxSelector(exampleState))      // 0.172
console.log(totalSelector(exampleState))    // { total: 2.322 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;209&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does the statics object work with ES6 classes in React?&lt;/h3&gt; &lt;p&gt;No, &lt;code&gt;statics&lt;/code&gt; only works with &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;someComponent= React.createClass({
  statics: {
    someMethod: function() {
      // ..
    }
  }
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can write statics inside ES6+ classes as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
  static propTypes = {
    // ...
  }

  static someMethod() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or writing them outside class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Component extends React.Component {
   ....
}

Component.propTypes = {...}
Component.someMethod = function(){....}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;210&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can Redux only be used with React?&lt;/h3&gt; &lt;p&gt;Redux can be used as a data store for any UI layer. The most common usage is with React and React Native, but there are bindings available for Angular, Angular 2, Vue, Mithril, and more. Redux simply provides a subscription mechanism which can be used by any other code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;211&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do you need to have a particular build tool to use Redux?&lt;/h3&gt; &lt;p&gt;Redux is originally written in ES6 and transpiled for production into ES5 with Webpack and Babel. You should be able to use it regardless of your JavaScript build process. Redux also offers a UMD build that can be used directly without any build process at all.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;212&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How Redux Form &lt;code&gt;initialValues&lt;/code&gt; get updated from state?&lt;/h3&gt; &lt;p&gt;You need to add &lt;code&gt;enableReinitialize : true&lt;/code&gt; setting.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const InitializeFromStateForm = reduxForm({
  form: &#39;initializeFromState&#39;,
  enableReinitialize : true
})(UserEdit)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your &lt;code&gt;initialValues&lt;/code&gt; prop gets updated, your form will update too.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;213&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How React PropTypes allow different types for one prop?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;oneOfType()&lt;/code&gt; method of &lt;code&gt;PropTypes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, the height property can be defined with either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; type as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Component.PropTypes = {
  size: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number
  ])
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;214&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I import an SVG file as react component?&lt;/h3&gt; &lt;p&gt;You can import SVG directly as component instead of loading it as a file. This feature is available with &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { ReactComponent as Logo } from &#39;./logo.svg&#39;

const App = () =&amp;gt; (
  &amp;lt;div&amp;gt;
    {/* Logo is an actual react component */}
    &amp;lt;Logo /&amp;gt;
  &amp;lt;/div&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Don&#39;t forget about the curly braces in the import.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;215&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why are inline ref callbacks or functions not recommended?&lt;/h3&gt; &lt;p&gt;If the ref callback is defined as an inline function, it will get called twice during updates, first with null and then again with the DOM element. This is because a new instance of the function is created with each render, so React needs to clear the old ref and set up the new one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
  handleSubmit = () =&amp;gt; {
    console.log(&quot;Input Value is: &quot;, this.input.value)
  }


  render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={(input) =&amp;gt; this.input = input} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But our expectation is for the ref callback to get called once, when the component mounts. One quick fix is to use the ES7 class property syntax to define the function&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class UserForm extends Component {
 handleSubmit = () =&amp;gt; {
   console.log(&quot;Input Value is: &quot;, this.input.value)
 }

 setSearchInput = (input) =&amp;gt; {
   this.input = input
 }

 render () {
   return (
     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
       &amp;lt;input
         type=&#39;text&#39;
         ref={this.setSearchInput} /&amp;gt; // Access DOM input in handle submit
       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;
     &amp;lt;/form&amp;gt;
   )
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;**Note:** In React v16.3,
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;216&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is render hijacking in react?&lt;/h3&gt; &lt;p&gt;The concept of render hijacking is the ability to control what a component will output from another component. It actually means that you decorate your component by wrapping it into a Higher-Order component. By wrapping you can inject additional props or make other changes, which can cause changing logic of rendering. It does not actually enables hijacking, but by using HOC you make your component behave in different way.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;217&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are HOC factory implementations?&lt;/h3&gt; &lt;p&gt;There are two main ways of implementing HOCs in React.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Props Proxy (PP) and&lt;/li&gt; 
   &lt;li&gt;Inheritance Inversion (II).&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;But they follow different approaches for manipulating the &lt;em&gt;WrappedComponent&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Props Proxy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the render method of the HOC returns a React Element of the type of the WrappedComponent. We also pass through the props that the HOC receives, hence the name &lt;strong&gt;Props Proxy&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;
function ppHOC(WrappedComponent) {
 return class PP extends React.Component {
   render() {
     return &amp;lt;WrappedComponent {...this.props}/&amp;gt;
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Inheritance Inversion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the returned HOC class (Enhancer) extends the WrappedComponent. It is called Inheritance Inversion because instead of the WrappedComponent extending some Enhancer class, it is passively extended by the Enhancer. In this way the relationship between them seems &lt;strong&gt;inverse&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function iiHOC(WrappedComponent) {
 return class Enhancer extends WrappedComponent {
   render() {
     return super.render()
   }
 }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;218&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to pass numbers to React component?&lt;/h3&gt; &lt;p&gt;You should be passing the numbers via curly braces({}) where as strings in quotes&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   React.render(&amp;lt;User age={30} department={&quot;IT&quot;} /&amp;gt;, document.getElementById(&#39;container&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;219&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/h3&gt; &lt;p&gt;It is up to developer decision. i.e, It is developer job to determine what kinds of state make up your application, and where each piece of state should live. Some users prefer to keep every single piece of data in Redux, to maintain a fully serializable and controlled version of their application at all times. Others prefer to keep non-critical or UI state, such as “is this dropdown currently open”, inside a component&#39;s internal state.&lt;/p&gt; &lt;p&gt;Below are the thumb rules to determine what kind of data should be put into Redux&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Do other parts of the application care about this data?&lt;/li&gt; 
   &lt;li&gt;Do you need to be able to create further derived data based on this original data?&lt;/li&gt; 
   &lt;li&gt;Is the same data being used to drive multiple components?&lt;/li&gt; 
   &lt;li&gt;Is there value to you in being able to restore this state to a given point in time (ie, time travel debugging)?&lt;/li&gt; 
   &lt;li&gt;Do you want to cache the data (i.e, use what&#39;s in state if it&#39;s already there instead of re-requesting it)?&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;220&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of registerServiceWorker in React?&lt;/h3&gt; &lt;p&gt;React creates a service worker for you without any configuration by default. The service worker is a web API that helps you cache your assets and other files so that when the user is offline or on slow network, he/she can still see results on the screen, as such, it helps you build a better user experience, that&#39;s what you should know about service worker&#39;s for now. It&#39;s all about adding offline capabilities to your site.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;   import React from &#39;react&#39;;
   import ReactDOM from &#39;react-dom&#39;;
   import App from &#39;./App&#39;;
   import registerServiceWorker from &#39;./registerServiceWorker&#39;;

   ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;root&#39;));
   registerServiceWorker();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;221&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React memo function?&lt;/h3&gt; &lt;p&gt;Class components can be restricted from rendering when their input props are the same using &lt;strong&gt;PureComponent or shouldComponentUpdate&lt;/strong&gt;. Now you can do the same with function components by wrapping them in &lt;strong&gt;React.memo&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const MyComponent = React.memo(function MyComponent(props) {
 /* only rerenders if props change */
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;222&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is React lazy function?&lt;/h3&gt; The &lt;code&gt;React.lazy&lt;/code&gt; function lets you render an dynamic import as a regular component. It will automatically load the bundle containing the OtherComponent when the component gets rendered. This must return a Promise which resolves to a module with a default export containing a React component. &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
 return (
   &amp;lt;div&amp;gt;
     &amp;lt;OtherComponent /&amp;gt;
   &amp;lt;/div&amp;gt;
 );
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; React.lazy and Suspense is not yet available for server-side rendering. If you want to do code-splitting in a server rendered app, we still recommend React Loadable.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;223&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent unnecessary updates using setState?&lt;/h3&gt; &lt;p&gt;You can compare current value of the state with an existing state value and decide whether to rerender the page or not. If the values are same then you need to return &lt;strong&gt;null&lt;/strong&gt; to stop re-rendering otherwise return the latest state value.&lt;/p&gt; &lt;p&gt;For example, the user profile information is conditionally rendered as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;getUserProfile = user =&amp;gt; {
  const latestAddress = user.address;
  this.setState(state =&amp;gt; {
    if (state.address === latestAddress) {
      return null;
    } else {
      return { title: latestAddress };
    }
  });
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;224&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Arrays&lt;/strong&gt;: Unlike older releases, you don&#39;t need to make sure &lt;strong&gt;render&lt;/strong&gt; method return a single element in React16. You are able to return multiple sibling elements without a wrapping element by returning an array.&lt;/p&gt; &lt;p&gt;For example, let us take the below list of developers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const ReactJSDevs = () =&amp;gt; {
  return [
    &amp;lt;li key=&quot;1&quot;&amp;gt;John&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;2&quot;&amp;gt;Jackie&amp;lt;/li&amp;gt;,
    &amp;lt;li key=&quot;3&quot;&amp;gt;Jordan&amp;lt;/li&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also merge this array of items in another array component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;const JSDevs = () =&amp;gt; {
  return (
    &amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;Brad&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;Brodge&amp;lt;/li&amp;gt;
      &amp;lt;ReactJSDevs/&amp;gt;
      &amp;lt;li&amp;gt;Brandon&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Strings and Numbers:&lt;/strong&gt; You can also return string and number type from the render method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;render() {
 return &#39;Welcome to ReactJS questions&#39;;
}
// Number
render() {
 return 2018;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;225&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to use class field declarations syntax in React classes?&lt;/h3&gt; &lt;p&gt;React Class Components can be made much more concise using the class field declarations. You can initialize local state without using the constructor and declare class methods by using arrow functions without the extra need to bind them.&lt;/p&gt; &lt;p&gt;Let&#39;s take a counter example to demonstrate class field declarations for state without using constructor and methods without binding,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;class Counter extends Component {
  state = { value: 0 };

  handleIncrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value + 1
    }));
  };

  handleDecrement = () =&amp;gt; {
    this.setState(prevState =&amp;gt; ({
      value: prevState.value - 1
    }));
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.state.value}

        &amp;lt;button onClick={this.handleIncrement}&amp;gt;+&amp;lt;/button&amp;gt;
        &amp;lt;button onClick={this.handleDecrement}&amp;gt;-&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;226&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are hooks?&lt;/h3&gt; &lt;p&gt;Hooks is a new feature(React 16.8) that lets you use state and other React features without writing a class.&lt;/p&gt; &lt;p&gt;Let&#39;s see an example of useState hook example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import { useState } from &#39;react&#39;;

function Example() {
  // Declare a new state variable, which we&#39;ll call &quot;count&quot;
  const [count, setCount] = useState(0);

  return (
    &amp;lt;div&amp;gt;
      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;
        Click me
      &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;227&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules needs to follow for hooks?&lt;/h3&gt; &lt;p&gt;You need to follow two rules in order to use hooks,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Call Hooks only at the top level of your react functions. i.e, You shouldn’t call Hooks inside loops, conditions, or nested functions. This will ensure that Hooks are called in the same order each time a component renders and it preserves the state of Hooks between multiple useState and useEffect calls.&lt;/li&gt; 
   &lt;li&gt;Call Hooks from React Functions only. i.e, You shouldn’t call Hooks from regular JavaScript functions.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;228&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to ensure hooks followed the rules in your project?&lt;/h3&gt; React team released an ESLint plugin called &lt;strong&gt;eslint-plugin-react-hooks&lt;/strong&gt; that enforces these two rules. You can add this plugin to your project using the below command, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install eslint-plugin-react-hooks@next
&lt;/code&gt;&lt;/pre&gt; And apply the below config in your ESLint config file, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Your ESLint configuration
{
  &quot;plugins&quot;: [
    // ...
    &quot;react-hooks&quot;
  ],
  &quot;rules&quot;: {
    // ...
    &quot;react-hooks/rules-of-hooks&quot;: &quot;error&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; This plugin is intended to use in Create React App by default.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;229&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Flux and Redux?&lt;/h3&gt; &lt;p&gt;Below are the major differences between Flux and Redux&lt;/p&gt; &lt;p&gt;| Flux | Redux | | ----- | ------- | | State is mutable | State is immutable | | The Store contains both state and change logic | The Store and change logic are separate | | There are multiple stores exist | There is only one store exist | | All the stores are disconnected and flat | Single store with hierarchical reducers| | It has a singleton dispatcher | There is no concept of dispatcher | | React components subscribe to the store | Container components uses connect function|&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;230&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of React Router V4?&lt;/h3&gt; &lt;p&gt;Below are the main benefits of React Router V4 module,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;In React Router v4(version 4), the API is completely about components. A router can be visualized as a single component(&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;) which wraps specific child router components(&lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;You don&#39;t need to manually set history. The router module will take care history by wrapping routes with &lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt; component.&lt;/li&gt; 
   &lt;li&gt;The application size is reduced by adding only the specific router module(Web, core, or native)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;231&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycle method is invoked after an error has been thrown by a descendant component. The method receives two parameters,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;error: - The error object which was thrown&lt;/li&gt; 
   &lt;li&gt;info: - An object with a componentStack key contains the information about which component threw the error.&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The method structure would be as follows&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;componentDidCatch(error, info)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;232&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;In which scenarios error boundaries do not catch errors?&lt;/h3&gt; &lt;p&gt;Below are the cases in which error boundaries doesn&#39;t work,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Inside Event handlers&lt;/li&gt; 
   &lt;li&gt;Asynchronous code using &lt;strong&gt;setTimeout or requestAnimationFrame&lt;/strong&gt; callbacks&lt;/li&gt; 
   &lt;li&gt;During Server side rendering&lt;/li&gt; 
   &lt;li&gt;When errors thrown in the error boundary code itself&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;233&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do not you need error boundaries for event handlers?&lt;/h3&gt; &lt;p&gt;Error boundaries do not catch errors inside event handlers. Event handlers don&#39;t happened or invoked during rendering time unlike render method or lifecycle methods. So React knows how to recover these kind of errors in event handlers. If still you need to catch an error inside event handler, use the regular JavaScript try / catch statement as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
  }

  handleClick = () =&amp;gt; {
    try {
      // Do something that could throw
    } catch (error) {
      this.setState({ error });
    }
  }

  render() {
    if (this.state.error) {
      return &amp;lt;h1&amp;gt;Caught an error.&amp;lt;/h1&amp;gt;
    }
    return &amp;lt;div onClick={this.handleClick}&amp;gt;Click Me&amp;lt;/div&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code is catching the error using vanilla javascript try/catch block instead of error boundaries.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;234&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between try catch block and error boundaries?&lt;/h3&gt; &lt;p&gt;Try catch block works with imperative code whereas error boundaries are meant for declarative code to render on the screen.&lt;/p&gt; &lt;p&gt;For example, the try catch block used for below imperative code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
  showButton();
} catch (error) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas error boundaries wrap declarative code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ErrorBoundary&amp;gt;
  &amp;lt;MyComponent /&amp;gt;
&amp;lt;/ErrorBoundary&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;So if an error occurs in a &lt;strong&gt;componentDidUpdate&lt;/strong&gt; method caused by a &lt;strong&gt;setState&lt;/strong&gt; somewhere deep in the tree, it will still correctly propagate to the closest error boundary.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;235&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the behavior of uncaught errors in react 16?&lt;/h3&gt; In React 16, errors that were not caught by any error boundary will result in unmounting of the whole React component tree. The reason behind this decision is that it is worse to leave corrupted UI in place than to completely remove it. For example, it is worse for a payments app to display a wrong amount than to render nothing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;236&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the proper placement for error boundaries?&lt;/h3&gt; The granularity of error boundaries usage is up to the developer based on project needs. You can follow either of these approaches, 
  &lt;ol&gt; 
   &lt;li&gt;You can wrap top-level route components to display a generic error message for the entire application.&lt;/li&gt; 
   &lt;li&gt;You can also wrap individual components in an error boundary to protect them from crashing the rest of the application.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;237&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of component stack trace from error boundary?&lt;/h3&gt; &lt;p&gt;Apart from error messages and javascript stack, React16 will display the component stack trace with file names and line numbers using error boundary concept.&lt;/p&gt; &lt;p&gt;For example, BuggyCounter component displays the component stack trace as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/error_boundary.png&quot; alt=&quot;stacktrace&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;238&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the required method to be defined for a class component?&lt;/h3&gt; The &lt;code&gt;render()&lt;/code&gt; method is the only required method in a class component. i.e, All methods other than render method are optional for a class component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;239&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the possible return types of render method?&lt;/h3&gt; &lt;p&gt;Below are the list of following types used and return from render method,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;React elements:&lt;/strong&gt; Elements that instruct React to render a DOM node. It includes html elements such as &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; and user defined elements.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Arrays and fragments:&lt;/strong&gt; Return multiple elements to render as Arrays and Fragments to wrap multiple elements&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Portals:&lt;/strong&gt; Render children into a different DOM subtree.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;String and numbers:&lt;/strong&gt; Render both Strings and Numbers as text nodes in the DOM&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans or null:&lt;/strong&gt; Doesn&#39;t render anything but these types are used to conditionally render content.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;240&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the main purpose of constructor?&lt;/h3&gt; &lt;p&gt;The constructor is mainly used for two purposes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;To initialize local state by assigning object to this.state&lt;/li&gt; 
   &lt;li&gt;For binding event handler methods to the instance For example, the below code covers both the above cases,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;constructor(props) {
  super(props);
  // Don&#39;t call this.setState() here!
  this.state = { counter: 0 };
  this.handleClick = this.handleClick.bind(this);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;241&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it mandatory to define constructor for React component?&lt;/h3&gt; No, it is not mandatory. i.e, If you don’t initialize state and you don’t bind methods, you don’t need to implement a constructor for your React component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;242&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are default props?&lt;/h3&gt; &lt;p&gt;The defaultProps are defined as a property on the component class to set the default props for the class. This is used for undefined props, but not for null props.&lt;/p&gt; &lt;p&gt;For example, let us create color default prop for the button component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyButton extends React.Component {
  // ...
}

MyButton.defaultProps = {
  color: &#39;red&#39;
};

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If props.color is not provided then it will set the default value to &#39;red&#39;. i.e, Whenever you try to access the color prop it uses default value&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
   return &amp;lt;MyButton /&amp;gt; ; // props.color will be set to red
 }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you provide null value then it remains null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;243&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why should not call setState in componentWillUnmount?&lt;/h3&gt; You should not call &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillUnmount()&lt;/code&gt; because once a component instance is unmounted, it will never be mounted again.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;244&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of getDerivedStateFromError?&lt;/h3&gt; &lt;p&gt;This lifecycle method is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.&lt;/p&gt; &lt;p&gt;The signature of the lifecycle method is as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;static getDerivedStateFromError(error)
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let us take error boundary use case with the above lifecycle method for demonistration purpose,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  render() {
    if (this.state.hasError) {
      // You can render any custom fallback UI
      return &amp;lt;h1&amp;gt;Something went wrong.&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;245&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the methods order when component re-rendered?&lt;/h3&gt; &lt;p&gt;An update can be caused by changes to props or state. The below methods are called in the following order when a component is being re-rendered.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromProps()&lt;/li&gt; 
   &lt;li&gt;shouldComponentUpdate()&lt;/li&gt; 
   &lt;li&gt;render()&lt;/li&gt; 
   &lt;li&gt;getSnapshotBeforeUpdate()&lt;/li&gt; 
   &lt;li&gt;componentDidUpdate()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;246&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the methods invoked during error handling?&lt;/h3&gt; &lt;p&gt;Below methods are called when there is an error during rendering, in a lifecycle method, or in the constructor of any child component.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;static getDerivedStateFromError()&lt;/li&gt; 
   &lt;li&gt;componentDidCatch()&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;247&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of displayName class property?&lt;/h3&gt; &lt;p&gt;The displayName string is used in debugging messages. Usually, you don’t need to set it explicitly because it’s inferred from the name of the function or class that defines the component. You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a higher-order component.&lt;/p&gt; &lt;p&gt;For example, To ease debugging, choose a display name that communicates that it’s the result of a withSubscription HOC.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withSubscription(WrappedComponent) {
  class WithSubscription extends React.Component {/* ... */}
  WithSubscription.displayName = `WithSubscription(${getDisplayName(WrappedComponent)})`;
  return WithSubscription;
}
function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || &#39;Component&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;248&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the browser support for react applications?&lt;/h3&gt; React supports all popular browsers, including Internet Explorer 9 and above, although some polyfills are required for older browsers such as IE 9 and IE 10. If you use &lt;strong&gt;es5-shim and es5-sham&lt;/strong&gt; polyfill then it even support old browsers that doesn&#39;t support ES5 methods.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;249&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of unmountComponentAtNode method?&lt;/h3&gt; &lt;p&gt;This method is available from react-dom package and it removes a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns true if a component was unmounted and false if there was no component to unmount.&lt;/p&gt; &lt;p&gt;The method signature would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;ReactDOM.unmountComponentAtNode(container)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;250&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is code-splitting?&lt;/h3&gt; &lt;p&gt;Code-Splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime. The react project supports code splitting via dynamic import() feature.&lt;/p&gt; &lt;p&gt;For example, in the below code snippets, it will make moduleA.js and all its unique dependencies as a separate chunk that only loads after the user clicks the &#39;Load&#39; button. &lt;strong&gt;moduleA.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const moduleA = &#39;Hello&#39;;

export { moduleA };
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;

class App extends Component {
  handleClick = () =&amp;gt; {
    import(&#39;./moduleA&#39;)
      .then(({ moduleA }) =&amp;gt; {
        // Use moduleA
      })
      .catch(err =&amp;gt; {
        // Handle failure
      });
  };

  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;button onClick={this.handleClick}&amp;gt;Load&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

export default App;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;251&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the benefit of strict mode?&lt;/h3&gt; &lt;p&gt;The 
   &lt;!-- raw HTML omitted --&gt; will be helpful in the below cases&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Identifying components with &lt;strong&gt;unsafe lifecycle methods&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Warning about &lt;strong&gt;legacy string ref&lt;/strong&gt; API usage.&lt;/li&gt; 
   &lt;li&gt;Detecting unexpected &lt;strong&gt;side effects&lt;/strong&gt;.&lt;/li&gt; 
   &lt;li&gt;Detecting &lt;strong&gt;legacy context&lt;/strong&gt; API.&lt;/li&gt; 
   &lt;li&gt;Warning about deprecated findDOMNode usage&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;252&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are Keyed Fragments?&lt;/h3&gt; &lt;p&gt;The Fragments declared with the explicit &amp;lt;React.Fragment&amp;gt; syntax may have keys. The general use case is mapping a collection to an array of fragments as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Glossary(props) {
  return (
    &amp;lt;dl&amp;gt;
      {props.items.map(item =&amp;gt; (
        // Without the `key`, React will fire a key warning
        &amp;lt;React.Fragment key={item.id}&amp;gt;
          &amp;lt;dt&amp;gt;{item.term}&amp;lt;/dt&amp;gt;
          &amp;lt;dd&amp;gt;{item.description}&amp;lt;/dd&amp;gt;
        &amp;lt;/React.Fragment&amp;gt;
      ))}
    &amp;lt;/dl&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; key is the only attribute that can be passed to Fragment. In the future, there might be a support for additional attributes, such as event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;253&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Does React support all HTML attributes?&lt;/h3&gt; &lt;p&gt;As of React 16, both standard or custom DOM attributes are fully supported. Since React components often take both custom and DOM-related props, React uses the camelCase convention just like the DOM APIs.&lt;/p&gt; &lt;p&gt;Let us take few props with respect to standard HTML attributes,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div tabIndex=&quot;-1&quot; /&amp;gt;      // Just like node.tabIndex DOM API
&amp;lt;div className=&quot;Button&quot; /&amp;gt; // Just like node.className DOM API
&amp;lt;input readOnly={true} /&amp;gt;  // Just like node.readOnly DOM API
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These props work similarly to the corresponding HTML attributes, with the exception of the special cases. It also support all SVG attributes.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;254&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the limitations with HOCs?&lt;/h3&gt; &lt;p&gt;Higher-order components come with a few caveats apart from its benefits. Below are the few listed in an order,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Don’t use HOCs inside the render method:&lt;/strong&gt; It is not recommended to apply a HOC to a component within the render method of a component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  // A new version of EnhancedComponent is created on every render
  // EnhancedComponent1 !== EnhancedComponent2
  const EnhancedComponent = enhance(MyComponent);
  // That causes the entire subtree to unmount/remount each time!
  return &amp;lt;EnhancedComponent /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code impact performance by remounting a component that causes the state of that component and all of its children to be lost. Instead, apply HOCs outside the component definition so that the resulting component is created only once.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static methods must be copied over:&lt;/strong&gt; When you apply a HOC to a component the new component does not have any of the static methods of the original component&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Define a static method
WrappedComponent.staticMethod = function() {/*...*/}
// Now apply a HOC
const EnhancedComponent = enhance(WrappedComponent);

// The enhanced component has no static method
typeof EnhancedComponent.staticMethod === &#39;undefined&#39; // true
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can overcome this by copying the methods onto the container before returning it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function enhance(WrappedComponent) {
  class Enhance extends React.Component {/*...*/}
  // Must know exactly which method(s) to copy :(
  Enhance.staticMethod = WrappedComponent.staticMethod;
  return Enhance;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Refs aren’t passed through:&lt;/strong&gt; For HOCs you need to pass through all props to the wrapped component but this does not work for refs. This is because ref is not really a prop similar to key. In this case you need to use the React.forwardRef API&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;255&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to debug forwardRefs in DevTools?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React.forwardRef&lt;/strong&gt; accepts a render function as parameter and DevTools uses this function to determine what to display for the ref forwarding component.&lt;/p&gt; &lt;p&gt;For example, If you don&#39;t name the render function or not using displayName property then it will appear as ”ForwardRef” in the DevTools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef((props, ref) =&amp;gt; {
  return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But If you name the render function then it will appear as &lt;strong&gt;”ForwardRef(myFunction)”&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const WrappedComponent = React.forwardRef(
  function myFunction(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As an alternative, You can also set displayName property for forwardRef function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function logProps(Component) {
  class LogProps extends React.Component {
    // ...
  }

  function forwardRef(props, ref) {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  }

  // Give this component a more helpful display name in DevTools.
  // e.g. &quot;ForwardRef(logProps(MyComponent))&quot;
  const name = Component.displayName || Component.name;
  forwardRef.displayName = `logProps(${name})`;

  return React.forwardRef(forwardRef);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;256&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When component props defaults to true?&lt;/h3&gt; &lt;p&gt;If you pass no value for a prop, it defaults to true. This behavior is available so that it matches the behavior of HTML.&lt;/p&gt; &lt;p&gt;For example, below expressions are equivalent,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyInput autocomplete /&amp;gt;

&amp;lt;MyInput autocomplete={true} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is not recommended to use this approach because it can be confused with the ES6 object shorthand (example, &lt;code&gt;{name}&lt;/code&gt; which is short for &lt;code&gt;{name: name}&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;257&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is NextJS and major features of it?&lt;/h3&gt; &lt;p&gt;Next.js is a popular and lightweight framework for static and server‑rendered applications built with React. It also provides styling and routing solutions. Below are the major features provided by NextJS,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Server-rendered by default&lt;/li&gt; 
   &lt;li&gt;Automatic code splitting for faster page loads&lt;/li&gt; 
   &lt;li&gt;Simple client-side routing (page based)&lt;/li&gt; 
   &lt;li&gt;Webpack-based dev environment which supports (HMR)&lt;/li&gt; 
   &lt;li&gt;Able to implement with Express or any other Node.js HTTP server&lt;/li&gt; 
   &lt;li&gt;Customizable with your own Babel and Webpack configurations&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;258&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass an event handler to a component?&lt;/h3&gt; &lt;p&gt;You can pass event handlers and other functions as props to child components. It can be used in child component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;259&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it good to use arrow functions in render methods?&lt;/h3&gt; &lt;p&gt;Yes, You can use. It is often the easiest way to pass parameters to callback functions. But you need to optimize the performance while using it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Foo extends Component {
  handleClick() {
    console.log(&#39;Click happened&#39;);
  }
  render() {
    return &amp;lt;button onClick={() =&amp;gt; this.handleClick()}&amp;gt;Click Me&amp;lt;/button&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using an arrow function in render method creates a new function each time the component renders, which may have performance implications&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;260&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent a function from being called multiple times?&lt;/h3&gt; &lt;p&gt;If you use an event handler such as &lt;strong&gt;onClick or onScroll&lt;/strong&gt; and want to prevent the callback from being fired too quickly, then you can limit the rate at which callback is executed. This can be achieved in the below possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Throttling:&lt;/strong&gt; Changes based on a time based frequency. For example, it can be used using _.throttle lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Debouncing:&lt;/strong&gt; Publish changes after a period of inactivity. For example, it can be used using _.debounce lodash function&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;RequestAnimationFrame throttling:&lt;/strong&gt; Changes based on requestAnimationFrame. For example, it can be used using raf-schd lodash function&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;261&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How JSX prevents Injection Attacks?&lt;/h3&gt; &lt;p&gt;React DOM escapes any values embedded in JSX before rendering them. Thus it ensures that you can never inject anything that’s not explicitly written in your application. Everything is converted to a string before being rendered.&lt;/p&gt; &lt;p&gt;For example, you can embed user input as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const name = response.potentiallyMaliciousInput;
const element = &amp;lt;h1&amp;gt;{name}&amp;lt;/h1&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way you can prevent XSS(Cross-site-scripting) attacks in the application.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;262&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you update rendered elements?&lt;/h3&gt; &lt;p&gt;You can update UI(represented by rendered element) by passing the newly created element to ReactDOM&#39;s render method.&lt;/p&gt; &lt;p&gt;For example, lets take a ticking clock example, where it updates the time by calling render method multiple times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function tick() {
  const element = (
    &amp;lt;div&amp;gt;
      &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;
      &amp;lt;h2&amp;gt;It is {new Date().toLocaleTimeString()}.&amp;lt;/h2&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  ReactDOM.render(element, document.getElementById(&#39;root&#39;));
}

setInterval(tick, 1000);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;263&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that props are read only?&lt;/h3&gt; &lt;p&gt;When you declare a component as a function or a class, it must never modify its own props.&lt;/p&gt; &lt;p&gt;Let us take a below capital function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function capital(amount, interest) {
   return amount + interest;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above function is called “pure” because it does not attempt to change their inputs, and always return the same result for the same inputs. Hence, React has a single rule saying &quot;All React components must act like pure functions with respect to their props.&quot;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;264&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you say that state updates are merged?&lt;/h3&gt; &lt;p&gt;When you call setState() in the component, React merges the object you provide into the current state.&lt;/p&gt; &lt;p&gt;For example, let us take a facebook user with posts and comments details as state variables,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;  constructor(props) {
    super(props);
    this.state = {
      posts: [],
      comments: []
    };
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now you can update them independently with separate &lt;code&gt;setState()&lt;/code&gt; calls as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; componentDidMount() {
    fetchPosts().then(response =&amp;gt; {
      this.setState({
        posts: response.posts
      });
    });

    fetchComments().then(response =&amp;gt; {
      this.setState({
        comments: response.comments
      });
    });
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code snippets, &lt;code&gt;this.setState({comments})&lt;/code&gt; updates only comments variable without modifying or replacing posts variable.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;265&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you pass arguments to an event handler?&lt;/h3&gt; &lt;p&gt;During iterations or loops, it is common to pass an extra parameter to an event handler. This can be achieved through arrow functions or bind method.&lt;/p&gt; &lt;p&gt;Let us take an example of user details updated in a grid,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;button onClick={(e) =&amp;gt; this.updateUser(userId, e)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&amp;lt;button onClick={this.updateUser.bind(this, userId)}&amp;gt;Update User details&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In both the approaches, the synthetic argument e is passed as a second argument. You need to pass it explicitly for arrow functions and it forwarded automatically for bind method.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;266&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to prevent component from rendering?&lt;/h3&gt; &lt;p&gt;You can prevent component from rendering by returning null based on specific condition. This way it can conditionally render component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Greeting(props) {
  if (!props.loggedIn) {
    return null;
  }

  return (
    &amp;lt;div className=&quot;greeting&quot;&amp;gt;
      welcome, {props.name}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class User extends React.Component {
  constructor(props) {
    super(props);
    this.state = {loggedIn: false, name: &#39;John&#39;};
  }

  render() {
   return (
       &amp;lt;div&amp;gt;
         //Prevent component render if it is not loggedIn
         &amp;lt;Greeting loggedIn={this.state.loggedIn} /&amp;gt;
         &amp;lt;UserDetails name={this.state.name}&amp;gt;
       &amp;lt;/div&amp;gt;
   );
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above example, the greeting component skips its rendering section by applying condition and returning null value.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;267&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the conditions to safely use the index as a key?&lt;/h3&gt; &lt;p&gt;There are three conditions to make sure, it is safe use the index as a key.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The list and items are static– they are not computed and do not change&lt;/li&gt; 
   &lt;li&gt;The items in the list have no ids&lt;/li&gt; 
   &lt;li&gt;The list is never reordered or filtered.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;268&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it keys should be globally unique?&lt;/h3&gt; &lt;p&gt;Keys used within arrays should be unique among their siblings but they don’t need to be globally unique. i.e, You can use the same keys with two different arrays.&lt;/p&gt; &lt;p&gt;For example, the below book component uses two arrays with different arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function Book(props) {
  const index = (
    &amp;lt;ul&amp;gt;
      {props.pages.map((page) =&amp;gt;
        &amp;lt;li key={page.id}&amp;gt;
          {page.title}
        &amp;lt;/li&amp;gt;
      )}
    &amp;lt;/ul&amp;gt;
  );
  const content = props.pages.map((page) =&amp;gt;
    &amp;lt;div key={page.id}&amp;gt;
      &amp;lt;h3&amp;gt;{page.title}&amp;lt;/h3&amp;gt;
      &amp;lt;p&amp;gt;{page.content}&amp;lt;/p&amp;gt;
      &amp;lt;p&amp;gt;{page.pageNumber}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  );
  return (
    &amp;lt;div&amp;gt;
      {index}
      &amp;lt;hr /&amp;gt;
      {content}
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;269&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the popular choice for form handling?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Formik&lt;/code&gt; is a form library for react which provides solutions such as validation, keeping track of the visited fields, and handling form submission.&lt;/p&gt; &lt;p&gt;In detail, You can categorize them as follows,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;It is used to create a scalable, performant, form helper with a minimal API to solve annoying stuff.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;270&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the advantages of formik over redux form library?&lt;/h3&gt; &lt;p&gt;Below are the main reasons to recommend formik over redux form library,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The form state is inherently short-term and local, so tracking it in Redux (or any kind of Flux library) is unnecessary.&lt;/li&gt; 
   &lt;li&gt;Redux-Form calls your entire top-level Redux reducer multiple times ON EVERY SINGLE KEYSTROKE. This way it increases input latency for large apps.&lt;/li&gt; 
   &lt;li&gt;Redux-Form is 22.5 kB minified gzipped whereas Formik is 12.7 kB&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;271&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you not required to use inheritance?&lt;/h3&gt; In React, it is recommend using composition instead of inheritance to reuse code between components. Both Props and composition give you all the flexibility you need to customize a component’s look and behavior in an explicit and safe way. Whereas, If you want to reuse non-UI functionality between components, it is suggested to extracting it into a separate JavaScript module. Later components import it and use that function, object, or a class, without extending it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;272&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use web components in react application?&lt;/h3&gt; &lt;p&gt;Yes, you can use web components in a react application. Even though many developers won&#39;t use this combination, it may require especially if you are using third-party UI components that are written using Web Components.&lt;/p&gt; &lt;p&gt;For example, let us use &lt;code&gt;Vaadin&lt;/code&gt; date picker web component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { Component } from &#39;react&#39;;
import &#39;./App.css&#39;;
import &#39;@vaadin/vaadin-date-picker&#39;;
class App extends Component {
  render() {
    return (
      &amp;lt;div className=&quot;App&quot;&amp;gt;
        &amp;lt;vaadin-date-picker label=&quot;When were you born?&quot;&amp;gt;&amp;lt;/vaadin-date-picker&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;273&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is dynamic import?&lt;/h3&gt; &lt;p&gt;The dynamic import() syntax is a ECMAScript proposal not currently part of the language standard. It is expected to be accepted in the near future. You can achieve code-splitting into your app using dynamic import.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of addition,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { add } from &#39;./math&#39;;
console.log(add(10, 20));
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Dynamic Import&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import(&quot;./math&quot;).then(math =&amp;gt; {
  console.log(math.add(10, 20));
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;274&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are loadable components?&lt;/h3&gt; &lt;p&gt;If you want to do code-splitting in a server rendered app, it is recommend to use Loadable Components because React.lazy and Suspense is not yet available for server-side rendering. Loadable lets you render a dynamic import as a regular component.&lt;/p&gt; &lt;p&gt;Lets take an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import loadable from &#39;@loadable/component&#39;

const OtherComponent = loadable(() =&amp;gt; import(&#39;./OtherComponent&#39;))

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;OtherComponent /&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now OtherComponent will be loaded in a separated bundle&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;275&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is suspense component?&lt;/h3&gt; &lt;p&gt;If the module containing the dynamic import is not yet loaded by the time parent component renders, you must show some fallback content while you’re waiting for it to load using a loading indicator. This can be done using &lt;strong&gt;Suspense&lt;/strong&gt; component.&lt;/p&gt; &lt;p&gt;For example, the below code uses suspense component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
        &amp;lt;OtherComponent /&amp;gt;
      &amp;lt;/Suspense&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code, Suspense is wrapped above the lazy component.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;276&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is route based code splitting?&lt;/h3&gt; &lt;p&gt;One of the best place to do code splitting is with routes. The entire page is going to re-render at once so users are unlikely to interact with other elements in the page at the same time. Due to this, the user experience won&#39;t be disturbed.&lt;/p&gt; &lt;p&gt;Let us take an example of route based website using libraries like React Router with React.lazy,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { BrowserRouter as Router, Route, Switch } from &#39;react-router-dom&#39;;
import React, { Suspense, lazy } from &#39;react&#39;;

const Home = lazy(() =&amp;gt; import(&#39;./routes/Home&#39;));
const About = lazy(() =&amp;gt; import(&#39;./routes/About&#39;));

const App = () =&amp;gt; (
  &amp;lt;Router&amp;gt;
    &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route exact path=&quot;/&quot; component={Home}/&amp;gt;
        &amp;lt;Route path=&quot;/about&quot; component={About}/&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/Suspense&amp;gt;
  &amp;lt;/Router&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, the code splitting will happen at each route level.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;277&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Give an example on How to use context?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt; is designed to share data that can be considered &lt;strong&gt;global&lt;/strong&gt; for a tree of React components.&lt;/p&gt; &lt;p&gt;For example, in the code below lets manually thread through a “theme” prop in order to style the Button component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;//Lets create a context with a default theme value &quot;luna&quot;
const ThemeContext = React.createContext(&#39;luna&#39;);
// Create App component where it uses provider to pass theme value in the tree
class App extends React.Component {
  render() {
    return (
      &amp;lt;ThemeContext.Provider value=&quot;nova&quot;&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/ThemeContext.Provider&amp;gt;
    );
  }
}
// A middle component where you don&#39;t need to pass theme prop anymore
function Toolbar(props) {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;ThemedButton /&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// Lets read theme value in the button component to use
class ThemedButton extends React.Component {
  static contextType = ThemeContext;
  render() {
    return &amp;lt;Button theme={this.context} /&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;278&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of default value in context?&lt;/h3&gt; &lt;p&gt;The defaultValue argument is only used when a component does not have a matching Provider above it in the tree. This can be helpful for testing components in isolation without wrapping them.&lt;/p&gt; &lt;p&gt;Below code snippet provides default theme value as Luna.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const MyContext = React.createContext(defaultValue);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;279&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you use contextType?&lt;/h3&gt; &lt;p&gt;ContextType is used to consume the context object. The contextType property can be used in two ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;contextType as property of class:&lt;/strong&gt; The contextType property on a class can be assigned a Context object created by React.createContext(). After that, you can consume the nearest current value of that Context type using this.context in any of the lifecycle methods and render function.&lt;/p&gt; &lt;p&gt;Lets assign contextType property on MyClass as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  componentDidMount() {
    let value = this.context;
    /* perform a side-effect at mount using the value of MyContext */
  }
  componentDidUpdate() {
    let value = this.context;
    /* ... */
  }
  componentWillUnmount() {
    let value = this.context;
    /* ... */
  }
  render() {
    let value = this.context;
    /* render something based on the value of MyContext */
  }
}
MyClass.contextType = MyContext;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static field&lt;/strong&gt; You can use a static class field to initialize your contextType using public class field syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class MyClass extends React.Component {
  static contextType = MyContext;
  render() {
    let value = this.context;
    /* render something based on the value */
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;280&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is a consumer?&lt;/h3&gt; &lt;p&gt;A Consumer is a React component that subscribes to context changes. It requires a function as a child which receives current context value as argument and returns a react node. The value argument passed to the function will be equal to the value prop of the closest Provider for this context above in the tree.&lt;/p&gt; &lt;p&gt;Lets take a simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;MyContext.Consumer&amp;gt;
  {value =&amp;gt; /* render something based on the context value */}
&amp;lt;/MyContext.Consumer&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;281&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you solve performance corner cases while using context?&lt;/h3&gt; &lt;p&gt;The context uses reference identity to determine when to re-render, there are some gotchas that could trigger unintentional renders in consumers when a provider’s parent re-renders.&lt;/p&gt; &lt;p&gt;For example, the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  render() {
    return (
      &amp;lt;Provider value={{something: &#39;something&#39;}}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can be solved by lifting up the value to parent state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: {something: &#39;something&#39;},
    };
  }

  render() {
    return (
      &amp;lt;Provider value={this.state.value}&amp;gt;
        &amp;lt;Toolbar /&amp;gt;
      &amp;lt;/Provider&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;282&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of forward ref in HOCs?&lt;/h3&gt; &lt;p&gt;Refs will not get passed through because ref is not a prop. It handled differently by React just like &lt;strong&gt;key&lt;/strong&gt;. If you add a ref to a HOC, the ref will refer to the outermost container component, not the wrapped component. In this case, you can use Forward Ref API. For example, we can explicitly forward refs to the inner FancyButton component using the React.forwardRef API.&lt;/p&gt; &lt;p&gt;The below HOC logs all props,&lt;/p&gt; &lt;pre&gt;&lt;code&gt;```javascript
function logProps(Component) {
  class LogProps extends React.Component {
    componentDidUpdate(prevProps) {
      console.log(&#39;old props:&#39;, prevProps);
      console.log(&#39;new props:&#39;, this.props);
    }

    render() {
      const {forwardedRef, ...rest} = this.props;

      // Assign the custom prop &quot;forwardedRef&quot; as a ref
      return &amp;lt;Component ref={forwardedRef} {...rest} /&amp;gt;;
    }
  }

  return React.forwardRef((props, ref) =&amp;gt; {
    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;
  });
}
```
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s use this HOC to log all props that get passed to our “fancy button” component,&lt;/p&gt; &lt;pre&gt;&lt;code&gt;```javascript
class FancyButton extends React.Component {
  focus() {
    // ...
  }

  // ...
}
export default logProps(FancyButton);
```
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now lets create a ref and pass it to FancyButton component. In this case, you can set focus to button element.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;```javascript
import FancyButton from &#39;./FancyButton&#39;;

const ref = React.createRef();
ref.current.focus();
&amp;lt;FancyButton
  label=&quot;Click Me&quot;
  handleClick={handleClick}
  ref={ref}
/&amp;gt;;
```
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;283&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it ref argument available for all functions or class components?&lt;/h3&gt; Regular function or class components don’t receive the ref argument, and ref is not available in props either. The second ref argument only exists when you define a component with React.forwardRef call.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;284&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do you need additional care for component libraries while using forward refs?&lt;/h3&gt; When you start using forwardRef in a component library, you should treat it as a breaking change and release a new major version of your library. This is because your library likely has a different behavior such as what refs get assigned to, and what types are exported. These changes can break apps and other libraries that depend on the old behavior.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;285&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to create react class components without ES6?&lt;/h3&gt; &lt;p&gt;If you don’t use ES6 then you may need to use the create-react-class module instead. For default props, you need to define getDefaultProps() as a function on the passed object. Whereas for initial state, you have to provide a separate getInitialState method that returns the initial state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var Greeting = createReactClass({
  getDefaultProps: function() {
      return {
        name: &#39;Jhohn&#39;
      };
    },
  getInitialState: function() {
      return {message: this.props.message};
    },
  handleClick: function() {
     console.log(this.state.message);
  },
  render: function() {
    return &amp;lt;h1&amp;gt;Hello, {this.props.name}&amp;lt;/h1&amp;gt;;
  }
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use createReactClass then auto binding is available for all methods. i.e, You don&#39;t need to use &lt;code&gt;.bind(this)&lt;/code&gt; with in constructor for event handlers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;286&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it possible to use react without JSX?&lt;/h3&gt; &lt;p&gt;Yes, JSX is not mandatory for using React. Actually it is convenient when you don’t want to set up compilation in your build environment. Each JSX element is just syntactic sugar for calling &lt;code&gt;React.createElement(component, props, ...children)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take a greeting example with JSX,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return &amp;lt;div&amp;gt;Hello {this.props.message}&amp;lt;/div&amp;gt;;
  }
}

ReactDOM.render(
  &amp;lt;Greeting message=&quot;World&quot; /&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the same code without JSX as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Greeting extends React.Component {
  render() {
    return React.createElement(&#39;div&#39;, null, `Hello ${this.props.message}`);
  }
}

ReactDOM.render(
  React.createElement(Greeting, {message: &#39;World&#39;}, null),
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;287&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is diffing algorithm?&lt;/h3&gt; &lt;p&gt;React needs to use algorithms to find out how to efficiently update the UI to match the most recent tree. The diffing algorithms is generating the minimum number of operations to transform one tree into another. However, the algorithms have a complexity in the order of O(n3) where n is the number of elements in the tree.&lt;/p&gt; &lt;p&gt;In this case, for displaying 1000 elements would require in the order of one billion comparisons. This is far too expensive. Instead, React implements a heuristic O(n) algorithm based on two assumptions:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Two elements of different types will produce different trees.&lt;/li&gt; 
   &lt;li&gt;The developer can hint at which child elements may be stable across different renders with a key prop.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;288&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the rules covered by diffing algorithm?&lt;/h3&gt; &lt;p&gt;When diffing two trees, React first compares the two root elements. The behavior is different depending on the types of the root elements. It covers the below rules during reconciliation algorithm,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Elements Of Different Types:&lt;/strong&gt; Whenever the root elements have different types, React will tear down the old tree and build the new tree from scratch. For example, elements 
    &lt;!-- raw HTML omitted --&gt; to 
    &lt;!-- raw HTML omitted --&gt;, or from 
    &lt;!-- raw HTML omitted --&gt; to 
    &lt;!-- raw HTML omitted --&gt; of different types lead a full rebuild.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;DOM Elements Of The Same Type:&lt;/strong&gt; When comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes. Lets take an example with same DOM elements except className attribute, &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div className=&quot;show&quot; title=&quot;ReactJS&quot; /&amp;gt;

&amp;lt;div className=&quot;hide&quot; title=&quot;ReactJS&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Component Elements Of The Same Type:&lt;/strong&gt; When a component updates, the instance stays the same, so that state is maintained across renders. React updates the props of the underlying component instance to match the new element, and calls componentWillReceiveProps() and componentWillUpdate() on the underlying instance. After that, the render() method is called and the diff algorithm recurses on the previous result and the new result.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Recursing On Children:&lt;/strong&gt; when recursing on the children of a DOM node, React just iterates over both lists of children at the same time and generates a mutation whenever there’s a difference. For example, when adding an element at the end of the children, converting between these two trees works well. &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;third&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Handling keys:&lt;/strong&gt; React supports a key attribute. When children have keys, React uses the key to match children in the original tree with children in the subsequent tree. For example, adding a key can make the tree conversion efficient,&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul&amp;gt;
  &amp;lt;li key=&quot;2014&quot;&amp;gt;Connecticut&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2015&quot;&amp;gt;Duke&amp;lt;/li&amp;gt;
  &amp;lt;li key=&quot;2016&quot;&amp;gt;Villanova&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;289&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;When do you need to use refs?&lt;/h3&gt; &lt;p&gt;There are few use cases to go for refs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Managing focus, text selection, or media playback.&lt;/li&gt; 
   &lt;li&gt;Triggering imperative animations.&lt;/li&gt; 
   &lt;li&gt;Integrating with third-party DOM libraries.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;290&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it prop must be named as render for render props?&lt;/h3&gt; &lt;p&gt;Even though the pattern named render props, you don’t have to use a prop named render to use this pattern. i.e, Any prop that is a function that a component uses to know what to render is technically a “render prop”. Lets take an example with the children prop for render props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse children={mouse =&amp;gt; (
  &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Actually children prop doesn’t need to be named in the list of “attributes” in JSX element. Instead, you can keep it directly inside element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;Mouse&amp;gt;
  {mouse =&amp;gt; (
    &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;
  )}
&amp;lt;/Mouse&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While using this above technique(without any name), explicitly state that children should be a function in your propTypes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Mouse.propTypes = {
  children: PropTypes.func.isRequired
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;291&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the problems of using render props with pure components?&lt;/h3&gt; If you create a function inside a render method, it negates the purpose of pure component. Because the shallow prop comparison will always return false for new props, and each render in this case will generate a new value for the render prop. You can solve this issue by defining the render function as instance method.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;292&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you create HOC using render props?&lt;/h3&gt; &lt;p&gt;You can implement most higher-order components (HOC) using a regular component with a render prop. For example, if you would prefer to have a withMouse HOC instead of a 
   &lt;!-- raw HTML omitted --&gt; component, you could easily create one using a regular 
   &lt;!-- raw HTML omitted --&gt; with a render prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function withMouse(Component) {
  return class extends React.Component {
    render() {
      return (
        &amp;lt;Mouse render={mouse =&amp;gt; (
          &amp;lt;Component {...this.props} mouse={mouse} /&amp;gt;
        )}/&amp;gt;
      );
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way render props gives the flexibility of using either pattern.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;293&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is windowing technique?&lt;/h3&gt; Windowing is a technique that only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created. If your application renders long lists of data then this technique is recommended. Both react-window and react-virtualized are popular windowing libraries which provides several reusable components for displaying lists, grids, and tabular data.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;294&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you print falsy values in JSX?&lt;/h3&gt; &lt;p&gt;The falsy values such as false, null, undefined, and true are valid children but they don&#39;t render anything. If you still want to display them then you need to convert it to string. Let&#39;s take an example on how to convert to a string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;lt;div&amp;gt;
  My JavaScript variable is {String(myVariable)}.
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;295&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the typical use case of portals?&lt;/h3&gt; &lt;p&gt;React portals are very useful when a parent component has overflow: hidden or has properties that affect the stacking context(z-index,position,opacity etc styles) and you need to visually “break out” of its container.&lt;/p&gt; &lt;p&gt;For example, dialogs, global message notifications, hovercards, and tooltips.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;296&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you set default value for uncontrolled component?&lt;/h3&gt; &lt;p&gt;In React, the value attribute on form elements will override the value in the DOM. With an uncontrolled component, you might want React to specify the initial value, but leave subsequent updates uncontrolled. To handle this case, you can specify a &lt;strong&gt;defaultValue&lt;/strong&gt; attribute instead of &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;render() {
  return (
    &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;
      &amp;lt;label&amp;gt;
        User Name:
        &amp;lt;input
          defaultValue=&quot;John&quot;
          type=&quot;text&quot;
          ref={this.input} /&amp;gt;
      &amp;lt;/label&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
    &amp;lt;/form&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The same applies for &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textArea&lt;/code&gt; inputs. But you need to use &lt;strong&gt;defaultChecked&lt;/strong&gt; for &lt;code&gt;checkbox&lt;/code&gt; and &lt;code&gt;radio&lt;/code&gt; inputs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;297&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is your favorite React stack?&lt;/h3&gt; Even though the tech stack varies from developer to developer, the most popular stack is used in react boilerplate project code. It mainly uses Redux and redux-saga for state management and asynchronous side-effects, react-router for routing purpose, styled-components for styling react components, axios for invoking REST api, and other supported stack such as webpack, reselect, ESNext, Babel. You can clone the project https://github.com/react-boilerplate/react-boilerplate and start working on any new react project.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;298&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Real DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Real DOM and Virtual DOM,&lt;/p&gt; &lt;p&gt;| Real DOM | Virtual DOM | | ----- | ------- | | Updates are slow | Updates are fast | | DOM manipulation is very expensive. | DOM manipulation is very easy | | You can update HTML directly. | You Can’t directly update HTML | | It causes too much of memory wastage | There is no memory wastage| | Creates a new DOM if element updates | It updates the JSX if element update|&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;299&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to add Bootstrap to a react application?&lt;/h3&gt; &lt;p&gt;Bootstrap can be added to your React app in a three possible ways,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Using the Bootstrap CDN: This is the easiest way to add bootstrap. Add both bootstrap CSS and JS resources in a head tag.&lt;/li&gt; 
   &lt;li&gt;Bootstrap as Dependency: If you are using a build tool or a module bundler such as Webpack, then this is the preferred option for adding Bootstrap to your React application &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;npm install bootstrap
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;React Bootstrap Package: In this case, you can add Bootstrap to our React app is by using a package that has rebuilt Bootstrap components to work particularly as React components. Below packages are popular in this category, 
    &lt;ol&gt; 
     &lt;li&gt;react-bootstrap&lt;/li&gt; 
     &lt;li&gt;reactstrap&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;300&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can you list down top websites or applications using react as front end framework?&lt;/h3&gt; &lt;p&gt;Below are the &lt;code&gt;top 10 websites&lt;/code&gt; using React as their front-end framework,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Facebook&lt;/li&gt; 
   &lt;li&gt;Uber&lt;/li&gt; 
   &lt;li&gt;Instagram&lt;/li&gt; 
   &lt;li&gt;WhatsApp&lt;/li&gt; 
   &lt;li&gt;Khan Academy&lt;/li&gt; 
   &lt;li&gt;Airbnb&lt;/li&gt; 
   &lt;li&gt;Dropbox&lt;/li&gt; 
   &lt;li&gt;Flipboard&lt;/li&gt; 
   &lt;li&gt;Netflix&lt;/li&gt; 
   &lt;li&gt;PayPal&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;301&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is it recommended to use CSS In JS technique in React?&lt;/h3&gt; React does not have any opinion about how styles are defined but if you are a beginner then good starting point is to define your styles in a separate *.css file as usual and refer to them using className. This functionality is not part of React but came from third-party libraries. But If you want to try a different approach(CSS-In-JS) then styled-components library is a good option.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;302&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do I need to rewrite all my class components with hooks?&lt;/h3&gt; No. But you can try Hooks in a few components(or new components) without rewriting any existing code. Because there are no plans to remove classes in ReactJS.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;303&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How to fetch data with React Hooks?&lt;/h3&gt; &lt;p&gt;The effect hook called &lt;code&gt;useEffect&lt;/code&gt; is used to fetch the data with axios from the API and to set the data in the local state of the component with the state hook’s update function.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example in which it fetches list of react articles from the API&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useState, useEffect } from &#39;react&#39;;
import axios from &#39;axios&#39;;

function App() {
  const [data, setData] = useState({ hits: [] });

  useEffect(async () =&amp;gt; {
    const result = await axios(
      &#39;http://hn.algolia.com/api/v1/search?query=react&#39;,
    );

    setData(result.data);
  }, []);

  return (
    &amp;lt;ul&amp;gt;
      {data.hits.map(item =&amp;gt; (
        &amp;lt;li key={item.objectID}&amp;gt;
          &amp;lt;a href={item.url}&amp;gt;{item.title}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
      ))}
    &amp;lt;/ul&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember we provided an empty array as second argument to the effect hook to avoid activating it on component updates but only for the mounting of the component. i.e, It fetches only for component mount.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;304&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Is Hooks cover all use cases for classes?&lt;/h3&gt; Hooks doesn&#39;t cover all use cases of classes but there is a plan to add them soon. Currently there are no Hook equivalents to the uncommon &lt;strong&gt;getSnapshotBeforeUpdate&lt;/strong&gt; and &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycles yet.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;305&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the stable release for hooks support?&lt;/h3&gt; &lt;p&gt;React includes a stable implementation of React Hooks in 16.8 release for below packages&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React DOM&lt;/li&gt; 
   &lt;li&gt;React DOM Server&lt;/li&gt; 
   &lt;li&gt;React Test Renderer&lt;/li&gt; 
   &lt;li&gt;React Shallow Renderer&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;306&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Why do we use array destructuring (square brackets notation) in &lt;code&gt;useState&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;When we declare a state variable with &lt;code&gt;useState&lt;/code&gt;, it returns a pair — an array with two items. The first item is the current value, and the second is a function that updates the value. Using [0] and [1] to access them is a bit confusing because they have a specific meaning. This is why we use array destructuring instead.&lt;/p&gt; &lt;p&gt;For example, the array index access would look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var userStateVariable = useState(&#39;userProfile&#39;); // Returns an array pair
 var user = userStateVariable[0]; // Access first item
 var setUser = userStateVariable[1]; // Access second item
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas with array destructuring the variables can be accessed as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const [user, setUser] = useState(&#39;userProfile&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;What are the sources used for introducing hooks?&lt;/h3&gt; &lt;p&gt;Hooks got the ideas from several different sources. Below are some of them,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Previous experiments with functional APIs in the react-future repository&lt;/li&gt; 
   &lt;li&gt;Community experiments with render prop APIs such as Reactions Component&lt;/li&gt; 
   &lt;li&gt;State variables and state cells in DisplayScript.&lt;/li&gt; 
   &lt;li&gt;Subscriptions in Rx.&lt;/li&gt; 
   &lt;li&gt;Reducer components in ReasonReact.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;308&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;How do you access imperative API of web components?&lt;/h3&gt; Web Components often expose an imperative API to implement its functions. You will need to use a &lt;strong&gt;ref&lt;/strong&gt; to interact with the DOM node directly if you want to access imperative API of a web component. But if you are using third-party Web Components, the best solution is to write a React component that behaves as a &lt;strong&gt;wrapper&lt;/strong&gt; for your Web Component.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;309&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is formik?&lt;/h3&gt; &lt;p&gt;Formik is a small react form library that helps you with the three major problems,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; 
   &lt;li&gt;Validation and error messages&lt;/li&gt; 
   &lt;li&gt;Handling form submission&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;310&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/h3&gt; Some of the popular middleware choices for handling asynchronous calls in Redux eco system are &lt;code&gt;Redux Thunk, Redux Promise, Redux Saga&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;311&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Do browsers understand JSX code?&lt;/h3&gt; No, browsers can&#39;t understand JSX code. You need a transpiler to convert your JSX to regular Javascript that browsers can understand. The most widely used transpiler right now is Babel.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;312&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Describe about data flow in react?&lt;/h3&gt; React implements one-way reactive data flow using props which reduce boilerplate and is easier to understand than traditional two-way data binding.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;313&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is react scripts?&lt;/h3&gt; The &lt;code&gt;react-scripts&lt;/code&gt; package is a set of scripts from the create-react-app starter pack which helps you kick off projects without configuring. The &lt;code&gt;react-scripts start&lt;/code&gt; command sets up the development environment and starts a server, as well as hot module reloading.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;314&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the features of create react app?&lt;/h3&gt; &lt;p&gt;Below are the list of some of the features provided by create react app.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;React, JSX, ES6, Typescript and Flow syntax support.&lt;/li&gt; 
   &lt;li&gt;Autoprefixed CSS&lt;/li&gt; 
   &lt;li&gt;CSS Reset/Normalize&lt;/li&gt; 
   &lt;li&gt;A live development server&lt;/li&gt; 
   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting&lt;/li&gt; 
   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps&lt;/li&gt; 
   &lt;li&gt;An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;315&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of renderToNodeStream method?&lt;/h3&gt; The &lt;code&gt;ReactDOMServer#renderToNodeStream&lt;/code&gt; method is used to generate HTML on the server and send the markup down on the initial request for faster page loads. It also helps search engines to crawl your pages easily for SEO purposes. &lt;strong&gt;Note:&lt;/strong&gt; Remember this method is not available in the browser but only server.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;316&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is MobX?&lt;/h3&gt; MobX is a simple, scalable and battle tested state management solution for applying functional reactive programming (TFRP). For reactJs application, you need to install below packages, &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install mobx --save
npm install mobx-react --save
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;317&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the differences between Redux and MobX?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Redux and MobX,&lt;/p&gt; &lt;p&gt;| Topic | Redux | MobX | | ----- | ------- | ------- | Definition| It is a javascript library for managing the application state | It is a library for reactively managing the state of your applications | | Programming | It is mainly written in ES6 | It is written in JavaScript(ES5) | | Data Store | There is only one large store exist for data storage | There is more than one store for storage | | Usage | Mainly used for large and complex applications | Used for simple applications | | Performance | Need to be improved | Provides better performance | | How it stores | Uses JS Object to store | Uses observable to store the data |&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;318&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Should I learn ES6 before learning ReactJS?&lt;/h3&gt; &lt;p&gt;No, you don’t have to learn es2015/es6 to learn react. But you may find many resources or React ecosystem uses ES6 extensively. Let&#39;s see some of the frequently used ES6 features,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Destructuring:&lt;/strong&gt; To get props and use them in a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
 var someData = this.props.someData
 var dispatch = this.props.dispatch

// in es6
const { someData, dispatch } = this.props
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Spread operator: Helps in passing props down into a component &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// in es 5
&amp;lt;SomeComponent someData={this.props.someData} dispatch={this.props.dispatch} /&amp;gt;

// in es6
&amp;lt;SomeComponent {...this.props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Arrow functions: Makes compact syntax &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// es 5
var users = usersList.map(function (user) {
 return &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;
})
// es 6
const users = usersList.map(user =&amp;gt; &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;319&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is Concurrent Rendering?&lt;/h3&gt; &lt;p&gt;The Concurrent rendering makes React apps to be more responsive by rendering component trees without blocking the main UI thread. It allows React to interrupt a long-running render to handle a high-priority event. i.e, When you enabled concurrent Mode, React will keep an eye on other tasks that need to be done, and if there&#39;s something with a higher priority it will pause what it is currently rendering and let the other task finish first. You can enable this in two ways,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// 1. Part of an app by wrapping with ConcurrentMode
&amp;lt;React.unstable_ConcurrentMode&amp;gt;
  &amp;lt;Something /&amp;gt;
&amp;lt;/React.unstable_ConcurrentMode&amp;gt;

// 2. Whole app using createRoot
ReactDOM.unstable_createRoot(domNode).render(&amp;lt;App /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;320&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between async mode and concurrent mode?&lt;/h3&gt; Both refers the same thing. Previously concurrent Mode being referred to as &quot;Async Mode&quot; by React team. The name has been changed to highlight React’s ability to perform work on different priority levels. So it avoids the confusion from other approaches to Async Rendering.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;321&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;Can I use javascript urls in react16.9?&lt;/h3&gt; &lt;p&gt;Yes, you can use javascript: URLs but it will log a warning in the console. Because URLs starting with javascript: are dangerous by including unsanitized output in a tag like &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; and create a security hole.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const companyProfile = {
  website: &quot;javascript: alert(&#39;Your website is hacked&#39;)&quot;,
};
// It will log a warning
&amp;lt;a href={companyProfile.website}&amp;gt;More details&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember that the future versions will throw an error for javascript URLs.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;322&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the purpose of eslint plugin for hooks?&lt;/h3&gt; &lt;p&gt;The ESLint plugin enforces rules of Hooks to avoid bugs. It assumes that any function starting with ”use” and a capital letter right after it is a Hook. In particular, the rule enforces that,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Calls to Hooks are either inside a PascalCase function (assumed to be a component) or another useSomething function (assumed to be a custom Hook).&lt;/li&gt; 
   &lt;li&gt;Hooks are called in the same order on every render.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;323&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What is the difference between Imperative and Declarative in React?&lt;/h3&gt; &lt;p&gt;Imagine a simple UI component, such as a &quot;Like&quot; button. When you tap it, it turns blue if it was previously grey, and grey if it was previously blue.&lt;/p&gt; &lt;p&gt;The imperative way of doing this would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( user.likes() ) {
    if( hasBlue() ) {
        removeBlue();
        addGrey();
    } else {
        removeGrey();
        addBlue();
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Basically, you have to check what is currently on the screen and handle all the changes necessary to redraw it with the current state, including undoing the changes from the previous state. You can imagine how complex this could be in a real-world scenario.&lt;/p&gt; &lt;p&gt;In contrast, the declarative approach would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if( this.state.liked ) {
    return &amp;lt;blueLike /&amp;gt;;
} else {
    return &amp;lt;greyLike /&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Because the declarative approach separates concerns, this part of it only needs to handle how the UI should look in a sepecific state, and is therefore much simpler to understand.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;324&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of using typescript with reactjs?&lt;/h3&gt; &lt;p&gt;Below are some of the benefits of using typescript with Reactjs,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use latest JavaScript features&lt;/li&gt; 
   &lt;li&gt;Use of interfaces for complex type definitions&lt;/li&gt; 
   &lt;li&gt;IDEs such as VS Code was made for TypeScript&lt;/li&gt; 
   &lt;li&gt;Avoid bugs with the ease of readability and Validation&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/h3&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When a user logs in and reload, to persist the state generally we add the load user action in the useEffect hooks in the main App.js. While using Redux, loadUser action can be easily accessed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {loadUser}  from &#39;../actions/auth&#39;;
store.dispatch(loadUser());
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;But while using &lt;strong&gt;Context API&lt;/strong&gt;, to access context in App.js, wrap the AuthState in index.js so that App.js can access the auth context. Now whenever the page reloads, no matter what route you are on, the user will be authenticated as &lt;strong&gt;loadUser&lt;/strong&gt; action will be triggered on each re-render.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import App from &#39;./App&#39;;
import AuthState from &#39;./context/auth/AuthState&#39;

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;AuthState&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/AuthState&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById(&#39;root&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  const authContext = useContext(AuthContext);

  const { loadUser } = authContext;

  useEffect(() =&amp;gt; {
    loadUser();
  },[])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;loadUser&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;    const loadUser = async () =&amp;gt; {
        const token = sessionStorage.getItem(&#39;token&#39;);

        if(!token){
            dispatch({
                type: ERROR
            })
        }
        setAuthToken(token);

        try {
            const res = await axios(&#39;/api/auth&#39;); 

            dispatch({
                type: USER_LOADED,
                payload: res.data.data
            })
            
        } catch (err) {
           console.error(err); 
        }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&quot;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;326&quot;&gt; 
 &lt;li&gt; &lt;h3&gt;What are the benefits of new JSX transform?&lt;/h3&gt; &lt;p&gt;There are three major benefits of new JSX transform,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;It is possible to use JSX without importing React packages&lt;/li&gt; 
   &lt;li&gt;The compiled output might improve the bundle size in a small amount&lt;/li&gt; 
   &lt;li&gt;The future improvements provides the flexibility to reduce the number of concepts to learn React.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How does new JSX transform different from old transform?&lt;/h3&gt; &lt;p&gt;The new JSX transform doesn’t require React to be in scope. i.e, You don&#39;t need to import React package for simple scenarios.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to look at the main differences between the old and the new transform,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Old Transform:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now JSX transform convert the above code into regular JavaScript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &#39;react&#39;;

function App() {
  return React.createElement(&#39;h1&#39;, null, &#39;Good morning!!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;New Transform:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The new JSX transform doesn&#39;t require any React imports&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;function App() {
  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Under the hood JSX transform compiles to below code&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {jsx as _jsx} from &#39;react/jsx-runtime&#39;;

function App() {
  return _jsx(&#39;h1&#39;, { children: &#39;Good morning!!&#39; });
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You still need to import React to use Hooks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;How do you get redux scaffolding using create-react-app?&lt;/h3&gt; &lt;p&gt;Redux team has provided official redux+js or redux+typescript templates for create-react-app project. The generated project setup includes,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Redux Toolkit and React-Redux dependencies&lt;/li&gt; 
   &lt;li&gt;Create and configure Redux store&lt;/li&gt; 
   &lt;li&gt;React-Redux &lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt; passing the store to React components&lt;/li&gt; 
   &lt;li&gt;Small &quot;counter&quot; example to demo how to add redux logic and React-Redux hooks API to interact with the store from components&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;The below commands need to be executed along with template option as below,&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;strong&gt;Javascript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start=&quot;2&quot;&gt; 
   &lt;li&gt;&lt;strong&gt;Typescript template:&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;npx create-react-app my-app --template redux-typescript
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>anvaka/city-roads</title>
      <link>https://github.com/anvaka/city-roads</link>
      <description>&lt;p&gt;Visualization of all roads within any city&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;city-roads&lt;/h1&gt; 
&lt;p&gt;Render every single road in any city at once: https://anvaka.github.io/city-roads/&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/6bFhX3e.png&quot; alt=&quot;demo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;How it is made?&lt;/h2&gt; 
&lt;p&gt;The data is fetched from OpenStreetMap using &lt;a href=&quot;http://overpass-turbo.eu/&quot;&gt;overpass API&lt;/a&gt;. While that API is free (as long as you follow ODbL licenses), it can be rate-limited and sometimes it is slow. After all we are downloading thousands of roads within an area!&lt;/p&gt; 
&lt;p&gt;To improve the performance of download, I indexed ~3,000 cities with population larger than 100,000 people and stored into a &lt;a href=&quot;https://github.com/anvaka/index-large-cities/blob/master/proto/place.proto&quot;&gt;very simple&lt;/a&gt; protobuf format. The cities are stored into a cache in this github &lt;a href=&quot;https://github.com/anvaka/index-large-cities&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The name resolution is done by &lt;a href=&quot;https://nominatim.openstreetmap.org/&quot;&gt;nominatim&lt;/a&gt; - for any query that you type into the search box it returns list of area ids. I check for the area id in my list of cached cities first, and fallback to overpass if area is not present in cache.&lt;/p&gt; 
&lt;h2&gt;Scripting&lt;/h2&gt; 
&lt;p&gt;Behind simple UI software engineers would also find scripting capabilities. You can develop programs on top of the city-roads. A few examples are available in &lt;a href=&quot;https://github.com/anvaka/city-script&quot;&gt;city-script&lt;/a&gt;. Scene API is documented here: https://github.com/anvaka/city-roads/blob/master/API.md&lt;/p&gt; 
&lt;p&gt;Please share your creations and do not hesitate to reach out if you have any questions.&lt;/p&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;p&gt;The rendering of the city is limited by the browser and video card memory capacity. I was able to render Seattle roads without a hiccup on a very old samsung phone, though when I tried Tokyo (with 1.4m segments) the phone was very slow.&lt;/p&gt; 
&lt;p&gt;Selecting area that has millions of roads (e.g. a Washington state) may cause the page to crash even on a powerful device.&lt;/p&gt; 
&lt;p&gt;Luckily, most of the cities can be rendered without problems, resulting in a beautiful art.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like this work and want to use it in your projects - you are more than welcome to do so!&lt;/p&gt; 
&lt;p&gt;Please &lt;a href=&quot;https://twitter.com/anvaka&quot;&gt;let me&lt;/a&gt; know how it goes. You can also sponsor my projects &lt;a href=&quot;https://github.com/sponsors/anvaka&quot;&gt;here&lt;/a&gt; - your funds will be dedicated to more awesome and free data visualizations.&lt;/p&gt; 
&lt;h2&gt;Local development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# install dependencies
npm install

# serve with hot reload at localhost:8080
npm run dev

# build for production with minification
npm run build

# build for production and view the bundle analyzer report
npm run build --report
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The source code is licensed under MIT license&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
