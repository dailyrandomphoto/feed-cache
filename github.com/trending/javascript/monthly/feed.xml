<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Monthly Trending</title>
    <description>Monthly Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 04 Dec 2021 02:46:24 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>zero205/JD_tencent_scf</title>
      <link>https://github.com/zero205/JD_tencent_scf</link>
      <description>&lt;p&gt;自用京东JS脚本，已加入助力池；支持【青龙】、【腾讯云函数】、【elecV2P】；低调使用，请勿fork！！！&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;禁止Star/Fork!!&lt;/h2&gt; 
&lt;h2&gt;请勿使用Action运行脚本!&lt;/h2&gt; 
&lt;h2&gt;有条（科学）件（上网）的可以 &lt;a href=&quot;https://t.me/jd_zero_205&quot;&gt;点此加入组织&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;本仓库部分脚本已加入JDHelloWorld大佬助力池，默认加入助力池互助&lt;/h2&gt; 
&lt;h2&gt;由于限制TG群内成员提交助力码，请需要互助的 &lt;a href=&quot;https://t.me/jd_zero_205&quot;&gt;加入组织&lt;/a&gt;，获取使用&lt;a href=&quot;https://t.me/jd_zero205_tz/53&quot;&gt;教程&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;不需要助力池请添加环境变量，变量名：&lt;code&gt;JD_JOIN_ZLC&lt;/code&gt;，变量值：&lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;h2&gt;请勿直接fork！！云函数用户先按照下方教程建立私库！！！&lt;/h2&gt; 
&lt;h2&gt;已经创建公开仓库的请点击仓库右上角&lt;code&gt;Setting&lt;/code&gt;，拉到页面最下方，点击&lt;code&gt;Change visibility&lt;/code&gt;，选择&lt;code&gt;Make private&lt;/code&gt;，填入黑体仓库名称进行确认!&lt;/h2&gt; 
&lt;h3&gt;方式一(如果有一定github基础，十分建议直接方式二)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;建议阅读@hshx123大佬的&lt;a href=&quot;https://66ccff.work/teach/jd.html&quot;&gt;教程&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;方式二&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;有能力用户可以进行尝试,通过任何方法都可以,在空仓库内(保证分支名称为&lt;code&gt;main&lt;/code&gt;),按需运行一次 &lt;a href=&quot;https://github.com/Ca11back/doge-template&quot;&gt;https://github.com/Ca11back/doge-template&lt;/a&gt; 的action即可&lt;/li&gt; 
 &lt;li&gt;第二种:直接clone一个&lt;code&gt;scf2&lt;/code&gt;分支(名字需要为&lt;code&gt;main&lt;/code&gt;,clone哪个取决于你要用的部署方式)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;自动同步本仓库脚本教程：&lt;a href=&quot;https://github.com/zero205/JD_tencent_scf/raw/main/backUp/reposync.md&quot;&gt;点此查看&lt;/a&gt;&lt;/h2&gt; 
&lt;h1&gt;使用教程&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;【青龙】拉取仓库命令：&lt;code&gt;ql repo https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign&quot; &quot;main&quot;&lt;/code&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;blockquote&gt; 
     &lt;p&gt;上面命令拉取错误的使用这个：&lt;code&gt;ql repo https://ghproxy.com/https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign&quot; &quot;main&quot;&lt;/code&gt;&lt;/p&gt; 
    &lt;/blockquote&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;腾讯云函数部署建议阅读@hshx123大佬的&lt;a href=&quot;https://66ccff.work/teach/jd.html&quot;&gt;教程&lt;/a&gt;【推荐】.&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/tencentscf.md&quot;&gt;旧教程&lt;/a&gt;【备用】&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;a href=&quot;https://github.com/elecV2/elecV2P&quot;&gt;elecV2P&lt;/a&gt; 部署【随缘维护，建议转战➟&lt;a href=&quot;https://www.runoob.com/docker/windows-docker-install.html&quot;&gt;Docker&lt;/a&gt; &lt;a href=&quot;https://github.com/whyour/qinglong&quot;&gt;青龙&lt;/a&gt;】&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;安装教程：&lt;a href=&quot;https://github.com/elecV2/elecV2P-dei/raw/master/docs/01-overview.md&quot;&gt;点此查看&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;订阅任务：&lt;code&gt;https://ghproxy.com/https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/jd_task.json&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;elecV2P京东CK、通知填写格式等相关补充说明：&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/elecV2P.md&quot;&gt;点此查看&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;获取京东cookie教程可参考：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie.md&quot;&gt;浏览器获取京东cookie教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie2.md&quot;&gt;插件获取京东cookie教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/backUp/GetJdCookie3.md&quot;&gt;浏览器扩展程序获取京东cookie教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;特别声明:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;本仓库发布的Script项目中涉及的任何解锁和解密分析脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;lxk0301对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, lxk0301 对于由此引起的任何隐私泄漏或其他后果概不负责.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;请勿将Script项目的任何内容用于商业或非法目的，否则后果自负.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任何以任何方式查看此项目的人或直接或间接使用该Script项目的任何脚本的使用者都应仔细阅读此声明。lxk0301 保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或Script项目的规则，则视为您已接受此免责声明.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何脚本，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;环境变量&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zero205/JD_tencent_scf/main/githubAction.md&quot;&gt;环境变量集合&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;特别感谢(排名不分先后)：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/NobyDa&quot;&gt;@NobyDa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/chavyleung&quot;&gt;@chavyleung&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/liuxiaoyucc&quot;&gt;@liuxiaoyucc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Zero-S1&quot;&gt;@Zero-S1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uniqueque&quot;&gt;@uniqueque&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/nzw9314&quot;&gt;@nzw9314&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/JDHelloWorld&quot;&gt;@JDHelloWorld&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/smiek2221&quot;&gt;@smiek2221&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/star261&quot;&gt;@star261&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Wenmoux&quot;&gt;@Wenmoux&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Tsukasa007&quot;&gt;@Tsukasa007&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Aaron&quot;&gt;@Aaron&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/three&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=three&quot;&gt;&lt;img src=&quot;https://badgen.net/bundlephobia/minzip/three&quot; alt=&quot;Build Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmtrends.com/three&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dw/three&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://lgtm.com/projects/g/mrdoob/three.js/&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/alerts/github/mrdoob/three.js&quot; alt=&quot;Language Grade&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy to use, lightweight, cross-browser, general purpose 3D library. The current builds only include a WebGL renderer but WebGPU (experimental), SVG and CSS3D renderers are also available in the examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://threejs.org/examples/&quot;&gt;Examples&lt;/a&gt; — &lt;a href=&quot;https://threejs.org/docs/&quot;&gt;Documentation&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki&quot;&gt;Wiki&lt;/a&gt; — &lt;a href=&quot;https://github.com/mrdoob/three.js/wiki/Migration-Guide&quot;&gt;Migrating&lt;/a&gt; — &lt;a href=&quot;http://stackoverflow.com/questions/tagged/three.js&quot;&gt;Questions&lt;/a&gt; — &lt;a href=&quot;https://discourse.threejs.org/&quot;&gt;Forum&lt;/a&gt; — &lt;a href=&quot;https://join.slack.com/t/threejs/shared_invite/zt-rnuegz5e-FQpc6YboDVW~5idlp7GfDw&quot;&gt;Slack&lt;/a&gt; — &lt;a href=&quot;https://discordapp.com/invite/HF4UdyF&quot;&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import * as THREE from &#39;./js/three.module.js&#39;;

let camera, scene, renderer;
let geometry, material, mesh;

init();

function init() {

	camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );
	camera.position.z = 1;

	scene = new THREE.Scene();

	geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
	material = new THREE.MeshNormalMaterial();

	mesh = new THREE.Mesh( geometry, material );
	scene.add( mesh );

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	renderer.setAnimationLoop( animation );
	document.body.appendChild( renderer.domElement );

}

function animation( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, you should see &lt;a href=&quot;https://jsfiddle.net/vy29n6aj/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don&#39;t need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mrdoob/three.js/releases&quot;&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glixzzy/blooket-hack</title>
      <link>https://github.com/glixzzy/blooket-hack</link>
      <description>&lt;p&gt;Multiple game hacks to use so the game becomes easier to play!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Discord server: &lt;a href=&quot;https://discord.gg/K5xUbuDqmG&quot;&gt;https://discord.gg/K5xUbuDqmG&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Blooket-Hack&lt;/h1&gt; 
&lt;p&gt;All of the cheats are based on a game mode.&lt;/p&gt; 
&lt;p&gt;People who are developers and want to make something for blooket I recommend checking out: &lt;a href=&quot;https://github.com/glixzzy/blooket-wrapper&quot;&gt;https://github.com/glixzzy/blooket-wrapper&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;All these bookmarklets are also at: &lt;a href=&quot;https://schoolcheats.net/blooket&quot;&gt;https://schoolcheats.net/blooket&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Video Tutorial&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/73669084/142779206-6cef86be-b2a5-4958-8637-cb6bde2a42da.mp4&quot;&gt;https://user-images.githubusercontent.com/73669084/142779206-6cef86be-b2a5-4958-8637-cb6bde2a42da.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Bookmarklet tutorial:&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://streamable.com/t4u7i7&quot;&gt;https://streamable.com/t4u7i7&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make a bookmark (the star on the right side of the url bar if you are using chrome)&lt;/li&gt; 
 &lt;li&gt;Click on more at the bottom left corner&lt;/li&gt; 
 &lt;li&gt;Delete everything in the url box&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;javascript:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Paste in the code&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Budibase/budibase</title>
      <link>https://github.com/Budibase/budibase</link>
      <description>&lt;p&gt;Budibase is an open-source low-code platform for creating internal apps in minutes. Supports PostgreSQL, MySQL, MSSQL, MongoDB, Rest API, Docker, K8s 🚀&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.budibase.com&quot;&gt; &lt;img alt=&quot;Budibase&quot; src=&quot;https://d33wubrfki0l68.cloudfront.net/aac32159d7207b5085e74a7ef67afbb7027786c5/2b1fd/img/logo/bb-emblem.svg?sanitize=true&quot; width=&quot;60&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Budibase &lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt; The low code platform you&#39;ll enjoy using &lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Budibase is an open source low-code platform, and the easiest way to build internal tools that improve productivity. &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; 🤖 🎨 🚀 &lt;/h3&gt; 
&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase design ui&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1633524049/ui/design-ui-wide-mobile_gdaveq.jpg&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt; &lt;img alt=&quot;GitHub all releases&quot; src=&quot;https://img.shields.io/github/downloads/Budibase/budibase/total&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/releases&quot;&gt; &lt;img alt=&quot;GitHub release (latest by date)&quot; src=&quot;https://img.shields.io/github/v/release/Budibase/budibase&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=budibase&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/budibase?style=social&quot; alt=&quot;Follow @budibase&quot;&gt; &lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&quot; alt=&quot;Code of conduct&quot;&gt; &lt;a href=&quot;https://codecov.io/gh/Budibase/budibase&quot;&gt; &lt;img src=&quot;https://codecov.io/gh/Budibase/budibase/graph/badge.svg?token=E8W2ZFXQOH&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://docs.budibase.com/getting-started&quot;&gt;Get started&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://docs.budibase.com&quot;&gt;Docs&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Feature request&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/issues&quot;&gt;Report a bug&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; Support: &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Discussions&lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;h3&gt;Build and ship real software&lt;/h3&gt; 
&lt;p&gt;Unlike other platforms, with Budibase you build and ship single page applications. Budibase applications have performance baked in and can be designed responsively, providing your users with a great experience. &lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Open source and extensible&lt;/h3&gt; 
&lt;p&gt;Budibase is open-source - licensed as GPL v3. This should fill you with confidence that Budibase will always be around. You can also code against Budibase or fork it and make changes as you please, providing a developer-friendly experience. &lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h3&gt;Load data or start from scratch&lt;/h3&gt; 
&lt;p&gt;Budibase pulls in data from multiple sources, including MongoDB, CouchDB, PostgreSQL, MySQL, Airtable, S3, DynamoDB, or a REST API. And unlike other platforms, with Budibase you can start from scratch and create business apps with no data sources. &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new data sources&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase data&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970242/Out%20of%20beta%20launch/data_n1tlhf.png&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Design and build apps with powerful pre-made components&lt;/h3&gt; 
&lt;p&gt;Budibase comes out of the box with beautifully designed, powerful components which you can use like building blocks to build your UI. We also expose a lot of your favourite CSS styling options so you can go that extra creative mile. &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new component&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase design&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970243/Out%20of%20beta%20launch/design-like-a-pro_qhlfeu.gif&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Automate processes, integrate with other tools, and connect to webhooks&lt;/h3&gt; 
&lt;p&gt;Save time by automating manual processes and workflows. From connecting to webhooks, to automating emails, simply tell Budibase what to do and let it work for you. You can easily &lt;a href=&quot;https://github.com/Budibase/automations&quot;&gt;create new automations for Budibase here&lt;/a&gt; or &lt;a href=&quot;https://github.com/Budibase/budibase/discussions?discussions_q=category%3AIdeas&quot;&gt;Request new automation&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase automations&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970486/Out%20of%20beta%20launch/automation_riro7u.png&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Integrate with your favorite tools&lt;/h3&gt; 
&lt;p&gt;Budibase integrates with a number of popular tools allowing you to build apps that perfectly fit your stack.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Budibase integrations&quot; src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1636970242/Out%20of%20beta%20launch/integrations_kc7dqt.png&quot;&gt; &lt;/p&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;h3&gt;Admin paradise&lt;/h3&gt; 
&lt;p&gt;Budibase is made to scale. With Budibase, you can self-host on your own infrastructure and globally manage users, onboarding, SMTP, apps, groups, theming and more. You can also provide users/groups with an app portal and disseminate user-management to the group manager.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Checkout the promo video: &lt;a href=&quot;https://youtu.be/xoljVpty_Kw&quot;&gt;https://youtu.be/xoljVpty_Kw&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🏁 Get started&lt;/h2&gt; 
&lt;img src=&quot;https://res.cloudinary.com/daog6scxm/image/upload/v1634808888/logo/deploy_npl9za.png&quot;&gt; 
&lt;p&gt;Deploy Budibase self-Hosted in your existing infrastructure, using Docker, Kubernetes, and Digital Ocean. Or use Budibase Cloud if you don&#39;t need to self-host, and would like to get started quickly.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://budibase.com&quot;&gt;Get started with Budibase&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🎓 Learning Budibase&lt;/h2&gt; 
&lt;p&gt;The Budibase documentation &lt;a href=&quot;https://docs.budibase.com&quot;&gt;lives here&lt;/a&gt;. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;💬 Community&lt;/h2&gt; 
&lt;p&gt;If you have a question or would like to talk with other Budibase users and join our community, please hop over to &lt;a href=&quot;https://github.com/Budibase/budibase/discussions&quot;&gt;Github discussions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;❗ Code of conduct&lt;/h2&gt; 
&lt;p&gt;Budibase is dedicated to providing a welcoming, diverse, and harrassment-free experience for everyone. We expect everyone in the Budibase community to abide by our &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CODE_OF_CONDUCT.md&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;. Please read it. &lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;🙌 Contributing to Budibase&lt;/h2&gt; 
&lt;p&gt;From opening a bug report to creating a pull request: every contribution is appreciated and welcomed. If you&#39;re planning to implement a new feature or change the API please create an issue first. This way we can ensure your work is not in vain.&lt;/p&gt; 
&lt;h3&gt;Not Sure Where to Start?&lt;/h3&gt; 
&lt;p&gt;A good place to start contributing, is the &lt;a href=&quot;https://github.com/Budibase/budibase/projects/22&quot;&gt;First time issues project&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How the repository is organized&lt;/h3&gt; 
&lt;p&gt;Budibase is a monorepo managed by lerna. Lerna manages the building and publishing of the budibase packages. At a high level, here are the packages that make up Budibase.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/builder&quot;&gt;packages/builder&lt;/a&gt; - contains code for the budibase builder client side svelte application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/client&quot;&gt;packages/client&lt;/a&gt; - A module that runs in the browser responsible for reading JSON definition and creating living, breathing web apps from it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/tree/HEAD/packages/server&quot;&gt;packages/server&lt;/a&gt; - The budibase server. This Koa app is responsible for serving the JS for the builder and budibase apps, as well as providing the API for interaction with the database and file system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Budibase is open-source, licensed as &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;GPL v3&lt;/a&gt;. The client and component libraries are licensed as &lt;a href=&quot;https://directory.fsf.org/wiki/License:MPL-2.0&quot;&gt;MPL&lt;/a&gt; - so the apps that you build can be licensed however you like.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;⭐ Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/Budibase/budibase&quot;&gt;&lt;img src=&quot;https://starchart.cc/Budibase/budibase.svg?sanitize=true&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you are having issues between updates of the builder, please use the guide &lt;a href=&quot;https://github.com/Budibase/budibase/raw/HEAD/.github/CONTRIBUTING.md#troubleshooting&quot;&gt;here&lt;/a&gt; to clear down your environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&quot;https://allcontributors.org/docs/en/emoji-key&quot;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://martinmck.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/11256663?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin McKeaveney&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=shogunpurple&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#infra-shogunpurple&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.michaeldrury.co.uk/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4407001?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Drury&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mike12345567&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#infra-mike12345567&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/aptkingston&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/9075550?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Kingston&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=aptkingston&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#design-aptkingston&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://budibase.com/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/3524181?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Shanks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mjashanks&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/kevmodrome&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/534488?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Åberg Kultalahti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=kevmodrome&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.budibase.com/&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/49767913?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=joebudi&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=joebudi&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#content-joebudi&quot; title=&quot;Content&quot;&gt;🖋&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#design-joebudi&quot; title=&quot;Design&quot;&gt;🎨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Rory-Powell&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8755148?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rory Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/PClmnt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5665926?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Clement&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=PClmnt&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=PClmnt&quot; title=&quot;Documentation&quot;&gt;📖&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=PClmnt&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Conor-Mack&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/36074859?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Conor_Mack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Conor-Mack&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Conor-Mack&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pngwn&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/12937446?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pngwn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=pngwn&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=pngwn&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/HugoLd&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/26521848?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HugoLd&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=HugoLd&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/victoriasloan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9913651?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;victoriasloan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=victoriasloan&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/yashank09&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37672190?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yashank09&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=yashank09&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SOVLOOKUP&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53158137?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SOVLOOKUP&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=SOVLOOKUP&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/seoulaja&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15101654?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;seoulaja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#translation-seoulaja&quot; title=&quot;Translation&quot;&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/mslourens&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1907152?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Maurits Lourens&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mslourens&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=mslourens&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Rory-Powell&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8755148?v=4?s=100&quot; width=&quot;100px;&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rory Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Budibase/budibase/develop/#infra-Rory-Powell&quot; title=&quot;Infrastructure (Hosting, Build-Tools, etc)&quot;&gt;🚇&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Tests&quot;&gt;⚠️&lt;/a&gt; &lt;a href=&quot;https://github.com/Budibase/budibase/commits?author=Rory-Powell&quot; title=&quot;Code&quot;&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>medusajs/medusa</title>
      <link>https://github.com/medusajs/medusa</link>
      <description>&lt;p&gt;The open-source Shopify alternative ⚡️&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.medusa-commerce.com&quot;&gt; &lt;img alt=&quot;Medusa&quot; src=&quot;https://user-images.githubusercontent.com/7554214/129161578-19b83dc8-fac5-4520-bd48-53cba676edd2.png&quot; width=&quot;100&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Medusa &lt;/h1&gt; 
&lt;h4 align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/medusajs/admin&quot;&gt;Medusa Admin&lt;/a&gt; | &lt;a href=&quot;https://www.medusa-commerce.com&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://roadmap.medusa-commerce.com&quot;&gt;Roadmap&lt;/a&gt; | &lt;a href=&quot;https://www.medusa-commerce.com/blog&quot;&gt;Blog&lt;/a&gt; | &lt;a href=&quot;https://www.linkedin.com/company/medusa-commerce&quot;&gt;LinkedIn&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/medusajs&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://docs.medusa-commerce.com&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://medusajs.notion.site/medusajs/Medusa-Home-3485f8605d834a07949b17d1a9f7eafd&quot;&gt;Notion&lt;/a&gt; &lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt; Medusa is an open-source headless commerce engine that enables developers to create amazing digital commerce experiences. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Medusa is released under the MIT license.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/medusajs/medusa&quot;&gt; &lt;img src=&quot;https://circleci.com/gh/medusajs/medusa.svg?style=shield&quot; alt=&quot;Current CircleCI build status.&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;PRs welcome!&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/xpCwq3Kfn8&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true&quot; alt=&quot;Discord Chat&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=medusajs&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs&quot; alt=&quot;Follow @medusajs&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install Medusa CLI&lt;/strong&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g @medusajs/medusa-cli
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a new Medusa project&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;medusa new my-medusa-store --seed
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start your Medusa engine&lt;/strong&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;medusa develop
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use the API&lt;/strong&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl localhost:9000/store/products | python -m json.tool
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We have a prebuilt admin dashboard that you can use to configure and manage your store find it here: &lt;a href=&quot;https://github.com/medusajs/admin&quot;&gt;Medusa Admin&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After these four steps and only a couple of minutes, you now have a complete commerce engine running locally. You may now explore &lt;a href=&quot;https://docs.medusa-commerce.com/api&quot;&gt;the documentation&lt;/a&gt; to learn how to interact with the Medusa API. You may also add &lt;a href=&quot;https://github.com/medusajs/medusa/tree/master/packages&quot;&gt;plugins&lt;/a&gt; to your Medusa store by specifying them in your &lt;code&gt;medusa-config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;🛒 Setting up a storefront for your Medusa project&lt;/h2&gt; 
&lt;p&gt;Medusa is a headless commerce engine which means that it can be used for any type of digital commerce experience - you may use it as the backend for an app, a voice application, social commerce experiences or a traditional e-commerce website, you may even want to integrate Medusa into your own software to enable commerce functionality. All of these are use cases that Medusa supports - to learn more read the documentation or reach out.&lt;/p&gt; 
&lt;p&gt;To provide a quick way to get you started with a storefront install one of our traditional e-commerce starters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medusajs/gatsby-starter-medusa&quot;&gt;Gatsby Starter&lt;/a&gt; &lt;pre&gt;&lt;code&gt;npm install -g gatsby-cli
gatsby new my-medusa-storefront https://github.com/medusajs/gatsby-starter-medusa
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/medusajs/nextjs-starter-medusa&quot;&gt;Nextjs Starter&lt;/a&gt; &lt;pre&gt;&lt;code&gt;npx create-next-app -e https://github.com/medusajs/nextjs-starter-medusa my-medusa-storefront
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With your starter and your Medusa store running you can open &lt;a href=&quot;http://localhost:8000&quot;&gt;http://localhost:8000&lt;/a&gt; (for Gatsby) or &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; (for Nextjs) in your browser and view the products in your store, build a cart, add shipping details and pay and complete an order.&lt;/p&gt; 
&lt;h2&gt;⭐️ Features&lt;/h2&gt; 
&lt;p&gt;Medusa comes with a set of building blocks that allow you to create amazing digital commerce experiences, below is a list of some of the features that Medusa come with out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Headless&lt;/strong&gt;: Medusa is a highly customizable commerce API which means that you may use any presentation layer such as a website, app, chatbots, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Regions&lt;/strong&gt; allow you to specify currencies, payment providers, shipping providers, tax rates and more for one or more countries for truly international sales.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt; come with all the functionality necessary to perform powerful customer service operations with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Carts&lt;/strong&gt; allow customers to collect products for purchase, add shipping details and complete payments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Products&lt;/strong&gt; come with relevant fields for customs, stock keeping and sales. Medusa supports multiple options and unlimited variants.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Swaps&lt;/strong&gt; allow customers to exchange products after purchase (e.g. for incorrect sizes). Accounting, payment and fulfillment plugins handle all the tedious work for you for automated customer service.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Claims&lt;/strong&gt; can be created if customers experience problems with one of their products. Plugins make sure to automate sending out replacements, handling refunds and collecting valuable data for analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Returns&lt;/strong&gt; allow customers to send back products and can be configured to function in a 100% automated flow through accounting and payment plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fulfillment API&lt;/strong&gt; makes it easy to integrate with any fulfillment provider by creating fulfillment plugins, check the &lt;code&gt;/packages&lt;/code&gt; directory for a full list of plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments API&lt;/strong&gt; makes it easy to integrate with any payment provider by creating payment plugins, we already support Stripe, Paypal and Klarna.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notification API&lt;/strong&gt; allow integrations with email providers, chatbots, Slack channels, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customer Login&lt;/strong&gt; to give customers a way of managing their data, viewing their orders and saving payment details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shipping Options &amp;amp; Profiles&lt;/strong&gt; enable powerful rules for free shipping limits, multiple fulfillment methods and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Medusa&#39;s Plugin Architecture&lt;/strong&gt; makes it intuitive and easy to manage your integrations, switch providers and grow with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt; is supported for those special use cases that all the other e-commerce platforms can&#39;t accommodate.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Database support&lt;/h2&gt; 
&lt;p&gt;In production Medusa requires Postgres and Redis, but SQLite is supported for development and testing purposes. If you plan on using Medusa for a project it is recommended that you install Postgres and Redis on your dev machine.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/download/&quot;&gt;Install PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/download&quot;&gt;Install Redis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To use Postgres and Redis you should provide a &lt;code&gt;database_url&lt;/code&gt; and &lt;code&gt;redis_url&lt;/code&gt; in your &lt;code&gt;medusa-config.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Medusa is all about the community. Therefore, we would love for you to help us build the most robust and powerful commerce engine on the market. Whether its fixing bugs, improving our documentation or simply spreading the word, please feel free to join in. Please check &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&quot;&gt;our contribution guide&lt;/a&gt; for further details about how to contribute.&lt;/p&gt; 
&lt;h2&gt;Repository structure&lt;/h2&gt; 
&lt;p&gt;The Medusa repository is a mono-repository managed using Lerna. Lerna allows us to have all Medusa packages in one place, and still distribute them as separate NPM packages.&lt;/p&gt; 
&lt;h2&gt;Licensed&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/medusajs/medusa/raw/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Thank you!&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>jklepatch/eattheblocks</title>
      <link>https://github.com/jklepatch/eattheblocks</link>
      <description>&lt;p&gt;Source code for Eat The Blocks, a screencast for Ethereum Dapp Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaTheBlocks&lt;/h1&gt; 
&lt;p&gt;Blockchain tutorials of EatTheBlocks. Learn how to build Decentralized Applications (Dapps) on Ethereum and Solidity Smart contracts&lt;/p&gt; 
&lt;p&gt;Covers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ethereum&lt;/li&gt; 
 &lt;li&gt;Solidity&lt;/li&gt; 
 &lt;li&gt;Web3&lt;/li&gt; 
 &lt;li&gt;Truffle&lt;/li&gt; 
 &lt;li&gt;DeFi (Decentralized Finance)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Youtube: &lt;code&gt;screencast&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Courses: other folders&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks.com/6-figure-blockchain-developer/&quot;&gt;6-Figures Blockchain Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks-pro.teachable.com/p/profitable-flashloans&quot;&gt;Profitable Flashloan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>airbnb/javascript</title>
      <link>https://github.com/airbnb/javascript</link>
      <description>&lt;p&gt;JavaScript Style Guide&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airbnb JavaScript Style Guide() {&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href=&quot;https://npmjs.com/babel-preset-airbnb&quot;&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href=&quot;https://npmjs.com/airbnb-browser-shims&quot;&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/eslint-config-airbnb-base&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg?sanitize=true&quot; alt=&quot;Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This guide is available in other languages too. See &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Other Style Guides&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/es5-deprecated/es5&quot;&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/react/&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/css-in-javascript/&quot;&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/css&quot;&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/ruby&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types&quot;&gt;Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting&quot;&gt;Hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison-operators--equality&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks&quot;&gt;Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;Control Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace&quot;&gt;Whitespace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas&quot;&gt;Commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons&quot;&gt;Semicolons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#type-casting--coercion&quot;&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors&quot;&gt;Accessors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events&quot;&gt;Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-5-compatibility&quot;&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#ecmascript-6-es-2015-styles&quot;&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library&quot;&gt;Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#in-the-wild&quot;&gt;In the Wild&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#translation&quot;&gt;Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#the-javascript-style-guide-guide&quot;&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#chat-with-us-about-javascript&quot;&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#amendments&quot;&gt;Amendments&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Types&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;types--primitives&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--primitives&quot;&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work directly on its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = 1;
let bar = foo;

bar = 9;

console.log(foo, bar); // =&amp;gt; 1, 9
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;types--complex&quot;&gt;&lt;/a&gt;&lt;a name=&quot;1.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#types--complex&quot;&gt;1.2&lt;/a&gt; &lt;strong&gt;Complex&lt;/strong&gt;: When you access a complex type you work on a reference to its value.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = [1, 2];
const bar = foo;

bar[0] = 9;

console.log(foo[0], bar[0]); // =&amp;gt; 9, 9
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;references--prefer-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--prefer-const&quot;&gt;2.1&lt;/a&gt; Use &lt;code&gt;const&lt;/code&gt; for all of your references; avoid using &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const.html&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/no-const-assign.html&quot;&gt;&lt;code&gt;no-const-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures that you can’t reassign your references, which can lead to bugs and difficult to comprehend code.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var a = 1;
var b = 2;

// good
const a = 1;
const b = 2;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--disallow-var&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--disallow-var&quot;&gt;2.2&lt;/a&gt; If you must reassign references, use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-var.html&quot;&gt;&lt;code&gt;no-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; is block-scoped rather than function-scoped like &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var count = 1;
if (true) {
  count += 1;
}

// good, use the let.
let count = 1;
if (true) {
  count += 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;references--block-scope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;2.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references--block-scope&quot;&gt;2.3&lt;/a&gt; Note that both &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block-scoped, whereas &lt;code&gt;var&lt;/code&gt; is function-scoped.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// const and let only exist in the blocks they are defined in.
{
  let a = 1;
  const b = 1;
  var c = 1;
}
console.log(a); // ReferenceError
console.log(b); // ReferenceError
console.log(c); // Prints 1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, you can see that referencing &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will produce a ReferenceError, while &lt;code&gt;c&lt;/code&gt; contains the number. This is because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are block scoped, while &lt;code&gt;c&lt;/code&gt; is scoped to the containing function.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objects&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;objects--no-new&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--no-new&quot;&gt;3.1&lt;/a&gt; Use the literal syntax for object creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-object.html&quot;&gt;&lt;code&gt;no-new-object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const item = new Object();

// good
const item = {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-computed-properties&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;3.2&lt;/a&gt; Use computed property names when creating objects with dynamic property names.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They allow you to define all the properties of an object in one place.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;
function getKey(k) {
  return `a key named ${k}`;
}

// bad
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
};
obj[getKey(&#39;enabled&#39;)] = true;

// good
const obj = {
  id: 5,
  name: &#39;San Francisco&#39;,
  [getKey(&#39;enabled&#39;)]: true,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;3.3&lt;/a&gt; Use object method shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const atom = {
  value: 1,

  addValue: function (value) {
    return atom.value + value;
  },
};

// good
const atom = {
  value: 1,

  addValue(value) {
    return atom.value + value;
  },
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-object-concise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;3.4&lt;/a&gt; Use property value shorthand. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-shorthand.html&quot;&gt;&lt;code&gt;object-shorthand&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is shorter and descriptive.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  lukeSkywalker: lukeSkywalker,
};

// good
const obj = {
  lukeSkywalker,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--grouped-shorthand&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--grouped-shorthand&quot;&gt;3.5&lt;/a&gt; Group your shorthand properties at the beginning of your object declaration.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to tell which properties are using the shorthand.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const anakinSkywalker = &#39;Anakin Skywalker&#39;;
const lukeSkywalker = &#39;Luke Skywalker&#39;;

// bad
const obj = {
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  lukeSkywalker,
  episodeThree: 3,
  mayTheFourth: 4,
  anakinSkywalker,
};

// good
const obj = {
  lukeSkywalker,
  anakinSkywalker,
  episodeOne: 1,
  twoJediWalkIntoACantina: 2,
  episodeThree: 3,
  mayTheFourth: 4,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--quoted-props&quot;&gt;&lt;/a&gt;&lt;a name=&quot;3.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--quoted-props&quot;&gt;3.6&lt;/a&gt; Only quote properties that are invalid identifiers. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quote-props.html&quot;&gt;&lt;code&gt;quote-props&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const bad = {
  &#39;foo&#39;: 3,
  &#39;bar&#39;: 4,
  &#39;data-blah&#39;: 5,
};

// good
const good = {
  foo: 3,
  bar: 4,
  &#39;data-blah&#39;: 5,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--prototype-builtins&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--prototype-builtins&quot;&gt;3.7&lt;/a&gt; Do not call &lt;code&gt;Object.prototype&lt;/code&gt; methods directly, such as &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, and &lt;code&gt;isPrototypeOf&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-prototype-builtins&quot;&gt;&lt;code&gt;no-prototype-builtins&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? These methods may be shadowed by properties on the object in question - consider &lt;code&gt;{ hasOwnProperty: false }&lt;/code&gt; - or, the object may be a null object (&lt;code&gt;Object.create(null)&lt;/code&gt;).&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
console.log(object.hasOwnProperty(key));

// good
console.log(Object.prototype.hasOwnProperty.call(object, key));

// best
const has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.
console.log(has.call(object, key));
/* or */
import has from &#39;has&#39;; // https://www.npmjs.com/package/has
console.log(has(object, key));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;objects--rest-spread&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#objects--rest-spread&quot;&gt;3.8&lt;/a&gt; Prefer the object spread syntax over &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; to shallow-copy objects. Use the object rest parameter syntax to get a new object with certain properties omitted. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-object-spread&quot;&gt;&lt;code&gt;prefer-object-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// very bad
const original = { a: 1, b: 2 };
const copy = Object.assign(original, { c: 3 }); // this mutates `original` ಠ_ಠ
delete copy.a; // so does this

// bad
const original = { a: 1, b: 2 };
const copy = Object.assign({}, original, { c: 3 }); // copy =&amp;gt; { a: 1, b: 2, c: 3 }

// good
const original = { a: 1, b: 2 };
const copy = { ...original, c: 3 }; // copy =&amp;gt; { a: 1, b: 2, c: 3 }

const { a, ...noA } = copy; // noA =&amp;gt; { b: 2, c: 3 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrays&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--literals&quot;&gt;4.1&lt;/a&gt; Use the literal syntax for array creation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-array-constructor.html&quot;&gt;&lt;code&gt;no-array-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = new Array();

// good
const items = [];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--push&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--push&quot;&gt;4.2&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array#push&lt;/a&gt; instead of direct assignment to add items to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const someStack = [];

// bad
someStack[someStack.length] = &#39;abracadabra&#39;;

// good
someStack.push(&#39;abracadabra&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-array-spreads&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;4.3&lt;/a&gt; Use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const len = items.length;
const itemsCopy = [];
let i;

for (i = 0; i &amp;lt; len; i += 1) {
  itemsCopy[i] = items[i];
}

// good
const itemsCopy = [...items];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from&quot;&gt;&lt;/a&gt; &lt;a name=&quot;arrays--from-iterable&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-iterable&quot;&gt;4.4&lt;/a&gt; To convert an iterable object to an array, use spreads &lt;code&gt;...&lt;/code&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const foo = document.querySelectorAll(&#39;.foo&#39;);

// good
const nodes = Array.from(foo);

// best
const nodes = [...foo];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--from-array-like&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--from-array-like&quot;&gt;4.5&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; for converting an array-like object to an array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arrLike = { 0: &#39;foo&#39;, 1: &#39;bar&#39;, 2: &#39;baz&#39;, length: 3 };

// bad
const arr = Array.prototype.slice.call(arrLike);

// good
const arr = Array.from(arrLike);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--mapping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--mapping&quot;&gt;4.6&lt;/a&gt; Use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt; instead of spread &lt;code&gt;...&lt;/code&gt; for mapping over iterables, because it avoids creating an intermediate array.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const baz = [...foo].map(bar);

// good
const baz = Array.from(foo, bar);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--callback-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;4.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--callback-return&quot;&gt;4.7&lt;/a&gt; Use return statements in array method callbacks. It’s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-callback-return&quot;&gt;&lt;code&gt;array-callback-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; x + 1);

// bad - no returned value means `acc` becomes undefined after the first iteration
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
});

// good
[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) =&amp;gt; {
  const flatten = acc.concat(item);
  return flatten;
});

// bad
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  } else {
    return false;
  }
});

// good
inbox.filter((msg) =&amp;gt; {
  const { subject, author } = msg;
  if (subject === &#39;Mockingbird&#39;) {
    return author === &#39;Harper Lee&#39;;
  }

  return false;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrays--bracket-newline&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrays--bracket-newline&quot;&gt;4.8&lt;/a&gt; Use line breaks after open and before close array brackets if an array has multiple lines&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const arr = [
  [0, 1], [2, 3], [4, 5],
];

const objectInArray = [{
  id: 1,
}, {
  id: 2,
}];

const numberInArray = [
  1, 2,
];

// good
const arr = [[0, 1], [2, 3], [4, 5]];

const objectInArray = [
  {
    id: 1,
  },
  {
    id: 2,
  },
];

const numberInArray = [
  1,
  2,
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Destructuring&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object&quot;&gt;5.1&lt;/a&gt; Use object destructuring when accessing and using multiple properties of an object. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Destructuring saves you from creating temporary references for those properties, and from repetitive access of the object. Repeating object access creates more repetitive code, requires more reading, and creates more opportunities for mistakes. Destructuring objects also provides a single site of definition of the object structure that is used in the block, rather than requiring reading the entire block to determine what is used.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function getFullName(user) {
  const firstName = user.firstName;
  const lastName = user.lastName;

  return `${firstName} ${lastName}`;
}

// good
function getFullName(user) {
  const { firstName, lastName } = user;
  return `${firstName} ${lastName}`;
}

// best
function getFullName({ firstName, lastName }) {
  return `${firstName} ${lastName}`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--array&quot;&gt;5.2&lt;/a&gt; Use array destructuring. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-destructuring&quot;&gt;&lt;code&gt;prefer-destructuring&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const arr = [1, 2, 3, 4];

// bad
const first = arr[0];
const second = arr[1];

// good
const [first, second] = arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;destructuring--object-over-array&quot;&gt;&lt;/a&gt;&lt;a name=&quot;5.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring--object-over-array&quot;&gt;5.3&lt;/a&gt; Use object destructuring for multiple return values, not array destructuring.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? You can add new properties over time or change the order of things without breaking call sites.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function processInput(input) {
  // then a miracle occurs
  return [left, right, top, bottom];
}

// the caller needs to think about the order of return data
const [left, __, top] = processInput(input);

// good
function processInput(input) {
  // then a miracle occurs
  return { left, right, top, bottom };
}

// the caller selects only the data they need
const { left, top } = processInput(input);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Strings&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;strings--quotes&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--quotes&quot;&gt;6.1&lt;/a&gt; Use single quotes &lt;code&gt;&#39;&#39;&lt;/code&gt; for strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/quotes.html&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const name = &quot;Capt. Janeway&quot;;

// bad - template literals should contain interpolation or newlines
const name = `Capt. Janeway`;

// good
const name = &#39;Capt. Janeway&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--line-length&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;6.2&lt;/a&gt; Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Broken strings are painful to work with and make code less searchable.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const errorMessage = &#39;This is a super long error that was thrown because \
of Batman. When you stop to think about how Batman had anything to do \
with this, you would get nowhere \
fast.&#39;;

// bad
const errorMessage = &#39;This is a super long error that was thrown because &#39; +
  &#39;of Batman. When you stop to think about how Batman had anything to do &#39; +
  &#39;with this, you would get nowhere fast.&#39;;

// good
const errorMessage = &#39;This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-template-literals&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;6.3&lt;/a&gt; When programmatically building up strings, use template strings instead of concatenation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-template.html&quot;&gt;&lt;code&gt;prefer-template&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/template-curly-spacing&quot;&gt;&lt;code&gt;template-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function sayHi(name) {
  return &#39;How are you, &#39; + name + &#39;?&#39;;
}

// bad
function sayHi(name) {
  return [&#39;How are you, &#39;, name, &#39;?&#39;].join();
}

// bad
function sayHi(name) {
  return `How are you, ${ name }?`;
}

// good
function sayHi(name) {
  return `How are you, ${name}?`;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--eval&quot;&gt;&lt;/a&gt;&lt;a name=&quot;6.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--eval&quot;&gt;6.4&lt;/a&gt; Never use &lt;code&gt;eval()&lt;/code&gt; on a string, it opens too many vulnerabilities. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-eval&quot;&gt;&lt;code&gt;no-eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;strings--escaping&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--escaping&quot;&gt;6.5&lt;/a&gt; Do not unnecessarily escape characters in strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-escape&quot;&gt;&lt;code&gt;no-useless-escape&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Backslashes harm readability, thus they should only be present when necessary.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = &#39;\&#39;this\&#39; \i\s \&quot;quoted\&quot;&#39;;

// good
const foo = &#39;\&#39;this\&#39; is &quot;quoted&quot;&#39;;
const foo = `my name is &#39;${name}&#39;`;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;functions--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--declarations&quot;&gt;7.1&lt;/a&gt; Use named function expressions instead of function declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Function declarations are hoisted, which means that it’s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function’s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it’s time to extract it to its own module! Don’t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error’s call stack. (&lt;a href=&quot;https://github.com/airbnb/javascript/issues/794&quot;&gt;Discussion&lt;/a&gt;)&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  // ...
}

// bad
const foo = function () {
  // ...
};

// good
// lexical name distinguished from the variable-referenced invocation(s)
const short = function longUniqueMoreDescriptiveLexicalFoo() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--iife&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--iife&quot;&gt;7.2&lt;/a&gt; Wrap immediately invoked function expressions in parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/wrap-iife.html&quot;&gt;&lt;code&gt;wrap-iife&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// immediately-invoked function expression (IIFE)
(function () {
  console.log(&#39;Welcome to the Internet. Please follow me.&#39;);
}());
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--in-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--in-blocks&quot;&gt;7.3&lt;/a&gt; Never declare a function in a non-function block (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-loop-func.html&quot;&gt;&lt;code&gt;no-loop-func&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--note-on-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--note-on-blocks&quot;&gt;7.4&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; ECMA-262 defines a &lt;code&gt;block&lt;/code&gt; as a list of statements. A function declaration is not a statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (currentUser) {
  function test() {
    console.log(&#39;Nope.&#39;);
  }
}

// good
let test;
if (currentUser) {
  test = () =&amp;gt; {
    console.log(&#39;Yup.&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--arguments-shadow&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--arguments-shadow&quot;&gt;7.5&lt;/a&gt; Never name a parameter &lt;code&gt;arguments&lt;/code&gt;. This will take precedence over the &lt;code&gt;arguments&lt;/code&gt; object that is given to every function scope.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(name, options, arguments) {
  // ...
}

// good
function foo(name, options, args) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-rest&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;7.6&lt;/a&gt; Never use &lt;code&gt;arguments&lt;/code&gt;, opt to use rest syntax &lt;code&gt;...&lt;/code&gt; instead. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-rest-params&quot;&gt;&lt;code&gt;prefer-rest-params&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;...&lt;/code&gt; is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like &lt;code&gt;arguments&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function concatenateAll() {
  const args = Array.prototype.slice.call(arguments);
  return args.join(&#39;&#39;);
}

// good
function concatenateAll(...args) {
  return args.join(&#39;&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es6-default-parameters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;7.7&lt;/a&gt; Use default parameter syntax rather than mutating function arguments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// really bad
function handleThings(opts) {
  // No! We shouldn’t mutate function arguments.
  // Double bad: if opts is falsy it&#39;ll be set to an object which may
  // be what you want but it can introduce subtle bugs.
  opts = opts || {};
  // ...
}

// still bad
function handleThings(opts) {
  if (opts === void 0) {
    opts = {};
  }
  // ...
}

// good
function handleThings(opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--default-side-effects&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--default-side-effects&quot;&gt;7.8&lt;/a&gt; Avoid side effects with default parameters.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They are confusing to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var b = 1;
// bad
function count(a = b++) {
  console.log(a);
}
count();  // 1
count();  // 2
count(3); // 3
count();  // 3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--defaults-last&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--defaults-last&quot;&gt;7.9&lt;/a&gt; Always put default parameters last. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/default-param-last&quot;&gt;&lt;code&gt;default-param-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function handleThings(opts = {}, name) {
  // ...
}

// good
function handleThings(name, opts = {}) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--constructor&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--constructor&quot;&gt;7.10&lt;/a&gt; Never use the Function constructor to create a new function. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-func&quot;&gt;&lt;code&gt;no-new-func&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Creating a function in this way evaluates a string similarly to &lt;code&gt;eval()&lt;/code&gt;, which opens vulnerabilities.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var add = new Function(&#39;a&#39;, &#39;b&#39;, &#39;return a + b&#39;);

// still bad
var subtract = Function(&#39;a&#39;, &#39;b&#39;, &#39;return a - b&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-spacing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-spacing&quot;&gt;7.11&lt;/a&gt; Spacing in a function signature. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Consistency is good, and you shouldn’t have to add or remove a space when adding or removing a name.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const f = function(){};
const g = function (){};
const h = function() {};

// good
const x = function () {};
const y = function a() {};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--mutate-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--mutate-params&quot;&gt;7.12&lt;/a&gt; Never mutate parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(obj) {
  obj.key = 1;
}

// good
function f2(obj) {
  const key = Object.prototype.hasOwnProperty.call(obj, &#39;key&#39;) ? obj.key : 1;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--reassign-params&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.13&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--reassign-params&quot;&gt;7.13&lt;/a&gt; Never reassign parameters. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-param-reassign.html&quot;&gt;&lt;code&gt;no-param-reassign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Reassigning parameters can lead to unexpected behavior, especially when accessing the &lt;code&gt;arguments&lt;/code&gt; object. It can also cause optimization issues, especially in V8.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function f1(a) {
  a = 1;
  // ...
}

function f2(a) {
  if (!a) { a = 1; }
  // ...
}

// good
function f3(a) {
  const b = a || 1;
  // ...
}

function f4(a = 1) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--spread-vs-apply&quot;&gt;&lt;/a&gt;&lt;a name=&quot;7.14&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--spread-vs-apply&quot;&gt;7.14&lt;/a&gt; Prefer the use of the spread syntax &lt;code&gt;...&lt;/code&gt; to call variadic functions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-spread&quot;&gt;&lt;code&gt;prefer-spread&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s cleaner, you don’t need to supply a context, and you can not easily compose &lt;code&gt;new&lt;/code&gt; with &lt;code&gt;apply&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x = [1, 2, 3, 4, 5];
console.log.apply(console, x);

// good
const x = [1, 2, 3, 4, 5];
console.log(...x);

// bad
new (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));

// good
new Date(...[2016, 8, 5]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;functions--signature-invocation-indentation&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#functions--signature-invocation-indentation&quot;&gt;7.15&lt;/a&gt; Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/function-paren-newline&quot;&gt;&lt;code&gt;function-paren-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo(bar,
             baz,
             quux) {
  // ...
}

// good
function foo(
  bar,
  baz,
  quux,
) {
  // ...
}

// bad
console.log(foo,
  bar,
  baz);

// good
console.log(
  foo,
  bar,
  baz,
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Arrow Functions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--use-them&quot;&gt;8.1&lt;/a&gt; When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/prefer-arrow-callback.html&quot;&gt;&lt;code&gt;prefer-arrow-callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-spacing.html&quot;&gt;&lt;code&gt;arrow-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It creates a version of the function that executes in the context of &lt;code&gt;this&lt;/code&gt;, which is usually what you want, and is a more concise syntax.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why not? If you have a fairly complicated function, you might move that logic out into its own named function expression.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(function (x) {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--implicit-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--implicit-return&quot;&gt;8.2&lt;/a&gt; If the function body consists of a single statement returning an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt; without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a &lt;code&gt;return&lt;/code&gt; statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://eslint.org/docs/rules/arrow-body-style.html&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Syntactic sugar. It reads well when multiple functions are chained together.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number) =&amp;gt; `A string containing the ${number + 1}.`);

// good
[1, 2, 3].map((number) =&amp;gt; {
  const nextNumber = number + 1;
  return `A string containing the ${nextNumber}.`;
});

// good
[1, 2, 3].map((number, index) =&amp;gt; ({
  [index]: number,
}));

// No implicit return with side effects
function foo(callback) {
  const val = callback();
  if (val === true) {
    // Do something if callback returns true
  }
}

let bool = false;

// bad
foo(() =&amp;gt; bool = true);

// good
foo(() =&amp;gt; {
  bool = true;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--paren-wrap&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--paren-wrap&quot;&gt;8.3&lt;/a&gt; In case the expression spans over multiple lines, wrap it in parentheses for better readability.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It shows clearly where the function starts and ends.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
);

// good
[&#39;get&#39;, &#39;post&#39;, &#39;put&#39;].map((httpMethod) =&amp;gt; (
  Object.prototype.hasOwnProperty.call(
    httpMagicObjectWithAVeryLongName,
    httpMethod,
  )
));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--one-arg-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--one-arg-parens&quot;&gt;8.4&lt;/a&gt; Always include parentheses around arguments for clarity and consistency. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/arrow-parens.html&quot;&gt;&lt;code&gt;arrow-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Minimizes diff churn when adding or removing arguments.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
[1, 2, 3].map(x =&amp;gt; x * x);

// good
[1, 2, 3].map((x) =&amp;gt; x * x);

// bad
[1, 2, 3].map(number =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// good
[1, 2, 3].map((number) =&amp;gt; (
  `A long string with the ${number}. It’s so long that we don’t want it to take up space on the .map line!`
));

// bad
[1, 2, 3].map(x =&amp;gt; {
  const y = x + 1;
  return x * y;
});

// good
[1, 2, 3].map((x) =&amp;gt; {
  const y = x + 1;
  return x * y;
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;arrows--confusing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;8.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrows--confusing&quot;&gt;8.5&lt;/a&gt; Avoid confusing arrow function syntax (&lt;code&gt;=&amp;gt;&lt;/code&gt;) with comparison operators (&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-confusing-arrow&quot;&gt;&lt;code&gt;no-confusing-arrow&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const itemHeight = (item) =&amp;gt; item.height &amp;lt;= 256 ? item.largeSize : item.smallSize;

// bad
const itemHeight = (item) =&amp;gt; item.height &amp;gt;= 256 ? item.largeSize : item.smallSize;

// good
const itemHeight = (item) =&amp;gt; (item.height &amp;lt;= 256 ? item.largeSize : item.smallSize);

// good
const itemHeight = (item) =&amp;gt; {
  const { height, largeSize, smallSize } = item;
  return height &amp;lt;= 256 ? largeSize : smallSize;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--implicit-arrow-linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--implicit-arrow-linebreak&quot;&gt;8.6&lt;/a&gt; Enforce the location of arrow function bodies with implicit returns. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/implicit-arrow-linebreak&quot;&gt;&lt;code&gt;implicit-arrow-linebreak&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(foo) =&amp;gt;
  bar;

(foo) =&amp;gt;
  (bar);

// good
(foo) =&amp;gt; bar;
(foo) =&amp;gt; (bar);
(foo) =&amp;gt; (
   bar
)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Classes &amp;amp; Constructors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--use-class&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--use-class&quot;&gt;9.1&lt;/a&gt; Always use &lt;code&gt;class&lt;/code&gt;. Avoid manipulating &lt;code&gt;prototype&lt;/code&gt; directly.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;class&lt;/code&gt; syntax is more concise and easier to reason about.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function Queue(contents = []) {
  this.queue = [...contents];
}
Queue.prototype.pop = function () {
  const value = this.queue[0];
  this.queue.splice(0, 1);
  return value;
};

// good
class Queue {
  constructor(contents = []) {
    this.queue = [...contents];
  }
  pop() {
    const value = this.queue[0];
    this.queue.splice(0, 1);
    return value;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--extends&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--extends&quot;&gt;9.2&lt;/a&gt; Use &lt;code&gt;extends&lt;/code&gt; for inheritance.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It is a built-in way to inherit prototype functionality without breaking &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const inherits = require(&#39;inherits&#39;);
function PeekableQueue(contents) {
  Queue.apply(this, contents);
}
inherits(PeekableQueue, Queue);
PeekableQueue.prototype.peek = function () {
  return this.queue[0];
};

// good
class PeekableQueue extends Queue {
  peek() {
    return this.queue[0];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--chaining&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--chaining&quot;&gt;9.3&lt;/a&gt; Methods can return &lt;code&gt;this&lt;/code&gt; to help with method chaining.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
Jedi.prototype.jump = function () {
  this.jumping = true;
  return true;
};

Jedi.prototype.setHeight = function (height) {
  this.height = height;
};

const luke = new Jedi();
luke.jump(); // =&amp;gt; true
luke.setHeight(20); // =&amp;gt; undefined

// good
class Jedi {
  jump() {
    this.jumping = true;
    return this;
  }

  setHeight(height) {
    this.height = height;
    return this;
  }
}

const luke = new Jedi();

luke.jump()
  .setHeight(20);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--tostring&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--tostring&quot;&gt;9.4&lt;/a&gt; It’s okay to write a custom &lt;code&gt;toString()&lt;/code&gt; method, just make sure it works successfully and causes no side effects.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    this.name = options.name || &#39;no name&#39;;
  }

  getName() {
    return this.name;
  }

  toString() {
    return `Jedi - ${this.getName()}`;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;constructors--no-useless&quot;&gt;&lt;/a&gt;&lt;a name=&quot;9.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#constructors--no-useless&quot;&gt;9.5&lt;/a&gt; Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-useless-constructor&quot;&gt;&lt;code&gt;no-useless-constructor&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Jedi {
  constructor() {}

  getName() {
    return this.name;
  }
}

// bad
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
  }
}

// good
class Rey extends Jedi {
  constructor(...args) {
    super(...args);
    this.name = &#39;Rey&#39;;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--no-duplicate-members&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--no-duplicate-members&quot;&gt;9.6&lt;/a&gt; Avoid duplicate class members. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-dupe-class-members&quot;&gt;&lt;code&gt;no-dupe-class-members&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() { return 1; }
  bar() { return 2; }
}

// good
class Foo {
  bar() { return 1; }
}

// good
class Foo {
  bar() { return 2; }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;classes--methods-use-this&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--methods-use-this&quot;&gt;9.7&lt;/a&gt; Class methods should use &lt;code&gt;this&lt;/code&gt; or be made into a static method unless an external library or framework requires using specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/class-methods-use-this&quot;&gt;&lt;code&gt;class-methods-use-this&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Foo {
  bar() {
    console.log(&#39;bar&#39;);
  }
}

// good - this is used
class Foo {
  bar() {
    console.log(this.bar);
  }
}

// good - constructor is exempt
class Foo {
  constructor() {
    // ...
  }
}

// good - static methods aren&#39;t expected to use this
class Foo {
  static bar() {
    console.log(&#39;bar&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;modules--use-them&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--use-them&quot;&gt;10.1&lt;/a&gt; Always use modules (&lt;code&gt;import&lt;/code&gt;/&lt;code&gt;export&lt;/code&gt;) over a non-standard module system. You can always transpile to your preferred module system.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Modules are the future, let’s start using the future now.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const AirbnbStyleGuide = require(&#39;./AirbnbStyleGuide&#39;);
module.exports = AirbnbStyleGuide.es6;

// ok
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
export default AirbnbStyleGuide.es6;

// best
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-wildcard&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-wildcard&quot;&gt;10.2&lt;/a&gt; Do not use wildcard imports.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This makes sure you have a single default export.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import * as AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;

// good
import AirbnbStyleGuide from &#39;./AirbnbStyleGuide&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-export-from-import&quot;&gt;&lt;/a&gt;&lt;a name=&quot;10.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-export-from-import&quot;&gt;10.3&lt;/a&gt; And do not export directly from an import.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// filename es6.js
export { es6 as default } from &#39;./AirbnbStyleGuide&#39;;

// good
// filename es6.js
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-duplicate-imports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-duplicate-imports&quot;&gt;10.4&lt;/a&gt; Only import from a path in one place. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-duplicate-imports&quot;&gt;&lt;code&gt;no-duplicate-imports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Having multiple lines that import from the same path can make code harder to maintain.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
// … some other imports … //
import { named1, named2 } from &#39;foo&#39;;

// good
import foo, { named1, named2 } from &#39;foo&#39;;

// good
import foo, {
  named1,
  named2,
} from &#39;foo&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-mutable-exports&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-mutable-exports&quot;&gt;10.5&lt;/a&gt; Do not export mutable bindings. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-mutable-exports.md&quot;&gt;&lt;code&gt;import/no-mutable-exports&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let foo = 3;
export { foo };

// good
const foo = 3;
export { foo };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--prefer-default-export&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--prefer-default-export&quot;&gt;10.6&lt;/a&gt; In modules with a single export, prefer default export over named export. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/prefer-default-export.md&quot;&gt;&lt;code&gt;import/prefer-default-export&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? To encourage more files that only ever export one thing, which is better for readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
export function foo() {}

// good
export default function foo() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--imports-first&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--imports-first&quot;&gt;10.7&lt;/a&gt; Put all &lt;code&gt;import&lt;/code&gt;s above non-import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/first.md&quot;&gt;&lt;code&gt;import/first&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since &lt;code&gt;import&lt;/code&gt;s are hoisted, keeping them all at the top prevents surprising behavior.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;foo&#39;;
foo.init();

import bar from &#39;bar&#39;;

// good
import foo from &#39;foo&#39;;
import bar from &#39;bar&#39;;

foo.init();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--multiline-imports-over-newlines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--multiline-imports-over-newlines&quot;&gt;10.8&lt;/a&gt; Multiline imports should be indented just like multiline array and object literals. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-newline&quot;&gt;&lt;code&gt;object-curly-newline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import {longNameA, longNameB, longNameC, longNameD, longNameE} from &#39;path&#39;;

// good
import {
  longNameA,
  longNameB,
  longNameC,
  longNameD,
  longNameE,
} from &#39;path&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--no-webpack-loader-syntax&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--no-webpack-loader-syntax&quot;&gt;10.9&lt;/a&gt; Disallow Webpack loader syntax in module import statements. eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/no-webpack-loader-syntax.md&quot;&gt;&lt;code&gt;import/no-webpack-loader-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in &lt;code&gt;webpack.config.js&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import fooSass from &#39;css!sass!foo.scss&#39;;
import barCss from &#39;style!css!bar.css&#39;;

// good
import fooSass from &#39;foo.scss&#39;;
import barCss from &#39;bar.css&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;modules--import-extensions&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules--import-extensions&quot;&gt;10.10&lt;/a&gt; Do not include JavaScript filename extensions eslint: &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import/raw/master/docs/rules/extensions.md&quot;&gt;&lt;code&gt;import/extensions&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Including extensions inhibits refactoring, and inappropriately hardcodes implementation details of the module you&#39;re importing in every consumer.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import foo from &#39;./foo.js&#39;;
import bar from &#39;./bar.jsx&#39;;
import baz from &#39;./baz/index.jsx&#39;;

// good
import foo from &#39;./foo&#39;;
import bar from &#39;./bar&#39;;
import baz from &#39;./baz&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Iterators and Generators&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;iterators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators--nope&quot;&gt;11.1&lt;/a&gt; Don’t use iterators. Prefer JavaScript’s higher-order functions instead of loops like &lt;code&gt;for-in&lt;/code&gt; or &lt;code&gt;for-of&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-iterator.html&quot;&gt;&lt;code&gt;no-iterator&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Use &lt;code&gt;map()&lt;/code&gt; / &lt;code&gt;every()&lt;/code&gt; / &lt;code&gt;filter()&lt;/code&gt; / &lt;code&gt;find()&lt;/code&gt; / &lt;code&gt;findIndex()&lt;/code&gt; / &lt;code&gt;reduce()&lt;/code&gt; / &lt;code&gt;some()&lt;/code&gt; / ... to iterate over arrays, and &lt;code&gt;Object.keys()&lt;/code&gt; / &lt;code&gt;Object.values()&lt;/code&gt; / &lt;code&gt;Object.entries()&lt;/code&gt; to produce arrays so you can iterate over objects.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const numbers = [1, 2, 3, 4, 5];

// bad
let sum = 0;
for (let num of numbers) {
  sum += num;
}
sum === 15;

// good
let sum = 0;
numbers.forEach((num) =&amp;gt; {
  sum += num;
});
sum === 15;

// best (use the functional force)
const sum = numbers.reduce((total, num) =&amp;gt; total + num, 0);
sum === 15;

// bad
const increasedByOne = [];
for (let i = 0; i &amp;lt; numbers.length; i++) {
  increasedByOne.push(numbers[i] + 1);
}

// good
const increasedByOne = [];
numbers.forEach((num) =&amp;gt; {
  increasedByOne.push(num + 1);
});

// best (keeping it functional)
const increasedByOne = numbers.map((num) =&amp;gt; num + 1);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--nope&quot;&gt;&lt;/a&gt;&lt;a name=&quot;11.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;11.2&lt;/a&gt; Don’t use generators for now.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? They don’t transpile well to ES5.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;generators--spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--spacing&quot;&gt;11.3&lt;/a&gt; If you must use generators, or if you disregard &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#generators--nope&quot;&gt;our advice&lt;/a&gt;, make sure their function signature is spaced properly. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/generator-star-spacing&quot;&gt;&lt;code&gt;generator-star-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; are part of the same conceptual keyword - &lt;code&gt;*&lt;/code&gt; is not a modifier for &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;function*&lt;/code&gt; is a unique construct, different from &lt;code&gt;function&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function * foo() {
  // ...
}

// bad
const bar = function * () {
  // ...
};

// bad
const baz = function *() {
  // ...
};

// bad
const quux = function*() {
  // ...
};

// bad
function*foo() {
  // ...
}

// bad
function *foo() {
  // ...
}

// very bad
function
*
foo() {
  // ...
}

// very bad
const wat = function
*
() {
  // ...
};

// good
function* foo() {
  // ...
}

// good
const foo = function* () {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Properties&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;properties--dot&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--dot&quot;&gt;12.1&lt;/a&gt; Use dot notation when accessing properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/dot-notation.html&quot;&gt;&lt;code&gt;dot-notation&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

// bad
const isJedi = luke[&#39;jedi&#39;];

// good
const isJedi = luke.jedi;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;properties--bracket&quot;&gt;&lt;/a&gt;&lt;a name=&quot;12.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#properties--bracket&quot;&gt;12.2&lt;/a&gt; Use bracket notation &lt;code&gt;[]&lt;/code&gt; when accessing properties with a variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const luke = {
  jedi: true,
  age: 28,
};

function getProp(prop) {
  return luke[prop];
}

const isJedi = getProp(&#39;jedi&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;es2016-properties--exponentiation-operator&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;12.3&lt;/a&gt; Use exponentiation operator &lt;code&gt;**&lt;/code&gt; when calculating exponentiations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-properties&quot;&gt;&lt;code&gt;no-restricted-properties&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const binary = Math.pow(2, 10);

// good
const binary = 2 ** 10;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const&quot;&gt;13.1&lt;/a&gt; Always use &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-undef&quot;&gt;&lt;code&gt;no-undef&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/prefer-const&quot;&gt;&lt;code&gt;prefer-const&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
superPower = new SuperPower();

// good
const superPower = new SuperPower();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--one-const&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--one-const&quot;&gt;13.2&lt;/a&gt; Use one &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; declaration per variable or assignment. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/one-var.html&quot;&gt;&lt;code&gt;one-var&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? It’s easier to add new variable declarations this way, and you never have to worry about swapping out a &lt;code&gt;;&lt;/code&gt; for a &lt;code&gt;,&lt;/code&gt; or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const items = getItems(),
    goSportsTeam = true,
    dragonball = &#39;z&#39;;

// bad
// (compare to above, and try to spot the mistake)
const items = getItems(),
    goSportsTeam = true;
    dragonball = &#39;z&#39;;

// good
const items = getItems();
const goSportsTeam = true;
const dragonball = &#39;z&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--const-let-group&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--const-let-group&quot;&gt;13.3&lt;/a&gt; Group all your &lt;code&gt;const&lt;/code&gt;s and then group all your &lt;code&gt;let&lt;/code&gt;s.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is helpful when later on you might need to assign a variable depending on one of the previously assigned variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
let i, len, dragonball,
    items = getItems(),
    goSportsTeam = true;

// bad
let i;
const items = getItems();
let dragonball;
const goSportsTeam = true;
let len;

// good
const goSportsTeam = true;
const items = getItems();
let dragonball;
let i;
let length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--define-where-used&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--define-where-used&quot;&gt;13.4&lt;/a&gt; Assign variables where you need them, but place them in a reasonable place.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped and not function scoped.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - unnecessary function call
function checkName(hasName) {
  const name = getName();

  if (hasName === &#39;test&#39;) {
    return false;
  }

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}

// good
function checkName(hasName) {
  if (hasName === &#39;test&#39;) {
    return false;
  }

  const name = getName();

  if (name === &#39;test&#39;) {
    this.setName(&#39;&#39;);
    return false;
  }

  return name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-chain-assignment&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-chain-assignment&quot;&gt;13.5&lt;/a&gt; Don’t chain variable assignments. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multi-assign&quot;&gt;&lt;code&gt;no-multi-assign&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Chaining variable assignments creates implicit global variables.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
(function example() {
  // JavaScript interprets this as
  // let a = ( b = ( c = 1 ) );
  // The let keyword only applies to variable a; variables b and c become
  // global variables.
  let a = b = c = 1;
}());

console.log(a); // throws ReferenceError
console.log(b); // 1
console.log(c); // 1

// good
(function example() {
  let a = 1;
  let b = a;
  let c = a;
}());

console.log(a); // throws ReferenceError
console.log(b); // throws ReferenceError
console.log(c); // throws ReferenceError

// the same applies for `const`
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--unary-increment-decrement&quot;&gt;&lt;/a&gt;&lt;a name=&quot;13.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--unary-increment-decrement&quot;&gt;13.6&lt;/a&gt; Avoid using unary increments and decrements (&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;). eslint &lt;a href=&quot;https://eslint.org/docs/rules/no-plusplus&quot;&gt;&lt;code&gt;no-plusplus&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like &lt;code&gt;num += 1&lt;/code&gt; instead of &lt;code&gt;num++&lt;/code&gt; or &lt;code&gt;num ++&lt;/code&gt;. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

const array = [1, 2, 3];
let num = 1;
num++;
--num;

let sum = 0;
let truthyCount = 0;
for (let i = 0; i &amp;lt; array.length; i++) {
  let value = array[i];
  sum += value;
  if (value) {
    truthyCount++;
  }
}

// good

const array = [1, 2, 3];
let num = 1;
num += 1;
num -= 1;

const sum = array.reduce((a, b) =&amp;gt; a + b, 0);
const truthyCount = array.filter(Boolean).length;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--linebreak&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--linebreak&quot;&gt;13.7&lt;/a&gt; Avoid linebreaks before or after &lt;code&gt;=&lt;/code&gt; in an assignment. If your assignment violates &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;, surround the value in parens. eslint &lt;a href=&quot;https://eslint.org/docs/rules/operator-linebreak.html&quot;&gt;&lt;code&gt;operator-linebreak&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Linebreaks surrounding &lt;code&gt;=&lt;/code&gt; can obfuscate the value of an assignment.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo =
  superLongLongLongLongLongLongLongLongFunctionName();

// bad
const foo
  = &#39;superLongLongLongLongLongLongLongLongString&#39;;

// good
const foo = (
  superLongLongLongLongLongLongLongLongFunctionName()
);

// good
const foo = &#39;superLongLongLongLongLongLongLongLongString&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;variables--no-unused-vars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#variables--no-unused-vars&quot;&gt;13.8&lt;/a&gt; Disallow unused variables. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unused-vars&quot;&gt;&lt;code&gt;no-unused-vars&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad

var some_unused_var = 42;

// Write-only variables are not considered as used.
var y = 10;
y = 5;

// A read for a modification of itself is not considered as used.
var z = 0;
z = z + 1;

// Unused function arguments.
function getX(x, y) {
    return x;
}

// good

function getXPlusY(x, y) {
  return x + y;
}

var x = 1;
var y = a + 2;

alert(getXPlusY(x, y));

// &#39;type&#39; is ignored even if unused because it has a rest property sibling.
// This is a form of extracting an object that omits the specified keys.
var { type, ...coords } = data;
// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hoisting&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--about&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--about&quot;&gt;14.1&lt;/a&gt; &lt;code&gt;var&lt;/code&gt; declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations are blessed with a new concept called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz&quot;&gt;Temporal Dead Zones (TDZ)&lt;/a&gt;. It’s important to know why &lt;a href=&quot;https://web.archive.org/web/20200121061528/http://es-discourse.com/t/why-typeof-is-no-longer-safe/15&quot;&gt;typeof is no longer safe&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// we know this wouldn’t work (assuming there
// is no notDefined global variable)
function example() {
  console.log(notDefined); // =&amp;gt; throws a ReferenceError
}

// creating a variable declaration after you
// reference the variable will work due to
// variable hoisting. Note: the assignment
// value of `true` is not hoisted.
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  var declaredButNotAssigned = true;
}

// the interpreter is hoisting the variable
// declaration to the top of the scope,
// which means our example could be rewritten as:
function example() {
  let declaredButNotAssigned;
  console.log(declaredButNotAssigned); // =&amp;gt; undefined
  declaredButNotAssigned = true;
}

// using const and let
function example() {
  console.log(declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  console.log(typeof declaredButNotAssigned); // =&amp;gt; throws a ReferenceError
  const declaredButNotAssigned = true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--anon-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--anon-expressions&quot;&gt;14.2&lt;/a&gt; Anonymous function expressions hoist their variable name, but not the function assignment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(anonymous); // =&amp;gt; undefined

  anonymous(); // =&amp;gt; TypeError anonymous is not a function

  var anonymous = function () {
    console.log(&#39;anonymous function expression&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--named-expresions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;hoisting--named-expressions&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--named-expressions&quot;&gt;14.3&lt;/a&gt; Named function expressions hoist the variable name, not the function name or the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  superPower(); // =&amp;gt; ReferenceError superPower is not defined

  var named = function superPower() {
    console.log(&#39;Flying&#39;);
  };
}

// the same is true when the function name
// is the same as the variable name.
function example() {
  console.log(named); // =&amp;gt; undefined

  named(); // =&amp;gt; TypeError named is not a function

  var named = function named() {
    console.log(&#39;named&#39;);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;hoisting--declarations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;14.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#hoisting--declarations&quot;&gt;14.4&lt;/a&gt; Function declarations hoist their name and the function body.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function example() {
  superPower(); // =&amp;gt; Flying

  function superPower() {
    console.log(&#39;Flying&#39;);
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information refer to &lt;a href=&quot;https://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting/&quot;&gt;JavaScript Scoping &amp;amp; Hoisting&lt;/a&gt; by &lt;a href=&quot;https://www.adequatelygood.com/&quot;&gt;Ben Cherry&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comparison Operators &amp;amp; Equality&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--eqeqeq&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--eqeqeq&quot;&gt;15.1&lt;/a&gt; Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/eqeqeq.html&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--if&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--if&quot;&gt;15.2&lt;/a&gt; Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ([0] &amp;amp;&amp;amp; []) {
  // true
  // an array (even an empty one) is an object, objects will evaluate to true
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--shortcuts&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--shortcuts&quot;&gt;15.3&lt;/a&gt; Use shortcuts for booleans, but explicit comparisons for strings and numbers.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (isValid === true) {
  // ...
}

// good
if (isValid) {
  // ...
}

// bad
if (name) {
  // ...
}

// good
if (name !== &#39;&#39;) {
  // ...
}

// bad
if (collection.length) {
  // ...
}

// good
if (collection.length &amp;gt; 0) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--moreinfo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--moreinfo&quot;&gt;15.4&lt;/a&gt; For more information see &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--switch-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--switch-blocks&quot;&gt;15.5&lt;/a&gt; Use braces to create blocks in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses that contain lexical declarations (e.g. &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, and &lt;code&gt;class&lt;/code&gt;). eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-case-declarations.html&quot;&gt;&lt;code&gt;no-case-declarations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Lexical declarations are visible in the entire &lt;code&gt;switch&lt;/code&gt; block but only get initialized when assigned, which only happens when its &lt;code&gt;case&lt;/code&gt; is reached. This causes problems when multiple &lt;code&gt;case&lt;/code&gt; clauses attempt to define the same thing.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
switch (foo) {
  case 1:
    let x = 1;
    break;
  case 2:
    const y = 2;
    break;
  case 3:
    function f() {
      // ...
    }
    break;
  default:
    class C {}
}

// good
switch (foo) {
  case 1: {
    let x = 1;
    break;
  }
  case 2: {
    const y = 2;
    break;
  }
  case 3: {
    function f() {
      // ...
    }
    break;
  }
  case 4:
    bar();
    break;
  default: {
    class C {}
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--nested-ternaries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--nested-ternaries&quot;&gt;15.6&lt;/a&gt; Ternaries should not be nested and generally be single line expressions. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-nested-ternary.html&quot;&gt;&lt;code&gt;no-nested-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = maybe1 &amp;gt; maybe2
  ? &quot;bar&quot;
  : value1 &amp;gt; value2 ? &quot;baz&quot; : null;

// split into 2 separated ternary expressions
const maybeNull = value1 &amp;gt; value2 ? &#39;baz&#39; : null;

// better
const foo = maybe1 &amp;gt; maybe2
  ? &#39;bar&#39;
  : maybeNull;

// best
const foo = maybe1 &amp;gt; maybe2 ? &#39;bar&#39; : maybeNull;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--unneeded-ternary&quot;&gt;&lt;/a&gt;&lt;a name=&quot;15.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--unneeded-ternary&quot;&gt;15.7&lt;/a&gt; Avoid unneeded ternary statements. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-unneeded-ternary.html&quot;&gt;&lt;code&gt;no-unneeded-ternary&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a ? a : b;
const bar = c ? true : false;
const baz = c ? false : true;

// good
const foo = a || b;
const bar = !!c;
const baz = !c;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comparison--no-mixed-operators&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comparison--no-mixed-operators&quot;&gt;15.8&lt;/a&gt; When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;**&lt;/code&gt; since their precedence is broadly understood. We recommend enclosing &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in parentheses because their precedence can be ambiguous when they are mixed. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-mixed-operators.html&quot;&gt;&lt;code&gt;no-mixed-operators&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This improves readability and clarifies the developer’s intention.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = a &amp;amp;&amp;amp; b &amp;lt; 0 || c &amp;gt; 0 || d + 1 === 0;

// bad
const bar = a ** b - 5 % d;

// bad
// one may be confused into thinking (a || b) &amp;amp;&amp;amp; c
if (a || b &amp;amp;&amp;amp; c) {
  return d;
}

// bad
const bar = a + b / c * d;

// good
const foo = (a &amp;amp;&amp;amp; b &amp;lt; 0) || c &amp;gt; 0 || (d + 1 === 0);

// good
const bar = a ** b - (5 % d);

// good
if (a || (b &amp;amp;&amp;amp; c)) {
  return d;
}

// good
const bar = a + (b / c) * d;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blocks&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--braces&quot;&gt;16.1&lt;/a&gt; Use braces with all multiline blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/nonblock-statement-body-position&quot;&gt;&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test)
  return false;

// good
if (test) return false;

// good
if (test) {
  return false;
}

// bad
function foo() { return false; }

// good
function bar() {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--cuddled-elses&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--cuddled-elses&quot;&gt;16.2&lt;/a&gt; If you’re using multiline blocks with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt;, put &lt;code&gt;else&lt;/code&gt; on the same line as your &lt;code&gt;if&lt;/code&gt; block’s closing brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/brace-style.html&quot;&gt;&lt;code&gt;brace-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (test) {
  thing1();
  thing2();
}
else {
  thing3();
}

// good
if (test) {
  thing1();
  thing2();
} else {
  thing3();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;blocks--no-else-return&quot;&gt;&lt;/a&gt;&lt;a name=&quot;16.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#blocks--no-else-return&quot;&gt;16.3&lt;/a&gt; If an &lt;code&gt;if&lt;/code&gt; block always executes a &lt;code&gt;return&lt;/code&gt; statement, the subsequent &lt;code&gt;else&lt;/code&gt; block is unnecessary. A &lt;code&gt;return&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; block following an &lt;code&gt;if&lt;/code&gt; block that contains a &lt;code&gt;return&lt;/code&gt; can be separated into multiple &lt;code&gt;if&lt;/code&gt; blocks. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-else-return&quot;&gt;&lt;code&gt;no-else-return&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  if (x) {
    return x;
  } else {
    return y;
  }
}

// bad
function cats() {
  if (x) {
    return x;
  } else if (y) {
    return y;
  }
}

// bad
function dogs() {
  if (x) {
    return x;
  } else {
    if (y) {
      return y;
    }
  }
}

// good
function foo() {
  if (x) {
    return x;
  }

  return y;
}

// good
function cats() {
  if (x) {
    return x;
  }

  if (y) {
    return y;
  }
}

// good
function dogs(x) {
  if (x) {
    if (z) {
      return y;
    }
  } else {
    return z;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Control Statements&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;control-statements&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements&quot;&gt;17.1&lt;/a&gt; In case your control statement (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if ((foo === 123 || bar === &#39;abc&#39;) &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong() &amp;amp;&amp;amp; isThisReallyHappening()) {
  thing1();
}

// bad
if (foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}

// bad
if (
  foo === 123 &amp;amp;&amp;amp;
  bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  foo === 123
  &amp;amp;&amp;amp; bar === &#39;abc&#39;
) {
  thing1();
}

// good
if (
  (foo === 123 || bar === &#39;abc&#39;)
  &amp;amp;&amp;amp; doesItLookGoodWhenItBecomesThatLong()
  &amp;amp;&amp;amp; isThisReallyHappening()
) {
  thing1();
}

// good
if (foo === 123 &amp;amp;&amp;amp; bar === &#39;abc&#39;) {
  thing1();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;control-statement--value-selection&quot;&gt;&lt;/a&gt;&lt;a name=&quot;control-statements--value-selection&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#control-statements--value-selection&quot;&gt;17.2&lt;/a&gt; Don&#39;t use selection operators in place of control statements.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
!isRunning &amp;amp;&amp;amp; startRunning();

// good
if (!isRunning) {
  startRunning();
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Comments&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;comments--multiline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--multiline&quot;&gt;18.1&lt;/a&gt; Use &lt;code&gt;/** ... */&lt;/code&gt; for multiline comments.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
// make() returns a new element
// based on the passed in tag name
//
// @param {String} tag
// @return {Element} element
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--singleline&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--singleline&quot;&gt;18.2&lt;/a&gt; Use &lt;code&gt;//&lt;/code&gt; for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it’s on the first line of a block.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const active = true;  // is current tab

// good
// is current tab
const active = true;

// bad
function getType() {
  console.log(&#39;fetching type...&#39;);
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// good
function getType() {
  console.log(&#39;fetching type...&#39;);

  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}

// also good
function getType() {
  // set the default type to &#39;no type&#39;
  const type = this.type || &#39;no type&#39;;

  return type;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--spaces&quot;&gt;18.3&lt;/a&gt; Start all comments with a space to make it easier to read. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/spaced-comment&quot;&gt;&lt;code&gt;spaced-comment&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
//is current tab
const active = true;

// good
// is current tab
const active = true;

// bad
/**
 *make() returns a new element
 *based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}

// good
/**
 * make() returns a new element
 * based on the passed-in tag name
 */
function make(tag) {

  // ...

  return element;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--actionitems&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--actionitems&quot;&gt;18.4&lt;/a&gt; Prefixing your comments with &lt;code&gt;FIXME&lt;/code&gt; or &lt;code&gt;TODO&lt;/code&gt; helps other developers quickly understand if you’re pointing out a problem that needs to be revisited, or if you’re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are &lt;code&gt;FIXME: -- need to figure this out&lt;/code&gt; or &lt;code&gt;TODO: -- need to implement&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--fixme&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--fixme&quot;&gt;18.5&lt;/a&gt; Use &lt;code&gt;// FIXME:&lt;/code&gt; to annotate problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // FIXME: shouldn’t use a global here
    total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;comments--todo&quot;&gt;&lt;/a&gt;&lt;a name=&quot;17.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#comments--todo&quot;&gt;18.6&lt;/a&gt; Use &lt;code&gt;// TODO:&lt;/code&gt; to annotate solutions to problems.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Calculator extends Abacus {
  constructor() {
    super();

    // TODO: total should be configurable by an options param
    this.total = 0;
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Whitespace&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--spaces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--spaces&quot;&gt;19.1&lt;/a&gt; Use soft tabs (space character) set to 2 spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/indent.html&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
∙∙∙∙let name;
}

// bad
function bar() {
∙let name;
}

// good
function baz() {
∙∙let name;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--before-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--before-blocks&quot;&gt;19.2&lt;/a&gt; Place 1 space before the leading brace. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-before-blocks.html&quot;&gt;&lt;code&gt;space-before-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function test(){
  console.log(&#39;test&#39;);
}

// good
function test() {
  console.log(&#39;test&#39;);
}

// bad
dog.set(&#39;attr&#39;,{
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});

// good
dog.set(&#39;attr&#39;, {
  age: &#39;1 year&#39;,
  breed: &#39;Bernese Mountain Dog&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--around-keywords&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--around-keywords&quot;&gt;19.3&lt;/a&gt; Place 1 space before the opening parenthesis in control statements (&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/keyword-spacing.html&quot;&gt;&lt;code&gt;keyword-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if(isJedi) {
  fight ();
}

// good
if (isJedi) {
  fight();
}

// bad
function fight () {
  console.log (&#39;Swooosh!&#39;);
}

// good
function fight() {
  console.log(&#39;Swooosh!&#39;);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--infix-ops&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--infix-ops&quot;&gt;19.4&lt;/a&gt; Set off operators with spaces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-infix-ops.html&quot;&gt;&lt;code&gt;space-infix-ops&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const x=y+5;

// good
const x = y + 5;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--newline-at-end&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--newline-at-end&quot;&gt;19.5&lt;/a&gt; End files with a single newline character. eslint: &lt;a href=&quot;https://github.com/eslint/eslint/raw/master/docs/rules/eol-last.md&quot;&gt;&lt;code&gt;eol-last&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
↵
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
import { es6 } from &#39;./AirbnbStyleGuide&#39;;
  // ...
export default es6;↵
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--chains&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--chains&quot;&gt;19.6&lt;/a&gt; Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which emphasizes that the line is a method call, not a new statement. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/newline-per-chained-call&quot;&gt;&lt;code&gt;newline-per-chained-call&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-whitespace-before-property&quot;&gt;&lt;code&gt;no-whitespace-before-property&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;#items&#39;).find(&#39;.selected&#39;).highlight().end().find(&#39;.open&#39;).updateCount();

// bad
$(&#39;#items&#39;).
  find(&#39;.selected&#39;).
    highlight().
    end().
  find(&#39;.open&#39;).
    updateCount();

// good
$(&#39;#items&#39;)
  .find(&#39;.selected&#39;)
    .highlight()
    .end()
  .find(&#39;.open&#39;)
    .updateCount();

// bad
const leds = stage.selectAll(&#39;.led&#39;).data(data).enter().append(&#39;svg:svg&#39;).classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2).append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;)
    .data(data)
  .enter().append(&#39;svg:svg&#39;)
    .classed(&#39;led&#39;, true)
    .attr(&#39;width&#39;, (radius + margin) * 2)
  .append(&#39;svg:g&#39;)
    .attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`)
    .call(tron.led);

// good
const leds = stage.selectAll(&#39;.led&#39;).data(data);
const svg = leds.enter().append(&#39;svg:svg&#39;);
svg.classed(&#39;led&#39;, true).attr(&#39;width&#39;, (radius + margin) * 2);
const g = svg.append(&#39;svg:g&#39;);
g.attr(&#39;transform&#39;, `translate(${radius + margin},${radius + margin})`).call(tron.led);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--after-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--after-blocks&quot;&gt;19.7&lt;/a&gt; Leave a blank line after blocks and before the next statement.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (foo) {
  return bar;
}
return baz;

// good
if (foo) {
  return bar;
}

return baz;

// bad
const obj = {
  foo() {
  },
  bar() {
  },
};
return obj;

// good
const obj = {
  foo() {
  },

  bar() {
  },
};

return obj;

// bad
const arr = [
  function foo() {
  },
  function bar() {
  },
];
return arr;

// good
const arr = [
  function foo() {
  },

  function bar() {
  },
];

return arr;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--padded-blocks&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--padded-blocks&quot;&gt;19.8&lt;/a&gt; Do not pad your blocks with blank lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/padded-blocks.html&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar() {

  console.log(foo);

}

// bad
if (baz) {

  console.log(qux);
} else {
  console.log(foo);

}

// bad
class Foo {

  constructor(bar) {
    this.bar = bar;
  }
}

// good
function bar() {
  console.log(foo);
}

// good
if (baz) {
  console.log(qux);
} else {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-blanks&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-blanks&quot;&gt;19.9&lt;/a&gt; Do not use multiple blank lines to pad your code. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;


    this.email = email;


    this.setAge(birthday);
  }


  setAge(birthday) {
    const today = new Date();


    const age = this.getAge(today, birthday);


    this.age = age;
  }


  getAge(today, birthday) {
    // ..
  }
}

// good
class Person {
  constructor(fullName, email, birthday) {
    this.fullName = fullName;
    this.email = email;
    this.setAge(birthday);
  }

  setAge(birthday) {
    const today = new Date();
    const age = getAge(today, birthday);
    this.age = age;
  }

  getAge(today, birthday) {
    // ..
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-parens&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-parens&quot;&gt;19.10&lt;/a&gt; Do not add spaces inside parentheses. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/space-in-parens.html&quot;&gt;&lt;code&gt;space-in-parens&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function bar( foo ) {
  return foo;
}

// good
function bar(foo) {
  return foo;
}

// bad
if ( foo ) {
  console.log(foo);
}

// good
if (foo) {
  console.log(foo);
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-brackets&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.10&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-brackets&quot;&gt;19.11&lt;/a&gt; Do not add spaces inside brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/array-bracket-spacing.html&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = [ 1, 2, 3 ];
console.log(foo[ 0 ]);

// good
const foo = [1, 2, 3];
console.log(foo[0]);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--in-braces&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.11&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--in-braces&quot;&gt;19.12&lt;/a&gt; Add spaces inside curly braces. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/object-curly-spacing.html&quot;&gt;&lt;code&gt;object-curly-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = {clark: &#39;kent&#39;};

// good
const foo = { clark: &#39;kent&#39; };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--max-len&quot;&gt;&lt;/a&gt;&lt;a name=&quot;18.12&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--max-len&quot;&gt;19.13&lt;/a&gt; Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per &lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#strings--line-length&quot;&gt;above&lt;/a&gt;, long strings are exempt from this rule, and should not be broken up. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/max-len.html&quot;&gt;&lt;code&gt;max-len&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This ensures readability and maintainability.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const foo = jsonData &amp;amp;&amp;amp; jsonData.foo &amp;amp;&amp;amp; jsonData.foo.bar &amp;amp;&amp;amp; jsonData.foo.bar.baz &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// bad
$.ajax({ method: &#39;POST&#39;, url: &#39;https://airbnb.com/&#39;, data: { name: &#39;John&#39; } }).done(() =&amp;gt; console.log(&#39;Congratulations!&#39;)).fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));

// good
const foo = jsonData
  &amp;amp;&amp;amp; jsonData.foo
  &amp;amp;&amp;amp; jsonData.foo.bar
  &amp;amp;&amp;amp; jsonData.foo.bar.baz
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux
  &amp;amp;&amp;amp; jsonData.foo.bar.baz.quux.xyzzy;

// good
$.ajax({
  method: &#39;POST&#39;,
  url: &#39;https://airbnb.com/&#39;,
  data: { name: &#39;John&#39; },
})
  .done(() =&amp;gt; console.log(&#39;Congratulations!&#39;))
  .fail(() =&amp;gt; console.log(&#39;You have failed this city.&#39;));
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--block-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--block-spacing&quot;&gt;19.14&lt;/a&gt; Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/block-spacing&quot;&gt;&lt;code&gt;block-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {return true;}
if (foo) { bar = 0;}

// good
function foo() { return true; }
if (foo) { bar = 0; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--comma-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--comma-spacing&quot;&gt;19.15&lt;/a&gt; Avoid spaces before commas and require a space after commas. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-spacing&quot;&gt;&lt;code&gt;comma-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var foo = 1,bar = 2;
var arr = [1 , 2];

// good
var foo = 1, bar = 2;
var arr = [1, 2];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--computed-property-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--computed-property-spacing&quot;&gt;19.16&lt;/a&gt; Enforce spacing inside of computed property brackets. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/computed-property-spacing&quot;&gt;&lt;code&gt;computed-property-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
obj[foo ]
obj[ &#39;foo&#39;]
var x = {[ b ]: a}
obj[foo[ bar ]]

// good
obj[foo]
obj[&#39;foo&#39;]
var x = { [b]: a }
obj[foo[bar]]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--func-call-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--func-call-spacing&quot;&gt;19.17&lt;/a&gt; Avoid spaces between functions and their invocations. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/func-call-spacing&quot;&gt;&lt;code&gt;func-call-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
func ();

func
();

// good
func();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--key-spacing&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--key-spacing&quot;&gt;19.18&lt;/a&gt; Enforce spacing between keys and values in object literal properties. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/key-spacing&quot;&gt;&lt;code&gt;key-spacing&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
var obj = { foo : 42 };
var obj2 = { foo:42 };

// good
var obj = { foo: 42 };
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-trailing-spaces&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-trailing-spaces&quot;&gt;19.19&lt;/a&gt; Avoid trailing spaces at the end of lines. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-trailing-spaces&quot;&gt;&lt;code&gt;no-trailing-spaces&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;whitespace--no-multiple-empty-lines&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#whitespace--no-multiple-empty-lines&quot;&gt;19.20&lt;/a&gt; Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;!-- markdownlint-disable MD012 --&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - multiple empty lines
var x = 1;


var y = 2;

// bad - 2+ newlines at end of file
var x = 1;
var y = 2;


// bad - 1+ newline(s) at beginning of file

var x = 1;
var y = 2;

// good
var x = 1;
var y = 2;

&lt;/code&gt;&lt;/pre&gt; 
  &lt;!-- markdownlint-enable MD012 --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Commas&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;commas--leading-trailing&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--leading-trailing&quot;&gt;20.1&lt;/a&gt; Leading commas: &lt;strong&gt;Nope.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-style.html&quot;&gt;&lt;code&gt;comma-style&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const story = [
    once
  , upon
  , aTime
];

// good
const story = [
  once,
  upon,
  aTime,
];

// bad
const hero = {
    firstName: &#39;Ada&#39;
  , lastName: &#39;Lovelace&#39;
  , birthYear: 1815
  , superPower: &#39;computers&#39;
};

// good
const hero = {
  firstName: &#39;Ada&#39;,
  lastName: &#39;Lovelace&#39;,
  birthYear: 1815,
  superPower: &#39;computers&#39;,
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;commas--dangling&quot;&gt;&lt;/a&gt;&lt;a name=&quot;19.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#commas--dangling&quot;&gt;20.2&lt;/a&gt; Additional trailing comma: &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/comma-dangle.html&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the &lt;a href=&quot;https://github.com/airbnb/javascript/raw/es5-deprecated/es5/README.md#commas&quot;&gt;trailing comma problem&lt;/a&gt; in legacy browsers.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;// bad - git diff without trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
-    lastName: &#39;Nightingale&#39;
+    lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &#39;Florence&#39;,
     lastName: &#39;Nightingale&#39;,
+    inventorOf: [&#39;coxcomb chart&#39;, &#39;modern nursing&#39;],
};
&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;
];

// good
const hero = {
  firstName: &#39;Dana&#39;,
  lastName: &#39;Scully&#39;,
};

const heroes = [
  &#39;Batman&#39;,
  &#39;Superman&#39;,
];

// bad
function createHero(
  firstName,
  lastName,
  inventorOf
) {
  // does nothing
}

// good
function createHero(
  firstName,
  lastName,
  inventorOf,
) {
  // does nothing
}

// good (note that a comma must not appear after a &quot;rest&quot; element)
function createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
) {
  // does nothing
}

// bad
createHero(
  firstName,
  lastName,
  inventorOf
);

// good
createHero(
  firstName,
  lastName,
  inventorOf,
);

// good (note that a comma must not appear after a &quot;rest&quot; element)
createHero(
  firstName,
  lastName,
  inventorOf,
  ...heroArgs
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Semicolons&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;semicolons--required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;20.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#semicolons--required&quot;&gt;21.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt; eslint: &lt;a href=&quot;https://eslint.org/docs/rules/semi.html&quot;&gt;&lt;code&gt;semi&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? When JavaScript encounters a line break without a semicolon, it uses a set of rules called &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; to determine whether it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad - raises exception
const luke = {}
const leia = {}
[luke, leia].forEach((jedi) =&amp;gt; jedi.father = &#39;vader&#39;)

// bad - raises exception
const reaction = &quot;No! That’s impossible!&quot;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}())

// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!
function foo() {
  return
    &#39;search your feelings, you know it to be foo&#39;
}

// good
const luke = {};
const leia = {};
[luke, leia].forEach((jedi) =&amp;gt; {
  jedi.father = &#39;vader&#39;;
});

// good
const reaction = &quot;No! That’s impossible!&quot;;
(async function meanwhileOnTheFalcon() {
  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`
  // ...
}());

// good
function foo() {
  return &#39;search your feelings, you know it to be foo&#39;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function/7365214#7365214&quot;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Type Casting &amp;amp; Coercion&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--explicit&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--explicit&quot;&gt;22.1&lt;/a&gt; Perform type coercion at the beginning of the statement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--strings&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--strings&quot;&gt;22.2&lt;/a&gt; Strings: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// =&amp;gt; this.reviewScore = 9;

// bad
const totalScore = new String(this.reviewScore); // typeof totalScore is &quot;object&quot; not &quot;string&quot;

// bad
const totalScore = this.reviewScore + &#39;&#39;; // invokes this.reviewScore.valueOf()

// bad
const totalScore = this.reviewScore.toString(); // isn’t guaranteed to return a string

// good
const totalScore = String(this.reviewScore);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--numbers&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--numbers&quot;&gt;22.3&lt;/a&gt; Numbers: Use &lt;code&gt;Number&lt;/code&gt; for type casting and &lt;code&gt;parseInt&lt;/code&gt; always with a radix for parsing strings. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/radix&quot;&gt;&lt;code&gt;radix&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed. This differs from ECMAScript 3, which merely discouraged (but allowed) octal interpretation. Many implementations have not adopted this behavior as of 2013. And, because older browsers must be supported, always specify a radix.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const inputValue = &#39;4&#39;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;gt;&amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--comment-deviations&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--comment-deviations&quot;&gt;22.4&lt;/a&gt; If for whatever reason you are doing something wild and &lt;code&gt;parseInt&lt;/code&gt; is your bottleneck and need to use Bitshift for &lt;a href=&quot;https://jsperf.com/coercion-vs-casting/3&quot;&gt;performance reasons&lt;/a&gt;, leave a comment explaining why and what you’re doing.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
/**
 * parseInt was the reason my code was slow.
 * Bitshifting the String to coerce it to a
 * Number made it a lot faster.
 */
const val = inputValue &amp;gt;&amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--bitwise&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--bitwise&quot;&gt;22.5&lt;/a&gt; &lt;strong&gt;Note:&lt;/strong&gt; Be careful when using bitshift operations. Numbers are represented as &lt;a href=&quot;https://es5.github.io/#x4.3.19&quot;&gt;64-bit values&lt;/a&gt;, but bitshift operations always return a 32-bit integer (&lt;a href=&quot;https://es5.github.io/#x11.7&quot;&gt;source&lt;/a&gt;). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. &lt;a href=&quot;https://github.com/airbnb/javascript/issues/109&quot;&gt;Discussion&lt;/a&gt;. Largest signed 32-bit Int is 2,147,483,647:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;2147483647 &amp;gt;&amp;gt; 0; // =&amp;gt; 2147483647
2147483648 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483648
2147483649 &amp;gt;&amp;gt; 0; // =&amp;gt; -2147483647
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;coercion--booleans&quot;&gt;&lt;/a&gt;&lt;a name=&quot;21.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#coercion--booleans&quot;&gt;22.6&lt;/a&gt; Booleans: eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-new-wrappers&quot;&gt;&lt;code&gt;no-new-wrappers&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const age = 0;

// bad
const hasAge = new Boolean(age);

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Naming Conventions&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;naming--descriptive&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--descriptive&quot;&gt;23.1&lt;/a&gt; Avoid single letter names. Be descriptive with your naming. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/id-length&quot;&gt;&lt;code&gt;id-length&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function q() {
  // ...
}

// good
function query() {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase&quot;&gt;23.2&lt;/a&gt; Use camelCase when naming objects, functions, and instances. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/camelcase.html&quot;&gt;&lt;code&gt;camelcase&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const OBJEcttsssss = {};
const this_is_my_object = {};
function c() {}

// good
const thisIsMyObject = {};
function thisIsMyFunction() {}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase&quot;&gt;23.3&lt;/a&gt; Use PascalCase only when naming constructors or classes. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/new-cap.html&quot;&gt;&lt;code&gt;new-cap&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function user(options) {
  this.name = options.name;
}

const bad = new user({
  name: &#39;nope&#39;,
});

// good
class User {
  constructor(options) {
    this.name = options.name;
  }
}

const good = new User({
  name: &#39;yup&#39;,
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--leading-underscore&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--leading-underscore&quot;&gt;23.4&lt;/a&gt; Do not use trailing or leading underscores. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-underscore-dangle.html&quot;&gt;&lt;code&gt;no-underscore-dangle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean “private”, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won’t count as breaking, or that tests aren’t needed. tl;dr: if you want something to be “private”, it must not be observably present.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
this.__firstName__ = &#39;Panda&#39;;
this.firstName_ = &#39;Panda&#39;;
this._firstName = &#39;Panda&#39;;

// good
this.firstName = &#39;Panda&#39;;

// good, in environments where WeakMaps are available
// see https://kangax.github.io/compat-table/es6/#test-WeakMap
const firstNames = new WeakMap();
firstNames.set(this, &#39;Panda&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--self-this&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.5&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--self-this&quot;&gt;23.5&lt;/a&gt; Don’t save references to &lt;code&gt;this&lt;/code&gt;. Use arrow functions or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function#bind&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function foo() {
  const self = this;
  return function () {
    console.log(self);
  };
}

// bad
function foo() {
  const that = this;
  return function () {
    console.log(that);
  };
}

// good
function foo() {
  return () =&amp;gt; {
    console.log(this);
  };
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--filename-matches-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.6&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--filename-matches-export&quot;&gt;23.6&lt;/a&gt; A base filename should exactly match the name of its default export.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// file 1 contents
class CheckBox {
  // ...
}
export default CheckBox;

// file 2 contents
export default function fortyTwo() { return 42; }

// file 3 contents
export default function insideDirectory() {}

// in some other file
// bad
import CheckBox from &#39;./checkBox&#39;; // PascalCase import/export, camelCase filename
import FortyTwo from &#39;./FortyTwo&#39;; // PascalCase import/filename, camelCase export
import InsideDirectory from &#39;./InsideDirectory&#39;; // PascalCase import/filename, camelCase export

// bad
import CheckBox from &#39;./check_box&#39;; // PascalCase import/export, snake_case filename
import forty_two from &#39;./forty_two&#39;; // snake_case import/filename, camelCase export
import inside_directory from &#39;./inside_directory&#39;; // snake_case import, camelCase export
import index from &#39;./inside_directory/index&#39;; // requiring the index file explicitly
import insideDirectory from &#39;./insideDirectory/index&#39;; // requiring the index file explicitly

// good
import CheckBox from &#39;./CheckBox&#39;; // PascalCase export/import/filename
import fortyTwo from &#39;./fortyTwo&#39;; // camelCase export/import/filename
import insideDirectory from &#39;./insideDirectory&#39;; // camelCase export/import/directory name/implicit &quot;index&quot;
// ^ supports both insideDirectory.js and insideDirectory/index.js
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--camelCase-default-export&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.7&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--camelCase-default-export&quot;&gt;23.7&lt;/a&gt; Use camelCase when you export-default a function. Your filename should be identical to your function’s name.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function makeStyleGuide() {
  // ...
}

export default makeStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--PascalCase-singleton&quot;&gt;&lt;/a&gt;&lt;a name=&quot;22.8&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--PascalCase-singleton&quot;&gt;23.8&lt;/a&gt; Use PascalCase when you export a constructor / class / singleton / function library / bare object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const AirbnbStyleGuide = {
  es6: {
  },
};

export default AirbnbStyleGuide;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--Acronyms-and-Initialisms&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--Acronyms-and-Initialisms&quot;&gt;23.9&lt;/a&gt; Acronyms and initialisms should always be all uppercased, or all lowercased.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? Names are for readability, not to appease a computer algorithm.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
import SmsContainer from &#39;./containers/SmsContainer&#39;;

// bad
const HttpRequests = [
  // ...
];

// good
import SMSContainer from &#39;./containers/SMSContainer&#39;;

// good
const HTTPRequests = [
  // ...
];

// also good
const httpRequests = [
  // ...
];

// best
import TextMessageContainer from &#39;./containers/TextMessageContainer&#39;;

// best
const requests = [
  // ...
];
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;naming--uppercase&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#naming--uppercase&quot;&gt;23.10&lt;/a&gt; You may optionally uppercase a constant only if it (1) is exported, (2) is a &lt;code&gt;const&lt;/code&gt; (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;What about all &lt;code&gt;const&lt;/code&gt; variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.&lt;/li&gt; 
   &lt;li&gt;What about exported objects? - Uppercase at the top level of export (e.g. &lt;code&gt;EXPORTED_OBJECT.key&lt;/code&gt;) and maintain that all nested properties do not change.&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const PRIVATE_VARIABLE = &#39;should not be unnecessarily uppercased within a file&#39;;

// bad
export const THING_TO_BE_CHANGED = &#39;should obviously not be uppercased&#39;;

// bad
export let REASSIGNABLE_VARIABLE = &#39;do not use let with uppercase variables&#39;;

// ---

// allowed but does not supply semantic value
export const apiKey = &#39;SOMEKEY&#39;;

// better in most cases
export const API_KEY = &#39;SOMEKEY&#39;;

// ---

// bad - unnecessarily uppercases key while adding no semantic value
export const MAPPING = {
  KEY: &#39;value&#39;
};

// good
export const MAPPING = {
  key: &#39;value&#39;
};
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Accessors&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--not-required&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--not-required&quot;&gt;24.1&lt;/a&gt; Accessor functions for properties are not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--no-getters-setters&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--no-getters-setters&quot;&gt;24.2&lt;/a&gt; Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use &lt;code&gt;getVal()&lt;/code&gt; and &lt;code&gt;setVal(&#39;hello&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
class Dragon {
  get age() {
    // ...
  }

  set age(value) {
    // ...
  }
}

// good
class Dragon {
  getAge() {
    // ...
  }

  setAge(value) {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--boolean-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--boolean-prefix&quot;&gt;24.3&lt;/a&gt; If the property/method is a &lt;code&gt;boolean&lt;/code&gt;, use &lt;code&gt;isVal()&lt;/code&gt; or &lt;code&gt;hasVal()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
if (!dragon.age()) {
  return false;
}

// good
if (!dragon.hasAge()) {
  return false;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;accessors--consistent&quot;&gt;&lt;/a&gt;&lt;a name=&quot;23.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#accessors--consistent&quot;&gt;24.4&lt;/a&gt; It’s okay to create &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt; functions, but be consistent.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;class Jedi {
  constructor(options = {}) {
    const lightsaber = options.lightsaber || &#39;blue&#39;;
    this.set(&#39;lightsaber&#39;, lightsaber);
  }

  set(key, val) {
    this[key] = val;
  }

  get(key) {
    return this[key];
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Events&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;events--hash&quot;&gt;&lt;/a&gt;&lt;a name=&quot;24.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#events--hash&quot;&gt;25.1&lt;/a&gt; When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a &quot;hash&quot;) instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(this).trigger(&#39;listingUpdated&#39;, listing.id);

// ...

$(this).on(&#39;listingUpdated&#39;, (e, listingID) =&amp;gt; {
  // do something with listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;prefer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// good
$(this).trigger(&#39;listingUpdated&#39;, { listingID: listing.id });

// ...

$(this).on(&#39;listingUpdated&#39;, (e, data) =&amp;gt; {
  // do something with data.listingID
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;jQuery&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--dollar-prefix&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--dollar-prefix&quot;&gt;26.1&lt;/a&gt; Prefix jQuery object variables with a &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
const sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebar = $(&#39;.sidebar&#39;);

// good
const $sidebarBtn = $(&#39;.sidebar-btn&#39;);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--cache&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--cache&quot;&gt;26.2&lt;/a&gt; Cache jQuery lookups.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
function setSidebar() {
  $(&#39;.sidebar&#39;).hide();

  // ...

  $(&#39;.sidebar&#39;).css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}

// good
function setSidebar() {
  const $sidebar = $(&#39;.sidebar&#39;);
  $sidebar.hide();

  // ...

  $sidebar.css({
    &#39;background-color&#39;: &#39;pink&#39;,
  });
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--queries&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.3&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--queries&quot;&gt;26.3&lt;/a&gt; For DOM queries use Cascading &lt;code&gt;$(&#39;.sidebar ul&#39;)&lt;/code&gt; or parent &amp;gt; child &lt;code&gt;$(&#39;.sidebar &amp;gt; ul&#39;)&lt;/code&gt;. &lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/16&quot;&gt;jsPerf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;jquery--find&quot;&gt;&lt;/a&gt;&lt;a name=&quot;25.4&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#jquery--find&quot;&gt;26.4&lt;/a&gt; Use &lt;code&gt;find&lt;/code&gt; with scoped jQuery object queries.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
$(&#39;ul&#39;, &#39;.sidebar&#39;).hide();

// bad
$(&#39;.sidebar&#39;).find(&#39;ul&#39;).hide();

// good
$(&#39;.sidebar ul&#39;).hide();

// good
$(&#39;.sidebar &amp;gt; ul&#39;).hide();

// good
$sidebar.find(&#39;ul&#39;).hide();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 5 Compatibility&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es5-compat--kangax&quot;&gt;&lt;/a&gt;&lt;a name=&quot;26.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es5-compat--kangax&quot;&gt;27.1&lt;/a&gt; Refer to &lt;a href=&quot;https://twitter.com/kangax/&quot;&gt;Kangax&lt;/a&gt;’s ES5 &lt;a href=&quot;https://kangax.github.io/es5-compat-table/&quot;&gt;compatibility table&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;ecmascript-6-styles&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;es6-styles&quot;&gt;&lt;/a&gt;&lt;a name=&quot;27.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-styles&quot;&gt;28.1&lt;/a&gt; This is a collection of links to the various ES6+ features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#arrow-functions&quot;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#classes--constructors&quot;&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-shorthand&quot;&gt;Object Shorthand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-object-concise&quot;&gt;Object Concise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-computed-properties&quot;&gt;Object Computed Properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-template-literals&quot;&gt;Template Strings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#destructuring&quot;&gt;Destructuring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-default-parameters&quot;&gt;Default Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-rest&quot;&gt;Rest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es6-array-spreads&quot;&gt;Array Spreads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#references&quot;&gt;Let and Const&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#es2016-properties--exponentiation-operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#iterators-and-generators&quot;&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a name=&quot;tc39-proposals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#tc39-proposals&quot;&gt;28.2&lt;/a&gt; Do not use &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;TC39 proposals&lt;/a&gt; that have not reached stage 3.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? &lt;a href=&quot;https://tc39.github.io/process-document/&quot;&gt;They are not finalized&lt;/a&gt;, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Standard Library&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard Library&lt;/a&gt; contains utilities that are functionally broken but remain for legacy reasons.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isnan&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isnan&quot;&gt;29.1&lt;/a&gt; Use &lt;code&gt;Number.isNaN&lt;/code&gt; instead of global &lt;code&gt;isNaN&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isNaN&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to NaN. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isNaN(&#39;1.2&#39;); // false
isNaN(&#39;1.2.3&#39;); // true

// good
Number.isNaN(&#39;1.2.3&#39;); // false
Number.isNaN(Number(&#39;1.2.3&#39;)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;standard-library--isfinite&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#standard-library--isfinite&quot;&gt;29.2&lt;/a&gt; Use &lt;code&gt;Number.isFinite&lt;/code&gt; instead of global &lt;code&gt;isFinite&lt;/code&gt;. eslint: &lt;a href=&quot;https://eslint.org/docs/rules/no-restricted-globals&quot;&gt;&lt;code&gt;no-restricted-globals&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Why? The global &lt;code&gt;isFinite&lt;/code&gt; coerces non-numbers to numbers, returning true for anything that coerces to a finite number. If this behavior is desired, make it explicit.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// bad
isFinite(&#39;2e3&#39;); // true

// good
Number.isFinite(&#39;2e3&#39;); // false
Number.isFinite(parseInt(&#39;2e3&#39;, 10)); // true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;a name=&quot;testing--yup&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.1&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--yup&quot;&gt;30.1&lt;/a&gt; &lt;strong&gt;Yup.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function foo() {
  return true;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name=&quot;testing--for-real&quot;&gt;&lt;/a&gt;&lt;a name=&quot;28.2&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#testing--for-real&quot;&gt;30.2&lt;/a&gt; &lt;strong&gt;No, but seriously&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Whichever testing framework you use, you should be writing tests!&lt;/li&gt; 
   &lt;li&gt;Strive to write many small pure functions, and minimize where mutations occur.&lt;/li&gt; 
   &lt;li&gt;Be cautious about stubs and mocks - they can make your tests more brittle.&lt;/li&gt; 
   &lt;li&gt;We primarily use &lt;a href=&quot;https://www.npmjs.com/package/mocha&quot;&gt;&lt;code&gt;mocha&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/jest&quot;&gt;&lt;code&gt;jest&lt;/code&gt;&lt;/a&gt; at Airbnb. &lt;a href=&quot;https://www.npmjs.com/package/tape&quot;&gt;&lt;code&gt;tape&lt;/code&gt;&lt;/a&gt; is also used occasionally for small, separate modules.&lt;/li&gt; 
   &lt;li&gt;100% test coverage is a good goal to strive for, even if it’s not always practical to reach it.&lt;/li&gt; 
   &lt;li&gt;Whenever you fix a bug, &lt;em&gt;write a regression test&lt;/em&gt;. A bug fixed without a regression test is almost certainly going to break again in the future.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kellegous.com/j/2013/01/26/layout-performance/&quot;&gt;On Layout &amp;amp; Web Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/string-vs-array-concat/2&quot;&gt;String vs Array Concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/try-catch-in-loop-cost/12&quot;&gt;Try/Catch Cost In a Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/bang-function&quot;&gt;Bang Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/jquery-find-vs-context-sel/164&quot;&gt;jQuery Find vs Context, Selector&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/innerhtml-vs-textcontent-for-script-text&quot;&gt;innerHTML vs textContent for script text&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsperf.com/ya-string-concat/38&quot;&gt;Long String Concatenation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta&quot;&gt;Are JavaScript functions like &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, and &lt;code&gt;filter()&lt;/code&gt; optimized for traversing arrays?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Loading...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Learning ES6+&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;Latest ECMA spec&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exploringjs.com/&quot;&gt;ExploringJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot;&gt;ES6 Compatibility Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://es6-features.org/&quot;&gt;Comprehensive Overview of ES6 Features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Read This&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/index.html&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Style Linters 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://eslint.org/&quot;&gt;ESlint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.eslintrc&quot;&gt;Airbnb Style .eslintrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://jshint.com/&quot;&gt;JSHint&lt;/a&gt; - &lt;a href=&quot;https://github.com/airbnb/javascript/raw/master/linters/.jshintrc&quot;&gt;Airbnb Style .jshintrc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Neutrino Preset - &lt;a href=&quot;https://neutrinojs.org/packages/airbnb/&quot;&gt;@neutrinojs/airbnb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Style Guides&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/jsguide.html&quot;&gt;Google JavaScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml&quot;&gt;Google JavaScript Style Guide (Old)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://contribute.jquery.org/style-guide/js/&quot;&gt;jQuery Core Style Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/idiomatic.js&quot;&gt;Principles of Writing Consistent, Idiomatic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://standardjs.com&quot;&gt;StandardJS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Other Styles&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/cjohansen/4135065&quot;&gt;Naming this in nested functions&lt;/a&gt; - Christian Johansen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/issues/52&quot;&gt;Conditional Callbacks&lt;/a&gt; - Ross Allen&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sideeffect.kr/popularconvention/#javascript&quot;&gt;Popular JavaScript Coding Conventions on GitHub&lt;/a&gt; - JeongHoon Byun&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://benalman.com/news/2012/05/multiple-var-statements-javascript/&quot;&gt;Multiple var statements in JavaScript, not superfluous&lt;/a&gt; - Ben Alman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/&quot;&gt;Understanding JavaScript Closures&lt;/a&gt; - Angus Croll&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.2ality.com/2013/06/basic-javascript.html&quot;&gt;Basic JavaScript for the impatient programmer&lt;/a&gt; - Dr. Axel Rauschmayer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youmightnotneedjquery.com/&quot;&gt;You Might Not Need jQuery&lt;/a&gt; - Zack Bloom &amp;amp; Adam Schwartz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot;&gt;ES6 Features&lt;/a&gt; - Luke Hoban&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bendc/frontend-guidelines&quot;&gt;Frontend Guidelines&lt;/a&gt; - Benjamin De Cock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt; - Douglas Crockford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; - Stoyan Stefanov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X&quot;&gt;Pro JavaScript Design Patterns&lt;/a&gt; - Ross Harmes and Dustin Diaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&quot;&gt;High Performance Web Sites: Essential Knowledge for Front-End Engineers&lt;/a&gt; - Steve Souders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680&quot;&gt;Maintainable JavaScript&lt;/a&gt; - Nicholas C. Zakas&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Web-Applications-Alex-MacCaw/dp/144930351X&quot;&gt;JavaScript Web Applications&lt;/a&gt; - Alex MacCaw&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273&quot;&gt;Pro JavaScript Techniques&lt;/a&gt; - John Resig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Smashing-Node-js-JavaScript-Everywhere-Magazine/dp/1119962595&quot;&gt;Smashing Node.js: JavaScript Everywhere&lt;/a&gt; - Guillermo Rauch&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secrets-JavaScript-Ninja-John-Resig/dp/193398869X&quot;&gt;Secrets of the JavaScript Ninja&lt;/a&gt; - John Resig and Bear Bibeault&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavaScript&lt;/a&gt; - Henrik Joreteg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://superherojs.com/&quot;&gt;Superhero.js&lt;/a&gt; - Kim Joar Bekkelund, Mads Mobæk, &amp;amp; Olav Bjorkoy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jsbooks.revolunet.com/&quot;&gt;JSBooks&lt;/a&gt; - Julien Bouquillon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third Party JavaScript&lt;/a&gt; - Ben Vinegar and Anton Kovalyov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amzn.com/0321812182&quot;&gt;Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript&lt;/a&gt; - David Herman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eloquentjavascript.net/&quot;&gt;Eloquent JavaScript&lt;/a&gt; - Marijn Haverbeke&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shop.oreilly.com/product/0636920033769.do&quot;&gt;You Don’t Know JS: ES6 &amp;amp; Beyond&lt;/a&gt; - Kyle Simpson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweekly.com/&quot;&gt;JavaScript Weekly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptweblog.wordpress.com/&quot;&gt;JavaScript, JavaScript...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/weblog&quot;&gt;Bocoup Weblog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adequatelygood.com/&quot;&gt;Adequately Good&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nczonline.net/&quot;&gt;NCZOnline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/&quot;&gt;Perfection Kills&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://dmitry.baranovskiy.com/&quot;&gt;Dmitry Baranovskiy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/?s=javascript&quot;&gt;nettuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://javascriptair.com/&quot;&gt;JavaScript Air&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/js-jabber/&quot;&gt;JavaScript Jabber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;In the Wild&lt;/h2&gt; 
&lt;p&gt;This is a list of organizations that are using this style guide. Send us a pull request and we&#39;ll add you to the list.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;123erfasst&lt;/strong&gt;: &lt;a href=&quot;https://github.com/123erfasst/javascript&quot;&gt;123erfasst/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Catalyzer&lt;/strong&gt;: &lt;a href=&quot;https://github.com/4Catalyzer/javascript&quot;&gt;4Catalyzer/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aan Zee&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AanZee/javascript&quot;&gt;AanZee/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;: &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;airbnb/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AloPeyk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AloPeyk&quot;&gt;AloPeyk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AltSchool&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AltSchool/javascript&quot;&gt;AltSchool/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Apartmint&lt;/strong&gt;: &lt;a href=&quot;https://github.com/apartmint/javascript&quot;&gt;apartmint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ascribe&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ascribe/javascript&quot;&gt;ascribe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avant&lt;/strong&gt;: &lt;a href=&quot;https://github.com/avantcredit/javascript&quot;&gt;avantcredit/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Axept&lt;/strong&gt;: &lt;a href=&quot;https://github.com/axept/javascript&quot;&gt;axept/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Billabong&lt;/strong&gt;: &lt;a href=&quot;https://github.com/billabong/javascript&quot;&gt;billabong/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bisk&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Bisk/&quot;&gt;bisk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bonhomme&lt;/strong&gt;: &lt;a href=&quot;https://github.com/bonhommeparis/javascript&quot;&gt;bonhommeparis/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Brainshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/brainshark/javascript&quot;&gt;brainshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CaseNine&lt;/strong&gt;: &lt;a href=&quot;https://github.com/CaseNine/javascript&quot;&gt;CaseNine/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cerner&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner/&quot;&gt;Cerner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chartboost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ChartBoost/javascript-style-guide&quot;&gt;ChartBoost/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coeur d&#39;Alene Tribe&lt;/strong&gt;: &lt;a href=&quot;https://www.cdatribe-nsn.gov&quot;&gt;www.cdatribe-nsn.gov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ComparaOnline&lt;/strong&gt;: &lt;a href=&quot;https://github.com/comparaonline/javascript-style-guide&quot;&gt;comparaonline/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compass Learning&lt;/strong&gt;: &lt;a href=&quot;https://github.com/compasslearning/javascript-style-guide&quot;&gt;compasslearning/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DailyMotion&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dailymotion/javascript&quot;&gt;dailymotion/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DoSomething&lt;/strong&gt;: &lt;a href=&quot;https://github.com/DoSomething/eslint-config&quot;&gt;DoSomething/eslint-config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digitpaint&lt;/strong&gt; &lt;a href=&quot;https://github.com/digitpaint/javascript&quot;&gt;digitpaint/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Drupal&lt;/strong&gt;: &lt;a href=&quot;https://git.drupalcode.org/project/drupal/blob/8.6.x/core/.eslintrc.json&quot;&gt;www.drupal.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ecosia&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ecosia/javascript&quot;&gt;ecosia/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evernote/javascript-style-guide&quot;&gt;evernote/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolution Gaming&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evolution-gaming/javascript&quot;&gt;evolution-gaming/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;EvozonJs&lt;/strong&gt;: &lt;a href=&quot;https://github.com/evozonjs/javascript&quot;&gt;evozonjs/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ExactTarget&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ExactTarget/javascript&quot;&gt;ExactTarget/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexberry&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Flexberry/javascript-style-guide&quot;&gt;Flexberry/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gawker Media&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gawkermedia/&quot;&gt;gawkermedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Electric&lt;/strong&gt;: &lt;a href=&quot;https://github.com/GeneralElectric/javascript&quot;&gt;GeneralElectric/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generation Tux&lt;/strong&gt;: &lt;a href=&quot;https://github.com/generationtux/styleguide&quot;&gt;GenerationTux/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoodData&lt;/strong&gt;: &lt;a href=&quot;https://github.com/gooddata/gdc-js-style&quot;&gt;gooddata/gdc-js-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GreenChef&lt;/strong&gt;: &lt;a href=&quot;https://github.com/greenchef/javascript&quot;&gt;greenchef/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grooveshark&lt;/strong&gt;: &lt;a href=&quot;https://github.com/grooveshark/javascript&quot;&gt;grooveshark/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grupo-Abraxas&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Grupo-Abraxas/javascript&quot;&gt;Grupo-Abraxas/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Happeo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/happeo/javascript&quot;&gt;happeo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Honey&lt;/strong&gt;: &lt;a href=&quot;https://github.com/honeyscience/javascript&quot;&gt;honeyscience/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;How About We&lt;/strong&gt;: &lt;a href=&quot;https://github.com/howaboutwe/javascript-style-guide&quot;&gt;howaboutwe/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HubSpot&lt;/strong&gt;: &lt;a href=&quot;https://github.com/HubSpot/javascript&quot;&gt;HubSpot/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyper&lt;/strong&gt;: &lt;a href=&quot;https://github.com/hyperoslo/javascript-playbook/raw/master/style.md&quot;&gt;hyperoslo/javascript-playbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;InterCity Group&lt;/strong&gt;: &lt;a href=&quot;https://github.com/intercitygroup/javascript-style-guide&quot;&gt;intercitygroup/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jam3&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Jam3/Javascript-Code-Conventions&quot;&gt;Jam3/Javascript-Code-Conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSSolutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JSSolutions/javascript&quot;&gt;JSSolutions/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kaplan Komputing&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kaplankomputing/javascript&quot;&gt;kaplankomputing/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KickorStick&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kickorstick/&quot;&gt;kickorstick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kinetica Solutions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/kinetica/Javascript-style-guide&quot;&gt;kinetica/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LEINWAND&lt;/strong&gt;: &lt;a href=&quot;https://github.com/LEINWAND/javascript&quot;&gt;LEINWAND/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lonely Planet&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lonelyplanet/javascript&quot;&gt;lonelyplanet/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;M2GEN&lt;/strong&gt;: &lt;a href=&quot;https://github.com/M2GEN/javascript&quot;&gt;M2GEN/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mighty Spring&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mightyspring/javascript&quot;&gt;mightyspring/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MinnPost&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MinnPost/javascript&quot;&gt;MinnPost/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MitocGroup&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MitocGroup/javascript&quot;&gt;MitocGroup/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Muber&lt;/strong&gt;: &lt;a href=&quot;https://github.com/muber/&quot;&gt;muber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;National Geographic&lt;/strong&gt;: &lt;a href=&quot;https://github.com/natgeo/&quot;&gt;natgeo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NullDev&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NullDevCo/JavaScript-Styleguide&quot;&gt;NullDevCo/JavaScript-Styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nulogy&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nulogy/javascript&quot;&gt;nulogy/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orange Hill Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orangehill/javascript&quot;&gt;orangehill/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orion Health&lt;/strong&gt;: &lt;a href=&quot;https://github.com/orionhealth/javascript&quot;&gt;orionhealth/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OutBoxSoft&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OutBoxSoft/javascript&quot;&gt;OutBoxSoft/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peerby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Peerby/javascript&quot;&gt;Peerby/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pier 1&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pier1/javascript&quot;&gt;Pier1/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qotto&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Qotto/javascript-style-guide&quot;&gt;Qotto/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;a href=&quot;https://facebook.github.io/react/contributing/how-to-contribute.html#style-guide&quot;&gt;facebook.github.io/react/contributing/how-to-contribute.html#style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REI&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rei/code-style-guides/&quot;&gt;reidev/js-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ripple&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ripple/javascript-style-guide&quot;&gt;ripple/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sainsbury’s Supermarkets&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jsainsburyplc&quot;&gt;jsainsburyplc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shutterfly&lt;/strong&gt;: &lt;a href=&quot;https://github.com/shutterfly/javascript&quot;&gt;shutterfly/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sourcetoad&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sourcetoad/javascript&quot;&gt;sourcetoad/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Springload&lt;/strong&gt;: &lt;a href=&quot;https://github.com/springload/&quot;&gt;springload&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StratoDem Analytics&lt;/strong&gt;: &lt;a href=&quot;https://github.com/stratodem/javascript&quot;&gt;stratodem/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SteelKiwi Development&lt;/strong&gt;: &lt;a href=&quot;https://github.com/steelkiwi/javascript&quot;&gt;steelkiwi/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;StudentSphere&lt;/strong&gt;: &lt;a href=&quot;https://github.com/studentsphere/guide-javascript&quot;&gt;studentsphere/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SwoopApp&lt;/strong&gt;: &lt;a href=&quot;https://github.com/swoopapp/javascript&quot;&gt;swoopapp/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SysGarage&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sysgarage/javascript-style-guide&quot;&gt;sysgarage/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syzygy Warsaw&lt;/strong&gt;: &lt;a href=&quot;https://github.com/syzygypl/javascript&quot;&gt;syzygypl/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Target&lt;/strong&gt;: &lt;a href=&quot;https://github.com/target/javascript&quot;&gt;target/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terra&lt;/strong&gt;: &lt;a href=&quot;https://github.com/cerner?utf8=%E2%9C%93&amp;amp;q=terra&amp;amp;type=&amp;amp;language=&quot;&gt;terra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TheLadders&lt;/strong&gt;: &lt;a href=&quot;https://github.com/TheLadders/javascript&quot;&gt;TheLadders/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Nerdery&lt;/strong&gt;: &lt;a href=&quot;https://github.com/thenerdery/javascript-standards&quot;&gt;thenerdery/javascript-standards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tomify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tomprats&quot;&gt;tomprats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traitify&lt;/strong&gt;: &lt;a href=&quot;https://github.com/traitify/eslint-config-traitify&quot;&gt;traitify/eslint-config-traitify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;T4R Technology&lt;/strong&gt;: &lt;a href=&quot;https://github.com/T4R-Technology/javascript&quot;&gt;T4R-Technology/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UrbanSim&lt;/strong&gt;: &lt;a href=&quot;https://github.com/urbansim/&quot;&gt;urbansim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VoxFeed&lt;/strong&gt;: &lt;a href=&quot;https://github.com/VoxFeed/javascript-style-guide&quot;&gt;VoxFeed/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeBox Studio&lt;/strong&gt;: &lt;a href=&quot;https://github.com/weboxstudio/javascript&quot;&gt;weboxstudio/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Weggo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Weggo/javascript&quot;&gt;Weggo/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zillow&lt;/strong&gt;: &lt;a href=&quot;https://github.com/zillow/javascript&quot;&gt;zillow/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ZocDoc&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ZocDoc/javascript&quot;&gt;ZocDoc/javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This style guide is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;br&quot;&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/armoucar/javascript-style-guide&quot;&gt;armoucar/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bulgaria.png&quot; alt=&quot;bg&quot;&gt; &lt;strong&gt;Bulgarian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/borislavvv/javascript&quot;&gt;borislavvv/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fpmweb/javascript-style-guide/master/img/catala.png&quot; alt=&quot;ca&quot;&gt; &lt;strong&gt;Catalan&lt;/strong&gt;: &lt;a href=&quot;https://github.com/fpmweb/javascript-style-guide&quot;&gt;fpmweb/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png&quot; alt=&quot;cn&quot;&gt; &lt;strong&gt;Chinese (Simplified)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lin-123/javascript&quot;&gt;lin-123/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png&quot; alt=&quot;tw&quot;&gt; &lt;strong&gt;Chinese (Traditional)&lt;/strong&gt;: &lt;a href=&quot;https://github.com/jigsawye/javascript&quot;&gt;jigsawye/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png&quot; alt=&quot;fr&quot;&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href=&quot;https://github.com/nmussy/javascript-style-guide&quot;&gt;nmussy/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png&quot; alt=&quot;de&quot;&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href=&quot;https://github.com/timofurrer/javascript-style-guide&quot;&gt;timofurrer/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png&quot; alt=&quot;it&quot;&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sinkswim/javascript-style-guide&quot;&gt;sinkswim/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png&quot; alt=&quot;jp&quot;&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mitsuruog/javascript-style-guide&quot;&gt;mitsuruog/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ParkSB/javascript-style-guide&quot;&gt;ParkSB/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;Russian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/leonidlebedev/javascript-airbnb&quot;&gt;leonidlebedev/javascript-airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png&quot; alt=&quot;es&quot;&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/paolocarrasco/javascript-style-guide&quot;&gt;paolocarrasco/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Thailand.png&quot; alt=&quot;th&quot;&gt; &lt;strong&gt;Thai&lt;/strong&gt;: &lt;a href=&quot;https://github.com/lvarayut/javascript-style-guide&quot;&gt;lvarayut/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png&quot; alt=&quot;tr&quot;&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href=&quot;https://github.com/eraycetinay/javascript&quot;&gt;eraycetinay/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png&quot; alt=&quot;ua&quot;&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ivanzusko/javascript&quot;&gt;ivanzusko/javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png&quot; alt=&quot;vn&quot;&gt; &lt;strong&gt;Vietnam&lt;/strong&gt;: &lt;a href=&quot;https://github.com/dangkyokhoang/javascript-style-guide&quot;&gt;dangkyokhoang/javascript-style-guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The JavaScript Style Guide Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/wiki/The-JavaScript-Style-Guide-Guide&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat With Us About JavaScript&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find us on &lt;a href=&quot;https://gitter.im/airbnb/javascript&quot;&gt;gitter&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/graphs/contributors&quot;&gt;View Contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;(The MIT License)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2012 Airbnb&lt;/p&gt; 
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#39;Software&#39;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/airbnb/javascript/master/#table-of-contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Amendments&lt;/h2&gt; 
&lt;p&gt;We encourage you to fork this guide and change the rules to fit your team’s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.&lt;/p&gt; 
&lt;h1&gt;};&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>chrisleekr/binance-trading-bot</title>
      <link>https://github.com/chrisleekr/binance-trading-bot</link>
      <description>&lt;p&gt;Automated Binance trading bot - Trade multiple cryptocurrencies. Buy low/sell high with Grid Trading. Integrated with TradingView technical analysis&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binance Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/actions?query=workflow%3APush&quot;&gt;&lt;img src=&quot;https://github.com/chrisleekr/binance-trading-bot/workflows/Push/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;CodeCov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chrisleekr/binance-trading-bot&quot; alt=&quot;Docker pull&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/chrisleekr/binance-trading-bot&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Automated Binance trading bot with trailing buy/sell strategy&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.ko.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%ED%95%9C%EA%B5%AD%EC%96%B4-brightgreen.svg?sanitize=true&quot; alt=&quot;ko&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.zh-cn.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%E4%B8%AD%E6%96%87-blue.svg?sanitize=true&quot; alt=&quot;中文&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is a test project. I am just testing my code.&lt;/p&gt; 
&lt;h2&gt;Warnings&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;I cannot guarantee whether you can make money or not.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk! I have no responsibility for any loss or hardship incurred directly or indirectly by using this code. Read &lt;a href=&quot;https://raw.githubusercontent.com/chrisleekr/binance-trading-bot/master/#disclaimer&quot;&gt;disclaimer&lt;/a&gt; before using this code.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before updating the bot, make sure to record the last buy price in the note. It may lose the configuration or last buy price records.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;h3&gt;Trailing Grid Trade Buy/Sell Bot&lt;/h3&gt; 
&lt;p&gt;This bot is using the concept of trailing buy/sell order which allows following the price fall/rise.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Trailing Stop Orders About Trailing Stop Orders Concept you can find at &lt;a href=&quot;https://www.binance.com/en/support/faq/360042299292&quot;&gt;Binance Official document&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;TL;DR Place orders at a fixed value or percentage when the price changes. Using this feature you can buy at the lowest possible price when buying down and sell at the highest possible price when selling up.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot supports multiple buy/sell orders based on the configuration.&lt;/li&gt; 
 &lt;li&gt;The bot can monitor multiple symbols. All symbols will be monitored per second.&lt;/li&gt; 
 &lt;li&gt;The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version is 3.2.20, which is provided by &lt;a href=&quot;https://hub.docker.com/r/apcheamitru/arm32v7-mongo&quot;&gt;apcheamitru&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The bot is tested/working with Linux and Raspberry Pi 4 32bit. Other platforms are not tested.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Buy Signal&lt;/h4&gt; 
&lt;p&gt;The bot will continuously monitor the coin based on the grid trade configuration.&lt;/p&gt; 
&lt;p&gt;For grid trade #1, the bot will place a STOP-LOSS-LIMIT order to buy when the current price reaches the lowest price. If the current price continuously falls, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;p&gt;After grid trade #1, the bot will monitor the COIN based on the last buy price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot will not place a buy order of the grid trade #1 if has enough coin (typically over $10 worth) to sell when reaches the trigger price for selling.&lt;/li&gt; 
 &lt;li&gt;The bot will remove the last buy price if the estimated value is less than the last buy price removal threshold.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Buy Scenario&lt;/h5&gt; 
&lt;p&gt;Let say, if the buy grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;USDT&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;1.051&lt;/td&gt; 
     &lt;td&gt;50&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2&lt;/td&gt; 
     &lt;td&gt;0.8&lt;/td&gt; 
     &lt;td&gt;1.03&lt;/td&gt; 
     &lt;td&gt;1.031&lt;/td&gt; 
     &lt;td&gt;100&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To make it easier to understand, I will use &lt;code&gt;$&lt;/code&gt; as a USDT symbol. For the simple calculation, I do not take an account for the commission. In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;Your 1st grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No#: 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.05 (5.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.051 (5.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $50&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $105&lt;/li&gt; 
 &lt;li&gt;Lowest price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When the current price is falling to the lowest price ($100) and lower than ATH(All-Time High) restricted price if enabled, the bot will place new STOP-LOSS-LIMIT order for buying.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 1.05 = $105&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 1.051 = $105.1&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.47573&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $95 * 1.05 = $99.75&lt;/li&gt; 
 &lt;li&gt;Limit price: $95 * 1.051 = $99.845&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st purchase for the coin. The last buy price will be recorded as &lt;code&gt;$99.845&lt;/code&gt;. The purchased quantity will be &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying.&lt;/p&gt; 
&lt;p&gt;Your 2nd grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid#: 2&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $99.845&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 0.8 (20%)&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.03 (3.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.031 (3.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And if the current price is continuously falling to &lt;code&gt;$79.876&lt;/code&gt; (20% lower), then the bot will place new STOP-LOSS-LIMIT order for the 2nd grid trading for the coin.&lt;/p&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $75&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $75 * 1.03 = $77.25&lt;/li&gt; 
 &lt;li&gt;Limit price: $75 * 1.031 = $77.325&lt;/li&gt; 
 &lt;li&gt;Quantity: 1.29&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $78&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd purchase for the coin. The last buy price will be automatically re-calculated as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Final last buy price: ($50 + $100)/(0.5 COIN + 1.29 COIN) = $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;In-depth Buy Configuration in-depth&lt;/h5&gt; 
&lt;p&gt;The detailed document for buy configuration available here.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Buy-Scenario&quot;&gt;https://github.com/chrisleekr/binance-trading-bot/wiki/Buy-Scenario&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sell Signal&lt;/h3&gt; 
&lt;p&gt;If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal of the grid trade #1. Once the current price reaches the trigger price of the grid trade #1, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the bot does not have a record for the last buy price, the bot will not sell the coin.&lt;/li&gt; 
 &lt;li&gt;If the coin is worth less than the last buy price removal threshold, then the bot will remove the last buy price.&lt;/li&gt; 
 &lt;li&gt;If the coin is not worth than the minimum notional value, then the bot will not place an order.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;Sell Quantity Percentage&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1st&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;0.97&lt;/td&gt; 
     &lt;td&gt;0.969&lt;/td&gt; 
     &lt;td&gt;0.5&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2nd&lt;/td&gt; 
     &lt;td&gt;1.08&lt;/td&gt; 
     &lt;td&gt;0.95&lt;/td&gt; 
     &lt;td&gt;0.949&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unlike buy, the sell configuration will use the percentage of a quantity. If you want to sell all of your coin quantity, then simply configure it as &lt;code&gt;1&lt;/code&gt; (100%).&lt;/p&gt; 
&lt;p&gt;From the last buy actions, you now have the following balances:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 1.79&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your 1st grid trading for selling is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No# 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1.05&lt;/li&gt; 
 &lt;li&gt;Stop price percentage: 0.97&lt;/li&gt; 
 &lt;li&gt;Limit price percentage: 0.969&lt;/li&gt; 
 &lt;li&gt;Sell amount percentage: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $88&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As the current price is higher than the sell trigger price($87.99), then the bot will place new STOP-LOSS-LIMIT order for selling.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $88 * 0.97 = $85.36&lt;/li&gt; 
 &lt;li&gt;Limit price: $88 * 0.969 = $85.272&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $90 * 0.97 = $87.30&lt;/li&gt; 
 &lt;li&gt;Limit price: $90 * 0.969 = $87.21&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $87&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st sell for the coin. Then the bot will now wait for 2nd selling trigger price ($83.80 * 1.08 = $90.504).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 0.895&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $91&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the current price($91) is higher than 2nd selling trigger price ($90.504), the bot will place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $91 * 0.95 = $86.45&lt;/li&gt; 
 &lt;li&gt;Limit price: $91 * 0.949 = $86.359&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 0.95 = $95&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 0.949 = $94.9&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $94&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd sell for the coin.&lt;/p&gt; 
&lt;p&gt;The final profit would be&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1st sell: $94.9 * 0.895 = $84.9355&lt;/li&gt; 
 &lt;li&gt;2nd sell: $87.21 * 0.895 = $78.05295&lt;/li&gt; 
 &lt;li&gt;Final profit: $162 (8% profit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;In-depth Sell Configuration&lt;/h5&gt; 
&lt;p&gt;The detailed document for buy configuration available here.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Sell-Scenario&quot;&gt;https://github.com/chrisleekr/binance-trading-bot/wiki/Sell-Scenario&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Features&quot;&gt;Features&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manual trade&lt;/li&gt; 
 &lt;li&gt;Convert small balances to BNB&lt;/li&gt; 
 &lt;li&gt;Trade all symbols&lt;/li&gt; 
 &lt;li&gt;Monitoring multiple coins simultaneously&lt;/li&gt; 
 &lt;li&gt;Stop-Loss&lt;/li&gt; 
 &lt;li&gt;Restrict buying with ATH price&lt;/li&gt; 
 &lt;li&gt;Grid Trade for buy/sell&lt;/li&gt; 
 &lt;li&gt;Integrated with TradingView Technical Analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frontend + WebSocket&lt;/h3&gt; 
&lt;p&gt;React.js based frontend communicating via Web Socket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;List monitoring coins with buy/sell signals/open orders&lt;/li&gt; 
 &lt;li&gt;View account balances&lt;/li&gt; 
 &lt;li&gt;View open/closed trades&lt;/li&gt; 
 &lt;li&gt;Manage global/symbol settings&lt;/li&gt; 
 &lt;li&gt;Delete caches that are not monitored&lt;/li&gt; 
 &lt;li&gt;Link to public URL&lt;/li&gt; 
 &lt;li&gt;Support Add to Home Screen&lt;/li&gt; 
 &lt;li&gt;Secure frontend&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Parameters&lt;/h2&gt; 
&lt;p&gt;Use environment parameters to adjust parameters. Check &lt;code&gt;/config/custom-environment-variables.json&lt;/code&gt; to see list of available environment parameters.&lt;/p&gt; 
&lt;p&gt;Or use the frontend to adjust configurations after launching the application.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.dist&lt;/code&gt;.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Environment Key&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
     &lt;th&gt;Sample Value&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_ENABLED&lt;/td&gt; 
     &lt;td&gt;Slack enable/disable&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_WEBHOOK_URL&lt;/td&gt; 
     &lt;td&gt;Slack webhook URL&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://slack.com/intl/en-au/help/articles/115005265063-Incoming-webhooks-for-Slack&quot;&gt;Slack&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_CHANNEL&lt;/td&gt; 
     &lt;td&gt;Slack channel&lt;/td&gt; 
     &lt;td&gt;&quot;#binance&quot;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_USERNAME&lt;/td&gt; 
     &lt;td&gt;Slack username&lt;/td&gt; 
     &lt;td&gt;Chris&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable &lt;a href=&quot;https://github.com/localtunnel/localtunnel&quot;&gt;local tunnel&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_SUBDOMAIN&lt;/td&gt; 
     &lt;td&gt;Local tunnel public URL subdomain&lt;/td&gt; 
     &lt;td&gt;binance&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable frontend authentication&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_PASSWORD&lt;/td&gt; 
     &lt;td&gt;Frontend password&lt;/td&gt; 
     &lt;td&gt;123456&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOG_LEVEL&lt;/td&gt; 
     &lt;td&gt;Logging level. &lt;a href=&quot;https://www.npmjs.com/package/bunyan#levels&quot;&gt;Possible values described on &lt;code&gt;bunyan&lt;/code&gt; docs.&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;ERROR&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;em&gt;A local tunnel makes the bot accessible from the outside. Please set the subdomain of the local tunnel as a subdomain that only you can remember.&lt;/em&gt; &lt;em&gt;You must change the authentication password; otherwise, it will be configured as the default password.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch/Update the bot with docker-compose&lt;/p&gt; &lt;p&gt;Pull latest code first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If want production/live mode, then use the latest build image from DockerHub:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose -f docker-compose.server.yml pull
docker-compose -f docker-compose.server.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or if want development/test mode, then run below commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When launching the application, it will notify public URL to the Slack.&lt;/li&gt; 
   &lt;li&gt;If you have any issue with the bot, you can check the log to find out what happened with the bot. Please take a look &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Install via Stackfile&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href=&quot;https://www.portainer.io/&quot;&gt;Portainer&lt;/a&gt; create new Stack&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy content of &lt;code&gt;docker-stack.yml&lt;/code&gt; or upload the file&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set environment keys for &lt;code&gt;binance-bot&lt;/code&gt; in the &lt;code&gt;docker-stack.yml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch and open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Password Protected&lt;/th&gt; 
   &lt;th&gt;Frontend Mobile&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/133920104-49d1b590-c2ba-46d7-a294-eb6b24b459f5.png&quot; alt=&quot;Password Protected&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/137472107-4059fcdf-5174-4282-81af-80cea5b269a0.png&quot; alt=&quot;Frontend Mobile&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Manual Trade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318581-4e422ac9-b145-4e83-a90d-5c05c61d6e2f.png&quot; alt=&quot;Setting&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318630-f2180e1b-3feb-48fa-a083-4cb7f90f743f.png&quot; alt=&quot;Manual Trade&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Frontend Desktop&lt;/th&gt; 
   &lt;th&gt;Closed Trades&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/137472148-7be1e19b-3ce5-4d5a-aa28-18c55b3b48aa.png&quot; alt=&quot;Frontend Desktop&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/137472190-a4c6ef0f-3399-44bb-852f-eedb7c67d629.png&quot; alt=&quot;Closed Trades&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Sample Trade&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chart&lt;/th&gt; 
   &lt;th&gt;Buy Orders&lt;/th&gt; 
   &lt;th&gt;Sell Orders&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027391-192db300-8444-11eb-8df4-91c98d0c835b.png&quot; alt=&quot;Chart&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027403-36628180-8444-11eb-91dc-f3cdabc5a79e.png&quot; alt=&quot;Buy Orders&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027411-4b3f1500-8444-11eb-8525-37f02a63de25.png&quot; alt=&quot;Sell Orders&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Changes &amp;amp; Todo&lt;/h2&gt; 
&lt;p&gt;Please refer &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; to view the past changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Develop simple setup screen for secrets&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Allow to execute stop-loss before buy action - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/299&quot;&gt;#299&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve sell strategy with conditional stop price percentage based on the profit percentage - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/94&quot;&gt;#94&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Add sudden drop buy strategy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/67&quot;&gt;#67&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Manage setting profiles (save/change/load?/export?) - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/151&quot;&gt;#151&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve notifications by supporting Apprise - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/106&quot;&gt;#106&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support cool time after hitting the lowest price before buy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/105&quot;&gt;#105&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Reset global configuration to initial configuration - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/97&quot;&gt;#97&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support multilingual frontend - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/56&quot;&gt;#56&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Non linear stop price and chase function - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/246&quot;&gt;#246&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support STOP-LOSS configuration per grid trade for selling - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/261&quot;&gt;#261&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, feel free to make a small &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/DONATIONS.md&quot;&gt;donation&lt;/a&gt; to the developer.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d0x2f&quot;&gt;@d0x2f&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And many others! Thanks guys!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all contributors &lt;span&gt;❤️&lt;/span&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;Click to see our heroes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I give no warranty and accepts no responsibility or liability for the accuracy or the completeness of the information and materials contained in this project. Under no circumstances will I be held responsible or liable in any way for any claims, damages, losses, expenses, costs or liabilities whatsoever (including, without limitation, any direct or indirect damages for loss of profits, business interruption or loss of information) resulting from or arising directly or indirectly from your use of or inability to use this code or any code linked to it, or from your reliance on the information and material on this code, even if I have been advised of the possibility of such damages in advance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trufflesuite/truffle</title>
      <link>https://github.com/trufflesuite/truffle</link>
      <description>&lt;p&gt;A tool for developing smart contracts. Crafted with the finest cacaos.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://trufflesuite.com/img/truffle-logo-dark.svg?sanitize=true&quot; width=&quot;200&quot;&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/truffle&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/truffle.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/truffle&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/truffle.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/consensys/truffle?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/consensys/truffle&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/trufflesuite/truffle&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/trufflesuite/truffle/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Truffle is a development environment, testing framework and asset pipeline for Ethereum, aiming to make life as an Ethereum developer easier. With Truffle, you get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built-in smart contract compilation, linking, deployment and binary management.&lt;/li&gt; 
 &lt;li&gt;Automated contract testing with Mocha and Chai.&lt;/li&gt; 
 &lt;li&gt;Configurable build pipeline with support for custom build processes.&lt;/li&gt; 
 &lt;li&gt;Scriptable deployment &amp;amp; migrations framework.&lt;/li&gt; 
 &lt;li&gt;Network management for deploying to many public &amp;amp; private networks.&lt;/li&gt; 
 &lt;li&gt;Interactive console for direct contract communication.&lt;/li&gt; 
 &lt;li&gt;Instant rebuilding of assets during development.&lt;/li&gt; 
 &lt;li&gt;External script runner that executes scripts within a Truffle environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ℹ️ &lt;strong&gt;Contributors&lt;/strong&gt;: Please see the &lt;a href=&quot;https://raw.githubusercontent.com/trufflesuite/truffle/develop/#development&quot;&gt;Development&lt;/a&gt; section of this README.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g truffle
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: To avoid any strange permissions errors, we recommend using &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;nvm&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Usage&lt;/h3&gt; 
&lt;p&gt;For a default set of contracts and tests, run the following within an empty project directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ truffle init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From there, you can run &lt;code&gt;truffle compile&lt;/code&gt;, &lt;code&gt;truffle migrate&lt;/code&gt; and &lt;code&gt;truffle test&lt;/code&gt; to compile your contracts, deploy those contracts to the network, and run their associated unit tests.&lt;/p&gt; 
&lt;p&gt;Truffle comes bundled with a local development blockchain server that launches automatically when you invoke the commands above. If you&#39;d like to &lt;a href=&quot;https://trufflesuite.com/docs/advanced/configuration&quot;&gt;configure a more advanced development environment&lt;/a&gt; we recommend you install the blockchain server separately by running &lt;code&gt;npm install -g ganache-cli&lt;/code&gt; at the command line.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trufflesuite/ganache&quot;&gt;ganache&lt;/a&gt;: a command-line version of Truffle&#39;s blockchain server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trufflesuite/ganache-ui&quot;&gt;ganache-ui&lt;/a&gt;: A GUI for the server that displays your transaction history and chain state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://trufflesuite.com/docs/&quot;&gt;Official Truffle Documentation&lt;/a&gt; for guides, tips, and examples.&lt;/p&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;We welcome pull requests. To get started, just fork this repo, clone it locally, and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# Install
npm install -g yarn
yarn bootstrap

# Test
yarn test

# Adding dependencies to a package
cd packages/&amp;lt;truffle-package&amp;gt;
yarn add &amp;lt;npm-package&amp;gt; [--dev] # Use yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;d like to update a dependency to the same version across all packages, you might find &lt;a href=&quot;https://www.npmjs.com/package/lerna-update-wizard&quot;&gt;this utility&lt;/a&gt; helpful.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Notes on project branches:&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;master&lt;/code&gt;: Stable, released version (v5)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;beta&lt;/code&gt;: Released beta version&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt;: Work targeting stable release (v5)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;next&lt;/code&gt;: Not currently in use&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please make pull requests against &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There is a bit more information in the &lt;a href=&quot;https://raw.githubusercontent.com/trufflesuite/truffle/develop/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HashLips/hashlips_art_engine</title>
      <link>https://github.com/HashLips/hashlips_art_engine</link>
      <description>&lt;p&gt;HashLips Art Engine is a tool used to create multiple different instances of artworks based on provided layers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to HashLips 👄&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/hashlips_art_engine/raw/main/logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;All the code in these repos was created and explained by HashLips on the main YouTube channel.&lt;/p&gt; 
&lt;p&gt;To find out more please visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC1LV4_VQGBJHTJjEWUmy8nA&quot;&gt;📺 YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.com/invite/qh6MWhMJDN&quot;&gt;👄 Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/hashlipsnft&quot;&gt;💬 Telegram&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashlipsnft&quot;&gt;🐦 Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hashlips.online/HashLips&quot;&gt;ℹ️ Website&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;HashLips Art Engine 🔥&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/hashlips_art_engine/raw/main/banner.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js. Before you use the generation engine, make sure you have node.js(v10.18.0) installed.&lt;/p&gt; 
&lt;h2&gt;Installation 🛠️&lt;/h2&gt; 
&lt;p&gt;If you are cloning the project then run this first, otherwise you can download the source code on the release page and skip this step.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/HashLips/hashlips_art_engine.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Go to the root of your folder and run this command if you have yarn installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively you can run this command if you have node installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage ℹ️&lt;/h2&gt; 
&lt;p&gt;Create your different layers as folders in the &#39;layers&#39; directory, and add all the layer assets in these directories. You can name the assets anything as long as it has a rarity weight attached in the file name like so: &lt;code&gt;example element#70.png&lt;/code&gt;. You can optionally change the delimiter &lt;code&gt;#&lt;/code&gt; to anything you would like to use in the variable &lt;code&gt;rarityDelimiter&lt;/code&gt; in the &lt;code&gt;src/config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Once you have all your layers, go into &lt;code&gt;src/config.js&lt;/code&gt; and update the &lt;code&gt;layerConfigurations&lt;/code&gt; objects &lt;code&gt;layersOrder&lt;/code&gt; array to be your layer folders name in order of the back layer to the front layer.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you were creating a portrait design, you might have a background, then a head, a mouth, eyes, eyewear, and then headwear, so your &lt;code&gt;layersOrder&lt;/code&gt; would look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layerConfigurations = [
  {
    growEditionSizeTo: 100,
    layersOrder: [
      { name: &quot;Head&quot; },
      { name: &quot;Mouth&quot; },
      { name: &quot;Eyes&quot; },
      { name: &quot;Eyeswear&quot; },
      { name: &quot;Headwear&quot; },
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;name&lt;/code&gt; of each layer object represents the name of the folder (in &lt;code&gt;/layers/&lt;/code&gt;) that the images reside in.&lt;/p&gt; 
&lt;p&gt;Optionally you can now add multiple different &lt;code&gt;layerConfigurations&lt;/code&gt; to your collection. Each configuration can be unique and have different layer orders, use the same layers or introduce new ones. This gives the artist flexibility when it comes to fine tuning their collections to their needs.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you were creating a portrait design, you might have a background, then a head, a mouth, eyes, eyewear, and then headwear and you want to create a new race or just simple re-order the layers or even introduce new layers, then you&#39;re &lt;code&gt;layerConfigurations&lt;/code&gt; and &lt;code&gt;layersOrder&lt;/code&gt; would look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layerConfigurations = [
  {
    // Creates up to 50 artworks
    growEditionSizeTo: 50,
    layersOrder: [
      { name: &quot;Background&quot; },
      { name: &quot;Head&quot; },
      { name: &quot;Mouth&quot; },
      { name: &quot;Eyes&quot; },
      { name: &quot;Eyeswear&quot; },
      { name: &quot;Headwear&quot; },
    ],
  },
  {
    // Creates an additional 100 artworks
    growEditionSizeTo: 150,
    layersOrder: [
      { name: &quot;Background&quot; },
      { name: &quot;Head&quot; },
      { name: &quot;Eyes&quot; },
      { name: &quot;Mouth&quot; },
      { name: &quot;Eyeswear&quot; },
      { name: &quot;Headwear&quot; },
      { name: &quot;AlienHeadwear&quot; },
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update your &lt;code&gt;format&lt;/code&gt; size, ie the outputted image size, and the &lt;code&gt;growEditionSizeTo&lt;/code&gt; on each &lt;code&gt;layerConfigurations&lt;/code&gt; object, which is the amount of variation outputted.&lt;/p&gt; 
&lt;p&gt;You can mix up the &lt;code&gt;layerConfigurations&lt;/code&gt; order on how the images are saved by setting the variable &lt;code&gt;shuffleLayerConfigurations&lt;/code&gt; in the &lt;code&gt;config.js&lt;/code&gt; file to true. It is false by default and will save all images in numerical order.&lt;/p&gt; 
&lt;p&gt;If you want to have logs to debug and see what is happening when you generate images you can set the variable &lt;code&gt;debugLogs&lt;/code&gt; in the &lt;code&gt;config.js&lt;/code&gt; file to true. It is false by default, so you will only see general logs.&lt;/p&gt; 
&lt;p&gt;If you want to play around with different blending modes, you can add a &lt;code&gt;blend: MODE.colorBurn&lt;/code&gt; field to the layersOrder &lt;code&gt;options&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;If you need a layers to have a different opacity then you can add the &lt;code&gt;opacity: 0.7&lt;/code&gt; field to the layersOrder &lt;code&gt;options&lt;/code&gt; object as well.&lt;/p&gt; 
&lt;p&gt;If you want to have a layer &lt;em&gt;ignored&lt;/em&gt; in the DNA uniqueness check, you can set &lt;code&gt;bypassDNA: true&lt;/code&gt; in the &lt;code&gt;options&lt;/code&gt; object. This has the effect of making sure the rest of the traits are unique while not considering the &lt;code&gt;Background&lt;/code&gt; Layers as traits, for example. The layers &lt;em&gt;are&lt;/em&gt; included in the final image.&lt;/p&gt; 
&lt;p&gt;To use a different metadata attribute name you can add the &lt;code&gt;displayName: &quot;Awesome Eye Color&quot;&lt;/code&gt; to the &lt;code&gt;options&lt;/code&gt; object. All options are optional and can be addes on the same layer if you want to.&lt;/p&gt; 
&lt;p&gt;Here is an example on how you can play around with both filter fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layerConfigurations = [
  {
    growEditionSizeTo: 5,
    layersOrder: [
      { name: &quot;Background&quot; , {
        options: {
          bypassDNA: false;
        }
      }},
      { name: &quot;Eyeball&quot; },
      {
        name: &quot;Eye color&quot;,
        options: {
          blend: MODE.destinationIn,
          opacity: 0.2,
          displayName: &quot;Awesome Eye Color&quot;,
        },
      },
      { name: &quot;Iris&quot; },
      { name: &quot;Shine&quot; },
      { name: &quot;Bottom lid&quot;, options: { blend: MODE.overlay, opacity: 0.7 } },
      { name: &quot;Top lid&quot; },
    ],
  },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is a list of the different blending modes that you can optionally use.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const MODE = {
  sourceOver: &quot;source-over&quot;,
  sourceIn: &quot;source-in&quot;,
  sourceOut: &quot;source-out&quot;,
  sourceAtop: &quot;source-out&quot;,
  destinationOver: &quot;destination-over&quot;,
  destinationIn: &quot;destination-in&quot;,
  destinationOut: &quot;destination-out&quot;,
  destinationAtop: &quot;destination-atop&quot;,
  lighter: &quot;lighter&quot;,
  copy: &quot;copy&quot;,
  xor: &quot;xor&quot;,
  multiply: &quot;multiply&quot;,
  screen: &quot;screen&quot;,
  overlay: &quot;overlay&quot;,
  darken: &quot;darken&quot;,
  lighten: &quot;lighten&quot;,
  colorDodge: &quot;color-dodge&quot;,
  colorBurn: &quot;color-burn&quot;,
  hardLight: &quot;hard-light&quot;,
  softLight: &quot;soft-light&quot;,
  difference: &quot;difference&quot;,
  exclusion: &quot;exclusion&quot;,
  hue: &quot;hue&quot;,
  saturation: &quot;saturation&quot;,
  color: &quot;color&quot;,
  luminosity: &quot;luminosity&quot;,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you are ready, run the following command and your outputted art will be in the &lt;code&gt;build/images&lt;/code&gt; directory and the json in the &lt;code&gt;build/json&lt;/code&gt; directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The program will output all the images in the &lt;code&gt;build/images&lt;/code&gt; directory along with the metadata files in the &lt;code&gt;build/json&lt;/code&gt; directory. Each collection will have a &lt;code&gt;_metadata.json&lt;/code&gt; file that consists of all the metadata in the collection inside the &lt;code&gt;build/json&lt;/code&gt; directory. The &lt;code&gt;build/json&lt;/code&gt; folder also will contain all the single json files that represent each image file. The single json file of a image will look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;dna&quot;: &quot;d956cdf4e460508b5ff90c21974124f68d6edc34&quot;,
  &quot;name&quot;: &quot;#1&quot;,
  &quot;description&quot;: &quot;This is the description of your NFT project&quot;,
  &quot;image&quot;: &quot;https://hashlips/nft/1.png&quot;,
  &quot;edition&quot;: 1,
  &quot;date&quot;: 1731990799975,
  &quot;attributes&quot;: [
    { &quot;trait_type&quot;: &quot;Background&quot;, &quot;value&quot;: &quot;Black&quot; },
    { &quot;trait_type&quot;: &quot;Eyeball&quot;, &quot;value&quot;: &quot;Red&quot; },
    { &quot;trait_type&quot;: &quot;Eye color&quot;, &quot;value&quot;: &quot;Yellow&quot; },
    { &quot;trait_type&quot;: &quot;Iris&quot;, &quot;value&quot;: &quot;Small&quot; },
    { &quot;trait_type&quot;: &quot;Shine&quot;, &quot;value&quot;: &quot;Shapes&quot; },
    { &quot;trait_type&quot;: &quot;Bottom lid&quot;, &quot;value&quot;: &quot;Low&quot; },
    { &quot;trait_type&quot;: &quot;Top lid&quot;, &quot;value&quot;: &quot;Middle&quot; }
  ],
  &quot;compiler&quot;: &quot;HashLips Art Engine&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also add extra metadata to each metadata file by adding your extra items, (key: value) pairs to the &lt;code&gt;extraMetadata&lt;/code&gt; object variable in the &lt;code&gt;config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const extraMetadata = {
  creator: &quot;Daniel Eugene Botha&quot;,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don&#39;t need extra metadata, simply leave the object empty. It is empty by default.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const extraMetadata = {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That&#39;s it, you&#39;re done.&lt;/p&gt; 
&lt;h2&gt;Utils&lt;/h2&gt; 
&lt;h3&gt;Updating baseUri for IPFS and description&lt;/h3&gt; 
&lt;p&gt;You might possibly want to update the baseUri and description after you have ran your collection. To update the baseUri and description simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run update_info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate a preview image&lt;/h3&gt; 
&lt;p&gt;Create a preview image collage of your collection, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate pixelated images from collection&lt;/h3&gt; 
&lt;p&gt;In order to convert images into pixelated images you would need a list of images that you want to convert. So run the generator first.&lt;/p&gt; 
&lt;p&gt;Then simply run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run pixelate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All your images will be outputted in the &lt;code&gt;/build/pixel_images&lt;/code&gt; directory. If you want to change the ratio of the pixelation then you can update the ratio property on the &lt;code&gt;pixelFormat&lt;/code&gt; object in the &lt;code&gt;src/config.js&lt;/code&gt; file. The lower the number on the left, the more pixelated the image will be.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const pixelFormat = {
  ratio: 5 / 128,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate GIF images from collection&lt;/h3&gt; 
&lt;p&gt;In order to export gifs based on the layers created, you just need to set the export on the &lt;code&gt;gif&lt;/code&gt; object in the &lt;code&gt;src/config.js&lt;/code&gt; file to &lt;code&gt;true&lt;/code&gt;. You can also play around with the &lt;code&gt;repeat&lt;/code&gt;, &lt;code&gt;quality&lt;/code&gt; and the &lt;code&gt;delay&lt;/code&gt; of the exported gif.&lt;/p&gt; 
&lt;p&gt;Setting the &lt;code&gt;repeat: -1&lt;/code&gt; will produce a one time render and &lt;code&gt;repeat: 0&lt;/code&gt; will loop forever.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const gif = {
  export: true,
  repeat: 0,
  quality: 100,
  delay: 500,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Printing rarity data (Experimental feature)&lt;/h3&gt; 
&lt;p&gt;To see the percentages of each attribute across your collection, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run rarity
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The output will look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Trait type: Top lid
{
  trait: &#39;High&#39;,
  chance: &#39;30&#39;,
  occurrence: &#39;3 in 20 editions (15.00 %)&#39;
}
{
  trait: &#39;Low&#39;,
  chance: &#39;20&#39;,
  occurrence: &#39;3 in 20 editions (15.00 %)&#39;
}
{
  trait: &#39;Middle&#39;,
  chance: &#39;50&#39;,
  occurrence: &#39;14 in 20 editions (70.00 %)&#39;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hope you create some awesome artworks with this code 👄&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twbs/bootstrap</title>
      <link>https://github.com/twbs/bootstrap</link>
      <description>&lt;p&gt;The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://getbootstrap.com/&quot;&gt; &lt;img src=&quot;https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo-shadow.png&quot; alt=&quot;Bootstrap logo&quot; width=&quot;200&quot; height=&quot;165&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Bootstrap&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; Sleek, intuitive, and powerful front-end framework for faster and easier web development. &lt;br&gt; &lt;a href=&quot;https://getbootstrap.com/docs/5.1/&quot;&gt;&lt;strong&gt;Explore Bootstrap docs »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=-&amp;amp;labels=bug&amp;amp;template=bug_report.yml&quot;&gt;Report bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new?assignees=&amp;amp;labels=feature&amp;amp;template=feature_request.yml&quot;&gt;Request feature&lt;/a&gt; · &lt;a href=&quot;https://themes.getbootstrap.com/&quot;&gt;Themes&lt;/a&gt; · &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;Blog&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Bootstrap 5&lt;/h2&gt; 
&lt;p&gt;Our default branch is for development of our Bootstrap 5 release. Head to the &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/v4-dev&quot;&gt;&lt;code&gt;v4-dev&lt;/code&gt; branch&lt;/a&gt; to view the readme, documentation, and source code for Bootstrap 4.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#quick-start&quot;&gt;Quick start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#status&quot;&gt;Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#whats-included&quot;&gt;What&#39;s included&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#bugs-and-feature-requests&quot;&gt;Bugs and feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#versioning&quot;&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#creators&quot;&gt;Creators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#thanks&quot;&gt;Thanks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#copyright-and-license&quot;&gt;Copyright and license&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Several quick start options are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/archive/v5.1.3.zip&quot;&gt;Download the latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clone the repo: &lt;code&gt;git clone https://github.com/twbs/bootstrap.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;: &lt;code&gt;npm install bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;: &lt;code&gt;composer require twbs/bootstrap:5.1.3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install with &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt;: CSS: &lt;code&gt;Install-Package bootstrap&lt;/code&gt; Sass: &lt;code&gt;Install-Package bootstrap.sass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://getbootstrap.com/docs/5.1/getting-started/introduction/&quot;&gt;Getting started page&lt;/a&gt; for information on the framework contents, templates, examples, and more.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;&lt;img src=&quot;https://bootstrap-slack.herokuapp.com/badge.svg?sanitize=true&quot; alt=&quot;Slack&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/actions?query=workflow%3AJS+Tests+branch%3Amain&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/workflow/status/twbs/bootstrap/JS%20Tests/main?label=JS%20Tests&amp;amp;logo=github&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/bootstrap&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/bootstrap&quot; alt=&quot;Gem version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://atmospherejs.com/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/meteor-twbs%3Abootstrap-blue&quot; alt=&quot;Meteor Atmosphere&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://packagist.org/packages/twbs/bootstrap&quot;&gt;&lt;img src=&quot;https://img.shields.io/packagist/vpre/twbs/bootstrap&quot; alt=&quot;Packagist Prerelease&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/bootstrap/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/bootstrap&quot; alt=&quot;NuGet&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/twbs/bootstrap?branch=main&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/github/twbs/bootstrap/main&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=gzip&amp;amp;label=CSS%20gzip%20size&quot; alt=&quot;CSS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/css/bootstrap.min.css&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/css/bootstrap.min.css?compression=brotli&amp;amp;label=CSS%20Brotli%20size&quot; alt=&quot;CSS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=gzip&amp;amp;label=JS%20gzip%20size&quot; alt=&quot;JS gzip size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/dist/js/bootstrap.min.js&quot;&gt;&lt;img src=&quot;https://img.badgesize.io/twbs/bootstrap/main/dist/js/bootstrap.min.js?compression=brotli&amp;amp;label=JS%20Brotli%20size&quot; alt=&quot;JS Brotli size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.browserstack.com/automate/public-build/SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot;&gt;&lt;img src=&quot;https://www.browserstack.com/automate/badge.svg?badge_key=SkxZcStBeExEdVJqQ2hWYnlWckpkNmNEY213SFp6WHFETWk2bGFuY3pCbz0tLXhqbHJsVlZhQnRBdEpod3NLSDMzaHc9PQ==--3d0b75245708616eb93113221beece33e680b229&quot; alt=&quot;BrowserStack Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#backers&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/bootstrap&quot; alt=&quot;Backers on Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/twbs/bootstrap/main/#sponsors&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/bootstrap&quot; alt=&quot;Sponsors on Open Collective&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What&#39;s included&lt;/h2&gt; 
&lt;p&gt;Within the download you&#39;ll find the following directories and files, logically grouping common assets and providing both compiled and minified variations.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;Download contents&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;bootstrap/
├── css/
│   ├── bootstrap-grid.css
│   ├── bootstrap-grid.css.map
│   ├── bootstrap-grid.min.css
│   ├── bootstrap-grid.min.css.map
│   ├── bootstrap-grid.rtl.css
│   ├── bootstrap-grid.rtl.css.map
│   ├── bootstrap-grid.rtl.min.css
│   ├── bootstrap-grid.rtl.min.css.map
│   ├── bootstrap-reboot.css
│   ├── bootstrap-reboot.css.map
│   ├── bootstrap-reboot.min.css
│   ├── bootstrap-reboot.min.css.map
│   ├── bootstrap-reboot.rtl.css
│   ├── bootstrap-reboot.rtl.css.map
│   ├── bootstrap-reboot.rtl.min.css
│   ├── bootstrap-reboot.rtl.min.css.map
│   ├── bootstrap-utilities.css
│   ├── bootstrap-utilities.css.map
│   ├── bootstrap-utilities.min.css
│   ├── bootstrap-utilities.min.css.map
│   ├── bootstrap-utilities.rtl.css
│   ├── bootstrap-utilities.rtl.css.map
│   ├── bootstrap-utilities.rtl.min.css
│   ├── bootstrap-utilities.rtl.min.css.map
│   ├── bootstrap.css
│   ├── bootstrap.css.map
│   ├── bootstrap.min.css
│   ├── bootstrap.min.css.map
│   ├── bootstrap.rtl.css
│   ├── bootstrap.rtl.css.map
│   ├── bootstrap.rtl.min.css
│   └── bootstrap.rtl.min.css.map
└── js/
    ├── bootstrap.bundle.js
    ├── bootstrap.bundle.js.map
    ├── bootstrap.bundle.min.js
    ├── bootstrap.bundle.min.js.map
    ├── bootstrap.esm.js
    ├── bootstrap.esm.js.map
    ├── bootstrap.esm.min.js
    ├── bootstrap.esm.min.js.map
    ├── bootstrap.js
    ├── bootstrap.js.map
    ├── bootstrap.min.js
    └── bootstrap.min.js.map
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;We provide compiled CSS and JS (&lt;code&gt;bootstrap.*&lt;/code&gt;), as well as compiled and minified CSS and JS (&lt;code&gt;bootstrap.min.*&lt;/code&gt;). &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps&quot;&gt;Source maps&lt;/a&gt; (&lt;code&gt;bootstrap.*.map&lt;/code&gt;) are available for use with certain browsers&#39; developer tools. Bundled JS files (&lt;code&gt;bootstrap.bundle.js&lt;/code&gt; and minified &lt;code&gt;bootstrap.bundle.min.js&lt;/code&gt;) include &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bugs and feature requests&lt;/h2&gt; 
&lt;p&gt;Have a bug or a feature request? Please first read the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md#using-the-issue-tracker&quot;&gt;issue guidelines&lt;/a&gt; and search for existing and closed issues. If your problem or idea is not addressed yet, &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/new&quot;&gt;please open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Bootstrap&#39;s documentation, included in this repo in the root directory, is built with &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; and publicly hosted on GitHub Pages at &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;https://getbootstrap.com/&lt;/a&gt;. The docs may also be run locally.&lt;/p&gt; 
&lt;p&gt;Documentation search is powered by &lt;a href=&quot;https://community.algolia.com/docsearch/&quot;&gt;Algolia&#39;s DocSearch&lt;/a&gt;. Working on our search? Be sure to set &lt;code&gt;debug: true&lt;/code&gt; in &lt;code&gt;site/assets/js/search.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Running documentation locally&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the Node.js dependencies, including Hugo (the site builder).&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run test&lt;/code&gt; (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.&lt;/li&gt; 
 &lt;li&gt;From the root &lt;code&gt;/bootstrap&lt;/code&gt; directory, run &lt;code&gt;npm run docs-serve&lt;/code&gt; in the command line.&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:9001/&lt;/code&gt; in your browser, and voilà.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more about using Hugo by reading its &lt;a href=&quot;https://gohugo.io/documentation/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Documentation for previous releases&lt;/h3&gt; 
&lt;p&gt;You can find all our previous releases docs on &lt;a href=&quot;https://getbootstrap.com/docs/versions/&quot;&gt;https://getbootstrap.com/docs/versions/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;Previous releases&lt;/a&gt; and their documentation are also available for download.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues, coding standards, and notes on development.&lt;/p&gt; 
&lt;p&gt;Moreover, if your pull request contains JavaScript patches or features, you must include &lt;a href=&quot;https://github.com/twbs/bootstrap/tree/main/js/tests&quot;&gt;relevant unit tests&lt;/a&gt;. All HTML and CSS should conform to the &lt;a href=&quot;https://github.com/mdo/code-guide&quot;&gt;Code Guide&lt;/a&gt;, maintained by &lt;a href=&quot;https://github.com/mdo&quot;&gt;Mark Otto&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Editor preferences are available in the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/.editorconfig&quot;&gt;editor config&lt;/a&gt; for easy use in common text editors. Read more and download plugins at &lt;a href=&quot;https://editorconfig.org/&quot;&gt;https://editorconfig.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Get updates on Bootstrap&#39;s development and chat with the project maintainers and community members.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://twitter.com/getbootstrap&quot;&gt;@getbootstrap on Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read and subscribe to &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;The Official Bootstrap Blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join &lt;a href=&quot;https://bootstrap-slack.herokuapp.com/&quot;&gt;the official Slack room&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with fellow Bootstrappers in IRC. On the &lt;code&gt;irc.libera.chat&lt;/code&gt; server, in the &lt;code&gt;#bootstrap&lt;/code&gt; channel.&lt;/li&gt; 
 &lt;li&gt;Implementation help may be found at Stack Overflow (tagged &lt;a href=&quot;https://stackoverflow.com/questions/tagged/bootstrap-5&quot;&gt;&lt;code&gt;bootstrap-5&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Developers should use the keyword &lt;code&gt;bootstrap&lt;/code&gt; on packages which modify or add to the functionality of Bootstrap when distributing through &lt;a href=&quot;https://www.npmjs.com/browse/keyword/bootstrap&quot;&gt;npm&lt;/a&gt; or similar delivery mechanisms for maximum discoverability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;For transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under &lt;a href=&quot;https://semver.org/&quot;&gt;the Semantic Versioning guidelines&lt;/a&gt;. Sometimes we screw up, but we adhere to those rules whenever possible.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/twbs/bootstrap/releases&quot;&gt;the Releases section of our GitHub project&lt;/a&gt; for changelogs for each release version of Bootstrap. Release announcement posts on &lt;a href=&quot;https://blog.getbootstrap.com/&quot;&gt;the official Bootstrap blog&lt;/a&gt; contain summaries of the most noteworthy changes made in each release.&lt;/p&gt; 
&lt;h2&gt;Creators&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mark Otto&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/mdo&quot;&gt;https://twitter.com/mdo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdo&quot;&gt;https://github.com/mdo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Jacob Thornton&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/fat&quot;&gt;https://twitter.com/fat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fat&quot;&gt;https://github.com/fat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;a href=&quot;https://www.browserstack.com/&quot;&gt; &lt;img src=&quot;https://live.browserstack.com/images/opensource/browserstack-logo.svg?sanitize=true&quot; alt=&quot;BrowserStack Logo&quot; width=&quot;192&quot; height=&quot;42&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; for providing the infrastructure that allows us to test in real browsers!&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/bootstrap#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 2&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 3&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 4&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 5&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 6&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 7&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 8&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/bootstrap/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;OC sponsor 9&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/bootstrap#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/bootstrap#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/bootstrap/backers.svg?width=890&quot; alt=&quot;Backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Copyright and license&lt;/h2&gt; 
&lt;p&gt;Code and documentation copyright 2011–2021 the &lt;a href=&quot;https://github.com/twbs/bootstrap/graphs/contributors&quot;&gt;Bootstrap Authors&lt;/a&gt; and &lt;a href=&quot;https://twitter.com&quot;&gt;Twitter, Inc.&lt;/a&gt; Code released under the &lt;a href=&quot;https://github.com/twbs/bootstrap/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;. Docs released under &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>adiwajshing/Baileys</title>
      <link>https://github.com/adiwajshing/Baileys</link>
      <description>&lt;p&gt;Lightweight full-featured typescript/javascript WhatsApp Web API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Baileys - Typescript/Javascript WhatsApp Web API&lt;/h1&gt; 
&lt;p&gt;Baileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a &lt;strong&gt;WebSocket&lt;/strong&gt;. Not running Selenium or Chromimum saves you like &lt;strong&gt;half a gig&lt;/strong&gt; of ram :/&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://github.com/sigalor/whatsapp-web-reveng&quot;&gt;@Sigalor&lt;/a&gt; for writing his observations on the workings of WhatsApp Web and thanks to &lt;a href=&quot;https://github.com/Rhymen/go-whatsapp/&quot;&gt;@Rhymen&lt;/a&gt; for the &lt;strong&gt;go&lt;/strong&gt; implementation.&lt;/p&gt; 
&lt;p&gt;Baileys is type-safe, extensible and simple to use. If you require more functionality than provided, it&#39;ll super easy for you to write an extension. More on this &lt;a href=&quot;https://raw.githubusercontent.com/adiwajshing/Baileys/master/#writing-custom-functionality&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re interested in building a WhatsApp bot, you may wanna check out &lt;a href=&quot;https://github.com/adiwajshing/WhatsappInfoBot&quot;&gt;WhatsAppInfoBot&lt;/a&gt; and an actual bot built with it, &lt;a href=&quot;https://github.com/ashokatechmin/Messcat&quot;&gt;Messcat&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Read the docs &lt;a href=&quot;https://adiwajshing.github.io/Baileys&quot;&gt;here&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;Join the Discord &lt;a href=&quot;https://discord.gg/7FYURJyqng&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Multi-Device Support&lt;/h2&gt; 
&lt;p&gt;Baileys now supports the latest multi-device beta. However, as it&#39;s a completely different implementation from WA Web &amp;amp; will break a lot of things, it&#39;s on its own branch which will be merged into master once mutli-device hits production. You may find the MD repo &lt;a href=&quot;https://github.com/adiwajshing/baileys/tree/multi-device&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The master branch only supports WA Web at the moment.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Do check out &amp;amp; run &lt;a href=&quot;https://raw.githubusercontent.com/adiwajshing/Baileys/master/Example/example.ts&quot;&gt;example.ts&lt;/a&gt; to see example usage of the library. The script covers most common use cases. To run the example script, download or clone the repo and then type the following in terminal:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;cd path/to/Baileys&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run example&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Create and cd to your NPM project directory and then in terminal, write:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;stable: &lt;code&gt;npm install @adiwajshing/baileys&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;stabl-ish w quicker fixes &amp;amp; latest features: &lt;code&gt;npm install github:adiwajshing/baileys&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Do note, the library will likely vary if you&#39;re using the NPM package, read that &lt;a href=&quot;https://www.npmjs.com/package/@adiwajshing/baileys&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Then import in your code using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { WAConnection } from &#39;@adiwajshing/baileys&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Unit Tests&lt;/h2&gt; 
&lt;p&gt;Baileys also comes with a unit test suite. Simply cd into the Baileys directory &amp;amp; run &lt;code&gt;npm test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You will require a phone with WhatsApp to test, and a second WhatsApp number to send messages to. Set the phone number you can randomly send messages to in a &lt;code&gt;.env&lt;/code&gt; file with &lt;code&gt;TEST_JID=1234@s.whatsapp.net&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Connecting&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { WAConnection } from &#39;@adiwajshing/baileys&#39;

async function connectToWhatsApp () {
    const conn = new WAConnection() 
    // called when WA sends chats
    // this can take up to a few minutes if you have thousands of chats!
    conn.on(&#39;chats-received&#39;, async ({ hasNewChats }) =&amp;gt; {
        console.log(`you have ${conn.chats.length} chats, new chats available: ${hasNewChats}`)

        const unread = await conn.loadAllUnreadMessages ()
        console.log (&quot;you have &quot; + unread.length + &quot; unread messages&quot;)
    })
    // called when WA sends chats
    // this can take up to a few minutes if you have thousands of contacts!
    conn.on(&#39;contacts-received&#39;, () =&amp;gt; {
        console.log(&#39;you have &#39; + Object.keys(conn.contacts).length + &#39; contacts&#39;)
    })

    await conn.connect ()
    conn.on(&#39;chat-update&#39;, chatUpdate =&amp;gt; {
        // `chatUpdate` is a partial object, containing the updated properties of the chat
        // received a new message
        if (chatUpdate.messages &amp;amp;&amp;amp; chatUpdate.count) {
            const message = chatUpdate.messages.all()[0]
            console.log (message)
        } else console.log (chatUpdate) // see updates (can be archived, pinned etc.)
    })
}
// run in main file
connectToWhatsApp ()
.catch (err =&amp;gt; console.log(&quot;unexpected error: &quot; + err) ) // catch any errors
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you&#39;ll be logged in!&lt;/p&gt; 
&lt;p&gt;Do note, the &lt;code&gt;conn.chats&lt;/code&gt; object is a &lt;a href=&quot;https://github.com/adiwajshing/keyed-db&quot;&gt;KeyedDB&lt;/a&gt;. This is done for the following reasons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Most applications require chats to be ordered in descending order of time. (&lt;code&gt;KeyedDB&lt;/code&gt; does this in &lt;code&gt;log(N)&lt;/code&gt; time)&lt;/li&gt; 
 &lt;li&gt;Most applications require pagination of chats (Use &lt;code&gt;chats.paginated()&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Most applications require &lt;strong&gt;O(1)&lt;/strong&gt; access to chats via the chat ID. (Use &lt;code&gt;chats.get(jid)&lt;/code&gt; with &lt;code&gt;KeyedDB&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuring the Connection&lt;/h2&gt; 
&lt;p&gt;You can configure the connection via the &lt;code&gt;connectOptions&lt;/code&gt; property. You can even specify an HTTPS proxy. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { WAConnection, ProxyAgent } from &#39;@adiwajshing/baileys&#39;

const conn = new WAConnecion ()
conn.connectOptions.agent = ProxyAgent (&#39;http://some-host:1234&#39;)

await conn.connect ()
console.log (&quot;oh hello &quot; + conn.user.name + &quot;! You connected via a proxy&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The entire &lt;code&gt;WAConnectOptions&lt;/code&gt; struct is mentioned here with default values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.connectOptions = {
    /** fails the connection if no data is received for X seconds */
    maxIdleTimeMs?: 60_000,
    /** maximum attempts to connect */
    maxRetries?: 10,
    /** max time for the phone to respond to a connectivity test */
    phoneResponseTime?: 15_000,
    /** minimum time between new connections */
    connectCooldownMs?: 4000,
    /** agent used for WS connections (could be a proxy agent) */
    agent?: Agent = undefined,
    /** agent used for fetch requests -- uploading/downloading media */
    fetchAgent?: Agent = undefined,
    /** always uses takeover for connecting */
    alwaysUseTakeover: true
	/** log QR to terminal */
    logQR: true
} as WAConnectOptions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Saving &amp;amp; Restoring Sessions&lt;/h2&gt; 
&lt;p&gt;You obviously don&#39;t want to keep scanning the QR code every time you want to connect.&lt;/p&gt; 
&lt;p&gt;So, you can save the credentials to log back in via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as fs from &#39;fs&#39;

const conn = new WAConnection() 
// this will be called as soon as the credentials are updated
conn.on (&#39;open&#39;, () =&amp;gt; {
    // save credentials whenever updated
    console.log (`credentials updated!`)
    const authInfo = conn.base64EncodedAuthInfo() // get all the auth info we need to restore this session
    fs.writeFileSync(&#39;./auth_info.json&#39;, JSON.stringify(authInfo, null, &#39;\t&#39;)) // save this info to a file
})
await conn.connect() // connect
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, to restore a session:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const conn = new WAConnection() 
conn.loadAuthInfo (&#39;./auth_info.json&#39;) // will load JSON credentials from file
await conn.connect() 
// yay connected without scanning QR
/*
    Optionally, you can load the credentials yourself from somewhere 
    &amp;amp; pass in the JSON object to loadAuthInfo () as well.
*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re considering switching from a Chromium/Puppeteer based library, you can use WhatsApp Web&#39;s Browser credentials to restore sessions too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.loadAuthInfo (&#39;./auth_info_browser.json&#39;)
await conn.connect() // works the same
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the browser credentials type in the docs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Upon every successive connection, WA can update part of the stored credentials. Whenever that happens, the credentials are uploaded, and you should probably update your saved credentials upon receiving the &lt;code&gt;open&lt;/code&gt; event. Not doing so &lt;em&gt;may&lt;/em&gt; lead WA to log you out after a few weeks with a 419 error code.&lt;/p&gt; 
&lt;h2&gt;QR Callback&lt;/h2&gt; 
&lt;p&gt;If you want to do some custom processing with the QR code used to authenticate, you can register for the following event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.on(&#39;qr&#39;, qr =&amp;gt; {
    // Now, use the &#39;qr&#39; string to display in QR UI or send somewhere
}
await conn.connect ()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Handling Events&lt;/h2&gt; 
&lt;p&gt;Baileys now uses the EventEmitter syntax for events. They&#39;re all nicely typed up, so you shouldn&#39;t have any issues with an Intellisense editor like VS Code.&lt;/p&gt; 
&lt;p&gt;Also, these events are fired regardless of whether they are initiated by the Baileys client or are relayed from your phone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;/** when the connection has opened successfully */
on (event: &#39;open&#39;, listener: (result: WAOpenResult) =&amp;gt; void): this
/** when the connection is opening */
on (event: &#39;connecting&#39;, listener: () =&amp;gt; void): this
/** when the connection has closed */
on (event: &#39;close&#39;, listener: (err: {reason?: DisconnectReason | string, isReconnecting: boolean}) =&amp;gt; void): this
/** when the socket is closed */
on (event: &#39;ws-close&#39;, listener: (err: {reason?: DisconnectReason | string}) =&amp;gt; void): this
/** when a new QR is generated, ready for scanning */
on (event: &#39;qr&#39;, listener: (qr: string) =&amp;gt; void): this
/** when the connection to the phone changes */
on (event: &#39;connection-phone-change&#39;, listener: (state: {connected: boolean}) =&amp;gt; void): this
/** when a contact is updated */
on (event: &#39;contact-update&#39;, listener: (update: WAContactUpdate) =&amp;gt; void): this
/** when a new chat is added */
on (event: &#39;chat-new&#39;, listener: (chat: WAChat) =&amp;gt; void): this
/** when contacts are sent by WA */
on (event: &#39;contacts-received&#39;, listener: (u: { updatedContacts: Partial&amp;lt;WAContact&amp;gt;[] }) =&amp;gt; void): this
/** when chats are sent by WA, and when all messages are received */
on (event: &#39;chats-received&#39;, listener: (update: {hasNewChats?: boolean}) =&amp;gt; void): this
/** when all initial messages are received from WA */
on (event: &#39;initial-data-received&#39;, listener: (update: {chatsWithMissingMessages: { jid: string, count: number }[] }) =&amp;gt; void): this
/** when multiple chats are updated (new message, updated message, deleted, pinned, etc) */
on (event: &#39;chats-update&#39;, listener: (chats: WAChatUpdate[]) =&amp;gt; void): this
/** when a chat is updated (new message, updated message, read message, deleted, pinned, presence updated etc) */
on (event: &#39;chat-update&#39;, listener: (chat: WAChatUpdate) =&amp;gt; void): this
/** when participants are added to a group */
on (event: &#39;group-participants-update&#39;, listener: (update: {jid: string, participants: string[], actor?: string, action: WAParticipantAction}) =&amp;gt; void): this
/** when the group is updated */
on (event: &#39;group-update&#39;, listener: (update: Partial&amp;lt;WAGroupMetadata&amp;gt; &amp;amp; {jid: string, actor?: string}) =&amp;gt; void): this
/** when WA sends back a pong */
on (event: &#39;received-pong&#39;, listener: () =&amp;gt; void): this
/** when a user is blocked or unblockd */
on (event: &#39;blocklist-update&#39;, listener: (update: BlocklistUpdate) =&amp;gt; void): this
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sending Messages&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Send all types of messages with a single function:&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Non-Media Messages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { MessageType, MessageOptions, Mimetype } from &#39;@adiwajshing/baileys&#39;

const id = &#39;abcd@s.whatsapp.net&#39; // the WhatsApp ID 
// send a simple text!
const sentMsg  = await conn.sendMessage (id, &#39;oh hello there&#39;, MessageType.text)
// send a location!
const sentMsg  = await conn.sendMessage(id, {degreesLatitude: 24.121231, degreesLongitude: 55.1121221}, MessageType.location)
// send a contact!
const vcard = &#39;BEGIN:VCARD\n&#39; // metadata of the contact card
            + &#39;VERSION:3.0\n&#39; 
            + &#39;FN:Jeff Singh\n&#39; // full name
            + &#39;ORG:Ashoka Uni;\n&#39; // the organization of the contact
            + &#39;TEL;type=CELL;type=VOICE;waid=911234567890:+91 12345 67890\n&#39; // WhatsApp ID + phone number
            + &#39;END:VCARD&#39;
const sentMsg  = await conn.sendMessage(id, {displayname: &quot;Jeff&quot;, vcard: vcard}, MessageType.contact)
// send a list message!
const rows = [
 {title: &#39;Row 1&#39;, description: &quot;Hello it&#39;s description 1&quot;, rowId:&quot;rowid1&quot;},
 {title: &#39;Row 2&#39;, description: &quot;Hello it&#39;s description 2&quot;, rowId:&quot;rowid2&quot;}
]

const sections = [{title: &quot;Section 1&quot;, rows: rows}]

const button = {
 buttonText: &#39;Click Me!&#39;,
 description: &quot;Hello it&#39;s list message&quot;,
 sections: sections,
 listType: 1
}

const sendMsg = await conn.sendMessage(id, button, MessageType.listMessage)

// send a buttons message!
const buttons = [
  {buttonId: &#39;id1&#39;, buttonText: {displayText: &#39;Button 1&#39;}, type: 1},
  {buttonId: &#39;id2&#39;, buttonText: {displayText: &#39;Button 2&#39;}, type: 1}
]

const buttonMessage = {
    contentText: &quot;Hi it&#39;s button message&quot;,
    footerText: &#39;Hello World&#39;,
    buttons: buttons,
    headerType: 1
}

const sendMsg = await conn.sendMessage(id, buttonMessage, MessageType.buttonsMessage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Media Messages&lt;/h3&gt; 
&lt;p&gt;Sending media (video, stickers, images) is easier &amp;amp; more efficient than ever.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can specify a buffer, a local url or even a remote url.&lt;/li&gt; 
 &lt;li&gt;When specifying a media url, Baileys never loads the entire buffer into memory, it even encrypts the media as a readable stream.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { MessageType, MessageOptions, Mimetype } from &#39;@adiwajshing/baileys&#39;
// Sending gifs
await conn.sendMessage(
    id, 
    fs.readFileSync(&quot;Media/ma_gif.mp4&quot;), // load a gif and send it
    MessageType.video, 
    { mimetype: Mimetype.gif, caption: &quot;hello!&quot; }
)
await conn.sendMessage(
    id, 
    { url: &#39;Media/ma_gif.mp4&#39; }, // send directly from local file
    MessageType.video, 
    { mimetype: Mimetype.gif, caption: &quot;hello!&quot; }
)

await conn.sendMessage(
    id, 
    { url: &#39;https://giphy.com/gifs/11JTxkrmq4bGE0/html5&#39; }, // send directly from remote url!
    MessageType.video, 
    { mimetype: Mimetype.gif, caption: &quot;hello!&quot; }
)

// send an audio file
await conn.sendMessage(
    id, 
    { url: &quot;Media/audio.mp3&quot; }, // can send mp3, mp4, &amp;amp; ogg
    MessageType.audio, 
    { mimetype: Mimetype.mp4Audio } // some metadata (can&#39;t have caption in audio)
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;id&lt;/code&gt; is the WhatsApp ID of the person or group you&#39;re sending the message to. 
  &lt;ul&gt; 
   &lt;li&gt;It must be in the format &lt;code&gt;[country code without +][phone number]@s.whatsapp.net&lt;/code&gt;, for example &lt;code&gt;19999999999@s.whatsapp.net&lt;/code&gt; for people. For groups, it must be in the format &lt;code&gt;123456789-123345@g.us&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;For broadcast lists it&#39;s &lt;code&gt;[timestamp of creation]@broadcast&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;For stories, the ID is &lt;code&gt;status@broadcast&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;For media messages, the thumbnail can be generated automatically for images &amp;amp; stickers. Thumbnails for videos can also be generated automatically, though, you need to have &lt;code&gt;ffmpeg&lt;/code&gt; installed on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MessageOptions&lt;/strong&gt;: some extra info about the message. It can have the following &lt;strong&gt;optional&lt;/strong&gt; values: &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const info: MessageOptions = {
    quoted: quotedMessage, // the message you want to quote
    contextInfo: { forwardingScore: 2, isForwarded: true }, // some random context info (can show a forwarded message with this too)
    timestamp: Date(), // optional, if you want to manually set the timestamp of the message
    caption: &quot;hello there!&quot;, // (for media messages) the caption to send with the media (cannot be sent with stickers though)
    thumbnail: &quot;23GD#4/==&quot;, /*  (for location &amp;amp; media messages) has to be a base 64 encoded JPEG if you want to send a custom thumb, 
                                or set to null if you don&#39;t want to send a thumbnail.
                                Do not enter this field if you want to automatically generate a thumb
                            */
    mimetype: Mimetype.pdf, /* (for media messages) specify the type of media (optional for all media types except documents),
                                import {Mimetype} from &#39;@adiwajshing/baileys&#39;
                            */
    filename: &#39;somefile.pdf&#39;, // (for media messages) file name for the media
    /* will send audio messages as voice notes, if set to true */
    ptt: true,
    // will detect links &amp;amp; generate a link preview automatically (default true)
    detectLinks: true,
    /** Should it send as a disappearing messages. 
     * By default &#39;chat&#39; -- which follows the setting of the chat */
    sendEphemeral: &#39;chat&#39;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Forwarding Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const messages = await conn.loadConversation (&#39;1234@s.whatsapp.net&#39;, 1)
const message = messages[0] // get the last message from this conversation
await conn.forwardMessage (&#39;455@s.whatsapp.net&#39;, message) // WA forward the message!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Reading Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const id = &#39;1234-123@g.us&#39;
const messageID = &#39;AHASHH123123AHGA&#39; // id of the message you want to read

await conn.chatRead (id) // mark all messages in chat as read (equivalent of opening a chat in WA)
await conn.chatRead (id, &#39;unread&#39;) // mark the chat as unread
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The message ID is the unique identifier of the message that you are marking as read. On a &lt;code&gt;WAMessage&lt;/code&gt;, the &lt;code&gt;messageID&lt;/code&gt; can be accessed using &lt;code&gt;messageID = message.key.id&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Update Presence&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { Presence } from &#39;@adiwajshing/baileys&#39;
await conn.updatePresence(id, Presence.available) 

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This lets the person/group with &lt;code&gt;id&lt;/code&gt; know whether you&#39;re online, offline, typing etc. where &lt;code&gt;presence&lt;/code&gt; can be one of the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;export enum Presence {
    available = &#39;available&#39;, // &quot;online&quot;
    composing = &#39;composing&#39;, // &quot;typing...&quot;
    recording = &#39;recording&#39;, // &quot;recording...&quot;
    paused = &#39;paused&#39; // stopped typing, back to &quot;online&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The presence expires after about 10 seconds.&lt;/p&gt; 
&lt;h2&gt;Downloading Media Messages&lt;/h2&gt; 
&lt;p&gt;If you want to save the media you received&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { MessageType } from &#39;@adiwajshing/baileys&#39;
conn.on (&#39;message-new&#39;, async m =&amp;gt; {
    if (!m.message) return // if there is no text or media message
    const messageType = Object.keys (m.message)[0]// get what type of message it is -- text, image, video
    // if the message is not a text message
    if (messageType !== MessageType.text &amp;amp;&amp;amp; messageType !== MessageType.extendedText) {
        const buffer = await conn.downloadMediaMessage(m) // to decrypt &amp;amp; use as a buffer
        
        const savedFilename = await conn.downloadAndSaveMediaMessage (m) // to decrypt &amp;amp; save to file
        console.log(m.key.remoteJid + &quot; sent media, saved at: &quot; + savedFilename)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deleting Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;1234@s.whatsapp.net&#39; // can also be a group
const response = await conn.sendMessage (jid, &#39;hello!&#39;, MessageType.text) // send a message

await conn.deleteMessage (jid, {id: response.messageID, remoteJid: jid, fromMe: true}) // will delete the sent message for everyone!
await conn.clearMessage (jid, {id: response.messageID, remoteJid: jid, fromMe: true}) // will delete the sent message for only you!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Modifying Chats&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;1234@s.whatsapp.net&#39; // can also be a group
await conn.modifyChat (jid, ChatModification.archive) // archive chat
await conn.modifyChat (jid, ChatModification.unarchive) // unarchive chat

const response = await conn.modifyChat (jid, ChatModification.pin) // pin the chat
await conn.modifyChat (jid, ChatModification.unpin) // unpin it

await conn.modifyChat (jid, ChatModification.mute, 8*60*60*1000) // mute for 8 hours
setTimeout (() =&amp;gt; {
    conn.modifyChat (jid, ChatModification.unmute)
}, 5000) // unmute after 5 seconds

await conn.modifyChat (jid, ChatModification.delete) // will delete the chat (can be a group or broadcast list as well)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; to unmute or unpin a chat, one must pass the timestamp of the pinning or muting. This is returned by the pin &amp;amp; mute functions. This is also available in the &lt;code&gt;WAChat&lt;/code&gt; objects of the respective chats, as a &lt;code&gt;mute&lt;/code&gt; or &lt;code&gt;pin&lt;/code&gt; property.&lt;/p&gt; 
&lt;h2&gt;Disappearing Messages&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;1234@s.whatsapp.net&#39; // can also be a group
// turn on disappearing messages
await conn.toggleDisappearingMessages(
    jid, 
    WA_DEFAULT_EPHEMERAL // this is 1 week in seconds -- how long you want messages to appear for
) 
// will automatically send as a disappearing message
await conn.sendMessage(jid, &#39;Hello poof!&#39;, MessageType.text)
// turn off disappearing messages
await conn.toggleDisappearingMessages(jid, 0)

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Misc&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To load chats in a paginated manner &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const {chats, cursor} = await conn.loadChats (25)
if (cursor) {
    const moreChats = await conn.loadChats (25, cursor) // load the next 25 chats
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To check if a given ID is on WhatsApp Note: this method falls back to using &lt;code&gt;https://wa.me&lt;/code&gt; to determine whether a number is on WhatsApp in case the WebSocket connection is not open yet. &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const id = &#39;123456&#39;
const exists = await conn.isOnWhatsApp (id)
if (exists) console.log (`${id} exists on WhatsApp, as jid: ${exists.jid}`)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To query chat history on a group or with someone &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// query the last 25 messages (replace 25 with the number of messages you want to query)
const messages = await conn.loadMessages (&quot;xyz-abc@g.us&quot;, 25)
console.log(&quot;got back &quot; + messages.length + &quot; messages&quot;)
&lt;/code&gt;&lt;/pre&gt; You can also load the entire conversation history if you want &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.loadAllMessages (&quot;xyz@c.us&quot;, message =&amp;gt; console.log(&quot;Loaded message with ID: &quot; + message.key.id))
console.log(&quot;queried all messages&quot;) // promise resolves once all messages are retrieved
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get the status of some person &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const status = await conn.getStatus (&quot;xyz@c.us&quot;) // leave empty to get your own status
console.log(&quot;status: &quot; + status)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get the display picture of some person/group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const ppUrl = await conn.getProfilePicture (&quot;xyz@g.us&quot;) // leave empty to get your own
console.log(&quot;download profile picture from: &quot; + ppUrl)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change your display picture or a group&#39;s &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const jid = &#39;111234567890-1594482450@g.us&#39; // can be your own too
const img = fs.readFileSync (&#39;new-profile-picture.jpeg&#39;) // can be PNG also
await conn.updateProfilePicture (jid, img)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get someone&#39;s presence (if they&#39;re typing, online) &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// the presence update is fetched and called here
conn.on (&#39;CB:Presence&#39;, json =&amp;gt; console.log(json.id + &quot; presence is &quot; + json.type))
await conn.requestPresenceUpdate (&quot;xyz@c.us&quot;) // request the update
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To search through messages &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const response = await conn.searchMessages (&#39;so cool&#39;, null, 25, 1) // search in all chats
console.log (`got ${response.messages.length} messages in search`)

const response2 = await conn.searchMessages (&#39;so cool&#39;, &#39;1234@c.us&#39;, 25, 1) // search in given chat
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To block or unblock user &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.blockUser (&quot;xyz@c.us&quot;, &quot;add&quot;) // Block user
await conn.blockUser (&quot;xyz@c.us&quot;, &quot;remove&quot;) // Unblock user
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Of course, replace &lt;code&gt;xyz&lt;/code&gt; with an actual ID.&lt;/p&gt; 
&lt;h2&gt;Groups&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To create a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// title &amp;amp; participants
const group = await conn.groupCreate (&quot;My Fab Group&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;])
console.log (&quot;created group with id: &quot; + group.gid)
conn.sendMessage(group.gid, &quot;hello everyone&quot;, MessageType.extendedText) // say hello to everyone on the group
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To add people to a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// id &amp;amp; people to add to the group (will throw error if it fails)
const response = await conn.groupAdd (&quot;abcd-xyz@g.us&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;])
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To make/demote admins on a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// id &amp;amp; people to make admin (will throw error if it fails)
await conn.groupMakeAdmin (&quot;abcd-xyz@g.us&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;])
await conn.groupDemoteAdmin (&quot;abcd-xyz@g.us&quot;, [&quot;abcd@s.whatsapp.net&quot;, &quot;efgh@s.whatsapp.net&quot;]) // demote admins
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change the group&#39;s subject &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.groupUpdateSubject(&quot;abcd-xyz@g.us&quot;, &quot;New Subject!&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change the group&#39;s description &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.groupUpdateDescription(&quot;abcd-xyz@g.us&quot;, &quot;This group has a new description&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To change group settings &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { GroupSettingChange } from &#39;@adiwajshing/baileys&#39;
// only allow admins to send messages
await conn.groupSettingChange (&quot;abcd-xyz@g.us&quot;, GroupSettingChange.messageSend, true)
// allow everyone to modify the group&#39;s settings -- like display picture etc.
await conn.groupSettingChange (&quot;abcd-xyz@g.us&quot;, GroupSettingChange.settingsChange, false)
// only allow admins to modify the group&#39;s settings
await conn.groupSettingChange (&quot;abcd-xyz@g.us&quot;, GroupSettingChange.settingsChange, true)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To leave a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;await conn.groupLeave (&quot;abcd-xyz@g.us&quot;) // (will throw error if it fails)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To get the invite code for a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const code = await conn.groupInviteCode (&quot;abcd-xyz@g.us&quot;)
console.log(&quot;group code: &quot; + code)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To query the metadata of a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const metadata = await conn.groupMetadata (&quot;abcd-xyz@g.us&quot;) 
console.log(json.id + &quot;, title: &quot; + json.subject + &quot;, description: &quot; + json.desc)

// Or if you&#39;ve left the group -- call this
const metadata2 = await conn.groupMetadataMinimal (&quot;abcd-xyz@g.us&quot;) 
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To join the group using the invitation code &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const response = await conn.acceptInvite (&quot;xxx&quot;)
console.log(&quot;joined to: &quot; + response.gid)
&lt;/code&gt;&lt;/pre&gt; Of course, replace &lt;code&gt;xxx&lt;/code&gt; with invitation code.&lt;/li&gt; 
 &lt;li&gt;To revokes the current invite link of a group &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const response = await conn.revokeInvite (&quot;abcd-xyz@g.us&quot;)
console.log(&quot;new group code: &quot; + response.code)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Broadcast Lists &amp;amp; Stories&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can send messages to broadcast lists the same way you send messages to groups &amp;amp; individual chats.&lt;/li&gt; 
 &lt;li&gt;Unfortunately, WA Web does not support creating broadcast lists right now but you can still delete them.&lt;/li&gt; 
 &lt;li&gt;Broadcast IDs are in the format &lt;code&gt;12345678@broadcast&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To query a broadcast list&#39;s recipients &amp;amp; name: &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const bList = await conn.getBroadcastListInfo (&quot;1234@broadcast&quot;)
console.log (`list name: ${bList.name}, recps: ${bList.recipients}`)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Writing Custom Functionality&lt;/h2&gt; 
&lt;p&gt;Baileys is written, keeping in mind, that you may require other custom functionality. Hence, instead of having to fork the project &amp;amp; re-write the internals, you can simply write extensions in your own code.&lt;/p&gt; 
&lt;p&gt;First, enable the logging of unhandled messages from WhatsApp by setting&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.logger.level = &#39;debug&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will enable you to see all sorts of messages WhatsApp sends in the console. Some examples:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Functionality to track of the battery percentage of your phone. You enable logging and you&#39;ll see a message about your battery pop up in the console: &lt;code&gt;s22, [&quot;action&quot;,null,[[&quot;battery&quot;,{&quot;live&quot;:&quot;false&quot;,&quot;value&quot;:&quot;52&quot;},null]]] &lt;/code&gt;&lt;/p&gt; &lt;p&gt;You now know what a battery update looks like. It&#39;ll have the following characteristics.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Given &lt;code&gt;const bMessage = [&quot;action&quot;,null,[[&quot;battery&quot;,{&quot;live&quot;:&quot;false&quot;,&quot;value&quot;:&quot;52&quot;},null]]]&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bMessage[0]&lt;/code&gt; is always &lt;code&gt;&quot;action&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bMessage[1]&lt;/code&gt; is always &lt;code&gt;null&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;bMessage[2][0][0]&lt;/code&gt; is always &lt;code&gt;&quot;battery&quot;&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Hence, you can register a callback for an event using the following:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.on (`CB:action,,battery`, json =&amp;gt; {
    const batteryLevelStr = json[2][0][1].value
    const batterylevel = parseInt (batteryLevelStr)
    console.log (&quot;battery level: &quot; + batterylevel + &quot;%&quot;)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This callback will be fired any time a message is received matching the following criteria: &lt;code&gt;message [0] === &quot;action&quot; &amp;amp;&amp;amp; message [1] === null &amp;amp;&amp;amp; message[2][0][0] === &quot;battery&quot;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Functionality to keep track of the pushname changes on your phone. You enable logging and you&#39;ll see an unhandled message about your pushanme pop up like this: &lt;code&gt;s24, [&quot;Conn&quot;,{&quot;pushname&quot;:&quot;adiwajshing&quot;}]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;You now know what a pushname update looks like. It&#39;ll have the following characteristics.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Given &lt;code&gt;const pMessage = [&quot;Conn&quot;,{&quot;pushname&quot;:&quot;adiwajshing&quot;}] &lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pMessage[0]&lt;/code&gt; is always &lt;code&gt;&quot;Conn&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pMessage[1]&lt;/code&gt; always has the key &lt;code&gt;&quot;pushname&quot;&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;pMessage[2]&lt;/code&gt; is always &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Following this, one can implement the following callback:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;conn.on (&#39;CB:Conn,pushname&#39;, json =&amp;gt; {
    const pushname = json[1].pushname
    conn.user.name = pushname // update on client too
    console.log (&quot;Name updated: &quot; + pushname)
})
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This callback will be fired any time a message is received matching the following criteria: &lt;code&gt;message [0] === &quot;Conn&quot; &amp;amp;&amp;amp; message [1].pushname&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;A little more testing will reveal that almost all WhatsApp messages are in the format illustrated above. Note: except for the first parameter (in the above cases, &lt;code&gt;&quot;action&quot;&lt;/code&gt; or &lt;code&gt;&quot;Conn&quot;&lt;/code&gt;), all the other parameters are optional.&lt;/p&gt; 
&lt;h3&gt;Note&lt;/h3&gt; 
&lt;p&gt;This library was originally a project for &lt;strong&gt;CS-2362 at Ashoka University&lt;/strong&gt; and is in no way affiliated with WhatsApp. Use at your own discretion. Do not spam people with this.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;img src=&quot;https://assets.vercel.com/image/upload/v1607554385/repositories/next-js/next-logo.png&quot; height=&quot;128&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://nextjs.org&quot;&gt;Next.js&lt;/a&gt;&lt;/h1&gt;
&lt;a href=&quot;https://nextjs.org&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a aria-label=&quot;Vercel logo&quot; href=&quot;https://vercel.com&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;NPM version&quot; href=&quot;https://www.npmjs.com/package/next&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;License&quot; href=&quot;https://github.com/vercel/next.js/raw/canary/license.md&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000&quot;&gt; &lt;/a&gt; &lt;a aria-label=&quot;Join the community on GitHub&quot; href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label=&quot;next.js learn&quot; href=&quot;https://nextjs.org/learn&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://nextjs.org/learn&quot;&gt;https://nextjs.org/learn&lt;/a&gt; to get started with Next.js.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nextjs.org/docs&quot;&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Who is using Next.js?&lt;/h2&gt; 
&lt;p&gt;Next.js is used by the world&#39;s leading companies. Check out the &lt;a href=&quot;https://nextjs.org/showcase&quot;&gt;Next.js Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href=&quot;https://github.com/vercel/next.js/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://nextjs.org/discord&quot;&gt;Next.js Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;a href=&quot;https://github.com/vercel/next.js/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tim Neutkens (&lt;a href=&quot;https://twitter.com/timneutkens&quot;&gt;@timneutkens&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/timneutkens&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Naoyuki Kanezawa (&lt;a href=&quot;https://twitter.com/nkzawa&quot;&gt;@nkzawa&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/nkzawa&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Guillermo Rauch (&lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;@rauchg&lt;/a&gt;) – &lt;a href=&quot;https://vercel.com/about/rauchg&quot;&gt;Vercel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Arunoda Susiripala (&lt;a href=&quot;https://twitter.com/arunoda&quot;&gt;@arunoda&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Tony Kovanen (&lt;a href=&quot;https://twitter.com/tonykovanen&quot;&gt;@tonykovanen&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dan Zajdband (&lt;a href=&quot;https://twitter.com/impronunciable&quot;&gt;@impronunciable&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href=&quot;https://metamask.io/&quot;&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href=&quot;https://metamask.zendesk.com/hc/en-us&quot;&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href=&quot;https://community.metamask.io/c/learn/26&quot;&gt;general questions&lt;/a&gt;, &lt;a href=&quot;https://community.metamask.io/c/feature-requests-ideas/13&quot;&gt;feature requests&lt;/a&gt;, or &lt;a href=&quot;https://community.metamask.io/c/developer-questions/11&quot;&gt;developer questions&lt;/a&gt;, visit our &lt;a href=&quot;https://community.metamask.io/&quot;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow our &lt;a href=&quot;https://twitter.com/metamask&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://medium.com/metamask&quot;&gt;Medium&lt;/a&gt; pages.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href=&quot;https://metamask.github.io/metamask-docs/&quot;&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask project itself, visit our &lt;a href=&quot;https://github.com/MetaMask/metamask-extension/tree/develop/docs&quot;&gt;Internal Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building locally&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; version 14 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href=&quot;https://github.com/creationix/nvm#installation&quot;&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;yarn setup&lt;/code&gt; (not the usual install command)&lt;/li&gt; 
 &lt;li&gt;Copy the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file to &lt;code&gt;.metamaskrc&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href=&quot;https://infura.io/docs&quot;&gt;Infura Project ID&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you&#39;ll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href=&quot;https://segment.com/docs/connections/find-writekey/&quot;&gt;Segment write key&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they&#39;re built.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/build/README.md&quot;&gt;build system readme&lt;/a&gt; for build system usage information.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;To start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To start the &lt;a href=&quot;https://github.com/facebook/react-devtools&quot;&gt;React DevTools&lt;/a&gt; and &lt;a href=&quot;https://github.com/reduxjs/redux-devtools/tree/main/extension&quot;&gt;Redux DevTools Extension&lt;/a&gt; alongside the app, use &lt;code&gt;yarn start:dev&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React DevTools will open in a separate window; no browser extension is required&lt;/li&gt; 
 &lt;li&gt;Redux DevTools will need to be installed as a browser extension. Open the Redux Remote Devtools to access Redux state logs. This can be done by either right clicking within the web browser to bring up the context menu, expanding the Redux DevTools panel and clicking Open Remote DevTools OR clicking the Redux DevTools extension icon and clicking Open Remote DevTools. 
  &lt;ul&gt; 
   &lt;li&gt;You will also need to check the &quot;Use custom (local) server&quot; checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://metamask.github.io/test-dapp/&quot;&gt;Test site&lt;/a&gt; can be used to execute different user flows.&lt;/p&gt; 
&lt;h3&gt;Running Unit Tests and Linting&lt;/h3&gt; 
&lt;p&gt;Run unit tests and the linter with &lt;code&gt;yarn test&lt;/code&gt;. To run just unit tests, run &lt;code&gt;yarn test:unit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;, and you can automatically fix some lint problems with &lt;code&gt;yarn lint:fix&lt;/code&gt;. You can also run these two commands just on your local changes to save time with &lt;code&gt;yarn lint:changed&lt;/code&gt; and &lt;code&gt;yarn lint:changed:fix&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;h3&gt;Running E2E Tests&lt;/h3&gt; 
&lt;p&gt;Our e2e test suite can be run on either Firefox or Chrome. In either case, start by creating a test build by running &lt;code&gt;yarn build:test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Firefox e2e tests can be run with &lt;code&gt;yarn test:e2e:firefox&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Chrome e2e tests can be run with &lt;code&gt;yarn test:e2e:chrome&lt;/code&gt;, but they will only work if you have Chrome v79 installed. Update the &lt;code&gt;chromedriver&lt;/code&gt; package to a version matching your local Chrome installation to run e2e tests on newer Chrome versions.&lt;/p&gt; 
&lt;h3&gt;Changing dependencies&lt;/h3&gt; 
&lt;p&gt;Whenever you change dependencies (adding, removing, or updating, either in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), there are various files that must be kept up-to-date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn setup&lt;/code&gt; again after your changes to ensure &lt;code&gt;yarn.lock&lt;/code&gt; has been properly updated.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;allow-scripts&lt;/code&gt; configuration in &lt;code&gt;package.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; to update the &lt;code&gt;allow-scripts&lt;/code&gt; configuration automatically. This config determines whether the package&#39;s install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The LavaMoat policy files. The &lt;em&gt;tl;dr&lt;/em&gt; is to run &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; to update these files, but there can be devils in the details. Continue reading for more information. 
  &lt;ul&gt; 
   &lt;li&gt;There are two sets of LavaMoat policy files: 
    &lt;ul&gt; 
     &lt;li&gt;The production LavaMoat policy files (&lt;code&gt;lavamoat/browserify/*/policy.json&lt;/code&gt;), which are re-generated using &lt;code&gt;yarn lavamoat:background:auto&lt;/code&gt;. 
      &lt;ul&gt; 
       &lt;li&gt;These should be regenerated whenever the production dependencies for the background change.&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;The build system LavaMoat policy file (&lt;code&gt;lavamoat/build-system/policy.json&lt;/code&gt;), which is re-generated using &lt;code&gt;yarn lavamoat:build:auto&lt;/code&gt;. 
      &lt;ul&gt; 
       &lt;li&gt;This should be regenerated whenever the dependencies used by the build system itself change.&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
   &lt;li&gt;Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat&#39;s static analysis. Refer to the LavaMoat documentation or ask for help if you run into any issues.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/architecture.png&quot; alt=&quot;Architecture Diagram&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-chrome.md&quot;&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/add-to-firefox.md&quot;&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/translating-guide.md&quot;&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/publishing.md&quot;&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/docs/trezor-emulator.md&quot;&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/MetaMask/metamask-extension/develop/development/gource-viz.sh&quot;&gt;How to generate a visualization of this repository&#39;s development&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoft/monaco-editor</title>
      <link>https://github.com/microsoft/monaco-editor</link>
      <description>&lt;p&gt;A browser based code editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monaco Editor&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/ms/monaco-editor/_build/latest?definitionId=3&quot;&gt;&lt;img src=&quot;https://dev.azure.com/ms/monaco-editor/_apis/build/status/microsoft.monaco-editor?label=website&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is the code editor which powers &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;VS Code&lt;/a&gt;, with the features better described &lt;a href=&quot;https://code.visualstudio.com/docs/editor/editingevolved&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this repository contains no source code for the code editor, it only contains the scripts to package everything together and ship the &lt;code&gt;monaco-editor&lt;/code&gt; npm module.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Try it out&lt;/h2&gt; 
&lt;p&gt;Try the editor out &lt;a href=&quot;https://microsoft.github.io/monaco-editor/index.html&quot;&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install monaco-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;inside &lt;code&gt;esm&lt;/code&gt;: ESM version of the editor (compatible with e.g. webpack)&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;dev&lt;/code&gt;: AMD bundled, not minified&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;min&lt;/code&gt;: AMD bundled, and minified&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;min-maps&lt;/code&gt;: source maps for &lt;code&gt;min&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is recommended to develop against the &lt;code&gt;dev&lt;/code&gt; version, and in production to use the &lt;code&gt;min&lt;/code&gt; version.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Learn how to integrate the editor with these &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/samples/&quot;&gt;complete samples&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-amd.md&quot;&gt;Integrate the AMD version&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-esm.md&quot;&gt;Integrate the ESM version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Learn how to use the editor API and try out your own customizations in the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/playground.html&quot;&gt;playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/api/index.html&quot;&gt;API docs&lt;/a&gt; or read them straight from &lt;a href=&quot;https://github.com/microsoft/monaco-editor/raw/main/website/typedoc/monaco.d.ts&quot;&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read &lt;a href=&quot;https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators&quot;&gt;this guide&lt;/a&gt; to ensure the editor is accessible to all your users!&lt;/li&gt; 
 &lt;li&gt;Create a Monarch tokenizer for a new programming language &lt;a href=&quot;https://microsoft.github.io/monaco-editor/monarch.html&quot;&gt;in the Monarch playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/monaco-editor&quot;&gt;StackOverflow&lt;/a&gt;! Search open and closed issues, there are a lot of tips in there!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Create &lt;a href=&quot;https://github.com/microsoft/monaco-editor/issues&quot;&gt;issues&lt;/a&gt; in this repository for anything related to the Monaco Editor. Always mention &lt;strong&gt;the version&lt;/strong&gt; of the editor when creating issues and &lt;strong&gt;the browser&lt;/strong&gt; you&#39;re having trouble in. Please search for existing issues to avoid duplicates.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code and the Monaco Editor?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is generated straight from VS Code&#39;s sources with some shims around services the code needs to make it run in a web browser outside of its home.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code&#39;s version and the Monaco Editor&#39;s version?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;None. The Monaco Editor is a library and it reflects directly the source code.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;I&#39;ve written an extension for VS Code, will it work on the Monaco Editor in a browser?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If the extension is fully based on the &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/&quot;&gt;LSP&lt;/a&gt; and if the language server is authored in JavaScript, then it would be possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;❓ &lt;strong&gt;Why all these web workers and why should I care?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn&#39;t worry too much about them, as long as you get them to work (see above the cross-domain case).&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is this &lt;code&gt;loader.js&lt;/code&gt;? Can I use &lt;code&gt;require.js&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It is an AMD loader that we use in VS Code. Yes.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;I see the warning &quot;Could not create web worker&quot;. What should I do?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;HTML5 does not allow pages loaded on &lt;code&gt;file://&lt;/code&gt; to create web workers. Please load the editor with a web server on &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; schemes.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;Is the editor supported in mobile browsers or mobile web app frameworks?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;Why doesn&#39;t the editor support TextMate grammars?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please see &lt;a href=&quot;https://github.com/bolinfest/monaco-tm&quot;&gt;https://github.com/bolinfest/monaco-tm&lt;/a&gt; which puts together &lt;code&gt;monaco-editor&lt;/code&gt;, &lt;code&gt;vscode-oniguruma&lt;/code&gt; and &lt;code&gt;vscode-textmate&lt;/code&gt; to get TM grammar support in the editor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;❓ &lt;strong&gt;What about IE 11 support?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The Monaco Editor no longer supports IE 11. The last version that was tested on IE 11 is &lt;code&gt;0.18.1&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development setup&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/microsoft/monaco-editor/raw/main/LICENSE.txt&quot;&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub pull-requests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub watchers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://open.vscode.dev/microsoft/Web-Dev-For-Beginners&quot;&gt;&lt;img src=&quot;https://open.vscode.dev/badges/open-in-vscode.svg?sanitize=true&quot; alt=&quot;Open in Visual Studio Code&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to &#39;stick&#39;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors Jen Looper, Chris Noring, Christopher Harrison, Jasmine Greenaway, Yohan Lasorsa, Floor Drees, and sketchnote artist Tomomi Imura!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md&quot;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We&#39;d love your feedback &lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner&quot;&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend &lt;a href=&quot;https://docs.microsoft.com/users/jenlooper-2911/collections/jg2gax8pzd6o81?WT.mc_id=academic-13441-cxa&quot;&gt;Microsoft Learn&lt;/a&gt; and by watching the videos mentioned below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtube.com/watch?v=R1wrdtmBSII&quot; title=&quot;Promo video&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/web.gif&quot; alt=&quot;Promo video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gif by &lt;a href=&quot;https://linkedin.com/in/mohitjaisal&quot;&gt;Mohit Jaisal&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎥 Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a typing game, a virtual terrarium, a &#39;green&#39; browser extension, a &#39;space invaders&#39; type game, and a business-type banking app, and will have learned the basics of JavaScript, HTML, and CSS along with the modern toolchain of today&#39;s web developer.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎓 You can take the first few lessons in this curriculum as a &lt;a href=&quot;https://docs.microsoft.com/learn/paths/web-development-101?WT.mc_id=academic-13441-cxa&quot;&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with video from the &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript?WT.mc_id=academic-13441-cxa&quot;&gt;Beginners Series to: JavaScript&lt;/a&gt;&quot; collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks so as to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: &quot;&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs?WT.mc_id=academic-13441-cxa&quot;&gt;Beginner Series to: Node.js&lt;/a&gt;&quot;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/TRANSLATIONS.md&quot;&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained &lt;a href=&quot;https://happy-mud-02d95f10f.azurestaticapps.net/&quot;&gt;in this app&lt;/a&gt;, for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder. They are gradually being localized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Project Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Concepts Taught&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Introduction to Programming and Tools of the Trade&lt;/td&gt; 
   &lt;td&gt;Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md&quot;&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Basics of GitHub, includes working with a team&lt;/td&gt; 
   &lt;td&gt;How to use GitHub in your project, how to collaborate with others on a code base&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md&quot;&gt;Intro to GitHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Getting Started&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Accessibility&lt;/td&gt; 
   &lt;td&gt;Learn the basics of web accessibility&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md&quot;&gt;Accessibility Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Data Types&lt;/td&gt; 
   &lt;td&gt;The basics of JavaScript data types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Functions and Methods&lt;/td&gt; 
   &lt;td&gt;Learn about functions and methods to manage an application&#39;s logic flow&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md&quot;&gt;Functions and Methods&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine and Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Making Decisions with JS&lt;/td&gt; 
   &lt;td&gt;Learn how to create conditions in your code using decision-making methods&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md&quot;&gt;Making Decisions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JS Basics&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Arrays and Loops&lt;/td&gt; 
   &lt;td&gt;Work with data using arrays and loops in JavaScript&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md&quot;&gt;Arrays and Loops&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML in Practice&lt;/td&gt; 
   &lt;td&gt;Build the HTML to create an online terrarium, focusing on building a layout&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md&quot;&gt;Introduction to HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;CSS in Practice&lt;/td&gt; 
   &lt;td&gt;Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md&quot;&gt;Introduction to CSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution&quot;&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;JavaScript Closures, DOM manipulation&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md&quot;&gt;JavaScript Closures, DOM manipulation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution&quot;&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Typing Game&lt;/td&gt; 
   &lt;td&gt;Learn how to use keyboard events to drive the logic of your JavaScript app&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md&quot;&gt;Event-Driven Programming&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Working with Browsers&lt;/td&gt; 
   &lt;td&gt;Learn how browsers work, their history, and how to scaffold the first elements of a browser extension&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md&quot;&gt;About Browsers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Building a form, calling an API and storing variables in local storage&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript elements of your browser extension to call an API using variables stored in local storage&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md&quot;&gt;APIs, Forms, and Local Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Background processes in the browser, web performance&lt;/td&gt; 
   &lt;td&gt;Use the browser&#39;s background processes to manage the extension&#39;s icon; learn about web performance and some optimizations to make&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md&quot;&gt;Background Tasks and Performance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;More Advanced Game Development with JavaScript&lt;/td&gt; 
   &lt;td&gt;Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md&quot;&gt;Introduction to Advanced Game Development&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Drawing to canvas&lt;/td&gt; 
   &lt;td&gt;Learn about the Canvas API, used to draw elements to a screen&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md&quot;&gt;Drawing to Canvas&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Moving elements around the screen&lt;/td&gt; 
   &lt;td&gt;Discover how elements can gain motion using the cartesian coordinates and the Canvas API&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md&quot;&gt;Moving Elements Around&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Collision detection&lt;/td&gt; 
   &lt;td&gt;Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md&quot;&gt;Collision Detection&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Keeping score&lt;/td&gt; 
   &lt;td&gt;Perform math calculations based on the game&#39;s status and performance&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md&quot;&gt;Keeping Score&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Ending and restarting the game&lt;/td&gt; 
   &lt;td&gt;Learn about ending and restarting the game, including cleaning up assets and resetting variable values&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md&quot;&gt;The Ending Condition&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;HTML Templates and Routes in a Web App&lt;/td&gt; 
   &lt;td&gt;Learn how to create the scaffold of a multipage website&#39;s architecture using routing and HTML templates&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md&quot;&gt;HTML Templates and Routes&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Build a Login and Registration Form&lt;/td&gt; 
   &lt;td&gt;Learn about building forms and handing validation routines&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Methods of Fetching and Using Data&lt;/td&gt; 
   &lt;td&gt;How data flows in and out of your app, how to fetch it, store it, and dispose of it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md&quot;&gt;Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Concepts of State Management&lt;/td&gt; 
   &lt;td&gt;Learn how your app retains state and how to manage it programmatically&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md&quot;&gt;State Management&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href=&quot;https://docsify.js.org/#/&quot;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&quot;https://docsify.js.org/#/quickstart&quot;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;PDF&lt;/h2&gt; 
&lt;p&gt;A PDF of all of the lessons can be found &lt;a href=&quot;https://microsoft.github.io/Web-Dev-For-Beginners/pdf/readme.pdf&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Curricula&lt;/h2&gt; 
&lt;p&gt;Our team produces other curricula! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/ml-beginners&quot;&gt;Machine Learning for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/iot-beginners&quot;&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/datascience-beginners&quot;&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ethereumbook/ethereumbook</title>
      <link>https://github.com/ethereumbook/ethereumbook</link>
      <description>&lt;p&gt;Mastering Ethereum, by Andreas M. Antonopoulos, Gavin Wood&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastering Ethereum&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ethereumbook/ethereumbook/develop/images/cover_thumb.png&quot; alt=&quot;Mastering Ethereum Cover&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is a book for developers, offering a guide to the operation and use of the Ethereum, Ethereum Classic, RootStock (RSK) and other compatible EVM-based open blockchains.&lt;/p&gt; 
&lt;h2&gt;Reading this book&lt;/h2&gt; 
&lt;p&gt;To read this book, see &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/book.asciidoc&quot;&gt;book.asciidoc&lt;/a&gt;. Click on each of the chapters to read in your browser. Other parties may choose to release PDFs of the book online.&lt;/p&gt; 
&lt;h2&gt;Chapters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preface: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/preface.asciidoc&quot;&gt;Preface&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 1: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/01what-is.asciidoc&quot;&gt;What Is Ethereum&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 2: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/02intro.asciidoc&quot;&gt;Ethereum Basics&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 3: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/03clients.asciidoc&quot;&gt;Ethereum Clients&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 4: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/04keys-addresses.asciidoc&quot;&gt;Cryptography&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 5: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/05wallets.asciidoc&quot;&gt;Wallets&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 6: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/06transactions.asciidoc&quot;&gt;Transactions&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 7: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/07smart-contracts-solidity.asciidoc&quot;&gt;Smart Contracts and Solidity&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 8: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/08smart-contracts-vyper.asciidoc&quot;&gt;Smart Contracts and Vyper&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 9: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/09smart-contracts-security.asciidoc&quot;&gt;Smart Contract Security&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 10: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/10tokens.asciidoc&quot;&gt;Tokens&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 11: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/11oracles.asciidoc&quot;&gt;Oracles&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 12: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/12dapps.asciidoc&quot;&gt;Decentralized Applications (DApps)&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 13: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/13evm.asciidoc&quot;&gt;The Ethereum Virtual Machine&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 14: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/raw/develop/14consensus.asciidoc&quot;&gt;Consensus&lt;/a&gt;&#39;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;p&gt;The content status is &quot;COMPLETE&quot;. The first edition of this book was published on December 1st, 2018. That edition is available in print and ebook format at many popular bookstores. It is tagged &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;&quot;first_edition_first_print&quot;&lt;/a&gt; in the develop branch of this repository.&lt;/p&gt; 
&lt;p&gt;At this time, &lt;strong&gt;only bug fix requests are accepted&lt;/strong&gt;. If you find a bug, start an issue or better yet, fix the problem with a pull request. We will start work on the second edition in late 2019.&lt;/p&gt; 
&lt;h2&gt;Source and license&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;first edition&lt;/a&gt; of this book, as printed and sold by O&#39;Reilly Media, is available in this repository.&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is released under the &lt;em&gt;Creative Commons CC-BY-SA license&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;This &quot;Free Culture&quot; compliant license was approved by our publisher O&#39;Reilly Media (&lt;a href=&quot;http://oreilly.com&quot;&gt;http://oreilly.com&lt;/a&gt;), who understands the value of open source. O&#39;Reilly Media is not just the world&#39;s best publisher of technical books, but is also a strong supporter of this open culture and the sharing of knowledge.&lt;/p&gt; 
&lt;p&gt;&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;span xmlns:dct=&quot;http://purl.org/dc/terms/&quot; href=&quot;http://purl.org/dc/dcmitype/Text&quot; property=&quot;dct:title&quot; rel=&quot;dct:type&quot;&gt;Mastering Ethereum&lt;/span&gt; by &lt;a xmlns:cc=&quot;http://creativecommons.org/ns#&quot; href=&quot;https://ethereumbook.info&quot; property=&quot;cc:attributionName&quot; rel=&quot;cc:attributionURL&quot;&gt;Andreas M. Antonopoulos, Gavin Wood&lt;/a&gt; is licensed under a &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;br&gt;Based on a work at &lt;a xmlns:dct=&quot;http://purl.org/dc/terms/&quot; href=&quot;https://github.com/ethereumbook/ethereumbook&quot; rel=&quot;dct:source&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook&quot;&gt;https://github.com/ethereumbook/ethereumbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Translate This Book!&lt;/h1&gt; 
&lt;p&gt;If you are interested in translating this book, please join our team of volunteers at: &lt;a href=&quot;https://www.transifex.com/aantonop/ethereumbook&quot;&gt;https://www.transifex.com/aantonop/ethereumbook&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;🧙&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; — an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;We have a &lt;a href=&quot;https://www.immunefi.com/bounty/openzeppelin&quot;&gt;&lt;strong&gt;bug bounty program&lt;/strong&gt; on Immunefi&lt;/a&gt;. Please report any security issues you find through the Immunefi dashboard, or reach out to &lt;a href=&quot;mailto:security@openzeppelin.com&quot;&gt;security@openzeppelin.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Critical bug fixes will be backported to past major releases.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>marktext/marktext</title>
      <link>https://github.com/marktext/marktext</link>
      <description>&lt;p&gt;📝A simple and elegant markdown editor, available for Linux, macOS and Windows.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/static/logo-small.png&quot; alt=&quot;Mark Text&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Mark Text&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://twitter.com/intent/tweet?via=marktextme&amp;amp;url=https://github.com/marktext/marktext/&amp;amp;text=What%20do%20you%20want%20to%20say%20to%20app?&amp;amp;hashtags=happyMarkText&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/url/https/github.com/marktext/marktext.svg?style=for-the-badge&quot; alt=&quot;twitter&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;strong&gt;&lt;span&gt;🔆&lt;/span&gt; Next generation markdown editor &lt;span&gt;🌙&lt;/span&gt;&lt;/strong&gt;
 &lt;br&gt; A simple and elegant open-source markdown editor that focused on speed and usability.
 &lt;br&gt; 
 &lt;sub&gt;Available for Linux, macOS and Windows.&lt;/sub&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;!-- Version --&gt; 
 &lt;a href=&quot;https://marktext.github.io/website&quot;&gt; &lt;img src=&quot;https://badge.fury.io/gh/jocs%2Fmarktext.svg?sanitize=true&quot; alt=&quot;website&quot;&gt; &lt;/a&gt; 
 &lt;!-- License --&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/marktext/marktext.svg?sanitize=true&quot; alt=&quot;LICENSE&quot;&gt; &lt;/a&gt; 
 &lt;!-- Build Status --&gt; 
 &lt;a href=&quot;https://travis-ci.org/marktext/marktext/&quot;&gt; &lt;img src=&quot;https://travis-ci.org/marktext/marktext.svg?branch=master&quot; alt=&quot;build&quot;&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://ci.appveyor.com/project/marktext/marktext/branch/master&quot;&gt; &lt;img src=&quot;https://ci.appveyor.com/api/projects/status/l4gxgydj0i95hmxg/branch/master?svg=true&quot; alt=&quot;build&quot;&gt; &lt;/a&gt; 
 &lt;!-- Downloads total --&gt; 
 &lt;a href=&quot;https://github.com/marktext/marktext/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/total.svg?sanitize=true&quot; alt=&quot;total download&quot;&gt; &lt;/a&gt; 
 &lt;!-- Downloads latest release --&gt; 
 &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/v0.16.3/total.svg?sanitize=true&quot; alt=&quot;latest download&quot;&gt; &lt;/a&gt; 
 &lt;!-- sponsors --&gt; 
 &lt;a href=&quot;https://opencollective.com/marktext&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/silver-sponsors/badge.svg?label=SilverSponsors&amp;amp;color=brightgreen&quot; alt=&quot;sponsors&quot;&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://marktext.app&quot;&gt; Website &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#features&quot;&gt; Features &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#download-and-installation&quot;&gt; Downloads &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#development&quot;&gt; Development &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&quot;https://github.com/marktext/marktext#contribution&quot;&gt; Contribution &lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;sub&gt;Translations:&lt;/sub&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/zh_cn.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇨🇳&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/zh_tw.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇹🇼&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/pl.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇵🇱&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/ja.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇯🇵&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/french.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇫🇷&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/tr.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇹🇷&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/spanish.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇪🇸&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/pt.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇵🇹&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/i18n/ko.md#readme&quot;&gt; &lt;span&gt;&lt;span&gt;🇰🇷&lt;/span&gt;&lt;/span&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;sub&gt;This Markdown editor that could. Built with ❤︎ by &lt;a href=&quot;https://github.com/Jocs&quot;&gt;Jocs&lt;/a&gt; and &lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt; contributors &lt;/a&gt; &lt;/sub&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;h2 align=&quot;center&quot;&gt;Supporting Mark Text&lt;/h2&gt; 
&lt;p&gt;Mark Text is an MIT licensed open source project, and the latest version will always be downloadable for free from the GitHub release page. Mark Text is still in development, and its development is inseparable from all sponsors. I hope you join them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/ranluo&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt; or &lt;a href=&quot;https://github.com/Jocs/sponsor.me&quot;&gt;One time donation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/marktext&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;What&#39;s the difference between Patreon and Open Collective?&lt;/h5&gt; 
&lt;p&gt;Patreon: Funds will be directly sponsored to Luo Ran (@jocs) who created Mark Text and continues to maintain it. Open Collective: All expenses are transparent. The funds will be used for the development and maintenance of Mark Text, funding online and offline activities, and acquiring other necessary resources. Names and company logos of all sponsors (from both Patreon and Open Collective) will appear on the official website for Mark Text and in its README.md file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Special Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://www.dogedoge.com/&quot;&gt; &lt;img src=&quot;https://www.dogedoge.com/assets/new_logo.min.png&quot; width=&quot;100&quot; height=&quot;100&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Platinum Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/platinum-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Gold Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/gold-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Silver Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/silver-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Bronze Sponsors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#platinum-sponsors&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/bronze-sponsors.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Backers&lt;/strong&gt;&lt;/p&gt; 
&lt;a href=&quot;https://opencollective.com/marktext#backers&quot;&gt; &lt;img src=&quot;https://opencollective.com/marktext/tiers/backer.svg?avatarHeight=36&amp;amp;width=600&quot;&gt; &lt;/a&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/marktext.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Realtime preview (WYSIWYG) and a clean and simple interface to get a distraction-free writing experience.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href=&quot;https://spec.commonmark.org/0.29/&quot;&gt;CommonMark Spec&lt;/a&gt;, &lt;a href=&quot;https://github.github.com/gfm/&quot;&gt;GitHub Flavored Markdown Spec&lt;/a&gt; and selective support &lt;a href=&quot;https://pandoc.org/MANUAL.html#pandocs-markdown&quot;&gt;Pandoc markdown&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Markdown extensions such as math expressions (KaTeX), front matter and emojis.&lt;/li&gt; 
 &lt;li&gt;Support paragraphs and inline style shortcuts to improve your writing efficiency.&lt;/li&gt; 
 &lt;li&gt;Output &lt;strong&gt;HTML&lt;/strong&gt; and &lt;strong&gt;PDF&lt;/strong&gt; files.&lt;/li&gt; 
 &lt;li&gt;Various themes: &lt;strong&gt;Cadmium Light&lt;/strong&gt;, &lt;strong&gt;Material Dark&lt;/strong&gt; etc.&lt;/li&gt; 
 &lt;li&gt;Various editing modes: &lt;strong&gt;Source Code mode&lt;/strong&gt;, &lt;strong&gt;Typewriter mode&lt;/strong&gt;, &lt;strong&gt;Focus mode&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Paste images directly from clipboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 align=&quot;center&quot;&gt;&lt;span&gt;🌙&lt;/span&gt;themes&lt;span&gt;🔆&lt;/span&gt;&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Cadmium Light&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Dark&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/cadmium-light.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/dark.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Graphite Light&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Material Dark&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/graphite-light.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/materal-dark.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Ulysses Light&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;One Dark&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/ulysses-light.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/themeImages/one-dark.png?raw=true&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4 align=&quot;center&quot;&gt;&lt;span&gt;😸&lt;/span&gt;Edit modes&lt;span&gt;🐶&lt;/span&gt;&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Source Code&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Typewriter&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Focus&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/source.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/typewriter.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/focus.gif&quot; alt=&quot;&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Why write another editor?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;I love writing. I have used a lot of markdown editors, yet there is still not an editor that can fully meet my needs. I don&#39;t like to be disturbed when I write by some unbearable bug. &lt;strong&gt;Mark Text&lt;/strong&gt; uses virtual DOM to render pages which has the added benefits of being highly efficient and being open source. That way anyone who loves markdown and writing can use Mark Text.&lt;/li&gt; 
 &lt;li&gt;As mentioned above, &lt;strong&gt;Mark Text&lt;/strong&gt; is completely free and open source and will be open source forever. We hope that all markdown lovers will contribute their own code and help develop &lt;strong&gt;Mark Text&lt;/strong&gt; into a popular markdown editor.&lt;/li&gt; 
 &lt;li&gt;There are many markdown editors and all have their own merits, some have features which others don&#39;t. It&#39;s difficult to satisfy each markdown users&#39; needs but we hope &lt;strong&gt;Mark Text&lt;/strong&gt; will be able to satisfy each markdown user as much as possible. Although the latest &lt;strong&gt;Mark Text&lt;/strong&gt; is still not perfect, we will try to make it as best as we possibly can.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Download and Installation&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/static/v1.svg?label=Platform&amp;amp;message=Linux-64%20%7C%20macOS-64%20%7C%20Win-32%20%7C%20Win-64&amp;amp;style=for-the-badge&quot; alt=&quot;platform&quot;&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/mac-pass-sm.png&quot; alt=&quot;&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/windows-pass-sm.png&quot; alt=&quot;&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/ryanoasis/nerd-fonts/screenshots/v1.0.x/linux-pass-sm.png&quot; alt=&quot;&quot;&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marktext/marktext/releases/download/v0.16.3/marktext.dmg&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/latest/marktext.dmg.svg?sanitize=true&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marktext/marktext/releases/download/v0.16.3/marktext-setup.exe&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-setup.exe.svg?sanitize=true&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/marktext/marktext/releases/download/v0.16.3/marktext-x86_64.AppImage&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marktext/marktext/latest/marktext-x86_64.AppImage.svg?sanitize=true&quot; alt=&quot;latest version&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Want to see new features of the latest version? Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/.github/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;p&gt;You can either download the latest &lt;code&gt;marktext-%version%.dmg&lt;/code&gt; from the &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt;release page&lt;/a&gt; or install Mark Text using &lt;a href=&quot;https://github.com/caskroom/homebrew-cask&quot;&gt;&lt;strong&gt;homebrew cask&lt;/strong&gt;&lt;/a&gt;. To use Homebrew-Cask you just need to have &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install --cask mark-text
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;p&gt;Simply download and install Mark Text via setup wizard (&lt;code&gt;marktext-setup-%version%.exe&lt;/code&gt;) and choose whether to install per-user or machine wide.&lt;/p&gt; 
&lt;p&gt;Alternatively, install Mark Text using &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;. To use Chocolatey you need to have &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;choco install marktext
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Linux&lt;/h4&gt; 
&lt;p&gt;Please follow the &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/LINUX.md&quot;&gt;Linux installation instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Other&lt;/h4&gt; 
&lt;p&gt;All binaries for Linux, macOS and Windows can be downloaded from the &lt;a href=&quot;https://github.com/marktext/marktext/releases/latest&quot;&gt;release page&lt;/a&gt;. If a version is unavailable for your system, then please open an &lt;a href=&quot;https://github.com/marktext/marktext/issues&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;If you wish to build &lt;strong&gt;Mark Text&lt;/strong&gt; yourself, please check out our &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/dev/BUILD.md&quot;&gt;build instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/README.md&quot;&gt;User documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/docs/dev/README.md&quot;&gt;Developer documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions regarding &lt;strong&gt;Mark Text&lt;/strong&gt;, you are welcome to write an issue. When doing so please use the default format found when opening an issue. Of course, if you submit a PR directly, it will be greatly appreciated.&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.packal.org/workflow/mark-text&quot;&gt;Alfred Workflow&lt;/a&gt;: A Workflow for the macOS app Alfred: Use &quot;mt&quot; to open files/folder with Mark Text.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Mark Text is in full development, please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. Want to add some features to Mark Text? Refer to our &lt;a href=&quot;https://github.com/marktext/marktext/projects&quot;&gt;roadmap&lt;/a&gt; and open issues.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you to all the people who have already contributed to Mark Text[&lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt;contributors&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Special thanks to @&lt;a href=&quot;https://github.com/Yasujizr&quot;&gt;Yasujizr&lt;/a&gt; who designed the Mark Text logo.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marktext/marktext/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/marktext/contributors.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marktext/marktext/develop/LICENSE&quot;&gt;&lt;strong&gt;MIT&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fmarktext%2Fmarktext?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmarktext%2Fmarktext.svg?type=large&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;# Day&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Topics&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md&quot;&gt;Booleans, Operators, Date&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md&quot;&gt;Conditionals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md&quot;&gt;Arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md&quot;&gt;Loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md&quot;&gt;Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md&quot;&gt;Objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md&quot;&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md&quot;&gt;Sets and Maps&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md&quot;&gt;Destructuring and Spreading&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md&quot;&gt;Console Object Methods&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md&quot;&gt;Error Handling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md&quot;&gt;Classes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md&quot;&gt;JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md&quot;&gt;Web Storages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md&quot;&gt;Promises&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md&quot;&gt;Closure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md&quot;&gt;Writing Clean Code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md&quot;&gt;DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md&quot;&gt;Manipulating DOM Object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md&quot;&gt;Event Listeners&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md&quot;&gt;Mini Project: Solar System&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md&quot;&gt;Mini Project: World Countries Data Visulalization 1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md&quot;&gt;Mini Project: World Countries Data Visulalization 2&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md&quot;&gt;Mini Project: Portfolio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md&quot;&gt;Mini Project: Leaderboard&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md&quot;&gt;Mini Project:Animating characters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md&quot;&gt;Final Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;🧡🧡🧡 HAPPY CODING 🧡🧡🧡&lt;/p&gt; 
&lt;div&gt; 
 &lt;small&gt;Support the &lt;strong&gt;author&lt;/strong&gt; to create more educational materials&lt;/small&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://www.paypal.me/asabeneh&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/paypal_lg.png&quot; alt=&quot;Paypal Logo&quot; style=&quot;width:10%&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/in/asabeneh/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social&quot;&gt; &lt;/a&gt; 
 &lt;a class=&quot;header-badge&quot; target=&quot;_blank&quot; href=&quot;https://twitter.com/Asabeneh&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/asabeneh?style=social&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;sub&gt;Author: &lt;a href=&quot;https://www.linkedin.com/in/asabeneh/&quot; target=&quot;_blank&quot;&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;p&gt;🇬🇧 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md&quot;&gt;English&lt;/a&gt; 🇪🇸 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md&quot;&gt;Spanish&lt;/a&gt; 🇷🇺 &lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md&quot;&gt;Russian&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;  
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png&quot; alt=&quot;Thirty Days Of JavaScript&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript&quot;&gt;30 Days Of JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1&quot;&gt;📔 Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup&quot;&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs&quot;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser&quot;&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome&quot;&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console&quot;&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console&quot;&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog&quot;&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments&quot;&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics&quot;&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor&quot;&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code&quot;&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code&quot;&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page&quot;&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script&quot;&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script&quot;&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script&quot;&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts&quot;&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types&quot;&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers&quot;&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings&quot;&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans&quot;&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined&quot;&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null&quot;&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types&quot;&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again&quot;&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises&quot;&gt;💻 Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📔 Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the &lt;a href=&quot;https://t.me/ThirtyDaysOfJavaScript&quot;&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for six consecutive years and is the most used programming language on Github.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need Node.js right now but you may need it for later. Install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png&quot; alt=&quot;Node download&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png&quot; alt=&quot;Install node&quot;&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using Node version 12.14.0, but now the recommended version of Node.js for download is v14.17.6.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png&quot; alt=&quot;Google Chrome&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png&quot; alt=&quot;Opening chrome&quot;&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png&quot; alt=&quot;Opening console&quot;&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png&quot; alt=&quot;write code on console&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &#39;Hello, World&#39; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;console.log()&lt;/strong&gt; function can take multiple parameters separated by commas. The syntax looks like as follows:&lt;strong&gt;console.log(param1, param2, param3)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png&quot; alt=&quot;console log multiple arguments&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello&#39;, &#39;World&#39;, &#39;!&#39;)
console.log(&#39;HAPPY&#39;, &#39;NEW&#39;, &#39;YEAR&#39;, 2020)
console.log(&#39;Welcome&#39;, &#39;to&#39;, 30, &#39;Days&#39;, &#39;Of&#39;, &#39;JavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;console.log()&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;console.log()&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code.In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this /* */ is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;// This is the first comment&lt;br&gt; // This is the second comment&lt;br&gt; // I am a single line comment&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;/* This is a multiline comment&lt;br&gt; Multiline comments can take multiple lines&lt;br&gt; JavaScript is the language of the web&lt;br&gt; */&lt;/p&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences,compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is the structure of statements in a computer language.Programming languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png&quot; alt=&quot;Error&quot;&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;console.log()&lt;/em&gt;. If we are printing text or string using &lt;em&gt;console.log()&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick quotes. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
console.log(&quot;Hello, World!&quot;)
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;console.log()&lt;/em&gt; on google chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. The console can directly take arguments without the &lt;strong&gt;&lt;em&gt;console.log()&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png&quot; alt=&quot;Arithmetic&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won&#39;t do for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual studio code is a very popular open-source text editor. I would recommend to &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png&quot; alt=&quot;Vscode&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png&quot; alt=&quot;Vscode ui&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png&quot; alt=&quot;Vscode add project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png&quot; alt=&quot;Vscode open project&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png&quot; alt=&quot;script file&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png&quot; alt=&quot;Installing Live Server&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png&quot; alt=&quot;running script&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png&quot; alt=&quot;coding running&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;)&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;alert()&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;head&lt;/em&gt; or the &lt;em&gt;body&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick=&quot;alert(&#39;Welcome to 30DaysOfJavaScript!&#39;);&quot;&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the console.log()&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png&quot; alt=&quot;js code from vscode&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Welcome to 30DaysOfJavaScript&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- it could be in the header or in the body --&amp;gt; 
    &amp;lt;!-- Here is the recommended place to put the external script --&amp;gt;
    &amp;lt;script src=&quot;introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the console.log()&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a helloworld.js file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(&#39;Hello, World!&#39;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&quot;./helloworld.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./introduction.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png&quot; alt=&quot;Multiple Script&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different kinds of data types. The following are JavaScript primitive data types:&lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&#39;Asabeneh&#39;
&#39;Finland&#39;
&#39;JavaScript is a beautiful programming language&#39;
&#39;I love teaching&#39;
&#39;I hope you are enjoying the first day&#39;
`We can also create a string using a backtick`
&#39;A string could be just as small as one character as big as many pages&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons returns a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;true // if the light is on, the value is true
false // if the light is off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don&#39;t assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let firstName
console.log(firstName) // undefined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;console.log(typeof &#39;Asabeneh&#39;) // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// commenting the code itself with a single comment
// let firstName = &#39;Asabeneh&#39;; single line comment
// let lastName = &#39;Yetayeh&#39;; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/*
  let location = &#39;Helsinki&#39;;
  let age = 100;
  let isMarried = true;
  This is a Multiple line comment

*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do not change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don&#39;t recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScript. In this material, we will use camelCase variables.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring different variables of different data types
let firstName = &#39;Asabeneh&#39; // first name of a person
let lastName = &#39;Yetayeh&#39; // last name of a person
let country = &#39;Finland&#39; // country
let city = &#39;Helsinki&#39; // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh Yetayeh Finland Helsinki 100 true
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in °C
const PI = 3.14 // geometrical constant
console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Variables can also be declaring in one line separated by comma
let name = &#39;Asabeneh&#39;, // name of a person
job = &#39;teacher&#39;,
live = &#39;Finland&#39;
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png&quot; alt=&quot;Day one&quot;&gt;&lt;/p&gt; 
&lt;p&gt;🌕 You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;💻 Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🎉 CONGRATULATIONS ! 🎉&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md&quot;&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rainbow-me/rainbow</title>
      <link>https://github.com/rainbow-me/rainbow</link>
      <description>&lt;p&gt;🌈‒ the Ethereum wallet that lives in your pocket&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/profile_banners/1103191459409420288/1573207178/1500x500&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;🌈️ Rainbow&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;the Ethereum wallet that lives in your pocket!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📲️ &lt;a href=&quot;https://apps.apple.com/us/app/rainbow-ethereum-wallet/id1457119021&quot;&gt;Available on the iOS App Store.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;🐦️ &lt;a href=&quot;https://twitter.com/rainbowdotme&quot;&gt;Follow us on Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install NVM or Node.js 14: &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;https://github.com/creationix/nvm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install all project dependencies with &lt;code&gt;yarn setup&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;latest version of XCode&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Watchman:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;brew install watchman
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install CocoaPods:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo gem install cocoapods
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install the required bundles and Pods for this project:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn install-bundle &amp;amp;&amp;amp; yarn install-pods
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install system dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt install libsecret-tools watchman
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the &lt;a href=&quot;https://reactnative.dev/docs/environment-setup&quot;&gt;React Native environment setup instructions&lt;/a&gt; carefully, which will involve installing Android Studio, the Android SDK, the emulator, etc. and making them available in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure at least one &lt;a href=&quot;https://developer.android.com/studio/run/managing-avds&quot;&gt;AVD image&lt;/a&gt; is available for the emulator (unless using a physical device).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;If you are new to React Native, this is a helpful introduction: &lt;a href=&quot;https://reactnative.dev/docs/getting-started&quot;&gt;https://reactnative.dev/docs/getting-started&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Preflight&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;nvm use 14&lt;/code&gt; to force Node.js v14.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up your .env file, use our env.example as a guide.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Note that some features are currently not accessible, we are working with our Data Providers in order to provide open source API Keys!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Here are some resources to generate your own API keys:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Etherscan: &lt;a href=&quot;https://etherscan.io/apis&quot;&gt;https://etherscan.io/apis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Infura: &lt;a href=&quot;https://infura.io/&quot;&gt;https://infura.io/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;ETH Gas Station: &lt;a href=&quot;https://docs.ethgasstation.info/&quot;&gt;https://docs.ethgasstation.info/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Imgix: &lt;a href=&quot;https://www.imgix.com/&quot;&gt;https://www.imgix.com/&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure a &lt;code&gt;google-services.json&lt;/code&gt; has been added to the relevant project directory/directories so the compile will not fail.&lt;/p&gt; &lt;p&gt;This can either be the live Google Services config (for internal development) or a self-provided config for a personal Firebase project (third-party contributors) registered under the package name &lt;code&gt;me.rainbow&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Note: Darwin versions of the application can only be developed/built on Darwin platforms with XCode.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start a React Native webserver with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;code&gt;rainbow-wallet/ios/Rainbow.xcworkspace&lt;/code&gt; in XCode.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the project by clicking the play button.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Note: Linux development environments cannot develop or build Darwin versions of the project.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start a React Native webserver with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build/install/start the debug version of the app in an emulator with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn android
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;CodePush&lt;/h2&gt; 
&lt;p&gt;In order to use code push you must be logged into the correct Microsoft App Center account.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g code-push
code-push login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this point you will be required to log into the account tied to the code push public keys in Info.plist&lt;/p&gt; 
&lt;h3&gt;Deployment&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;code-push release-react RainbowWallet-iOS ios -d &amp;lt;DEPLOYMENT&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The deployment can either be &lt;code&gt;Staging&lt;/code&gt; or &lt;code&gt;Production&lt;/code&gt; depending on the mode of the application you wish to update was built in through XCode.&lt;/p&gt; 
&lt;h3&gt;Local Builds&lt;/h3&gt; 
&lt;p&gt;In order to build the application in &quot;release&quot; mode but not use the code push distribution you must build the application using the scheme &lt;code&gt;LocalRelease&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Building the application with the &lt;code&gt;Staging&lt;/code&gt; scheme or &lt;code&gt;Release&lt;/code&gt; scheme will result in your bundle being replaced by the live code push deployment on resume of the application.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wix/Detox</title>
      <link>https://github.com/wix/Detox</link>
      <description>&lt;p&gt;Gray box end-to-end testing and automation framework for mobile apps&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Detox&quot; width=&quot;380&quot; src=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/img/DetoxLogo.png&quot;&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Detox &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;Gray box end-to-end testing and automation library for mobile apps.&lt;/b&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Demo&quot; src=&quot;http://i.imgur.com/eoaDEYp.gif&quot;&gt; &lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png&quot; alt=&quot;&quot; height=&quot;24&quot; width=&quot;1&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/detox&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/detox.svg?style=flat&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/detox&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/detox.svg?style=flat&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://jenkins-oss.wixpress.com/job/multi-detox-master/&quot;&gt;&lt;img src=&quot;https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-detox-master.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/wix/Detox?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;Detox is released under the MIT license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://wix.github.io/docs/contributing&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PR&#39;s welcome!&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/detoxe2e&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/detoxe2e?label=Follow&amp;amp;style=social&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What Does a Detox Test Look Like?&lt;/h2&gt; 
&lt;p&gt;This is a test for a login screen, it runs on a device/simulator like an actual user:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;describe(&#39;Login flow&#39;, () =&amp;gt; {
    
  it(&#39;should login successfully&#39;, async () =&amp;gt; {
    await device.reloadReactNative();
    
    await element(by.id(&#39;email&#39;)).typeText(&#39;john@example.com&#39;);
    await element(by.id(&#39;password&#39;)).typeText(&#39;123456&#39;);
    await element(by.text(&#39;Login&#39;)).tap();
      
    await expect(element(by.text(&#39;Welcome&#39;))).toBeVisible();
    await expect(element(by.id(&#39;email&#39;))).toNotExist();
  });
  
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://wix.github.io/Detox/docs/introduction/getting-started&quot;&gt;Get started with Detox now!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;High velocity native mobile development requires us to adopt continuous integration workflows, which means our reliance on manual QA has to drop significantly. Detox tests your mobile app while it’s running in a real device/simulator, interacting with it just like a real user.&lt;/p&gt; 
&lt;p&gt;The most difficult part of automated testing on mobile is the tip of the testing pyramid - E2E. The core problem with E2E tests is flakiness - tests are usually not deterministic. We believe the only way to tackle flakiness head on is by moving from black box testing to gray box testing. That’s where Detox comes into play.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cross Platform:&lt;/strong&gt; Write cross-platform tests in JavaScript. Currently supports iOS and Android.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runs on Devices&lt;/strong&gt; (not yet supported on iOS): Gain confidence to ship by testing your app on a device/simulator just like a real user.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatically Synchronized:&lt;/strong&gt; Stops flakiness at the core by monitoring asynchronous operations in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Made For CI:&lt;/strong&gt; Execute your E2E tests on CI platforms like Travis without grief.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Runner Independent:&lt;/strong&gt; Use Jest, Mocha, AVA, or any other JavaScript test runner you like (spoiler: we have our favorite).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Debuggable:&lt;/strong&gt; Modern &lt;code&gt;async&lt;/code&gt;-&lt;code&gt;await&lt;/code&gt; API allows breakpoints in asynchronous tests to work as expected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Versions&lt;/h2&gt; 
&lt;h3&gt;Environment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OS&lt;/strong&gt;: macOS 10.15 (Catalina) or higher&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Xcode&lt;/strong&gt;: 11.0 or higher 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;iOS Simulator Runtime&lt;/strong&gt;: iOS 13.0 or higher&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;React Native&lt;/h3&gt; 
&lt;p&gt;Detox is built from the ground up to support React Native projects as well as pure native ones.&lt;/p&gt; 
&lt;p&gt;The following React Native versions have been tested:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;iOS&lt;/th&gt; 
   &lt;th&gt;Android&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;≤0.64.x&lt;/td&gt; 
   &lt;td&gt;≥0.59, ≤0.64 - Visibility edge-case: see this &lt;a href=&quot;https://github.com/facebook/react-native/issues/23870&quot;&gt;RN issue&lt;/a&gt;*&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Future versions are most likely supported, but have not been tested yet. Please open issues if you find specific issues with newer React Native versions.&lt;/p&gt; 
&lt;h2&gt;Get Started with Detox&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://wix.github.io/Detox/docs/introduction/getting-started&quot;&gt;Getting Started Guide&lt;/a&gt; to get Detox running on your app in less than 10 minutes.&lt;/p&gt; 
&lt;h2&gt;Documents Site&lt;/h2&gt; 
&lt;p&gt;Explore further about using Detox from our new &lt;strong&gt;&lt;a href=&quot;https://wix.github.io/Detox/&quot;&gt;website&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Core Principles&lt;/h2&gt; 
&lt;p&gt;We believe that the only way to address the core difficulties with mobile end-to-end testing is by rethinking some of the principles of the entire approach. See what Detox &lt;a href=&quot;https://wix.github.io/Detox/docs/introduction/design-principles&quot;&gt;does differently&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Detox&lt;/h2&gt; 
&lt;p&gt;Detox has been open-source from the first commit. If you’re interested in helping out with our roadmap, please see issues tagged with the &lt;a href=&quot;https://github.com/wix/Detox/labels/user%3A%20looking%20for%20contributors&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wix/Detox/master/docs/img/github-label-contributors.png&quot;&gt;&lt;/a&gt; label. If you have encountered a bug or would like to suggest a new feature, please open an issue.&lt;/p&gt; 
&lt;p&gt;Dive into Detox core by reading the &lt;a href=&quot;https://wix.github.io/Detox/docs/contributing&quot;&gt;Detox Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detox is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/wix/Detox/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-English Resources (Community)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/quia-digital/iniciando-com-detox-framework-1-4-ce31ad7ae812&quot;&gt;Getting Started (Brazilian Portuguese)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>FortAwesome/Font-Awesome</title>
      <link>https://github.com/FortAwesome/Font-Awesome</link>
      <description>&lt;p&gt;The iconic SVG, font, and CSS toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://img.fortawesome.com/349cfdf6/fa-free-logo.svg?sanitize=true&quot; alt=&quot;Font Awesome Free&quot; width=&quot;50%&quot;&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Version 5 – the iconic SVG, font, and CSS framework&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The internet&#39;s most popular icon toolkit has been redesigned and built from scratch. On top of this, features like icon font ligatures, an SVG framework, official NPM packages for popular frontend libraries like React, and access to a new CDN.&lt;/p&gt; 
&lt;p&gt;Not familiar with Font Awesome 5? &lt;a href=&quot;https://www.kickstarter.com/projects/232193852/font-awesome-5&quot;&gt;Learn more&lt;/a&gt; about our successful Kickstarter and plan. You can also &lt;strong&gt;&lt;a href=&quot;https://fontawesome.com/pro&quot;&gt;order Font Awesome Pro&lt;/a&gt;&lt;/strong&gt; which includes tons more icons directly from &lt;a href=&quot;https://fontawesome.com&quot;&gt;fontawesome.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:&lt;/p&gt; 
&lt;h3&gt;Using Font Awesome on the Web&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=svg-with-js&quot;&gt;With SVG with JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/setup/getting-started?using=web-fonts-with-css&quot;&gt;With web fonts with CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/setup/upgrading-from-version-4&quot;&gt;Upgrading from version 4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/setup/using-package-managers&quot;&gt;Installing Font Awesome with a package manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself&quot;&gt;Downloading + hosting Font Awesome yourself&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/performance-and-security&quot;&gt;Performance and security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/other-topics/accessibility&quot;&gt;Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/other-topics/troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Advanced Options &amp;amp; Techniques&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/advanced/css-pseudo-elements&quot;&gt;Using CSS pseudo-elements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/svg-sprites&quot;&gt;SVG sprites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/font-awesome-api&quot;&gt;The Font Awesome API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/advanced/svg-symbols&quot;&gt;SVG symbols&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-web/advanced/svg-javascript-core&quot;&gt;SVG JavaScript Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/server-side-rendering&quot;&gt;Server side rendering&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using Font Awesome on the Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-desktop/setup/getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-desktop/setup/upgrading-from-version-4&quot;&gt;Upgrading from version 4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-ligatures&quot;&gt;Using ligatures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-desktop/referencing-icons/using-glyphs&quot;&gt;Using glyphs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/how-to-use/on-the-desktop/other-topics/troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Where did Font Awesome 4 (or 3) go?&lt;/h3&gt; 
&lt;p&gt;Now that Font Awesome 5 has been released we are marking version 4 as end-of-life. We don&#39;t plan on releasing any further versions of the 4.x or 3.x.&lt;/p&gt; 
&lt;p&gt;Documentation is still available but it&#39;s moved to &lt;a href=&quot;https://fontawesome.com/v4.7.0&quot;&gt;https://fontawesome.com/v4.7.0&lt;/a&gt; and &lt;a href=&quot;https://fontawesome.com/v3.2.1&quot;&gt;https://fontawesome.com/v3.2.1&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Git repository for &lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/releases/tag/v4.7.0&quot;&gt;v4.7.0&lt;/a&gt; and &lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/releases/tag/v3.2.1&quot;&gt;v3.2.1&lt;/a&gt; can be found in our GitHub releases.&lt;/p&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;We&#39;ll keep track of each release in the &lt;a href=&quot;https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Looking for older versions of Font Awesome? Check the &lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/releases&quot;&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;From time-to-time we&#39;ll have special upgrading instructions from one version to the next.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/UPGRADING.md&quot;&gt;UPGRADING.md&lt;/a&gt; guide when you upgrade your dependencies.&lt;/p&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;We will behave ourselves if you behave yourselves. For more details see our &lt;a href=&quot;https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/CODE_OF_CONDUCT.md&quot;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href=&quot;https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered with the following format:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more information on SemVer, please visit &lt;a href=&quot;http://semver.org&quot;&gt;http://semver.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The major version &quot;5&quot; is part of an umbrella release. It includes many different types of files and technologies. Therefore we deviate from normal SemVer in the following ways:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Any release may update the design, look-and-feel, or branding of an existing icon&lt;/li&gt; 
 &lt;li&gt;We will never intentionally release a &lt;code&gt;patch&lt;/code&gt; version update that breaks backward compatibility&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;minor&lt;/code&gt; release &lt;strong&gt;may include backward-incompatible changes&lt;/strong&gt; but we will write clear upgrading instructions in UPGRADING.md&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;minor&lt;/code&gt; or &lt;code&gt;patch&lt;/code&gt; release will never remove icons&lt;/li&gt; 
 &lt;li&gt;Bug fixes will be addressed as &lt;code&gt;patch&lt;/code&gt; releases unless they include backward incompatibility then they will be &lt;code&gt;minor&lt;/code&gt; releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Font Awesome Free is free, open source, and GPL friendly. You can use it for commercial projects, open source projects, or really almost whatever you want.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Icons — CC BY 4.0 License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Fonts — SIL OFL 1.1 License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Code — MIT License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font Awesome Free files already contain embedded comments with sufficient attribution, so you shouldn&#39;t need to do anything additional when using these files normally.&lt;/p&gt; 
&lt;p&gt;We&#39;ve kept attribution comments terse, so we ask that you do not actively work to remove them from files, especially code. They&#39;re a great way for folks to learn about Font Awesome.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davegandy&quot;&gt;Dave Gandy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/supercodepoet&quot;&gt;Travis Chase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robmadole&quot;&gt;Rob Madole&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/talbs&quot;&gt;Brian Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sensibleworld&quot;&gt;Jory Raphael&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mlwilkerson&quot;&gt;Mike Wilkerson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/frrrances&quot;&gt;Frances Botsford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trevorchase&quot;&gt;Trevor Chase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasonlundien&quot;&gt;Jason Lundien&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/deathnfudge&quot;&gt;Jason Otero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ej2&quot;&gt;Edward Emanuel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kelseythejackson&quot;&gt;Kelsey Jackson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tagliala&quot;&gt;Geremia Taglialatela&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>serverless/serverless</title>
      <link>https://github.com/serverless/serverless</link>
      <description>&lt;p&gt;⚡ Serverless Framework – Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure Functions, Google CloudFunctions &amp; more! –&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://serverless.com&quot;&gt;&lt;img src=&quot;https://s3.amazonaws.com/assets.github.serverless/readme-serverless-framework.gif&quot; alt=&quot;Serverless Application Framework AWS Lambda API Gateway&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.serverless.com&quot;&gt;&lt;img src=&quot;http://public.serverless.com/badges/v3.svg?sanitize=true&quot; alt=&quot;serverless&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/serverless/serverless/actions?query=workflow%3AIntegrate&quot;&gt;&lt;img src=&quot;https://github.com/serverless/serverless/workflows/Integrate/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/serverless&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/serverless.svg?sanitize=true&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/serverless/serverless&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/serverless/serverless/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/serverless/serverless.svg?sanitize=true&quot; alt=&quot;gitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://snyk.io/test/github/serverless/serverless&quot;&gt;&lt;img src=&quot;https://snyk.io/test/github/serverless/serverless/badge.svg?sanitize=true&quot; alt=&quot;Known Vulnerabilities&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/serverless&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/l/serverless.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.serverless.com&quot;&gt;Website&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/framework/docs/&quot;&gt;Docs&lt;/a&gt; • &lt;a href=&quot;https://join.slack.com/t/serverless-contrib/shared_invite/zt-d5qzowja-pnOerTzAIZUrN18hWYUIHA&quot;&gt;Community Slack&lt;/a&gt; • &lt;a href=&quot;http://forum.serverless.com&quot;&gt;Forum&lt;/a&gt; • &lt;a href=&quot;https://twitter.com/goserverless&quot;&gt;Twitter&lt;/a&gt; • &lt;a href=&quot;https://www.meetup.com/pro/serverless/&quot;&gt;Meetups&lt;/a&gt; • &lt;a href=&quot;https://serverless.com/company/jobs/&quot;&gt;We&#39;re Hiring&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/README_CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Serverless Framework&lt;/strong&gt; – Build applications on AWS Lambda and other next-gen cloud services, that auto-scale and only charge you when they run. This lowers the total cost of running and operating your apps, enabling you to build more and manage less.&lt;/p&gt; 
&lt;p&gt;The Serverless Framework is a command-line tool that uses easy and approachable YAML syntax to deploy both your code and cloud infrastructure needed to make tons of serverless application use-cases. It&#39;s a multi-language framework that supports Node.js, Typescript, Python, Go, Java, and more. It&#39;s also completely extensible via over 1,000 plugins that can add more serverless use-cases and workflows to the Framework.&lt;/p&gt; 
&lt;p&gt;Actively maintained by &lt;a href=&quot;https://www.serverless.com&quot;&gt;Serverless Inc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#quick-start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serverless/plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#licensing&quot;&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/#v.5&quot;&gt;Previous Version 0.5.x&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name=&quot;quick-start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Install Via NPM:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g serverless
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set Up Your AWS Account Credentials:&lt;/h3&gt; 
&lt;p&gt;The Serverless Framework deploys to your own AWS account. You&#39;ll need to enable Serverless Framework to deploy to your AWS account by giving it access. &lt;a href=&quot;https://www.serverless.com/framework/docs/providers/aws/guide/credentials&quot;&gt;Here is a guide to help you set up your credentials securely&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create A Service:&lt;/h3&gt; 
&lt;p&gt;A &quot;Service&quot; is the Framework&#39;s project or app concept. You can create one from scratch or select an existing template by running.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Go through the onboarding flow and then navigate into the newly created directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd my-new-service
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploy A Service:&lt;/h3&gt; 
&lt;p&gt;Use this when you have made changes to your Functions, Events or Resources in &lt;code&gt;serverless.yml&lt;/code&gt; or you simply want to deploy all changes within your Service at the same time.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless deploy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploy A Function:&lt;/h3&gt; 
&lt;p&gt;Use this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless deploy function -f hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Invoke The Function On AWS:&lt;/h3&gt; 
&lt;p&gt;Invokes an AWS Lambda Function on AWS and returns logs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless invoke -f hello -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Invoke The Function Locally:&lt;/h3&gt; 
&lt;p&gt;Invokes an AWS Lambda Function on your local machine and returns logs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless invoke local -f hello -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stream Function Logs:&lt;/h3&gt; 
&lt;p&gt;Open up a separate tab in your console and stream all logs for a specific Function using this command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless logs -f hello -t
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Remove The Service:&lt;/h3&gt; 
&lt;p&gt;Removes all Functions, Events and Resources from your AWS account.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;serverless remove
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;a name=&quot;features&quot;&gt;&lt;/a&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, &amp;amp; F#&lt;/li&gt; 
 &lt;li&gt;Manages the lifecycle of your serverless architecture (build, deploy, update, delete).&lt;/li&gt; 
 &lt;li&gt;Safely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).&lt;/li&gt; 
 &lt;li&gt;Functions can be grouped (&quot;serverless services&quot;) for easy management of code, resources &amp;amp; processes, across large projects &amp;amp; teams.&lt;/li&gt; 
 &lt;li&gt;Minimal configuration and scaffolding.&lt;/li&gt; 
 &lt;li&gt;Built-in support for multiple stages.&lt;/li&gt; 
 &lt;li&gt;Optimized for CI/CD workflows.&lt;/li&gt; 
 &lt;li&gt;Loaded with automation, optimization and best practices.&lt;/li&gt; 
 &lt;li&gt;100% Extensible: Extend or modify the Framework and its operations via Plugins.&lt;/li&gt; 
 &lt;li&gt;An ecosystem of serverless services and plugins.&lt;/li&gt; 
 &lt;li&gt;A passionate and welcoming community!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name=&quot;contributing&quot;&gt;&lt;/a&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love our contributors! Please read our &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/CONTRIBUTING.md&quot;&gt;Contributing Document&lt;/a&gt; to learn how you can start working on the Framework yourself.&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://github.com/serverless/serverless/labels/help%20wanted&quot;&gt;help wanted&lt;/a&gt; or &lt;a href=&quot;https://github.com/serverless/serverless/labels/good%20first%20issue&quot;&gt;good first issue&lt;/a&gt; labels to find issues we want to move forward on with your help.&lt;/p&gt; 
&lt;h2&gt;&lt;a name=&quot;community&quot;&gt;&lt;/a&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/goserverless&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://join.slack.com/t/serverless-contrib/shared_invite/zt-d5qzowja-pnOerTzAIZUrN18hWYUIHA&quot;&gt;Community Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/serverless/serverless&quot;&gt;Gitter Chatroom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.meetup.com/serverless/&quot;&gt;Serverless Meetups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/serverless-framework&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/serverless&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;mailto:hello@serverless.com&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name=&quot;licensing&quot;&gt;&lt;/a&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Serverless is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/serverless/serverless/master/LICENSE.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.&lt;/p&gt; 
&lt;h1&gt;&lt;a name=&quot;v.5&quot;&gt;&lt;/a&gt;Previous Serverless Version 0.5.x&lt;/h1&gt; 
&lt;p&gt;You can read the v0.5.x documentation at &lt;a href=&quot;https://serverless.readme.io/v0.5.0/docs&quot;&gt;readme.io&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;The fastest way to build Svelte apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;READ THIS FIRST!&lt;/h1&gt; 
&lt;p&gt;SvelteKit is still in beta. Expect bugs! Read more &lt;a href=&quot;https://svelte.dev/blog/sveltekit-beta&quot;&gt;here&lt;/a&gt;, and track progress towards 1.0 &lt;a href=&quot;https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://kit.svelte.dev/docs&quot;&gt;the documentation&lt;/a&gt; for information about getting started and developing with SvelteKit.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Changelog&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit&quot;&gt;@sveltejs/kit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/kit/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte&quot;&gt;create-svelte&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/create-svelte/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node&quot;&gt;@sveltejs/adapter-node&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-node/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static&quot;&gt;@sveltejs/adapter-static&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-static/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers&quot;&gt;@sveltejs/adapter-cloudflare-workers&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare-workers/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare&quot;&gt;@sveltejs/adapter-cloudflare&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-cloudflare/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify&quot;&gt;@sveltejs/adapter-netlify&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-netlify/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel&quot;&gt;@sveltejs/adapter-vercel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/packages/adapter-vercel/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The SvelteKit community also makes additional &lt;a href=&quot;https://sveltesociety.dev/components#adapters&quot;&gt;SvelteKit adapters available for use&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bug reporting&lt;/h2&gt; 
&lt;p&gt;Please make sure the issue you&#39;re reporting involves SvelteKit. Many issues related to how a project builds originate from &lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt;, which SvelteKit uses to build a project. It&#39;s important to note that new Vite projects don&#39;t use SSR by default, and so if you create a new Vite project from scratch, many issues won&#39;t reproduce even though Vite causes them. You should thus start with a project that utilizes SSR, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GrygrFlzr/vite-ssr-d3&quot;&gt;https://github.com/GrygrFlzr/vite-ssr-d3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/e2e-tests/vite-ssr&quot;&gt;https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/e2e-tests/vite-ssr&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If Vite causes an issue, please report in the &lt;a href=&quot;https://github.com/vitejs/vite/issues&quot;&gt;Vite issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;This is a monorepo, meaning the repo holds multiple packages. It requires the use of &lt;a href=&quot;https://pnpm.js.org/en/&quot;&gt;pnpm&lt;/a&gt;. You can &lt;a href=&quot;https://pnpm.io/installation&quot;&gt;install pnpm&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;pnpm&lt;/code&gt; commands run in the project&#39;s root directory will run on all sub-projects. You can checkout the code and build all sub-projects with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone git@github.com:sveltejs/kit.git
cd kit
pnpm install
pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now be able to run &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/examples/hn.svelte.dev&quot;&gt;the example&lt;/a&gt; with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd examples/hn.svelte.dev
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm dev&lt;/code&gt; inside the &lt;code&gt;packages/kit&lt;/code&gt; directory to continually rebuild &lt;code&gt;@sveltejs/kit&lt;/code&gt; as you make changes to SvelteKit. Restarting the example/test apps will cause the newly built version to be used.&lt;/p&gt; 
&lt;p&gt;To use the git hooks in the repo, which will save you waiting for CI to tell you that you forgot to lint, run this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config core.hookspath .githooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Coding style&lt;/h3&gt; 
&lt;p&gt;There are a few guidelines we follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Internal variables are written with &lt;code&gt;snake_case&lt;/code&gt; while external APIs are written with &lt;code&gt;camelCase&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Provide a single object as the argument to public APIs. This object can have multiple properties&lt;/li&gt; 
 &lt;li&gt;Avoid creating new test projects under &lt;code&gt;packages/kit/test/apps&lt;/code&gt; but reuse an existing one when possible&lt;/li&gt; 
 &lt;li&gt;Ensure &lt;code&gt;pnpm lint&lt;/code&gt; and &lt;code&gt;pnpm check&lt;/code&gt; pass. You can run &lt;code&gt;pnpm format&lt;/code&gt; to format the code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Generating changelogs&lt;/h3&gt; 
&lt;p&gt;For changes to be reflected in package changelogs, run &lt;code&gt;pnpx changeset&lt;/code&gt; and follow the prompts. All changesets should be &lt;code&gt;patch&lt;/code&gt; until SvelteKit 1.0&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm test&lt;/code&gt; to run the tests from all subpackages. Browser tests live in subdirectories of &lt;code&gt;packages/kit/test&lt;/code&gt; such as &lt;code&gt;packages/kit/test/apps/basics&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the tests for only a single package by first moving to that directory. E.g. &lt;code&gt;cd packages/kit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You must rebuild each time before running the tests if you&#39;ve made code changes.&lt;/p&gt; 
&lt;p&gt;To run a single integration test, provide the &lt;code&gt;FILTER&lt;/code&gt; env var with the test name. E.g. &lt;code&gt;FILTER=&quot;includes paths&quot; pnpm test:integration&lt;/code&gt;. You can also open up the file and change &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;test.only&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the test server with &lt;code&gt;cd packages/kit/test/apps/basics; pnpm run dev&lt;/code&gt; to hit it with your browser.&lt;/p&gt; 
&lt;p&gt;You may need to install some dependencies first, e.g. with &lt;code&gt;npx playwright install-deps&lt;/code&gt; (which only works on Ubuntu).&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;All documentation for SvelteKit is in the &lt;code&gt;documentation&lt;/code&gt; directory, and any improvements should be made as a Pull Request to this repository. The documentation is served via an API; the site itself is located in the &lt;a href=&quot;https://github.com/sveltejs/sites&quot;&gt;&lt;code&gt;sites&lt;/code&gt; repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you wish to preview documentation changes locally, please follow the instructions here: &lt;a href=&quot;https://github.com/sveltejs/sites/raw/master/sites/kit.svelte.dev/README.md#previewing-local-docs-changes&quot;&gt;Previewing local docs changes&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Releases&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/changesets/action#with-publishing&quot;&gt;Changesets GitHub action&lt;/a&gt; will create and update a PR that applies changesets and publishes new versions of changed packages to npm.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It uses &lt;code&gt;pnpm publish&lt;/code&gt; rather than &lt;code&gt;pnpx changeset publish&lt;/code&gt; so that we can use the &lt;code&gt;--filter&lt;/code&gt; and (while in beta) &lt;code&gt;--tag&lt;/code&gt; flags — though perhaps they work with &lt;code&gt;pnpx changeset publish&lt;/code&gt;?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;New packages will need to be published manually the first time if they are scoped to the &lt;code&gt;@sveltejs&lt;/code&gt; organisation, by running this from the package directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm publish --access=public
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Code structure&lt;/h2&gt; 
&lt;p&gt;Entry points to be aware of are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/create-svelte&quot;&gt;&lt;code&gt;packages/create-svelte&lt;/code&gt;&lt;/a&gt; - code that&#39;s run when you create a new project with &lt;code&gt;npm init svelte@next&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/kit/src/packaging&quot;&gt;&lt;code&gt;packages/kit/src/packaging&lt;/code&gt;&lt;/a&gt; - for the &lt;code&gt;svelte-kit package&lt;/code&gt; command&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/raw/master/packages/kit/src/core/dev/index.js&quot;&gt;&lt;code&gt;packages/kit/src/core/dev/index.js&lt;/code&gt;&lt;/a&gt; - for the dev-mode server&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/raw/master/packages/kit/src/core/build/index.js&quot;&gt;&lt;code&gt;packages/kit/src/core/build/index.js&lt;/code&gt;&lt;/a&gt; - for the production server&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages&quot;&gt;&lt;code&gt;packages/adapter-[platform]&lt;/code&gt;&lt;/a&gt; - for the various SvelteKit-provided adapters&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most code called at build-time or from the CLI entry point lives in &lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/kit/src/core&quot;&gt;packages/kit/src/core&lt;/a&gt;. Code that runs for rendering and routing lives in &lt;a href=&quot;https://github.com/sveltejs/kit/tree/master/packages/kit/src/runtime&quot;&gt;packages/kit/src/runtime&lt;/a&gt;. Most changes to SvelteKit itself would involve code in these two directories.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
