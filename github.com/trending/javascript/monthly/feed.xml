<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Monthly Trending</title>
    <description>Monthly Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 18 Apr 2021 02:30:57 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>r4j0x00/exploits</title>
      <link>https://github.com/r4j0x00/exploits</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;exploits&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/CVE-2021-3156/exploit.c&quot;&gt;CVE-2021-3156&lt;/a&gt;: Linux local privilege escalation through heap overflow in sudo (&lt;a href=&quot;https://twitter.com/r4j0x00/status/1355489323794108417&quot;&gt;Demo&lt;/a&gt;)&lt;br&gt; &lt;a href=&quot;https://github.com/r4j0x00/exploits/tree/master/CVE-2021-3156_one_shot&quot;&gt;CVE-2021-3156 One shot exploit&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/chrome-exploit/exploit.js&quot;&gt;CVE-2020-6507&lt;/a&gt;: Out of bounds write in V8. Chrome versions &amp;lt;= 83.0.4103.97. (RCE)&lt;br&gt; &lt;a href=&quot;https://github.com/r4j0x00/exploits/blob/master/CVE-2020-16040/exploit.js&quot;&gt;CVE-2020-16040&lt;/a&gt;: Chrome exploit versions &amp;lt;= 87.0.4280.88&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bradtraversy/vanillawebprojects</title>
      <link>https://github.com/bradtraversy/vanillawebprojects</link>
      <description>&lt;p&gt;Mini projects built with HTML5, CSS &amp; JavaScript. No frameworks or libraries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;20+ Web Projects With Vanilla JavaScript&lt;/h1&gt; 
&lt;p&gt;This is the main repository for all of the projects in the course.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/web-projects-with-vanilla-javascript/?referralCode=F9B7C7FED834F91ADE75&quot;&gt;Course Link&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vanillawebprojects.com&quot;&gt;Course Info Website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;| # | Project | Live Demo | | :-: | :----------------------------: | :-------: | | 01 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/form-validator&quot;&gt;Form Validator&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/form-validator/&quot;&gt;Live Demo&lt;/a&gt; | | 02 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/movie-seat-booking&quot;&gt;Movie Seat Booking&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/movie-seat-booking/&quot;&gt;Live Demo&lt;/a&gt; | | 03 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/custom-video-player&quot;&gt;Custom Video Player&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/custom-video-player/&quot;&gt;Live Demo&lt;/a&gt; | | 04 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/exchange-rate&quot;&gt;Exchange Rate Calculator&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/exchange-rate/&quot;&gt;Live Demo&lt;/a&gt; | | 05 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/dom-array-methods&quot;&gt;DOM Array Methods Project&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/dom-array-methods/&quot;&gt;Live Demo&lt;/a&gt; | | 06 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/modal-menu-slider&quot;&gt;Menu Slider &amp;amp; Modal&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/modal-menu-slider/&quot;&gt;Live Demo&lt;/a&gt; | | 07 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/hangman&quot;&gt;Hangman Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/hangman/&quot;&gt;Live Demo&lt;/a&gt; | | 08 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/meal-finder&quot;&gt;Mealfinder App&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/meal-finder/&quot;&gt;Live Demo&lt;/a&gt; | | 09 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/expense-tracker&quot;&gt;Expense Tracker&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/expense-tracker/&quot;&gt;Live Demo&lt;/a&gt; | | 10 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/music-player&quot;&gt;Music Player&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/music-player/&quot;&gt;Live Demo&lt;/a&gt; | | 11 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/infinite_scroll_blog&quot;&gt;Infinite Scrolling&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/infinite_scroll_blog/&quot;&gt;Live Demo&lt;/a&gt; | | 12 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/typing-game&quot;&gt;Typing Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/typing-game/&quot;&gt;Live Demo&lt;/a&gt; | | 13 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/speech-text-reader&quot;&gt;Speech Text Reader&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/speech-text-reader/&quot;&gt;Live Demo&lt;/a&gt; | | 14 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/memory-cards&quot;&gt;Memory Cards&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/memory-cards/&quot;&gt;Live Demo&lt;/a&gt; | | 15 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/lyrics-search&quot;&gt;LyricsSearch App&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/lyrics-search/&quot;&gt;Live Demo&lt;/a&gt; | | 16 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/relaxer-app&quot;&gt;Relaxer App&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects//relaxer-app/&quot;&gt;Live Demo&lt;/a&gt; | | 17 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/breakout-game&quot;&gt;Breakout Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/breakout-game/&quot;&gt;Live Demo&lt;/a&gt; | | 18 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/new-year-countdown&quot;&gt;New Year Countdown&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/new-year-countdown/&quot;&gt;Live Demo&lt;/a&gt; | | 19 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/sortable-list&quot;&gt;Sortable List&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/sortable-list/&quot;&gt;Live Demo&lt;/a&gt; | | 20 | &lt;a href=&quot;https://github.com/bradtraversy/vanillawebprojects/tree/master/speak-number-guess&quot;&gt;Speak Number Guessing Game&lt;/a&gt; | &lt;a href=&quot;https://vanillawebprojects.com/projects/speak-number-guess/&quot;&gt;Live Demo&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;NOTE ON PULL REQUESTS: All of these projects are part of the course. While I do appreciate people trying to make some things prettier or adding new features, we are only accepting pull requests and looking at issues for bug fixes so that the code stays inline with the course&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GUI/covid-vaccine-spotter</title>
      <link>https://github.com/GUI/covid-vaccine-spotter</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;COVID-19 Vaccine Spotter&lt;/h1&gt; 
&lt;p&gt;A tool to help you track down COVID-19 vaccine appointment openings at your state&#39;s pharmacies. The code behind https://www.vaccinespotter.org.&lt;/p&gt; 
&lt;h2&gt;UI Development Setup&lt;/h2&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 14+&lt;/li&gt; 
 &lt;li&gt;Yarn&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This process is clunky right now, so my apologies.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repo: &lt;code&gt;git clone https://github.com/GUI/covid-vaccine-spotter.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies (inside the repo): &lt;code&gt;yarn install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Fetch data from the &lt;a href=&quot;https://www.vaccinespotter.org/api/&quot;&gt;API&lt;/a&gt; for the website to run: &lt;code&gt;yarn setup&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To run the development server for the website: &lt;code&gt;yarn dev&lt;/code&gt;. The development site should then be available at http://localhost:3000/.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;DB and Backend Development Setup&lt;/h2&gt; 
&lt;p&gt;docker-compose is used to bring up a local postgres DB. Then an image runs to bootstrap the database with states and postal codes. Finally, as an example of a backend task running, a container runs the &lt;code&gt;refresh-website&lt;/code&gt; task.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker-compose build
docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run additional tasks, you can use &lt;code&gt;docker-compose run&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker-compose run --rm --no-deps task_runner bin/refresh-cvs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Very Beta API&lt;/h2&gt; 
&lt;p&gt;All of the data being collected is published as JSON files here: https://www.vaccinespotter.org/api/&lt;/p&gt; 
&lt;p&gt;Subscribe to this discussion for any announcement of API changes: https://github.com/GUI/covid-vaccine-spotter/discussions/27&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/GUI/covid-vaccine-spotter/main/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;A monorepo for SvelteKit and friends&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;READ THIS FIRST!&lt;/h1&gt; 
&lt;p&gt;SvelteKit is still in beta. Expect bugs! Read more &lt;a href=&quot;https://svelte.dev/blog/sveltekit-beta&quot;&gt;here&lt;/a&gt;, and track progress towards 1.0 &lt;a href=&quot;https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://kit.svelte.dev/docs&quot;&gt;the documentation&lt;/a&gt; for information about getting started and developing with SvelteKit.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;This monorepo uses &lt;a href=&quot;https://pnpm.js.org/en/&quot;&gt;pnpm&lt;/a&gt;. Install it...&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm i -g pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...then install this repo&#39;s dependencies...&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pnpm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...then build SvelteKit and the other packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pnpm -r build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now be able to run the &lt;a href=&quot;https://raw.githubusercontent.com/sveltejs/kit/master/examples&quot;&gt;examples&lt;/a&gt; by navigating to one of the directories and doing &lt;code&gt;pnpm dev&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm dev&lt;/code&gt; inside the &lt;code&gt;packages/kit&lt;/code&gt; directory to continually rebuild &lt;code&gt;@sveltejs/kit&lt;/code&gt; as you make changes to SvelteKit. Restarting the example/test apps will cause the newly built version to be used.&lt;/p&gt; 
&lt;p&gt;To use the git hooks in the repo, which will save you waiting for CI to tell you that you forgot to lint, run this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config core.hookspath .githooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Changelogs&lt;/h3&gt; 
&lt;p&gt;For changes to be reflected in package changelogs, run &lt;code&gt;pnpx changeset&lt;/code&gt; and follow the prompts.&lt;/p&gt; 
&lt;h3&gt;Releases&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/changesets/action#with-publishing&quot;&gt;Changesets GitHub action&lt;/a&gt; will create and update a PR that applies changesets and publishes new versions of changed packages to npm.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It uses &lt;code&gt;pnpm publish&lt;/code&gt; rather than &lt;code&gt;pnpx changeset publish&lt;/code&gt; so that we can use the &lt;code&gt;--filter&lt;/code&gt; and (while in beta) &lt;code&gt;--tag&lt;/code&gt; flags — though perhaps they work with &lt;code&gt;pnpx changeset publish&lt;/code&gt;?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;New packages will need to be published manually the first time if they are scoped to the &lt;code&gt;@sveltejs&lt;/code&gt; organisation, by running this from the package directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm publish --access=public
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;pnpm test&lt;/code&gt; to run the tests from all subpackages. Browser tests live in subdirectories of &lt;code&gt;packages/kit/test&lt;/code&gt; such as &lt;code&gt;packages/kit/test/apps/basics&lt;/code&gt;. To run a single test, open up the file and change &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;test.only&lt;/code&gt; for the relevant test.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jklepatch/eattheblocks</title>
      <link>https://github.com/jklepatch/eattheblocks</link>
      <description>&lt;p&gt;Source code for Eat The Blocks, a screencast for Ethereum Dapp Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EaTheBlocks&lt;/h1&gt; 
&lt;p&gt;Blockchain tutorials of EatTheBlocks. Learn how to build Decentralized Applications (Dapps) on Ethereum and Solidity Smart contracts&lt;/p&gt; 
&lt;p&gt;Covers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ethereum&lt;/li&gt; 
 &lt;li&gt;Solidity&lt;/li&gt; 
 &lt;li&gt;Web3&lt;/li&gt; 
 &lt;li&gt;Truffle&lt;/li&gt; 
 &lt;li&gt;DeFi (Decentralized Finance)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Youtube: &lt;code&gt;screencast&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Courses: other folders&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks.com/6-figure-blockchain-developer/&quot;&gt;6-Figures Blockchain Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eattheblocks-pro.teachable.com/p/profitable-flashloans&quot;&gt;Profitable Flashloan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>hagopj13/node-express-boilerplate</title>
      <link>https://github.com/hagopj13/node-express-boilerplate</link>
      <description>&lt;p&gt;A boilerplate for building production-ready RESTful APIs using Node.js, Express, and Mongoose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RESTful API Node Server Boilerplate&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/hagopj13/node-express-boilerplate&quot;&gt;&lt;img src=&quot;https://travis-ci.org/hagopj13/node-express-boilerplate.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/hagopj13/node-express-boilerplate?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/hagopj13/node-express-boilerplate/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codacy.com/manual/hagopj13/node-express-mongoose-boilerplate?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=hagopj13/node-express-boilerplate&amp;amp;utm_campaign=Badge_Grade&quot;&gt;&lt;img src=&quot;https://api.codacy.com/project/badge/Grade/2ab03f5d62a1404f87a659afe8d6d5de&quot; alt=&quot;Codacy Badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A boilerplate/starter project for quickly building RESTful APIs using Node.js, Express, and Mongoose.&lt;/p&gt; 
&lt;p&gt;By running a single command, you will get a production-ready Node.js app installed and fully configured on your machine. The app comes with many built-in features, such as authentication using JWT, request validation, unit and integration tests, continuous integration, docker support, API documentation, pagination, etc. For more details, check the features list below.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;To create a project, simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-nodejs-express-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm init nodejs-express-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Manual Installation&lt;/h2&gt; 
&lt;p&gt;If you would still prefer to do the installation manually, follow these steps:&lt;/p&gt; 
&lt;p&gt;Clone the repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --depth 1 https://github.com/hagopj13/node-express-boilerplate.git
cd node-express-boilerplate
npx rimraf ./.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set the environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cp .env.example .env

# open .env and modify the environment variables (if needed)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#commands&quot;&gt;Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#environment-variables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#project-structure&quot;&gt;Project Structure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#api-documentation&quot;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#error-handling&quot;&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#validation&quot;&gt;Validation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#authentication&quot;&gt;Authentication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#authorization&quot;&gt;Authorization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#custom-mongoose-plugins&quot;&gt;Custom Mongoose Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;NoSQL database&lt;/strong&gt;: &lt;a href=&quot;https://www.mongodb.com&quot;&gt;MongoDB&lt;/a&gt; object data modeling using &lt;a href=&quot;https://mongoosejs.com&quot;&gt;Mongoose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication and authorization&lt;/strong&gt;: using &lt;a href=&quot;http://www.passportjs.org&quot;&gt;passport&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Validation&lt;/strong&gt;: request data validation using &lt;a href=&quot;https://github.com/hapijs/joi&quot;&gt;Joi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;: using &lt;a href=&quot;https://github.com/winstonjs/winston&quot;&gt;winston&lt;/a&gt; and &lt;a href=&quot;https://github.com/expressjs/morgan&quot;&gt;morgan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;: unit and integration tests using &lt;a href=&quot;https://jestjs.io&quot;&gt;Jest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error handling&lt;/strong&gt;: centralized error handling mechanism&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API documentation&lt;/strong&gt;: with &lt;a href=&quot;https://github.com/Surnet/swagger-jsdoc&quot;&gt;swagger-jsdoc&lt;/a&gt; and &lt;a href=&quot;https://github.com/scottie1984/swagger-ui-express&quot;&gt;swagger-ui-express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Process management&lt;/strong&gt;: advanced production process management using &lt;a href=&quot;https://pm2.keymetrics.io&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dependency management&lt;/strong&gt;: with &lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Environment variables&lt;/strong&gt;: using &lt;a href=&quot;https://github.com/motdotla/dotenv&quot;&gt;dotenv&lt;/a&gt; and &lt;a href=&quot;https://github.com/kentcdodds/cross-env#readme&quot;&gt;cross-env&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: set security HTTP headers using &lt;a href=&quot;https://helmetjs.github.io&quot;&gt;helmet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Santizing&lt;/strong&gt;: sanitize request data against xss and query injection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CORS&lt;/strong&gt;: Cross-Origin Resource-Sharing enabled using &lt;a href=&quot;https://github.com/expressjs/cors&quot;&gt;cors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt;: gzip compression with &lt;a href=&quot;https://github.com/expressjs/compression&quot;&gt;compression&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI&lt;/strong&gt;: continuous integration with &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker support&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code coverage&lt;/strong&gt;: using &lt;a href=&quot;https://coveralls.io&quot;&gt;coveralls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code quality&lt;/strong&gt;: with &lt;a href=&quot;https://www.codacy.com&quot;&gt;Codacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Git hooks&lt;/strong&gt;: with &lt;a href=&quot;https://github.com/typicode/husky&quot;&gt;husky&lt;/a&gt; and &lt;a href=&quot;https://github.com/okonet/lint-staged&quot;&gt;lint-staged&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linting&lt;/strong&gt;: with &lt;a href=&quot;https://eslint.org&quot;&gt;ESLint&lt;/a&gt; and &lt;a href=&quot;https://prettier.io&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Editor config&lt;/strong&gt;: consistent editor configuration using &lt;a href=&quot;https://editorconfig.org&quot;&gt;EditorConfig&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;Running locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running in production:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Testing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run all tests
yarn test

# run all tests in watch mode
yarn test:watch

# run test coverage
yarn coverage
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run docker container in development mode
yarn docker:dev

# run docker container in production mode
yarn docker:prod

# run all tests in a docker container
yarn docker:test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Linting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run ESLint
yarn lint

# fix ESLint errors
yarn lint:fix

# run prettier
yarn prettier

# fix prettier errors
yarn prettier:fix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;p&gt;The environment variables can be found and modified in the &lt;code&gt;.env&lt;/code&gt; file. They come with these default values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Port number
PORT=3000

# URL of the Mongo DB
MONGODB_URL=mongodb://127.0.0.1:27017/node-boilerplate

# JWT
# JWT secret key
JWT_SECRET=thisisasamplesecret
# Number of minutes after which an access token expires
JWT_ACCESS_EXPIRATION_MINUTES=30
# Number of days after which a refresh token expires
JWT_REFRESH_EXPIRATION_DAYS=30

# SMTP configuration options for the email service
# For testing, you can use a fake SMTP service like Ethereal: https://ethereal.email/create
SMTP_HOST=email-server
SMTP_PORT=587
SMTP_USERNAME=email-server-username
SMTP_PASSWORD=email-server-password
EMAIL_FROM=support@yourapp.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;src\
 |--config\         # Environment variables and configuration related things
 |--controllers\    # Route controllers (controller layer)
 |--docs\           # Swagger files
 |--middlewares\    # Custom express middlewares
 |--models\         # Mongoose models (data layer)
 |--routes\         # Routes
 |--services\       # Business logic (service layer)
 |--utils\          # Utility classes and functions
 |--validations\    # Request data validation schemas
 |--app.js          # Express app
 |--index.js        # App entry point
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;To view the list of available APIs and their specifications, run the server and go to &lt;code&gt;http://localhost:3000/v1/docs&lt;/code&gt; in your browser. This documentation page is automatically generated using the &lt;a href=&quot;https://swagger.io/&quot;&gt;swagger&lt;/a&gt; definitions written as comments in the route files.&lt;/p&gt; 
&lt;h3&gt;API Endpoints&lt;/h3&gt; 
&lt;p&gt;List of available routes:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Auth routes&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;POST /v1/auth/register&lt;/code&gt; - register&lt;br&gt; &lt;code&gt;POST /v1/auth/login&lt;/code&gt; - login&lt;br&gt; &lt;code&gt;POST /v1/auth/refresh-tokens&lt;/code&gt; - refresh auth tokens&lt;br&gt; &lt;code&gt;POST /v1/auth/forgot-password&lt;/code&gt; - send reset password email&lt;br&gt; &lt;code&gt;POST /v1/auth/reset-password&lt;/code&gt; - reset password&lt;br&gt; &lt;code&gt;POST /v1/auth/send-verification-email&lt;/code&gt; - send verification email&lt;br&gt; &lt;code&gt;POST /v1/auth/verify-email&lt;/code&gt; - verify email&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User routes&lt;/strong&gt;:&lt;br&gt; &lt;code&gt;POST /v1/users&lt;/code&gt; - create a user&lt;br&gt; &lt;code&gt;GET /v1/users&lt;/code&gt; - get all users&lt;br&gt; &lt;code&gt;GET /v1/users/:userId&lt;/code&gt; - get user&lt;br&gt; &lt;code&gt;PATCH /v1/users/:userId&lt;/code&gt; - update user&lt;br&gt; &lt;code&gt;DELETE /v1/users/:userId&lt;/code&gt; - delete user&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;The app has a centralized error handling mechanism.&lt;/p&gt; 
&lt;p&gt;Controllers should try to catch the errors and forward them to the error handling middleware (by calling &lt;code&gt;next(error)&lt;/code&gt;). For convenience, you can also wrap the controller inside the catchAsync utility wrapper, which forwards the error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const catchAsync = require(&#39;../utils/catchAsync&#39;);

const controller = catchAsync(async (req, res) =&amp;gt; {
  // this error will be forwarded to the error handling middleware
  throw new Error(&#39;Something wrong happened&#39;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The error handling middleware sends an error response, which has the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;code&quot;: 404,
  &quot;message&quot;: &quot;Not found&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running in development mode, the error response also contains the error stack.&lt;/p&gt; 
&lt;p&gt;The app has a utility ApiError class to which you can attach a response code and a message, and then throw it from anywhere (catchAsync will catch it).&lt;/p&gt; 
&lt;p&gt;For example, if you are trying to get a user from the DB who is not found, and you want to send a 404 error, the code should look something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const httpStatus = require(&#39;http-status&#39;);
const ApiError = require(&#39;../utils/ApiError&#39;);
const User = require(&#39;../models/User&#39;);

const getUser = async (userId) =&amp;gt; {
  const user = await User.findById(userId);
  if (!user) {
    throw new ApiError(httpStatus.NOT_FOUND, &#39;User not found&#39;);
  }
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Validation&lt;/h2&gt; 
&lt;p&gt;Request data is validated using &lt;a href=&quot;https://joi.dev/&quot;&gt;Joi&lt;/a&gt;. Check the &lt;a href=&quot;https://joi.dev/api/&quot;&gt;documentation&lt;/a&gt; for more details on how to write Joi validation schemas.&lt;/p&gt; 
&lt;p&gt;The validation schemas are defined in the &lt;code&gt;src/validations&lt;/code&gt; directory and are used in the routes by providing them as parameters to the &lt;code&gt;validate&lt;/code&gt; middleware.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;);
const validate = require(&#39;../../middlewares/validate&#39;);
const userValidation = require(&#39;../../validations/user.validation&#39;);
const userController = require(&#39;../../controllers/user.controller&#39;);

const router = express.Router();

router.post(&#39;/users&#39;, validate(userValidation.createUser), userController.createUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;To require authentication for certain routes, you can use the &lt;code&gt;auth&lt;/code&gt; middleware.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;);
const auth = require(&#39;../../middlewares/auth&#39;);
const userController = require(&#39;../../controllers/user.controller&#39;);

const router = express.Router();

router.post(&#39;/users&#39;, auth(), userController.createUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These routes require a valid JWT access token in the Authorization request header using the Bearer schema. If the request does not contain a valid access token, an Unauthorized (401) error is thrown.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Generating Access Tokens&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;An access token can be generated by making a successful call to the register (&lt;code&gt;POST /v1/auth/register&lt;/code&gt;) or login (&lt;code&gt;POST /v1/auth/login&lt;/code&gt;) endpoints. The response of these endpoints also contains refresh tokens (explained below).&lt;/p&gt; 
&lt;p&gt;An access token is valid for 30 minutes. You can modify this expiration time by changing the &lt;code&gt;JWT_ACCESS_EXPIRATION_MINUTES&lt;/code&gt; environment variable in the .env file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Refreshing Access Tokens&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;After the access token expires, a new access token can be generated, by making a call to the refresh token endpoint (&lt;code&gt;POST /v1/auth/refresh-tokens&lt;/code&gt;) and sending along a valid refresh token in the request body. This call returns a new access token and a new refresh token.&lt;/p&gt; 
&lt;p&gt;A refresh token is valid for 30 days. You can modify this expiration time by changing the &lt;code&gt;JWT_REFRESH_EXPIRATION_DAYS&lt;/code&gt; environment variable in the .env file.&lt;/p&gt; 
&lt;h2&gt;Authorization&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;auth&lt;/code&gt; middleware can also be used to require certain rights/permissions to access a route.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const express = require(&#39;express&#39;);
const auth = require(&#39;../../middlewares/auth&#39;);
const userController = require(&#39;../../controllers/user.controller&#39;);

const router = express.Router();

router.post(&#39;/users&#39;, auth(&#39;manageUsers&#39;), userController.createUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example above, an authenticated user can access this route only if that user has the &lt;code&gt;manageUsers&lt;/code&gt; permission.&lt;/p&gt; 
&lt;p&gt;The permissions are role-based. You can view the permissions/rights of each role in the &lt;code&gt;src/config/roles.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;If the user making the request does not have the required permissions to access this route, a Forbidden (403) error is thrown.&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Import the logger from &lt;code&gt;src/config/logger.js&lt;/code&gt;. It is using the &lt;a href=&quot;https://github.com/winstonjs/winston&quot;&gt;Winston&lt;/a&gt; logging library.&lt;/p&gt; 
&lt;p&gt;Logging should be done according to the following severity levels (ascending order from most important to least important):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const logger = require(&#39;&amp;lt;path to src&amp;gt;/config/logger&#39;);

logger.error(&#39;message&#39;); // level 0
logger.warn(&#39;message&#39;); // level 1
logger.info(&#39;message&#39;); // level 2
logger.http(&#39;message&#39;); // level 3
logger.verbose(&#39;message&#39;); // level 4
logger.debug(&#39;message&#39;); // level 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In development mode, log messages of all severity levels will be printed to the console.&lt;/p&gt; 
&lt;p&gt;In production mode, only &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, and &lt;code&gt;error&lt;/code&gt; logs will be printed to the console.&lt;br&gt; It is up to the server (or process manager) to actually read them from the console and store them in log files.&lt;br&gt; This app uses pm2 in production mode, which is already configured to store the logs in log files.&lt;/p&gt; 
&lt;p&gt;Note: API request information (request url, response code, timestamp, etc.) are also automatically logged (using &lt;a href=&quot;https://github.com/expressjs/morgan&quot;&gt;morgan&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Custom Mongoose Plugins&lt;/h2&gt; 
&lt;p&gt;The app also contains 2 custom mongoose plugins that you can attach to any mongoose model schema. You can find the plugins in &lt;code&gt;src/models/plugins&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const mongoose = require(&#39;mongoose&#39;);
const { toJSON, paginate } = require(&#39;./plugins&#39;);

const userSchema = mongoose.Schema(
  {
    /* schema definition here */
  },
  { timestamps: true }
);

userSchema.plugin(toJSON);
userSchema.plugin(paginate);

const User = mongoose.model(&#39;User&#39;, userSchema);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;toJSON&lt;/h3&gt; 
&lt;p&gt;The toJSON plugin applies the following changes in the toJSON transform call:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;removes __v, createdAt, updatedAt, and any schema path that has private: true&lt;/li&gt; 
 &lt;li&gt;replaces _id with id&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;paginate&lt;/h3&gt; 
&lt;p&gt;The paginate plugin adds the &lt;code&gt;paginate&lt;/code&gt; static method to the mongoose schema.&lt;/p&gt; 
&lt;p&gt;Adding this plugin to the &lt;code&gt;User&lt;/code&gt; model schema will allow you to do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const queryUsers = async (filter, options) =&amp;gt; {
  const users = await User.paginate(filter, options);
  return users;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;filter&lt;/code&gt; param is a regular mongo filter.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; param can have the following (optional) fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const options = {
  sortBy: &#39;name:desc&#39;, // sort order
  limit: 5, // maximum results per page
  page: 2, // page number
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The plugin also supports sorting by multiple criteria (separated by a comma): &lt;code&gt;sortBy: name:desc,role:asc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;paginate&lt;/code&gt; method returns a Promise, which fulfills with an object having the following properties:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;results&quot;: [],
  &quot;page&quot;: 2,
  &quot;limit&quot;: 5,
  &quot;totalPages&quot;: 10,
  &quot;totalResults&quot;: 48
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Linting&lt;/h2&gt; 
&lt;p&gt;Linting is done using &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt; and &lt;a href=&quot;https://prettier.io&quot;&gt;Prettier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In this app, ESLint is configured to follow the &lt;a href=&quot;https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb-base&quot;&gt;Airbnb JavaScript style guide&lt;/a&gt; with some modifications. It also extends &lt;a href=&quot;https://github.com/prettier/eslint-config-prettier&quot;&gt;eslint-config-prettier&lt;/a&gt; to turn off all rules that are unnecessary or might conflict with Prettier.&lt;/p&gt; 
&lt;p&gt;To modify the ESLint configuration, update the &lt;code&gt;.eslintrc.json&lt;/code&gt; file. To modify the Prettier configuration, update the &lt;code&gt;.prettierrc.json&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;To prevent a certain file or directory from being linted, add it to &lt;code&gt;.eslintignore&lt;/code&gt; and &lt;code&gt;.prettierignore&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To maintain a consistent coding style across different IDEs, the project contains &lt;code&gt;.editorconfig&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are more than welcome! Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Inspirations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielfsousa/express-rest-es2017-boilerplate&quot;&gt;danielfsousa/express-rest-es2017-boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/madhums/node-express-mongoose&quot;&gt;madhums/node-express-mongoose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kunalkapadia/express-mongoose-es6-rest-api&quot;&gt;kunalkapadia/express-mongoose-es6-rest-api&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/hagopj13/node-express-boilerplate/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>covid19india/covid19india-react</title>
      <link>https://github.com/covid19india/covid19india-react</link>
      <description>&lt;p&gt;Tracking the impact of COVID-19 in India&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;yarn install &amp;amp;&amp;amp; yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;If you&#39;re new to contributing to Open Source on Github, &lt;a href=&quot;https://guides.github.com/activities/contributing-to-open-source/&quot;&gt;this guide&lt;/a&gt; can help you get started. Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/covid19india/covid19india-react/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt; for more details on how issues and pull requests work.&lt;/p&gt; 
&lt;h6&gt;This repository is just a small subset of work put together by a much larger pool of voluntary efforts contributed by generous people all around the world. Reach out to us through hello@covid19india.org&lt;/h6&gt;</description>
    </item>
    
    <item>
      <title>tailwindlabs/heroicons</title>
      <link>https://github.com/tailwindlabs/heroicons</link>
      <description>&lt;p&gt;A set of free MIT-licensed high-quality SVG icons for UI development.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Basic Usage&lt;/h2&gt; 
&lt;p&gt;The quickest way to use these icons is to simply copy the source for the icon you need from &lt;a href=&quot;https://heroicons.com&quot;&gt;heroicons.com&lt;/a&gt; and inline it directly into your HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;svg class=&quot;h-6 w-6 text-gray-500&quot; fill=&quot;none&quot; viewBox=&quot;0 0 24 24&quot; stroke=&quot;currentColor&quot;&amp;gt;
  &amp;lt;path
    stroke-linecap=&quot;round&quot;
    stroke-linejoin=&quot;round&quot;
    stroke-width=&quot;2&quot;
    d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot;
  /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both icon styles are preconfigured to be stylable by setting the &lt;code&gt;color&lt;/code&gt; CSS property, either manually or using utility classes like &lt;code&gt;text-gray-500&lt;/code&gt; in a framework like &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React&lt;/h2&gt; 
&lt;p&gt;First, install &lt;code&gt;@heroicons/react&lt;/code&gt; from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install @heroicons/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now each icon can be imported individually as a React component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { BeakerIcon } from &#39;@heroicons/react/solid&#39;

function MyComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;BeakerIcon className=&quot;h-5 w-5 text-blue-500&quot;/&amp;gt;
      &amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The 24x24 outline icons can be imported from &lt;code&gt;@heroicons/react/outline&lt;/code&gt;, and the 20x20 solid icons can be imported from &lt;code&gt;@heroicons/react/solid&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Icons use an upper camel case naming convention and are always suffixed with the word &lt;code&gt;Icon&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://unpkg.com/browse/@heroicons/react/outline/&quot;&gt;Browse the full list of icon names on UNPKG →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Vue&lt;/h2&gt; 
&lt;p&gt;First, install &lt;code&gt;@heroicons/vue&lt;/code&gt; from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install @heroicons/vue
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now each icon can be imported individually as a Vue component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-vue&quot;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;BeakerIcon class=&quot;h-5 w-5 text-blue-500&quot;/&amp;gt;
    &amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import { BeakerIcon } from &#39;@heroicons/vue/solid&#39;

export default {
  components: { BeakerIcon }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The 24x24 outline icons can be imported from &lt;code&gt;@heroicons/vue/outline&lt;/code&gt;, and the 20x20 solid icons can be imported from &lt;code&gt;@heroicons/vue/solid&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Icons use an upper camel case naming convention and are always suffixed with the word &lt;code&gt;Icon&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://unpkg.com/browse/@heroicons/vue/outline/&quot;&gt;Browse the full list of icon names on UNPKG →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is MIT licensed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; · &lt;a href=&quot;https://github.com/facebook/react/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/facebook/react&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&quot; alt=&quot;CircleCI Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&quot;https://reactnative.dev/&quot;&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Learn how to use React in your own project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href=&quot;https://reactjs.org/docs/getting-started.html#online-playgrounds&quot;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html&quot;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&quot;https://reactjs.org/docs/cdn-links.html&quot;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href=&quot;https://reactjs.org/docs&quot;&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://reactjs.org/docs/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/tutorial/tutorial.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/jsx-in-depth.html&quot;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/react-api.html&quot;&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/community/support.html&quot;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&quot;https://github.com/reactjs/reactjs.org&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href=&quot;https://reactjs.org/&quot;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

ReactDOM.render(
  &amp;lt;HelloMessage name=&quot;Taylor&quot; /&amp;gt;,
  document.getElementById(&#39;container&#39;)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render &quot;Hello Taylor&quot; into a container on the page.&lt;/p&gt; 
&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&quot;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&quot;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&quot;https://reactjs.org/docs/create-a-new-react-app.html&quot;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&quot;https://code.fb.com/codeofconduct&quot;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://reactjs.org/contributing/how-to-contribute.html&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;Good First Issues&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&quot;https://github.com/facebook/react/labels/good%20first%20issue&quot;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href=&quot;https://raw.githubusercontent.com/facebook/react/master/LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>30-seconds/30-seconds-of-code</title>
      <link>https://github.com/30-seconds/30-seconds-of-code</link>
      <description>&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/logo.png&quot; alt=&quot;Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;30 seconds of code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit &lt;a href=&quot;https://30secondsofcode.org&quot;&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://30secondsofcode.org/search&quot;&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet&#39;s description. Just start typing a term and see what comes up.&lt;/li&gt; 
 &lt;li&gt;Browse the &lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;JavaScript Snippet List&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt; 
 &lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt; 
 &lt;li&gt;You can use the button on the right side of a snippet card to copy the code to clipboard.&lt;/li&gt; 
 &lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to help us improve, take a minute to read the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/snippet-template.md&quot;&gt;Snippet Template&lt;/a&gt; to add new snippets to the collection.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with a specific snippet, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-of-code/issues/new&quot;&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with the website, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-web/issues/new&quot;&gt;report it in the web repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits &amp;amp; Sponsors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is maintained by the &lt;a href=&quot;https://github.com/30-seconds&quot;&gt;30-seconds organization on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.&lt;/li&gt; 
 &lt;li&gt;Logos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.&lt;/li&gt; 
 &lt;li&gt;Our website is powered by &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt;, &lt;a href=&quot;https://travis-ci.com/&quot;&gt;Travis CI&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vue</title>
      <link>https://github.com/vuejs/vue</link>
      <description>&lt;p&gt;🖖 Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/BACKERS.md&quot;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.patreon.com/evanyou&quot;&gt;Become a backer or sponsor on Patreon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opencollective.com/vuejs&quot;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejs.org/support-vuejs/#One-time-Donations&quot;&gt;One-time donation via PayPal or crypto-currencies.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What&#39;s the difference between Patreon and OpenCollective?&lt;/h4&gt; 
&lt;p&gt;Funds donated via Patreon go directly to support Evan You&#39;s full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt; 
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuː/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; 
&lt;h4&gt;Browser Compatibility&lt;/h4&gt; 
&lt;p&gt;Vue.js supports all browsers that are &lt;a href=&quot;https://kangax.github.io/compat-table/es5/&quot;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;| Project | Status | Description | |---------|--------|-------------| | &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-router&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-router.svg&quot; alt=&quot;vue-router-status&quot;&gt;&lt;/a&gt; | Single-page application routing | | &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vuex&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vuex.svg&quot; alt=&quot;vuex-status&quot;&gt;&lt;/a&gt; | Large-scale state management | | &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;vue-cli&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/@vue/cli&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@vue/cli.svg&quot; alt=&quot;vue-cli-status&quot;&gt;&lt;/a&gt; | Project scaffolding | | &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-loader&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-loader.svg&quot; alt=&quot;vue-loader-status&quot;&gt;&lt;/a&gt; | Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack | | &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;vue-server-renderer&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-server-renderer&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-server-renderer.svg&quot; alt=&quot;vue-server-renderer-status&quot;&gt;&lt;/a&gt; | Server-side rendering support | | &lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;vue-class-component&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-class-component&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-class-component.svg&quot; alt=&quot;vue-class-component-status&quot;&gt;&lt;/a&gt; | TypeScript decorator for a class-based API | | &lt;a href=&quot;https://github.com/vuejs/vue-rx&quot;&gt;vue-rx&lt;/a&gt; | &lt;a href=&quot;https://npmjs.com/package/vue-rx&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/vue-rx.svg&quot; alt=&quot;vue-rx-status&quot;&gt;&lt;/a&gt; | RxJS integration | | &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; | &lt;a href=&quot;https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg&quot; alt=&quot;vue-devtools-status&quot;&gt;&lt;/a&gt; | Browser DevTools extension |&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out &lt;a href=&quot;https://vuejs.org/v2/examples/&quot;&gt;live examples&lt;/a&gt; and docs, visit &lt;a href=&quot;https://vuejs.org&quot;&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use &lt;a href=&quot;https://forum.vuejs.org&quot;&gt;the official forum&lt;/a&gt; or &lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines&quot;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/vuejs&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vuejobs.com/?ref=vuejs&quot;&gt;Job Board&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>azl397985856/leetcode</title>
      <link>https://github.com/azl397985856/leetcode</link>
      <description>&lt;p&gt;LeetCode Solutions: A Record of My Problem Solving Journey.( leetcode题解，记录自己的leetcode解题之路。)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LeetCode&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/language-C++-green.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/language-Python-red.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/language-Java-blue.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/language-Go-red.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/language-Php-pink.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/language-JavaScript-yellow.svg&quot; alt=&quot;Travis&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/#%E5%93%AA%E9%87%8C%E8%83%BD%E6%89%BE%E5%88%B0%E6%88%91&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/WeChat-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/#%E5%93%AA%E9%87%8C%E8%83%BD%E6%89%BE%E5%88%B0%E6%88%91&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0-blueviolet&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://juejin.im/user/58af98305c497d0067780b3b&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Juejin-%E6%8E%98%E9%87%91-blue&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.zhihu.com/people/lu-xiao-13-70&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Zhihu-%E7%9F%A5%E4%B9%8E-blue&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://space.bilibili.com/519510412/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/bilili-%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9-ff69b4&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;简体中文 | &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/README.en.md&quot;&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;我们的 slogon 是： &lt;strong&gt;只有熟练掌握基础的数据结构与算法，才能对复杂问题迎刃有余。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;:blue_book:电子书&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/&quot;&gt;在线阅读&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;这是我将我的所有公开的算法资料整理的一个电子书，全部题目信息中文化，以前会有一些英文描述，感谢 @CYL 的中文整理。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/0081Kckwly1gm3r7y4dt8j30zx0u0hdt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;限时免费下载！后期随时可能收费&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;有些动图，在做成电子书（比如 pdf）的时候自然就变没了，如果需要看动图的， 可以去我的公众号《力扣加加》或者我的 leetcode 题解仓库看。&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;epub 还是有动图的&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;另外有些内容只在公众号发布，因此大家觉得内容不错的话，可以关注一下。如果再给 ➕ 个星标就更棒啦！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;大家也可以用 Github 提供的 &lt;a href=&quot;https://github.com/azl397985856/leetcode/commits.atom&quot;&gt;RSS&lt;/a&gt; 来订阅我的仓库更新。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;刷题群&lt;/h2&gt; 
&lt;p&gt;组队刷题活动，关注上面的公众号《力扣加加》回复 leetcode 即可获取进群方式，从此刷题不再孤单。&lt;/p&gt; 
&lt;p&gt;另外春招已经开始了。你是不是已经开始准备了呢？为了帮助大家获得更好的 offer，lucifer 开辟了「春招冲冲冲」栏目。&lt;/p&gt; 
&lt;p&gt;第一期我们的猎物是「虾皮」。来看看虾皮的算法题难度几何吧！&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&amp;amp;mid=2247487632&amp;amp;idx=1&amp;amp;sn=830fe267d835e5acbfc417787f85f1c1&amp;amp;chksm=eb88dc89dcff559f49913c0f2dec77b1d06c2ddbe2c6c299b32b3e49c2efaf8b11ac0aedce8f&amp;amp;token=1676518002&amp;amp;lang=zh_CN#rd&quot;&gt;春招冲冲冲&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;图片加载不出来如何解决？&lt;/h2&gt; 
&lt;p&gt;https://github.com/fe-lucifer/fanqiang&lt;/p&gt; 
&lt;h2&gt;:octocat:仓库介绍&lt;/h2&gt; 
&lt;p&gt;leetcode 题解，记录自己的 leetcode 解题之路。&lt;/p&gt; 
&lt;p&gt;本仓库目前分为&lt;strong&gt;五个&lt;/strong&gt;部分：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;第一个部分是 leetcode 经典题目的解析，包括思路，关键点和具体的代码实现。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第二部分是对于数据结构与算法的总结&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第三部分是 anki 卡片， 将 leetcode 题目按照一定的方式记录在 anki 中，方便大家记忆。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第四部分是每日一题，每日一题是在交流群（包括微信和 qq）里进行的一种活动，大家一起 解一道题，这样讨论问题更加集中，会得到更多的反馈。而且 这些题目可以被记录下来，日后会进行筛选添加到仓库的题解模块。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第五部分是计划， 这里会记录将来要加入到以上三个部分内容&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;:meat_on_bone:仓库食用指南&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;对于最近添加的部分， 后面会有 🆕 标注&lt;/li&gt; 
 &lt;li&gt;对于最近更新的部分， 后面会有 🖊 标注&lt;/li&gt; 
 &lt;li&gt;这里有一张互联网公司面试中经常考察的问题类型总结的思维导图，我们可以结合图片中的信息分析一下。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1ghluennxvrj30k00jx0te.jpg&quot; alt=&quot;leetcode-zhihu&quot;&gt;&lt;/p&gt; 
&lt;p&gt;（图片来自 leetcode)&lt;/p&gt; 
&lt;p&gt;其中算法，主要是以下几种：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基础技巧：分治、二分、贪心&lt;/li&gt; 
 &lt;li&gt;排序算法：快速排序、归并排序、计数排序&lt;/li&gt; 
 &lt;li&gt;搜索算法：回溯、递归、深度优先遍历，广度优先遍历，二叉搜索树等&lt;/li&gt; 
 &lt;li&gt;图论：最短路径、最小生成树&lt;/li&gt; 
 &lt;li&gt;动态规划：背包问题、最长子序列&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;数据结构，主要有如下几种：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;数组与链表：单 / 双向链表&lt;/li&gt; 
 &lt;li&gt;栈与队列&lt;/li&gt; 
 &lt;li&gt;哈希表&lt;/li&gt; 
 &lt;li&gt;堆：最大堆 ／ 最小堆&lt;/li&gt; 
 &lt;li&gt;树与图：最近公共祖先、并查集&lt;/li&gt; 
 &lt;li&gt;字符串：前缀树（字典树） ／ 后缀树&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;数据结构与算法的总结&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/basic-data-structure.md&quot;&gt;数据结构总览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/linked-list.md&quot;&gt;链表专题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/tree.md&quot;&gt;树专题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/heap.md&quot;&gt;堆专题（上）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/heap-2.md&quot;&gt;堆专题（下）&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/binary-search-1.md&quot;&gt;二分专题（上）&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/binary-search-2.md&quot;&gt;二分专题（下）&lt;/a&gt; 🆕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/binary-tree-traversal.md&quot;&gt;二叉树的遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/dynamic-programming.md&quot;&gt;动态规划&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/backtrack.md&quot;&gt;回溯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/run-length-encode-and-huffman-encode.md&quot;&gt;哈夫曼编码和游程编码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/bloom-filter.md&quot;&gt;布隆过滤器&lt;/a&gt;🖊&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/trie.md&quot;&gt;前缀树&lt;/a&gt;🖊&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/02/03/leetcode-%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%E7%B3%BB%E5%88%97/&quot;&gt;《日程安排》专题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/02/08/%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%93%E9%A2%98/&quot;&gt;《构造二叉树》专题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/slide-window.md&quot;&gt;滑动窗口（思路 + 模板）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/bit.md&quot;&gt;位运算&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/island.md&quot;&gt;小岛问题&lt;/a&gt;🖊&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/GCD.md&quot;&gt;最大公约数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/union-find.md&quot;&gt;并查集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/balanced-tree.md&quot;&gt;平衡二叉树专题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/reservoid-sampling.md&quot;&gt;蓄水池抽样&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thinkings/monotone-stack.md&quot;&gt;单调栈&lt;/a&gt; 🆕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;精选题解&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/a-deleted.md&quot;&gt;字典序列删除&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/atMostK.md&quot;&gt;一次搞定前缀和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/byte-dance-algo-ex.md&quot;&gt;字节跳动的算法面试题是什么难度？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/byte-dance-algo-ex-2017.md&quot;&gt;字节跳动的算法面试题是什么难度？（第二弹）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/mother-01.md&quot;&gt;《我是你的妈妈呀》 - 第一期&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/serialize.md&quot;&gt;一文带你看懂二叉树的序列化&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/LIS.md&quot;&gt;穿上衣服我就不认识你了？来聊聊最长上升子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/LCS.md&quot;&gt;你的衣服我扒了 - 《最长公共子序列》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/selected/LSS.md&quot;&gt;一文看懂《最大子序列和问题》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;:computer: 插件&lt;/h2&gt; 
&lt;p&gt;或许是一个可以改变你刷题效率的浏览器扩展插件。&lt;/p&gt; 
&lt;p&gt;插件地址：https://chrome.google.com/webstore/detail/leetcode-cheatsheet/fniccleejlofifaakbgppmbbcdfjonle?hl=en-US。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;不能访问谷歌商店的朋友可以去我的公众号回复插件获取离线版。强烈推荐大家使用谷歌商店安装， 这样如果有更新可以自动安装，毕竟咱们的插件更新还是蛮快的。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;:exclamation:怎么刷 LeetCode？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/280279208/answer/824585814&quot;&gt;我是如何刷 LeetCode 的&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/321738058/answer/1279464192&quot;&gt;算法小白如何高效、快速刷 leetcode？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/06/algo-chrome-extension/&quot;&gt;刷题效率低？或许你就差这么一个插件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/16/leetcode-cheat/&quot;&gt;力扣刷题插件&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;:calendar:《91 天学算法》限时活动&lt;/h2&gt; 
&lt;p&gt;很多教育机构宣传的 7 天，一个月搞定算法面试的，我大概都了解了下，不怎么靠谱。学习算法这东西，还是要考积累，没有量变是不可能有质变的。还有的人选择看书，这是一个不错的选择。但是很多人选了过时的或者质量差的书，又或者不会去写书中给的练习题，导致效果很差。&lt;/p&gt; 
&lt;p&gt;基于这几个原因，我组织了一个 91 天刷题活动，通过一个相对比较长的时间（91 天）给出最新的学习路径，并强制大家打卡这种高强度练习来让大家&lt;strong&gt;在 91 天后遇见更好的自己&lt;/strong&gt;。详细活动介绍可以点下方链接查看。另外往期的讲义也在下面了，大家可以看看合不合你的口味。&lt;/p&gt; 
&lt;p&gt;最后送给大家一句话： &lt;strong&gt;坚持下去，会有突然间成长的一天&lt;/strong&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2021/03/01/91meeting-season-3-1/&quot;&gt;91 天学算法第三期视频会议总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/91/binary-search.md&quot;&gt;第一期讲义-二分法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/91/two-pointers.md&quot;&gt;第一期讲义-双指针&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2021/01/19/91-algo-3/&quot;&gt;第三期正在火热进行中&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;leetcode 经典题目的解析（200 多道）&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;这里仅列举具有&lt;strong&gt;代表性题目&lt;/strong&gt;，并不是全部题目&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;目前更新了 200 多道题解，加上专题涉及的题目，差不多有 &lt;strong&gt;300 道&lt;/strong&gt;。&lt;/p&gt; 
&lt;h3&gt;简单难度题目合集&lt;/h3&gt; 
&lt;p&gt;这里的题目难度比较小， 大多是模拟题，或者是很容易看出解法的题目，另外简单题目一般使用暴力法都是可以解决的。 这个时候只有看一下数据范围，思考下你的算法复杂度就行了。&lt;/p&gt; 
&lt;p&gt;当然也不排除很多 hard 题目也可以暴力模拟，大家平时多注意数据范围即可。&lt;/p&gt; 
&lt;p&gt;以下是我列举的经典题目（带 91 字样的表示出自 &lt;strong&gt;91 天学算法&lt;/strong&gt;活动）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/binode-lcci.md&quot;&gt;面试题 17.12. BiNode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1.two-sum.md&quot;&gt;0001. 两数之和&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/20.valid-parentheses.md&quot;&gt;0020. 有效的括号&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/21.merge-two-sorted-lists.md&quot;&gt;0021. 合并两个有序链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/26.remove-duplicates-from-sorted-array.md&quot;&gt;0026. 删除排序数组中的重复项&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/53.maximum-sum-subarray-cn.md&quot;&gt;0053. 最大子序和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/66.plus-one.md&quot;&gt;0066. 加一&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/88.merge-sorted-array.md&quot;&gt;0088. 合并两个有序数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/101.symmetric-tree.md&quot;&gt;0101. 对称二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/104.maximum-depth-of-binary-tree.md&quot;&gt;0104. 二叉树的最大深度&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/108.convert-sorted-array-to-binary-search-tree.md&quot;&gt;0108. 将有序数组转换为二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/121.best-time-to-buy-and-sell-stock.md&quot;&gt;0121. 买卖股票的最佳时机&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/122.best-time-to-buy-and-sell-stock-ii.md&quot;&gt;0122. 买卖股票的最佳时机 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/125.valid-palindrome.md&quot;&gt;0125. 验证回文串&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/136.single-number.md&quot;&gt;0136. 只出现一次的数字&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/155.min-stack.md&quot;&gt;0155. 最小栈&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/160.Intersection-of-Two-Linked-Lists.md&quot;&gt;0160. 相交链表&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/167.two-sum-ii-input-array-is-sorted.md&quot;&gt;0167. 两数之和 II 输入有序数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/169.majority-element.md&quot;&gt;0169. 多数元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/172.factorial-trailing-zeroes.md&quot;&gt;0172. 阶乘后的零&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/190.reverse-bits.md&quot;&gt;0190. 颠倒二进制位&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/191.number-of-1-bits.md&quot;&gt;0191. 位 1 的个数&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/198.house-robber.md&quot;&gt;0198. 打家劫舍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/203.remove-linked-list-elements.md&quot;&gt;0203. 移除链表元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/206.reverse-linked-list.md&quot;&gt;0206. 反转链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/219.contains-duplicate-ii.md&quot;&gt;0219. 存在重复元素 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/226.invert-binary-tree.md&quot;&gt;0226. 翻转二叉树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/232.implement-queue-using-stacks.md&quot;&gt;0232. 用栈实现队列&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/263.ugly-number.md&quot;&gt;0263. 丑数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/283.move-zeroes.md&quot;&gt;0283. 移动零&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/342.power-of-four.md&quot;&gt;0342. 4 的幂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/349.intersection-of-two-arrays.md&quot;&gt;0349. 两个数组的交集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/371.sum-of-two-integers.md&quot;&gt;0371. 两整数之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/401.binary-watch.md&quot;&gt;401. 二进制手表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/437.path-sum-iii.md&quot;&gt;0437. 路径总和 III&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/455.AssignCookies.md&quot;&gt;0455. 分发饼干&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/504.base-7.md&quot;&gt;0504. 七进制数&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/575.distribute-candies.md&quot;&gt;0575. 分糖果&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/665.non-decreasing-array.md&quot;&gt;0665. 非递减数列&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/821.shortest-distance-to-a-character.md&quot;&gt;821. 字符的最短距离&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/874.walking-robot-simulation.md&quot;&gt;0874. 模拟行走机器人&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1128.number-of-equivalent-domino-pairs.md&quot;&gt;1128. 等价多米诺骨牌对的数量&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1260.shift-2d-grid.md&quot;&gt;1260. 二维网格迁移&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1332.remove-palindromic-subsequences.md&quot;&gt;1332. 删除回文子序列&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;中等难度题目合集&lt;/h3&gt; 
&lt;p&gt;中等题目是力扣比例最大的部分，因此这部分我的题解也是最多的。 大家不要太过追求难题，先把中等难度题目做熟了再说。&lt;/p&gt; 
&lt;p&gt;这部分的题目要不需要我们挖掘题目的内含信息， 将其抽象成简单题目。 要么是一些写起来比较麻烦的题目， 一些人编码能力不行就挂了。因此大家一定要自己做， 即使看了题解”会了“，也要自己码一遍。自己不亲自写一遍，里面的细节永远不知道。&lt;/p&gt; 
&lt;p&gt;以下是我列举的经典题目（带 91 字样的表示出自 &lt;strong&gt;91 天学算法&lt;/strong&gt;活动）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/get-kth-magic-number-lcci.md&quot;&gt;面试题 17.09. 第 k 个数&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/max-black-square-lcci.md&quot;&gt;面试题 17.23. 最大黑方阵&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Increasing-Digits.md&quot;&gt;Increasing Digits&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Longest-Contiguously-Strictly-Increasing-Sublist-After-Deletion.md&quot;&gt;Longest Contiguously Strictly Increasing Sublist After Deletion&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/consecutive-wins.md&quot;&gt;Consecutive Wins&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Sort-String-by-Flipping.md&quot;&gt;Sort-String-by-Flipping&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Number-of-Substrings-with-Single-Character-Difference.md&quot;&gt;Number of Substrings with Single Character Difference&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Bus-Fare.md&quot;&gt;Bus Fare&lt;/a&gt; 🆕 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Minimum-Dropping-Path-Sum.md&quot;&gt;Minimum Dropping Path Sum&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/2.add-two-numbers.md&quot;&gt;0002. 两数相加&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/3.longest-substring-without-repeating-characters.md&quot;&gt;0003. 无重复字符的最长子串&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/5.longest-palindromic-substring.md&quot;&gt;0005. 最长回文子串&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/11.container-with-most-water.md&quot;&gt;0011. 盛最多水的容器&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/15.3sum.md&quot;&gt;0015. 三数之和&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/17.Letter-Combinations-of-a-Phone-Number.md&quot;&gt;0017. 电话号码的字母组合&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/19.removeNthNodeFromEndofList.md&quot;&gt;0019. 删除链表的倒数第 N 个节点&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/22.generate-parentheses.md&quot;&gt;0022. 括号生成&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/24.swapNodesInPairs.md&quot;&gt;0024. 两两交换链表中的节点&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/29.divide-two-integers.md&quot;&gt;0029. 两数相除&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/31.next-permutation.md&quot;&gt;0031. 下一个排列&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/33.search-in-rotated-sorted-array.md&quot;&gt;0033. 搜索旋转排序数组&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/39.combination-sum.md&quot;&gt;0039. 组合总和&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/40.combination-sum-ii.md&quot;&gt;0040. 组合总和 II&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/46.permutations.md&quot;&gt;0046. 全排列&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/47.permutations-ii.md&quot;&gt;0047. 全排列 II&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/48.rotate-image.md&quot;&gt;0048. 旋转图像&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/49.group-anagrams.md&quot;&gt;0049. 字母异位词分组&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/50.pow-x-n.md&quot;&gt;0050. Pow(x, n)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/55.jump-game.md&quot;&gt;0055. 跳跃游戏&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/56.merge-intervals.md&quot;&gt;0056. 合并区间&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/60.permutation-sequence.md&quot;&gt;0060. 第 k 个排列&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/61.Rotate-List.md&quot;&gt;0061. 旋转链表&lt;/a&gt; 91&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/62.unique-paths.md&quot;&gt;0062. 不同路径&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/73.set-matrix-zeroes.md&quot;&gt;0073. 矩阵置零&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/75.sort-colors.md&quot;&gt;0075. 颜色分类&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/78.subsets.md&quot;&gt;0078. 子集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/79.word-search.md&quot;&gt;0079. 单词搜索&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/80.remove-duplicates-from-sorted-array-ii.md&quot;&gt;0080. 删除排序数组中的重复项 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/86.partition-list.md&quot;&gt;0086. 分隔链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/90.subsets-ii.md&quot;&gt;0090. 子集 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/91.decode-ways.md&quot;&gt;0091. 解码方法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/92.reverse-linked-list-ii.md&quot;&gt;0092. 反转链表 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/94.binary-tree-inorder-traversal.md&quot;&gt;0094. 二叉树的中序遍历&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/95.unique-binary-search-trees-ii.md&quot;&gt;0095. 不同的二叉搜索树 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/96.unique-binary-search-trees.md&quot;&gt;0096. 不同的二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/98.validate-binary-search-tree.md&quot;&gt;0098. 验证二叉搜索树&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/102.binary-tree-level-order-traversal.md&quot;&gt;0102. 二叉树的层序遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/103.binary-tree-zigzag-level-order-traversal.md&quot;&gt;0103. 二叉树的锯齿形层次遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/113.path-sum-ii.md&quot;&gt;0113. 路径总和 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/129.sum-root-to-leaf-numbers.md&quot;&gt;0129. 求根到叶子节点数字之和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/130.surrounded-regions.md&quot;&gt;0130. 被围绕的区域&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/131.palindrome-partitioning.md&quot;&gt;0131. 分割回文串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/139.word-break.md&quot;&gt;0139. 单词拆分&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/144.binary-tree-preorder-traversal.md&quot;&gt;0144. 二叉树的前序遍历&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/147.insertion-sort-list.md&quot;&gt;0147. 对链表进行插入排序&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/150.evaluate-reverse-polish-notation.md&quot;&gt;0150. 逆波兰表达式求值&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/152.maximum-product-subarray.md&quot;&gt;0152. 乘积最大子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/153.find-minimum-in-rotated-sorted-array.md&quot;&gt;0153. 寻找旋转排序数组中的最小值&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/199.binary-tree-right-side-view.md&quot;&gt;0199. 二叉树的右视图&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/200.number-of-islands.md&quot;&gt;0200. 岛屿数量&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/201.bitwise-and-of-numbers-range.md&quot;&gt;0201. 数字范围按位与&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/208.implement-trie-prefix-tree.md&quot;&gt;0208. 实现 Trie (前缀树)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/209.minimum-size-subarray-sum.md&quot;&gt;0209. 长度最小的子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/211.add-and-search-word-data-structure-design.md&quot;&gt;0211. 添加与搜索单词 * 数据结构设计&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/215.kth-largest-element-in-an-array.md&quot;&gt;0215. 数组中的第 K 个最大元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/220.contains-duplicate-iii.md&quot;&gt;0220. 存在重复元素 III&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/221.maximal-square.md&quot;&gt;0221. 最大正方形&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/227.basic-calculator-ii.md&quot;&gt;0227. 基本计算器 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/229.majority-element-ii.md&quot;&gt;0229. 求众数 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/230.kth-smallest-element-in-a-bst.md&quot;&gt;0230. 二叉搜索树中第 K 小的元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/236.lowest-common-ancestor-of-a-binary-tree.md&quot;&gt;0236. 二叉树的最近公共祖先&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/238.product-of-array-except-self.md&quot;&gt;0238. 除自身以外数组的乘积&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/240.search-a-2-d-matrix-ii.md&quot;&gt;0240. 搜索二维矩阵 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/279.perfect-squares.md&quot;&gt;0279. 完全平方数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/309.best-time-to-buy-and-sell-stock-with-cooldown.md&quot;&gt;0309. 最佳买卖股票时机含冷冻期&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/322.coin-change.md&quot;&gt;0322. 零钱兑换&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/328.odd-even-linked-list.md&quot;&gt;0328. 奇偶链表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/328.odd-even-linked-list.md&quot;&gt;0331. 验证二叉树的前序序列化&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/334.increasing-triplet-subsequence.md&quot;&gt;0334. 递增的三元子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/337.house-robber-iii.md&quot;&gt;0337. 打家劫舍 III&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/343.integer-break.md&quot;&gt;0343. 整数拆分&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/365.water-and-jug-problem.md&quot;&gt;0365. 水壶问题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/378.kth-smallest-element-in-a-sorted-matrix.md&quot;&gt;0378. 有序矩阵中第 K 小的元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/380.insert-delete-getrandom-o1.md&quot;&gt;0380. 常数时间插入、删除和获取随机元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/394.decode-string.md&quot;&gt;0394. 字符串解码&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/416.partition-equal-subset-sum.md&quot;&gt;0416. 分割等和子集&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/424.longest-repeating-character-replacement.md&quot;&gt;0424. 替换后的最长重复字符&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/445.add-two-numbers-ii.md&quot;&gt;0445. 两数相加 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/454.4-sum-ii.md&quot;&gt;0454. 四数相加 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/456.132-pattern.md&quot;&gt;0456. 132 模式&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/464.can-i-win.md&quot;&gt;0464. 我能赢么&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/494.target-sum.md&quot;&gt;0494. 目标和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/516.longest-palindromic-subsequence.md&quot;&gt;0516. 最长回文子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/513.find-bottom-left-tree-value.md&quot;&gt;0513. 找树左下角的值&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/518.coin-change-2.md&quot;&gt;0518. 零钱兑换 II&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/547.friend-circles.md&quot;&gt;0547. 朋友圈&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/560.subarray-sum-equals-k.md&quot;&gt;0560. 和为 K 的子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/609.find-duplicate-file-in-system.md&quot;&gt;0609. 在系统中查找重复文件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/611.valid-triangle-number.md&quot;&gt;0611. 有效三角形的个数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/673.number-of-longest-increasing-subsequence.md&quot;&gt;0673. 最长递增子序列的个数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/686.repeated-string-match.md&quot;&gt;0686. 重复叠加字符串匹配&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/718.maximum-length-of-repeated-subarray.md&quot;&gt;0718. 最长重复子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/714.best-time-to-buy-and-sell-stock-with-transaction-fee.md&quot;&gt;0714. 买卖股票的最佳时机含手续费&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/754.reach-a-number.md&quot;&gt;0754. 到达终点数字&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/785.is-graph-bipartite.md&quot;&gt;0785. 判断二分图&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/790.domino-and-tromino-tiling.md&quot;&gt;0790. 多米诺和托米诺平铺&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/799.champagne-tower.md&quot;&gt;0799. 香槟塔&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/801.minimum-swaps-to-make-sequences-increasing.md&quot;&gt;0801. 使序列递增的最小交换次数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/816.ambiguous-coordinates.md&quot;&gt;0816. 模糊坐标&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/820.short-encoding-of-words.md&quot;&gt;0820. 单词的压缩编码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/873.length-of-longest-fibonacci-subsequence.md&quot;&gt;0873. 最长的斐波那契子序列的长度&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/875.koko-eating-bananas.md&quot;&gt;0875. 爱吃香蕉的珂珂&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/877.stone-game.md&quot;&gt;0877. 石子游戏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/886.possible-bipartition.md&quot;&gt;0886. 可能的二分法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/898.bitwise-ors-of-subarrays.md&quot;&gt;0898. 子数组按位或操作&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/900.rle-iterator.md&quot;&gt;0900. RLE 迭代器&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/911.online-election.md&quot;&gt;0911. 在线选举&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/912.sort-an-array.md&quot;&gt;0912. 排序数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/932.beautiful-array.md&quot;&gt;0932. 漂亮数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/935.knight-dialer.md&quot;&gt;0935. 骑士拨号器&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/947.most-stones-removed-with-same-row-or-column.md&quot;&gt;0947. 移除最多的同行或同列石头&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/959.regions-cut-by-slashes.md&quot;&gt;0959. 由斜杠划分区域&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/978.longest-turbulent-subarray.md&quot;&gt;0978. 最长湍流子数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/987.vertical-order-traversal-of-a-binary-tree.md&quot;&gt;0987. 二叉树的垂序遍历&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1004.max-consecutive-ones-iii.md&quot;&gt;1004. 最大连续 1 的个数 III&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1011.capacity-to-ship-packages-within-d-days.md&quot;&gt;1011. 在 D 天内送达包裹的能力&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1014.best-sightseeing-pair.md&quot;&gt;1014. 最佳观光组合&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1015.smallest-integer-divisible-by-k.md&quot;&gt;1015. 可被 K 整除的最小整数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1019.next-greater-node-in-linked-list.md&quot;&gt;1019. 链表中的下一个更大节点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1020.number-of-enclaves.md&quot;&gt;1020. 飞地的数量&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1023.camelcase-matching.md&quot;&gt;1023. 驼峰式匹配&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1031.maximum-sum-of-two-non-overlapping-subarrays.md&quot;&gt;1031. 两个非重叠子数组的最大和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1043.partition-array-for-maximum-sum.md&quot;&gt;1043. 分隔数组以得到最大和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1104.path-in-zigzag-labelled-binary-tree.md&quot;&gt;1104. 二叉树寻路&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1131.maximum-of-absolute-value-expression.md&quot;&gt;1131.绝对值表达式的最大值&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1186.maximum-subarray-sum-with-one-deletion.md&quot;&gt;1186. 删除一次得到子数组最大和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1218.longest-arithmetic-subsequence-of-given-difference.md&quot;&gt;1218. 最长定差子序列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1227.airplane-seat-assignment-probability.md&quot;&gt;1227. 飞机座位分配概率&lt;/a&gt; 👍&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1261.find-elements-in-a-contaminated-binary-tree.md&quot;&gt;1261. 在受污染的二叉树中查找元素&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1262.greatest-sum-divisible-by-three.md&quot;&gt;1262. 可被三整除的最大和&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1297.maximum-number-of-occurrences-of-a-substring.md&quot;&gt;1297. 子串的最大出现次数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1310.xor-queries-of-a-subarray.md&quot;&gt;1310. 子数组异或查询&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1334.find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance.md&quot;&gt;1334. 阈值距离内邻居最少的城市&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1371.find-the-longest-substring-containing-vowels-in-even-counts.md&quot;&gt;1371.每个元音包含偶数次的最长子字符串&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1381.design-a-stack-with-increment-operation.md&quot;&gt;1381. 设计一个支持增量操作的栈&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1438.longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.md&quot;&gt;1438. 绝对差不超过限制的最长连续子数组&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1558.minimum-numbers-of-function-calls-to-make-target-array.md&quot;&gt;1558. 得到目标数组的最少函数调用次数&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1574.shortest-subarray-to-be-removed-to-make-array-sorted.md&quot;&gt;1574. 删除最短的子数组使剩余数组有序&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1631.path-with-minimum-effort.md&quot;&gt;1631. 最小体力消耗路径&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1658.minimum-operations-to-reduce-x-to-zero.md&quot;&gt;1658. 将 x 减到 0 的最小操作数&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1697.checking-existence-of-edge-length-limited-paths.md&quot;&gt;1697. 检查边长度限制的路径是否存在&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1737.change-minimum-characters-to-satisfy-one-of-three-conditions.md&quot;&gt;1737. 满足三条件之一需改变的最少字符数&lt;/a&gt; 🆕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;困难难度题目合集&lt;/h3&gt; 
&lt;p&gt;困难难度题目从类型上说多是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;图&lt;/li&gt; 
 &lt;li&gt;设计题&lt;/li&gt; 
 &lt;li&gt;游戏场景题目&lt;/li&gt; 
 &lt;li&gt;中等题目的 follow up&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;从解法上来说，多是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;图算法&lt;/li&gt; 
 &lt;li&gt;动态规划&lt;/li&gt; 
 &lt;li&gt;二分法&lt;/li&gt; 
 &lt;li&gt;DFS &amp;amp; BFS&lt;/li&gt; 
 &lt;li&gt;状态压缩&lt;/li&gt; 
 &lt;li&gt;剪枝&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;从逻辑上说， 要么就是非常难想到，要么就是非常难写代码。 这里我总结了几个技巧：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;看题目的数据范围， 看能否暴力模拟&lt;/li&gt; 
 &lt;li&gt;暴力枚举所有可能的算法往上套，比如图的题目。&lt;/li&gt; 
 &lt;li&gt;总结和记忆解题模板，减少解题压力&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;以下是我列举的经典题目（带 91 字样的表示出自 &lt;strong&gt;91 天学算法&lt;/strong&gt;活动）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/lcp20.meChtZ.md&quot;&gt;LCP 20. 快速公交&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/lcp21.Za25hA.md&quot;&gt;LCP 21. 追逐游戏&lt;/a&gt; 🆕 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Number-Stream-to-Intervals.md&quot;&gt;Number Stream to Intervals&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Triple-Inversion.md&quot;&gt;Triple Inversion&lt;/a&gt; 91&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Kth-Pair-Distance.md&quot;&gt;Kth Pair Distance&lt;/a&gt; 91&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Minimum-Light-Radius.md&quot;&gt;Minimum Light Radius&lt;/a&gt; 91&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/Largest-Equivalent-Set-of-Pairs.md&quot;&gt;Largest Equivalent Set of Pairs&lt;/a&gt; 🆕 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/4.median-of-two-sorted-arrays.md&quot;&gt;0004. 寻找两个正序数组的中位数&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/23.merge-k-sorted-lists.md&quot;&gt;0023. 合并 K 个升序链表&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/25.reverse-nodes-in-k-groups.md&quot;&gt;0025. K 个一组翻转链表&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/30.substring-with-concatenation-of-all-words.md&quot;&gt;0030. 串联所有单词的子串&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/32.longest-valid-parentheses.md&quot;&gt;0032. 最长有效括号&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/42.trapping-rain-water.md&quot;&gt;0042. 接雨水&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/52.N-Queens-II.md&quot;&gt;0052. N 皇后 II&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/57.insert-interval.md&quot;&gt;0057. 插入区间&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/84.largest-rectangle-in-histogram.md&quot;&gt;0084. 柱状图中最大的矩形&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/85.maximal-rectangle.md&quot;&gt;0085. 最大矩形&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/87.scramble-string.md&quot;&gt;0087. 扰乱字符串&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/124.binary-tree-maximum-path-sum.md&quot;&gt;0124. 二叉树中的最大路径和&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/128.longest-consecutive-sequence.md&quot;&gt;0128. 最长连续序列&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/132.palindrome-partitioning-ii.md&quot;&gt;0132. 分割回文串 II&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/140.word-break-ii.md&quot;&gt;0140. 单词拆分 II&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/145.binary-tree-postorder-traversal.md&quot;&gt;0145. 二叉树的后序遍历&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/146.lru-cache.md&quot;&gt;0146. LRU 缓存机制&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/154.find-minimum-in-rotated-sorted-array-ii.md&quot;&gt;0154. 寻找旋转排序数组中的最小值 II&lt;/a&gt; 🆕&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/212.word-search-ii.md&quot;&gt;0212. 单词搜索 II&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/239.sliding-window-maximum.md&quot;&gt;0239. 滑动窗口最大值&lt;/a&gt; 👍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/295.find-median-from-data-stream.md&quot;&gt;0295. 数据流的中位数&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/297.serialize-and-deserialize-binary-tree.md&quot;&gt;0297. 二叉树的序列化与反序列化&lt;/a&gt; 91&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/301.remove-invalid-parentheses.md&quot;&gt;0301. 删除无效的括号&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/312.burst-balloons.md&quot;&gt;0312. 戳气球&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/330.patching-array.md&quot;&gt;330. 按要求补齐数组&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/335.self-crossing.md&quot;&gt;0335. 路径交叉&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/460.lfu-cache.md&quot;&gt;0460. LFU 缓存&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/472.concatenated-words.md&quot;&gt;0472. 连接词&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/480.sliding-window-median.md&quot;&gt;0480. 滑动窗口中位数&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/483.smallest-good-base.md&quot;&gt;0483. 最小好进制&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/488.zuma-game.md&quot;&gt;0488. 祖玛游戏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/493.reverse-pairs.md&quot;&gt;0493. 翻转对&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/679.24-game.md&quot;&gt;0679. 24 点游戏&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/715.range-module.md&quot;&gt;0715. Range 模块&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/768.max-chunks-to-make-sorted-ii.md&quot;&gt;0768. 最多能完成排序的块 II&lt;/a&gt; 91&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/805.split-array-with-same-average.md&quot;&gt;0805. 数组的均值分割&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/839.similar-string-groups.md&quot;&gt;0839. 相似字符串组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/887.super-egg-drop.md&quot;&gt;0887. 鸡蛋掉落&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/895.maximum-frequency-stack.md&quot;&gt;0895. 最大频率栈&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/975.odd-even-jump.md&quot;&gt;0975. 奇偶跳&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/995.minimum-number-of-k-consecutive-bit-flips.md&quot;&gt;0995. K 连续位的最小翻转次数&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1032.stream-of-characters.md&quot;&gt;1032. 字符流&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1168.optimize-water-distribution-in-a-village.md&quot;&gt;1168. 水资源分配优化&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1178.number-of-valid-words-for-each-puzzle.md&quot;&gt;1178. 猜字谜&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1203.sort-items-by-groups-respecting-dependencies.md&quot;&gt;1203. 项目管理&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1255.maximum-score-words-formed-by-letters.md&quot;&gt;1255. 得分最高的单词集合&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1435.jump-game-iv.md&quot;&gt;1345. 跳跃游戏 IV&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1449.form-largest-integer-with-digits-that-add-up-to-target.md&quot;&gt;1449. 数位成本和为目标值的最大数字&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1494.parallel-courses-ii.md&quot;&gt;1494. 并行课程 II&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1521.find-a-value-of-a-mysterious-function-closest-to-target.md&quot;&gt;1521. 找到最接近目标值的函数值&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1526.minimum-number-of-increments-on-subarrays-to-form-a-target-array.md&quot;&gt;1526. 形成目标数组的子数组最少增加次数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1649.create-sorted-array-through-instructions.md&quot;&gt;1649. 通过指令创建有序数组&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/1671.minimum-number-of-removals-to-make-mountain-array.md&quot;&gt;1671. 得到山形数组的最少删除次数&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/problems/5640.maximum-xor-with-an-element-from-array.md&quot;&gt;1707. 与数组中元素的最大异或值&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;:trident: &amp;nbsp;anki 卡片&lt;/h2&gt; 
&lt;p&gt;Anki 主要分为两个部分：一部分是关键点到题目的映射，另一部分是题目到思路，关键点，代码的映射。&lt;/p&gt; 
&lt;p&gt;全部卡片都在 &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/assets/anki/leetcode.apkg&quot;&gt;anki-card&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;使用方法：&lt;/p&gt; 
&lt;p&gt;anki - 文件 - 导入 - 下拉格式选择“打包的 anki 集合”，然后选中你下载好的文件，确定即可。&lt;/p&gt; 
&lt;p&gt;更多关于 anki 使用方法的请查看 &lt;a href=&quot;https://apps.ankiweb.net/&quot;&gt;anki 官网&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;目前已更新卡片一览（仅列举正面）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;二分法解决问题的关键点是什么，相关问题有哪些？&lt;/li&gt; 
 &lt;li&gt;如何用栈的特点来简化操作， 涉及到的题目有哪些？&lt;/li&gt; 
 &lt;li&gt;双指针问题的思路以及相关题目有哪些？&lt;/li&gt; 
 &lt;li&gt;滑动窗口问题的思路以及相关题目有哪些？&lt;/li&gt; 
 &lt;li&gt;回溯法解题的思路以及相关题目有哪些？&lt;/li&gt; 
 &lt;li&gt;数论解决问题的关键点是什么，相关问题有哪些？&lt;/li&gt; 
 &lt;li&gt;位运算解决问题的关键点是什么，相关问题有哪些？&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;已加入的题目有：#2 #3 #11&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;:chart_with_upwards_trend:大事件&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;2019-07-10 ：&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thanksGiving.md&quot;&gt;纪念项目 Star 突破 1W 的一个短文&lt;/a&gt;， 记录了项目的&quot;兴起&quot;之路，大家有兴趣可以看一下，如果对这个项目感兴趣，请&lt;strong&gt;点击一下 Star&lt;/strong&gt;， 项目会&lt;strong&gt;持续更新&lt;/strong&gt;，感谢大家的支持。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;2019-10-08: &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thanksGiving2.md&quot;&gt;纪念 LeetCode 项目 Star 突破 2W&lt;/a&gt;，并且 Github 搜索“LeetCode”，排名第一。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;2020-04-12: &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/thanksGiving3.md&quot;&gt;项目突破三万 Star&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;2020-04-14: 官网&lt;code&gt;力扣加加&lt;/code&gt;上线啦 💐💐💐💐💐，有专题讲解，每日一题，下载区和视频题解，后续会增加更多内容，还不赶紧收藏起来？地址：http://leetcode-solution.cn/&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1ghluemaoj3j30z90dtmy5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-02-23: star 破四万&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;:gift_heart: 贡献&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果有想法和创意，请提 &lt;a href=&quot;https://github.com/azl397985856/leetcode/issues&quot;&gt;issue&lt;/a&gt; 或者进群提&lt;/li&gt; 
 &lt;li&gt;如果想贡献增加题解或者翻译， 可以参考 &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/CONTRIBUTING.md&quot;&gt;贡献指南&lt;/a&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;关于如何提交题解，我写了一份 &lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/templates/problems/1014.best-sightseeing-pair.md&quot;&gt;指南&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt;如果需要修改项目中图片，&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/assets/drawio/&quot;&gt;这里&lt;/a&gt; 存放了项目中绘制图的源代码， 大家可以用 &lt;a href=&quot;https://www.draw.io/&quot;&gt;draw.io&lt;/a&gt; 打开进行编辑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;:love_letter:鸣谢&lt;/h2&gt; 
&lt;p&gt;感谢为这个项目作出贡献的所有 &lt;a href=&quot;https://github.com/azl397985856/leetcode/graphs/contributors&quot;&gt;小伙伴&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/azl397985856/leetcode/master/LICENSE.txt&quot;&gt;CC BY-NC-ND 4.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EastWorld/wechat-app-mall</title>
      <link>https://github.com/EastWorld/wechat-app-mall</link>
      <description>&lt;p&gt;微信小程序商城，微信小程序微店&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;微信小程序商城&lt;/h1&gt; 
&lt;p&gt;微信小程序商城，微信小程序微店，长期维护版本，欢迎大家踊跃提交贡献代码；&lt;/p&gt; 
&lt;p&gt;使用说明和常见问题，可参阅下面的说明，如还有疑问，可访问工厂官网 &lt;a href=&quot;https://www.it120.cc/&quot;&gt;https://www.it120.cc/&lt;/a&gt; 寻求帮助！&lt;/p&gt; 
&lt;p&gt;新增直播带货支持，具体详见使用说明&lt;/p&gt; 
&lt;h1&gt;今日头条/抖音小程序版本&lt;/h1&gt; 
&lt;p&gt;本项目的今日头条/抖音小程序版本，请移步至下面的地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/EastWorld/tt-app-mall&quot;&gt;https://github.com/EastWorld/tt-app-mall&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;扫码体验&lt;/h2&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;详细配置/使用教程&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.it120.cc/help/ikfe2k.html&quot;&gt;https://www.it120.cc/help/ikfe2k.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;遇到使用问题？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.it120.cc/help.html&quot;&gt;点击这里找答案，可用关键词搜索&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;其他开源模板&lt;/h2&gt; 
&lt;p&gt;| 舔果果小铺（升级版） | 面馆风格小程序 | AI名片 | | :------: | :------: | :------: | | 
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt; | | &lt;a href=&quot;https://github.com/gooking/TianguoguoXiaopu&quot;&gt;开源地址&lt;/a&gt; | &lt;a href=&quot;https://gitee.com/javazj/noodle_shop_procedures&quot;&gt;开源地址&lt;/a&gt; | &lt;a href=&quot;https://github.com/gooking/visitingCard&quot;&gt;开源地址&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;联系作者&lt;/h2&gt; 
&lt;p&gt;| 微信好友 | 支付宝好友 | | :------: | :------: | | 
 &lt;!-- raw HTML omitted --&gt; | 
 &lt;!-- raw HTML omitted --&gt; |&lt;/p&gt; 
&lt;h2&gt;本项目使用了下面的组件，在此鸣谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/gooking/apifm-wxapi&quot;&gt;接口 SDK&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://admin.it120.cc&quot;&gt;api工厂&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Tencent/weui-wxss/&quot;&gt;WeUI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://youzan.github.io/vant-weapp&quot;&gt;vant-weapp&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jin-yufeng/Parser&quot;&gt;小程序富文本插件（html 渲染）&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jasondu/wxa-plugin-canvas&quot;&gt;小程序海报组件-生成朋友圈分享海报并生成图片&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;底部ICON图标使用： https://www.iconfont.cn/collections/detail?spm=a313x.7781069.0.da5a778a4&amp;amp;cid=18904&lt;/p&gt; 
&lt;h2&gt;如何升级到最新版&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;小程序程序的修改和您后台的数据是独立的，所以不用担心您会丢失数据&lt;/li&gt; 
 &lt;li&gt;先把你开发工具下的现有版本程序备份&lt;/li&gt; 
 &lt;li&gt;下载最新版的程序，直接覆盖您本地的程序&lt;/li&gt; 
 &lt;li&gt;用开发工具修改域名 mall 为你自己的域名&lt;/li&gt; 
 &lt;li&gt;开发工具里面上传代码提交微信审核&lt;/li&gt; 
 &lt;li&gt;审核通过后，小程序后台去发布新版本即可&lt;/li&gt; 
 &lt;li&gt;用户无需重新扫码，关闭小程序重新打开就是新版本了&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>vercel/pkg</title>
      <link>https://github.com/vercel/pkg</link>
      <description>&lt;p&gt;Package your Node.js project into an executable&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Disclaimer: &lt;code&gt;pkg&lt;/code&gt; was created for use within containers and is not intended for use in serverless environments. For those using Vercel, this means that there is no requirement to use &lt;code&gt;pkg&lt;/code&gt; in your projects as the benefits it provides are not applicable to the platform.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/zeit-inc/image/upload/v1509936789/repositories/pkg/pkg-repo-banner-new.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/vercel/pkg/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/vercel/pkg/actions/workflows/ci.yml/badge.svg&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/vercel/pkg&quot;&gt;&lt;img src=&quot;https://david-dm.org/vercel/pkg/status.svg&quot; alt=&quot;Dependency Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/vercel/pkg?type=dev&quot;&gt;&lt;img src=&quot;https://david-dm.org/vercel/pkg/dev-status.svg&quot; alt=&quot;devDependency Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This command line interface enables you to package your Node.js project into an executable that can be run even on devices without Node.js installed.&lt;/p&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make a commercial version of your application without sources&lt;/li&gt; 
 &lt;li&gt;Make a demo/evaluation/trial version of your app without sources&lt;/li&gt; 
 &lt;li&gt;Instantly make executables for other platforms (cross-compilation)&lt;/li&gt; 
 &lt;li&gt;Make some kind of self-extracting archive or installer&lt;/li&gt; 
 &lt;li&gt;No need to install Node.js and npm to run the packaged application&lt;/li&gt; 
 &lt;li&gt;No need to download hundreds of files via &lt;code&gt;npm install&lt;/code&gt; to deploy your application. Deploy it as a single file&lt;/li&gt; 
 &lt;li&gt;Put your assets inside the executable to make it even more portable&lt;/li&gt; 
 &lt;li&gt;Test your app against new Node.js version without installing it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g pkg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After installing it, run &lt;code&gt;pkg --help&lt;/code&gt; without arguments to see list of options.&lt;/p&gt; 
&lt;p&gt;The entrypoint of your project is a mandatory CLI argument. It may be:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Path to entry file. Suppose it is &lt;code&gt;/path/app.js&lt;/code&gt;, then packaged app will work the same way as &lt;code&gt;node /path/app.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Path to &lt;code&gt;package.json&lt;/code&gt;. &lt;code&gt;Pkg&lt;/code&gt; will follow &lt;code&gt;bin&lt;/code&gt; property of the specified &lt;code&gt;package.json&lt;/code&gt; and use it as entry file.&lt;/li&gt; 
 &lt;li&gt;Path to directory. &lt;code&gt;Pkg&lt;/code&gt; will look for &lt;code&gt;package.json&lt;/code&gt; in the specified directory. See above.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Targets&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;pkg&lt;/code&gt; can generate executables for several target machines at a time. You can specify a comma-separated list of targets via &lt;code&gt;--targets&lt;/code&gt; option. A canonical target consists of 3 elements, separated by dashes, for example &lt;code&gt;node12-macos-x64&lt;/code&gt; or &lt;code&gt;node14-linux-arm64&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;nodeRange&lt;/strong&gt; node${n} or latest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;platform&lt;/strong&gt; linux, win, macos, (freebsd, alpine)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;arch&lt;/strong&gt; x64, arm64, (armv6, armv7)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You may omit any element (and specify just &lt;code&gt;node14&lt;/code&gt; for example). The omitted elements will be taken from current platform or system-wide Node.js installation (its version and arch). There is also an alias &lt;code&gt;host&lt;/code&gt;, that means that all 3 elements are taken from current platform/Node.js. By default targets are &lt;code&gt;linux,macos,win&lt;/code&gt; for current Node.js version and arch.&lt;/p&gt; 
&lt;h3&gt;Config&lt;/h3&gt; 
&lt;p&gt;During packaging process &lt;code&gt;pkg&lt;/code&gt; parses your sources, detects calls to &lt;code&gt;require&lt;/code&gt;, traverses the dependencies of your project and includes them into executable. In most cases you don&#39;t need to specify anything manually.&lt;/p&gt; 
&lt;p&gt;However your code may have &lt;code&gt;require(variable)&lt;/code&gt; calls (so called non-literal argument to &lt;code&gt;require&lt;/code&gt;) or use non-javascript files (for example views, css, images etc).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;require(&#39;./build/&#39; + cmd + &#39;.js&#39;);
path.join(__dirname, &#39;views/&#39; + viewName);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Such cases are not handled by &lt;code&gt;pkg&lt;/code&gt;. So you must specify the files - scripts and assets - manually in &lt;code&gt;pkg&lt;/code&gt; property of your &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;pkg&quot;: {
    &quot;scripts&quot;: &quot;build/**/*.js&quot;,
    &quot;assets&quot;: &quot;views/**/*&quot;,
    &quot;targets&quot;: [ &quot;node14-linux-arm64&quot; ],
    &quot;outputPath&quot;: &quot;dist&quot;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above example will include everything in &lt;code&gt;assets/&lt;/code&gt; and every .js file in &lt;code&gt;build/&lt;/code&gt;, build only for &lt;code&gt;node14-linux-arm64&lt;/code&gt;, and place the executable inside &lt;code&gt;dist/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You may also specify arrays of globs:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    &quot;assets&quot;: [ &quot;assets/**/*&quot;, &quot;images/**/*&quot; ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Just be sure to call &lt;code&gt;pkg package.json&lt;/code&gt; or &lt;code&gt;pkg .&lt;/code&gt; to make use of &lt;code&gt;package.json&lt;/code&gt; configuration.&lt;/p&gt; 
&lt;h3&gt;Scripts&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;scripts&lt;/code&gt; is a &lt;a href=&quot;https://github.com/sindresorhus/globby&quot;&gt;glob&lt;/a&gt; or list of globs. Files specified as &lt;code&gt;scripts&lt;/code&gt; will be compiled using &lt;code&gt;v8::ScriptCompiler&lt;/code&gt; and placed into executable without sources. They must conform to the JS standards of those Node.js versions you target (see &lt;a href=&quot;https://raw.githubusercontent.com/vercel/pkg/master/#targets&quot;&gt;Targets&lt;/a&gt;), i.e. be already transpiled.&lt;/p&gt; 
&lt;h3&gt;Assets&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;assets&lt;/code&gt; is a &lt;a href=&quot;https://github.com/sindresorhus/globby&quot;&gt;glob&lt;/a&gt; or list of globs. Files specified as &lt;code&gt;assets&lt;/code&gt; will be packaged into executable as raw content without modifications. Javascript files may also be specified as &lt;code&gt;assets&lt;/code&gt;. Their sources will not be stripped as it improves execution performance of the files and simplifies debugging.&lt;/p&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/vercel/pkg/master/#detecting-assets-in-source-code&quot;&gt;Detecting assets in source code&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/vercel/pkg/master/#snapshot-filesystem&quot;&gt;Snapshot filesystem&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;Node.js application can be called with runtime options (belonging to Node.js or V8). To list them type &lt;code&gt;node --help&lt;/code&gt; or &lt;code&gt;node --v8-options&lt;/code&gt;. You can &quot;bake&quot; these runtime options into packaged application. The app will always run with the options turned on. Just remove &lt;code&gt;--&lt;/code&gt; from option name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pkg app.js --options expose-gc
pkg app.js --options max_old_space_size=4096
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output&lt;/h3&gt; 
&lt;p&gt;You may specify &lt;code&gt;--output&lt;/code&gt; if you create only one executable or &lt;code&gt;--out-path&lt;/code&gt; to place executables for multiple targets.&lt;/p&gt; 
&lt;h3&gt;Debug&lt;/h3&gt; 
&lt;p&gt;Pass &lt;code&gt;--debug&lt;/code&gt; to &lt;code&gt;pkg&lt;/code&gt; to get a log of packaging process. If you have issues with some particular file (seems not packaged into executable), it may be useful to look through the log.&lt;/p&gt; 
&lt;h3&gt;Bytecode (reproducibility)&lt;/h3&gt; 
&lt;p&gt;By default, your source code is precompiled to v8 bytecode before being written to the output file. To disable this feature, pass &lt;code&gt;--no-bytecode&lt;/code&gt; to &lt;code&gt;pkg&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why would you want to do this?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you need a reproducible build process where your executable hashes (e.g. md5, sha1, sha256, etc.) are the same value between builds. Because compiling bytecode is not deterministic (see &lt;a href=&quot;https://ui.adsabs.harvard.edu/abs/2019arXiv191003478C/abstract&quot;&gt;here&lt;/a&gt; or &lt;a href=&quot;https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775&quot;&gt;here&lt;/a&gt;) it results in executables with differing hashed values. Disabling bytecode compilation allows a given input to always have the same output.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why would you NOT want to do this?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;While compiling to bytecode does not make your source code 100% secure, it does add a small layer of security/privacy/obscurity to your source code. Turning off bytecode compilation causes the raw source code to be written directly to the executable file. If you&#39;re on *nix machine and would like an example, run &lt;code&gt;pkg&lt;/code&gt; with the &lt;code&gt;--no-bytecode&lt;/code&gt; flag, and use the GNU strings tool on the output. You then should be able to grep your source code.&lt;/p&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;pkg&lt;/code&gt; has so called &quot;base binaries&quot; - they are actually same &lt;code&gt;node&lt;/code&gt; executables but with some patches applied. They are used as a base for every executable &lt;code&gt;pkg&lt;/code&gt; creates. &lt;code&gt;pkg&lt;/code&gt; downloads precompiled base binaries before packaging your application. If you prefer to compile base binaries from source instead of downloading them, you may pass &lt;code&gt;--build&lt;/code&gt; option to &lt;code&gt;pkg&lt;/code&gt;. First ensure your computer meets the requirements to compile original Node.js: &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Environment&lt;/h3&gt; 
&lt;p&gt;| Var | Description | | -------------- | ----------------------------------------------------------------------------------------- | | PKG_CACHE_PATH | Used to specify a custom path for node binaries cache folder. Default is &lt;code&gt;~/.pkg-cache&lt;/code&gt; | | PKG_IGNORE_TAG | Allows to ignore additional folder created on &lt;code&gt;PKG_CACHE_PATH&lt;/code&gt; matching pkg-fetch version | | MAKE_JOB_COUNT | Allow configuring number of processes used for compiling |&lt;/p&gt; 
&lt;p&gt;Examples&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1 - Using export
export PKG_CACHE_PATH=/my/cache
pkg app.js

# 2 - Passing it before the script
PKG_CACHE_PATH=/my/cache pkg app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage of packaged app&lt;/h2&gt; 
&lt;p&gt;Command line call to packaged app &lt;code&gt;./app a b&lt;/code&gt; is equivalent to &lt;code&gt;node app.js a b&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Snapshot filesystem&lt;/h2&gt; 
&lt;p&gt;During packaging process &lt;code&gt;pkg&lt;/code&gt; collects project files and places them into executable. It is called a snapshot. At run time the packaged application has access to snapshot filesystem where all that files reside.&lt;/p&gt; 
&lt;p&gt;Packaged files have &lt;code&gt;/snapshot/&lt;/code&gt; prefix in their paths (or &lt;code&gt;C:\snapshot\&lt;/code&gt; in Windows). If you used &lt;code&gt;pkg /path/app.js&lt;/code&gt; command line, then &lt;code&gt;__filename&lt;/code&gt; value will be likely &lt;code&gt;/snapshot/path/app.js&lt;/code&gt; at run time. &lt;code&gt;__dirname&lt;/code&gt; will be &lt;code&gt;/snapshot/path&lt;/code&gt; as well. Here is the comparison table of path-related values:&lt;/p&gt; 
&lt;p&gt;| value | with &lt;code&gt;node&lt;/code&gt; | packaged | comments | | ----------------------------- | --------------- | ------------------------ | ------------------------------ | | __filename | /project/app.js | /snapshot/project/app.js | | __dirname | /project | /snapshot/project | | process.cwd() | /project | /deploy | suppose the app is called ... | | process.execPath | /usr/bin/nodejs | /deploy/app-x64 | &lt;code&gt;app-x64&lt;/code&gt; and run in &lt;code&gt;/deploy&lt;/code&gt; | | process.argv[0] | /usr/bin/nodejs | /deploy/app-x64 | | process.argv[1] | /project/app.js | /snapshot/project/app.js | | process.pkg.entrypoint | undefined | /snapshot/project/app.js | | process.pkg.defaultEntrypoint | undefined | /snapshot/project/app.js | | require.main.filename | /project/app.js | /snapshot/project/app.js |&lt;/p&gt; 
&lt;p&gt;Hence, in order to make use of a file collected at packaging time (&lt;code&gt;require&lt;/code&gt; a javascript file or serve an asset) you should take &lt;code&gt;__filename&lt;/code&gt;, &lt;code&gt;__dirname&lt;/code&gt;, &lt;code&gt;process.pkg.defaultEntrypoint&lt;/code&gt; or &lt;code&gt;require.main.filename&lt;/code&gt; as a base for your path calculations. For javascript files you can just &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;require.resolve&lt;/code&gt; because they use current &lt;code&gt;__dirname&lt;/code&gt; by default. For assets use &lt;code&gt;path.join(__dirname, &#39;../path/to/asset&#39;)&lt;/code&gt;. Learn more about &lt;code&gt;path.join&lt;/code&gt; in &lt;a href=&quot;https://raw.githubusercontent.com/vercel/pkg/master/#detecting-assets-in-source-code&quot;&gt;Detecting assets in source code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;On the other hand, in order to access real file system at run time (pick up a user&#39;s external javascript plugin, json configuration or even get a list of user&#39;s directory) you should take &lt;code&gt;process.cwd()&lt;/code&gt; or &lt;code&gt;path.dirname(process.execPath)&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Detecting assets in source code&lt;/h2&gt; 
&lt;p&gt;When &lt;code&gt;pkg&lt;/code&gt; encounters &lt;code&gt;path.join(__dirname, &#39;../path/to/asset&#39;)&lt;/code&gt;, it automatically packages the file specified as an asset. See &lt;a href=&quot;https://raw.githubusercontent.com/vercel/pkg/master/#assets&quot;&gt;Assets&lt;/a&gt;. Pay attention that &lt;code&gt;path.join&lt;/code&gt; must have two arguments and the last one must be a string literal.&lt;/p&gt; 
&lt;p&gt;This way you may even avoid creating &lt;code&gt;pkg&lt;/code&gt; config for your project.&lt;/p&gt; 
&lt;h2&gt;Native addons&lt;/h2&gt; 
&lt;p&gt;Native addons (&lt;code&gt;.node&lt;/code&gt; files) use is supported. When &lt;code&gt;pkg&lt;/code&gt; encounters a &lt;code&gt;.node&lt;/code&gt; file in a &lt;code&gt;require&lt;/code&gt; call, it will package this like an asset. In some cases (like with the &lt;code&gt;bindings&lt;/code&gt; package), the module path is generated dynamicaly and &lt;code&gt;pkg&lt;/code&gt; won&#39;t be able to detect it. In this case, you should add the &lt;code&gt;.node&lt;/code&gt; file directly in the &lt;code&gt;assets&lt;/code&gt; field in &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The way Node.js requires native addon is different from a classic JS file. It needs to have a file on disk to load it, but &lt;code&gt;pkg&lt;/code&gt; only generates one file. To circumvent this, &lt;code&gt;pkg&lt;/code&gt; will create a temporary file on the disk. These files will stay on the disk after the process has exited and will be used again on the next process launch.&lt;/p&gt; 
&lt;p&gt;When a package, that contains a native module, is being installed, the native module is compiled against current system-wide Node.js version. Then, when you compile your project with &lt;code&gt;pkg&lt;/code&gt;, pay attention to &lt;code&gt;--target&lt;/code&gt; option. You should specify the same Node.js version as your system-wide Node.js to make compiled executable compatible with &lt;code&gt;.node&lt;/code&gt; files.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;const { exec } = require(&#39;pkg&#39;)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;exec(args)&lt;/code&gt; takes an array of command line arguments and returns a promise. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;await exec([&#39;app.js&#39;, &#39;--target&#39;, &#39;host&#39;, &#39;--output&#39;, &#39;app.exe&#39;]);
// do something with app.exe, run, test, upload, deploy, etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Error: ENOENT: no such file or directory, uv_chdir&lt;/h3&gt; 
&lt;p&gt;This error can be caused by deleting the directory the application is run from. Or, generally, deleting &lt;code&gt;process.cwd()&lt;/code&gt; directory when the application is running.&lt;/p&gt; 
&lt;h3&gt;Error: ERR_INSPECTOR_NOT_AVAILABLE&lt;/h3&gt; 
&lt;p&gt;This error can be caused by using &lt;code&gt;NODE_OPTIONS&lt;/code&gt; variable to force to run &lt;code&gt;node&lt;/code&gt; with the debug mode enabled. Debugging options are disallowed , as &lt;strong&gt;pkg&lt;/strong&gt; executables are usually used for production environments. If you do need to use inspector, you can &lt;a href=&quot;https://github.com/vercel/pkg/issues/93#issuecomment-301210543&quot;&gt;build a debuggable Node.js&lt;/a&gt; yourself.&lt;/p&gt; 
&lt;h3&gt;Error: require(...).internalModuleStat is not a function&lt;/h3&gt; 
&lt;p&gt;This error can be caused by using &lt;code&gt;NODE_OPTIONS&lt;/code&gt; variable with some bootstrap or &lt;code&gt;node&lt;/code&gt; options causing conflicts with &lt;strong&gt;pkg&lt;/strong&gt;. Some IDEs, such as &lt;strong&gt;VS Code&lt;/strong&gt;, may add this env variable automatically.&lt;/p&gt; 
&lt;p&gt;You could check on &lt;strong&gt;Unix systems&lt;/strong&gt; (Linux/macOS) in &lt;code&gt;bash&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ printenv | grep NODE
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced&lt;/h2&gt; 
&lt;h3&gt;exploring virtual file system embedded in debug mode&lt;/h3&gt; 
&lt;p&gt;When you are using the &lt;code&gt;--debug&lt;/code&gt; flag when building your executable, &lt;code&gt;pkg&lt;/code&gt; add the ability to display the content of the virtual file system and the symlink table on the console, when the application starts, providing that the environement variable DEBUG_PKG is set. This feature can be useful to inspect if symlinks are correctly handled, and check that all the required files for your application are properly incorporated to the final executable.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ pkg --debug app.js -o output
$ DEBUG_PKG output
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;C:\&amp;gt; pkg --debug app.js -o output.exe
C:\&amp;gt; set DEBUG_PKG=1
C:\&amp;gt; output.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: make sure not to use --debug flag in production.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
 &lt;li&gt;First-class integration with the &lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt; for systems with no gas fees!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/audit&quot;&gt;Audited&lt;/a&gt; by leading security firms (&lt;em&gt;last full audit on v2.0.0&lt;/em&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to security@openzeppelin.org.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tailwindlabs/tailwindcss-jit</title>
      <link>https://github.com/tailwindlabs/tailwindcss-jit</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;As of &lt;a href=&quot;https://blog.tailwindcss.com/tailwindcss-2-1&quot;&gt;Tailwind CSS v2.1&lt;/a&gt; this project has been merged with &lt;a href=&quot;https://github.com/tailwindlabs/tailwindcss&quot;&gt;the core Tailwind CSS repository&lt;/a&gt; and all future development will happen there.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;An experimental just-in-time compiler for Tailwind CSS&lt;/strong&gt; that generates your styles on-demand as you author your templates instead of generating everything in advance at initial build time.&lt;/p&gt; 
&lt;p&gt;This comes with a lot of advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightning fast build times&lt;/strong&gt;. Tailwind can take 3–8s to initially compile using our CLI, and upwards of 30–45s in webpack projects because webpack struggles with large CSS files. This library can compile even the biggest projects in about 800ms &lt;em&gt;(with incremental rebuilds as fast as 3ms)&lt;/em&gt;, no matter what build tool you&#39;re using.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Every variant is enabled out of the box&lt;/strong&gt;. Variants like &lt;code&gt;focus-visible&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;disabled&lt;/code&gt;, and others are not normally enabled by default due to file-size considerations. Since this library generates styles on demand, you can use any variant you want, whenever you want. You can even stack them like &lt;code&gt;sm:hover:active:disabled:opacity-75&lt;/code&gt;. Never configure your variants again.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate arbitrary styles without writing custom CSS.&lt;/strong&gt; Ever needed some ultra-specific value that wasn&#39;t part of your design system, like &lt;code&gt;top: -113px&lt;/code&gt; for a quirky background image? Since styles are generated on demand, you can just generate a utility for this as needed using square bracket notation like &lt;code&gt;top-[-113px]&lt;/code&gt;. Works with variants too, like &lt;code&gt;md:top-[-113px]&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your CSS is identical in development and production&lt;/strong&gt;. Since styles are generated as they are needed, you don&#39;t need to purge unused styles for production, which means you see the exact same CSS in all environments. Never worry about accidentally purging an important style in production again.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better browser performance in development&lt;/strong&gt;. Since development builds are as small as production builds, the browser doesn&#39;t have to parse and manage multiple megabytes of pre-generated CSS. In projects with heavily extended configurations this makes dev tools a lot more responsive.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To see it in action, &lt;a href=&quot;https://www.youtube.com/watch?v=3O_3X7InOw8&quot;&gt;watch our announcement video&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install &lt;code&gt;@tailwindcss/jit&lt;/code&gt; from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -D @tailwindcss/jit tailwindcss postcss
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The existing &lt;code&gt;tailwindcss&lt;/code&gt; library is a peer-dependency of &lt;code&gt;@tailwindcss/jit&lt;/code&gt;, and is also needed for compatibility with Tailwind plugins.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add &lt;code&gt;@tailwindcss/jit&lt;/code&gt; to your PostCSS configuration &lt;em&gt;(instead of &lt;code&gt;tailwindcss&lt;/code&gt;)&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  // postcss.config.js
  module.exports = {
    plugins: {
      &#39;@tailwindcss/jit&#39;: {},
      autoprefixer: {},
    }
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you are using autoprefixer, make sure you are on the latest version using &lt;code&gt;npm install -D autoprefixer@latest&lt;/code&gt; — there&#39;s a bug in older versions that makes it incompatible with this library.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Configure the &lt;code&gt;purge&lt;/code&gt; option in your &lt;code&gt;tailwind.config.js&lt;/code&gt; file with all of your template paths:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// tailwind.config.js
module.exports = {
  purge: [
    &#39;./public/**/*.html&#39;,
    &#39;./src/**/*.{js,jsx,ts,tsx,vue}&#39;,
  ],
  theme: {
    // ...
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now start your dev server or build tool as you normally would and you&#39;re good to go.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Make sure you set &lt;code&gt;NODE_ENV=development&lt;/code&gt; if you are running a watcher, or Tailwind won&#39;t watch your template files for changes. Set &lt;code&gt;NODE_ENV=production&lt;/code&gt; for one-off builds.&lt;/p&gt; 
 &lt;p&gt;If you want to control whether Tailwind watches files or not more explicitly, set &lt;code&gt;TAILWIND_MODE=watch&lt;/code&gt; or &lt;code&gt;TAILWIND_MODE=build&lt;/code&gt; to override the default &lt;code&gt;NODE_ENV&lt;/code&gt;-based behavior.&lt;/p&gt; 
 &lt;p&gt;For example if you want to do one-off builds with &lt;code&gt;NODE_ENV=development&lt;/code&gt;, explicitly set &lt;code&gt;TAILWIND_MODE=build&lt;/code&gt; so that Tailwind knows you are just doing a one-off build and doesn&#39;t hang.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;This library is simply a new internal engine for Tailwind CSS, so for a complete API reference &lt;a href=&quot;https://tailwindcss.com&quot;&gt;visit the official Tailwind CSS documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The on-demand nature of this new engine does afford some new features that weren&#39;t possible before, which you can learn about below.&lt;/p&gt; 
&lt;h3&gt;All variants are enabled out of the box&lt;/h3&gt; 
&lt;p&gt;Since styles are generated on-demand, there&#39;s no need to configure which variants are available for each core plugin.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;input class=&quot;disabled:opacity-75&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use variants like &lt;code&gt;focus-visible&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;even&lt;/code&gt;, and more in combination with any utility, without making any changes to your &lt;code&gt;tailwind.config.js&lt;/code&gt; file.&lt;/p&gt; 
&lt;h3&gt;Stackable variants&lt;/h3&gt; 
&lt;p&gt;All variants can be combined together to easily target very specific situations without writing custom CSS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;button class=&quot;md:dark:disabled:focus:hover:bg-gray-400&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arbitrary value support&lt;/h3&gt; 
&lt;p&gt;Many utilities support arbitrary values using a new square bracket notation to indicate that you&#39;re &quot;breaking out&quot; of your design system.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Sizes and positioning --&amp;gt;
&amp;lt;img class=&quot;absolute w-[762px] h-[918px] top-[-325px] right-[62px] md:top-[-400px] md:right-[80px]&quot; src=&quot;/crazy-background-image.png&quot;&amp;gt;

&amp;lt;!-- Colors --&amp;gt;
&amp;lt;button class=&quot;bg-[#1da1f1]&quot;&amp;gt;Share on Twitter&amp;lt;/button&amp;gt;

&amp;lt;!-- Complex grids --&amp;gt;
&amp;lt;div class=&quot;grid-cols-[1fr,700px,2fr]&quot;&amp;gt;
  &amp;lt;!-- ... --&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is very useful for building pixel-perfect designs where there are a few elements that need hyper-specific styles, like a carefully positioned background image on a marketing site.&lt;/p&gt; 
&lt;p&gt;We&#39;ll likely add some form of &quot;strict mode&quot; in the future for power-hungry team leads who don&#39;t trust their colleagues to use this feature responsibly.&lt;/p&gt; 
&lt;h3&gt;Built-in important modifier&lt;/h3&gt; 
&lt;p&gt;You can make any utility important by adding a &lt;code&gt;!&lt;/code&gt; character to the beginning:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;p class=&quot;font-bold !font-medium&quot;&amp;gt;
  This will be medium even though bold comes later in the CSS.
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;!&lt;/code&gt; always goes at the beginning of the utility name, after any variants, but before any prefix:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;- !sm:hover:tw-font-bold
+ sm:hover:!tw-font-bold
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can be useful in rare situations where you need to increase specificity because you&#39;re at war with some styles you don&#39;t control.&lt;/p&gt; 
&lt;h2&gt;Known limitations&lt;/h2&gt; 
&lt;p&gt;This library is very close to feature parity with &lt;code&gt;tailwindcss&lt;/code&gt; currently and for most projects I bet you&#39;ll find it works exactly as you&#39;d expect.&lt;/p&gt; 
&lt;p&gt;There are a few items still on our todo list though that we are actively working on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced PurgeCSS options like &lt;code&gt;safelist&lt;/code&gt; aren&#39;t supported yet since we aren&#39;t actually using PurgeCSS. We&#39;ll add a way to safelist classes for sure though. For now, a &lt;code&gt;safelist.txt&lt;/code&gt; file somewhere in your project with all the classes you want to safelist will work fine.&lt;/li&gt; 
 &lt;li&gt;You can only &lt;code&gt;@apply&lt;/code&gt; classes that are part of core, generated by plugins, or defined within a &lt;code&gt;@layer&lt;/code&gt; rule. You can&#39;t &lt;code&gt;@apply&lt;/code&gt; arbitrary CSS classes that aren&#39;t defined within a &lt;code&gt;@layer&lt;/code&gt; rule.&lt;/li&gt; 
 &lt;li&gt;Currently the JIT project &lt;strong&gt;only supports PostCSS 8&lt;/strong&gt;. We may do a compat build like we do for Tailwind, but it isn&#39;t a priority right now.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you run into any other issues or find any bugs, please &lt;a href=&quot;https://github.com/tailwindlabs/tailwindcss-jit/issues/new&quot;&gt;open an issue&lt;/a&gt; so we can fix it.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Eventually we plan to merge this project with &lt;code&gt;tailwindcss&lt;/code&gt; and expose it via an option in your &lt;code&gt;tailwind.config.js&lt;/code&gt; file, something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// tailwind.config.js
module.exports = {
  mode: &#39;jit&#39;,
  purge: [
    // ...
  ],
  theme: {
    // ...
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once it&#39;s been heavily tested by the community and we&#39;ve worked out any kinks, we hope to make it the default mode for Tailwind CSS v3.0 later this year.&lt;/p&gt; 
&lt;p&gt;We&#39;ll always provide a &lt;code&gt;mode: &#39;aot&#39;&lt;/code&gt; option for people who want to generate the stylesheet in advance and purge later — we&#39;ll need that ourselves for our CDN builds.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is MIT licensed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#audio-engines&quot;&gt;Audio engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#optional-packages&quot;&gt;Optional packages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#example-usage&quot;&gt;Example Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;br&gt; Ignore any warnings about unmet peer dependencies, as they&#39;re all optional.&lt;/p&gt; 
&lt;p&gt;Without voice support: &lt;code&gt;npm install discord.js&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/@discordjs/opus&quot;&gt;@discordjs/opus&lt;/a&gt;): &lt;code&gt;npm install discord.js @discordjs/opus&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/opusscript&quot;&gt;opusscript&lt;/a&gt;): &lt;code&gt;npm install discord.js opusscript&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio engines&lt;/h3&gt; 
&lt;p&gt;The preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus. Using opusscript is only recommended for development environments where @discordjs/opus is tough to get working. For production bots, using @discordjs/opus should be considered a necessity, especially if they&#39;re going to be running on multiple servers.&lt;/p&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;One of the following packages can be installed for faster voice packet encryption and decryption: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sodium&quot;&gt;sodium&lt;/a&gt; (&lt;code&gt;npm install sodium&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/libsodium-wrappers&quot;&gt;libsodium.js&lt;/a&gt; (&lt;code&gt;npm install libsodium-wrappers&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client, Intents } = require(&#39;discord.js&#39;);
const client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES] });

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
  if (msg.content === &#39;ping&#39;) {
    msg.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordapi.com/unofficial/libs.html&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn&#39;t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you&#39;d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don&#39;t hesitate to join our official &lt;a href=&quot;https://discord.gg/bRCvFy9&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>atlassian/react-beautiful-dnd</title>
      <link>https://github.com/atlassian/react-beautiful-dnd</link>
      <description>&lt;p&gt;Beautiful and accessible drag and drop for lists with React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Beautiful&lt;/strong&gt; and &lt;strong&gt;accessible&lt;/strong&gt; drag and drop for lists with &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;&lt;code&gt;React&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/atlassian/react-beautiful-dnd/tree/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/atlassian/react-beautiful-dnd/master.svg&quot; alt=&quot;CircleCI branch&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/react-beautiful-dnd&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/react-beautiful-dnd.svg&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53614150-efbed780-3c2c-11e9-9204-a5d2e746faca.gif&quot; alt=&quot;quote application example&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://react-beautiful-dnd.netlify.com/iframe.html?selectedKind=board&amp;amp;selectedStory=simple&quot;&gt;Play with this example if you want!&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Core characteristics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Beautiful and &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/animations.md&quot;&gt;natural movement&lt;/a&gt; of items 💐&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/accessibility.md&quot;&gt;Accessible&lt;/a&gt;: powerful keyboard and screen reader support ♿️&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/media.md&quot;&gt;Extremely performant&lt;/a&gt; 🚀&lt;/li&gt; 
 &lt;li&gt;Clean and powerful api which is simple to get started with&lt;/li&gt; 
 &lt;li&gt;Plays extremely well with standard browser interactions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/preset-styles.md&quot;&gt;Unopinionated styling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;No creation of additional wrapper dom nodes - flexbox and focus management friendly!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get started 👩‍🏫&lt;/h2&gt; 
&lt;p&gt;We have created &lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;a free course on &lt;code&gt;egghead.io&lt;/code&gt; 🥚&lt;/a&gt; to help you get started with &lt;code&gt;react-beautiful-dnd&lt;/code&gt; as quickly as possible.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/43372837-8c72d3f8-93e8-11e8-9d92-a82adde7718f.png&quot; alt=&quot;course-logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Currently supported feature set ✅&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vertical lists ↕&lt;/li&gt; 
 &lt;li&gt;Horizontal lists ↔&lt;/li&gt; 
 &lt;li&gt;Movement between lists (▤ ↔ ▤)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/virtual-lists.md&quot;&gt;Virtual list support 👾&lt;/a&gt; - unlocking 10,000 items @ 60fps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/combining.md&quot;&gt;Combining items&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mouse 🐭, keyboard 🎹♿️ and touch 👉📱 (mobile, tablet and so on) support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/multi-drag.md&quot;&gt;Multi drag support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Incredible screen reader support ♿️ - we provide an amazing experience for english screen readers out of the box 📦. We also provide complete customisation control and internationalisation support for those who need it 💖&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md#optional-props&quot;&gt;Conditional dragging&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/droppable.md#conditionally-dropping&quot;&gt;conditional dropping&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple independent lists on the one page&lt;/li&gt; 
 &lt;li&gt;Flexible item sizes - the draggable items can have different heights (vertical lists) or widths (horizontal lists)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/changes-while-dragging.md&quot;&gt;Add and remove items during a drag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Compatible with semantic &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; reordering - &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/tables.md&quot;&gt;table pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/auto-scrolling.md&quot;&gt;Auto scrolling&lt;/a&gt; - automatically scroll containers and the window as required during a drag (even with keyboard 🔥)&lt;/li&gt; 
 &lt;li&gt;Custom drag handles - you can drag a whole item by just a part of it&lt;/li&gt; 
 &lt;li&gt;Able to move the dragging item to another element while dragging (clone, portal) - &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/reparenting.md&quot;&gt;Reparenting your &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;Create scripted drag and drop experiences 🎮&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Allows extensions to support for &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;any input type you like 🕹&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌲 Tree support through the &lt;a href=&quot;https://atlaskit.atlassian.com/packages/confluence/tree&quot;&gt;&lt;code&gt;@atlaskit/tree&lt;/code&gt;&lt;/a&gt; package&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;&amp;lt;Droppable /&amp;gt;&lt;/code&gt; list can be a scroll container (without a scrollable parent) or be the child of a scroll container (that also does not have a scrollable parent)&lt;/li&gt; 
 &lt;li&gt;Independent nested lists - a list can be a child of another list, but you cannot drag items from the parent list into a child list&lt;/li&gt; 
 &lt;li&gt;Server side rendering (SSR) compatible - see &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/reset-server-context.md&quot;&gt;resetServerContext()&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Plays well with &lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md#interactive-child-elements-within-a-draggable-&quot;&gt;nested interactive elements&lt;/a&gt; by default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Motivation 🤔&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;react-beautiful-dnd&lt;/code&gt; exists to create beautiful drag and drop for lists that anyone can use - even people who cannot see. For a good overview of the history and motivations of the project you can take a look at these external resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📖 &lt;a href=&quot;https://medium.com/@alexandereardon/rethinking-drag-and-drop-d9f5770b4e6b&quot;&gt;Rethinking drag and drop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎧 &lt;a href=&quot;https://reactpodcast.simplecast.fm/17&quot;&gt;React podcast: fast, accessible and beautiful drag and drop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Not for everyone ✌️&lt;/h2&gt; 
&lt;p&gt;There are a lot of libraries out there that allow for drag and drop interactions within React. Most notable of these is the amazing &lt;a href=&quot;https://github.com/react-dnd/react-dnd&quot;&gt;&lt;code&gt;react-dnd&lt;/code&gt;&lt;/a&gt;. It does an incredible job at providing a great set of drag and drop primitives which work especially well with the &lt;a href=&quot;https://www.quirksmode.org/blog/archives/2009/09/the_html5_drag.html&quot;&gt;wildly inconsistent&lt;/a&gt; html5 drag and drop feature. &lt;code&gt;react-beautiful-dnd&lt;/code&gt; is a higher level abstraction specifically built for lists (vertical, horizontal, movement between lists, nested lists and so on). Within that subset of functionality &lt;code&gt;react-beautiful-dnd&lt;/code&gt; offers a powerful, natural and beautiful drag and drop experience. However, it does not provide the breadth of functionality offered by &lt;code&gt;react-dnd&lt;/code&gt;. So &lt;code&gt;react-beautiful-dnd&lt;/code&gt; might not be for you depending on what your use case is.&lt;/p&gt; 
&lt;h2&gt;Documentation 📖&lt;/h2&gt; 
&lt;h3&gt;About 👋&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/installation.md&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/examples.md&quot;&gt;Examples and samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd&quot;&gt;Get started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/design-principles.md&quot;&gt;Design principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/animations.md&quot;&gt;Animations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/accessibility.md&quot;&gt;Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/about/browser-support.md&quot;&gt;Browser support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sensors 🔉&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The ways in which somebody can start and control a drag&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/mouse.md&quot;&gt;Mouse dragging 🐭&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/touch.md&quot;&gt;Touch dragging 👉📱&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/keyboard.md&quot;&gt;Keyboard dragging 🎹♿️&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/sensors/sensor-api.md&quot;&gt;Create your own sensor&lt;/a&gt; (allows for any input type as well as scripted experiences)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API 🏋️‍&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/2182637/53607406-c8f3a780-3c12-11e9-979c-7f3b5bd1bfbd.gif&quot; alt=&quot;diagram&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/drag-drop-context.md&quot;&gt;&lt;code&gt;&amp;lt;DragDropContext /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Wraps the part of your application you want to have drag and drop enabled for&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/droppable.md&quot;&gt;&lt;code&gt;&amp;lt;Droppable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;An area that can be dropped into. Contains &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/draggable.md&quot;&gt;&lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;What can be dragged around&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/api/reset-server-context.md&quot;&gt;&lt;code&gt;resetServerContext()&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Utility for server side rendering (SSR)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Guides 🗺&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/responders.md&quot;&gt;&lt;code&gt;&amp;lt;DragDropContext /&amp;gt;&lt;/code&gt; responders&lt;/a&gt; - &lt;em&gt;&lt;code&gt;onDragStart&lt;/code&gt;, &lt;code&gt;onDragUpdate&lt;/code&gt;, &lt;code&gt;onDragEnd&lt;/code&gt; and &lt;code&gt;onBeforeDragStart&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/combining.md&quot;&gt;Combining &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/common-setup-issues.md&quot;&gt;Common setup issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/using-inner-ref.md&quot;&gt;Using &lt;code&gt;innerRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/setup-problem-detection-and-error-recovery.md&quot;&gt;Setup problem detection and error recovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/identifiers.md&quot;&gt;Rules for &lt;code&gt;draggableId&lt;/code&gt; and &lt;code&gt;droppableId&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/browser-focus.md&quot;&gt;Browser focus retention&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/drop-animation.md&quot;&gt;Customising or skipping the drop animation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/auto-scrolling.md&quot;&gt;Auto scrolling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/screen-reader.md&quot;&gt;Controlling the screen reader&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/doctype.md&quot;&gt;Use the html5 &lt;code&gt;doctype&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/types.md&quot;&gt;&lt;code&gt;TypeScript&lt;/code&gt; and &lt;code&gt;flow&lt;/code&gt;: type information&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/dragging-svgs.md&quot;&gt;Dragging &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/avoiding-image-flickering.md&quot;&gt;Avoiding image flickering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/preset-styles.md&quot;&gt;Non-visible preset styles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/how-we-detect-scroll-containers.md&quot;&gt;How we detect scroll containers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/how-we-use-dom-events.md&quot;&gt;How we use dom events&lt;/a&gt; - &lt;em&gt;Useful if you need to build on top of &lt;code&gt;react-beautiful-dnd&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/changes-while-dragging.md&quot;&gt;Adding &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;s during a drag (11.x behaviour)&lt;/a&gt; - &lt;em&gt;⚠️ Advanced&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/content-security-policy.md&quot;&gt;Setting up Content Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Patterns 👷‍&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/virtual-lists.md&quot;&gt;Virtual lists 👾&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/multi-drag.md&quot;&gt;Multi drag&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/patterns/tables.md&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/guides/reparenting.md&quot;&gt;Reparenting a &lt;code&gt;&amp;lt;Draggable /&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;Using our cloning API or your own portal&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Support 👩‍⚕️&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/engineering-health.md&quot;&gt;Engineering health&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/community-and-addons.md&quot;&gt;Community and addons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atlassian/react-beautiful-dnd/releases&quot;&gt;Release notes and changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/upgrading.md&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/atlassian/react-beautiful-dnd/issues&quot;&gt;Road map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/atlassian/react-beautiful-dnd/master/docs/support/media.md&quot;&gt;Media&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Read this in other languages 🌎&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeeHyungGeun/react-beautiful-dnd-kr&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png&quot; alt=&quot;kr&quot;&gt; &lt;strong&gt;한글/Korean&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vtereshyn/react-beautiful-dnd-ru&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png&quot; alt=&quot;ru&quot;&gt; &lt;strong&gt;На русском/Russian&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dudestein/react-beautiful-dnd-pt&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png&quot; alt=&quot;pt&quot;&gt; &lt;strong&gt;Português/Portuguese&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hdks55l/react-beautiful-dnd-gr&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Greece.png&quot; alt=&quot;gr&quot;&gt; &lt;strong&gt;Ελληνικά/Greek&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author ✍️&lt;/h2&gt; 
&lt;p&gt;Alex Reardon &lt;a href=&quot;https://twitter.com/alexandereardon&quot;&gt;@alexandereardon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Collaborators 🤝&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bogdan Chadkin &lt;a href=&quot;https://twitter.com/IAmTrySound&quot;&gt;@IAmTrySound&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Luke Batchelor &lt;a href=&quot;https://twitter.com/alukebatchelor&quot;&gt;@alukebatchelor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jared Crowe &lt;a href=&quot;https://twitter.com/jaredjcrowe&quot;&gt;@jaredjcrowe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Many other &lt;a href=&quot;https://twitter.com/Atlassian&quot;&gt;@Atlassian&lt;/a&gt;&#39;s!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TryGhost/Ghost</title>
      <link>https://github.com/TryGhost/Ghost</link>
      <description>&lt;p&gt;👻 The #1 headless Node.js CMS for professional publishing&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;/p&gt; 
&lt;p&gt;The easiest way to get a production instance deployed is with our official &lt;strong&gt;&lt;a href=&quot;https://ghost.org/pricing/&quot;&gt;Ghost(Pro)&lt;/a&gt;&lt;/strong&gt; managed service. It takes about 2 minutes to launch a new site with worldwide CDN, backups, security and maintenance all done for you.&lt;/p&gt; 
&lt;p&gt;For most people this ends up being the best value option cause of &lt;a href=&quot;https://ghost.org/docs/hosting/&quot;&gt;how much time it saves&lt;/a&gt; — and 100% of revenue goes to the Ghost Foundation; funding the maintenance and further development of the project itself. So you’ll be supporting open source software &lt;em&gt;and&lt;/em&gt; getting a great service!&lt;/p&gt; 
&lt;p&gt;If you prefer to run on your own infrastructure, we also offer official 1-off installs and managed support and maintenance plans via &lt;strong&gt;&lt;a href=&quot;https://valet.ghost.org&quot;&gt;Ghost(Valet)&lt;/a&gt;&lt;/strong&gt; - which can save a substantial amount of developer time and resources.&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Quickstart Install&lt;/h1&gt; 
&lt;p&gt;If you want to run your own instance of Ghost, in most cases the best way is to use our &lt;strong&gt;CLI tool&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install ghost-cli -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Then, if installing locally add the &lt;code&gt;local&lt;/code&gt; flag to get up and running in under a minute - &lt;a href=&quot;https://ghost.org/docs/install/local/&quot;&gt;Local install docs&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ghost install local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;or on a server run the full install, including automatic SSL setup using LetsEncrypt - &lt;a href=&quot;https://ghost.org/docs/install/ubuntu/&quot;&gt;Production install docs&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ghost install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://ghost.org/docs/&quot;&gt;official documentation&lt;/a&gt; for more information about our &lt;a href=&quot;https://ghost.org/docs/hosting/&quot;&gt;recommended hosting stack&lt;/a&gt; &amp;amp; properly &lt;a href=&quot;https://ghost.org/docs/update/&quot;&gt;upgrading Ghost&lt;/a&gt;, plus everything you need to develop your own Ghost &lt;a href=&quot;https://ghost.org/docs/themes/&quot;&gt;themes&lt;/a&gt; or work with &lt;a href=&quot;https://ghost.org/docs/content-api/&quot;&gt;our API&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributors &amp;amp; Advanced Developers&lt;/h3&gt; 
&lt;p&gt;For anyone wishing to contribute to Ghost or to hack/customise core files we recommend following our full development setup guides: &lt;a href=&quot;https://ghost.org/docs/contributing/&quot;&gt;Contributor Guide&lt;/a&gt; | &lt;a href=&quot;https://ghost.org/docs/install/source/&quot;&gt;Developer Setup&lt;/a&gt; | &lt;a href=&quot;https://ghost.org/docs/install/source/#ghost-admin&quot;&gt;Admin Client Dev Guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Ghost Sponsors&lt;/h1&gt; 
&lt;p&gt;We&#39;d like to extend big thanks to our sponsors and partners who make Ghost possible. If you&#39;re interested in sponsoring Ghost and supporting the project, please check out our profile on &lt;a href=&quot;https://github.com/sponsors/TryGhost&quot;&gt;GitHub Sponsors&lt;/a&gt; :heart:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Getting Help&lt;/h1&gt; 
&lt;p&gt;You can find answers to a huge variety of questions, along with a large community of helpful developers over on the &lt;a href=&quot;https://forum.ghost.org/&quot;&gt;Ghost forum&lt;/a&gt; - replies are generally very quick. &lt;strong&gt;Ghost(Pro)&lt;/strong&gt; customers also have access to 24/7 email support.&lt;/p&gt; 
&lt;p&gt;To stay up to date with all the latest news and product updates, make sure you &lt;a href=&quot;https://ghost.org/blog/&quot;&gt;subscribe to our blog&lt;/a&gt; — or you can always follow us &lt;a href=&quot;https://twitter.com/Ghost&quot;&gt;on Twitter&lt;/a&gt;, if you prefer your updates bite-sized and facetious. :saxophone::turtle:&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Copyright &amp;amp; License&lt;/h1&gt; 
&lt;p&gt;Copyright (c) 2013-2021 Ghost Foundation - Released under the &lt;a href=&quot;https://raw.githubusercontent.com/TryGhost/Ghost/main/LICENSE&quot;&gt;MIT license&lt;/a&gt;. Ghost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our &lt;a href=&quot;https://ghost.org/trademark/&quot;&gt;trademark policy&lt;/a&gt; for info on acceptable usage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nasa/openmct</title>
      <link>https://github.com/nasa/openmct</link>
      <description>&lt;p&gt;A web based mission control framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open MCT &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache%202.0-blue.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Open MCT (Open Mission Control Technologies) is a next-generation mission control framework for visualization of data on desktop and mobile devices. It is developed at NASA&#39;s Ames Research Center, and is being used by NASA for data analysis of spacecraft missions, as well as planning and operation of experimental rover systems. As a generalizable and open source framework, Open MCT could be used as the basis for building applications for planning, operation, and analysis of any systems producing telemetry data.&lt;/p&gt; 
&lt;p&gt;Please visit our &lt;a href=&quot;https://nasa.github.io/openmct/&quot;&gt;Official Site&lt;/a&gt; and &lt;a href=&quot;https://nasa.github.io/openmct/getting-started/&quot;&gt;Getting Started Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;See Open MCT in Action&lt;/h2&gt; 
&lt;p&gt;Try Open MCT now with our &lt;a href=&quot;https://openmct-demo.herokuapp.com/&quot;&gt;live demo&lt;/a&gt;. &lt;img src=&quot;https://nasa.github.io/openmct/static/res/images/Open-MCT.Browse.Layout.Mars-Weather-1.jpg&quot; alt=&quot;Demo&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Building and Running Open MCT Locally&lt;/h2&gt; 
&lt;p&gt;Building and running Open MCT in your local dev environment is very easy. Be sure you have &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; installed, then follow the directions below. Need additional information? Check out the &lt;a href=&quot;https://nasa.github.io/openmct/getting-started/&quot;&gt;Getting Started&lt;/a&gt; page on our website. (These instructions assume you are installing as a non-root user; developers have &lt;a href=&quot;https://github.com/nasa/openmct/issues/1151&quot;&gt;reported issues&lt;/a&gt; running these steps with root privileges.)&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the source code&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;git clone https://github.com/nasa/openmct.git&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Install development dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Run a local development server&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Open MCT is now running, and can be accessed by pointing a web browser at &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Open MCT v1.0.0&lt;/h2&gt; 
&lt;p&gt;This represents a major overhaul of Open MCT with significant changes under the hood. We aim to maintain backward compatibility but if you do find compatibility issues, please let us know by filing an issue in this repository. If you are having major issues with v1.0.0 please check-out the v0.14.0 tag until we can resolve them for you.&lt;/p&gt; 
&lt;p&gt;If you are migrating an application built with Open MCT as a dependency to v1.0.0 from an earlier version, please refer to &lt;a href=&quot;https://nasa.github.io/openmct/documentation/migration-guide&quot;&gt;our migration guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href=&quot;https://nasa.github.io/openmct/documentation/&quot;&gt;Open MCT website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;The clearest examples for developing Open MCT plugins are in the &lt;a href=&quot;https://github.com/nasa/openmct-tutorial&quot;&gt;tutorials&lt;/a&gt; provided in our documentation.&lt;/p&gt; 
&lt;p&gt;We want Open MCT to be as easy to use, install, run, and develop for as possible, and your feedback will help us get there! Feedback can be provided via &lt;a href=&quot;https://github.com/nasa/openmct/issues&quot;&gt;GitHub issues&lt;/a&gt;, or by emailing us at &lt;a href=&quot;mailto:arc-dl-openmct@mail.nasa.gov&quot;&gt;arc-dl-openmct@mail.nasa.gov&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building Applications With Open MCT&lt;/h2&gt; 
&lt;p&gt;Open MCT is built using &lt;a href=&quot;http://npmjs.com/&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/&quot;&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See our documentation for a guide on &lt;a href=&quot;https://github.com/nasa/openmct/blob/master/API.md#starting-an-open-mct-application&quot;&gt;building Applications with Open MCT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;Open MCT can be extended via plugins that make calls to the Open MCT API. A plugin is a group of software components (including source code and resources such as images and HTML templates) that is intended to be added or removed as a single unit.&lt;/p&gt; 
&lt;p&gt;As well as providing an extension mechanism, most of the core Open MCT codebase is also written as plugins.&lt;/p&gt; 
&lt;p&gt;For information on writing plugins, please see &lt;a href=&quot;https://github.com/nasa/openmct/blob/master/API.md#plugins&quot;&gt;our API documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;Tests are written for &lt;a href=&quot;https://jasmine.github.io/api/3.1/global&quot;&gt;Jasmine 3&lt;/a&gt; and run by &lt;a href=&quot;http://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt;. To run:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm test&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The test suite is configured to load any scripts ending with &lt;code&gt;Spec.js&lt;/code&gt; found in the &lt;code&gt;src&lt;/code&gt; hierarchy. Full configuration details are found in &lt;code&gt;karma.conf.js&lt;/code&gt;. By convention, unit test scripts should be located alongside the units that they test; for example, &lt;code&gt;src/foo/Bar.js&lt;/code&gt; would be tested by &lt;code&gt;src/foo/BarSpec.js&lt;/code&gt;. (For legacy reasons, some existing tests may be located in separate &lt;code&gt;test&lt;/code&gt; folders near the units they test, but the naming convention is otherwise the same.)&lt;/p&gt; 
&lt;h3&gt;Test Reporting&lt;/h3&gt; 
&lt;p&gt;When &lt;code&gt;npm test&lt;/code&gt; is run, test results will be written as HTML to &lt;code&gt;dist/reports/tests/&lt;/code&gt;. Code coverage information is written to &lt;code&gt;dist/reports/coverage&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Glossary&lt;/h1&gt; 
&lt;p&gt;Certain terms are used throughout Open MCT with consistent meanings or conventions. Any deviations from the below are issues and should be addressed (either by updating this glossary or changing code to reflect correct usage.) Other developer documentation, particularly in-line documentation, may presume an understanding of these terms.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;plugin&lt;/em&gt;: A plugin is a removable, reusable grouping of software elements. The application is composed of plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;composition&lt;/em&gt;: In the context of a domain object, this refers to the set of other domain objects that compose or are contained by that object. A domain object&#39;s composition is the set of domain objects that should appear immediately beneath it in a tree hierarchy. A domain object&#39;s composition is described in its model as an array of id&#39;s; its composition capability provides a means to retrieve the actual domain object instances associated with these identifiers asynchronously.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;description&lt;/em&gt;: When used as an object property, this refers to the human-readable description of a thing; usually a single sentence or short paragraph. (Most often used in the context of extensions, domain object models, or other similar application-specific objects.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;domain object&lt;/em&gt;: A meaningful object to the user; a distinct thing in the work support by Open MCT. Anything that appears in the left-hand tree is a domain object.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;identifier&lt;/em&gt;: A tuple consisting of a namespace and a key, which together uniquely identifies a domain object.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;model&lt;/em&gt;: The persistent state associated with a domain object. A domain object&#39;s model is a JavaScript object which can be converted to JSON without losing information (that is, it contains no methods.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;name&lt;/em&gt;: When used as an object property, this refers to the human-readable name for a thing. (Most often used in the context of extensions, domain object models, or other similar application-specific objects.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;navigation&lt;/em&gt;: Refers to the current state of the application with respect to the user&#39;s expressed interest in a specific domain object; e.g. when a user clicks on a domain object in the tree, they are &lt;em&gt;navigating&lt;/em&gt; to it, and it is thereafter considered the &lt;em&gt;navigated&lt;/em&gt; object (until the user makes another such choice.)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;namespace&lt;/em&gt;: A name used to identify a persistence store. A running open MCT application could potentially use multiple persistence stores, with the&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mui-org/material-ui</title>
      <link>https://github.com/mui-org/material-ui</link>
      <description>&lt;p&gt;Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Quickly build beautiful &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; apps. Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with &lt;a href=&quot;https://material.io/design/introduction/&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/mui-org/material-ui/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@material-ui/core/latest.svg&quot; alt=&quot;npm latest package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@material-ui/core/next.svg&quot; alt=&quot;npm next package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@material-ui/core.svg&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.circleci.com/pipelines/github/mui-org/material-ui?branch=next&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/mui-org/material-ui/next.svg&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/mui-org/material-ui/branch/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/mui-org/material-ui/next.svg&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MaterialUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dependabot.com&quot;&gt;&lt;img src=&quot;https://api.dependabot.com/badges/status?host=github&amp;amp;repo=mui-org/material-ui&quot; alt=&quot;Dependabot Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://isitmaintained.com/project/mui-org/material-ui&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.material-ui.com/project/material-ui-docs&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/material-ui-docs/localized.svg&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/material-ui&quot; alt=&quot;Open Collective backers and sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Material-UI is available as an &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;npm package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/&quot;&gt;Stable channel v4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @material-ui/core

// with yarn
yarn add @material-ui/core
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⚠️ All ongoing work has moved to v5. The development of v4 is limited to important bug fixes, security patches and easing the upgrade path to v5.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://next.material-ui.com/&quot;&gt;Alpha channel v5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @material-ui/core@next @emotion/react @emotion/styled

// with yarn
yarn add @material-ui/core@next @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v3.material-ui.com/&quot;&gt;v3.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v3/&quot;&gt;Migration from v3 to v4&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v0.material-ui.com/&quot;&gt;v0.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v0x/&quot;&gt;Migration to v1&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Please note that &lt;code&gt;@next&lt;/code&gt; will only point to pre-releases; to get the latest stable release use &lt;code&gt;@latest&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Who sponsors Material-UI?&lt;/h2&gt; 
&lt;h3&gt;Diamond 💎&lt;/h3&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Diamond Sponsors are those who have pledged $1,500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;Gold 🏆&lt;/h3&gt; 
&lt;p&gt;via &lt;a href=&quot;https://www.patreon.com/oliviertassinari&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;via &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Direct&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;p&gt;Gold Sponsors are those who have pledged $500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;There is more!&lt;/h3&gt; 
&lt;p&gt;See the full list of &lt;a href=&quot;https://material-ui.com/discover-more/backers/&quot;&gt;our backers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it&#39;s all you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import * as React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import Button from &#39;@material-ui/core/Button&#39;;

function App() {
  return &amp;lt;Button variant=&quot;contained&quot;&amp;gt;Hello World&amp;lt;/Button&amp;gt;;
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#39;#app&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yes, it&#39;s really all you need to get started as you can see in this live and interactive demo:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/4j7m47vlm4&quot;&gt;&lt;img src=&quot;https://codesandbox.io/static/img/play-codesandbox.svg&quot; alt=&quot;Edit Button&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For &lt;em&gt;how-to&lt;/em&gt; questions and other non-issues, please use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/material-ui&quot;&gt;StackOverflow&lt;/a&gt; instead of GitHub issues. There is a StackOverflow tag called &quot;material-ui&quot; that you can use to tag your questions.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Are you looking for an example project to get started? &lt;a href=&quot;https://material-ui.com/getting-started/example-projects/&quot;&gt;We host some&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://material-ui.com/&quot;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Premium Themes&lt;/h2&gt; 
&lt;p&gt;You can find complete templates &amp;amp; themes in the &lt;a href=&quot;https://material-ui.com/store/?utm_source=docs&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme-store&quot;&gt;Material-UI store&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.&lt;/p&gt; 
&lt;p&gt;Notice that contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of &lt;a href=&quot;https://material-ui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project&quot;&gt;other contributions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;If you have recently updated, please read the &lt;a href=&quot;https://github.com/mui-org/material-ui/releases&quot;&gt;changelog&lt;/a&gt; for details of what has changed.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The future plans and high priority features and enhancements can be found in the &lt;a href=&quot;https://material-ui.com/discover-more/roadmap/&quot;&gt;roadmap&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring services&lt;/h2&gt; 
&lt;p&gt;These great services sponsor Material-UI&#39;s core infrastructure:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub allows us to host the Git repository.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netlify allows us to distribute the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CrowdIn allows us to translate the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;BrowserStack allows us to test in real browsers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;
  &lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CodeCov allows us to monitor the test coverage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereumbook/ethereumbook</title>
      <link>https://github.com/ethereumbook/ethereumbook</link>
      <description>&lt;p&gt;Mastering Ethereum, by Andreas M. Antonopoulos, Gavin Wood&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastering Ethereum&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ethereumbook/ethereumbook/develop/images/cover_thumb.png&quot; alt=&quot;Mastering Ethereum Cover&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is a book for developers, offering a guide to the operation and use of the Ethereum, Ethereum Classic, RootStock (RSK) and other compatible EVM-based open blockchains.&lt;/p&gt; 
&lt;h2&gt;Reading this book&lt;/h2&gt; 
&lt;p&gt;To read this book, see &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/book.asciidoc&quot;&gt;book.asciidoc&lt;/a&gt;. Click on each of the chapters to read in your browser. Other parties may choose to release PDFs of the book online.&lt;/p&gt; 
&lt;h2&gt;Chapters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preface: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/preface.asciidoc&quot;&gt;Preface&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 1: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/01what-is.asciidoc&quot;&gt;What Is Ethereum&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 2: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/02intro.asciidoc&quot;&gt;Ethereum Basics&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 3: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/03clients.asciidoc&quot;&gt;Ethereum Clients&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 4: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/04keys-addresses.asciidoc&quot;&gt;Cryptography&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 5: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/05wallets.asciidoc&quot;&gt;Wallets&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 6: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/06transactions.asciidoc&quot;&gt;Transactions&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 7: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/07smart-contracts-solidity.asciidoc&quot;&gt;Smart Contracts and Solidity&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 8: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/08smart-contracts-vyper.asciidoc&quot;&gt;Smart Contracts and Vyper&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 9: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/09smart-contracts-security.asciidoc&quot;&gt;Smart Contract Security&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 10: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/10tokens.asciidoc&quot;&gt;Tokens&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 11: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/11oracles.asciidoc&quot;&gt;Oracles&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 12: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/12dapps.asciidoc&quot;&gt;Decentralized Applications (DApps)&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 13: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/13evm.asciidoc&quot;&gt;The Ethereum Virtual Machine&lt;/a&gt;&#39;&lt;/li&gt; 
 &lt;li&gt;Chapter 14: &#39;&lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/blob/develop/14consensus.asciidoc&quot;&gt;Consensus&lt;/a&gt;&#39;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;p&gt;The content status is &quot;COMPLETE&quot;. The first edition of this book was published on December 1st, 2018. That edition is available in print and ebook format at many popular bookstores. It is tagged &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;&quot;first_edition_first_print&quot;&lt;/a&gt; in the develop branch of this repository.&lt;/p&gt; 
&lt;p&gt;At this time, &lt;strong&gt;only bug fix requests are accepted&lt;/strong&gt;. If you find a bug, start an issue or better yet, fix the problem with a pull request. We will start work on the second edition in late 2019.&lt;/p&gt; 
&lt;h2&gt;Source and license&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/ethereumbook/ethereumbook/tree/first_edition_first_print&quot;&gt;first edition&lt;/a&gt; of this book, as printed and sold by O&#39;Reilly Media, is available in this repository.&lt;/p&gt; 
&lt;p&gt;Mastering Ethereum is released under the &lt;em&gt;Creative Commons CC-BY-SA license&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;This &quot;Free Culture&quot; compliant license was approved by our publisher O&#39;Reilly Media (http://oreilly.com), who understands the value of open source. O&#39;Reilly Media is not just the world&#39;s best publisher of technical books, but is also a strong supporter of this open culture and the sharing of knowledge.&lt;/p&gt; 
&lt;p&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;
 &lt;!-- raw HTML omitted --&gt;Mastering Ethereum
 &lt;!-- raw HTML omitted --&gt; by 
 &lt;!-- raw HTML omitted --&gt;Andreas M. Antonopoulos, Gavin Wood
 &lt;!-- raw HTML omitted --&gt; is licensed under a 
 &lt;!-- raw HTML omitted --&gt;Creative Commons Attribution-ShareAlike 4.0 International License
 &lt;!-- raw HTML omitted --&gt;.
 &lt;!-- raw HTML omitted --&gt;Based on a work at 
 &lt;!-- raw HTML omitted --&gt;https://github.com/ethereumbook/ethereumbook
 &lt;!-- raw HTML omitted --&gt;.&lt;/p&gt; 
&lt;h1&gt;Translate This Book!&lt;/h1&gt; 
&lt;p&gt;If you are interested in translating this book, please join our team of volunteers at: https://www.transifex.com/aantonop/ethereumbook&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg&quot; alt=&quot;CI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg&quot; alt=&quot;codecov&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&quot;&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&quot;&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&quot;&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&quot;&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&quot;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&quot;&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&quot;&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&quot;&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&quot;&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&quot;&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&quot;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&quot;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&quot;&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&quot;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&quot;&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&quot;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&quot;&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&quot;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&quot;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&quot;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&quot;&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&quot;&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&quot;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&quot;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&quot;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&quot;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&quot;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&quot;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&quot;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&quot;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&quot;&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&quot;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&quot;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&quot;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&quot;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&quot;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&quot;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&quot;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&quot;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&quot;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&quot;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&quot;&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&quot;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&quot;&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Knapsack Problem&lt;/a&gt; - &quot;0/1&quot; and &quot;Unbound&quot; ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt; - &quot;Brute Force&quot; and &quot;Dynamic Programming&quot; (Kadane&#39;s) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&quot;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&quot;&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&quot;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&quot;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&quot;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&quot;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&quot;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&quot;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&quot;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&quot;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&quot;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&quot;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&quot;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&quot;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&quot;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&quot;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&quot;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&quot;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&quot;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&quot;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&quot;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&quot;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&quot;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&quot;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&quot;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&quot;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://github.com/trekhleb/nano-neuron&quot;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&quot;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&quot;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&quot;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&quot;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&quot;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&quot;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&quot;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&quot;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&quot;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&quot;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&quot;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&quot;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&quot;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&quot;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&quot;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&quot;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&quot;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&quot;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&quot;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&quot;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&quot;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&quot;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&quot;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&quot;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&quot;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&quot;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&quot;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&quot;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&quot;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&quot;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&quot;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&quot;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&quot;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&quot;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&quot;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&quot;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&quot;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&quot;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&quot;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&quot;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&quot;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&quot;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&quot;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&quot; alt=&quot;Big O graphs&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;http://bigocheatsheet.com/&quot;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;p&gt;| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements | | -------------- | ---------------------------- | ----------------------------- | ------------------------------- | | &lt;strong&gt;O(1)&lt;/strong&gt; | 1 | 1 | 1 | | &lt;strong&gt;O(log N)&lt;/strong&gt; | 3 | 6 | 9 | | &lt;strong&gt;O(N)&lt;/strong&gt; | 10 | 100 | 1000 | | &lt;strong&gt;O(N log N)&lt;/strong&gt; | 30 | 600 | 9000 | | &lt;strong&gt;O(N^2)&lt;/strong&gt; | 100 | 10000 | 1000000 | | &lt;strong&gt;O(2^N)&lt;/strong&gt; | 1024 | 1.26e+29 | 1.07e+301 | | &lt;strong&gt;O(N!)&lt;/strong&gt; | 3628800 | 9.3e+157 | 4.02e+2567 |&lt;/p&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;p&gt;| Data Structure | Access | Search | Insertion | Deletion | Comments | | ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Array&lt;/strong&gt; | 1 | n | n | n | | | &lt;strong&gt;Stack&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Queue&lt;/strong&gt; | n | n | 1 | 1 | | | &lt;strong&gt;Linked List&lt;/strong&gt; | n | n | 1 | n | | | &lt;strong&gt;Hash Table&lt;/strong&gt; | - | n | n | n | In case of perfect hash function costs would be O(1) | | &lt;strong&gt;Binary Search Tree&lt;/strong&gt; | n | n | n | n | In case of balanced tree costs would be O(log(n)) | | &lt;strong&gt;B-Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Red-Black Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;AVL Tree&lt;/strong&gt; | log(n) | log(n) | log(n) | log(n) | | | &lt;strong&gt;Bloom Filter&lt;/strong&gt; | - | 1 | 1 | - | False positives are possible while searching |&lt;/p&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;p&gt;| Name | Best | Average | Worst | Memory | Stable | Comments | | --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- | | &lt;strong&gt;Bubble sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Insertion sort&lt;/strong&gt; | n | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | Yes | | | &lt;strong&gt;Selection sort&lt;/strong&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Heap sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | 1 | No | | | &lt;strong&gt;Merge sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n | Yes | | | &lt;strong&gt;Quick sort&lt;/strong&gt; | n&amp;nbsp;log(n) | n&amp;nbsp;log(n) | n
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | log(n) | No | Quicksort is usually done in-place with O(log(n)) stack space | | &lt;strong&gt;Shell sort&lt;/strong&gt; | n&amp;nbsp;log(n) | depends on gap sequence | n&amp;nbsp;(log(n))
 &lt;!-- raw HTML omitted --&gt;2
 &lt;!-- raw HTML omitted --&gt; | 1 | No | | | &lt;strong&gt;Counting sort&lt;/strong&gt; | n + r | n + r | n + r | n + r | Yes | r - biggest number in array | | &lt;strong&gt;Radix sort&lt;/strong&gt; | n * k | n * k | n * k | n + k | Yes | k - length of longest key |&lt;/p&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ❤️️ &lt;a href=&quot;https://github.com/sponsors/trekhleb&quot;&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href=&quot;https://www.patreon.com/trekhleb&quot;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md&quot;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 0&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trufflesuite/ganache</title>
      <link>https://github.com/trufflesuite/ganache</link>
      <description>&lt;p&gt;Personal blockchain for Ethereum development&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Ganache&lt;/h2&gt; 
&lt;p&gt;Ganache is your personal blockchain for Ethereum development.&lt;/p&gt; 
&lt;!-- raw HTML omitted --&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;You can download a self-contained prebuilt Ganache binary for your platform of choice using the &quot;Download&quot; button on the &lt;a href=&quot;https://trufflesuite.com/ganache/&quot;&gt;Ganache&lt;/a&gt; website, or from this repository&#39;s &lt;a href=&quot;https://github.com/trufflesuite/ganache/releases&quot;&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Ganache is also available as a command-line tool. If you prefer working on the command-line, check out &lt;a href=&quot;https://github.com/trufflesuite/ganache-cli&quot;&gt;ganache-cli&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Please open issues and pull requests for new features, questions, and bug fixes.&lt;/p&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;node v12.13.1&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started:&lt;/p&gt; 
&lt;ol start=&quot;0&quot;&gt; 
 &lt;li&gt;Clone this repo&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If using Windows, you may need &lt;a href=&quot;https://www.npmjs.com/package/windows-build-tools&quot;&gt;windows-build-tools&lt;/a&gt; installed first.&lt;/p&gt; 
&lt;h3&gt;Building for All Platforms&lt;/h3&gt; 
&lt;p&gt;Each platform has an associated &lt;code&gt;npm run&lt;/code&gt; configuration to help you build on each platform more easily. Because each platform has different (but similar) build processes, they require different configuration. Note that both Windows and Mac require certificates to sign the built packages; for security reasons these certs aren&#39;t uploaded to github, nor are their passwords saved in source control.&lt;/p&gt; 
&lt;h4&gt;On Windows:&lt;/h4&gt; 
&lt;p&gt;Building on Windows will create a &lt;code&gt;.appx&lt;/code&gt; file for use with the Windows Store.&lt;/p&gt; 
&lt;p&gt;Before building, create the &lt;code&gt;./certs&lt;/code&gt; directory with the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;./certs/cert.pfx&lt;/code&gt; - Note a &lt;code&gt;.pfx&lt;/code&gt; file is identical to a &lt;code&gt;.p12&lt;/code&gt;. (Just change the extension if you&#39;ve been given a &lt;code&gt;.p12&lt;/code&gt;.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In order to build on Windows, you must first ensure you have the &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;Windows 10 SDK&lt;/a&gt; installed. If you have errors during the build process, ensure the package.json file&#39;s &lt;code&gt;windowsStoreConfig.windowsKit&lt;/code&gt; points to your Windows 10 SDK directory. The one specified in the package.json file currently is what worked at the time this process was figured out; it may need to be updated periodically.&lt;/p&gt; 
&lt;p&gt;Because Windows requires a certificate to build the package -- and that certificate requires a password -- you&#39;ll need to run the following command instead of &lt;code&gt;npm run make&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ CERT_PASS=&quot;...&quot; npm run build-windows
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;...&lt;/code&gt; in the command above with your certificate password.&lt;/p&gt; 
&lt;p&gt;This will create a &lt;code&gt;.appx&lt;/code&gt; file in &lt;code&gt;./out/make&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;On Mac:&lt;/h4&gt; 
&lt;p&gt;Building on a Mac will create a standard Mac &lt;code&gt;.dmg&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Before building on a Mac, make sure you have Truffle&#39;s signing keys added to your keychain. Next, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm run build-mac
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a signed &lt;code&gt;.dmg&lt;/code&gt; file in &lt;code&gt;./out/make&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;On Linux:&lt;/h4&gt; 
&lt;p&gt;Bulding on Linux will create a &lt;code&gt;.AppImage&lt;/code&gt; file, meant to run on many versions of Linux.&lt;/p&gt; 
&lt;p&gt;Linux requires no signing keys, so there&#39;s no set up. Simply run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm run build-linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a &lt;code&gt;.AppImage&lt;/code&gt; file in &lt;code&gt;./out/make&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Generating Icon Assets&lt;/h3&gt; 
&lt;p&gt;Asset generation generally only needs to happen once, or whenever the app&#39;s logo is updated. If you find you need to rebuild the assets, the following applications were used:&lt;/p&gt; 
&lt;p&gt;Two tools were used:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/electron-icon-maker&quot;&gt;electron-icon-maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/svg2uwptiles&quot;&gt;svg2uwptiles&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;electron-icon-maker&lt;/code&gt; generates assets for all platforms when using Electron&#39;s &lt;code&gt;squirrel&lt;/code&gt; package, and these assets live in &lt;code&gt;./static/icons&lt;/code&gt;. &lt;code&gt;svg2uwptiles&lt;/code&gt; generates all assets needed for the Windows appx build, and those assets live in &lt;code&gt;./build/appx&lt;/code&gt;. These locations &lt;em&gt;can&lt;/em&gt; be changed in the future, but make sure to change the associated configuration pointing to these assets.&lt;/p&gt; 
&lt;p&gt;Note from the author: I found managing these assets manually -- especially the appx assets -- was a pain. If possible, try not to edit the assets themselves and use one of the generators above.&lt;/p&gt; 
&lt;h3&gt;Flavored Development&lt;/h3&gt; 
&lt;p&gt;&quot;Extras&quot; aren&#39;t stored here in this repository fordue to file size issues, licensing issues, or both.&lt;/p&gt; 
&lt;p&gt;Non-ethereum &quot;flavored&quot; Ganache extras are uploaded to releases here: https://github.com/trufflesuite/ganache-flavors/releases&lt;/p&gt; 
&lt;p&gt;When &quot;extras&quot; change they should be uploaded to a new release, and a corresonding Ganache release that targets the new ganache-flavors release (see &lt;code&gt;common/extras/index.js&lt;/code&gt; for what you&#39;dd need to update)&lt;/p&gt; 
&lt;h4&gt;Corda&lt;/h4&gt; 
&lt;p&gt;Corda requires 4 &quot;extras&quot; that get downloaded at runtime.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;braid-server.jar&lt;/code&gt; is used to communicate to corda nodes via JSON RPC over HTTP. This file is built from https://gitlab.com/bluebank/braid/tree/master/braid-server. To build: run &lt;code&gt;mvn clean install&lt;/code&gt; in the root of the project.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;corda-tools-network-bootstrapper-4.3.jar&lt;/code&gt; is used to create corda networks from configuration (&lt;code&gt;_node.conf&lt;/code&gt;) files. It contains an embedded &lt;code&gt;corda.jar&lt;/code&gt; and the logic required to create a network. To update or download the latest corda-tools-network-bootstrapper go to https://software.r3.com/artifactory/corda-releases/net/corda/ and download the version you want. You&#39;ll need to update the file name in &lt;code&gt;src/common/extras/index.js&lt;/code&gt; if the version changes.&lt;/p&gt; 
&lt;p&gt;Corda and braid require Java&#39;s &lt;em&gt;JRE&lt;/em&gt; &lt;code&gt;1.8&lt;/code&gt;, aka &lt;code&gt;8&lt;/code&gt;. We &quot;release&quot; 4 versions of JRE 1.8: Linux x64, Mac x64, Windows x32, and Windows x64. The Java releases are downloaded from https://adoptopenjdk.net/archive.html -- we use &quot;OpenJDK 8 (LTS)&quot; with &quot;HotSpot&quot;. To redistribute these files you will need to unpack/unzip them, then zip them up again (make sure you are on Linux for the Linux release, as it needs its file permissions properly embedded within the zip). It is very important that you &lt;strong&gt;ensure that all files are stored at the root of the zip&lt;/strong&gt;. You&#39;ll also want to rename the zip files in the following format: &lt;code&gt;OpenJDK8U-jre_{arch}_{os-name}_hotspot_{version}.zip&lt;/code&gt;. You&#39;ll need to update the &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;src/common/extras/index.js&lt;/code&gt; if it changes.&lt;/p&gt; 
&lt;p&gt;Corda requires PostgreSQL 9.6. We &quot;release&quot; 4 versions of PostgreSQL 9.6: Linux x64, Mac x64, Windows x32, and Windows x64. These are downloaded from https://www.enterprisedb.com/downloads/postgres-postgresql-downloads.To redistribute these files you will need to unpack/unzip them, then zip them up again (make sure you are on Linux for the Linux release, as it needs its file permissions properly embedded within the zip). It is very important that you &lt;strong&gt;ensure that all files are stored at the root of the zip&lt;/strong&gt;. You&#39;ll also want to rename the zip files in the following format: &lt;code&gt;postgresql-{version}-2-{os-name}-{arch}-binaries.zip&lt;/code&gt;. You&#39;ll need to update the &lt;code&gt;version&lt;/code&gt; in &lt;code&gt;src/common/extras/index.js&lt;/code&gt; if it changes.&lt;/p&gt; 
&lt;h3&gt;By Truffle&lt;/h3&gt; 
&lt;p&gt;Ganache is part of the Truffle suite of tools. &lt;a href=&quot;https://trufflesuite.com&quot;&gt;Find out more!&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Superalgos/Superalgos</title>
      <link>https://github.com/Superalgos/Superalgos</link>
      <description>&lt;p&gt;Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Superalgos Beta 9 - Getting Started Guide&lt;/h1&gt; 
&lt;p&gt;All procedures are the same for Windows, Linux, or Mac OS. Raspberry Pi terminal commands have been included for ease of use.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Minimalist hardware —both virtual and physical— is better suited for production deployments, where the use of the GUI is minimal. We highly recommend learning Superalgos in a local installation. Mastering the system takes time, and the use of the GIU to go through in-app tutorials is crucial during the learning process. Your experience will be orders of magnitude better if you follow this advice: leave minimalist hardware for when you are ready to start trading live.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/106380124-844d8980-63b0-11eb-9bd9-4f977b6c183b.gif&quot; alt=&quot;superalgos-readme&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Pre-Requisites&lt;/h1&gt; 
&lt;h2&gt;1. Node JS&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t have it yet, download and install Node.js.&lt;/p&gt; 
&lt;p&gt;Node JS is an open-source server environment required to run Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt; Go to the Node JS &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt; Download your system’s installer. Select &lt;em&gt;LTS Recommended for Most Users&lt;/em&gt; and click the big Windows or macOS Installer button. If you are on Linux, the installer is listed further down the page.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;c.&lt;/strong&gt; Run the installer with the default configuration — just click Next until Node.JS is fully installed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR RASPBERRY PI USERS:&lt;/strong&gt; You may install Node.JS just like you would on any other machine as per the above instructions. As an alternative, you may also try the following from the SSH Terminal. &lt;strong&gt;NOTE:&lt;/strong&gt; It is best to use the most current and updated version of the FULL PiOS image.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;followed by&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is recommended to install the Node Package Manager&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt install npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you may also type the following to verify the Node.js installation and version.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2. Git&lt;/h2&gt; 
&lt;p&gt;Download and install Git.&lt;/p&gt; 
&lt;p&gt;Git is an open-source distributed version control system required to download and stay up to date with Superalgos.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt; Go to the Git &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt; Download the version for your Operating System.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;c.&lt;/strong&gt; Run the installer with the default configuration — just click Next until Git is fully installed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The latest version of Git is required to handle the authentication with GitHub.com.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR MAC USERS:&lt;/strong&gt; Depending on your setup, installing Git may be optional. The native XCode Command Line Developer Tools seems to work well. If you do install Git, we have tested Tim Harper&#39;s binary installer successfully.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE FOR RASPBERRY PI USERS:&lt;/strong&gt; Just like with Node.JS, you may follow the above instructions to install Git, or us the SSH Terminal command. The most recent version of PiOS has Git already installed, so this may give you an error. The error will not affect your installation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3. Google Chrome or Safari&lt;/h2&gt; 
&lt;p&gt;Use Chrome, or Safari on Mac. These are the only tested browsers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;a.&lt;/strong&gt; Go to the Chrome &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;b.&lt;/strong&gt; Run the installer.&lt;/p&gt; 
&lt;p&gt;Before you begin, it is recommended that you set up Chrome/Safari as your default browser.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Use Chrome/Safari so that you have a similar environment as the dev team in case you need help. We are not testing on any other browsers, and it is a well-known fact that browsers behave differently.&lt;/p&gt; 
&lt;h1&gt;Superalgos Client Installation&lt;/h1&gt; 
&lt;h2&gt;1. Fork the Superalgos Repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Scroll the page all the way to the top. Find and click the &lt;strong&gt;Fork&lt;/strong&gt; button to create your fork/copy of this repository. To fork Superalgos you need a Github account. If you don&#39;t have one, go ahead and create it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; A Fork is required for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a 
 &lt;!-- raw HTML omitted --&gt;Collective Business
 &lt;!-- raw HTML omitted --&gt; in which all users may participate. The way to participate is to 
 &lt;!-- raw HTML omitted --&gt;contribute
 &lt;!-- raw HTML omitted --&gt; to make Superalgos better. The project&#39;s 
 &lt;!-- raw HTML omitted --&gt;token
 &lt;!-- raw HTML omitted --&gt; is distributed among contributors.&lt;/p&gt; 
&lt;h2&gt;2. Clone Your Fork&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; Once the fork is created, you will land on the page of your fork. Copy the URL from your browser&#39;s address bar.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; In your computer/laptop/server, open a command prompt or terminal. Make sure you are in a directory where you have write permissions (on most systems the terminal will open in your user’s home directory, so you’re good). Clone the git repository using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone &amp;lt;URL of your Superalgos fork&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, if your Github username is John, the command will look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/John/Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates the &lt;code&gt;Superalgos&lt;/code&gt; folder in the current directory, which contains the whole installation.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;The Usage section below explains how to run the app.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;3. Installation Notes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; You need to make a fork so that you may contribute work. Superalgos is a Community project and you are expected to contribute, like everyone else. You don&#39;t need to be a technical person to contribute. Fixing a typo in the docs or translating a paragraph into your native language are valuable contributions too. Superalgos has built-in features that make contributing easy. Help make Superalgos better and Superalgos will better serve you! &lt;a href=&quot;https://en.wikipedia.org/wiki/Free-rider_problem&quot;&gt;Free-riding is not cool&lt;/a&gt;, particularly on free, open-source, Community-driven projects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt; The software includes an in-app self-update command / feature. It will help you stay up-to-date with the latest version of the software. Updates are on-demand, so don&#39;t worry about undesired updates. The project moves very fast and new features become available regularly, particularly if you choose to run the software in the &lt;code&gt;develop&lt;/code&gt; branch (you may switch branches from within the app).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;C.&lt;/strong&gt; Before installing the client on a remote computer in an attempt to access the UI from a different machine, we highly recommend you do a standard installation on your PC / laptop first. Leave your Raspberry Pi or VPS for later, once you have done all available tutorials. This single tip will save you a lot of time: you don&#39;t need to add complexity before you learn how to handle the app, and the GUI performs best in a local installation.&lt;/p&gt; 
&lt;h2&gt;4. Migrating from Superalgos Beta 8&lt;/h2&gt; 
&lt;h3&gt;Refactorings&lt;/h3&gt; 
&lt;p&gt;In order to migrate your own workspaces to Beta 9, you will need to open My Workspaces folder with an IDE like VS Code and do some refactorings. This is what you need to find and replace:&lt;/p&gt; 
&lt;p&gt;| Find | Replace With | | :---: | :---: | | Current | Trading Current | | current | tradingCurrent | | Last | Trading Last | | last | tradingLast | | Episode | Trading Episode | | episode | tradingEpisode | | Episode Counters | Trading Episode Counters | | episodeCounters | tradingEpisodeCounters | | Episode Statistics | Trading Episode Statistics | | episodeStatistics | tradingEpisodeStatistics | | Distance To Event | Distance To Trading Event | | distanceToEvent | distanceToTradingEvent |&lt;/p&gt; 
&lt;h3&gt;Renaming of Exchange Folders&lt;/h3&gt; 
&lt;p&gt;In Beta 9, the &lt;code&gt;exchange id&lt;/code&gt; is used at the code and folder names instead of the exchange name. To migrate to Beta 9 users running on case sensitive Operating Systems (like Linux) must rename their Data-Storage Exchange folders using the Id of the exchange (in the case of Binance, it&#39;s the same name, but with lower-case b: binance). If you are using a different exchange, look at its node configuration and use the value at the property &lt;code&gt;codeName&lt;/code&gt; to name the folder.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;h2&gt;1. Run the Client and GUI&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; To run Superalgos, go to the Superalgos directory/folder and run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI.&lt;/p&gt; 
&lt;p&gt;A Welcome Tutorial pops-up automatically. You must do this Tutorial to finish the setup and to learn the basics. It&#39;s the ultimate onboarding experience, superior to all other resources available, including videos and the Docs.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/107037804-e5fc6200-67bb-11eb-82f2-d0f40247fa14.gif&quot; alt=&quot;run-the-system-01&quot;&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a headless Raspberry Pi (one without a screen) you may need to change directories first and run Superalgos with the &lt;code&gt;minMemo&lt;/code&gt; and &lt;code&gt;noBrowser&lt;/code&gt; options.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node run minMemo noBrowser
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2. Usage Notes&lt;/h2&gt; 
&lt;p&gt;We are testing the UI on Google Chrome and Safari on macOS only. It may work on other browsers as well — or not. If you are running on a different browser and ever need support, make sure you mention that fact upfront, or even better, try on Chrome/Safari first.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; If your computer has 8 GB of RAM or less, use &lt;code&gt;node run minMemo&lt;/code&gt; to run the system with minimal RAM requirements.&lt;/p&gt; 
&lt;h1&gt;Running Superalgos on a Headless Linux Server as a Daemon&lt;/h1&gt; 
&lt;p&gt;If you’re running Superalgos on a headless linux server like a Raspberry Pi, you might want to run it as a daemon so it isn’t attached to your current login session. The easiest, most standard way to go about this is probably using &lt;code&gt;systemd&lt;/code&gt;. Most linux distributions use it as default init system/service manager.&lt;/p&gt; 
&lt;h2&gt;Using &lt;code&gt;systemd&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Create a &lt;code&gt;superalgos.service&lt;/code&gt; file looking like this (change &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; to your user name and &lt;code&gt;/path/to/Superalgos&lt;/code&gt; to your Superalgos folder, for instance &lt;code&gt;/home/John/Superalgos&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[Unit]
Description=Superalgos client

[Service]
Type=simple
User=&amp;lt;user&amp;gt;
WorkingDirectory=/path/to/Superalgos
ExecStart=/usr/bin/node run minMemo noBrowser

[Install]
WantedBy=multi-user.target

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is no need to run Superalgos as root so we’re running it as a user. The &lt;code&gt;minMemo&lt;/code&gt; option assumes you’re running on a small machine like a Raspberry Pi, while &lt;code&gt;noBrowser&lt;/code&gt; makes sense for running daemonized.&lt;/p&gt; 
&lt;p&gt;Now, as root (or using &lt;code&gt;sudo&lt;/code&gt;), put the file &lt;code&gt;superalgos.service&lt;/code&gt; you just created in &lt;code&gt;/etc/systemd/system/&lt;/code&gt; and issue the command&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;systemctl enable superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will install the service so that Superalgos is started on boot. To start it manually, do (again as root or with &lt;code&gt;sudo&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;systemctl start superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see the output of Superalgos, use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;journalctl -u superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or to follow the output,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;journalctl -u superalgos -f
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Uninstall&lt;/h1&gt; 
&lt;p&gt;Superalgos writes nothing outside of the &lt;code&gt;Superalgos&lt;/code&gt; folder. To completely uninstall the software, just delete the folder.&lt;/p&gt; 
&lt;h1&gt;Welcome Tutorial&lt;/h1&gt; 
&lt;p&gt;Once the app finishes loading, an interactive tutorial takes you by the hand and walks you all around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended you follow the tutorial until the end, as it is carefully crafted to make your onboarding as easy as possible. Tutorials are the absolute best way to tackle the learning curve. You should do all tutorials before you start exploring other avenues on your own.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/13994516/107038771-4a6bf100-67bd-11eb-92e0-353525a972a9.gif&quot; alt=&quot;welcome-tutorial-00&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The tutorial uses Binance or Binance US as the exchange of choice. If you don’t have an account with Binance or Binance US, you will still be able to follow 100% of the tutorial. When you get to the live trading section, keep going even if you don&#39;t intend to run the session. You may learn how to work with other exchanges later on.&lt;/p&gt; 
&lt;h1&gt;Docker Deployments&lt;/h1&gt; 
&lt;p&gt;If you wish to run Superalgos over docker platform, follow these steps.&lt;/p&gt; 
&lt;h2&gt;1. Install Docker&lt;/h2&gt; 
&lt;p&gt;Follow the link to &lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;install docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;2. Login and Run&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;docker login ghcr.io --username your-github-username --password-stdin
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 18041:18041 -p 34248 superalgos/superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can access to the Superalgos UI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This has not been extensively tested yet. If you run into troubles, please contact us at the &lt;a href=&quot;https://t.me/superalgossupport&quot;&gt;Superalgos Support Group&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;What is Superalgos?&lt;/h1&gt; 
&lt;p&gt;Superalgos is a platform to automate crypto-trading. It is implemented as a Node JS Client + Web App that runs on your hardware and scales from a single Raspberry Pi to a Trading Farm. Superalgos is &lt;strong&gt;Free&lt;/strong&gt; and &lt;strong&gt;Open-Source&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Superalgos Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Visual Scripting Designer.&lt;/li&gt; 
 &lt;li&gt;Integrated Charting System.&lt;/li&gt; 
 &lt;li&gt;A Visual Strategy Debugger.&lt;/li&gt; 
 &lt;li&gt;Coordinated Task Management across a Trading Farm.&lt;/li&gt; 
 &lt;li&gt;Community-built strategies to learn and start from.&lt;/li&gt; 
 &lt;li&gt;In-App Tutorials.&lt;/li&gt; 
 &lt;li&gt;Complete In-App Documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Allows You To...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visually design your trading strategies.&lt;/li&gt; 
 &lt;li&gt;Visually debug your trading strategies.&lt;/li&gt; 
 &lt;li&gt;Visually design your indicators.&lt;/li&gt; 
 &lt;li&gt;Visually design your plotters to visualize indicators or mined data.&lt;/li&gt; 
 &lt;li&gt;Visually design your data-mining operations.&lt;/li&gt; 
 &lt;li&gt;Download historical market data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;Backtest your strategies against historical data.&lt;/li&gt; 
 &lt;li&gt;Run live trading sessions.&lt;/li&gt; 
 &lt;li&gt;Run arbitrary data-mining operations of any size.&lt;/li&gt; 
 &lt;li&gt;Feed your trading strategies with the data mined.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Development Pipeline&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ethereum Integration: will allow you to data mine your own Ethereum node and use the mined data in your strategies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Machine Learning: will allow you to run a Reinforcement Learning Algorithm and feed it with mined data for it to learn how to make decisions relevant to your strategies.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos is User-centric&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No ads, anywhere.&lt;/li&gt; 
 &lt;li&gt;No sign up / logins.&lt;/li&gt; 
 &lt;li&gt;No user/usage data collection of any kind.&lt;/li&gt; 
 &lt;li&gt;Runs 100% on uncompiled code anyone can read and audit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos for Developers&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;You are free to customize Superalgos for your customers. No royalties, no license fees.&lt;/li&gt; 
 &lt;li&gt;Everything extra your customers may need may be coded by yourself or requested as new features.&lt;/li&gt; 
 &lt;li&gt;You may use Superalgos as a platform or as a component of a larger system.&lt;/li&gt; 
 &lt;li&gt;No proprietary code/libraries. All open-source and free.&lt;/li&gt; 
 &lt;li&gt;Superalgos features a library of community-contributed plugins (workspaces, strategies, indicators, plotters, tutorials, etc.).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Saves You Time&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to code the download of historical data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;No need to code the streaming of market data from crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;No need to hardcode strategies. Use the visual designer for a more flexible approach.&lt;/li&gt; 
 &lt;li&gt;No need to debug what went wrong, line by line, or dive into log files with tons of data. You can see each variable of the state of the Trading Engine at every candle by hovering the mouse over the charts.&lt;/li&gt; 
 &lt;li&gt;No need to integrate a charting library, Superalgos features an integrated Charting System.&lt;/li&gt; 
 &lt;li&gt;No need to manage task data or execution dependencies. Superalgos allows you to define Tasks and distribute them across a Trading Farm and takes care of the data and execution dependencies so that each task automatically starts when their dependencies are ready.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos is Permisionless&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Don&#39;t like the UI?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the icons used?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Charting System?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Visual Designer?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Visual Debugger?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Docs?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Trading Bot?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Indicators?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like the Plotters?&lt;/li&gt; 
 &lt;li&gt;Don&#39;t like any other part of the system?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No problem, code or integrate libraries with your own version of any component and we promise we will merge your work and provide it as an alternative to users. We believe in Permissionless Innovation and that users, not team members, are the final judges and the ones who decide what they prefer to use. You are free to create an alternative for any part of the system that you believe that should work or should have been done in a different way. We will help you integrate your vision into the next release and enable a way for users to choose between different implementations of the same functionality. You will also be granted the title of maintainer of the functionality you provide and have decision power on how it evolves in the future.&lt;/p&gt; 
&lt;h1&gt;Superalgos for Individuals&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Superalgos is easy to install/uninstall.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to run.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to use.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to learn.&lt;/li&gt; 
 &lt;li&gt;Superalgos is easy to debug.&lt;/li&gt; 
 &lt;li&gt;Superalgos is well documented.&lt;/li&gt; 
 &lt;li&gt;You have free online support via Telegram.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Saves You Money&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;There are no paid plans or anything that costs you money.&lt;/li&gt; 
 &lt;li&gt;There is no locked functionality. You may use the full capacity of the software.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of backtests you may run.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of live sessions you may run.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the number of historical data you may download.&lt;/li&gt; 
 &lt;li&gt;There is no limit to the volume of data you may process.&lt;/li&gt; 
 &lt;li&gt;You may use all the plugins available (indicators, plotters, strategies, etc.)&lt;/li&gt; 
 &lt;li&gt;You may install Superalgos in as many machines as you wish.&lt;/li&gt; 
 &lt;li&gt;Your installations may be used by as many people as required.&lt;/li&gt; 
 &lt;li&gt;You may connect to as many crypto exchanges as you wish.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Superalgos Minimizes Risks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;No one can know what strategies you design/run.&lt;/li&gt; 
 &lt;li&gt;No one can front-run you.&lt;/li&gt; 
 &lt;li&gt;No one can steal your trading ideas.&lt;/li&gt; 
 &lt;li&gt;No one knows how much capital you trade.&lt;/li&gt; 
 &lt;li&gt;No one can see your exchange keys.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Superalgos for Companies&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to buy expensive software for monitoring crypto markets or trading execution.&lt;/li&gt; 
 &lt;li&gt;All your employees can use Superalgos for free.&lt;/li&gt; 
 &lt;li&gt;You can use Superalgos to its full capacity or just the features you are currently interested in.&lt;/li&gt; 
 &lt;li&gt;Superalgos may be integrated into your existing operation, feeding to and from other systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;p&gt;The Superalgos Community meets on several Telegram groups.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;BEWARE OF IMPERSONATORS — SCAMMERS ARE LURKING!&lt;/strong&gt; Superalgos Admins, the Core Team, and Community Mods will never contact you directly unless you contact them first. We will never ask you for API keys, coins, or cash. In fact, we will never ask you to trust us in any way. Our &lt;a href=&quot;https://superalgos.org/community-safety-policy.shtml&quot;&gt;Community Safetey Policy&lt;/a&gt; explains why. In short, we want to make it clear that if someone contacts you directly claiming to work with or for the project, it is a scam. Please report scammers in the Community group so that they may be banned, and to increase awareness of the problem, but also block them and report them to Telegram if the option is available.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Via Telegram&lt;/h2&gt; 
&lt;p&gt;Online support through our &lt;a href=&quot;https://t.me/superalgossupport&quot;&gt;Superalgos User&#39;s Support Group&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;In-App Integrated Documentation&lt;/h2&gt; 
&lt;p&gt;Superalgos features interactive documentation built-in the system.&lt;/p&gt; 
&lt;h2&gt;Video Tutorials&lt;/h2&gt; 
&lt;p&gt;Subscribe to the &lt;a href=&quot;https://www.youtube.com/channel/UCmYSGbB151xFQPNxj7KfKBg&quot;&gt;Superalgos YouTube Channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;In-App Tutorials&lt;/h2&gt; 
&lt;p&gt;There are many interactive tutorials you may do and learn from.&lt;/p&gt; 
&lt;h1&gt;Other Resources&lt;/h1&gt; 
&lt;h2&gt;Web Site&lt;/h2&gt; 
&lt;p&gt;For an overview of what Superalgos can do for you, check the &lt;a href=&quot;https://superalgos.org/&quot;&gt;Superalgos Website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;For official news, join the &lt;a href=&quot;https://t.me/superalgos&quot;&gt;Superalgos Announcements Channel&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet other users in the &lt;a href=&quot;https://t.me/superalgoscommunity&quot;&gt;Superalgos Telegram Community Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meet developers in the &lt;a href=&quot;https://t.me/superalgosdevelop&quot;&gt;Superalgos Telegram Developer&#39;s Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Users meet in other topic-specific Telegram Groups. There&#39;s a &lt;a href=&quot;https://superalgos.org/community-join.shtml&quot;&gt;complete list of groups&lt;/a&gt; on the website.&lt;/p&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Find official announcements and various articles on the &lt;a href=&quot;https://medium.com/superalgos&quot;&gt;Superalgos Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Twitter&lt;/h2&gt; 
&lt;p&gt;To stay in the loop, follow &lt;a href=&quot;https://twitter.com/superalgos&quot;&gt;Superalgos on Twitter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Facebook&lt;/h2&gt; 
&lt;p&gt;Or follow &lt;a href=&quot;https://www.facebook.com/superalgos&quot;&gt;Superalgos on Facebook&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Superalgos is a Community Project built by users for users. Learn &lt;a href=&quot;https://superalgos.org/community-contribute.shtml&quot;&gt;how you may contribute&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Top Contributors&lt;/h2&gt; 
&lt;p&gt;Luis Fernando Molina, Julian Molina, Andreja Cobeljic, Ira Miller, matbenitez, bearcanrun, nikolabjelo, 9808us, pmmax, suttridge, Basalt09, Mhnramin, 0xperez, infin1t3, benitezme, whtv, cozed-gh, Eduardo678-dotcom, Smidy13, teehanming, 64bittuning, joenij, apronotti, Noeljarillo, ssplatt, rico4dev, DougJCook, mane, Cordo-van-Saviour, CarnivalBen, Sil3ntLight, pisukesoramame, Edodi, harrellbm, CaptainJeff, Jeff Braun, Francisco J. Santillán, Norman, Viktoria B., Guillermo V., Daniel J., Javier A., Gustavo J., Romina GS, Pedro P., Thais M., Andrey M., Loui M., Natalia M., Bashar A., Carlos V., Diego M., Sebastian E., Bogdan P., Marko V., Igor S., Niksa K., Rodrigo M., Nicanor M., Mateo H., Lan T., Leon A., Uroš R., Filip M., Vladimir J. and Pavle B.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Superalgos is open-source software released under &lt;a href=&quot;https://raw.githubusercontent.com/Superalgos/Superalgos/master/LICENSE&quot;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
