<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Monthly Trending</title>
    <description>Monthly Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 28 Sep 2021 02:45:13 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>NARKOZ/hacker-scripts</title>
      <link>https://github.com/NARKOZ/hacker-scripts</link>
      <description>&lt;p&gt;Based on a true story&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/NARKOZ/hacker-scripts/master/README.zh-CN.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Hacker Scripts&lt;/h1&gt; 
&lt;p&gt;Based on a &lt;em&gt;&lt;a href=&quot;https://www.jitbit.com/alexblog/249-now-thats-what-i-call-a-hacker/&quot;&gt;true story&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: So we&#39;re sitting here, looking through his, uhm, &quot;legacy&quot;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: You&#39;re gonna love this&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/smack-my-bitch-up.sh&quot;&gt;&lt;code&gt;smack-my-bitch-up.sh&lt;/code&gt;&lt;/a&gt; - sends a text message &quot;late at work&quot; to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/kumar-asshole.sh&quot;&gt;&lt;code&gt;kumar-asshole.sh&lt;/code&gt;&lt;/a&gt; - scans the inbox for emails from &quot;Kumar&quot; (a DBA at our clients). Looks for keywords like &quot;help&quot;, &quot;trouble&quot;, &quot;sorry&quot; etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply &quot;no worries mate, be careful next time&quot;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/hangover.sh&quot;&gt;&lt;code&gt;hangover.sh&lt;/code&gt;&lt;/a&gt; - another cron-job that is set to specific dates. Sends automated emails like &quot;not feeling well/gonna work from home&quot; etc. Adds a random &quot;reason&quot; from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: (and the oscar goes to) &lt;a href=&quot;https://github.com/NARKOZ/hacker-scripts/raw/master/fucking-coffee.sh&quot;&gt;&lt;code&gt;fucking-coffee.sh&lt;/code&gt;&lt;/a&gt; - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like &lt;code&gt;sys brew&lt;/code&gt;. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;xxx: holy sh*t I&#39;m keeping those&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Original: &lt;a href=&quot;http://bash.im/quote/436725&quot;&gt;http://bash.im/quote/436725&lt;/a&gt; (in Russian)&lt;br&gt; Pull requests with other implementations (Python, Perl, Shell, etc) are welcome.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You need these environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# used in `smack-my-bitch-up` and `hangover` scripts
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# used in `kumar_asshole` script
GMAIL_USERNAME=admin@example.org
GMAIL_PASSWORD=password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Ruby scripts you need to install gems: &lt;code&gt;gem install dotenv twilio-ruby gmail&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Cron jobs&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.
20 21 * * 1-5 /path/to/scripts/smack-my-bitch-up.sh &amp;gt;&amp;gt; /path/to/smack-my-bitch-up.log 2&amp;gt;&amp;amp;1

# Runs `hangover.sh` monday to friday at 8:45 am.
45 8 * * 1-5 /path/to/scripts/hangover.sh &amp;gt;&amp;gt; /path/to/hangover.log 2&amp;gt;&amp;amp;1

# Runs `kumar-asshole.sh` every 10 minutes.
*/10 * * * * /path/to/scripts/kumar-asshole.sh

# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.
0 9-18 * * 1-5 /path/to/scripts/fucking-coffee.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;Code is released under WTFPL.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>khanhas/spicetify-cli</title>
      <link>https://github.com/khanhas/spicetify-cli</link>
      <description>&lt;p&gt;Commandline tool to customize Spotify client. Supports Windows, MacOS and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt;&lt;img src=&quot;https://i.imgur.com/iwcLITQ.png&quot; width=&quot;600px&quot;&gt;&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/khanhas/spicetify-cli&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/khanhas/spicetify-cli&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/khanhas/spicetify-cli/all.svg?colorB=97CA00?label=version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/khanhas/spicetify-cli/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/khanhas/spicetify-cli/total.svg?colorB=97CA00&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/VnevqPp2Rr&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/842219447716151306?label=Chat&amp;amp;logo=discord&amp;amp;logoColor=discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.reddit.com/r/spicetify&quot;&gt;&lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/spicetify?style=social&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Command-line tool to customize the official Spotify client. Supports Windows, MacOS and Linux.&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/26436809/118751529-d0abcf00-b8a4-11eb-9876-8b15f930a691.png&quot; alt=&quot;img&quot; align=&quot;right&quot; width=&quot;500px&quot;&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change colors whole UI&lt;/li&gt; 
 &lt;li&gt;Inject CSS for advanced customization&lt;/li&gt; 
 &lt;li&gt;Inject Extensions (Javascript script) to extend functionalities, manipulate UI and control player.&lt;/li&gt; 
 &lt;li&gt;Inject Custom apps&lt;/li&gt; 
 &lt;li&gt;Remove bloated components to improve performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Installation&quot;&gt;Installation&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Basic-Usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Customization&quot;&gt;Customization&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki/Custom-Apps&quot;&gt;Custom Apps&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/khanhas/spicetify-cli/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/h4&gt;</description>
    </item>
    
    <item>
      <title>qier222/YesPlayMusic</title>
      <link>https://github.com/qier222/YesPlayMusic</link>
      <description>&lt;p&gt;高颜值的第三方网易云播放器，支持 Windows / macOS / Linux&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://music.qier222.com&quot; target=&quot;blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/logo.png&quot; alt=&quot;Logo&quot; width=&quot;156&quot; height=&quot;156&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot; style=&quot;font-weight: 600&quot;&gt;YesPlayMusic&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; 高颜值的第三方网易云播放器 &lt;br&gt; &lt;a href=&quot;https://music.qier222.com&quot; target=&quot;blank&quot;&gt;&lt;strong&gt;🌎 访问DEMO&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp; &lt;a href=&quot;#%EF%B8%8F-安装&quot; target=&quot;blank&quot;&gt;&lt;strong&gt;📦️ 下载安装包&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://music.qier222.com&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/library.png&quot; alt=&quot;Library&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ 特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 使用 Vue.js 全家桶开发&lt;/li&gt; 
 &lt;li&gt;🔴 网易云账号登录（扫码/手机/邮箱登录）&lt;/li&gt; 
 &lt;li&gt;📺 支持 MV 播放&lt;/li&gt; 
 &lt;li&gt;📃 支持歌词显示&lt;/li&gt; 
 &lt;li&gt;📻 支持私人 FM / 每日推荐歌曲&lt;/li&gt; 
 &lt;li&gt;🚫🤝 无任何社交功能&lt;/li&gt; 
 &lt;li&gt;🌎️ 海外用户可直接播放（需要登录网易云账号）&lt;/li&gt; 
 &lt;li&gt;🔐 支持 &lt;a href=&quot;https://github.com/nondanee/UnblockNeteaseMusic&quot;&gt;UnblockNeteaseMusic&lt;/a&gt;（&lt;a href=&quot;https://github.com/revincx/UnblockNeteaseMusic&quot;&gt;使用 revincx 修复的 npm 包&lt;/a&gt;），自动使用 QQ/酷狗/酷我音源替换变灰歌曲链接 （网页版不支持）&lt;/li&gt; 
 &lt;li&gt;✔️ 每日自动签到（手机端和电脑端同时签到）&lt;/li&gt; 
 &lt;li&gt;🌚 Light/Dark Mode 自动切换&lt;/li&gt; 
 &lt;li&gt;👆 支持 Touch Bar&lt;/li&gt; 
 &lt;li&gt;🖥️ 支持 PWA，可在 Chrome/Edge 里点击地址栏右边的 ➕ 安装到电脑&lt;/li&gt; 
 &lt;li&gt;🟥 支持 Last.fm Scrobble&lt;/li&gt; 
 &lt;li&gt;☁️ 支持音乐云盘&lt;/li&gt; 
 &lt;li&gt;⌨️ 自定义快捷键和全局快捷键&lt;/li&gt; 
 &lt;li&gt;🛠 更多特性开发中&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦️ 安装&lt;/h2&gt; 
&lt;p&gt;Electron 版本由 &lt;a href=&quot;https://github.com/hawtim&quot;&gt;@hawtim&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/qier222&quot;&gt;@qier222&lt;/a&gt; 适配并维护，支持 macOS、Windows、Linux。&lt;/p&gt; 
&lt;p&gt;访问本项目的 &lt;a href=&quot;https://github.com/qier222/YesPlayMusic/releases&quot;&gt;Releases&lt;/a&gt; 页面下载安装包。&lt;/p&gt; 
&lt;p&gt;macOS 用户也可以通过 &lt;code&gt;brew install --cask yesplaymusic&lt;/code&gt; 来安装。&lt;/p&gt; 
&lt;h2&gt;⚙️ 部署至 Vercel&lt;/h2&gt; 
&lt;p&gt;除了下载安装包使用，你还可以将本项目部署到 Vercel 或你的服务器上。下面是部署到 Vercel 的方法。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;部署网易云 API，详情参见 &lt;a href=&quot;https://neteasecloudmusicapi.vercel.app/#/?id=%e5%ae%89%e8%a3%85&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt; 。你也可以将 API 部署到 Vercel。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击本仓库右上角的 Fork，复制本仓库到你的 GitHub 账号。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击仓库的 Add File，选择 Create new file，输入 &lt;code&gt;vercel.json&lt;/code&gt;，将下面的内容复制粘贴到文件中，并将 &lt;code&gt;https://your-netease-api.example.com&lt;/code&gt; 替换为你刚刚部署的网易云 API 地址：&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;rewrites&quot;: [
    {
      &quot;source&quot;: &quot;/api/:match*&quot;,
      &quot;destination&quot;: &quot;https://your-netease-api.example.com/:match*&quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;打开 &lt;a href=&quot;https://vercel.com&quot;&gt;Vercel.com&lt;/a&gt;，使用 GitHub 登录。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 Import Git Repository 并选择你刚刚复制的仓库并点击 Import。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 PERSONAL ACCOUNT 旁边的 Select。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;点击 Environment Variables，填写 Name 为 &lt;code&gt;VUE_APP_NETEASE_API_URL&lt;/code&gt;，Value 为 &lt;code&gt;/api&lt;/code&gt;，点击 Add。最后点击底部的 Deploy 就可以部署到 Vercel 了。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;⚙️ 部署到自己的服务器&lt;/h2&gt; 
&lt;p&gt;除了部署到 Vercel，你还可以部署到自己的服务器上&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;部署网易云 API，详情参见 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;克隆本仓库&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/qier222/YesPlayMusic.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;安装依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn install

&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;（可选）使用 Nginx 反向代理 API，将 API 路径映射为 &lt;code&gt;/api&lt;/code&gt;，如果 API 和网页不在同一个域名下的话（跨域），会有一些 bug。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;复制 &lt;code&gt;/.env.example&lt;/code&gt; 文件为 &lt;code&gt;/.env&lt;/code&gt;，修改里面 &lt;code&gt;VUE_APP_NETEASE_API_URL&lt;/code&gt; 的值为网易云 API 地址。本地开发的话可以填写 API 地址为 &lt;code&gt;http://localhost:3000&lt;/code&gt;，YesPlayMusic 地址为 &lt;code&gt;http://localhost:8080&lt;/code&gt;。如果你使用了反向代理 API，可以填写 API 地址为 &lt;code&gt;/api&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;VUE_APP_NETEASE_API_URL=http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;编译打包&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yarn run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;将 &lt;code&gt;/dist&lt;/code&gt; 目录下的文件上传到你的 Web 服务器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;👷‍♂️ 打包客户端&lt;/h2&gt; 
&lt;p&gt;如果在 Release 页面没有找到适合你的设备的安装包的话，你可以根据下面的步骤来打包自己的客户端。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;打包 Electron 需要用到 Node.js 和 Yarn。可前往 &lt;a href=&quot;https://nodejs.org/zh-cn/&quot;&gt;Node.js 官网&lt;/a&gt; 下载安装包。安装 Node.js 后可在终端里执行 &lt;code&gt;npm install -g yarn&lt;/code&gt; 来安装 Yarn。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;git clone https://github.com/qier222/YesPlayMusic.git&lt;/code&gt; 克隆本仓库到本地。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;yarn install&lt;/code&gt; 安装项目依赖。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;复制 &lt;code&gt;/.env.example&lt;/code&gt; 文件为 &lt;code&gt;/.env&lt;/code&gt; 。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;选择下列表格的命令来打包适合的你的安装包，打包出来的文件在 &lt;code&gt;/dist_electron&lt;/code&gt; 目录下。了解更多信息可访问 &lt;a href=&quot;https://www.electron.build/cli&quot;&gt;electron-builder 文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;命令&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --windows nsis:ia32&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 32 位&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --windows nsis:arm64&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows ARM&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --linux deb:armv7l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Debian armv7l（树莓派等）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;yarn electron:build --macos dir:arm64&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;macOS ARM&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; 配置开发环境&lt;/h2&gt; 
&lt;p&gt;本项目由 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;NeteaseCloudMusicApi&lt;/a&gt; 提供 API，已经包含在本项目的&lt;code&gt;netease_api&lt;/code&gt;目录。&lt;/p&gt; 
&lt;p&gt;运行本项目&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 安装依赖
yarn install

# 创建本地环境变量
cp .env.example .env

# 运行（网页端）
yarn serve

# 运行（electron）
yarn electron:serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;本地运行 NeteaseCloudMusicApi，或者将 API &lt;a href=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/#%EF%B8%8F-%E9%83%A8%E7%BD%B2%E8%87%B3-vercel&quot;&gt;部署至 Vercel&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 安装依赖
yarn netease_api:install

# 运行 API （默认 3000 端口）
yarn netease_api:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;☑️ Todo&lt;/h2&gt; 
&lt;p&gt;查看 Todo 请访问本项目的 &lt;a href=&quot;https://github.com/qier222/YesPlayMusic/projects/1&quot;&gt;Projects&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;欢迎提 Issue 和 Pull request。&lt;/p&gt; 
&lt;h2&gt;📜 开源许可&lt;/h2&gt; 
&lt;p&gt;本项目仅供个人学习研究使用，禁止用于商业及非法用途。&lt;/p&gt; 
&lt;p&gt;基于 &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt; 许可进行开源。&lt;/p&gt; 
&lt;h2&gt;灵感来源&lt;/h2&gt; 
&lt;p&gt;API 源代码来自 &lt;a href=&quot;https://github.com/Binaryify/NeteaseCloudMusicApi&quot;&gt;Binaryify/NeteaseCloudMusicApi&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.apple.com&quot;&gt;Apple Music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.youtube.com&quot;&gt;YouTube Music&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spotify.com&quot;&gt;Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://music.163.com&quot;&gt;网易云音乐&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖼️ 截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/lyrics.png&quot; alt=&quot;lyrics&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/library-dark.png&quot; alt=&quot;library-dark&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/album.png&quot; alt=&quot;album&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/home-2.png&quot; alt=&quot;home-2&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/artist.png&quot; alt=&quot;artist&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/search.png&quot; alt=&quot;search&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/home.png&quot; alt=&quot;home&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/qier222/YesPlayMusic/master/images/explore.png&quot; alt=&quot;explore&quot;&gt;&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>TheAlgorithms/Javascript</title>
      <link>https://github.com/TheAlgorithms/Javascript</link>
      <description>&lt;p&gt;A repository for All algorithms implemented in Javascript (for educational purposes only)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - JavaScript&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TheAlgorithms/Javascript/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&quot; alt=&quot;contributions welcome&quot;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://lgtm.com/projects/g/TheAlgorithms/Javascript/context:javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/lgtm/grade/javascript/g/TheAlgorithms/Javascript.svg?logo=lgtm&amp;amp;logoWidth=18&amp;amp;style=flat-square&quot; alt=&quot;Language grade: JavaScript&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/TheAlgorithms/Javascript/workflows/Node%20CI/badge.svg?sanitize=true&quot; alt=&quot;Node CI&quot;&gt; &lt;img src=&quot;https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg?sanitize=true&quot; alt=&quot;update_directory_md&quot;&gt; &lt;a href=&quot;https://discord.gg/c7MnfGFGa6&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=7289DA&amp;amp;style=flat-square&quot; alt=&quot;Discord chat&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/TheAlgorithms/Javascript.svg?label=Repo%20size&amp;amp;style=flat-square&quot; alt=&quot;&quot;&gt;&amp;nbsp; &lt;a href=&quot;https://standardjs.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-standardjs-%23f3df49&quot; alt=&quot;standard.js&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;All algorithms implemented in JavaScript (for educational purposes only)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/TheAlgorithms/Javascript&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;These are for demonstration purposes only. There are many implementations of sorts in the JavaScript standard library that are much better for performance reasons.&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;p&gt;Read our &lt;a href=&quot;https://raw.githubusercontent.com/TheAlgorithms/Javascript/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; 
&lt;h2&gt;List of Algorithms&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://raw.githubusercontent.com/TheAlgorithms/Javascript/master/DIRECTORY.md&quot;&gt;directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Algorithm Explanation&lt;/h2&gt; 
&lt;p&gt;see our &lt;a href=&quot;https://github.com/TheAlgorithms/Javascript/wiki&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ccxt/ccxt</title>
      <link>https://github.com/ccxt/ccxt</link>
      <description>&lt;p&gt;A JavaScript / Python / PHP cryptocurrency trading API with support for more than 100 bitcoin/altcoin exchanges&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CCXT – CryptoCurrency eXchange Trading Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.com/ccxt/ccxt&quot;&gt;&lt;img src=&quot;https://travis-ci.com/ccxt/ccxt.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://npmjs.com/package/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/ccxt.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/ccxt.svg?sanitize=true&quot; alt=&quot;PyPI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dy/ccxt.svg?sanitize=true&quot; alt=&quot;NPM Downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/dhzSKYU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Exchange-Markets&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/exchanges-112-blue.svg?sanitize=true&quot; alt=&quot;Supported Exchanges&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/backers/badge.svg?sanitize=true&quot; alt=&quot;Open Collective&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/ccxt_official&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ccxt_official.svg?style=social&amp;amp;label=CCXT&quot; alt=&quot;Twitter Follow&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A JavaScript / Python / PHP library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#install&quot;&gt;Install&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#usage&quot;&gt;Usage&lt;/a&gt; · &lt;a href=&quot;https://ccxt.readthedocs.io/en/latest/manual.html&quot;&gt;Manual&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/tree/master/examples&quot;&gt;Examples&lt;/a&gt; · &lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/ccxt/ccxt/master/#social&quot;&gt;Social&lt;/a&gt; · &lt;a href=&quot;https://ccxt.pro&quot;&gt;CCXT Pro&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;strong&gt;CCXT&lt;/strong&gt; library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.&lt;/p&gt; 
&lt;p&gt;It is intended to be used by &lt;strong&gt;coders, developers, technically-skilled traders, data-scientists and financial analysts&lt;/strong&gt; for building trading algorithms.&lt;/p&gt; 
&lt;p&gt;Current feature list:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;support for many cryptocurrency exchanges — more coming soon&lt;/li&gt; 
 &lt;li&gt;fully implemented public and private APIs&lt;/li&gt; 
 &lt;li&gt;optional normalized data for cross-exchange analytics and arbitrage&lt;/li&gt; 
 &lt;li&gt;an out of the box unified API that is extremely easy to integrate&lt;/li&gt; 
 &lt;li&gt;works in Node 10.4+, Python 3, PHP 5.4+, and web browsers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsored Promotion&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.huobi.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/132700397-8d32a3c2-e301-4f30-b311-240b35214c6e.jpg&quot; alt=&quot;Huobi Global – Bitcoin and Cryptocurrency Exchange&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://bit.ly/2W3IXUV&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/134417745-7571cd63-2221-4936-8343-3c4f809bf6b6.png&quot; alt=&quot;BitMart – 0% trading fees!&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/106092533-865ce180-613f-11eb-8d67-0830771fde32.png&quot; alt=&quot;CCXT Pro – A JavaScript / Python / PHP cryptocurrency exchange trading WebSocket API for professionals&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href=&quot;https://tab-trader.com/?utm_source=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66755907-9c3e8880-eea1-11e9-846e-0bff349ceb87.png&quot; alt=&quot;TabTrader&quot;&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href=&quot;https://tab-trader.com/?utm_source=ccxt&quot;&gt;TabTrader&lt;/a&gt;&lt;/strong&gt; – trading on all exchanges in one app. Avaliable on &lt;strong&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.tabtrader.android&amp;amp;referrer=utm_source%3Dccxt&quot;&gt;Android&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&quot;https://itunes.apple.com/app/apple-store/id1095716562?mt=8&quot;&gt;iOS&lt;/a&gt;&lt;/strong&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href=&quot;https://www.freqtrade.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/114340585-8e35fa80-9b60-11eb-860f-4379125e2db6.png&quot; alt=&quot;Freqtrade&quot;&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href=&quot;https://www.freqtrade.io&quot;&gt;Freqtrade&lt;/a&gt;&lt;/strong&gt; – leading opensource cryptocurrency algorithmic trading software!&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href=&quot;https://www.octobot.online&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/132113722-007fc092-7530-4b41-b929-b8ed380b7b2e.png&quot; alt=&quot;OctoBot&quot;&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href=&quot;https://www.octobot.online&quot;&gt;OctoBot&lt;/a&gt;&lt;/strong&gt; – cryptocurrency trading bot with an advanced web interface.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Certified Cryptocurrency Exchanges&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;logo&lt;/th&gt; 
   &lt;th&gt;id&lt;/th&gt; 
   &lt;th&gt;name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;ver&lt;/th&gt; 
   &lt;th&gt;certified&lt;/th&gt; 
   &lt;th&gt;pro&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;discount&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aaxpro.com/invite/sign-up?inviteCode=JXGm5Fy7R2MB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/104140087-a27f2580-53c0-11eb-87c1-5d9e81208fe9.jpg&quot; alt=&quot;aax&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;aax&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aaxpro.com/invite/sign-up?inviteCode=JXGm5Fy7R2MB&quot;&gt;AAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.aaxpro.com/apidoc/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ascendex.com/en-us/register?inviteCode=EL6BXBQM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/112027508-47984600-8b48-11eb-9e17-d26459cc36c6.jpg&quot; alt=&quot;ascendex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ascendex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ascendex.com/en-us/register?inviteCode=EL6BXBQM&quot;&gt;AscendEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bitmax-exchange.github.io/bitmax-pro-api/#bitmax-pro-api-documentation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ascendex.com/en-us/register?inviteCode=EL6BXBQM&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d25%25&amp;amp;color=orange&quot; alt=&quot;Sign up with AscendEX using CCXT&#39;s referral link for a 25% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg&quot; alt=&quot;binance&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binance&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;Binance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d20%25&amp;amp;color=orange&quot; alt=&quot;Sign up with Binance using CCXT&#39;s referral link for a 20% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg&quot; alt=&quot;binancecoinm&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binancecoinm&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;Binance COIN-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binance-docs.github.io/apidocs/delivery/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d20%25&amp;amp;color=orange&quot; alt=&quot;Sign up with Binance COIN-M using CCXT&#39;s referral link for a 20% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg&quot; alt=&quot;binanceusdm&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binanceusdm&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;Binance USDⓈ-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binance-docs.github.io/apidocs/futures/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d20%25&amp;amp;color=orange&quot; alt=&quot;Sign up with Binance USDⓈ-M using CCXT&#39;s referral link for a 20% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/129991357-8f47464b-d0f4-41d6-8a82-34122f0d1398.jpg&quot; alt=&quot;bitmart&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmart&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;BitMart&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developer-pro.bitmart.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d100%25&amp;amp;color=orange&quot; alt=&quot;Sign up with BitMart using CCXT&#39;s referral link for a 100% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83165440-2f1cf200-a116-11ea-9046-a255d09fb2ed.jpg&quot; alt=&quot;bitvavo&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitvavo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;Bitvavo&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.bitvavo.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg&quot; alt=&quot;currencycom&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;currencycom&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;Currency.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://currency.com/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ftx.com/#a=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg&quot; alt=&quot;ftx&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ftx&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ftx.com/#a=ccxt&quot;&gt;FTX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ftexchange/ftx&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://ftx.com/#a=ccxt&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d5%25&amp;amp;color=orange&quot; alt=&quot;Sign up with FTX using CCXT&#39;s referral link for a 5% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.gate.io/ref/2436035&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg&quot; alt=&quot;gateio&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;gateio&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.gate.io/ref/2436035&quot;&gt;Gate.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.gate.io/docs/apiv4/en/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/4-lightgray&quot; alt=&quot;API Version 4&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.gate.io/ref/2436035&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d20%25&amp;amp;color=orange&quot; alt=&quot;Sign up with Gate.io using CCXT&#39;s referral link for a 20% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.huobi.com/en-us/topic/double-reward/?invite_code=6rmm2223&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg&quot; alt=&quot;huobi&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;huobi&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.huobi.com/en-us/topic/double-reward/?invite_code=6rmm2223&quot;&gt;Huobi&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://huobiapi.github.io/docs/spot/v1/cn/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.huobi.com/en-us/topic/double-reward/?invite_code=6rmm2223&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d15%25&amp;amp;color=orange&quot; alt=&quot;Sign up with Huobi using CCXT&#39;s referral link for a 15% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://idex.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg&quot; alt=&quot;idex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;idex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://idex.io&quot;&gt;IDEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.idex.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg&quot; alt=&quot;okex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;OKEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.okex.com/docs/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/5-lightgray&quot; alt=&quot;API Version 5&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://waves.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg&quot; alt=&quot;wavesexchange&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;wavesexchange&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://waves.exchange&quot;&gt;Waves.Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.waves.exchange&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.zbex.club/en/register?ref=4301lera&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg&quot; alt=&quot;zb&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;zb&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.zbex.club/en/register?ref=4301lera&quot;&gt;ZB&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.zb.com/i/developer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.zbex.club/en/register?ref=4301lera&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d16%25&amp;amp;color=orange&quot; alt=&quot;Sign up with ZB using CCXT&#39;s referral link for a 16% discount!&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Supported Cryptocurrency Exchange Markets&lt;/h2&gt; 
&lt;p&gt;The CCXT library currently supports the following 108 cryptocurrency exchange markets and trading APIs:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;logo&lt;/th&gt; 
   &lt;th&gt;id&lt;/th&gt; 
   &lt;th&gt;name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;ver&lt;/th&gt; 
   &lt;th&gt;certified&lt;/th&gt; 
   &lt;th&gt;pro&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aaxpro.com/invite/sign-up?inviteCode=JXGm5Fy7R2MB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/104140087-a27f2580-53c0-11eb-87c1-5d9e81208fe9.jpg&quot; alt=&quot;aax&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;aax&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aaxpro.com/invite/sign-up?inviteCode=JXGm5Fy7R2MB&quot;&gt;AAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.aaxpro.com/apidoc/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aofex.com/#/register?key=9763840&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77670271-056d1080-6f97-11ea-9ac2-4268e9ed0c1f.jpg&quot; alt=&quot;aofex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;aofex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aofex.com/#/register?key=9763840&quot;&gt;AOFEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aofex.zendesk.com/hc/en-us/sections/360005576574-API&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ascendex.com/en-us/register?inviteCode=EL6BXBQM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/112027508-47984600-8b48-11eb-9e17-d26459cc36c6.jpg&quot; alt=&quot;ascendex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ascendex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ascendex.com/en-us/register?inviteCode=EL6BXBQM&quot;&gt;AscendEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bitmax-exchange.github.io/bitmax-pro-api/#bitmax-pro-api-documentation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bequant.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg&quot; alt=&quot;bequant&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bequant&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bequant.io&quot;&gt;Bequant&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.bequant.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://w2.bibox365.com/login/register?invite_code=05Kj3I&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/77257418-3262b000-6c85-11ea-8fb8-20bdf20b3592.jpg&quot; alt=&quot;bibox&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bibox&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://w2.bibox365.com/login/register?invite_code=05Kj3I&quot;&gt;Bibox&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://biboxcom.github.io/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://b1.run/users/new?code=D3LLBVFT&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg&quot; alt=&quot;bigone&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bigone&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://b1.run/users/new?code=D3LLBVFT&quot;&gt;BigONE&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://open.big.one/docs/api.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg&quot; alt=&quot;binance&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binance&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;Binance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binance-docs.github.io/apidocs/spot/en&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg&quot; alt=&quot;binancecoinm&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binancecoinm&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;Binance COIN-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binance-docs.github.io/apidocs/delivery/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.us/?ref=35005074&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg&quot; alt=&quot;binanceus&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binanceus&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.us/?ref=35005074&quot;&gt;Binance US&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/binance-us/binance-official-api-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg&quot; alt=&quot;binanceusdm&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binanceusdm&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.binance.com/en/register?ref=BLEJC98C&quot;&gt;Binance USDⓈ-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://binance-docs.github.io/apidocs/futures/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg&quot; alt=&quot;bit2c&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bit2c&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf&quot;&gt;Bit2C&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.bit2c.co.il/home/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitbank.cc/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg&quot; alt=&quot;bitbank&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitbank&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitbank.cc/&quot;&gt;bitbank&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.bitbank.cc/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://auth.bitbay.net/ref/jHlbB4mIkdS1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg&quot; alt=&quot;bitbay&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitbay&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://auth.bitbay.net/ref/jHlbB4mIkdS1&quot;&gt;BitBay&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bitbay.net/public-api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ref.bitbns.com/1090961&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/117201933-e7a6e780-adf5-11eb-9d80-98fc2a21c3d6.jpg&quot; alt=&quot;bitbns&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitbns&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ref.bitbns.com/1090961&quot;&gt;Bitbns&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bitbns.com/trade/#/api-trading/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exchange.bitcoin.com/referral/da948b21d6c92d69&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/97296144-514fa300-1861-11eb-952b-3d55d492200b.jpg&quot; alt=&quot;bitcoincom&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitcoincom&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exchange.bitcoin.com/referral/da948b21d6c92d69&quot;&gt;bitcoin.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.exchange.bitcoin.com/api/2/explore&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitfinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.bitfinex.com/v1/docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg&quot; alt=&quot;bitfinex2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitfinex2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=P61eYxFL&quot;&gt;Bitfinex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.bitfinex.com/v2/docs/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitflyer.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg&quot; alt=&quot;bitflyer&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitflyer&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitflyer.com&quot;&gt;bitFlyer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://lightning.bitflyer.com/docs?lang=en&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitforex.com/en/invitationRegister?inviterId=1867438&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295553-1160ec00-c50e-11ea-8ea0-df79276a9646.jpg&quot; alt=&quot;bitforex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitforex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitforex.com/en/invitationRegister?inviterId=1867438&quot;&gt;Bitforex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/githubdev2020/API_Doc_en/wiki&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/88317935-a8a21c80-cd22-11ea-8e2b-4b9fac5975eb.jpg&quot; alt=&quot;bitget&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitget&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j&quot;&gt;Bitget&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bitgetlimited.github.io/apidoc/en/swap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bithumb.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg&quot; alt=&quot;bithumb&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bithumb&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bithumb.com&quot;&gt;Bithumb&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apidocs.bithumb.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/129991357-8f47464b-d0f4-41d6-8a82-34122f0d1398.jpg&quot; alt=&quot;bitmart&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmart&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.bitmart.com/?r=rQCFLh&quot;&gt;BitMart&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developer-pro.bitmart.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitmex.com/register/upZpOX&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg&quot; alt=&quot;bitmex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitmex.com/register/upZpOX&quot;&gt;BitMEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.bitmex.com/app/apiOverview&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitpanda.com/en/pro&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87591171-9a377d80-c6f0-11ea-94ac-97a126eac3bc.jpg&quot; alt=&quot;bitpanda&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitpanda&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitpanda.com/en/pro&quot;&gt;Bitpanda Pro&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developers.bitpanda.com/exchange/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitso.com/?ref=itej&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295554-11f98280-c50e-11ea-80d6-15b3bafa8cbf.jpg&quot; alt=&quot;bitso&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitso&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitso.com/?ref=itej&quot;&gt;Bitso&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bitso.com/api_info&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitstamp.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg&quot; alt=&quot;bitstamp&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitstamp&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitstamp.net&quot;&gt;Bitstamp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.bitstamp.net/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitstamp.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg&quot; alt=&quot;bitstamp1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitstamp1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitstamp.net&quot;&gt;Bitstamp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.bitstamp.net/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg&quot; alt=&quot;bittrex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bittrex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B&quot;&gt;Bittrex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bittrex.github.io/api/v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83165440-2f1cf200-a116-11ea-9046-a255d09fb2ed.jpg&quot; alt=&quot;bitvavo&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitvavo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitvavo.com/?a=24F34952F7&quot;&gt;Bitvavo&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.bitvavo.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://u.bitz.com/register?invite_code=1429193&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443304-fec5e000-c5fd-11ea-98f8-ba8e67f7eaff.jpg&quot; alt=&quot;bitz&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitz&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://u.bitz.com/register?invite_code=1429193&quot;&gt;Bit-Z&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apidocv2.bitz.plus/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bl3p.eu&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg&quot; alt=&quot;bl3p&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bl3p&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bl3p.eu&quot;&gt;BL3P&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BitonicNL/bl3p-api/tree/master/docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://btc-alpha.com/?r=123788&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg&quot; alt=&quot;btcalpha&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcalpha&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://btc-alpha.com/?r=123788&quot;&gt;BTC-Alpha&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://btc-alpha.github.io/api-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.btcbox.co.jp/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87327317-98c55400-c53c-11ea-9a11-81f7d951cc74.jpg&quot; alt=&quot;btcbox&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcbox&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.btcbox.co.jp/&quot;&gt;BtcBox&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.btcbox.jp/en/archives/8762&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://btcmarkets.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/89731817-b3fb8480-da52-11ea-817f-783b08aaf32b.jpg&quot; alt=&quot;btcmarkets&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcmarkets&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://btcmarkets.net&quot;&gt;BTC Markets&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.btcmarkets.net/doc/v3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://btc-trade.com.ua/registration/22689&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg&quot; alt=&quot;btctradeua&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btctradeua&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://btc-trade.com.ua/registration/22689&quot;&gt;BTC Trade UA&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.btcturk.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153926-efbef500-c2c0-11ea-9842-05b63612c4b9.jpg&quot; alt=&quot;btcturk&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcturk&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.btcturk.com&quot;&gt;BTCTurk&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/BTCTrader/broker-api-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.buda.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg&quot; alt=&quot;buda&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;buda&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.buda.com&quot;&gt;Buda&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.buda.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69436317-31128c80-0d52-11ea-91d1-eb7bb5818812.jpg&quot; alt=&quot;bw&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bw&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0&quot;&gt;BW&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/bw-exchange/api_docs_en/wiki&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bybit.com/app/register?ref=X7Prm&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76547799-daff5b80-649e-11ea-87fb-3be9bac08954.jpg&quot; alt=&quot;bybit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bybit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bybit.com/app/register?ref=X7Prm&quot;&gt;Bybit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://bybit-exchange.github.io/docs/inverse/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.byte-trade.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg&quot; alt=&quot;bytetrade&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bytetrade&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.byte-trade.com&quot;&gt;ByteTrade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.byte-trade.com/#description&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cex.io/r/0/up105393824/0/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg&quot; alt=&quot;cex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;cex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cex.io/r/0/up105393824/0/&quot;&gt;CEX.IO&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://cex.io/cex-api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinbase.com/join/58cbe25a355148797479dbd2&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg&quot; alt=&quot;coinbase&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinbase&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinbase.com/join/58cbe25a355148797479dbd2&quot;&gt;Coinbase&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developers.coinbase.com/api/v2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exchange.coinbase.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg&quot; alt=&quot;coinbaseprime&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinbaseprime&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exchange.coinbase.com&quot;&gt;Coinbase Prime&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.exchange.coinbase.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pro.coinbase.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg&quot; alt=&quot;coinbasepro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinbasepro&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pro.coinbase.com/&quot;&gt;Coinbase Pro&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.pro.coinbase.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coincheck.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg&quot; alt=&quot;coincheck&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coincheck&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coincheck.com&quot;&gt;coincheck&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://coincheck.com/documents/exchange/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinegg.com/user/register?invite=523218&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/36770310-adfa764e-1c5a-11e8-8e09-449daac3d2fb.jpg&quot; alt=&quot;coinegg&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinegg&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinegg.com/user/register?invite=523218&quot;&gt;CoinEgg&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.coinegg.com/explain.api.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinex.com/register?refer_code=yw5fz&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg&quot; alt=&quot;coinex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinex.com/register?refer_code=yw5fz&quot;&gt;CoinEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/coinexcom/coinex_exchange_api/wiki&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinfalcon.com/?ref=CFJSVGTUPASB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg&quot; alt=&quot;coinfalcon&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinfalcon&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinfalcon.com/?ref=CFJSVGTUPASB&quot;&gt;CoinFalcon&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.coinfalcon.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinfloor.co.uk&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153925-ef265e80-c2c0-11ea-91b5-020c804b90e0.jpg&quot; alt=&quot;coinfloor&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinfloor&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinfloor.co.uk&quot;&gt;coinfloor&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/coinfloor/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinmarketcap.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182086-1cd4cd00-c2ec-11ea-9ec4-d0cf2a2abf62.jpg&quot; alt=&quot;coinmarketcap&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinmarketcap&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinmarketcap.com&quot;&gt;CoinMarketCap&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://coinmarketcap.com/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg&quot; alt=&quot;coinmate&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinmate&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0&quot;&gt;CoinMate&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://coinmate.docs.apiary.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinone.co.kr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg&quot; alt=&quot;coinone&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinone&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://coinone.co.kr&quot;&gt;CoinOne&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://doc.coinone.co.kr&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinspot.com.au/register?code=PJURCU&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg&quot; alt=&quot;coinspot&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinspot&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.coinspot.com.au/register?code=PJURCU&quot;&gt;CoinSpot&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.coinspot.com.au/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://crex24.com/?refid=slxsjsjtil8xexl9hksr&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/47813922-6f12cc00-dd5d-11e8-97c6-70f957712d47.jpg&quot; alt=&quot;crex24&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;crex24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://crex24.com/?refid=slxsjsjtil8xexl9hksr&quot;&gt;CREX24&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.crex24.com/trade-api/v2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg&quot; alt=&quot;currencycom&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;currencycom&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://currency.com/trading/signup?c=362jaimv&amp;amp;pid=referral&quot;&gt;Currency.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://currency.com/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.delta.exchange/app/signup/?code=IULYNB&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/99450025-3be60a00-2931-11eb-9302-f4fd8d8589aa.jpg&quot; alt=&quot;delta&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;delta&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.delta.exchange/app/signup/?code=IULYNB&quot;&gt;Delta Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.delta.exchange&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.deribit.com/reg-1189.4038&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg&quot; alt=&quot;deribit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;deribit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.deribit.com/reg-1189.4038&quot;&gt;Deribit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.deribit.com/v2&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443315-01283a00-c5fe-11ea-8628-c2a0feaf07ac.jpg&quot; alt=&quot;digifinex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;digifinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp&quot;&gt;DigiFinex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.digifinex.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://eqonex.com?referredByCode=zpa8kij4ouvBFup3&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/122649755-1a076c80-d138-11eb-8f2e-9a9166a03d79.jpg&quot; alt=&quot;eqonex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;eqonex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://eqonex.com?referredByCode=zpa8kij4ouvBFup3&quot;&gt;EQONEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developer.eqonex.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://eqonex.com?referredByCode=zpa8kij4ouvBFup3&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/107758499-05edd180-6d38-11eb-9e09-0b69602a7a15.jpg&quot; alt=&quot;equos&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;equos&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://eqonex.com?referredByCode=zpa8kij4ouvBFup3&quot;&gt;EQUOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developer.eqonex.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exmo.me/?ref=131685&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg&quot; alt=&quot;exmo&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;exmo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exmo.me/?ref=131685&quot;&gt;EXMO&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://exmo.me/en/api_doc?ref=131685&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1.1-lightgray&quot; alt=&quot;API Version 1.1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.exx.com/r/fde4260159e53ab8a58cc9186d35501f?recommQd=1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/37770292-fbf613d0-2de4-11e8-9f79-f2dc451b8ccb.jpg&quot; alt=&quot;exx&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;exx&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.exx.com/r/fde4260159e53ab8a58cc9186d35501f?recommQd=1&quot;&gt;EXX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.exx.com/help/restApi&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.flowbtc.com.br&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87443317-01c0d080-c5fe-11ea-95c2-9ebe1a8fafd9.jpg&quot; alt=&quot;flowbtc&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;flowbtc&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.flowbtc.com.br&quot;&gt;flowBTC&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.flowbtc.com.br/api.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ftx.com/#a=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg&quot; alt=&quot;ftx&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ftx&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ftx.com/#a=ccxt&quot;&gt;FTX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ftexchange/ftx&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.gate.io/ref/2436035&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg&quot; alt=&quot;gateio&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;gateio&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.gate.io/ref/2436035&quot;&gt;Gate.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.gate.io/docs/apiv4/en/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/4-lightgray&quot; alt=&quot;API Version 4&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://gemini.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg&quot; alt=&quot;gemini&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;gemini&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://gemini.com/&quot;&gt;Gemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.gemini.com/rest-api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hitbtc.com/?ref_id=5a5d39a65d466&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg&quot; alt=&quot;hitbtc&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hitbtc&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hitbtc.com/?ref_id=5a5d39a65d466&quot;&gt;HitBTC&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.hitbtc.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pro.hollaex.com/signup?affiliation_code=QSWA6G&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg&quot; alt=&quot;hollaex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hollaex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pro.hollaex.com/signup?affiliation_code=QSWA6G&quot;&gt;HollaEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apidocs.hollaex.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.huobi.com/en-us/topic/double-reward/?invite_code=6rmm2223&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg&quot; alt=&quot;huobi&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;huobi&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.huobi.com/en-us/topic/double-reward/?invite_code=6rmm2223&quot;&gt;Huobi&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://huobiapi.github.io/docs/spot/v1/cn/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://idex.io&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg&quot; alt=&quot;idex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;idex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://idex.io&quot;&gt;IDEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.idex.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.independentreserve.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg&quot; alt=&quot;independentreserve&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;independentreserve&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.independentreserve.com&quot;&gt;Independent Reserve&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.independentreserve.com/API&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://indodax.com/ref/testbitcoincoid/1&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg&quot; alt=&quot;indodax&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;indodax&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://indodax.com/ref/testbitcoincoid/1&quot;&gt;INDODAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/btcid/indodax-official-api-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2.0-lightgray&quot; alt=&quot;API Version 2.0&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.itbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg&quot; alt=&quot;itbit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;itbit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.itbit.com&quot;&gt;itBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.itbit.com/docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.kraken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg&quot; alt=&quot;kraken&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kraken&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.kraken.com&quot;&gt;Kraken&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.kraken.com/features/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/0-lightgray&quot; alt=&quot;API Version 0&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.kucoin.com/?rcode=E5wkqe&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg&quot; alt=&quot;kucoin&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kucoin&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.kucoin.com/?rcode=E5wkqe&quot;&gt;KuCoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.kucoin.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://kuna.io?r=kunaid-gvfihe8az7o4&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153927-f0578b80-c2c0-11ea-84b6-74612568e9e1.jpg&quot; alt=&quot;kuna&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kuna&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://kuna.io?r=kunaid-gvfihe8az7o4&quot;&gt;Kuna&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://kuna.io/documents/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://latoken.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg&quot; alt=&quot;latoken&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;latoken&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://latoken.com&quot;&gt;Latoken&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.latoken.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.lbex.io/invite?icode=7QCY&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg&quot; alt=&quot;lbank&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;lbank&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.lbex.io/invite?icode=7QCY&quot;&gt;LBank&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/LBank-exchange/lbank-official-api-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/45798859-1a872600-bcb4-11e8-8746-69291ce87b04.jpg&quot; alt=&quot;liquid&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;liquid&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976&quot;&gt;Liquid&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://developers.liquid.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.luno.com/invite/44893A&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg&quot; alt=&quot;luno&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;luno&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.luno.com/invite/44893A&quot;&gt;luno&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.luno.com/en/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.lykke.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg&quot; alt=&quot;lykke&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;lykke&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.lykke.com&quot;&gt;Lykke&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://hft-api.lykke.com/swagger/ui/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.mercadobitcoin.com.br&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg&quot; alt=&quot;mercado&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;mercado&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.mercadobitcoin.com.br&quot;&gt;Mercado Bitcoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.mercadobitcoin.com.br/api-doc&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://mixcoins.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460810-1dd06c00-c616-11ea-9276-956f400d6ffa.jpg&quot; alt=&quot;mixcoins&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;mixcoins&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://mixcoins.com&quot;&gt;MixCoins&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://mixcoins.com/help/api/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://one.ndax.io/bfQiSL&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/108623144-67a3ef00-744e-11eb-8140-75c6b851e945.jpg&quot; alt=&quot;ndax&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ndax&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://one.ndax.io/bfQiSL&quot;&gt;NDAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://apidoc.ndax.io/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.novadax.com.br/?s=ccxt&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg&quot; alt=&quot;novadax&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;novadax&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.novadax.com.br/?s=ccxt&quot;&gt;NovaDAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://doc.novadax.com/pt-BR/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://oceanex.pro/signup?referral=VE24QX&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg&quot; alt=&quot;oceanex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;oceanex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://oceanex.pro/signup?referral=VE24QX&quot;&gt;OceanEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.oceanex.pro/doc/v1&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg&quot; alt=&quot;okcoin&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okcoin&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513&quot;&gt;OKCoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.okcoin.com/docs/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg&quot; alt=&quot;okex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;OKEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.okex.com/docs/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/5-lightgray&quot; alt=&quot;API Version 5&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg&quot; alt=&quot;okex3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okex3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.okex.com/join/1888677&quot;&gt;OKEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.okex.com/docs/en/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg&quot; alt=&quot;paymium&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;paymium&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj&quot;&gt;Paymium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Paymium/api-documentation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://phemex.com/register?referralCode=EDNVJ&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg&quot; alt=&quot;phemex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;phemex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://phemex.com/register?referralCode=EDNVJ&quot;&gt;Phemex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/phemex/phemex-api-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://poloniex.com/signup?c=UBFZJRPJ&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg&quot; alt=&quot;poloniex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;poloniex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://poloniex.com/signup?c=UBFZJRPJ&quot;&gt;Poloniex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.poloniex.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.probit.com/r/34608773&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg&quot; alt=&quot;probit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;probit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.probit.com/r/34608773&quot;&gt;ProBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs-en.probit.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://qtrade.io/?ref=BKOQWVFGRH2C&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/80491487-74a99c00-896b-11ea-821e-d307e832f13e.jpg&quot; alt=&quot;qtrade&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;qtrade&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://qtrade.io/?ref=BKOQWVFGRH2C&quot;&gt;qTrade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://qtrade-exchange.github.io/qtrade-docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exchange.ripio.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/94507548-a83d6a80-0218-11eb-9998-28b9cec54165.jpg&quot; alt=&quot;ripio&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ripio&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://exchange.ripio.com&quot;&gt;Ripio&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://exchange.ripio.com/en/api/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.stex.com?ref=36416021&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg&quot; alt=&quot;stex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;stex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.stex.com?ref=36416021&quot;&gt;STEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://help.stex.com/en/collections/1593608-api-v3-documentation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://therocktrading.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg&quot; alt=&quot;therock&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;therock&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://therocktrading.com&quot;&gt;TheRockTrading&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://api.therocktrading.com/doc/v1/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://bit.ly/2IX0LrM&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87460811-1e690280-c616-11ea-8652-69f187305add.jpg&quot; alt=&quot;tidebit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;tidebit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://bit.ly/2IX0LrM&quot;&gt;TideBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.tidebit.com/documents/api/guide&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://tidex.com/exchange/?ref=57f5638d9cd7&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg&quot; alt=&quot;tidex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;tidex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://tidex.com/exchange/?ref=57f5638d9cd7&quot;&gt;Tidex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://tidex.com/exchange/public-api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://timex.io/?refcode=1x27vNkTbP1uwkCck&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg&quot; alt=&quot;timex&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;timex&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://timex.io/?refcode=1x27vNkTbP1uwkCck&quot;&gt;TimeX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.timex.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://upbit.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg&quot; alt=&quot;upbit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;upbit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://upbit.com&quot;&gt;Upbit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://vcc.exchange?ref=l4xhrH&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/100545356-8427f500-326c-11eb-9539-7d338242d61b.jpg&quot; alt=&quot;vcc&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;vcc&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://vcc.exchange?ref=l4xhrH&quot;&gt;VCC Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://vcc.exchange/api&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://waves.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg&quot; alt=&quot;wavesexchange&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;wavesexchange&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://waves.exchange&quot;&gt;Waves.Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.waves.exchange&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg&quot; alt=&quot;whitebit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;whitebit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963&quot;&gt;WhiteBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://documenter.getpostman.com/view/7473075/Szzj8dgv?version=latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/2-lightgray&quot; alt=&quot;API Version 2&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://xena.exchange&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51840849/87489843-bb469280-c64c-11ea-91aa-69c6326506af.jpg&quot; alt=&quot;xena&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;xena&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://xena.exchange&quot;&gt;Xena Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://support.xena.exchange/support/solutions/44000808700&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/*-lightgray&quot; alt=&quot;API Version *&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.yobit.net&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg&quot; alt=&quot;yobit&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;yobit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.yobit.net&quot;&gt;YoBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.yobit.net/en/api/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/3-lightgray&quot; alt=&quot;API Version 3&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://zaif.jp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg&quot; alt=&quot;zaif&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;zaif&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://zaif.jp&quot;&gt;Zaif&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://techbureau-api-document.readthedocs.io/ja/latest/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.zbex.club/en/register?ref=4301lera&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg&quot; alt=&quot;zb&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;zb&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.zbex.club/en/register?ref=4301lera&quot;&gt;ZB&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.zb.com/i/developer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/1-lightgray&quot; alt=&quot;API Version 1&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/wiki/Certification&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true&quot; alt=&quot;CCXT Certified&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ccxt.pro&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CCXT-Pro-black&quot; alt=&quot;CCXT Pro&quot;&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the &lt;a href=&quot;https://ccxt.readthedocs.io/en/latest/manual.html&quot;&gt;Manual&lt;/a&gt; for more details. If you can&#39;t find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email.&lt;/p&gt; 
&lt;p&gt;The library is under &lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;, that means it&#39;s absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install the CCXT library is to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt; (JavaScript / Node v7.6+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt; (Python 3.5.3+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://packagist.org/packages/ccxt/ccxt&quot;&gt;ccxt in &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 5.4+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/js/&quot;&gt;js/&lt;/a&gt; in JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/python/&quot;&gt;python/&lt;/a&gt; in Python (generated from JS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/php/&quot;&gt;php/&lt;/a&gt; in PHP (generated from JS)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also clone it into your project directory from &lt;a href=&quot;https://github.com/ccxt/ccxt&quot;&gt;ccxt GitHub repository&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/ccxt/ccxt.git  # including 1GB of commit history

# or

git clone https://github.com/ccxt/ccxt.git --depth 1  # avoid downloading 1GB of commit history
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (NPM)&lt;/h3&gt; 
&lt;p&gt;JavaScript version of CCXT works in both Node and web browsers. Requires ES6 and &lt;code&gt;async/await&lt;/code&gt; syntax support (Node 7.6.0+). When compiling with Webpack and Babel, make sure it is &lt;a href=&quot;https://github.com/ccxt/ccxt/issues/225#issuecomment-331905178&quot;&gt;not excluded&lt;/a&gt; in your &lt;code&gt;babel-loader&lt;/code&gt; config.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/ccxt&quot;&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;var ccxt = require (&#39;ccxt&#39;)

console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (for use with the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag):&lt;/h3&gt; 
&lt;p&gt;All-in-one browser bundle (dependencies included), served from a CDN of your choice:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;jsDelivr: &lt;a href=&quot;https://cdn.jsdelivr.net/npm/ccxt@1.57.7/dist/ccxt.browser.js&quot;&gt;https://cdn.jsdelivr.net/npm/ccxt@1.57.7/dist/ccxt.browser.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;unpkg: &lt;a href=&quot;https://unpkg.com/ccxt@1.57.7/dist/ccxt.browser.js&quot;&gt;https://unpkg.com/ccxt@1.57.7/dist/ccxt.browser.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CDNs are not updated in real-time and may have delays. Defaulting to the most recent version without specifying the version number is not recommended. Please, keep in mind that we are not responsible for the correct operation of those CDN servers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/npm/ccxt@1.57.7/dist/ccxt.browser.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Creates a global &lt;code&gt;ccxt&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://pypi.python.org/pypi/ccxt&quot;&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pip install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import ccxt
print(ccxt.exchanges) # print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The library supports concurrent asynchronous mode with asyncio and async/await in Python 3.5.3+&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import ccxt.async_support as ccxt # link against the asynchronous version of ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://packagist.org/packages/ccxt/ccxt&quot;&gt;ccxt in PHP with &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 5.4+)&lt;/p&gt; 
&lt;p&gt;It requires common PHP modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cURL&lt;/li&gt; 
 &lt;li&gt;mbstring (using UTF-8 is highly recommended)&lt;/li&gt; 
 &lt;li&gt;PCRE&lt;/li&gt; 
 &lt;li&gt;iconv&lt;/li&gt; 
 &lt;li&gt;gmp (this is a built-in extension as of PHP 7.2+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;include &quot;ccxt.php&quot;;
var_dump (\ccxt\Exchange::$exchanges); // print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The library supports concurrent asynchronous mode using tools from &lt;a href=&quot;https://github.com/recoilphp/recoil&quot;&gt;RecoilPHP&lt;/a&gt; and &lt;a href=&quot;https://reactphp.org/&quot;&gt;ReactPHP&lt;/a&gt; in PHP 7.1+. Read the &lt;a href=&quot;https://ccxt.readthedocs.io/en/latest/manual.html&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests — please see the &lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; document for the details on that).&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;docker-compose&lt;/code&gt; (in the cloned CCXT repository):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose run --rm ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You don&#39;t need the Docker image if you&#39;re not going to develop CCXT. If you just want to use CCXT –&amp;nbsp;just install it as a regular package into your project.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://ccxt.readthedocs.io/en/latest/manual.html&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Intro&lt;/h3&gt; 
&lt;p&gt;The CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key.&lt;/p&gt; 
&lt;p&gt;Public APIs include the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;market data&lt;/li&gt; 
 &lt;li&gt;instruments/trading pairs&lt;/li&gt; 
 &lt;li&gt;price feeds (exchange rates)&lt;/li&gt; 
 &lt;li&gt;order books&lt;/li&gt; 
 &lt;li&gt;trade history&lt;/li&gt; 
 &lt;li&gt;tickers&lt;/li&gt; 
 &lt;li&gt;OHLC(V) for charting&lt;/li&gt; 
 &lt;li&gt;other public endpoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In order to trade with private APIs you need to obtain API keys from an exchange&#39;s website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don&#39;t. You will have to sign up and create API keys on their websites.&lt;/p&gt; 
&lt;p&gt;Private APIs allow the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;manage personal account info&lt;/li&gt; 
 &lt;li&gt;query account balances&lt;/li&gt; 
 &lt;li&gt;trade by making market and limit orders&lt;/li&gt; 
 &lt;li&gt;deposit and withdraw fiat and crypto funds&lt;/li&gt; 
 &lt;li&gt;query personal orders&lt;/li&gt; 
 &lt;li&gt;get ledger history&lt;/li&gt; 
 &lt;li&gt;transfer funds between accounts&lt;/li&gt; 
 &lt;li&gt;use merchant services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library implements full public and private REST APIs for all exchanges. WebSocket and FIX implementations in JavaScript, PHP, Python are available in &lt;a href=&quot;https://ccxt.pro&quot;&gt;CCXT Pro&lt;/a&gt;, which is a professional addon to CCXT with support for WebSocket streams.&lt;/p&gt; 
&lt;p&gt;The CCXT library supports both camelcase notation (preferred in JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;// both of these notations work in JavaScript/Python/PHP
exchange.methodName ()  // camelcase pseudocode
exchange.method_name () // underscore pseudocode
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://ccxt.readthedocs.io/en/latest/manual.html&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;JavaScript&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;&#39;use strict&#39;;
const ccxt = require (&#39;ccxt&#39;);

(async function () {
    let kraken    = new ccxt.kraken ()
    let bitfinex  = new ccxt.bitfinex ({ verbose: true })
    let huobipro  = new ccxt.huobipro ()
    let okcoinusd = new ccxt.okcoin ({
        apiKey: &#39;YOUR_PUBLIC_API_KEY&#39;,
        secret: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
    })

    const exchangeId = &#39;binance&#39;
        , exchangeClass = ccxt[exchangeId]
        , exchange = new exchangeClass ({
            &#39;apiKey&#39;: &#39;YOUR_API_KEY&#39;,
            &#39;secret&#39;: &#39;YOUR_SECRET&#39;,
        })

    console.log (kraken.id,    await kraken.loadMarkets ())
    console.log (bitfinex.id,  await bitfinex.loadMarkets  ())
    console.log (huobipro.id,  await huobipro.loadMarkets ())

    console.log (kraken.id,    await kraken.fetchOrderBook (kraken.symbols[0]))
    console.log (bitfinex.id,  await bitfinex.fetchTicker (&#39;BTC/USD&#39;))
    console.log (huobipro.id,  await huobipro.fetchTrades (&#39;ETH/USDT&#39;))

    console.log (okcoinusd.id, await okcoinusd.fetchBalance ())

    // sell 1 BTC/USD for market price, sell a bitcoin for dollars immediately
    console.log (okcoinusd.id, await okcoinusd.createMarketSellOrder (&#39;BTC/USD&#39;, 1))

    // buy 1 BTC/USD for $2500, you pay $2500 and receive ฿1 when the order is closed
    console.log (okcoinusd.id, await okcoinusd.createLimitBuyOrder (&#39;BTC/USD&#39;, 1, 2500.00))

    // pass/redefine custom exchange-specific order params: type, amount, price or whatever
    // use a custom order type
    bitfinex.createLimitSellOrder (&#39;BTC/USD&#39;, 1, 10, { &#39;type&#39;: &#39;trailing-stop&#39; })

}) ();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# coding=utf-8

import ccxt

hitbtc   = ccxt.hitbtc({&#39;verbose&#39;: True})
bitmex   = ccxt.bitmex()
huobipro = ccxt.huobipro()
exmo     = ccxt.exmo({
    &#39;apiKey&#39;: &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
})
kraken = ccxt.kraken({
    &#39;apiKey&#39;: &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
})

exchange_id = &#39;binance&#39;
exchange_class = getattr(ccxt, exchange_id)
exchange = exchange_class({
    &#39;apiKey&#39;: &#39;YOUR_API_KEY&#39;,
    &#39;secret&#39;: &#39;YOUR_SECRET&#39;,
})

hitbtc_markets = hitbtc.load_markets()

print(hitbtc.id, hitbtc_markets)
print(bitmex.id, bitmex.load_markets())
print(huobipro.id, huobipro.load_markets())

print(hitbtc.fetch_order_book(hitbtc.symbols[0]))
print(bitmex.fetch_ticker(&#39;BTC/USD&#39;))
print(huobipro.fetch_trades(&#39;LTC/USDT&#39;))

print(exmo.fetch_balance())

# sell one ฿ for market price and receive $ right now
print(exmo.id, exmo.create_market_sell_order(&#39;BTC/USD&#39;, 1))

# limit buy BTC/EUR, you pay €2500 and receive ฿1  when the order is closed
print(exmo.id, exmo.create_limit_buy_order(&#39;BTC/EUR&#39;, 1, 2500.00))

# pass/redefine custom exchange-specific order params: type, amount, price, flags, etc...
kraken.create_market_buy_order(&#39;BTC/USD&#39;, 1, {&#39;trading_agreement&#39;: &#39;agree&#39;})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;include &#39;ccxt.php&#39;;

$poloniex = new \ccxt\poloniex ();
$bittrex  = new \ccxt\bittrex  (array (&#39;verbose&#39; =&amp;gt; true));
$quoinex  = new \ccxt\quoinex   ();
$zaif     = new \ccxt\zaif     (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
));
$hitbtc   = new \ccxt\hitbtc   (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_PUBLIC_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET_PRIVATE_KEY&#39;,
));

$exchange_id = &#39;binance&#39;;
$exchange_class = &quot;\\ccxt\\$exchange_id&quot;;
$exchange = new $exchange_class (array (
    &#39;apiKey&#39; =&amp;gt; &#39;YOUR_API_KEY&#39;,
    &#39;secret&#39; =&amp;gt; &#39;YOUR_SECRET&#39;,
));

$poloniex_markets = $poloniex-&amp;gt;load_markets ();

var_dump ($poloniex_markets);
var_dump ($bittrex-&amp;gt;load_markets ());
var_dump ($quoinex-&amp;gt;load_markets ());

var_dump ($poloniex-&amp;gt;fetch_order_book ($poloniex-&amp;gt;symbols[0]));
var_dump ($bittrex-&amp;gt;fetch_trades (&#39;BTC/USD&#39;));
var_dump ($quoinex-&amp;gt;fetch_ticker (&#39;ETH/EUR&#39;));
var_dump ($zaif-&amp;gt;fetch_ticker (&#39;BTC/JPY&#39;));

var_dump ($zaif-&amp;gt;fetch_balance ());

// sell 1 BTC/JPY for market price, you pay ¥ and receive ฿ immediately
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_market_sell_order (&#39;BTC/JPY&#39;, 1));

// buy BTC/JPY, you receive ฿1 for ¥285000 when the order closes
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_limit_buy_order (&#39;BTC/JPY&#39;, 1, 285000));

// set a custom user-defined id to your order
$hitbtc-&amp;gt;create_order (&#39;BTC/USD&#39;, &#39;limit&#39;, &#39;buy&#39;, 1, 3000, array (&#39;clientOrderId&#39; =&amp;gt; &#39;123&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://github.com/ccxt/ccxt/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; document before making changes that you would like adopted in the code. Also, read the &lt;a href=&quot;https://ccxt.readthedocs.io/en/latest/manual.html&quot;&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Support Developer Team&lt;/h2&gt; 
&lt;p&gt;We are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://opencollective.com/ccxt#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Supporters&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a supporter. Your avatar will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://opencollective.com/ccxt#supporter&quot;&gt;Become a supporter&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/ccxt/tiers/supporter/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/supporter/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! [&lt;a href=&quot;https://opencollective.com/ccxt#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/ccxt#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/ccxt/tiers/backer.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thank you!&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/ccxt_official&quot;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@ccxt&quot;&gt;Read our blog on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href=&quot;https://discord.gg/dhzSKYU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt;&lt;/sub&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;For business inquiries: &lt;a href=&quot;mailto:info@ccxt.trade&quot;&gt;info@ccxt.trade&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>portainer/portainer</title>
      <link>https://github.com/portainer/portainer</link>
      <description>&lt;p&gt;Making Docker and Kubernetes management easy.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img title=&quot;portainer&quot; src=&quot;https://github.com/portainer/portainer/raw/develop/app/assets/images/portainer-github-banner.png?raw=true&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Portainer CE&lt;/strong&gt; is a lightweight ‘universal’ management GUI that can be used to &lt;strong&gt;easily&lt;/strong&gt; manage Docker, Swarm, Kubernetes and ACI environments. It is designed to be as &lt;strong&gt;simple&lt;/strong&gt; to deploy as it is to use.&lt;/p&gt; 
&lt;p&gt;Portainer consists of a single container that can run on any cluster. It can be deployed as a Linux container or a Windows native container.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Portainer&lt;/strong&gt; allows you to manage all your orchestrator resources (containers, images, volumes, networks and more) through a super-simple graphical interface.&lt;/p&gt; 
&lt;p&gt;A fully supported version of Portainer is available for business use. Visit &lt;a href=&quot;http://www.portainer.io&quot;&gt;http://www.portainer.io&lt;/a&gt; to learn more&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;You can try out the public demo instance: &lt;a href=&quot;http://demo.portainer.io/&quot;&gt;http://demo.portainer.io/&lt;/a&gt; (login with the username &lt;strong&gt;admin&lt;/strong&gt; and the password &lt;strong&gt;tryportainer&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;Please note that the public demo cluster is &lt;strong&gt;reset every 15min&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Latest Version&lt;/h2&gt; 
&lt;p&gt;Portainer CE is updated regularly. We aim to do an update release every couple of months.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The latest version of Portainer is 2.6.x&lt;/strong&gt; And you can find the release notes &lt;a href=&quot;https://www.portainer.io/blog/new-portainer-ce-2.6.0-release&quot;&gt;here.&lt;/a&gt; Portainer is on version 2, the second number denotes the month of release.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io/quickstart/&quot;&gt;Deploy Portainer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io/contributing/instructions/&quot;&gt;Contribute to the project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features &amp;amp; Functions&lt;/h2&gt; 
&lt;p&gt;View &lt;a href=&quot;https://www.portainer.io/products&quot;&gt;this&lt;/a&gt; table to see all of the Portainer CE functionality and compare to Portainer Business.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.portainer.io/solutions/docker&quot;&gt;Portainer CE for Docker / Docker Swarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.portainer.io/solutions/kubernetes-ui&quot;&gt;Portainer CE for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.portainer.io/solutions/serverless-containers&quot;&gt;Portainer CE for Azure ACI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;Portainer CE is an open source project and is supported by the community. You can buy a supported version of Portainer at portainer.io&lt;/p&gt; 
&lt;p&gt;Learn more about Portainers community support channels &lt;a href=&quot;https://www.portainer.io/help_about&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues: &lt;a href=&quot;https://github.com/portainer/portainer/issues&quot;&gt;https://github.com/portainer/portainer/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack (chat): &lt;a href=&quot;https://join.slack.com/t/portainer/shared_invite/zt-txh3ljab-52QHTyjCqbe5RibC2lcjKA&quot;&gt;https://portainer.slack.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can join the Portainer Community by visiting community.portainer.io. This will give you advance notice of events, content and other related Portainer content.&lt;/p&gt; 
&lt;h2&gt;Reporting bugs and contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Want to report a bug or request a feature? Please open &lt;a href=&quot;https://github.com/portainer/portainer/issues/new&quot;&gt;an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to help us build &lt;strong&gt;&lt;em&gt;portainer&lt;/em&gt;&lt;/strong&gt;? Follow our &lt;a href=&quot;https://documentation.portainer.io/contributing/instructions/&quot;&gt;contribution guidelines&lt;/a&gt; to build it locally and make a pull request. We need all the help we can get!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Here at Portainer, we believe in &lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;responsible disclosure&lt;/a&gt; of security issues. If you have found a security issue, please report it to &lt;a href=&quot;mailto:security@portainer.io&quot;&gt;security@portainer.io&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;WORK FOR US&lt;/h2&gt; 
&lt;p&gt;If you are a developer, and our code in this repo makes sense to you, we would love to hear from you. We are always on the hunt for awesome devs, either freelance or employed. Drop us a line to &lt;a href=&quot;mailto:info@portainer.io&quot;&gt;info@portainer.io&lt;/a&gt; with your details and we will be in touch.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To make sure we focus our development effort in the right places we need to know which features get used most often. To give us this information we use &lt;a href=&quot;https://matomo.org/&quot;&gt;Matomo Analytics&lt;/a&gt;, which is hosted in Germany and is fully GDPR compliant.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;When Portainer first starts, you are given the option to DISABLE analytics. If you &lt;strong&gt;don&#39;t&lt;/strong&gt; choose to disable it, we collect anonymous usage as per &lt;a href=&quot;https://www.portainer.io/documentation/in-app-analytics-and-privacy-policy/&quot;&gt;our privacy policy&lt;/a&gt;. &lt;strong&gt;Please note&lt;/strong&gt;, there is no personally identifiable information sent or stored at any time and we only use the data to help us improve Portainer.&lt;/p&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;p&gt;Portainer supports &quot;Current - 2 docker versions only. Prior versions may operate, however these are not supported.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Portainer is licensed under the zlib license. See &lt;a href=&quot;https://raw.githubusercontent.com/portainer/portainer/develop/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;p&gt;Portainer also contains code from open source projects. See &lt;a href=&quot;https://raw.githubusercontent.com/portainer/portainer/develop/ATTRIBUTIONS.md&quot;&gt;ATTRIBUTIONS.md&lt;/a&gt; for a list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;💯 Curated interview preparation materials for busy engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/website/static/img/logo.svg?sanitize=true&quot; alt=&quot;Tech Interview Handbook&quot; width=&quot;400&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready to Code&quot;&gt; &lt;/a&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;em&gt;Credits: &lt;a href=&quot;https://dribbble.com/shots/3831443-Tech-Interview-Handbook&quot;&gt;Illustration&lt;/a&gt; by &lt;a href=&quot;https://dribbble.com/leftaligned&quot;&gt;@leftaligned&lt;/a&gt;&lt;/em&gt; &lt;/p&gt; 
 &lt;h3&gt; &lt;a href=&quot;https://techinterviewhandbook.org/&quot;&gt;Read on the website&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/techinterviewhandbook&quot;&gt;Follow us on Facebook&lt;/a&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;Get paid more. Moonchaser has negotiated hundreds of tech offers. Get 1-1 guidance from their experienced team of ex-FAANG PMs, SWEs, and Recruiters. &lt;a href=&quot;https://www.moonchaser.io/?utm_source=techinterviewhandbook&amp;amp;utm_medium=referral&amp;amp;utm_content=github&quot; target=&quot;_blank&quot;&gt;Find out more&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;No one has time to do a few hundred LeetCode questions. Here&#39;s &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by the author of the &lt;a href=&quot;https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU&quot;&gt;Blind 75 List&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/coding-round-overview&quot;&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/cheatsheet&quot;&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/algorithms/introduction&quot;&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/interview-formats&quot;&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/behavioral-questions&quot;&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/questions-to-ask&quot;&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://techinterviewhandbook.org/resume&quot;&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do&#39;s and Don&#39;ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendinterviewhandbook.com&quot;&gt;Front-End Interview preparation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why do I want this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;em&gt;practical&lt;/em&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;💡 Looking for high quality interview courses? &lt;a href=&quot;https://www.educative.io/explore?search_string=interview&amp;amp;aff=x23W&quot;&gt;Educative&lt;/a&gt; offers a ton of great courses to improve your interview game 💡&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front end-related content have been moved to a separate website - &lt;a href=&quot;https://frontendinterviewhandbook.com&quot;&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Looking for System Design content?&lt;/h2&gt; 
&lt;p&gt;We&#39;re still working on System Design content. In the meanwhile, check out Educative&#39;s &lt;a href=&quot;https://www.educative.io/courses/grokking-the-system-design-interview?aff=x23W&quot;&gt;Grokking the System Design Interview course&lt;/a&gt;, which in our opinion is one of the most useful resources for getting started on system design interviews preparation.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href=&quot;https://github.com/facebook/docusaurus&quot;&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href=&quot;https://techinterviewhandbook.org&quot;&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href=&quot;https://github.com/yangshun/lago&quot;&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Online one-click setup for contributing&lt;/h3&gt; 
&lt;p&gt;You can use Gitpod (A free online VS Code-like IDE) for contributing online. With a single click it will launch a workspace and automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the tech-interview-handbook repo.&lt;/li&gt; 
 &lt;li&gt;install the dependencies.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So that you can start straight away.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook&quot;&gt;&lt;img src=&quot;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&quot; alt=&quot;Open in Gitpod&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href=&quot;https://raw.githubusercontent.com/yangshun/tech-interview-handbook/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://github.com/yangshun/tech-interview-handbook/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/backers.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/yangshun&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: auto !important; width: auto !important;&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/tech-interview-handbook#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangshun&quot;&gt;Yangshun Tay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/louietyj&quot;&gt;Louie Tan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenZeppelin/openzeppelin-contracts</title>
      <link>https://github.com/OpenZeppelin/openzeppelin-contracts</link>
      <description>&lt;p&gt;OpenZeppelin Contracts is a library for secure smart contract development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/logo.svg?sanitize=true&quot; alt=&quot;OpenZeppelin&quot; height=&quot;40px&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-%F0%9F%93%84-blue&quot; alt=&quot;Docs&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/@openzeppelin/contracts&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@openzeppelin/contracts.svg?sanitize=true&quot; alt=&quot;NPM Package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A library for secure smart contract development.&lt;/strong&gt; Build on a solid foundation of community-vetted code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implementations of standards like &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc20&quot;&gt;ERC20&lt;/a&gt; and &lt;a href=&quot;https://docs.openzeppelin.com/contracts/erc721&quot;&gt;ERC721&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;role-based permissioning&lt;/a&gt; scheme.&lt;/li&gt; 
 &lt;li&gt;Reusable &lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Solidity components&lt;/a&gt; to build custom contracts and complex decentralized systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;🧙&lt;/span&gt; &lt;strong&gt;Not sure how to get started?&lt;/strong&gt; Check out &lt;a href=&quot;https://wizard.openzeppelin.com/&quot;&gt;Contracts Wizard&lt;/a&gt; — an interactive smart contract generator.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ npm install @openzeppelin/contracts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;OpenZeppelin Contracts features a &lt;a href=&quot;https://docs.openzeppelin.com/contracts/releases-stability#api-stability&quot;&gt;stable API&lt;/a&gt;, which means your contracts won&#39;t break unexpectedly when upgrading to a newer minor version.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, you can use the contracts in the library by importing them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-solidity&quot;&gt;pragma solidity ^0.8.0;

import &quot;@openzeppelin/contracts/token/ERC721/ERC721.sol&quot;;

contract MyCollectible is ERC721 {
    constructor() ERC721(&quot;MyCollectible&quot;, &quot;MCO&quot;) {
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;If you&#39;re new to smart contract development, head to &lt;a href=&quot;https://docs.openzeppelin.com/learn/developing-smart-contracts&quot;&gt;Developing Smart Contracts&lt;/a&gt; to learn about creating a new project and compiling your contracts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To keep your system secure, you should &lt;strong&gt;always&lt;/strong&gt; use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don&#39;t need to worry about it needlessly increasing gas costs.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;The guides in the &lt;a href=&quot;https://docs.openzeppelin.com/contracts&quot;&gt;docs site&lt;/a&gt; will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/access-control&quot;&gt;Access Control&lt;/a&gt;: decide who can perform each of the actions on your system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/tokens&quot;&gt;Tokens&lt;/a&gt;: create tradeable assets or collectives, and distribute them via &lt;a href=&quot;https://docs.openzeppelin.com/contracts/crowdsales&quot;&gt;Crowdsales&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/gsn&quot;&gt;Gas Station Network&lt;/a&gt;: let your users interact with your contracts without having to pay for gas themselves.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openzeppelin.com/contracts/utilities&quot;&gt;Utilities&lt;/a&gt;: generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.openzeppelin.com/contracts/api/token/ERC20&quot;&gt;full API&lt;/a&gt; is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts&#39;s development in the &lt;a href=&quot;https://forum.openzeppelin.com&quot;&gt;community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you may want to take a look at the &lt;a href=&quot;https://blog.openzeppelin.com/guides&quot;&gt;guides on our blog&lt;/a&gt;, which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05&quot;&gt;The Hitchhiker’s Guide to Smart Contracts in Ethereum&lt;/a&gt; will help you get an overview of the various tools available for smart contract development, and help you set up your environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094&quot;&gt;A Gentle Introduction to Ethereum Programming, Part 1&lt;/a&gt; provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.&lt;/li&gt; 
 &lt;li&gt;For a more in-depth dive, you may read the guide &lt;a href=&quot;https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317&quot;&gt;Designing the Architecture for Your Ethereum Application&lt;/a&gt;, which discusses how to better structure your application and its relationship to the real world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;This project is maintained by &lt;a href=&quot;https://openzeppelin.com&quot;&gt;OpenZeppelin&lt;/a&gt;, and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.&lt;/p&gt; 
&lt;p&gt;The core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.&lt;/p&gt; 
&lt;p&gt;The latest audit was done on October 2018 on version 2.0.0.&lt;/p&gt; 
&lt;p&gt;Please report any security issues you find to &lt;a href=&quot;mailto:security@openzeppelin.org&quot;&gt;security@openzeppelin.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Critical bug fixes will be backported to past major releases.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenZeppelin Contracts is released under the &lt;a href=&quot;https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HashLips/generative-art-node</title>
      <link>https://github.com/HashLips/generative-art-node</link>
      <description>&lt;p&gt;Create generative art by using the canvas api and node js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to HashLips 👄&lt;/h1&gt; 
&lt;p&gt;Important: There is a new repo for this code. &lt;a href=&quot;https://github.com/HashLips/hashlips_art_engine&quot;&gt;https://github.com/HashLips/hashlips_art_engine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;All the code in these repos was created and explained by HashLips on the main YouTube channel.&lt;/p&gt; 
&lt;p&gt;To find out more please visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC1LV4_VQGBJHTJjEWUmy8nA&quot;&gt;📺 YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.com/invite/qh6MWhMJDN&quot;&gt;👄 Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/hashlipsnft&quot;&gt;💬 Telegram&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashlipsnft&quot;&gt;🐦 Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hashlips.online/HashLips&quot;&gt;ℹ️ Website&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;generative-art-node&lt;/h1&gt; 
&lt;p&gt;Create generative art by using the canvas api and node js&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/HashLips/generative-art-node/raw/main/src/preview.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/HashLips/generative-art-node

yarn install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Create your different layers as folders in the &#39;layers&#39; directory, and add all the layer assets in these directories. Optionally, append &#39;_r&#39; and &#39;_sr&#39; to the layer file names to make those layer files rare or super rare respectively.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you had an ball layer you would create a ball directory, and then a file might be called:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;red_eye_ball_sr.png&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;red_eye_ball_r.png&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;red_eye_ball.png&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Rarity is customizable in &lt;code&gt;src/config.js&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once you have all your layers, go into &lt;code&gt;src/config.js&lt;/code&gt; and update the &lt;code&gt;layersOrder&lt;/code&gt; array to be your layer folders name in order of the back layer to the front layer.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt; If you were creating a portrait design, you might have a background, then a head, a mouth, eyes, eyewear, and then headwear, so your &lt;code&gt;layersOrder&lt;/code&gt; would look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const layersOrder = [
    { name: &#39;background&#39;, number: 1 },
    { name: &#39;ball&#39;, number: 2 },
    { name: &#39;eye color&#39;, number: 12 },
    { name: &#39;iris&#39;, number: 3 },
    { name: &#39;shine&#39;, number: 1 },
    { name: &#39;bottom lid&#39;, number: 3 },
    { name: &#39;top lid&#39;, number: 3 },
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;name&lt;/code&gt; of each layer object represents the name of the folder (in &lt;code&gt;/layers/&lt;/code&gt;) that the images reside in. The &lt;code&gt;number&lt;/code&gt; of each layer object represents the total number of image files you want to select from (possibly including blanks.) For instance, if you have three images in a layer folder and want to pick one of those each time, the &lt;code&gt;number&lt;/code&gt; should be &lt;code&gt;3&lt;/code&gt;. If you have a single image in a layer that you want to increase the rarity of to 1 in 100, the &lt;code&gt;number&lt;/code&gt; for that layer should be &lt;code&gt;100&lt;/code&gt;. In this case, 99 times out of 100, you will get a completely transparent layer.&lt;/p&gt; 
&lt;p&gt;Then optionally, update your &lt;code&gt;format&lt;/code&gt; size, ie the outputted image size, and the defaultEdition, which is the amount of variation outputted.&lt;/p&gt; 
&lt;p&gt;When you are all ready, run the following command and your outputted art will be in the &lt;code&gt;build&lt;/code&gt; directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>30-seconds/30-seconds-of-code</title>
      <link>https://github.com/30-seconds/30-seconds-of-code</link>
      <description>&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/logo.png&quot; alt=&quot;Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;30 seconds of code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit &lt;a href=&quot;https://30secondsofcode.org&quot;&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://30secondsofcode.org/search&quot;&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet&#39;s description. Just start typing a term and see what comes up.&lt;/li&gt; 
 &lt;li&gt;Browse the &lt;a href=&quot;https://30secondsofcode.org/js/p/1&quot;&gt;JavaScript Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt; 
 &lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt; 
 &lt;li&gt;You can use the button at the bottom of a snippet card to copy the code to clipboard.&lt;/li&gt; 
 &lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to help us improve, take a minute to read the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;a href=&quot;https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/snippet-template.md&quot;&gt;Snippet Template&lt;/a&gt; to add new snippets to the collection.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with a specific snippet, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-of-code/issues/new&quot;&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you find a problem with the website, please &lt;a href=&quot;https://github.com/30-seconds/30-seconds-web/issues/new&quot;&gt;report it in the web repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is maintained by the &lt;a href=&quot;https://github.com/30-seconds&quot;&gt;30 seconds of code organization on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.&lt;/li&gt; 
 &lt;li&gt;Logos, names and trademarks are not to be used without the explicit consent of the owners of the 30 seconds of code GitHub organization.&lt;/li&gt; 
 &lt;li&gt;Our website is powered by &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jgraph/drawio-desktop</title>
      <link>https://github.com/jgraph/drawio-desktop</link>
      <description>&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a &lt;strong&gt;diagrams.net&lt;/strong&gt; desktop app based on &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. draw.io is the old name for diagrams.net, we just don&#39;t want the hassle of changing all the binary&#39;s names.&lt;/p&gt; 
&lt;p&gt;Download built binaries from the &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;releases section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; 
&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To run this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; &lt;em&gt;in the root directory of this repo&lt;/em&gt; runs the app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To release:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; 
 &lt;li&gt;Wait for the builds to complete (&lt;a href=&quot;https://travis-ci.org/jgraph/drawio-desktop&quot;&gt;https://travis-ci.org/jgraph/drawio-desktop&lt;/a&gt; and &lt;a href=&quot;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&quot;&gt;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases&quot;&gt;https://github.com/jgraph/drawio-desktop/releases&lt;/a&gt;, edit the preview release.&lt;/li&gt; 
 &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add release notes&lt;/li&gt; 
 &lt;li&gt;Publish release&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mui-org/material-ui</title>
      <link>https://github.com/mui-org/material-ui</link>
      <description>&lt;p&gt;Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://mui.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; src=&quot;https://mui.com/static/logo.svg?sanitize=true&quot; alt=&quot;MUI logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;MUI&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;Quickly build beautiful &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; apps. MUI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with &lt;a href=&quot;https://material.io/design/introduction/&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mui-org/material-ui/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mui/material/latest.svg?sanitize=true&quot; alt=&quot;npm latest package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@mui/material/next.svg?sanitize=true&quot; alt=&quot;npm next package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@mui/material.svg?sanitize=true&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.circleci.com/pipelines/github/mui-org/material-ui?branch=next&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/mui-org/material-ui/branch/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MaterialUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mui-org/material-ui/issues/27062&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/renovate-enabled-brightgreen.svg?sanitize=true&quot; alt=&quot;Renovate status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://isitmaintained.com/project/mui-org/material-ui&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg?sanitize=true&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.mui.com/project/material-ui-docs&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/material-ui-docs/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/material-ui&quot; alt=&quot;Open Collective backers and sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;MUI is available as an &lt;a href=&quot;https://www.npmjs.com/package/@mui/material&quot;&gt;npm package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://mui.com/&quot;&gt;Stable channel v5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @mui/material @emotion/react @emotion/styled

// with yarn
yarn add @mui/material @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Older versions&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v4.mui.com/&quot;&gt;v4.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://mui.com/guides/migration-v4/&quot;&gt;Migration from v4 to v5&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v3.mui.com/&quot;&gt;v3.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://mui.com/guides/migration-v3/&quot;&gt;Migration from v3 to v4&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v0.mui.com/&quot;&gt;v0.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://mui.com/guides/migration-v0x/&quot;&gt;Migration to v1&lt;/a&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;Please note that &lt;code&gt;@next&lt;/code&gt; will only point to pre-releases; to get the latest stable release use &lt;code&gt;@latest&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Who sponsors MUI?&lt;/h2&gt; 
&lt;h3&gt;Diamond 💎&lt;/h3&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;octopus&quot; href=&quot;https://octopus.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/1287123?s=256&quot; alt=&quot;octopus&quot; title=&quot;Repeatable, reliable deployments&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;doit-intl&quot; href=&quot;https://www.doit-intl.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/8424863?s=256&quot; alt=&quot;doit-intl&quot; title=&quot;Management Platform for Google Cloud and AWS&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Diamond Sponsors are those who have pledged $1,500/month or more to MUI.&lt;/p&gt; 
&lt;h3&gt;Gold 🏆&lt;/h3&gt; 
&lt;p&gt;via &lt;a href=&quot;https://www.patreon.com/oliviertassinari&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;tidelift&quot; href=&quot;https://tidelift.com/subscription/pkg/npm-material-ui?utm_source=npm-material-ui&amp;amp;utm_medium=referral&amp;amp;utm_campaign=homepage&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/tidelift.png?size=192&quot; alt=&quot;tidelift&quot; title=&quot;Enterprise-ready open-source software&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;bitsrc&quot; href=&quot;https://bit.dev/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/teambit.png?size=192&quot; alt=&quot;bitsrc&quot; title=&quot;The fastest way to share code&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;movavi&quot; href=&quot;https://spicefactory.co/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://avatars.githubusercontent.com/u/13365608?s=192&quot; alt=&quot;Next gen digital product studio.&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;via &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;textemall&quot; href=&quot;https://www.text-em-all.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/callemall/a6946da/logo/192.png&quot; alt=&quot;call-em-all&quot; title=&quot;Mass Text Messaging &amp;amp; Automated Calling&quot; height=&quot;96&quot; width=&quot;96&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;hoodiebees&quot; href=&quot;https://hoodiebees.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/hoodiebees1/617b451/logo/192.png&quot; alt=&quot;hoodiebees&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;movavi&quot; href=&quot;https://www.movavi.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/movavi-software/a1d0167/logo/192.png&quot; alt=&quot;Screen recorder for Mac&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Direct&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;elevator&quot; href=&quot;https://www.elevatormag.com/?utm_source=MUI&amp;amp;utm_medium=referral&amp;amp;utm_content=readme&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://mui.com/static/sponsors/elevator.png&quot; alt=&quot;elevator&quot; title=&quot;The dopest new hip hop, upcoming artists, music news, culture, and style&quot; height=&quot;57&quot; width=&quot;191&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Gold Sponsors are those who have pledged $500/month or more to MUI.&lt;/p&gt; 
&lt;h3&gt;There is more!&lt;/h3&gt; 
&lt;p&gt;See the full list of &lt;a href=&quot;https://mui.com/discover-more/backers/&quot;&gt;our backers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it&#39;s all you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import * as React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import Button from &#39;@mui/material/Button&#39;;

function App() {
  return &amp;lt;Button variant=&quot;contained&quot;&amp;gt;Hello World&amp;lt;/Button&amp;gt;;
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#39;#app&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yes, it&#39;s really all you need to get started as you can see in this live and interactive demo:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/4j7m47vlm4&quot;&gt;&lt;img src=&quot;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&quot; alt=&quot;Edit Button&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For &lt;em&gt;how-to&lt;/em&gt; questions and other non-issues, please use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/material-ui&quot;&gt;StackOverflow&lt;/a&gt; instead of GitHub issues. There is a StackOverflow tag called &quot;material-ui&quot; that you can use to tag your questions.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Are you looking for an example project to get started? &lt;a href=&quot;https://mui.com/getting-started/example-projects/&quot;&gt;We host some&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://mui.com/&quot;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Premium Themes&lt;/h2&gt; 
&lt;p&gt;You can find complete templates &amp;amp; themes in the &lt;a href=&quot;https://material-ui.com/store/?utm_source=docs&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme-store&quot;&gt;MUI store&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to MUI.&lt;/p&gt; 
&lt;p&gt;Notice that contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on MUI, we also are thrilled to receive a variety of &lt;a href=&quot;https://mui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project&quot;&gt;other contributions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;If you have recently updated, please read the &lt;a href=&quot;https://github.com/mui-org/material-ui/releases&quot;&gt;changelog&lt;/a&gt; for details of what has changed.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The future plans and high priority features and enhancements can be found in the &lt;a href=&quot;https://mui.com/discover-more/roadmap/&quot;&gt;roadmap&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/master/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring services&lt;/h2&gt; 
&lt;p&gt;These great services sponsor MUI&#39;s core infrastructure:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;GitHub&quot; src=&quot;https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png&quot; height=&quot;25&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub allows us to host the Git repository and coordinate contributions.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;Netlify&quot; src=&quot;https://cdn.netlify.com/15ecf59b59c9d04b88097c6b5d2c7e8a7d1302d0/1b6d6/img/press/logos/full-logo-light.svg?sanitize=true&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netlify allows us to distribute the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CrowdIn&quot; src=&quot;https://support.crowdin.com/assets/logos/crowdin-logo1-small.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CrowdIn allows us to translate the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;BrowserStack&quot; src=&quot;https://www.browserstack.com/images/mail/browserstack-logo-footer.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;BrowserStack allows us to test in real browsers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CodeCov&quot; src=&quot;https://github.com/codecov.png?size=70&quot; width=&quot;35&quot; height=&quot;35&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CodeCov allows us to monitor the test coverage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chrisleekr/binance-trading-bot</title>
      <link>https://github.com/chrisleekr/binance-trading-bot</link>
      <description>&lt;p&gt;Automated Binance trading bot - Buy low/Sell high with stop loss limit/Trade multiple cryptocurrencies with Grid Trading&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binance Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/actions?query=workflow%3APush&quot;&gt;&lt;img src=&quot;https://github.com/chrisleekr/binance-trading-bot/workflows/Push/badge.svg?sanitize=true&quot; alt=&quot;Build&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/chrisleekr/binance-trading-bot/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;CodeCov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chrisleekr/binance-trading-bot&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chrisleekr/binance-trading-bot&quot; alt=&quot;Docker pull&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/chrisleekr/binance-trading-bot&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/chrisleekr/binance-trading-bot&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Automated Binance trading bot with trailing buy/sell strategy&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.ko.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%ED%95%9C%EA%B5%AD%EC%96%B4-brightgreen.svg?sanitize=true&quot; alt=&quot;ko&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/README.zh-cn.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-%E4%B8%AD%E6%96%87-blue.svg?sanitize=true&quot; alt=&quot;中文&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is a test project. I am just testing my code.&lt;/p&gt; 
&lt;h2&gt;Warnings&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;I cannot guarantee whether you can make money or not.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk! I have no responsibility for any loss or hardship incurred directly or indirectly by using this code. Read &lt;a href=&quot;https://raw.githubusercontent.com/chrisleekr/binance-trading-bot/master/#disclaimer&quot;&gt;disclaimer&lt;/a&gt; before using this code.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before updating the bot, make sure to record the last buy price in the note. It may lose the configuration or last buy price records.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;h3&gt;Trailing Grid Trade Buy/Sell Bot&lt;/h3&gt; 
&lt;p&gt;This bot is using the concept of trailing buy/sell order which allows following the price fall/rise.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Trailing Stop Orders About Trailing Stop Orders Concept you can find at &lt;a href=&quot;https://www.binance.com/en/support/faq/360042299292&quot;&gt;Binance Official document&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;TL;DR Place orders at a fixed value or percentage when the price changes. Using this feature you can buy at the lowest possible price when buying down and sell at the highest possible price when selling up.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot supports multiple buy/sell orders based on the configuration.&lt;/li&gt; 
 &lt;li&gt;The bot can monitor multiple symbols. All symbols will be monitored per second.&lt;/li&gt; 
 &lt;li&gt;The bot is using MongoDB to provide a persistence database. However, it does not use the latest MongoDB to support Raspberry Pi 32bit. Used MongoDB version is 3.2.20, which is provided by &lt;a href=&quot;https://hub.docker.com/r/apcheamitru/arm32v7-mongo&quot;&gt;apcheamitru&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The bot is tested/working with Linux and Raspberry Pi 4 32bit. Other platforms are not tested.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Buy Signal&lt;/h4&gt; 
&lt;p&gt;The bot will continuously monitor the coin based on the grid trade configuration.&lt;/p&gt; 
&lt;p&gt;For grid trade #1, the bot will place a STOP-LOSS-LIMIT order to buy when the current price reaches the lowest price. If the current price continuously falls, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;p&gt;After grid trade #1, the bot will monitor the COIN based on the last buy price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The bot will not place a buy order of the grid trade #1 if has enough coin (typically over $10 worth) to sell when reaches the trigger price for selling.&lt;/li&gt; 
 &lt;li&gt;The bot will remove the last buy price if the estimated value is less than the last buy price removal threshold.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Buy Scenario&lt;/h5&gt; 
&lt;p&gt;Let say, if the buy grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;USDT&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;1.051&lt;/td&gt; 
     &lt;td&gt;50&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2&lt;/td&gt; 
     &lt;td&gt;0.8&lt;/td&gt; 
     &lt;td&gt;1.03&lt;/td&gt; 
     &lt;td&gt;1.031&lt;/td&gt; 
     &lt;td&gt;100&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To make it easier to understand, I will use &lt;code&gt;$&lt;/code&gt; as a USDT symbol. For the simple calculation, I do not take an account for the commission. In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;Your 1st grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No#: 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.05 (5.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.051 (5.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $50&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $105&lt;/li&gt; 
 &lt;li&gt;Lowest price: $100&lt;/li&gt; 
 &lt;li&gt;Trigger price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When the current price is falling to the lowest price ($100) and lower than ATH(All-Time High) restricted price if enabled, the bot will place new STOP-LOSS-LIMIT order for buying.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 1.05 = $105&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 1.051 = $105.1&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.47573&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $95 * 1.05 = $99.75&lt;/li&gt; 
 &lt;li&gt;Limit price: $95 * 1.051 = $99.845&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st purchase for the coin. The last buy price will be recorded as &lt;code&gt;$99.845&lt;/code&gt;. The purchased quantity will be &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the coin is purchased, the bot will start monitoring the sell signal and at the same time, monitor the next grid trading for buying.&lt;/p&gt; 
&lt;p&gt;Your 2nd grid trading for buying is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid#: 2&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $99.845&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 0.8 (20%)&lt;/li&gt; 
 &lt;li&gt;Stop percentage: 1.03 (3.00%)&lt;/li&gt; 
 &lt;li&gt;Limit percentage: 1.031 (3.10%)&lt;/li&gt; 
 &lt;li&gt;Max purchase amount: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And if the current price is continuously falling to &lt;code&gt;$79.876&lt;/code&gt; (20% lower), then the bot will place new STOP-LOSS-LIMIT order for the 2nd grid trading for the coin.&lt;/p&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $75&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price fall and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $75 * 1.03 = $77.25&lt;/li&gt; 
 &lt;li&gt;Limit price: $75 * 1.031 = $77.325&lt;/li&gt; 
 &lt;li&gt;Quantity: 1.29&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $78&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd purchase for the coin. The last buy price will be automatically re-calculated as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Final last buy price: ($50 + $100)/(0.5 COIN + 1.29 COIN) = $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sell Signal&lt;/h3&gt; 
&lt;p&gt;If there is enough balance for selling and the last buy price is recorded in the bot, then the bot will start monitoring the sell signal of the grid trade #1. Once the current price reaches the trigger price of the grid trade #1, then the bot will place a STOP-LOSS-LIMIT order to sell. If the current price continuously rises, then the bot will cancel the previous order and re-place the new STOP-LOSS-LIMIT order with the new price.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the bot does not have a record for the last buy price, the bot will not sell the coin.&lt;/li&gt; 
 &lt;li&gt;If the coin is worth less than the last buy price removal threshold, then the bot will remove the last buy price.&lt;/li&gt; 
 &lt;li&gt;If the coin is not worth than the minimum notional value, then the bot will not place an order.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell grid trade configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Number of grids: 2&lt;/li&gt; 
 &lt;li&gt;Grids 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;No#&lt;/th&gt; 
     &lt;th&gt;Trigger Percentage&lt;/th&gt; 
     &lt;th&gt;Stop Price Percentage&lt;/th&gt; 
     &lt;th&gt;Limit price percentage&lt;/th&gt; 
     &lt;th&gt;Sell Quantity Percentage&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;1st&lt;/td&gt; 
     &lt;td&gt;1.05&lt;/td&gt; 
     &lt;td&gt;0.97&lt;/td&gt; 
     &lt;td&gt;0.969&lt;/td&gt; 
     &lt;td&gt;0.5&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;2nd&lt;/td&gt; 
     &lt;td&gt;1.08&lt;/td&gt; 
     &lt;td&gt;0.95&lt;/td&gt; 
     &lt;td&gt;0.949&lt;/td&gt; 
     &lt;td&gt;1&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unlike buy, the sell configuration will use the percentage of a quantity. If you want to sell all of your coin quantity, then simply configure it as &lt;code&gt;1&lt;/code&gt; (100%).&lt;/p&gt; 
&lt;p&gt;From the last buy actions, you now have the following balances:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 1.79&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your 1st grid trading for selling is configured as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grid No# 1&lt;/li&gt; 
 &lt;li&gt;Trigger percentage: 1.05&lt;/li&gt; 
 &lt;li&gt;Stop price percentage: 0.97&lt;/li&gt; 
 &lt;li&gt;Limit price percentage: 0.969&lt;/li&gt; 
 &lt;li&gt;Sell amount percentage: 0.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $88&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As the current price is higher than the sell trigger price($87.99), then the bot will place new STOP-LOSS-LIMIT order for selling.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $88 * 0.97 = $85.36&lt;/li&gt; 
 &lt;li&gt;Limit price: $88 * 0.969 = $85.272&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $90 * 0.97 = $87.30&lt;/li&gt; 
 &lt;li&gt;Limit price: $90 * 0.969 = $87.21&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $87&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 1st sell for the coin. Then the bot will now wait for 2nd selling trigger price ($83.80 * 1.08 = $90.504).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current quantity: 0.895&lt;/li&gt; 
 &lt;li&gt;Current last buy price: $83.80&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $91&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the current price($91) is higher than 2nd selling trigger price ($90.504), the bot will place new STOP-LOSS-LIMIT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $91 * 0.95 = $86.45&lt;/li&gt; 
 &lt;li&gt;Limit price: $91 * 0.949 = $86.359&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $100&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will follow the price rise and place new STOP-LOSS-LIMT order as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stop price: $100 * 0.95 = $95&lt;/li&gt; 
 &lt;li&gt;Limit price: $100 * 0.949 = $94.9&lt;/li&gt; 
 &lt;li&gt;Quantity: 0.895&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let&#39;s assume the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $94&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will execute 2nd sell for the coin.&lt;/p&gt; 
&lt;p&gt;The final profit would be&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1st sell: $94.9 * 0.895 = $84.9355&lt;/li&gt; 
 &lt;li&gt;2nd sell: $87.21 * 0.895 = $78.05295&lt;/li&gt; 
 &lt;li&gt;Final profit: $162 (8% profit)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sell Stop-Loss Scenario&lt;/h4&gt; 
&lt;p&gt;Let say, if the sell Stop-Loss configurations are set as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Max loss percentage: 0.90&lt;/li&gt; 
 &lt;li&gt;Temporary disable for buying (minutes): 60&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And the market is as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $95&lt;/li&gt; 
 &lt;li&gt;Last buy price: $100&lt;/li&gt; 
 &lt;li&gt;Stop-Loss price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then the bot will not place a Stop-Loss order because the Stop-Loss price ($90) is less than the current price ($95).&lt;/p&gt; 
&lt;p&gt;If the price is continuously falling, then the bot will keep monitoring until the price reaches the Stop-Loss price.&lt;/p&gt; 
&lt;p&gt;In the next tick, the market changes as below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current price: $90&lt;/li&gt; 
 &lt;li&gt;Stop-Loss price: $90&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The bot will place new MARKET order for selling because the current price ($90) is less or equal than the Stop-Loss price ($90). In real trading, the quantity may be different.&lt;/p&gt; 
&lt;p&gt;The bot will also set the symbol to be temporarily disabled for 60 minutes to avoid buying/sell continuously. In the frontend, the action will display the pause icon and how long left to be enabled again. The symbol can be enabled by clicking the play icon.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Features&quot;&gt;Features&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manual trade&lt;/li&gt; 
 &lt;li&gt;Convert small balances to BNB&lt;/li&gt; 
 &lt;li&gt;Trade all symbols&lt;/li&gt; 
 &lt;li&gt;Monitoring multiple coins simultaneously&lt;/li&gt; 
 &lt;li&gt;Stop-Loss&lt;/li&gt; 
 &lt;li&gt;Restrict buying with ATH price&lt;/li&gt; 
 &lt;li&gt;Grid Trade for buy/sell&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frontend + WebSocket&lt;/h3&gt; 
&lt;p&gt;React.js based frontend communicating via Web Socket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;List monitoring coins with buy/sell signals/open orders&lt;/li&gt; 
 &lt;li&gt;View account balances&lt;/li&gt; 
 &lt;li&gt;View open/closed trades&lt;/li&gt; 
 &lt;li&gt;Manage global/symbol settings&lt;/li&gt; 
 &lt;li&gt;Delete caches that are not monitored&lt;/li&gt; 
 &lt;li&gt;Link to public URL&lt;/li&gt; 
 &lt;li&gt;Support Add to Home Screen&lt;/li&gt; 
 &lt;li&gt;Secure frontend&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Parameters&lt;/h2&gt; 
&lt;p&gt;Use environment parameters to adjust parameters. Check &lt;code&gt;/config/custom-environment-variables.json&lt;/code&gt; to see list of available environment parameters.&lt;/p&gt; 
&lt;p&gt;Or use the frontend to adjust configurations after launching the application.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.dist&lt;/code&gt;.&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Environment Key&lt;/th&gt; 
     &lt;th&gt;Description&lt;/th&gt; 
     &lt;th&gt;Sample Value&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LIVE_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for live&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://binance.zendesk.com/hc/en-us/articles/360002502072-How-to-create-API&quot;&gt;Binance&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_API_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API key for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_TEST_SECRET_KEY&lt;/td&gt; 
     &lt;td&gt;Binance API secret for test&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://testnet.binance.vision/&quot;&gt;Binance Spot Test Network&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_ENABLED&lt;/td&gt; 
     &lt;td&gt;Slack enable/disable&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_WEBHOOK_URL&lt;/td&gt; 
     &lt;td&gt;Slack webhook URL&lt;/td&gt; 
     &lt;td&gt;(from &lt;a href=&quot;https://slack.com/intl/en-au/help/articles/115005265063-Incoming-webhooks-for-Slack&quot;&gt;Slack&lt;/a&gt;)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_CHANNEL&lt;/td&gt; 
     &lt;td&gt;Slack channel&lt;/td&gt; 
     &lt;td&gt;&quot;#binance&quot;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_SLACK_USERNAME&lt;/td&gt; 
     &lt;td&gt;Slack username&lt;/td&gt; 
     &lt;td&gt;Chris&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable &lt;a href=&quot;https://github.com/localtunnel/localtunnel&quot;&gt;local tunnel&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOCAL_TUNNEL_SUBDOMAIN&lt;/td&gt; 
     &lt;td&gt;Local tunnel public URL subdomain&lt;/td&gt; 
     &lt;td&gt;binance&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_ENABLED&lt;/td&gt; 
     &lt;td&gt;Enable/Disable frontend authentication&lt;/td&gt; 
     &lt;td&gt;true&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_AUTHENTICATION_PASSWORD&lt;/td&gt; 
     &lt;td&gt;Frontend password&lt;/td&gt; 
     &lt;td&gt;123456&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BINANCE_LOG_LEVEL&lt;/td&gt; 
     &lt;td&gt;Logging level. &lt;a href=&quot;https://www.npmjs.com/package/bunyan#levels&quot;&gt;Possible values described on &lt;code&gt;bunyan&lt;/code&gt; docs.&lt;/a&gt;&lt;/td&gt; 
     &lt;td&gt;ERROR&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;em&gt;A local tunnel makes the bot accessible from the outside. Please set the subdomain of the local tunnel as a subdomain that only you can remember.&lt;/em&gt; &lt;em&gt;You must change the authentication password; otherwise, it will be configured as the default password.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch/Update the bot with docker-compose&lt;/p&gt; &lt;p&gt;Pull latest code first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git pull
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If want production/live mode, then use the latest build image from DockerHub:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose -f docker-compose.server.yml pull
docker-compose -f docker-compose.server.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or if want development/test mode, then run below commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up -d --build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When launching the application, it will notify public URL to the Slack.&lt;/li&gt; 
   &lt;li&gt;If you have any issue with the bot, you can check the log to find out what happened with the bot. Please take a look &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/wiki/Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Install via Stackfile&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href=&quot;https://www.portainer.io/&quot;&gt;Portainer&lt;/a&gt; create new Stack&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy content of &lt;code&gt;docker-stack.yml&lt;/code&gt; or upload the file&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set environment keys for &lt;code&gt;binance-bot&lt;/code&gt; in the &lt;code&gt;docker-stack.yml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch and open browser &lt;code&gt;http://0.0.0.0:8080&lt;/code&gt; to see the frontend&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Password Protected&lt;/th&gt; 
   &lt;th&gt;Frontend Mobile&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/133920104-49d1b590-c2ba-46d7-a294-eb6b24b459f5.png&quot; alt=&quot;Password Protected&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/133920081-ce7da519-136a-4aca-841e-a85a9a5b249e.png&quot; alt=&quot;Frontend Mobile&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Manual Trade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318581-4e422ac9-b145-4e83-a90d-5c05c61d6e2f.png&quot; alt=&quot;Setting&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/127318630-f2180e1b-3feb-48fa-a083-4cb7f90f743f.png&quot; alt=&quot;Manual Trade&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Frontend Desktop&lt;/th&gt; 
   &lt;th&gt;Closed Trades&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/133920034-0889f631-f11c-4463-8f7f-39af070df60a.png&quot; alt=&quot;Frontend Desktop&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/133920059-a72972c8-18c4-4adb-9641-8dbe7ff3a14a.png&quot; alt=&quot;Closed Trades&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Sample Trade&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chart&lt;/th&gt; 
   &lt;th&gt;Buy Orders&lt;/th&gt; 
   &lt;th&gt;Sell Orders&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027391-192db300-8444-11eb-8df4-91c98d0c835b.png&quot; alt=&quot;Chart&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027403-36628180-8444-11eb-91dc-f3cdabc5a79e.png&quot; alt=&quot;Buy Orders&quot;&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5715919/111027411-4b3f1500-8444-11eb-8525-37f02a63de25.png&quot; alt=&quot;Sell Orders&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Changes &amp;amp; Todo&lt;/h2&gt; 
&lt;p&gt;Please refer &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; to view the past changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Allow to execute stop-loss before buy action - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/299&quot;&gt;#299&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve sell strategy with conditional stop price percentage based on the profit percentage - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/94&quot;&gt;#94&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Add sudden drop buy strategy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/67&quot;&gt;#67&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Manage setting profiles (save/change/load?/export?) - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/151&quot;&gt;#151&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Improve notifications by supporting Apprise - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/106&quot;&gt;#106&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support cool time after hitting the lowest price before buy - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/105&quot;&gt;#105&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Reset global configuration to initial configuration - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/97&quot;&gt;#97&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Develop simple setup screen for secrets&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support multilingual frontend - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/56&quot;&gt;#56&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Non linear stop price and chase function - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/246&quot;&gt;#246&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Support STOP-LOSS configuration per grid trade for selling - &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/issues/261&quot;&gt;#261&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, feel free to make a small &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/raw/master/DONATIONS.md&quot;&gt;donation&lt;/a&gt; to the developer.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d0x2f&quot;&gt;@d0x2f&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And many others! Thanks guys!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all contributors &lt;span&gt;❤️&lt;/span&gt; &lt;a href=&quot;https://github.com/chrisleekr/binance-trading-bot/graphs/contributors&quot;&gt;Click to see our heroes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I give no warranty and accepts no responsibility or liability for the accuracy or the completeness of the information and materials contained in this project. Under no circumstances will I be held responsible or liable in any way for any claims, damages, losses, expenses, costs or liabilities whatsoever (including, without limitation, any direct or indirect damages for loss of profits, business interruption or loss of information) resulting from or arising directly or indirectly from your use of or inability to use this code or any code linked to it, or from your reliance on the information and material on this code, even if I have been advised of the possibility of such damages in advance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;So use it at your own risk!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jely2002/youtube-dl-gui</title>
      <link>https://github.com/jely2002/youtube-dl-gui</link>
      <description>&lt;p&gt;A cross-platform GUI for youtube-dl made in Electron and node.js&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jely2002/youtube-dl-gui/v2.0.0/renderer/img/icon.png&quot; alt=&quot;logo&quot; align=&quot;left&quot; height=&quot;100&quot;&gt; 
&lt;h1&gt;Open Video Downloader (youtube-dl-gui) &lt;br&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/jely2002/youtube-dl-gui?label=latest-release&quot; alt=&quot;version badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/license/jely2002/youtube-dl-gui&quot; alt=&quot;GitHub&quot;&gt; &lt;img src=&quot;https://img.shields.io/codecov/c/github/jely2002/youtube-dl-gui&quot; alt=&quot;coverage badge&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/jely2002/youtube-dl-gui/total&quot; alt=&quot;downloads&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/workflow/status/jely2002/youtube-dl-gui/CI?label=CI&quot; alt=&quot;CI badge&quot;&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://jely2002.github.io/youtube-dl-gui&quot;&gt;https://jely2002.github.io/youtube-dl-gui&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A cross-platform GUI for youtube-dl made in Electron and node.js&lt;/p&gt; 
&lt;h3&gt;Features:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download from all kind of platforms: YouTube, vimeo, twitter &amp;amp; many more&lt;/li&gt; 
 &lt;li&gt;Download multiple videos/playlists/channels in one go&lt;/li&gt; 
 &lt;li&gt;Select the resolution and format you want to download in&lt;/li&gt; 
 &lt;li&gt;Download private videos (currently only tested on YouTube)&lt;/li&gt; 
 &lt;li&gt;Multithreaded, up to 32 videos can be downloaded synchronously&lt;/li&gt; 
 &lt;li&gt;Shows how much size the download will use up on your system&lt;/li&gt; 
 &lt;li&gt;The app automatically keeps ytdl up-to-date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Be sure to check out &lt;a href=&quot;https://raw.githubusercontent.com/jely2002/youtube-dl-gui/master/#Demo-gif&quot;&gt;a demo gif of the application&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/releases/latest&quot;&gt;applicable installer or executable&lt;/a&gt; for your system.&lt;/li&gt; 
 &lt;li&gt;If you are on windows, make sure that the &lt;a href=&quot;https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe&quot;&gt;Microsoft Visual C++ 2010 Redistributable Package (x86)&lt;/a&gt; is installed.&lt;/li&gt; 
 &lt;li&gt;Paste a link into the box up top.&lt;/li&gt; 
 &lt;li&gt;Wait for the app to gather all required metadata.&lt;/li&gt; 
 &lt;li&gt;Press download, and the video(s) will get downloaded to your downloads folder.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Want to know more about the features this app offers? Head over to the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/wiki/&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Something is not working!&lt;/h2&gt; 
&lt;p&gt;Please see if the answer is in the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/wiki/FAQ&quot;&gt;frequently answered questions&lt;/a&gt; or in the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/wiki/&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Still haven&#39;t found your answer? &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/issues&quot;&gt;Open up an issue&lt;/a&gt;, and describe the problem you&#39;re facing.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;First, clone the repository using &lt;code&gt;git clone https://github.com/jely2002/youtube-dl-gui.git&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then navigate to the directory and install the npm modules by executing: &lt;code&gt;npm install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The last step is to build using electron-builder &lt;a href=&quot;https://www.electron.build/cli&quot;&gt;(documentation)&lt;/a&gt;. For example, the command to build a windows installer is: &lt;code&gt;npx electron-builder --win&lt;/code&gt;. The output files can be found in the &#39;dist&#39; folder.&lt;/p&gt; 
&lt;p&gt;Please be aware that this app is only tested on windows, linux and macOS. If you decide to build for another platform/archtype it may or may not work. Builds other than those available in the releases come with absolutely no support.&lt;/p&gt; 
&lt;h2&gt;Planned features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Select individual audio and video codecs (advanced mode)&lt;/li&gt; 
 &lt;li&gt;List all audio qualities&lt;/li&gt; 
 &lt;li&gt;Support for downloading livestreams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Feel free to &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/issues&quot;&gt;request a new feature&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Demo gif&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/jely2002/youtube-dl-gui/master/ytdlgui_demo.gif&quot; alt=&quot;demo&quot; width=&quot;500&quot;&gt; 
&lt;h2&gt;Liability &amp;amp; License notice&lt;/h2&gt; 
&lt;p&gt;Youtube-dl-gui and its maintainers cannot be held liable for misuse of this application, as stated in the &lt;a href=&quot;https://github.com/jely2002/youtube-dl-gui/raw/master/LICENSE&quot;&gt;AGPL-3.0 license (section 16)&lt;/a&gt;.&lt;br&gt; The maintainers of youtube-dl-gui do not in any way condone the use of this application in practices that violate local laws such as but not limited to the DMCA. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nolimits4web/swiper</title>
      <link>https://github.com/nolimits4web/swiper</link>
      <description>&lt;p&gt;Most modern mobile touch slider with hardware accelerated transitions&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/share-banner.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://swiperjs.com/get-started&quot;&gt;Get Started&lt;/a&gt; | &lt;a href=&quot;https://swiperjs.com/swiper-api&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://swiperjs.com/demos&quot;&gt;Demos&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://opencollective.com/swiper&quot;&gt; &lt;img src=&quot;https://opencollective.com/swiper/all/badge.svg?label=financial+contributors&quot; alt=&quot;Financial Contributors on Open Collective&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/nolimits4web/swiper/actions?query=workflow%3ABuild&quot;&gt; &lt;img src=&quot;https://github.com/nolimits4web/swiper/workflows/Build/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/swiper&quot;&gt; &lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/swiper/badge?style=rounded&quot; alt=&quot;jsDelivr Hits&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=swiper&quot;&gt; &lt;img alt=&quot;tree-shakeable&quot; src=&quot;https://badgen.net/bundlephobia/tree-shaking/swiper&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/swiper&quot;&gt; &lt;img alt=&quot;types included&quot; src=&quot;https://badgen.net/npm/types/swiper&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://opencollective.com/swiper/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://opencollective.com/swiper/donate/button@2x.png?color=blue&quot; width=&quot;300&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;Swiper&lt;/h1&gt; 
&lt;p&gt;Swiper - is the free and most modern mobile touch slider with hardware accelerated transitions and amazing native behavior. It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.&lt;/p&gt; 
&lt;p&gt;Swiper is not compatible with all platforms, it is a modern touch slider which is focused only on modern apps/platforms to bring the best experience and simplicity.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;!-- SPONSORS_TABLE_WRAP --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://appkong.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/appkong.png&quot; alt=&quot;Custom Web Development Company [AppKong]&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.parhaatkasinot.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/parhaatkasinot.png&quot; alt=&quot;Parhaat nettikasinot 2021 - Valitse listalta paras kasino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinoutankonto.net/casino-utan-svensk-licens/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinoutankonto.png&quot; alt=&quot;Casino utan spelpaus&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinot.net&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinot-net.png&quot; alt=&quot;Casinot | Tässä parhaat netticasinot 2021 - Katso lista&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinoauditor.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinoauditor.png&quot; alt=&quot;Quality Casinos 2021 ☆ Best Online Casino Sites Review - CasinoAuditor&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinosterson.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinosterson.svg?sanitize=true&quot; alt=&quot;Best Online Casinos in Canada [2021] ⚡Trusted Reviews by Casinosterson&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://rapidessay.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/rapidessay.png&quot; alt=&quot;College Essay Writing Service - Get Qualified Help Rapidly&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.thecasinodb.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/thecasinodb.png&quot; alt=&quot;UK Online Casinos, Slot Machines, and Bonuses | TheCasinoDB&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinoutanlicens.io&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinoutanlicens.png&quot; alt=&quot;Casino Utan Svensk Licens 🥇 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.norges.casino&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/norges-casino.png&quot; alt=&quot;Norges Casino 🥇Beste Online Casino Guide [ 2021 ]&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinotop.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casino-top.png&quot; alt=&quot;The biggest casino online site from 1999, we have the best casino online and honest review on our site so users can check what casino is safe to play on.&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinotopp.net/sv/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casino-topp.png&quot; alt=&quot;Casino Utan Svensk Licens och Spelpaus med BankID 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.eldinamo.cl/entretencion/2021/06/08/los-cinco-mejores-casinos-online-en-chile-para-2021/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/el-dinamo.png&quot; alt=&quot;Los cinco mejores casinos online en Chile para 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://medium.com/theymakedesign/ui-ux-design-agency-b0e313a78ade&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/TMDesign-logo.png&quot; alt=&quot;Top ui/ux design agencies&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinoshunter.com/online-casinos/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinos-hunter.png&quot; alt=&quot;Online Casinos Canada 🏆 Best Online Casinos in Canada for 2021 Review | CasinosHunter&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://kajino.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/kajino.png&quot; alt=&quot;オンラインカジノ リストとランキング 2021 - カジノ .com | Kajino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.bitcoinbuster.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/bitcoinbuster-btc-gambling.jpg&quot; alt=&quot;Bitcoin Casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.ramotion.com/blog/mobile-app-development-full-guide/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/ramotion.png&quot; alt=&quot;How Apps Are Made: Mobile App Development Guide for 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinority.com/au/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinority-australia.png&quot; alt=&quot;Best online casinos for Australian players&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.auscasinos.com/new/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/aus-casinos.png&quot; alt=&quot;New Online Casinos in Australia (2021) - Which Sites Are Safe?&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinoroyale.es/nuevos-casinos/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casino-royal.png&quot; alt=&quot;Nuevos Casinos Online en España 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://onlinecasinohex.nl&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/256-2.png&quot; alt=&quot;Onlinecasinohex.nl is the biggest Dutch gambling site that offers a wide range of casino games and slots as well as detailed casino guides, tips and reviews&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://netticasinohex.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/netticasinohex.png&quot; alt=&quot;The most informative and honest casino reviews for Finnish players&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://aussiecasinohex.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/hex.png&quot; alt=&quot;#1 Aussie Gambling Guide&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://papersowl.com/pay-for-research-paper&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/papersowl.png&quot; alt=&quot;Pay Someone to Write My Research Paper&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://famousera.com/product/buyfollowers/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/famousera.png&quot; alt=&quot;Buy Instagram Followers - Cheap &amp;amp; Instant - $3.90 per 1.000&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://aapeli.net&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/aapeli.png&quot; alt=&quot;Aapeli.net | Ilmaiset pelit ja nettipelit (2021)&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinoclaw.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinoclaw.png&quot; alt=&quot;Casinoclaw » Reviews, bonuses &amp;amp; free spins&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.parhaatnettikasinot.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/parhaatnettikasinot.png&quot; alt=&quot;Parhaat nettikasinot (2021) - Katso tästä paras kasino!&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.coupons4printing.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/coupons4printing.png&quot; alt=&quot;Coupons4Printing: Promotion Codes, Coupons, Coupon Codes 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.booklearnpass.co.uk&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/booklearnpass.png&quot; alt=&quot;Find a Driving Instructor Near You | Book Learn Pass&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.realtimecommunicationsworld.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/realtimecommunicationsworld.png&quot; alt=&quot;Real Time Communications World&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://zamsino.com/de/casino-bonus/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/zamsino.png&quot; alt=&quot;Erik Kings Zamsino Bonus seiten&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinoonlineaams.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinoonlineaams.png&quot; alt=&quot;Review of the best online casino in Italy&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://onlinecasinohex.ca&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinohex-canada.png&quot; alt=&quot;Online Casino HEX - Best Online Casinos in Canada [2021]&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://billigstbredbaand.dk&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/billigstbredbaand.png&quot; alt=&quot;Billigste Bredbånd Priser - Sammenlign Lynhurtigt Bredbånd&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://freebets.ltd.uk&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/freebets.png&quot; alt=&quot;Free Bets | Latest Offers &amp;amp; Bonuses July | #fb #1&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://bet-italia.info&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/bet-italia.png&quot; alt=&quot;Migliori siti di scommesse e Casino Online - Top [2021] - bookmakers italiani&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://mobilemall.pk&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/mobilemall.png&quot; alt=&quot;Mobilemall: Mobile Phone Prices in Pakistan - WhatMobile&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://bet-fi.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/bet-fi.png&quot; alt=&quot;Bet-fi.com - Vedonlyönti, bonukset ja nettikasinot - Suomen casino-opas&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.boosbe.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/boosebe.png&quot; alt=&quot;Get the most out of Social Media - Boosbe&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://bestbitcoincasino.net&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/best-bitcoin-casino.png&quot; alt=&quot;Top 5 Best Bitcoin Casinos Reviewed &amp;amp; Ranked (2021 Updated)&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://veepn.com/ru/vpn-apps/vpn-for-chrome/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/veepn.png&quot; alt=&quot;VPN for Chrome to Make Web Surfing 100% Safe&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://vpntesting.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/vpntesting.png&quot; alt=&quot;VPN Test&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.discovermagazine.com/health/ghostbed-reviews-everything-you-need-to-know-on-ghostbed-mattress&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/ghostbed-reviews.png&quot; alt=&quot;GhostBed Reviews: Everything you need to know on GhostBed Mattress | Discover Magazine&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinoexpo.se/casino-utan-registrering/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinoexpo.jpg&quot; alt=&quot;CasinoExpo casino utan registrering&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://inkedin.com/us/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/inkedin.png&quot; alt=&quot;Inkedin - The Online Gambling News Hub&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://starwarscasinos.com/casino-utan-spelpaus-vad-ar-det/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/starwarscasinos.png&quot; alt=&quot;Casino utan spelpaus – vad är det? Lär dig vad det betyder&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://najlepsibukmacherzy.pl/ranking-legalnych-bukmacherow/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/netpositive.png&quot; alt=&quot;Ranking Bukmacherów Legalnych 2020. Bukmacher nr 1 to...&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://bonuscatch.com/low-deposit/1-minimum-deposit-casino/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/bonuscatch.png&quot; alt=&quot;Try 1 Dollar Deposit Casino in Canada ✅ $1 Minimum Deposit Mobile Casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vpsserver.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/vpsserver-logo.svg?sanitize=true&quot; alt=&quot;VPS Hosting | Buy Cheap VPS | Free VPS Server 7 Days Trial 🥇&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://pillarwm.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/pillar.png&quot; alt=&quot;Wealth Management - The Ultimate Guide For Investors&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinosters.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinosters.svg?sanitize=true&quot; alt=&quot;The Best Online Casinos in the UK » Gambling Sites by Casinosters&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://poprey.com/instagram_views&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/poprey.png&quot; alt=&quot;Buy Instagram Views with PayPal or Credit card | Poprey&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://gamblizard.com/deposit-bonuses/deposit-10-pound/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/gamblizard.png&quot; alt=&quot;Deposit £10 Play with 30, 40, 50, 60, 70, or 80 Pounds✔️ GambLizard&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://cryptocurrencycodes.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/cryptocurrencycodes.png&quot; alt=&quot;Top FREE Crypto Sign Up Bonuses &amp;amp; Referral Codes&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://studyclerk.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/studyclerk.png&quot; alt=&quot;Professional Essay Writing Service from Top Providers - Study Clerk&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.123calendars.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/calendar.png&quot; alt=&quot;2021 Printable Calendar&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://goread.io/buy-instagram-likes&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/goread.png&quot; alt=&quot;Instagram likes&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.estepera.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/estepera.png&quot; alt=&quot;Hair transplant Turkey&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://elroyalecasino.com/games/blackjack&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/elroyalcasino.png&quot; alt=&quot;Play Online Blackjack at elroyalecasino.com&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.codefirst.co.uk&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/codefirst.png&quot; alt=&quot;Software Development Company | CodeFirst UK&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://krootez.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/krootez.svg?sanitize=true&quot; alt=&quot;Krootez - Best Place To Buy Instagram Followers, Likes &amp;amp; Views&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://hollandsegokken.nl&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/hollandsegokken.png&quot; alt=&quot;Gokken in online casino’s begint bij Hollandsegokken.nl!&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://nettcasinobonus.com/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/nettcasinobonus.png&quot; alt=&quot;Få bransjens beste casino bonus &quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.5bingosites.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/5bingosites-com.png&quot; alt=&quot;Exclusive £5 Deposit Bingo Bonuses - £5 Bingo Sites&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.stashbird.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/stashbird.png&quot; alt=&quot;Online Casino Canada → Best Online Casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://anbefaltcasino.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/256.png&quot; alt=&quot;AnbefaltCasino.com | Guiden til de beste norske casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://friendlylikes.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/friendlylikes-logo.png&quot; alt=&quot;Friendlylikes - Order Instagram Followers, Likes, and Views Easily!&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.aumentosocial.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/aumentosocial-logo.png&quot; alt=&quot;Crece en Instagram, Facebook, YouTube y TikTok | AumentoSocial&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://paperell.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/paperell.svg?sanitize=true&quot; alt=&quot;Website that Writes Essays for You - Paperell.com&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://socialsup.net&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/socials-up.png&quot; alt=&quot;Buy 100% Cheap SMM Services - Instagram, YouTube, Twitter&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://writersperhour.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/writers-per-hour.png&quot; alt=&quot;Custom Paper Writing and Editing Service | Essay Writing Help&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://easy-views.org&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/easy-views.png&quot; alt=&quot;easy-views.org - High Retention Youtube Views&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- SPONSORS_TABLE_WRAP --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tree-shakeable&lt;/strong&gt;: Only modules you use will be imported into your app&#39;s bundle.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mobile-friendly&lt;/strong&gt;: It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Library Agnostic&lt;/strong&gt;: Swiper doesn&#39;t require any JavaScript libraries like jQuery, which makes Swiper much smaller and faster. It can be safely used with libraries such as jQuery, Zepto, jQuery Mobile, etc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;1:1 Touch movement&lt;/strong&gt;: By default, Swiper provides 1:1 touch movement interaction, but this ratio can be configured through Swiper settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mutation Observer&lt;/strong&gt;: Swiper has an option to enable Mutation Observer, with this feature Swiper will be automatically reinitialized and recalculate all required parameters if you make dynamic changes to the DOM, or in Swiper styles itself&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich API&lt;/strong&gt;: Swiper comes with a very rich API. It allows creating your own pagination, navigation buttons, parallax effects and many more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RTL&lt;/strong&gt;: Swiper is the only slider that provides 100% RTL support with correct layout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Row Slides Layout&lt;/strong&gt;: Swiper allows a multiple row slides layout, with a few slides per column&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transition Effects&lt;/strong&gt;: Fade, Flip, 3D Cube, 3D Coverflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two-way Control&lt;/strong&gt;: Swiper may be used as controller for any number of other Swipers, and even be controlled at the same time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Navigation Control&lt;/strong&gt;: Swiper comes with all required built-in navigation elements, such as Pagination, Navigation arrows and Scrollbar&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexbox Layout&lt;/strong&gt;: Swiper uses modern flexbox layout for slides layout, which solves a lot of problems and time with size caclulations. Such layout also allows configuring the Slides grid using pure CSS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Most Flexible Slides Layout Grid&lt;/strong&gt;: Swiper has a lot of parameters on initialization to make it as flexible as possible. You can control slides per view, per column, per group, space between slides, and many more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Images Lazy Loading&lt;/strong&gt;: Swiper Lazy Loading delays loading of images in inactive/invisible slides until the user swipes to them. Such feature could make the page load faster and improve Swiper performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtual Slides&lt;/strong&gt;: Swiper comes with Virtual Slides feature that is great when you have a lot of slides or content-heavy/image-heavy slides so it will keep just the required amount of slides in DOM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Loop mode&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Autoplay&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keyboard control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mousewheel control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nested sliders&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;History navigation&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hash navigation&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Breakpoints configuration&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accessibility (A11y)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;And many more ...&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Swiper community can be found on &lt;a href=&quot;https://github.com/nolimits4web/swiper/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/nolimits4web/swiper/raw/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Swiper community channels.&lt;/p&gt; 
&lt;h2&gt;Dist / Build&lt;/h2&gt; 
&lt;p&gt;On production use files (JS and CSS) only from &lt;code&gt;dist/&lt;/code&gt; folder, there will be the most stable versions.&lt;/p&gt; 
&lt;h3&gt;Development Build&lt;/h3&gt; 
&lt;p&gt;Install all dependencies, in repo&#39;s root:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm install

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And build development version of Swiper:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm run build

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result is available in &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Running demos:&lt;/h3&gt; 
&lt;p&gt;All demos located in &lt;code&gt;./playground&lt;/code&gt; folder. There you will fine Core (HTML, JS), React, Vue, Svelte and Angular versions. To open demo, run:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core&lt;/strong&gt;: &lt;code&gt;npm run core&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;code&gt;npm run react&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vue&lt;/strong&gt;: &lt;code&gt;npm run vue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Svelte&lt;/strong&gt;: &lt;code&gt;npm run svelte&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Angular&lt;/strong&gt;: &lt;code&gt;npm run angular&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Production Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm run build:prod

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Production version will available in &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;All changes should be committed to &lt;code&gt;src/&lt;/code&gt; files only. Before you open an issue please review the &lt;a href=&quot;https://github.com/nolimits4web/swiper/raw/master/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; guideline.&lt;/p&gt; 
&lt;h2&gt;Major Roadmapped Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nolimits4web/swiper/issues?q=is%3Aissue+is%3Aopen+label%3A%22feature+request%22+sort%3Areactions-%2B1-desc+&quot;&gt;Top Feature Requests&lt;/a&gt; (Add your own votes using the 👍 reaction)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nolimits4web/swiper/issues?q=is%3Aissue+is%3Aopen+-label%3A%22feature+request%22++sort%3Areactions-%2B1-desc+&quot;&gt;Top Bugs 😱&lt;/a&gt; (Add your own votes using the 👍 reaction)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&quot;https://raw.githubusercontent.com/nolimits4web/swiper/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://raw.githubusercontent.com/nolimits4web/swiper/master/CODE_CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&quot;https://opencollective.com/swiper/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;postinstall&lt;/code&gt; message&lt;/h4&gt; 
&lt;p&gt;Swiper is searching for backers, so the package shows a message about it after installation. If it causes problems for you, you can disable it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ADBLOCK=true npm install
// or
DISABLE_OPENCOLLECTIVE=true npm install
// or
npm install --loglevel silent
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/swiper/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/swiper/organization/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/swiper&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/individuals.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum. Learn to code for free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/freecodecamp/wide-social-banner.png&quot; alt=&quot;freeCodeCamp.org Social Banner&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&quot; alt=&quot;Pull Requests Welcome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://www.firsttimersonly.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true&quot; alt=&quot;first-timers-only Friendly&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codetriage.com/freecodecamp/freecodecamp&quot;&gt;&lt;img src=&quot;https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg?sanitize=true&quot; alt=&quot;Open Source Helpers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/from-referrer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&quot; alt=&quot;Setup Automated&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://chat.freecodecamp.org/&quot;&gt;&lt;img src=&quot;https://chat.freecodecamp.org/api/v1/shield.svg?type=online&amp;amp;icon=false&amp;amp;name=Chat&quot; alt=&quot;Rocket.Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org&#39;s open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href=&quot;https://www.freecodecamp.org/donate&quot;&gt;donor-supported 501(c)(3) nonprofit&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications&quot;&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform&quot;&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues&quot;&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure&quot;&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status&quot;&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you&#39;ve fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href=&quot;https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js&quot;&gt;freeCodeCamp&#39;s CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Replit - or even on your local computer&#39;s development environment.&lt;/p&gt; 
&lt;p&gt;Once you&#39;ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they&#39;ll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href=&quot;https://www.freecodecamp.org/news/academic-honesty-policy/&quot;&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people&#39;s code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our ten core certifications:&lt;/p&gt; 
&lt;h4&gt;1. &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/&quot;&gt;Responsive Web Design Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#basic-html-and-html5&quot;&gt;Basic HTML and HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#basic-css&quot;&gt;Basic CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#applied-visual-design&quot;&gt;Applied Visual Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#applied-accessibility&quot;&gt;Applied Accessibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#responsive-web-design-principles&quot;&gt;Responsive Web Design Principles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#css-flexbox&quot;&gt;CSS Flexbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/#css-grid&quot;&gt;CSS Grid&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-tribute-page&quot;&gt;Tribute Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-survey-form&quot;&gt;Survey Form&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-product-landing-page&quot;&gt;Product Landing Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-technical-documentation-page&quot;&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-personal-portfolio-webpage&quot;&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/&quot;&gt;JavaScript Algorithms and Data Structures Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-javascript&quot;&gt;Basic JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#es6&quot;&gt;ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#regular-expressions&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#debugging&quot;&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-data-structures&quot;&gt;Basic Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting&quot;&gt;Basic Algorithm Scripting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#object-oriented-programming&quot;&gt;Object-Oriented Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#functional-programming&quot;&gt;Functional Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#intermediate-algorithm-scripting&quot;&gt;Intermediate Algorithm Scripting&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/palindrome-checker&quot;&gt;Palindrome Checker&lt;/a&gt;,&lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/roman-numeral-converter&quot;&gt; Roman Numeral Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/caesars-cipher&quot;&gt;Caesar&#39;s Cipher&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/telephone-number-validator&quot;&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/cash-register&quot;&gt;Cash Register&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/&quot;&gt;Front End Libraries Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#sass&quot;&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#react&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#redux&quot;&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux&quot;&gt;React and Redux&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine&quot;&gt;Random Quote Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer&quot;&gt;Markdown Previewer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine&quot;&gt;Drum Machine&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator&quot;&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock&quot;&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/&quot;&gt;Data Visualization Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3&quot;&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax&quot;&gt;JSON APIs and Ajax&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart&quot;&gt;Bar Chart&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph&quot;&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map&quot;&gt;Heat Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map&quot;&gt;Choropleth Map&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram&quot;&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/&quot;&gt;APIs and Microservices Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm&quot;&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express&quot;&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose&quot;&gt;MongoDB and Mongoose&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice&quot;&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice&quot;&gt;Request Header Parser&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice&quot;&gt;URL Shortener&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker&quot;&gt;Exercise Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice&quot;&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/&quot;&gt;Quality Assurance Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai&quot;&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express&quot;&gt;Advanced Node and Express&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter&quot;&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker&quot;&gt;Issue Tracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library&quot;&gt;Personal Library&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver&quot;&gt;Sudoku Solver&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator&quot;&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/&quot;&gt;Scientific Computing with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/#python-for-everybody&quot;&gt;Introduction to Python for Everybody&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/arithmetic-formatter&quot;&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/time-calculator&quot;&gt;Time Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/budget-app&quot;&gt;Budget App&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/polygon-area-calculator&quot;&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/scientific-computing-with-python/scientific-computing-with-python-projects/probability-calculator&quot;&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/&quot;&gt;Data Analysis with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/#data-analysis-with-python-course&quot;&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/#numpy&quot;&gt;NumPy&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator&quot;&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer&quot;&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer&quot;&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer&quot;&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor&quot;&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/&quot;&gt;Information Security Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/#information-security-with-helmetjs&quot;&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/#python-for-penetration-testing&quot;&gt;Python for Penetration Testing&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker&quot;&gt;Stock Price Checker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board&quot;&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner&quot;&gt;Port Scanner&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker&quot;&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game&quot;&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/&quot;&gt;Machine Learning with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/#tensorflow&quot;&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/#how-neural-networks-work&quot;&gt;How Neural Networks Work&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors&quot;&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier&quot;&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn&quot;&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator&quot;&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href=&quot;https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier&quot;&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you&#39;ll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you&#39;ve completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which is still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://forum.freecodecamp.org&quot;&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://youtube.com/freecodecamp&quot;&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://www.freecodecamp.org/news&quot;&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about math and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://chat.freecodecamp.org/home&quot;&gt;chat server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.freecodecamp.org/signin&quot;&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you&#39;ve found a bug, first read the &lt;a href=&quot;https://forum.freecodecamp.org/t/how-to-report-a-bug/19543&quot;&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you&#39;re confident it&#39;s a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;If you think you have found a vulnerability, &lt;em&gt;please report responsibly&lt;/em&gt;. Don&#39;t create GitHub issues for security issues. Instead, please send an email to &lt;code&gt;security@freecodecamp.org&lt;/code&gt; and we&#39;ll look into it immediately.&lt;/p&gt; 
&lt;p&gt;We appreciate any responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users. While we do not offer any bounties or swags at the moment, we&#39;ll be happy to list your name in our &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/HoF.md&quot;&gt;Hall of Fame&lt;/a&gt; for security researchers.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://contribute.freecodecamp.org&quot;&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Platform, Build, and Deployment Status&lt;/h3&gt; 
&lt;p&gt;The general platform status for all our applications is available at &lt;a href=&quot;https://status.freecodecamp.org&quot;&gt;&lt;code&gt;status.freecodecamp.org&lt;/code&gt;&lt;/a&gt;. The build and deployment status for the code is available in &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/docs/devops.md&quot;&gt;our DevOps Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright © 2021 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md&quot;&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum&quot;&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum/LICENSE.md&quot;&gt;CC-BY-SA-4.0&lt;/a&gt; license.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>project-serum/spl-token-wallet</title>
      <link>https://github.com/project-serum/spl-token-wallet</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SPL Token Wallet&lt;/h1&gt; 
&lt;p&gt;Example Solana wallet with support for &lt;a href=&quot;https://spl.solana.com/token&quot;&gt;SPL tokens&lt;/a&gt; and Serum integration.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.sollet.io&quot;&gt;sollet.io&lt;/a&gt; or the &lt;a href=&quot;https://chrome.google.com/webstore/detail/sollet/fhmfendgdocmcbmfikdcogofphimnkno&quot;&gt;Sollet Chrome Extension&lt;/a&gt; for a demo.&lt;/p&gt; 
&lt;p&gt;Wallet keys are stored in &lt;code&gt;localStorage&lt;/code&gt;, optionally encrypted by a password.&lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;yarn start&lt;/code&gt; to start a development server or &lt;code&gt;yarn build&lt;/code&gt; to create a production build that can be served by a static file server.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://facebook.github.io/create-react-app/docs/getting-started&quot;&gt;Create React App documentation&lt;/a&gt; for other commands and options.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>babysor/MockingBird</title>
      <link>https://github.com/babysor/MockingBird</link>
      <description>&lt;p&gt;🚀AI拟声: 5秒内克隆您的声音并生成任意语音内容 Clone a voice in 5 seconds to generate arbitrary speech in real-time&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12797292/131216767-6eb251d6-14fc-4951-8324-2722f0cd4c63.jpg&quot; alt=&quot;mockingbird&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://choosealicense.com/licenses/mit/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?style=flat&quot; alt=&quot;MIT License&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/babysor/MockingBird/main/README-CN.md&quot;&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;🌍 &lt;strong&gt;Chinese&lt;/strong&gt; supported mandarin and tested with multiple datasets: aidatatang_200zh, magicdata, aishell3, and etc.&lt;/p&gt; 
&lt;p&gt;🤩 &lt;strong&gt;PyTorch&lt;/strong&gt; worked for pytorch, tested in version of 1.9.0(latest in August 2021), with GPU Tesla T4 and GTX 2060&lt;/p&gt; 
&lt;p&gt;🌍 &lt;strong&gt;Windows + Linux&lt;/strong&gt; run in both Windows OS and linux OS (even in M1 MACOS)&lt;/p&gt; 
&lt;p&gt;🤩 &lt;strong&gt;Easy &amp;amp; Awesome&lt;/strong&gt; effect with only newly-trained synthesizer, by reusing the pretrained encoder/vocoder&lt;/p&gt; 
&lt;p&gt;🌍 &lt;strong&gt;Webserver Ready&lt;/strong&gt; to serve your result with remote calling&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1sA411P7wM/&quot;&gt;DEMO VIDEO&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;1. Install Requirements&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Follow the original repo to test if you got all environment ready. **Python 3.7 or higher ** is needed to run the toolbox.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;PyTorch&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you get an &lt;code&gt;ERROR: Could not find a version that satisfies the requirement torch==1.9.0+cu102 (from versions: 0.1.2, 0.1.2.post1, 0.1.2.post2 )&lt;/code&gt; This error is probably due to a low version of python, try using 3.9 and it will install successfully&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://ffmpeg.org/download.html#get-packages&quot;&gt;ffmpeg&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; to install the remaining necessary packages.&lt;/li&gt; 
 &lt;li&gt;Install webrtcvad &lt;code&gt;pip install webrtcvad-wheels&lt;/code&gt;(If you need)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that we are using the pretrained encoder/vocoder but synthesizer, since the original model is incompatible with the Chinese sympols. It means the demo_cli is not working at this moment.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;2. Prepare your models&lt;/h3&gt; 
&lt;p&gt;You can either train your models or use existing ones:&lt;/p&gt; 
&lt;h4&gt;2.1. Train synthesizer with your dataset&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download dataset and unzip: make sure you can access all .wav in folder&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Preprocess with the audios and the mel spectrograms: &lt;code&gt;python pre.py &amp;lt;datasets_root&amp;gt;&lt;/code&gt; Allowing parameter &lt;code&gt;--dataset {dataset}&lt;/code&gt; to support aidatatang_200zh, magicdata, aishell3, etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Train the synthesizer: &lt;code&gt;python synthesizer_train.py mandarin &amp;lt;datasets_root&amp;gt;/SV2TTS/synthesizer&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to next step when you see attention line show and loss meet your need in training folder &lt;em&gt;synthesizer/saved_models/&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2.2 Use pretrained model of synthesizer&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Thanks to the community, some models will be shared:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;author&lt;/th&gt; 
   &lt;th&gt;Download link&lt;/th&gt; 
   &lt;th&gt;Preview Video&lt;/th&gt; 
   &lt;th&gt;Info&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@myself&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pan.baidu.com/s/1VHSKIbxXQejtxi2at9IrpA&quot;&gt;https://pan.baidu.com/s/1VHSKIbxXQejtxi2at9IrpA&lt;/a&gt; &lt;a href=&quot;https://pan.baidu.com/s/1VHSKIbxXQejtxi2at9IrpA&quot;&gt;Baidu&lt;/a&gt; code：i183&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;200k steps only trained by aidatatang_200zh&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@FawenYo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://drive.google.com/file/d/1H-YGOUHpmqKxJ9FRc6vAjPuqQki24UbC/view?usp=sharing&quot;&gt;https://drive.google.com/file/d/1H-YGOUHpmqKxJ9FRc6vAjPuqQki24UbC/view?usp=sharing&lt;/a&gt; &lt;a href=&quot;https://pan.baidu.com/s/1vSYXO4wsLyjnF3Unl-Xoxg&quot;&gt;Baidu Pan&lt;/a&gt; Code：1024&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/babysor/MockingBird/wiki/audio/self_test.mp3&quot;&gt;input&lt;/a&gt; &lt;a href=&quot;https://github.com/babysor/MockingBird/wiki/audio/export.wav&quot;&gt;output&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;200k steps with local accent of Taiwan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;@miven&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pan.baidu.com/s/1PI-hM3sn5wbeChRryX-RCQ&quot;&gt;https://pan.baidu.com/s/1PI-hM3sn5wbeChRryX-RCQ&lt;/a&gt; code：2021&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1uh411B7AD/&quot;&gt;https://www.bilibili.com/video/BV1uh411B7AD/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;2.3 Train vocoder (Optional)&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;note: vocoder has little difference in effect, so you may not need to train a new one.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Preprocess the data: &lt;code&gt;python vocoder_preprocess.py &amp;lt;datasets_root&amp;gt; -m &amp;lt;synthesizer_model_path&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; replace with your dataset root，&lt;code&gt;&amp;lt;synthesizer_model_path&amp;gt;&lt;/code&gt;replace with directory of your best trained models of sythensizer, e.g. &lt;em&gt;sythensizer\saved_mode\xxx&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Train the wavernn vocoder: &lt;code&gt;python vocoder_train.py mandarin &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Train the hifigan vocoder &lt;code&gt;python vocoder_train.py mandarin &amp;lt;datasets_root&amp;gt; hifigan&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. Launch&lt;/h3&gt; 
&lt;h4&gt;3.1 Using the web server&lt;/h4&gt; 
&lt;p&gt;You can then try to run:&lt;code&gt;python web.py&lt;/code&gt; and open it in browser, default as &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;3.2 Using the Toolbox&lt;/h4&gt; 
&lt;p&gt;You can then try the toolbox: &lt;code&gt;python demo_toolbox.py -d &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This repository is forked from &lt;a href=&quot;https://github.com/CorentinJ/Real-Time-Voice-Cloning&quot;&gt;Real-Time-Voice-Cloning&lt;/a&gt; which only support English.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
   &lt;th&gt;Designation&lt;/th&gt; 
   &lt;th&gt;Title&lt;/th&gt; 
   &lt;th&gt;Implementation source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/abs/2010.05646&quot;&gt;2010.05646&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;HiFi-GAN (vocoder)&lt;/td&gt; 
   &lt;td&gt;Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1806.04558.pdf&quot;&gt;&lt;strong&gt;1806.04558&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;SV2TTS&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1802.08435.pdf&quot;&gt;1802.08435&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;WaveRNN (vocoder)&lt;/td&gt; 
   &lt;td&gt;Efficient Neural Audio Synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fatchord/WaveRNN&quot;&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1703.10135.pdf&quot;&gt;1703.10135&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tacotron (synthesizer)&lt;/td&gt; 
   &lt;td&gt;Tacotron: Towards End-to-End Speech Synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fatchord/WaveRNN&quot;&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://arxiv.org/pdf/1710.10467.pdf&quot;&gt;1710.10467&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;GE2E (encoder)&lt;/td&gt; 
   &lt;td&gt;Generalized End-To-End Loss for Speaker Verification&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;F Q&amp;amp;A&lt;/h2&gt; 
&lt;h4&gt;1.Where can I download the dataset?&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.openslr.org/62/&quot;&gt;aidatatang_200zh&lt;/a&gt;、&lt;a href=&quot;http://www.openslr.org/68/&quot;&gt;magicdata&lt;/a&gt;、&lt;a href=&quot;http://www.openslr.org/93/&quot;&gt;aishell3&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;After unzip aidatatang_200zh, you need to unzip all the files under &lt;code&gt;aidatatang_200zh\corpus\train&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2.What is&lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt;?&lt;/h4&gt; 
&lt;p&gt;If the dataset path is &lt;code&gt;D:\data\aidatatang_200zh&lt;/code&gt;,then &lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; is&lt;code&gt;D:\data&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;3.Not enough VRAM&lt;/h4&gt; 
&lt;p&gt;Train the synthesizer：adjust the batch_size in &lt;code&gt;synthesizer/hparams.py&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//Before
tts_schedule = [(2,  1e-3,  20_000,  12),   # Progressive training schedule
                (2,  5e-4,  40_000,  12),   # (r, lr, step, batch_size)
                (2,  2e-4,  80_000,  12),   #
                (2,  1e-4, 160_000,  12),   # r = reduction factor (# of mel frames
                (2,  3e-5, 320_000,  12),   #     synthesized for each decoder iteration)
                (2,  1e-5, 640_000,  12)],  # lr = learning rate
//After
tts_schedule = [(2,  1e-3,  20_000,  8),   # Progressive training schedule
                (2,  5e-4,  40_000,  8),   # (r, lr, step, batch_size)
                (2,  2e-4,  80_000,  8),   #
                (2,  1e-4, 160_000,  8),   # r = reduction factor (# of mel frames
                (2,  3e-5, 320_000,  8),   #     synthesized for each decoder iteration)
                (2,  1e-5, 640_000,  8)],  # lr = learning rate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Train Vocoder-Preprocess the data：adjust the batch_size in &lt;code&gt;synthesizer/hparams.py&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//Before
### Data Preprocessing
        max_mel_frames = 900,
        rescale = True,
        rescaling_max = 0.9,
        synthesis_batch_size = 16,                  # For vocoder preprocessing and inference.
//After
### Data Preprocessing
        max_mel_frames = 900,
        rescale = True,
        rescaling_max = 0.9,
        synthesis_batch_size = 8,                  # For vocoder preprocessing and inference.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Train Vocoder-Train the vocoder：adjust the batch_size in &lt;code&gt;vocoder/wavernn/hparams.py&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//Before
# Training
voc_batch_size = 100
voc_lr = 1e-4
voc_gen_at_checkpoint = 5
voc_pad = 2

//After
# Training
voc_batch_size = 6
voc_lr = 1e-4
voc_gen_at_checkpoint = 5
voc_pad =2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;4.If it happens &lt;code&gt;RuntimeError: Error(s) in loading state_dict for Tacotron: size mismatch for encoder.embedding.weight: copying a param with shape torch.Size([70, 512]) from checkpoint, the shape in current model is torch.Size([75, 512]).&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Please refer to issue &lt;a href=&quot;https://github.com/babysor/MockingBird/issues/37&quot;&gt;#37&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;5. How to improve CPU and GPU occupancy rate?&lt;/h4&gt; 
&lt;p&gt;Adjust the batch_size as appropriate to improve&lt;/p&gt; 
&lt;h4&gt;6. What if it happens &lt;code&gt;the page file is too small to complete the operation&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Please refer to this &lt;a href=&quot;https://www.youtube.com/watch?v=Oh6dga-Oy10&amp;amp;ab_channel=CodeProf&quot;&gt;video&lt;/a&gt; and change the virtual memory to 100G (102400), for example : When the file is placed in the D disk, the virtual memory of the D disk is changed.&lt;/p&gt; 
&lt;h4&gt;7. When should I stop during training?&lt;/h4&gt; 
&lt;p&gt;FYI, my attention came after 18k steps and loss became lower than 0.4 after 50k steps. &lt;img src=&quot;https://user-images.githubusercontent.com/7423248/128587252-f669f05a-f411-4811-8784-222156ea5e9d.png&quot; alt=&quot;attention_step_20500_sample_1&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/7423248/128587255-4945faa0-5517-46ea-b173-928eff999330.png&quot; alt=&quot;step-135500-mel-spectrogram_sample_1&quot;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ProjectOpenSea/opensea-creatures</title>
      <link>https://github.com/ProjectOpenSea/opensea-creatures</link>
      <description>&lt;p&gt;Example non-fungible collectible, to demonstrate OpenSea integration&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenSea Creatures - Starter ERC721, ERC1155, and factory contracts&lt;/h2&gt; 
&lt;p&gt;What&#39;s included:&lt;/p&gt; 
&lt;h3&gt;Sample ERC721/ERC1155 Contracts&lt;/h3&gt; 
&lt;p&gt;This includes a very simple sample ERC721 / ERC1155 for the purposes of demonstrating integration with the &lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt; marketplace. We include a script for minting the items.&lt;/p&gt; 
&lt;p&gt;Additionally, this contract whitelists the proxy accounts of OpenSea users so that they are automatically able to trade the ERC721 item on OpenSea (without having to pay gas for an additional approval). On OpenSea, each user has a &quot;proxy&quot; account that they control, and is ultimately called by the exchange contracts to trade their items. (Note that this addition does not mean that OpenSea itself has access to the items, simply that the users can list them more easily if they wish to do so)&lt;/p&gt; 
&lt;h3&gt;Factory Contracts&lt;/h3&gt; 
&lt;p&gt;In addition to these template 721/1155 contracts, we provide sample factory contracts for running gas-free presales of items that haven&#39;t been minted yet. See &lt;a href=&quot;https://docs.opensea.io/docs/opensea-initial-item-sale-tutorial&quot;&gt;https://docs.opensea.io/docs/opensea-initial-item-sale-tutorial&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;Node version&lt;/h3&gt; 
&lt;p&gt;Either make sure you&#39;re running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;, or install Node Version Manager &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm use&lt;/code&gt; to use the correct version of node.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you run into an error while building the dependencies and you&#39;re on a Mac, run the code below, remove your &lt;code&gt;node_modules&lt;/code&gt; folder, and do a fresh &lt;code&gt;yarn install&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;xcode-select --install # Install Command Line Tools if you haven&#39;t already.
sudo xcode-select --switch /Library/Developer/CommandLineTools # Enable command line tools
sudo npm explore npm -g -- npm install node-gyp@latest # Update node-gyp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploying&lt;/h2&gt; 
&lt;h3&gt;Deploying to the Rinkeby network.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;To access a Rinkeby testnet node, you&#39;ll need to sign up for &lt;a href=&quot;https://dashboard.alchemyapi.io/signup?referral=affiliate:e535c3c3-9bc4-428f-8e27-4b70aa2e8ca5&quot;&gt;Alchemy&lt;/a&gt; and get a free API key. Click &quot;View Key&quot; and then copy the part of the URL after &lt;code&gt;v2/&lt;/code&gt;. a. You can use &lt;a href=&quot;https://infura.io&quot;&gt;Infura&lt;/a&gt; if you want as well. Just change &lt;code&gt;ALCHEMY_KEY&lt;/code&gt; below to &lt;code&gt;INFURA_KEY&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Using your API key and the mnemonic for your Metamask wallet (make sure you&#39;re using a Metamask seed phrase that you&#39;re comfortable using for testing purposes), run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;export ALCHEMY_KEY=&quot;&amp;lt;your_alchemy_project_id&amp;gt;&quot;
export MNEMONIC=&quot;&amp;lt;metmask_mnemonic&amp;gt;&quot;
DEPLOY_CREATURES_SALE=1 yarn truffle deploy --network rinkeby
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Minting tokens.&lt;/h3&gt; 
&lt;p&gt;After deploying to the Rinkeby network, there will be a contract on Rinkeby that will be viewable on &lt;a href=&quot;https://rinkeby.etherscan.io&quot;&gt;Rinkeby Etherscan&lt;/a&gt;. For example, here is a &lt;a href=&quot;https://rinkeby.etherscan.io/address/0xeba05c5521a3b81e23d15ae9b2d07524bc453561&quot;&gt;recently deployed contract&lt;/a&gt;. You should set this contract address and the address of your Metamask account as environment variables when running the minting script. If a &lt;a href=&quot;https://github.com/ProjectOpenSea/opensea-creatures/raw/master/migrations/2_deploy_contracts.js#L38&quot;&gt;CreatureFactory was deployed&lt;/a&gt;, which the sample deploy steps above do, you&#39;ll need to specify its address below as it will be the owner on the NFT contract, and only it will have mint permissions. In that case, you won&#39;t need NFT_CONTRACT_ADDRESS, as all we need is the contract with mint permissions here.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export OWNER_ADDRESS=&quot;&amp;lt;my_address&amp;gt;&quot;
export NFT_CONTRACT_ADDRESS=&quot;&amp;lt;deployed_contract_address&amp;gt;&quot;
export FACTORY_CONTRACT_ADDRESS=&quot;&amp;lt;deployed_factory_contract_address&amp;gt;&quot;
export NETWORK=&quot;rinkeby&quot;
node scripts/mint.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Diagnosing Common Issues&lt;/h3&gt; 
&lt;p&gt;If you&#39;re running a modified version of &lt;code&gt;sell.js&lt;/code&gt; and not getting expected behavior, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is the &lt;code&gt;expirationTime&lt;/code&gt; in future? If no, change it to a time in the future.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Is the &lt;code&gt;expirationTime&lt;/code&gt; a fractional second? If yes, round the listing time to the nearest second.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are the input addresses all strings? If no, convert them to strings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are the input addresses checksummed? You might need to use the checksummed version of the address.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Is your computer&#39;s internal clock accurate? If no, try enabling automatic clock adjustment locally or following &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html&quot;&gt;this tutorial&lt;/a&gt; to update an Amazon EC2 instance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do you have any conflicts that result from globally installed node packages? If yes, try &lt;code&gt;yarn remove -g truffle; yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Are you running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;? If no, try &lt;code&gt;nvm use; rm -rf node_modules; yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;About OpenSea Creature Accessories&lt;/h1&gt; 
&lt;p&gt;This is a sample ERC-1155 contract for the purposes of demonstrating integration with the &lt;a href=&quot;https://opensea.io&quot;&gt;OpenSea&lt;/a&gt; marketplace for crypto collectibles. We also include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A factory contract for making sell orders for unminted items (allowing for &lt;strong&gt;gas-free and mint-free presales&lt;/strong&gt;).&lt;/li&gt; 
 &lt;li&gt;A configurable lootbox contract for selling randomized collections of ERC-1155 items.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On top of the features from the OpenSea ERC721 sample contracts above, ERC1155&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;supports multiple creators per contract, where only the creator is able to mint more copies&lt;/li&gt; 
 &lt;li&gt;supports pre-minted items for the lootbox to choose from&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuring the Lootbox&lt;/h2&gt; 
&lt;p&gt;Open CreatureAccessoryLootbox.sol&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Change &lt;code&gt;Class&lt;/code&gt; to reflect your rarity levels.&lt;/li&gt; 
 &lt;li&gt;Change &lt;code&gt;NUM_CLASSES&lt;/code&gt; to reflect how many classes you have (this gets used for sizing fixed-length arrays in Solidity)&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;constructor&lt;/code&gt;, set the &lt;code&gt;OptionSettings&lt;/code&gt; for each of your classes. To do this, as in the example, call &lt;code&gt;setOptionSettings&lt;/code&gt; with 
  &lt;ol&gt; 
   &lt;li&gt;Your option id,&lt;/li&gt; 
   &lt;li&gt;The number of items to issue when the box is opened,&lt;/li&gt; 
   &lt;li&gt;An array of probabilities (basis points, so integers out of 10,000) of receiving each class. Should add up to 10k and be descending in value.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Then follow the instructions below to deploy it! Purchases will auto-open the box. If you&#39;d like to make lootboxes tradable by users (without a purchase auto-opening it), contact us at &lt;a href=&quot;mailto:contact@opensea.io&quot;&gt;contact@opensea.io&lt;/a&gt; (or better yet, in &lt;a href=&quot;https://discord.gg/ga8EJbv&quot;&gt;Discord&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Why are some standard methods overridden?&lt;/h2&gt; 
&lt;p&gt;This contract overrides the &lt;code&gt;isApprovedForAll&lt;/code&gt; method in order to whitelist the proxy accounts of OpenSea users. This means that they are automatically able to trade your ERC-1155 items on OpenSea (without having to pay gas for an additional approval). On OpenSea, each user has a &quot;proxy&quot; account that they control, and is ultimately called by the exchange contracts to trade their items.&lt;/p&gt; 
&lt;p&gt;Note that this addition does not mean that OpenSea itself has access to the items, simply that the users can list them more easily if they wish to do so!&lt;/p&gt; 
&lt;h1&gt;Requirements&lt;/h1&gt; 
&lt;h3&gt;Node version&lt;/h3&gt; 
&lt;p&gt;Either make sure you&#39;re running a version of node compliant with the &lt;code&gt;engines&lt;/code&gt; requirement in &lt;code&gt;package.json&lt;/code&gt;, or install Node Version Manager &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm use&lt;/code&gt; to use the correct version of node.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deploying&lt;/h2&gt; 
&lt;h3&gt;Deploying to the Rinkeby network.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the steps above to get a Rinkeby node API key&lt;/li&gt; 
 &lt;li&gt;Using your API key and the mnemonic for your MetaMask wallet (make sure you&#39;re using a MetaMask seed phrase that you&#39;re comfortable using for testing purposes), run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;export ALCHEMY_KEY=&quot;&amp;lt;alchemy_project_id&amp;gt;&quot; # or you can use INFURA_KEY
export MNEMONIC=&quot;&amp;lt;metmask_mnemonic&amp;gt;&quot;
DEPLOY_ACCESSORIES_SALE=1 yarn truffle migrate --network rinkeby
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploying to the mainnet Ethereum network.&lt;/h3&gt; 
&lt;p&gt;Make sure your wallet has at least a few dollars worth of ETH in it. Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn truffle migrate --network live
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for your newly deployed contract address in the logs! 🥳&lt;/p&gt; 
&lt;h3&gt;Viewing your items on OpenSea&lt;/h3&gt; 
&lt;p&gt;OpenSea will automatically pick up transfers on your contract. You can visit an asset by going to &lt;code&gt;https://opensea.io/assets/CONTRACT_ADDRESS/TOKEN_ID&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To load all your metadata on your items at once, visit &lt;a href=&quot;https://opensea.io/get-listed&quot;&gt;https://opensea.io/get-listed&lt;/a&gt; and enter your address to load the metadata into OpenSea! You can even do this for the Rinkeby test network if you deployed there, by going to &lt;a href=&quot;https://rinkeby.opensea.io/get-listed&quot;&gt;https://rinkeby.opensea.io/get-listed&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;It doesn&#39;t compile!&lt;/h4&gt; 
&lt;p&gt;Install truffle locally: &lt;code&gt;yarn add truffle&lt;/code&gt;. Then run &lt;code&gt;yarn truffle migrate ...&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also debug just the compile step by running &lt;code&gt;yarn truffle compile&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;It doesn&#39;t deploy anything!&lt;/h4&gt; 
&lt;p&gt;This is often due to the truffle-hdwallet provider not being able to connect. Go to your &lt;a href=&quot;https://dashboard.alchemyapi.io/signup?referral=affiliate:e535c3c3-9bc4-428f-8e27-4b70aa2e8ca5&quot;&gt;Alchemy Dashboard&lt;/a&gt; (or infura.io) and create a new project. Use your &quot;project ID&quot; as your new &lt;code&gt;ALCHEMY_KEY&lt;/code&gt; and make sure you export that command-line variable above.&lt;/p&gt; 
&lt;h3&gt;ERC1155 Implementation&lt;/h3&gt; 
&lt;p&gt;To implement the ERC1155 standard, these contracts use the Multi Token Standard by &lt;a href=&quot;https://horizongames.net/&quot;&gt;Horizon Games&lt;/a&gt;, available on &lt;a href=&quot;https://www.npmjs.com/package/multi-token-standard&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;https://github.com/arcadeum/multi-token-standard&quot;&gt;github&lt;/a&gt; and also under the MIT License.&lt;/p&gt; 
&lt;h1&gt;Running Local Tests&lt;/h1&gt; 
&lt;p&gt;In one terminal window, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn run ganache-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once Ganache has started, run the following in another terminal window:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn run test
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>typescript-cheatsheets/react</title>
      <link>https://github.com/typescript-cheatsheets/react</link>
      <description>&lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;React+TypeScript Cheatsheets&lt;/h1&gt; 
 &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/81&quot;&gt; &lt;img height=&quot;90&quot; width=&quot;90&quot; alt=&quot;react + ts logo&quot; src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; align=&quot;left&quot;&gt; &lt;/a&gt; 
 &lt;p&gt;Cheatsheets for experienced React developers getting started with TypeScript&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/setup&quot;&gt;&lt;strong&gt;Web docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/fi3ework/blog/tree/master/react-typescript-cheatsheet-cn&quot;&gt;中文翻译&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet-es&quot;&gt;&lt;strong&gt;Español&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-pt&quot;&gt;&lt;strong&gt;Português&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/CONTRIBUTING.md&quot;&gt;Contribute!&lt;/a&gt; | &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;Ask!&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;span&gt;👋&lt;/span&gt; This repo is maintained by &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;@swyx&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ferdaber&quot;&gt;@ferdaber&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sebsilbermann&quot;&gt;@eps1lon&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jsjoeio&quot;&gt;@jsjoeio&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/_arvindone&quot;&gt;@arvind-one&lt;/a&gt;, we&#39;re so happy you want to try out TypeScript with React! If you see anything wrong or missing, please &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new/choose&quot;&gt;file an issue&lt;/a&gt;! &lt;span&gt;👍&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/typescript-cheatsheets/react-typescript-cheatsheet?color=orange&amp;amp;style=flat-square&quot; alt=&quot;All Contributors&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/wTGS5z9&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/508357248330760243.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; | &lt;a href=&quot;http://twitter.com/home?status=Awesome%20%40Reactjs%20%2B%20%40TypeScript%20cheatsheet%20by%20%40ferdaber%2C%20%40sebsilbermann%2C%20%40swyx%20%26%20others!%20https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url?label=Help%20spread%20the%20word%21&amp;amp;style=social&amp;amp;url=https%3A%2F%2Fgithub.com%2Ftypescript-cheatsheets%2Freact&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;All React + TypeScript Cheatsheets&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;The Basic Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/README.md#basic-cheatsheet-table-of-contents&quot;&gt;&lt;code&gt;/README.md&lt;/code&gt;&lt;/a&gt;) is focused on helping React devs just start using TS in React &lt;strong&gt;apps&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Focus on opinionated best practices, copy+pastable examples.&lt;/li&gt; 
   &lt;li&gt;Explains some basic TS types usage and setup along the way.&lt;/li&gt; 
   &lt;li&gt;Answers the most Frequently Asked Questions.&lt;/li&gt; 
   &lt;li&gt;Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies.&lt;/li&gt; 
   &lt;li&gt;The goal is to get effective with TS without learning &lt;em&gt;too much&lt;/em&gt; TS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Advanced Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro&quot;&gt;&lt;code&gt;/ADVANCED.md&lt;/code&gt;&lt;/a&gt;) helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React &lt;strong&gt;libraries&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It also has miscellaneous tips and tricks for pro users.&lt;/li&gt; 
   &lt;li&gt;Advice for contributing to DefinitelyTyped.&lt;/li&gt; 
   &lt;li&gt;The goal is to take &lt;em&gt;full advantage&lt;/em&gt; of TypeScript.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The Migrating Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/intro&quot;&gt;&lt;code&gt;/MIGRATING.md&lt;/code&gt;&lt;/a&gt;) helps collate advice for incrementally migrating large codebases from JS or Flow, &lt;strong&gt;from people who have done it&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;We do not try to convince people to switch, only to help people who have already decided.&lt;/li&gt; 
   &lt;li&gt;⚠️This is a new cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The HOC Cheatsheet&lt;/strong&gt; (&lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/hoc/intro&quot;&gt;&lt;code&gt;/HOC.md&lt;/code&gt;&lt;/a&gt;) specifically teaches people to write HOCs with examples. 
  &lt;ul&gt; 
   &lt;li&gt;Familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/generics.html&quot;&gt;Generics&lt;/a&gt; is necessary.&lt;/li&gt; 
   &lt;li&gt;⚠️This is the newest cheatsheet, all assistance is welcome.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Basic Cheatsheet Table of Contents&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Expand Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-1-setup-typescript-with-react&quot;&gt;Section 1: Setup TypeScript with React&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usestate&quot;&gt;useState&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#usereducer&quot;&gt;useReducer&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useeffect&quot;&gt;useEffect&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useref&quot;&gt;useRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useimperativehandle&quot;&gt;useImperativeHandle&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#custom-hooks&quot;&gt;Custom Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#you-may-not-need-defaultprops&quot;&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#consuming-props-of-a-component-with-defaultprops&quot;&gt;Consuming Props of a Component with defaultProps&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#problem-statement&quot;&gt;Problem Statement&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#solution&quot;&gt;Solution&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#misc-discussions-and-knowledge&quot;&gt;Misc Discussions and Knowledge&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getderivedstatefromprops&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-example&quot;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#extended-example&quot;&gt;Extended Example&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#option-1-using-react-error-boundary&quot;&gt;Option 1: Using react-error-boundary&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#options-2-writing-your-custom-error-boundary-component&quot;&gt;Options 2: Writing your custom error boundary component&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-types&quot;&gt;Troubleshooting Handbook: Types&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilities&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-fixing-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-globals-images-and-other-non-ts-files&quot;&gt;Troubleshooting Handbook: Globals, Images and other non-TS files&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources-1&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;!--START-SECTION:setup-toc--&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#vs-code-extensions&quot;&gt;VS Code Extensions&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#react--typescript-starter-kits&quot;&gt;React + TypeScript Starter Kits&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#import-react&quot;&gt;Import React&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#video-tutorial&quot;&gt;Video Tutorial&lt;/a&gt;
     &lt;!--END-SECTION:setup-toc--&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#section-2-getting-started&quot;&gt;Section 2: Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#function-components&quot;&gt;Function Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#hooks&quot;&gt;Hooks&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#class-components&quot;&gt;Class Components&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-defaultprops&quot;&gt;Typing defaultProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#types-or-interfaces&quot;&gt;Types or Interfaces?&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-prop-types-examples&quot;&gt;Basic Prop Types Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#useful-react-prop-type-examples&quot;&gt;Useful React Prop Type Examples&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#getDerivedStateFromProps&quot;&gt;getDerivedStateFromProps&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forms-and-events&quot;&gt;Forms and Events&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#context&quot;&gt;Context&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#forwardrefcreateref&quot;&gt;forwardRef/createRef&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#portals&quot;&gt;Portals&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#error-boundaries&quot;&gt;Error Boundaries&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#concurrent-reactreact-suspense&quot;&gt;Concurrent React/React Suspense&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#basic-troubleshooting-handbook-types&quot;&gt;Basic Troubleshooting Handbook: Types&lt;/a&gt; 
   &lt;!--START-SECTION:types-toc--&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types-and-type-guarding&quot;&gt;Union Types and Type Guarding&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#optional-types&quot;&gt;Optional Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#enum-types&quot;&gt;Enum Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#type-assertion&quot;&gt;Type Assertion&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#simulating-nominal-types&quot;&gt;Simulating Nominal Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#intersection-types&quot;&gt;Intersection Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#union-types&quot;&gt;Union Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#overloading-function-types&quot;&gt;Overloading Function Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#using-partial-types&quot;&gt;Using Partial Types&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-werent-exported&quot;&gt;The Types I need weren&#39;t exported!&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#the-types-i-need-dont-exist&quot;&gt;The Types I need don&#39;t exist!&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#slapping-any-on-everything&quot;&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#autogenerate-types&quot;&gt;Autogenerate types&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-hooks&quot;&gt;Typing Exported Hooks&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typing-exported-components&quot;&gt;Typing Exported Components&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#frequent-known-problems-with-typescript&quot;&gt;Frequent Known Problems with TypeScript&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typescript-doesnt-narrow-after-an-object-element-null-check&quot;&gt;TypeScript doesn&#39;t narrow after an object element null check&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#typescript-doesnt-let-you-restrict-the-type-of-children&quot;&gt;TypeScript doesn&#39;t let you restrict the type of children&lt;/a&gt;
       &lt;!--END-SECTION:types-toc--&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-operators&quot;&gt;Troubleshooting Handbook: Operators&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-utilities&quot;&gt;Troubleshooting Handbook: Utilties&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-tsconfigjson&quot;&gt;Troubleshooting Handbook: tsconfig.json&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#troubleshooting-handbook-bugs-in-official-typings&quot;&gt;Troubleshooting Handbook: Bugs in official typings&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-codebases-to-learn-from&quot;&gt;Recommended React + TypeScript codebases to learn from&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#editor-tooling-and-integration&quot;&gt;Editor Tooling and Integration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#linting&quot;&gt;Linting&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#other-react--typescript-resources&quot;&gt;Other React + TypeScript resources&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#recommended-react--typescript-talks&quot;&gt;Recommended React + TypeScript talks&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#time-to-really-learn-typescript&quot;&gt;Time to Really Learn TypeScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#example-app&quot;&gt;Example App&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/#my-question-isnt-answered-here&quot;&gt;My question isn&#39;t answered here!&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;!--START-SECTION:setup--&gt; 
&lt;h1&gt;Section 1: Setup TypeScript with React&lt;/h1&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;good understanding of &lt;a href=&quot;https://reactjs.org&quot;&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;familiarity with &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html&quot;&gt;TypeScript Types&lt;/a&gt; (&lt;a href=&quot;http://2ality.com/2018/04/type-notation-typescript.html&quot;&gt;2ality&#39;s guide&lt;/a&gt; is helpful. If you’re an absolute beginner in TypeScript, check out &lt;a href=&quot;https://ts.chibicode.com/todo/&quot;&gt;chibicode’s tutorial&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;https://reactjs.org/docs/static-type-checking.html#typescript&quot;&gt;the TypeScript section in the official React docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;having read &lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=2&amp;amp;esModuleInterop=true&amp;amp;e=181#example/typescript-with-react&quot;&gt;the React section of the new TypeScript playground&lt;/a&gt; (optional: also step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This guide will always assume you are starting with the latest TypeScript version. Notes for older versions will be in expandable &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tags.&lt;/p&gt; 
&lt;h2&gt;VS Code Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;refactoring help &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&quot;&gt;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;R+TS Code Snippets (there are a few...) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=infeng.vscode-react-typescript&quot;&gt;https://marketplace.visualstudio.com/items?itemName=infeng.vscode-react-typescript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/the-best-react-extension-for-vs-code&quot;&gt;https://www.digitalocean.com/community/tutorials/the-best-react-extension-for-vs-code&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;TypeScript official extension &lt;a href=&quot;https://code.visualstudio.com/docs/languages/typescript&quot;&gt;https://code.visualstudio.com/docs/languages/typescript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;React + TypeScript Starter Kits&lt;/h2&gt; 
&lt;p&gt;Cloud setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcA5FDvmQNwCwAUKJLHAN5wCuqWAyjMhhYANFx4BRAgSz44AXzhES5Snhi1GjLAA8W8XBAB2qeAGEInQ0KjjtycABsscALxwAFAEpXAPnaM4OANjeABtA0sYUR4Yc0iAXVcxPgEhdwAGT3oGAOTJaXx3L19-BkDAgBMIXE4QLCsAOhhgGCckgAMATQsgh2BcAGssCrgAEjYIqwVmutR27MC5LM0yuEoYTihDD1zAgB4K4AA3H13yvbAfbs5e-qGRiYspuBmsVD2Aekuz-YAjThgMCMcCMpj6gxcbGKLj8MTiVnck3gAGo4ABGTxyU6rcrlMF3OB1H5wT7-QFGbG4z6HE65ZYMOSMIA&quot;&gt;TypeScript Playground with React&lt;/a&gt; just if you are debugging types (and reporting issues), not for running code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ts.react.new&quot;&gt;CodeSandbox&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackblitz.com/edit/react-typescript-base&quot;&gt;Stackblitz&lt;/a&gt; - cloud IDE, boots up super fast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Local dev setups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nextjs.org/docs/basic-features/typescript&quot;&gt;Next.js&lt;/a&gt;: &lt;code&gt;npx create-next-app -e with-typescript&lt;/code&gt; will create in your current folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/create-react-app/docs/adding-typescript&quot;&gt;Create React App&lt;/a&gt;: &lt;code&gt;npx create-react-app name-of-app --template typescript&lt;/code&gt; will create in new folder&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.meteor.com/build-tool.html#typescript&quot;&gt;Meteor&lt;/a&gt;: &lt;code&gt;meteor create --typescript name-of-my-new-typescript-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infinitered/ignite#use-ignite-andross-infinite-red-andross-boilerplate&quot;&gt;Ignite&lt;/a&gt; for React Native: &lt;code&gt;ignite new myapp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tsdx.io/&quot;&gt;TSDX&lt;/a&gt;: &lt;code&gt;npx tsdx create mylib&lt;/code&gt; for Creating React+TS &lt;em&gt;libraries&lt;/em&gt;. (in future: &lt;a href=&quot;https://twitter.com/jaredpalmer/status/1346217789942591488&quot;&gt;TurboRepo&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt; Other tools &lt;/summary&gt; 
 &lt;p&gt;Less mature tools still worth checking out:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/swyx/status/1282727239230996480?lang=en&quot;&gt;Vite&lt;/a&gt;: &lt;code&gt;npm init vite-app my-react-project --template react-ts&lt;/code&gt; (note - not yet v1.0, but very fast)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/#create-snowpack-app-(csa)&quot;&gt;Snowpack&lt;/a&gt;: &lt;code&gt;npx create-snowpack-app my-app --template app-template-react-typescript&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://v2.docusaurus.io/docs/installation&quot;&gt;Docusaurus v2&lt;/a&gt; with &lt;a href=&quot;https://v2.docusaurus.io/docs/typescript-support&quot;&gt;TypeScript Support&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://v2.parceljs.org/languages/typescript/&quot;&gt;Parcel&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jpmorganchase/modular&quot;&gt;JP Morgan&#39;s &lt;code&gt;modular&lt;/code&gt;&lt;/a&gt;: CRA + TS + Yarn Workspaces toolkit. &lt;code&gt;yarn create modular-react-app &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Manual setup:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/basarat/typescript-react/tree/master/01%20bootstrap&quot;&gt;Basarat&#39;s guide&lt;/a&gt; for &lt;strong&gt;manual setup&lt;/strong&gt; of React + TypeScript + Webpack + Babel&lt;/li&gt; 
  &lt;li&gt;In particular, make sure that you have &lt;code&gt;@types/react&lt;/code&gt; and &lt;code&gt;@types/react-dom&lt;/code&gt; installed (&lt;a href=&quot;https://definitelytyped.org/&quot;&gt;Read more about the DefinitelyTyped project if you are unfamiliar&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;There are also many React + TypeScript boilerplates, please see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/recommended/resources/&quot;&gt;our Other Resources list&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Import React&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;
import * as ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href=&quot;https://www.reddit.com/r/reactjs/comments/iyehol/import_react_from_react_will_go_away_in_distant/&quot;&gt;most futureproof way&lt;/a&gt; to import React. If you set &lt;code&gt;--allowSyntheticDefaultImports&lt;/code&gt; (or add &lt;code&gt;&quot;allowSyntheticDefaultImports&quot;: true&lt;/code&gt;) in your &lt;code&gt;tsconfig.json&lt;/code&gt; you can use more familiar imports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Explanation&lt;/summary&gt; 
 &lt;p&gt;Why &lt;code&gt;allowSyntheticDefaultImports&lt;/code&gt; over &lt;code&gt;esModuleInterop&lt;/code&gt;? &lt;a href=&quot;https://twitter.com/drosenwasser/status/1003097042653073408&quot;&gt;Daniel Rosenwasser&lt;/a&gt; has said that it&#39;s better for webpack/parcel. For more discussion check out &lt;a href=&quot;https://github.com/wmonk/create-react-app-typescript/issues/214&quot;&gt;https://github.com/wmonk/create-react-app-typescript/issues/214&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;You should also check &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;the new TypeScript docs for official descriptions between each compiler flag&lt;/a&gt;!&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Video Tutorial&lt;/h2&gt; 
&lt;p&gt;Have a look at the 7-part &quot;React Typescript Course&quot; video series below for an introduction to TypeScript with React.&lt;/p&gt; 
&lt;a href=&quot;https://www.youtube.com/watch?v=PL1NUl7fQ2I&amp;amp;list=PLG-Mk4wQm9_LyKE5EwoZz2_GGXR-zJ5Ml&quot;&gt; &lt;img width=&quot;200px&quot; alt=&quot;react typescript course video series&quot; src=&quot;https://i.imgur.com/IIG0Xu9.jpeg&quot;&gt; &lt;/a&gt; 
&lt;!--END-SECTION:setup--&gt; 
&lt;h1&gt;Section 2: Getting Started&lt;/h1&gt; 
&lt;!--START-SECTION:function-components--&gt; 
&lt;h2&gt;Function Components&lt;/h2&gt; 
&lt;p&gt;These can be written as normal functions that take a &lt;code&gt;props&lt;/code&gt; argument and return a JSX element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// Declaring type of props - see &quot;Typing Component Props&quot; for more examples
type AppProps = {
  message: string;
}; /* use `interface` if exporting so that consumers can extend */

// Easiest way to declare a Function Component; return type is inferred.
const App = ({ message }: AppProps) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;

// you can choose annotate the return type so an error is raised if you accidentally return some other type
const App = ({ message }: AppProps): JSX.Element =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;

// you can also inline the type declaration; eliminates naming the prop types, but looks repetitive
const App = ({ message }: { message: string }) =&amp;gt; &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tip: You might use &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=paulshen.paul-typescript-toolkit&quot;&gt;Paul Shen&#39;s VS Code Extension&lt;/a&gt; to automate the type destructure declaration (incl a &lt;a href=&quot;https://twitter.com/_paulshen/status/1392915279466745857?s=20&quot;&gt;keyboard shortcut&lt;/a&gt;).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why is `React.FC` discouraged? What about `React.FunctionComponent`/`React.VoidFunctionComponent`?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You may see this in many React+TypeScript codebases:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const App: React.FunctionComponent&amp;lt;{ message: string }&amp;gt; = ({ message }) =&amp;gt; (
  &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;However, the general consensus today is that &lt;code&gt;React.FunctionComponent&lt;/code&gt; (or the shorthand &lt;code&gt;React.FC&lt;/code&gt;) is &lt;a href=&quot;https://github.com/facebook/create-react-app/pull/8177&quot;&gt;discouraged&lt;/a&gt;. This is a nuanced opinion of course, but if you agree and want to remove &lt;code&gt;React.FC&lt;/code&gt; from your codebase, you can use &lt;a href=&quot;https://github.com/gndelia/codemod-replace-react-fc-typescript&quot;&gt;this jscodeshift codemod&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Some differences from the &quot;normal function&quot; version:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;React.FunctionComponent&lt;/code&gt; is explicit about the return type, while the normal function version is implicit (or else needs additional annotation).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It provides typechecking and autocomplete for static properties like &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;propTypes&lt;/code&gt;, and &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Note that there are some known issues using &lt;code&gt;defaultProps&lt;/code&gt; with &lt;code&gt;React.FunctionComponent&lt;/code&gt;. See &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;this issue for details&lt;/a&gt;. We maintain a separate &lt;code&gt;defaultProps&lt;/code&gt; section you can also look up.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It provides an implicit definition of &lt;code&gt;children&lt;/code&gt; (see below) - however there are some issues with the implicit &lt;code&gt;children&lt;/code&gt; type (e.g. &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33006&quot;&gt;DefinitelyTyped#33006&lt;/a&gt;), and it might be better to be explicit about components that consume &lt;code&gt;children&lt;/code&gt;, anyway.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const Title: React.FunctionComponent&amp;lt;{ title: string }&amp;gt; = ({
  children,
  title,
}) =&amp;gt; &amp;lt;div title={title}&amp;gt;{children}&amp;lt;/div&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Using `React.VoidFunctionComponent` or `React.VFC` instead&lt;/summary&gt; 
  &lt;p&gt;As of &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/46643&quot;&gt;@types/react 16.9.48&lt;/a&gt;, you can also use &lt;code&gt;React.VoidFunctionComponent&lt;/code&gt; or &lt;code&gt;React.VFC&lt;/code&gt; type if you want to type &lt;code&gt;children&lt;/code&gt; explicitly. This is an interim solution until &lt;code&gt;FunctionComponent&lt;/code&gt; will accept no children by default (planned for &lt;code&gt;@types/react@^18.0.0&lt;/code&gt;).&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = { foo: string };

// OK now, in future, error
const FunctionComponent: React.FunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}: Props) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo} {children}
    &amp;lt;/div&amp;gt;
  ); // OK
};

// Error now, in future, deprecated
const VoidFunctionComponent: React.VoidFunctionComponent&amp;lt;Props&amp;gt; = ({
  foo,
  children,
}) =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      {foo}
      {children}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/details&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;em&gt;In the future&lt;/em&gt;, it may&amp;nbsp;automatically mark props as &lt;code&gt;readonly&lt;/code&gt;, though that&#39;s a moot point if the props object is destructured in the parameter list.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In most cases it makes very little difference which syntax is used, but you may prefer the more explicit nature of &lt;code&gt;React.FunctionComponent&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Minor Pitfalls&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;These patterns are not supported:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Conditional rendering&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyConditionalComponent = ({ shouldRender = false }) =&amp;gt;
  shouldRender ? &amp;lt;div /&amp;gt; : false; // don&#39;t do this in JS either
const el = &amp;lt;MyConditionalComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is because due to limitations in the compiler, function components cannot return anything other than a JSX expression or &lt;code&gt;null&lt;/code&gt;, otherwise it complains with a cryptic error message saying that the other type is not assignable to &lt;code&gt;Element&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Array.fill&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; Array(5).fill(&amp;lt;div /&amp;gt;);
const el2 = &amp;lt;MyArrayComponent /&amp;gt;; // throws an error
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Unfortunately just annotating the function type will not help so if you really need to return other exotic types that React supports, you&#39;d need to perform a type assertion:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const MyArrayComponent = () =&amp;gt; (Array(5).fill(&amp;lt;div /&amp;gt;) as any) as JSX.Element;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:function-components--&gt; 
&lt;!--START-SECTION:hooks--&gt; 
&lt;h2&gt;Hooks&lt;/h2&gt; 
&lt;p&gt;Hooks are &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L800-L1031&quot;&gt;supported in &lt;code&gt;@types/react&lt;/code&gt; from v16.8 up&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;useState&lt;/h2&gt; 
&lt;p&gt;Type inference works very well for simple values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [val, toggle] = React.useState(false);
// `val` is inferred to be a boolean
// `toggle` only takes booleans
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also the &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/basic/troubleshooting/types/#using-inferred-types&quot;&gt;Using Inferred Types&lt;/a&gt; section if you need to use a complex type that you&#39;ve relied on inference for.&lt;/p&gt; 
&lt;p&gt;However, many hooks are initialized with null-ish default values, and you may wonder how to provide types. Explicitly declare the type, and use a union type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser | null&amp;gt;(null);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use type assertions if a state is initialized soon after setup and always has a value after:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [user, setUser] = React.useState&amp;lt;IUser&amp;gt;({} as IUser);

// later...
setUser(newUser);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This temporarily &quot;lies&quot; to the TypeScript compiler that &lt;code&gt;{}&lt;/code&gt; is of type &lt;code&gt;IUser&lt;/code&gt;. You should follow up by setting the &lt;code&gt;user&lt;/code&gt; state — if you don&#39;t, the rest of your code may rely on the fact that &lt;code&gt;user&lt;/code&gt; is of type &lt;code&gt;IUser&lt;/code&gt; and that may lead to runtime errors.&lt;/p&gt; 
&lt;h2&gt;useReducer&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; for reducer actions. Don&#39;t forget to define the return type of reducer, otherwise TypeScript will infer it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const initialState = { count: 0 };

type ACTIONTYPE =
  | { type: &quot;increment&quot;; payload: number }
  | { type: &quot;decrement&quot;; payload: string };

function reducer(state: typeof initialState, action: ACTIONTYPE) {
  switch (action.type) {
    case &quot;increment&quot;:
      return { count: state.count + action.payload };
    case &quot;decrement&quot;:
      return { count: state.count - Number(action.payload) };
    default:
      throw new Error();
  }
}

function Counter() {
  const [state, dispatch] = React.useReducer(reducer, initialState);
  return (
    &amp;lt;&amp;gt;
      Count: {state.count}
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;decrement&quot;, payload: &quot;5&quot; })}&amp;gt;
        -
      &amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &quot;increment&quot;, payload: 5 })}&amp;gt;
        +
      &amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/LAKFEsFsAcHsCcAuACAVMghgZ2QJQKYYDGKAZvLJMgOTyEnUDcooRsAdliuO+IuBgA2AZUQZE+ZAF5kAbzYBXdogBcyAAwBfZmBCIAntEkBBAMIAVAJIB5AHLmAmgAUAotOShkyAD5zkBozVqHiI6SHxlagAaZGgMfUFYDAATNXYFSAAjfHhNDxAvX1l-Q3wg5PxQ-HDImLiEpNTkLngeAHM8ll1SJRJwDmQ6ZIUiHIAKLnEykqNYUmQePgERMQkY4n4ONTMrO0dXAEo5T2aAdz4iAAtkMY3+9gA6APwj2ROvImxJYPYqmsRqCp3l5BvhEAp4Ow5IplGpJhIHjCUABqTB9DgPeqJFLaYGfLDfCp-CIAoEFEFeOjgyHQ2BKVTNVb4RF05TIAC0yFsGWy8Fu6MeWMaB1x5K8FVIGAUglUwK8iEuFFOyHY+GVLngFD5Bx0Xk0oH13V6myhplZEm1x3JbE4KAA2vD8DFkuAsHFEFcALruAgbB4KAkEYajPlDEY5GKLfhCURTHUnKkQqFjYEAHgAfHLkGb6WpZI6WfTDRSvKnMgpEIgBhxTIJwEQANZSWRjI5SdPIF1u8RXMayZ7lSphEnRWLxbFNagAVmomhF6fZqYA9OXKxxM2KQWWK1WoTW643m63pB2u+7e-3SkEQsPamOGik1FO55p08jl6vdxuKcvv8h4yAmhAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Usage with `Reducer` from `redux`&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;In case you use the &lt;a href=&quot;https://github.com/reduxjs/redux&quot;&gt;redux&lt;/a&gt; library to write reducer function, It provides a convenient helper of the format &lt;code&gt;Reducer&amp;lt;State, Action&amp;gt;&lt;/code&gt; which takes care of the return type for you.&lt;/p&gt; 
 &lt;p&gt;So the above reducer example becomes:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Reducer } from &#39;redux&#39;;

export function reducer: Reducer&amp;lt;AppState, Action&amp;gt;() {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;useEffect / useLayoutEffect&lt;/h2&gt; 
&lt;p&gt;Both of &lt;code&gt;useEffect&lt;/code&gt; and &lt;code&gt;useLayoutEffect&lt;/code&gt; are used for performing &lt;b&gt;side effects&lt;/b&gt; and return an optional cleanup function which means they don&#39;t deal with returning values, no types are necessary. When using &lt;code&gt;useEffect&lt;/code&gt;, take care not to return anything other than a function or &lt;code&gt;undefined&lt;/code&gt;, otherwise both TypeScript and React will yell at you. This can be subtle when using arrow functions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(
    () =&amp;gt;
      setTimeout(() =&amp;gt; {
        /* do stuff */
      }, timerMs),
    [timerMs]
  );
  // bad example! setTimeout implicitly returns a number
  // because the arrow function body isn&#39;t wrapped in curly braces
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Solution to the above example &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function DelayedEffect(props: { timerMs: number }) {
  const { timerMs } = props;

  useEffect(() =&amp;gt; {
    setTimeout(() =&amp;gt; {
      /* do stuff */
    }, timerMs);
  }, [timerMs]);
  // better; use the void keyword to make sure you return undefined
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;useRef&lt;/h2&gt; 
&lt;p&gt;In TypeScript, &lt;code&gt;useRef&lt;/code&gt; returns a reference that is either &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/abd69803c1b710db58d511f4544ec1b70bc9077c/types/react/v16/index.d.ts#L1025-L1039&quot;&gt;read-only&lt;/a&gt; or &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/abd69803c1b710db58d511f4544ec1b70bc9077c/types/react/v16/index.d.ts#L1012-L1023&quot;&gt;mutable&lt;/a&gt;, depends on whether your type argument fully covers the initial value or not. Choose one that suits your use case.&lt;/p&gt; 
&lt;h3&gt;Option 1: DOM element ref&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/refs-and-the-dom.html&quot;&gt;To access a DOM element&lt;/a&gt;:&lt;/strong&gt; provide only the element type as argument, and use &lt;code&gt;null&lt;/code&gt; as initial value. In this case, the returned reference will have a read-only &lt;code&gt;.current&lt;/code&gt; that is managed by React. TypeScript expects you to give this ref to an element&#39;s &lt;code&gt;ref&lt;/code&gt; prop:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function Foo() {
  // - If possible, prefer as specific as possible. For example, HTMLDivElement
  //   is better than HTMLElement and way better than Element.
  // - Technical-wise, this returns RefObject&amp;lt;HTMLDivElement&amp;gt;
  const divRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null);

  useEffect(() =&amp;gt; {
    // Note that ref.current may be null. This is expected, because you may
    // conditionally render the ref-ed element, or you may forgot to assign it
    if (!divRef.current) throw Error(&quot;divRef is not assigned&quot;);

    // Now divRef.current is sure to be HTMLDivElement
    doSomethingWith(divRef.current);
  });

  // Give the ref to an element so React can manage it for you
  return &amp;lt;div ref={divRef}&amp;gt;etc&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are sure that &lt;code&gt;divRef.current&lt;/code&gt; will never be null, it is also possible to use the non-null assertion operator &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const divRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null!);
// Later... No need to check if it is null
doSomethingWith(divRef.current);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you are opting out of type safety here - you will have a runtime error if you forget to assign the ref to an element in the render, or if the ref-ed element is conditionally rendered.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;Tip: Choosing which &lt;code&gt;HTMLElement&lt;/code&gt; to use&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;Refs demand specificity - it is not enough to just specify any old &lt;code&gt;HTMLElement&lt;/code&gt;. If you don&#39;t know the name of the element type you need, you can check &lt;a href=&quot;https://github.com/microsoft/TypeScript/raw/v3.9.5/lib/lib.dom.d.ts#L19224-L19343&quot;&gt;lib.dom.ts&lt;/a&gt; or make an intentional type error and let the language service tell you:&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/116914284-1c436380-ac7d-11eb-9150-f52c571c5f07.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Option 2: Mutable value ref&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables&quot;&gt;To have a mutable value&lt;/a&gt;:&lt;/strong&gt; provide the type you want, and make sure the initial value fully belongs to that type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function Foo() {
  // Technical-wise, this returns MutableRefObject&amp;lt;number | null&amp;gt;
  const intervalRef = useRef&amp;lt;number | null&amp;gt;(null);

  // You manage the ref yourself (that&#39;s why it&#39;s called MutableRefObject!)
  useEffect(() =&amp;gt; {
    intervalRef.current = setInterval(...);
    return () =&amp;gt; clearInterval(intervalRef.current);
  }, []);

  // The ref is not passed to any element&#39;s &quot;ref&quot; prop
  return &amp;lt;button onClick={/* clearInterval the ref */}&amp;gt;Cancel timer&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;See also&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/388&quot;&gt;Related issue by @rajivpunjabi&lt;/a&gt; - &lt;a href=&quot;https://www.typescriptlang.org/play#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwCwAUI7hAHarwCCYYcAvHAAUASn4A+OAG9GjOHAD0CBLLnKGcxHABiwKBzgQwMYGxS4WUACbBWAczgwIcSxFwBXEFlYxkxtgDoVTQBJVmBjZAAbOAA3KLcsOAB3YEjogCNE1jc0-zgAGQBPG3tHOAAVQrAsAGVcKGAjOHTCuDdUErhWNgBabLSUVFQsWBNWA2qoX2hA9VU4AGFKXyx0AFk3H3TIxOwCOAB5dIArLHwgpHcoSm84MGJJmFbgdG74ZcsDVkjC2Y01f7yFQsdjvLAEACM-EwVBg-naWD2AB4ABLlNb5GpgZCsACiO083jEgn6kQAhMJ6HMQfpKJCFpE2IkBNg8HCEci0RisTj8VhCTBiaSKVSVIoAaoLnBQuFgFFYvFEikBpkujkMps4FgAB7VfCdLmY7F4gleOFwAByEHg7U63VYfXVg2Go1MhhG0ygf3mAHVUtF6jgYLtwUdTvguta4Bstjs9mGznCpVcbvB7u7YM90B8vj9vYgLkDqWxaeCAEzQ1n4eHDTnoo2801EknqykyObii5SmpnNifA5GMZmCzWOwOJwudwC3xjKUyiLROKRBLJf3NLJO9KanV64xj0koVifQ08k38s1Sv0DJZBxIx5DbRGhk6J5Nua5mu4PEZPOAvSNgsgnxsHmXZzIgRZyDSYIEAAzJWsI1k+BCovWp58gKcAAD5qmkQqtqKHbyCexoYRecw7IQugcAs76ptCdIQv4KZmoRcjyMRaGkU28A4aSKiUXAwwgpYtEfrcAh0mWzF0ax7bsZx3Lceetx8eqAlYPAMAABa6KJskSXAdKwTJ4kwGxCjyKy-bfK05SrDA8mWVagHAbZeScOY0CjqUE6uOgqDaRAOSfKqOYgb8KiMaZ9GSeCEIMkyMVyUwRHWYc7nSvAgUQEk6AjMQXpReWyWGdFLHeBZHEuTCQEZT8xVwaV8BxZCzUWZQMDvuMghBHASJVnCWhTLYApiH1chIqgxpGeCfCSIxAC+Yj3o+8YvvgSLyNNOLjeBGhTTNdLzVJy3reGMBbTtrB7RoB3XbNBAneCsHLatcbPhdV3GrdB1WYhw3IKNZq-W2DCLYRO7QPAljgsgORcDwVJAA&quot;&gt;Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;Example from Stefan Baumgartner&lt;/a&gt; - &lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgIilQ3wFgAoCzAVwDsNgJa4AVJADxgElaxqYA6sBgALAGIQ01AM4AhfjCYAKAJRwA3hThwA9DrjBaw4CgA2waUjgB3YSLi1qp0wBo4AI35wYSZ6wCeYEgAymhQwGDw1lYoRHCmEBAA1oYA5nCY0HAozAASLACyADI8fDAAoqZIIEi0MFpwaEzS8IZllXAAvIjEMAB0MkjImAA8+cWl-JXVtTAAfEqOzioA3A1NtC1wTPIwirQAwuZoSV1wql1zGg3aenAt4RgOTqaNIkgn0g5ISAAmcDJvBA3h9TsBMAZeFNXjl-lIoEQ6nAOBZ+jddPpPPAmGgrPDEfAUS1pG5hAYvhAITBAlZxiUoRUqjU6m5RIDhOi7iIUF9RFYaqIIP9MlJpABCOCAUHJ0eDzm1oXAAGSKyHtUx9fGzNSacjaPWq6Ea6gI2Z9EUyVRrXV6gC+DRtVu0RBgxuYSnRIzm6O06h0ACpIdlfr9jExSQyOkxTP5GjkPFZBv9bKIDYSmbNpH04ABNFD+CV+nR2636kby+BETCddTlyo27w0zr4HycfC6L0lvUjLH7baHY5Jas7BRMI7AE42uYSUXed6pkY6HtMDulnQruCrCg2oA&quot;&gt;Playground&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;useImperativeHandle&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;We don&#39;t have much here, but this is from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/106&quot;&gt;a discussion in our issues&lt;/a&gt;. Please contribute if you have anything to add!&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ListProps&amp;lt;ItemType&amp;gt; = {
  items: ItemType[];
  innerRef?: React.Ref&amp;lt;{ scrollToItem(item: ItemType): void }&amp;gt;;
};

function List&amp;lt;ItemType&amp;gt;(props: ListProps&amp;lt;ItemType&amp;gt;) {
  useImperativeHandle(props.innerRef, () =&amp;gt; ({
    scrollToItem() {},
  }));
  return null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Custom Hooks&lt;/h2&gt; 
&lt;p&gt;If you are returning an array in your Custom Hook, you will want to avoid type inference as TypeScript will infer a union type (when you actually want different types in each position of the array). Instead, use &lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#const-assertions&quot;&gt;TS 3.4 const assertions&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as const; // infers [boolean, typeof load] instead of (boolean | typeof load)[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?target=5&amp;amp;jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuRgZyQBkIKACbBmAcwAUASjgBvCnDhoO3eAG1g3AcNFiANHF4wAyjBQwkAXTgBeRMRgA6HklPmkEzCgA2vKQG4FJRV4b0EhWzgJFAAFHBBNJAAuODjcRIAeFGYATwA+GRs8uSDFIzcLCRgoRiQA0rgiGEYoTlj4xMdMUR9vHIlpW2Lys0qvXzr68kUAX0DpxqRm1rgNLXDdAzDhaxRuYOZVfzgAehO4UUwkKH21ACMICG9UZgMYHLAkCEw4baFrUSqVARb5RB5PF5wAA+cHen1BfykaksFBmQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This way, when you destructure you actually get the right types based on destructure position.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Alternative: Asserting a tuple return type&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you are &lt;a href=&quot;https://github.com/babel/babel/issues/9800&quot;&gt;having trouble with const assertions&lt;/a&gt;, you can also assert or define the function return types:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function useLoading() {
  const [isLoading, setState] = React.useState(false);
  const load = (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; {
    setState(true);
    return aPromise.finally(() =&amp;gt; setState(false));
  };
  return [isLoading, load] as [
    boolean,
    (aPromise: Promise&amp;lt;any&amp;gt;) =&amp;gt; Promise&amp;lt;any&amp;gt;
  ];
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;A helper function that automatically types tuples can also be helpful if you write a lot of custom hooks:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function tuplify&amp;lt;T extends any[]&amp;gt;(...elements: T) {
  return elements;
}

function useArray() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return [numberValue, functionValue]; // type is (number | (() =&amp;gt; void))[]
}

function useTuple() {
  const numberValue = useRef(3).current;
  const functionValue = useRef(() =&amp;gt; {}).current;
  return tuplify(numberValue, functionValue); // type is [number, () =&amp;gt; void]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Note that the React team recommends that custom hooks that return more than two values should use proper objects instead of tuples, however.&lt;/p&gt; 
&lt;h2&gt;More Hooks + TypeScript reading:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&quot;&gt;https://medium.com/@jrwebdev/react-hooks-in-typescript-88fce7001d0d&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react/hooks/#useref&quot;&gt;https://fettblog.eu/typescript-react/hooks/#useref&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are writing a React Hooks library, don&#39;t forget that you should also expose your types for users to use.&lt;/p&gt; 
&lt;h2&gt;Example React Hooks + TypeScript Libraries:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mweststrate/use-st8&quot;&gt;https://github.com/mweststrate/use-st8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/the-platform&quot;&gt;https://github.com/palmerhq/the-platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sw-yx/hooks&quot;&gt;https://github.com/sw-yx/hooks&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:hooks--&gt; 
&lt;!--START-SECTION:class-components--&gt; 
&lt;h2&gt;Class Components&lt;/h2&gt; 
&lt;p&gt;Within TypeScript, &lt;code&gt;React.Component&lt;/code&gt; is a generic type (aka &lt;code&gt;React.Component&amp;lt;PropType, StateType&amp;gt;&lt;/code&gt;), so you want to provide it with (optional) prop and state type parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  // using `interface` is also ok
  message: string;
};
type MyState = {
  count: number; // like this
};
class App extends React.Component&amp;lt;MyProps, MyState&amp;gt; {
  state: MyState = {
    // optional second annotation for better type inference
    count: 0,
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgFlqAFHMAZzgF44BvCuHAD0QuAFd2wAHYBzOAANpMJFEzok8uME4oANuwhwIAawFwQSduxQykALjjsYUaTIDcFAL4fyNOo2oAZRgUZW4+MzQIMSkYBykxEAAjFTdhUV1gY3oYAAttLx80XRQrOABBMDA4JAAPZSkAE05kdBgAOgBhXEgpJFiAHiZWCA4AGgDg0KQAPgjyQSdphyYpsJ5+BcF0ozAYYAgpPUckKKa4FCkpCBD9w7hMaDgUmGUoOD96aUwVfrQkMyCKIxOJwAAMZm8ZiITRUAAoAJTzbZwIgwMRQKRwOGA7YDRrAABuM1xKN4eW07TAbHY7QsVhsSE8fAptKWynawNinlJcAGQgJxNxCJ8gh55E8QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Don&#39;t forget that you can export/import/extend these types/interfaces for reuse.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why annotate &lt;code&gt;state&lt;/code&gt; twice?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;It isn&#39;t strictly necessary to annotate the &lt;code&gt;state&lt;/code&gt; class property, but it allows better type inference when accessing &lt;code&gt;this.state&lt;/code&gt; and also initializing the state.&lt;/p&gt; 
 &lt;p&gt;This is because they work in two different ways, the 2nd generic type parameter will allow &lt;code&gt;this.setState()&lt;/code&gt; to work correctly, because that method comes from the base class, but initializing &lt;code&gt;state&lt;/code&gt; inside the component overrides the base implementation so you have to make sure that you tell the compiler that you&#39;re not actually doing anything different.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;No need for &lt;code&gt;readonly&lt;/code&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You often see sample code include &lt;code&gt;readonly&lt;/code&gt; to mark props and state immutable:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type MyProps = {
  readonly message: string;
};
type MyState = {
  readonly count: number;
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is not necessary as &lt;code&gt;React.Component&amp;lt;P,S&amp;gt;&lt;/code&gt; already marks them as immutable. (&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/26813&quot;&gt;See PR and discussion!&lt;/a&gt;)&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Class Methods&lt;/strong&gt;: Do it like normal, but just remember any arguments for your functions also need to be typed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{ message: string }, { count: number }&amp;gt; {
  state = { count: 0 };
  render() {
    return (
      &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;
        {this.props.message} {this.state.count}
      &amp;lt;/div&amp;gt;
    );
  }
  increment = (amt: number) =&amp;gt; {
    // like this
    this.setState((state) =&amp;gt; ({
      count: state.count + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN5wQSBigDmSAFxw6MKMB5q4AXwA0cRWggBXHjG09rIAEZIoJgHwWKcHTBTccAC8FnBWtvZwAAwmANw+cET8bgAUAJTe5L6+RDDWUDxwKQnZcLJ8wABucBA8YtTAaADWQfLpwV4wABbAdCIGaETKdikAjGnGHiWlFt29ImA4YH3KqhrGsz19ugFIIuF2xtO+sgD0FZVTWdlp8ddH1wNDMsFFKCCRji5uGUFe8tNTqc4A0mkg4HM6NNISI6EgYABlfzcFI7QJ-IoA66lA6RNF7XFwADUcHeMGmxjStwSxjuxiAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Class Properties&lt;/strong&gt;: If you need to declare class properties for later use, just declare it like &lt;code&gt;state&lt;/code&gt;, but without assignment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  pointer: number; // like this
  componentDidMount() {
    this.pointer = 3;
  }
  render() {
    return (
      &amp;lt;div&amp;gt;
        {this.props.message} and {this.pointer}
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeAN4U4cEEgYoA5kgBccOjCjAeGgNwUAvgD44i8sshHuUXTwCuIAEZIoJuAHo-OGpgAGskOBgAC2A6JTg0SQhpHhgAEWA+AFkIVxSACgBKGzjlKJiRBxTvOABeOABmMzs4cziifm9C4ublIhhXKB44PJLlOFk+YAA3S1GxmzK6CpwwJdV1LXM4FH4F6KXKp1aesdk-SZnRgqblY-MgA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Typing getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be implemented using hooks which can also help set up memoization.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:class-components--&gt; 
&lt;!--START-SECTION:default-props--&gt; 
&lt;h2&gt;You May Not Need &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As per &lt;a href=&quot;https://twitter.com/dan_abramov/status/1133878326358171650&quot;&gt;this tweet&lt;/a&gt;, defaultProps will eventually be deprecated. You can check the discussions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/hswolff/status/1133759319571345408&quot;&gt;https://twitter.com/hswolff/status/1133759319571345408&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The consensus is to use object default values.&lt;/p&gt; 
&lt;p&gt;Function Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = { age?: number };

const Greet = ({ age = 21 }: GreetProps) =&amp;gt; // etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Class Components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = {
  age?: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  render() {
    const { age = 21 } = this.props;
    /*...*/
  }
}

let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Typing &lt;code&gt;defaultProps&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Type inference improved greatly for &lt;code&gt;defaultProps&lt;/code&gt; in &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html&quot;&gt;TypeScript 3.0+&lt;/a&gt;, although &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/61&quot;&gt;some edge cases are still problematic&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Function Components&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// using typeof as a shortcut; note that it hoists!
// you can also declare the type of DefaultProps if you choose
// e.g. https://github.com/typescript-cheatsheets/react/issues/415#issuecomment-841223219
type GreetProps = { age: number } &amp;amp; typeof defaultProps;

const defaultProps = {
  age: 21,
};

const Greet = (props: GreetProps) =&amp;gt; {
  // etc
};
Greet.defaultProps = defaultProps;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAOKVYwAKxY6ALxwA3igDmWAFxwAdgFcQAIyxQ4AXzgAyOM1YQCcACZYCyeQBte-VPVwRZqeCbOXrEAXGEi6cCdLgAJgBGABo6dXo6e0d4TixuLzgACjAbGXjuPg9UAEovAD5RXzhKGHkoWTgAHiNgADcCkTScgDpkSTgAeiQFZVVELvVqrrrGiPpMmFaXcytsz2FZtwXbOiA&quot;&gt;See this in TS Playground&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;Class components&lt;/strong&gt;, there are &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/103#issuecomment-481061483&quot;&gt;a couple ways to do it&lt;/a&gt; (including using the &lt;code&gt;Pick&lt;/code&gt; utility type) but the recommendation is to &quot;reverse&quot; the props definition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type GreetProps = typeof Greet.defaultProps &amp;amp; {
  age: number;
};

class Greet extends React.Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = {
    age: 21,
  };
  /*...*/
}

// Type-checks! No type assertions needed!
let el = &amp;lt;Greet age={3} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;&lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; nuance for library authors&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;The above implementations work fine for App creators, but sometimes you want to be able to export &lt;code&gt;GreetProps&lt;/code&gt; so that others can consume it. The problem here is that the way &lt;code&gt;GreetProps&lt;/code&gt; is defined, &lt;code&gt;age&lt;/code&gt; is a required prop when it isn&#39;t because of &lt;code&gt;defaultProps&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;The insight to have here is that &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/66#issuecomment-453878710&quot;&gt;&lt;code&gt;GreetProps&lt;/code&gt; is the &lt;em&gt;internal&lt;/em&gt; contract for your component, not the &lt;em&gt;external&lt;/em&gt;, consumer facing contract&lt;/a&gt;. You could create a separate type specifically for export, or you could make use of the &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt; utility:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// internal contract, should not be exported out
type GreetProps = {
  age: number;
};

class Greet extends Component&amp;lt;GreetProps&amp;gt; {
  static defaultProps = { age: 21 };
}

// external contract
export type ApparentGreetProps = JSX.LibraryManagedAttributes&amp;lt;
  typeof Greet,
  GreetProps
&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This will work properly, although hovering over&lt;code&gt;ApparentGreetProps&lt;/code&gt;may be a little intimidating. You can reduce this boilerplate with the&lt;code&gt;ComponentProps&lt;/code&gt; utility detailed below.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Consuming Props of a Component with defaultProps&lt;/h2&gt; 
&lt;p&gt;A component with &lt;code&gt;defaultProps&lt;/code&gt; may seem to have some required props that actually aren&#39;t.&lt;/p&gt; 
&lt;h3&gt;Problem Statement&lt;/h3&gt; 
&lt;p&gt;Here&#39;s what you want to do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface IProps {
  name: string;
}
const defaultProps = {
  age: 25,
};
const GreetComponent = ({ name, age }: IProps &amp;amp; typeof defaultProps) =&amp;gt; (
  &amp;lt;div&amp;gt;{`Hello, my name is ${name}, ${age}`}&amp;lt;/div&amp;gt;
);
GreetComponent.defaultProps = defaultProps;

const TestComponent = (props: React.ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// Property &#39;age&#39; is missing in type &#39;{ name: string; }&#39; but required in type &#39;{ age: number; }&#39;
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Solution&lt;/h3&gt; 
&lt;p&gt;Define a utility that applies &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type ComponentProps&amp;lt;T&amp;gt; = T extends
  | React.ComponentType&amp;lt;infer P&amp;gt;
  | React.Component&amp;lt;infer P&amp;gt;
  ? JSX.LibraryManagedAttributes&amp;lt;T, P&amp;gt;
  : never;

const TestComponent = (props: ComponentProps&amp;lt;typeof GreetComponent&amp;gt;) =&amp;gt; {
  return &amp;lt;h1 /&amp;gt;;
};

// No error
const el = &amp;lt;TestComponent name=&quot;foo&quot; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdMAnmFnAMImQB2W3MABWJhUAHgAqAPjgBeOOLhYAHjD4ATdNjwwAdJ3ARe-cSyyjg3AlihwB0gD6Yqu-Tz4xzl67cl04cAH44ACkAZQANHQAZYAAjKGQoJgBZZG5kAHMsNQBBGBgoOIBXVTFxABofPzgALjheADdrejoLVSgCPDYASSEIETgAb2r0kCw61AKLDPoAXzpcQ0m4NSxOooAbQWF0OWH-TPG4ACYAVnK6WfpF7mWAcUosGFdDd1k4AApB+uQxysO4LM6r0dnAAGRwZisCAEFZrZCbbb9VAASlk0g+1VEamADUkgwABgAJLAbDYQSogJg-MZwYDoAAkg1GWFmlSZh1mBNmogA9Di8XQUfQHlgni8jLpVustn0BnJpQjZTsWrzeXANsh2gwbstxFhJhK3nIPmAdnUjfw5WIoVgYXBReKuK9+JI0TJpPs4JQYEUoNw4KIABYARjgvN8VwYargADkIIooMQoAslvBSe8JAbns7JTSsDIyAQIBAyOHJDQgA&quot;&gt;&lt;em&gt;See this in TS Playground&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Misc Discussions and Knowledge&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why does React.FC break defaultProps?&lt;/summary&gt; 
 &lt;p&gt;You can check the discussions here:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&quot;&gt;https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&quot;&gt;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30695&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&quot;&gt;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/87&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;This is just the current state and may be fixed in future.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;TypeScript 2.9 and earlier&lt;/summary&gt; 
 &lt;p&gt;For TypeScript 2.9 and earlier, there&#39;s more than one way to do it, but this is the best advice we&#39;ve yet seen:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type Props = Required&amp;lt;typeof MyComponent.defaultProps&amp;gt; &amp;amp; {
  /* additional props here */
};

export class MyComponent extends React.Component&amp;lt;Props&amp;gt; {
  static defaultProps = {
    foo: &quot;foo&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Our former recommendation used the &lt;code&gt;Partial type&lt;/code&gt; feature in TypeScript, which means that the current interface will fulfill a partial version on the wrapped interface. In that way we can extend defaultProps without any changes in the types!&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface IMyComponentProps {
  firstProp?: string;
  secondProp: IPerson[];
}

export class MyComponent extends React.Component&amp;lt;IMyComponentProps&amp;gt; {
  public static defaultProps: Partial&amp;lt;IMyComponentProps&amp;gt; = {
    firstProp: &quot;default&quot;,
  };
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The problem with this approach is it causes complex issues with the type inference working with &lt;code&gt;JSX.LibraryManagedAttributes&lt;/code&gt;. Basically it causes the compiler to think that when creating a JSX expression with that component, that all of its props are optional.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;See commentary by @ferdaber here&lt;/a&gt; and &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/61&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:default-props--&gt; 
&lt;!--START-SECTION:basic-type-examples--&gt; 
&lt;h2&gt;Typing Component Props&lt;/h2&gt; 
&lt;p&gt;This is intended as a basic orientation and reference for React developers familiarizing with TypeScript.&lt;/p&gt; 
&lt;h2&gt;Basic Prop Types Examples&lt;/h2&gt; 
&lt;p&gt;A list of TypeScript types you will likely use in a React+TypeScript app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type AppProps = {
  message: string;
  count: number;
  disabled: boolean;
  /** array of a type! */
  names: string[];
  /** string literals to specify exact string values, with a union type to join them together */
  status: &quot;waiting&quot; | &quot;success&quot;;
  /** any object as long as you dont use its properties (NOT COMMON but useful as placeholder) */
  obj: object;
  obj2: {}; // almost the same as `object`, exactly the same as `Object`
  /** an object with any number of properties (PREFERRED) */
  obj3: {
    id: string;
    title: string;
  };
  /** array of objects! (common) */
  objArr: {
    id: string;
    title: string;
  }[];
  /** a dict object with any number of properties of the same type */
  dict1: {
    [key: string]: MyTypeHere;
  };
  dict2: Record&amp;lt;string, MyTypeHere&amp;gt;; // equivalent to dict1
  /** any function as long as you don&#39;t invoke it (not recommended) */
  onSomething: Function;
  /** function that doesn&#39;t take or return anything (VERY COMMON) */
  onClick: () =&amp;gt; void;
  /** function with named prop (VERY COMMON) */
  onChange: (id: number) =&amp;gt; void;
  /** alternative function type syntax that takes an event (VERY COMMON) */
  onClick(event: React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;): void;
  /** an optional prop (VERY COMMON!) */
  optional?: OptionalType;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice we have used the TSDoc &lt;code&gt;/** comment */&lt;/code&gt; style here on each prop. You can and are encouraged to leave descriptive comments on reusable components. For a fuller example and discussion, see our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/misc_concerns/#commenting-components&quot;&gt;Commenting Components&lt;/a&gt; section in the Advanced Cheatsheet.&lt;/p&gt; 
&lt;h2&gt;Useful React Prop Type Examples&lt;/h2&gt; 
&lt;p&gt;Relevant for components that accept other React components as props.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare interface AppProps {
  children1: JSX.Element; // bad, doesnt account for arrays
  children2: JSX.Element | JSX.Element[]; // meh, doesn&#39;t accept strings
  children3: React.ReactChildren; // despite the name, not at all an appropriate type; it is a utility
  children4: React.ReactChild[]; // better, accepts array children
  children: React.ReactNode; // best, accepts everything (see edge case below)
  functionChildren: (name: string) =&amp;gt; React.ReactNode; // recommended function as a child render prop type
  style?: React.CSSProperties; // to pass through style props
  onChange?: React.FormEventHandler&amp;lt;HTMLInputElement&amp;gt;; // form events! the generic parameter is the type of event.target
  //  more info: https://react-typescript-cheatsheet.netlify.app/docs/advanced/patterns_by_usecase/#wrappingmirroring
  props: Props &amp;amp; React.ComponentPropsWithoutRef&amp;lt;&quot;button&quot;&amp;gt;; // to impersonate all the props of a button element and explicitly not forwarding its ref
  props2: Props &amp;amp; React.ComponentPropsWithRef&amp;lt;MyButtonWithForwardRef&amp;gt;; // to impersonate all the props of MyButtonForwardedRef and explicitly forwarding its ref
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Small `React.ReactNode` edge case &lt;/summary&gt; 
 &lt;p&gt;This code typechecks but has a runtime error:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = {
  children: React.ReactNode;
};

function Comp({ children }: Props) {
  return &amp;lt;div&amp;gt;{children}&amp;lt;/div&amp;gt;;
}
function App() {
  return &amp;lt;Comp&amp;gt;{{}}&amp;lt;/Comp&amp;gt;; // Runtime Error: Objects not valid as React Child!
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This is because &lt;code&gt;ReactNode&lt;/code&gt; includes &lt;code&gt;ReactFragment&lt;/code&gt; which allows a &lt;code&gt;{}&lt;/code&gt; type, which is &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37596#issue-480260937&quot;&gt;too wide&lt;/a&gt;. Fixing this would break a lot of libraries, so for now you just have to be mindful that &lt;code&gt;ReactNode&lt;/code&gt; is not absolutely bulletproof.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/357&quot;&gt;Thanks @pomle for raising this.&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;JSX.Element vs React.ReactNode?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Quote &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/57&quot;&gt;@ferdaber&lt;/a&gt;: A more technical explanation is that a valid React node is not the same thing as what is returned by &lt;code&gt;React.createElement&lt;/code&gt;. Regardless of what a component ends up rendering, &lt;code&gt;React.createElement&lt;/code&gt; always returns an object, which is the &lt;code&gt;JSX.Element&lt;/code&gt; interface, but &lt;code&gt;React.ReactNode&lt;/code&gt; is the set of all possible return values of a component.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;JSX.Element&lt;/code&gt; -&amp;gt; Return value of &lt;code&gt;React.createElement&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;React.ReactNode&lt;/code&gt; -&amp;gt; Return value of a component&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/129&quot;&gt;More discussion: Where ReactNode does not overlap with JSX.Element&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Types or Interfaces?&lt;/h2&gt; 
&lt;p&gt;You can use either Types or Interfaces to type Props and State, so naturally the question arises - which do you use?&lt;/p&gt; 
&lt;h3&gt;TL;DR&lt;/h3&gt; 
&lt;p&gt;Use Interface until You Need Type - &lt;a href=&quot;https://twitter.com/orta/status/1356129195835973632?s=20&quot;&gt;orta&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;More Advice&lt;/h3&gt; 
&lt;p&gt;Here&#39;s a helpful rule of thumb:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;always use &lt;code&gt;interface&lt;/code&gt; for public API&#39;s definition when authoring a library or 3rd party ambient type definitions, as this allows a consumer to extend them via &lt;em&gt;declaration merging&lt;/em&gt; if some definitions are missing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;consider using &lt;code&gt;type&lt;/code&gt; for your React Component Props and State, for consistency and because it is more constrained.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can read more about the reasoning behind this rule of thumb in &lt;a href=&quot;https://medium.com/@martin_hotell/interface-vs-type-alias-in-typescript-2-7-2a8f1777af4c&quot;&gt;Interface vs Type alias in TypeScript 2.7&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The TypeScript Handbook now also includes guidance on &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces&quot;&gt;Differences Between Type Aliases and Interfaces&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: At scale, there are performance reasons to prefer interfaces (&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance#preferring-interfaces-over-intersections&quot;&gt;see official Microsoft notes on this&lt;/a&gt;) but &lt;a href=&quot;https://news.ycombinator.com/item?id=25201887&quot;&gt;take this with a grain of salt&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Types are useful for union types (e.g. &lt;code&gt;type MyType = TypeA | TypeB&lt;/code&gt;) whereas Interfaces are better for declaring dictionary shapes and then &lt;code&gt;implementing&lt;/code&gt; or &lt;code&gt;extending&lt;/code&gt; them.&lt;/p&gt; 
&lt;h3&gt;Useful table for Types vs Interfaces&lt;/h3&gt; 
&lt;p&gt;It&#39;s a nuanced topic, don&#39;t get too hung up on it. Here&#39;s a handy table:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Aspect&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Type&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Interface&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe functions&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe constructors&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can describe tuples&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Interfaces can extend it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Classes can extend it&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Classes can implement it (&lt;code&gt;implements&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can intersect another one of its kind&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can create a union with another one of its kind&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be used to create mapped types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be mapped over with mapped types&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expands in error messages and logs&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be augmented&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🚫&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be recursive&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;⚠️&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;⚠️ In some cases&lt;/p&gt; 
&lt;p&gt;(source: &lt;a href=&quot;https://twitter.com/karoljmajewski/status/1082413696075382785&quot;&gt;Karol Majewski&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:basic-type-examples--&gt; 
&lt;!--START-SECTION:get-derived-state-from-props--&gt; 
&lt;h2&gt;getDerivedStateFromProps&lt;/h2&gt; 
&lt;p&gt;Before you start using &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;, please go through the &lt;a href=&quot;https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops&quot;&gt;documentation&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot;&gt;You Probably Don&#39;t Need Derived State&lt;/a&gt;. Derived State can be easily achieved using hooks which can also help set up memoization easily.&lt;/p&gt; 
&lt;p&gt;Here are a few ways in which you can annotate &lt;code&gt;getDerivedStateFromProps&lt;/code&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you have explicitly typed your derived state and want to make sure that the return value from &lt;code&gt;getDerivedStateFromProps&lt;/code&gt; conforms to it.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;Props, State&amp;gt; {
  static getDerivedStateFromProps(
    props: Props,
    state: State
  ): Partial&amp;lt;State&amp;gt; | null {
    //
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;When you want the function&#39;s return value to determine your state.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class Comp extends React.Component&amp;lt;
  Props,
  ReturnType&amp;lt;typeof Comp[&quot;getDerivedStateFromProps&quot;]&amp;gt;
&amp;gt; {
  static getDerivedStateFromProps(props: Props) {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;When you want derived state with other state fields and memoization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type CustomValue = any;
interface Props {
  propA: CustomValue;
}
interface DefinedState {
  otherStateField: string;
}
type State = DefinedState &amp;amp; ReturnType&amp;lt;typeof transformPropsToState&amp;gt;;
function transformPropsToState(props: Props) {
  return {
    savedPropA: props.propA, // save for memoization
    derivedState: props.propA,
  };
}
class Comp extends React.PureComponent&amp;lt;Props, State&amp;gt; {
  constructor(props: Props) {
    super(props);
    this.state = {
      otherStateField: &quot;123&quot;,
      ...transformPropsToState(props),
    };
  }
  static getDerivedStateFromProps(props: Props, state: State) {
    if (isEqual(props.propA, state.savedPropA)) return null;
    return transformPropsToState(props);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOYAZwFEBHAVxQBs5tcD2IATFHQAWAOnpJWHMuQowAnmCRwAwizoxcANQ4tlAXjgoAdvIDcFYMZhIomdMoAKOMHTgBvCnDhgXAQQAuVXVNEB12PQtyAF9La1t7NGUAESRMKyR+AGUYFBsPLzgIGGFbHLykADFgJHZ+II0oKwBzKNjyBSU4cvzDVPTjTJ7lADJEJBgWKGMAFUUkAB5OpAhMOBgoEzpMaBBnCFcZiGGAPijMFmMMYAhjdc3jbd39w+PcmwAKXwO6IJe6ACUBXI3iIk2mwO83joKAAbpkXoEfC46KJvmA-AAaOAAehxcBh8K40DgICQIAgwAAXnkbsZCt5+LZgPDsu8kEF0aj0X5CtE2hQ0OwhG4VLgwHAkAAPGzGfhuZDoGCiRxTJBi8C3JDWBb-bGnSFwNC3RosDDQL4ov4ooGeEFQugsJRQS0-AFRKHrYT0UQaCpwQx2z3eYqlKDDaq1epwABEAEYAEwAZhjmIZUNEmY2Wx2UD2KKOw1drgB6f5fMKfpgwDQcGaE1STVZEZw+Z+xd+cD1BPZQWGtvTwDWH3ozDY7A7aP82KrSF9cIR-gBQLBUzuxhY7HYHqhq4h2ceubbryLXPdFZiQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:get-derived-state-from-props--&gt; 
&lt;!--START-SECTION:forms-and-events--&gt; 
&lt;h2&gt;Forms and Events&lt;/h2&gt; 
&lt;p&gt;If performance is not an issue (and it usually isn&#39;t!), inlining handlers is easiest as you can just use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-typing&quot;&gt;type inference and contextual typing&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const el = (
  &amp;lt;button
    onClick={(event) =&amp;gt; {
      /* event will be correctly typed automatically! */
    }}
  /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you need to define your event handler separately, IDE tooling really comes in handy here, as the @type definitions come with a wealth of typing. Type what you are looking for and usually the autocomplete will help you out. Here is what it looks like for an &lt;code&gt;onChange&lt;/code&gt; for a form event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type State = {
  text: string;
};
class App extends React.Component&amp;lt;Props, State&amp;gt; {
  state = {
    text: &quot;&quot;,
  };

  // typing on RIGHT hand side of =
  onChange = (e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void =&amp;gt; {
    this.setState({ text: e.currentTarget.value });
  };
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;input type=&quot;text&quot; value={this.state.text} onChange={this.onChange} /&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2KA9Drg8IcMDjB1tcblwBccOjCjAeAcwDcmlRQB8W8ovso3HAAvL6KilYwtgBE0R7ulH5wepYAnmBOznAQPIgAkgDiABIAKnAAFij8dsB8SNmYIZo5YpUu9aEAFEi2QhgiAGLQIACiAG4ysqUAsgAyeTxgAK4wI9RIIDJeAJS2YxC1IT5KFjDlwHQidEgwAMowgUidSpacUewiaEtQRDwwJSgoM4biIxihqEt6iptglFCpYXBfnUoJ1tmFwkQYN9cp0LIpZHxgGMvHjwrInMt4DB0khgtFItE4GCIbSlGcLlcHtwRJEVNkeK0qsDgmzzpcWm1gXydCSkuE4LIdITiRYYR4KCogA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Instead of typing the arguments and return values with &lt;code&gt;React.FormEvent&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt;, you may alternatively apply types to the event handler itself (&lt;em&gt;contributed by @TomasHubelbauer&lt;/em&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;  // typing on LEFT hand side of =
  onChange: React.ChangeEventHandler&amp;lt;HTMLInputElement&amp;gt; = (e) =&amp;gt; {
    this.setState({text: e.currentTarget.value})
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Why two ways to do the same thing?&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The first method uses an inferred method signature &lt;code&gt;(e: React.FormEvent&amp;lt;HTMLInputElement&amp;gt;): void&lt;/code&gt; and the second method enforces a type of the delegate provided by &lt;code&gt;@types/react&lt;/code&gt;. So &lt;code&gt;React.ChangeEventHandler&amp;lt;&amp;gt;&lt;/code&gt; is simply a &quot;blessed&quot; typing by &lt;code&gt;@types/react&lt;/code&gt;, whereas you can think of the inferred method as more... &lt;em&gt;artisanally hand-rolled&lt;/em&gt;. Either way it&#39;s a good pattern to know. &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/24&quot;&gt;See our Github PR for more&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Typing onSubmit, with Uncontrolled components in a Form&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you don&#39;t quite care about the type of the event, you can just use React.SyntheticEvent. If your target form has custom named inputs that you&#39;d like to access, you can use a type assertion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;form
  ref={formRef}
  onSubmit={(e: React.SyntheticEvent) =&amp;gt; {
    e.preventDefault();
    const target = e.target as typeof e.target &amp;amp; {
      email: { value: string };
      password: { value: string };
    };
    const email = target.email.value; // typechecks!
    const password = target.password.value; // typechecks!
    // etc...
  }}
&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Email:
      &amp;lt;input type=&quot;email&quot; name=&quot;email&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;label&amp;gt;
      Password:
      &amp;lt;input type=&quot;password&quot; name=&quot;password&quot; /&amp;gt;
    &amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;input type=&quot;submit&quot; value=&quot;Log in&quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGctoRlM4BeRYmAOgFc6kLABQBKClVoM4AMSbs4o9gD4FFOHAA8mJmrhFMbAN7aozJJgC+u2gGVeAIxDAYRoUgBcndDxsBPGjAAFkgwwGgAogBuSAEiynCGuupI3GBE0QEAIuYovAA2MKIA3Elw1PTwMChQAOYh8ilVtfUodHAwvmBIEKyN1XXwAGQJpckgKMB5noZwkSh5vB5wDFDANDVwFiXk6rtwYK10AO7QACbTs-OLnitrG1ulDzu75VJI45PyTQPc7xN53DmCyQRTgAHowe1Okg0ME0ABrOgAQlKr3gBzoxzOX36IVShxOUFOgKuIPBkI6XVhMMRKOe6ghcBCaG4rN0Fis5CUug0p2AkW59M0eRQ9iQeUFe3U4Q+U1GmjWYF4lWhbAARH9Jmq4DQUCAkOrNXltWDJbsNGCRWKJTywXyBTz7Wb1BoreLnbsAAoEs7ueUaRXKqFddUYrFE7W6-Whn0R8Eei1um3PC1Ox38hOBlUhtV0BxOGDaoGLdUAGQgGzWJrNqYzFAtJhAgpEQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Of course, if you&#39;re making any sort of significant form, &lt;a href=&quot;https://jaredpalmer.com/formik&quot;&gt;you should use Formik&lt;/a&gt; or &lt;a href=&quot;https://react-hook-form.com/&quot;&gt;React Hook Form&lt;/a&gt;, which are written in TypeScript.&lt;/p&gt; 
&lt;h3&gt;List of event types&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Event Type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AnimationEvent&lt;/td&gt; 
   &lt;td&gt;CSS Animations.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChangeEvent&lt;/td&gt; 
   &lt;td&gt;Changing the value of &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ClipboardEvent&lt;/td&gt; 
   &lt;td&gt;Using copy, paste and cut events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CompositionEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user indirectly entering text (e.g. depending on Browser and PC setup, a popup window may appear with additional characters if you e.g. want to type Japanese on a US Keyboard)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DragEvent&lt;/td&gt; 
   &lt;td&gt;Drag and drop interaction with a pointer device (e.g. mouse).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FocusEvent&lt;/td&gt; 
   &lt;td&gt;Event that occurs when elements gets or loses focus.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FormEvent&lt;/td&gt; 
   &lt;td&gt;Event that occurs whenever a form or form element gets/loses focus, a form element value is changed or the form is submitted.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;InvalidEvent&lt;/td&gt; 
   &lt;td&gt;Fired when validity restrictions of an input fails (e.g &lt;code&gt;&amp;lt;input type=&quot;number&quot; max=&quot;10&quot;&amp;gt;&lt;/code&gt; and someone would insert number 20).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KeyboardEvent&lt;/td&gt; 
   &lt;td&gt;User interaction with the keyboard. Each event describes a single key interaction.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MouseEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user interacting with a pointing device (e.g. mouse)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PointerEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to user interaction with a variety pointing of devices such as mouse, pen/stylus, a touchscreen and which also supports multi-touch. Unless you develop for older browsers (IE10 or Safari 12), pointer events are recommended. Extends UIEvent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TouchEvent&lt;/td&gt; 
   &lt;td&gt;Events that occur due to the user interacting with a touch device. Extends UIEvent.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TransitionEvent&lt;/td&gt; 
   &lt;td&gt;CSS Transition. Not fully browser supported. Extends UIEvent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIEvent&lt;/td&gt; 
   &lt;td&gt;Base Event for Mouse, Touch and Pointer events.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WheelEvent&lt;/td&gt; 
   &lt;td&gt;Scrolling on a mouse wheel or similar input device. (Note: &lt;code&gt;wheel&lt;/code&gt; event should not be confused with the &lt;code&gt;scroll&lt;/code&gt; event)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyntheticEvent&lt;/td&gt; 
   &lt;td&gt;The base event for all above events. Should be used when unsure about event type&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;&lt;strong&gt;What about &lt;code&gt;InputEvent&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &lt;/summary&gt; 
 &lt;p&gt;You&#39;ve probably noticed that there is no &lt;code&gt;InputEvent&lt;/code&gt;. This is because it is not supported by Typescript as the event itself has no fully browser support and may behave differently in different browsers. You can use &lt;code&gt;KeyboardEvent&lt;/code&gt; instead.&lt;/p&gt; 
 &lt;p&gt;Sources:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/29441&quot;&gt;https://github.com/microsoft/TypeScript/issues/29441&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/InputEvent&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/InputEvent&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:forms-and-events--&gt; 
&lt;!--START-SECTION:context--&gt; 
&lt;h2&gt;Context&lt;/h2&gt; 
&lt;h2&gt;Basic Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

interface AppContextInterface {
  name: string;
  author: string;
  url: string;
}

const AppCtx = React.createContext&amp;lt;AppContextInterface | null&amp;gt;(null);

// Provider in your app

const sampleAppContext: AppContextInterface = {
  name: &quot;Using React Context in a Typescript App&quot;,
  author: &quot;thehappybug&quot;,
  url: &quot;http://www.example.com&quot;,
};

export const App = () =&amp;gt; (
  &amp;lt;AppCtx.Provider value={sampleAppContext}&amp;gt;...&amp;lt;/AppCtx.Provider&amp;gt;
);

// Consume in your app

export const PostInfo = () =&amp;gt; {
  const appContext = React.useContext(AppCtx);
  return (
    &amp;lt;div&amp;gt;
      Name: {appContext.name}, Author: {appContext.author}, Url:{&quot; &quot;}
      {appContext.url}
    &amp;lt;/div&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href=&quot;https://reactjs.org/docs/context.html#classcontexttype&quot;&gt;Class.contextType&lt;/a&gt; or &lt;a href=&quot;https://reactjs.org/docs/context.html#contextconsumer&quot;&gt;Context.Consumer&lt;/a&gt; API, let us know if you have trouble with that.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react/issues/97&quot;&gt;Thanks to @AlvSovereign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Extended Example&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; with an empty object as default value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ContextState {
  // set the type of state you want to handle with context e.g.
  name: string | null;
}
//set an empty object as default state
const Context = React.createContext({} as ContextState);
// set up context provider as you normally would in JavaScript [React Context API](https://reactjs.org/docs/context.html#api)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;strong&gt;no &lt;code&gt;defaultValue&lt;/code&gt;, yet no need to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import * as React from &quot;react&quot;;

const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);

function EnthusasticGreeting() {
  const currentUser = React.useContext(currentUserContext);
  return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;currentUserContext.Provider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/currentUserContext.Provider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice the explicit type arguments which we need because we don&#39;t have a default &lt;code&gt;string&lt;/code&gt; value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string | undefined&amp;gt;(undefined);
//                                             ^^^^^^^^^^^^^^^^^^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;along with the non-null assertion to tell TypeScript that &lt;code&gt;currentUser&lt;/code&gt; is definitely going to be there:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;return &amp;lt;div&amp;gt;HELLO {currentUser!.toUpperCase()}!&amp;lt;/div&amp;gt;;
//                              ^
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is unfortunate because &lt;em&gt;we know&lt;/em&gt; that later in our app, a &lt;code&gt;Provider&lt;/code&gt; is going to fill in the context.&lt;/p&gt; 
&lt;p&gt;There are a few solutions for this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;You can get around this by asserting non null:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;const currentUserContext = React.createContext&amp;lt;string&amp;gt;(undefined!);
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(&lt;a href=&quot;https://www.typescriptlang.org/play/index.html?jsx=1#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQduEAdqvLgK5SXMwCqqLFADCLGFgAe8ALyYqMAHS5KycaN6SYAHjZRgzAOYA+ABQdmAEywF9WCwEIAlPQLn8wFnACivABYdUNBhgXABxSixgwxNHOABvOjg4JlZ2Lh5+QSg4WWw8RQCsdXEpE05uLF4BIWLNZ0S4ShguZjgtC2AANyMACS8AGX6AeXjyjOqoBRgIPjAwGrQsGIBfey0Aeg7u+mW6V2Z3TwBBOZj4hqaWtrHKzJqxTQUABWJO4CtszuQAGw4saTIAGVfMgAO7MMhGBpJLQ+GD+QJsELhLCRfQGODrKEw9Y3KpZWpSZ6vd5CIw7IA&quot;&gt;Playground here&lt;/a&gt;) This is a quick and easy fix, but this loses type-safety, and if you forget to supply a value to the Provider, you will get an error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We can write a helper function called &lt;code&gt;createCtx&lt;/code&gt; that guards against accessing a &lt;code&gt;Context&lt;/code&gt; whose value wasn&#39;t provided. By doing this, API instead, &lt;strong&gt;we never have to provide a default and never have to check for &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import * as React from &quot;react&quot;;

/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// Usage:

// We still have to specify a type, but no default!
export const [useCurrentUserName, CurrentUserProvider] = createCtx&amp;lt;string&amp;gt;();

function EnthusasticGreeting() {
  const currentUser = useCurrentUserName();
  return &amp;lt;div&amp;gt;HELLO {currentUser.toUpperCase()}!&amp;lt;/div&amp;gt;;
}

function App() {
  return (
    &amp;lt;CurrentUserProvider value=&quot;Anders&quot;&amp;gt;
      &amp;lt;EnthusasticGreeting /&amp;gt;
    &amp;lt;/CurrentUserProvider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/play/index.html?jsx=1&amp;amp;ssl=1&amp;amp;ssc=1&amp;amp;pln=31&amp;amp;pc=2#code/JYWwDg9gTgLgBAKjgQwM5wEoFNkGN4BmUEIcARFDvmQNwBQdA9AgnYnAIJwAWWANmCxQ4MCHFyVkMLCjgBhCADtpAD3jJFAEzgAFYgDdgmoXADuwGNziKxAVzBEl8YwWS2+8fcj62sAGhQtNiRzSwhbeG5kQ0UAcxExXF5cAGs4Amg4Wy0sAmBFLG1vPhFeEVAsADpgxjoCbPxgJXFJaTkYFQAeLiw1LC10AG8AXzgAH2t3PgA+AAoASjhBtnElVHh8FTgAXkwqGEqJHDanXphu8aycvILNOeyXfML5+jh0hpgmxSzULHaVBZLFZvXBrDY7PZ4A62X4KZRnWabF7AuDAAhwRE7ba7B65J6aRaWYimaxYEkAUSgxCgszIML+HTgIBh8AARjJ8qgjDJkLoDNzhKErLyvD4sGRkW83pQYLYoN9cK84MMVjK5d8ANr0-4BTaVPQQQzGKAAXRQ6FBinWNDgjEYcAA5GhVlaYA6mcgUlh0AAVACeggAyhJgGB4PkCCZebKwHwsHQVUx7QBVVDIWJYABcDDtcAA6jJ1sA+CUovoZKI4KhBLg0X7ZDAA-44KyItYxC43B4AIR0XqQWAu9ZwLWwuWUZSpoQAOWQIGbcnH-RgU6gBqNQjNuyOUgZXXWUHysTmyLqHy+cHJym4MLQn1wAHFKFhPnFAcsQWDxEvJ79hDixypZdV1necFiVNV5TgTpNGAfRpgACXJAAZZCAHkllwH8Vz-SpRGTMBBCgOQ0CwBZhm7TpGFg+D6ETepFEaZoOEI99VRfdVoMXIDfyEdcBTgUVfG2MhAyiUxFDIaYUU6K9LFvItH2fV94kYaS3io7iJxwvj+WNaY6KAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can go even further and combine this idea using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;a href=&quot;https://kentcdodds.com/blog/application-state-management-with-react/&quot;&gt;context getters&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;/**
 * A helper to create a Context and Provider with no upfront default value, and
 * without having to check for undefined all the time.
 */
function createCtx&amp;lt;A extends {} | null&amp;gt;() {
  const ctx = React.createContext&amp;lt;A | undefined&amp;gt;(undefined);
  function useCtx() {
    const c = React.useContext(ctx);
    if (c === undefined)
      throw new Error(&quot;useCtx must be inside a Provider with a value&quot;);
    return c;
  }
  return [useCtx, ctx.Provider] as const; // &#39;as const&#39; makes TypeScript infer a tuple
}

// usage

export const [useCtx, SettingProvider] = createCtx&amp;lt;string&amp;gt;(); // specify type, but no need to specify value upfront!
export function App() {
  const key = useCustomHook(&quot;key&quot;); // get a value from a hook, must be in a component
  return (
    &amp;lt;SettingProvider value={key}&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/SettingProvider&amp;gt;
  );
}
export function Component() {
  const key = useCtx(); // can still use without null check!
  return &amp;lt;div&amp;gt;{key}&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtCAOwGd4BXOpAYWZlwAkIIBrOAF44ACj5IAngC44DKMBoBzAJRCAfHADeFOHGr14AbQYoYSADSykMAMoxTSALpDExGADpmSOw5GaAvso6cEQwjFA0svZmhuISjhT+FAD0yXpEDnq0ZgAe8ADuwDAAFnA0EHCMYNjZcAAmSJgojAA2MABqKC2MSClphSUQjPDFKABuCopwnPUVjDQNmApIdXrFSGgCXS3T69OgveSY8xjAtOmoZqwwOQA8AIJqIqra5Lr6DHo3LsjoHmgZK7ZJB5B5wAA+lQWjWWdSe80WsOUAG5gscaKdzl5rjlnlpgu9aJ80D83J4WKxgXkRBgciiCXBgJhRABCNCqEo4fJlJDcgCiUBwUBEACJsd8QBw4AAjJCM+jABpwFBwAAKOAmDSgcAGpRVYy6PRF9LeuhC1nCkTQqNNSVNoUtcEM4pyllp7nVEE1SCgzhQdCyBmRcFScBAKHEcAAKhIwN4AcAwPAFJgfcrplUWhYyhB4ChIihBSgJHAIMz5mdIjBY0g6IkKH1KnQUIpDhQQZBYIHPs6KTdLDZrDBJp7vb6XADLmwbrc5JMniiQ2k6HG0EyS9W45ZpcMczyVtMKiuNuu4AbunKqjUaDAWe2cp2sCdh+d7mAwHjXoSDHA4i5sRw3C8HwopxMawahq2eZnoaco1HgKrFMBliSp8sryum1DgLQSA3sEDoRKIDK3IOMDDkoo6Kmm549IImhxP4agMrotyUthNC4fAyRMaaLHJKR5GKJRWo8boJp2h20BPhiL6RGxkAcTen7BB88B-sILrPBBaRoPmUTAC0OxeDqRRIbuNCtDsaDrJsd72hahG3HUwBjGo9GSP4tzJM5rk2v4QA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Using &lt;code&gt;React.createContext&lt;/code&gt; and &lt;code&gt;useContext&lt;/code&gt; to make a &lt;code&gt;createCtx&lt;/code&gt; with &lt;a href=&quot;https://github.com/jamiebuilds/unstated&quot;&gt;&lt;code&gt;unstated&lt;/code&gt;&lt;/a&gt;-like context setters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export function createCtx&amp;lt;A&amp;gt;(defaultValue: A) {
  type UpdateType = React.Dispatch&amp;lt;
    React.SetStateAction&amp;lt;typeof defaultValue&amp;gt;
  &amp;gt;;
  const defaultUpdate: UpdateType = () =&amp;gt; defaultValue;
  const ctx = React.createContext({
    state: defaultValue,
    update: defaultUpdate,
  });
  function Provider(props: React.PropsWithChildren&amp;lt;{}&amp;gt;) {
    const [state, update] = React.useState(defaultValue);
    return &amp;lt;ctx.Provider value={{ state, update }} {...props} /&amp;gt;;
  }
  return [ctx, Provider] as const; // alternatively, [typeof ctx, typeof Provider]
}

// usage

const [ctx, TextProvider] = createCtx(&quot;someText&quot;);
export const TextContext = ctx;
export function App() {
  return (
    &amp;lt;TextProvider&amp;gt;
      &amp;lt;Component /&amp;gt;
    &amp;lt;/TextProvider&amp;gt;
  );
}
export function Component() {
  const { state, update } = React.useContext(TextContext);
  return (
    &amp;lt;label&amp;gt;
      {state}
      &amp;lt;input type=&quot;text&quot; onChange={(e) =&amp;gt; update(e.target.value)} /&amp;gt;
    &amp;lt;/label&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCpAD0ljkwFcA7DYCZuNIlGJAYRjUAPAEEAfAAoAJkkwpGAGxgA1FIsZIAXHFEBKOAG8KcODACeYJHACqYabyQAVS9YC8iYjAB0AEWAAzmC8aAAWwsjoPgDKSDDRMI6ibBzCFlYQmHCy8kqq6pri4gDcJlwcAfA5Csp2Dnw6dY4uVnAekgZu4tlyNfkaSKXkpmgV8BjUbZ5R3tyofPwcfNQwksbDpnCVjjrVeWoDADRlpoz2Oz25ted8ZQC+ekOmTKww7JwACjgAbsCyUJIwDgwAEdJEMN4vhAQQB1YAwUL8ULARTSIjMYSGO7iAzrTblZiVOAAbW2fEOcDO9SQAF0puCfIwAkgEo4ZL19gUkI8TnAiDBGFBOMIJpCfn8kFA4N8uW5DIYtolyZSbtY7ncjN4tUDoQENQB6Er3Mr8wWcYkTClQ37-OkoAIEyrFOD6-VwdR8IW8YDfJCKcwU4npJCZLhCCnB0PWiVQGkUO4UCiuykBFAAcyQifIo0J8At4bgThoMGjtqmc0cgmokgARAFcM5izWeeQaHRxmNC8XFsxlvAPBMhm3oFgWClOKIwGAOkYTXEzXBJLzhEWVqXJeJeaZhItwBwkL2XZuNtv9auS+L-sfTC2E63aCOGGO3hw4LvIMwD6tcWUc0SFWSSAUlSjhwBqHgMt4TICEsxaSOePZ9i2pimkKi7LooKAAEZ+te+JGIBd74XAwjAMwYCMPAwZuDWfY1nAHBIigzAZnK7jdCBfCSEg3iJFAGY+DKAx6AaeGnphOGKHht5AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href=&quot;https://gist.github.com/sw-yx/f18fe6dd4c43fddb3a4971e80114a052&quot;&gt;useReducer-based version&lt;/a&gt; may also be helpful.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Mutable Context Using a Class component wrapper&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;em&gt;Contributed by: &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/13&quot;&gt;@jpavon&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface ProviderState {
  themeColor: string;
}

interface UpdateStateArg {
  key: keyof ProviderState;
  value: string;
}

interface ProviderStore {
  state: ProviderState;
  update: (arg: UpdateStateArg) =&amp;gt; void;
}

const Context = React.createContext({} as ProviderStore); // type assertion on empty object

class Provider extends React.Component&amp;lt;{}, ProviderState&amp;gt; {
  public readonly state = {
    themeColor: &quot;red&quot;,
  };

  private update = ({ key, value }: UpdateStateArg) =&amp;gt; {
    this.setState({ [key]: value });
  };

  public render() {
    const store: ProviderStore = {
      state: this.state,
      update: this.update,
    };

    return (
      &amp;lt;Context.Provider value={store}&amp;gt;{this.props.children}&amp;lt;/Context.Provider&amp;gt;
    );
  }
}

const Consumer = Context.Consumer;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:context--&gt; 
&lt;!--START-SECTION:forward-create-ref--&gt; 
&lt;h2&gt;forwardRef/createRef&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/README.md#hooks&quot;&gt;Hooks section&lt;/a&gt; for &lt;code&gt;useRef&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;createRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class CssThemeProvider extends React.PureComponent&amp;lt;Props&amp;gt; {
  private rootRef = React.createRef&amp;lt;HTMLDivElement&amp;gt;(); // like this
  render() {
    return &amp;lt;div ref={this.rootRef}&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;forwardRef&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef&amp;lt;Ref, Props&amp;gt;((props, ref) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;pre&gt;&lt;code&gt;Side note: the `ref` you get from `forwardRef` is mutable so you can assign to it if needed.
&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt; 
 &lt;p&gt;This was done &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43265/&quot;&gt;on purpose&lt;/a&gt;. You can make it immutable if you have to - assign &lt;code&gt;React.Ref&lt;/code&gt; if you want to ensure nobody reassigns it:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type Props = { children: React.ReactNode; type: &quot;submit&quot; | &quot;button&quot; };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef((
  props: Props,
  ref: React.Ref&amp;lt;Ref&amp;gt; // &amp;lt;-- here!
) =&amp;gt; (
  &amp;lt;button ref={ref} className=&quot;MyClassName&quot; type={props.type}&amp;gt;
    {props.children}
  &amp;lt;/button&amp;gt;
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;If you are grabbing the props of a component that forwards refs, use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More info: &lt;a href=&quot;https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&quot;&gt;https://medium.com/@martin_hotell/react-refs-with-typescript-a32d56c4d315&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to do &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/167&quot;&gt;Conditional Rendering with &lt;code&gt;forwardRef&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:forward-create-ref--&gt; 
&lt;!--START-SECTION:portals--&gt; 
&lt;h2&gt;Portals&lt;/h2&gt; 
&lt;p&gt;Using &lt;code&gt;ReactDOM.createPortal&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const modalRoot = document.getElementById(&quot;modal-root&quot;) as HTMLElement;
// assuming in your html file has a div with id &#39;modal-root&#39;;

export class Modal extends React.Component {
  el: HTMLElement = document.createElement(&quot;div&quot;);

  componentDidMount() {
    modalRoot.appendChild(this.el);
  }

  componentWillUnmount() {
    modalRoot.removeChild(this.el);
  }

  render() {
    return ReactDOM.createPortal(this.props.children, this.el);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWRYmAEQHkBZObXAo9GAWgBNcZchTQQAdgGd4ICHxQAbBBAjwAvHAFoAriCRiYAOgDmSGAFF5SXfoBCATwCSfABQAiGXPk8cK1wEo4FAk4AAkAFWYAGQsrPRgAbgoAeiTAiQkdYDEjOCy4OwgtKDgACxgQeTZgS1KgwI1gADc4AHdgGBLcvgIPBW9lGHxE4XIkAA9qeDR5IODmWQU4cZg9PmDkbgMAYVxIMTi4AG8KOCX5AC5QiOjLazUNCG07gzQuFZi7tz4m-2GTuFE4HEcXowD48y0+mcAWO5FOp16igGBhQYDAqy2JWqLg6wAkBiQ8j8w1OAF8KP9AXs4gB1aryACqYhkkJg0KO-wRCyRKgMRBkjSQmOxzlx+MJxP+5JGpyIYj4SCg7Nh8LgRBgRTEtG4TGYLzeSAACtAYApRVj8WAcGB8WgsfI+HKADRwMUEokkuDS0lAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using hooks&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Same as above but using hooks&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import React, { useEffect, useRef } from &quot;react&quot;;
import { createPortal } from &quot;react-dom&quot;;

const modalRoot = document.querySelector(&quot;#modal-root&quot;) as HTMLElement;

const Modal: React.FC&amp;lt;{}&amp;gt; = ({ children }) =&amp;gt; {
  const el = useRef(document.createElement(&quot;div&quot;));

  useEffect(() =&amp;gt; {
    // Use this in case CRA throws an error about react-hooks/exhaustive-deps
    const current = el.current;

    // We assume `modalRoot` exists with &#39;!&#39;
    modalRoot!.appendChild(current);
    return () =&amp;gt; void modalRoot!.removeChild(current);
  }, []);

  return createPortal(children, el.current);
};

export default Modal;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoUSWOAbzjSJRiQAVoYUAbOAXzmy4CTDAFoAJrjLkKAellwUAZyUBXEMAB2Aczha4ATwiqocABYwQPTMC5JzyxXHHAAbnADuwGGb3iCIBDi3KI4EDD4ANwUFGgQmkrwALJB3ABciMQwAHQAYgDCADy0vAB8cAC8cAAU9GhmtuJEmnwAlJXltBRwcPJwAKIgqlzM9j72aCMqDLiQmkiaEUp6CZyaaPauKFDAKABGdp7evihwRJjdM6twSDxVyOg5qkpIyJjVkmjqCzmMqCz9OwgH7VABELlcoNarWiMnIPQeGGyzyQ-UwmCQGGq1XaFU6lx6fQA6vZlGpgXAAAaBYJcBAQcKUm4AD2AiWWXh8BAAhNIej04tcadx6eFKs4IF9gYtsgBHVRIKAGADKt0xMGgYIAxMKuKEGTAoYplgAJAAqSQAMoCkNKYLD+XBdaKYNzsigwGAFuJ8g0uOJqrdsl8oM0YDCCWckDATC0cR04K4IMB-M6DW6iIFXEhfY1A1xgyYwxH4XwADRwADaAF0S5c+gBJVaofwQTBU26UivjK6cLSKvTLHuU86F0M-SmXIgxqAtP6jdiwbjVeqNZoVoMh4uw3iwuQKZ4obRIGLkTCqdYwYDxOAAQU98a6pcFiSrSjMEA8KVpFZeMGVH5fqkXDVuKiJPC8yqcCw1SYNwLwlj006xjUkaFBCpSRoSChGKoDAoC08EQHAYCqPAPhsishjGKYiTMMAaDmJY1i2CepaOuhbh+BUoK6vq4SgqUhSyBhWF0O+n7ftwcAAGQyah7GOnAhRSVwmGKUpykQmJmmJAYdgVLQT6aSZzhsmAIwGBkoLaDs4igmWOkmRZ6BIA2LAgEo1kbIsioOU5mlmEgwDaBY1kAIwAAyRa4Zj+RpplHOIPgZPgUUxWY+COQlpl7OgADWtnGJo4jWVA2h5dUkVltVtXZOFrTxYlSkAF5NuISDMhkACc3XZc1PS8LwAVwOpA1wA2+B4KcurcrQoJwKCw05UphR7GRGotHpBlGXlaCFTgF6lYtYAegYKAeA0YBLfw8T5FwDH5YZ8Z4nAf4AZJwGwfBSCtGUkwQC8wnrTAm1jYlwmiStwmqeDjp-WJa0bTed0Pftz24uU72Aap1QwFACp-aUEkeHAqnA8jmhw-yfREK+bbUSYiiemhIluODrQULwQA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Modal Component Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function App() {
  const [showModal, setShowModal] = React.useState(false);
  return (
    &amp;lt;div&amp;gt;
      // you can also put this in your static html file
      &amp;lt;div id=&quot;modal-root&quot;&amp;gt;&amp;lt;/div&amp;gt;
      {showModal &amp;amp;&amp;amp; (
        &amp;lt;Modal&amp;gt;
          &amp;lt;div
            style={{
              display: &quot;grid&quot;,
              placeItems: &quot;center&quot;,
              height: &quot;100vh&quot;,
              width: &quot;100vh&quot;,
              background: &quot;rgba(0,0,0,0.1)&quot;,
              zIndex: 99,
            }}
          &amp;gt;
            I&#39;m a modal!{&quot; &quot;}
            &amp;lt;button
              style={{ background: &quot;papyawhip&quot; }}
              onClick={() =&amp;gt; setShowModal(false)}
            &amp;gt;
              close
            &amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/Modal&amp;gt;
      )}
      &amp;lt;button onClick={() =&amp;gt; setShowModal(true)}&amp;gt;show Modal&amp;lt;/button&amp;gt;
      // rest of your app
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Context of Example&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;This example is based on the &lt;a href=&quot;https://reactjs.org/docs/portals.html#event-bubbling-through-portals&quot;&gt;Event Bubbling Through Portal&lt;/a&gt; example of React docs.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!--END-SECTION:portals--&gt; 
&lt;!--START-SECTION:error-boundaries--&gt; 
&lt;h2&gt;Error Boundaries&lt;/h2&gt; 
&lt;h3&gt;Option 1: Using react-error-boundary&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bvaughn/react-error-boundary&quot;&gt;React-error-boundary&lt;/a&gt; - is a lightweight package ready to use for this scenario with TS support built-in. This approach also lets you avoid class components that are not that popular anymore.&lt;/p&gt; 
&lt;h3&gt;Options 2: Writing your custom error boundary component&lt;/h3&gt; 
&lt;p&gt;If you don&#39;t want to add a new npm package for this, you can also write your own &lt;code&gt;ErrorBoundary&lt;/code&gt; component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import React, { Component, ErrorInfo, ReactNode } from &quot;react&quot;;

interface Props {
  children: ReactNode;
}

interface State {
  hasError: boolean;
}

class ErrorBoundary extends Component&amp;lt;Props, State&amp;gt; {
  public state: State = {
    hasError: false
  };

  public static getDerivedStateFromError(_: Error): State {
    // Update state so the next render will show the fallback UI.
    return { hasError: true };
  }

  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    console.error(&quot;Uncaught error:&quot;, error, errorInfo);
  }

  public render() {
    if (this.state.hasError) {
      return &amp;lt;h1&amp;gt;Sorry.. there was an error&amp;lt;/h1&amp;gt;;
    }

    return this.props.children;
  }
}

export default ErrorBoundary;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:error-boundaries--&gt; 
&lt;!--START-SECTION:concurrent--&gt; 
&lt;h2&gt;Concurrent React/React Suspense&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Not written yet.&lt;/em&gt; watch &lt;a href=&quot;https://github.com/sw-yx/fresh-async-react&quot;&gt;https://github.com/sw-yx/fresh-async-react&lt;/a&gt; for more on React Suspense and Time Slicing.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;Something to add? File an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;!--END-SECTION:concurrent--&gt; 
&lt;!--START-SECTION:types--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Types&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ Have you read &lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/FAQ?&quot;&gt;the TypeScript FAQ&lt;/a&gt; Your answer might be there!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Facing weird type errors? You aren&#39;t alone. This is the hardest part of using TypeScript with React. Be patient - you are learning a new language after all. However, the more you get good at this, the less time you&#39;ll be working &lt;em&gt;against&lt;/em&gt; the compiler and the more the compiler will be working &lt;em&gt;for&lt;/em&gt; you!&lt;/p&gt; 
&lt;p&gt;Try to avoid typing with &lt;code&gt;any&lt;/code&gt; as much as possible to experience the full benefits of TypeScript. Instead, let&#39;s try to be familiar with some of the common strategies to solve these issues.&lt;/p&gt; 
&lt;h2&gt;Union Types and Type Guarding&lt;/h2&gt; 
&lt;p&gt;Union types are handy for solving some of these typing problems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class App extends React.Component&amp;lt;
  {},
  {
    count: number | null; // like this
  }
&amp;gt; {
  state = {
    count: null,
  };
  render() {
    return &amp;lt;div onClick={() =&amp;gt; this.increment(1)}&amp;gt;{this.state.count}&amp;lt;/div&amp;gt;;
  }
  increment = (amt: number) =&amp;gt; {
    this.setState((state) =&amp;gt; ({
      count: (state.count || 0) + amt,
    }));
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCtAGxQGc64BBMMOJADxiQDsATRsnQwAdAGFckHrxgAeCnDgBvAL4AaBcs2K0EAK48YALjg89IAEZIocAD6m91agG44AejdxqwANZI4MAAWwHSaKhQAfFrkinQwKNxwALzRijr6hiZmTmHOmkT81gAUAJSpaUQwelA8cLJ8wABucBA8Yt5oPklKpclRQSEiwDxoRCAyRQCMJSoRSgN0InEJSCK6BjAqsm4NjRF5MXDhh8OjSOOGyXBFKCDGDpbWZUlRStoBwYt0SDAAyvHcIrLRIva5vQ5pODrTLXYGraHwWz2AAMZQA1HBbjB3ioSiUDooVAcVEA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type Guarding&lt;/strong&gt;: Sometimes Union Types solve a problem in one area but create another downstream. If &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are both object types, &lt;code&gt;A | B&lt;/code&gt; isn&#39;t &quot;either A or B&quot;, it is &quot;A or B or both at once&quot;, which causes some confusion if you expected it to be the former. Learn how to write checks, guards, and assertions (also see the Conditional Rendering section below). For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;interface Admin {
  role: string;
}
interface User {
  email: string;
}

// Method 1: use `in` keyword
function redirect(user: Admin | User) {
  if (&quot;role&quot; in user) {
    // use the `in` operator for typeguards since TS 2.7+
    routeToAdminPage(user.role);
  } else {
    routeToHomePage(user.email);
  }
}

// Method 2: custom type guard, does the same thing in older TS versions or where `in` isnt enough
function isAdmin(user: Admin | User): user is Admin {
  return (user as any).role !== undefined;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoC4AOxiSk3STgEEATEGuAbwrjhwAbJAC44AZxhQaAcwDcFAL5Va9RmmYBVcfR584SECmCCxk6dXlKKFTAFdqGYBGoCIdugBUI7TtQAKKDJIABTiwDLUwJjA9ACUeuT80XBhEVExugC8OQR2OlAIEML4CbxJ-AJIMHZQrvi+NGQVinDWlOT2jjDOrjgeSN4AErhIgcFpkdGxUGX6KZMZM3A5WQSGxoKliZVVNXUEIyBIYEFIzfzK5FcUAPS3cACy1QAWEGxwAIxi+cwABjQ-nAANZIACeAHdoGxbA4nC4qmxgEQMCFflAxI1XAAfODaeI7ODREIAIiESBJRNc6LKcHucF+cBgL3+gLgEDA9BQMGgcEwvJgYM5MjsKCgbHEEhoGjgngAynAAEwAOgA7ABqfT8fpeHwcGjjULo5XkuIKFoGQQ6Qna9y6o5jM5ogrKjYmM36K43cj057M95KsRofI8vCCzlwEVitgAGjgbAgSElzOY4hQxyZL1kVPZgjYunlcAAbvRwi5JbyISyiHAAdQgcBxLQDNR3DIXrDur0ieIsc76Jj9Ti8QU4j8Cj3WEPCUR9q5+1A4ChJShqGC4ibiswAIS5Bz5mLUJAw65AA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Method 2 is also known as &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards&quot;&gt;User-Defined Type Guards&lt;/a&gt; and can be really handy for readable code. This is how TS itself refines types with &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you need &lt;code&gt;if...else&lt;/code&gt; chains or the &lt;code&gt;switch&lt;/code&gt; statement instead, it should &quot;just work&quot;, but look up &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions&quot;&gt;Discriminated Unions&lt;/a&gt; if you need help. (See also: &lt;a href=&quot;https://basarat.gitbook.io/typescript/type-system/discriminated-unions&quot;&gt;Basarat&#39;s writeup&lt;/a&gt;). This is handy in typing reducers for &lt;code&gt;useReducer&lt;/code&gt; or Redux.&lt;/p&gt; 
&lt;h2&gt;Optional Types&lt;/h2&gt; 
&lt;p&gt;If a component has an optional prop, add a question mark and assign during destructure (or use defaultProps).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message?: string; // like this
}&amp;gt; {
  render() {
    const { message = &quot;default&quot; } = this.props;
    return &amp;lt;div&amp;gt;{message}&amp;lt;/div&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use a &lt;code&gt;!&lt;/code&gt; character to assert that something is not undefined, but this is not encouraged.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Something to add? &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt; with your suggestions!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Enum Types&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We recommend avoiding using enums as far as possible&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Enums have a few &lt;a href=&quot;https://fettblog.eu/tidy-typescript-avoid-enums/&quot;&gt;documented issues&lt;/a&gt; (the TS team &lt;a href=&quot;https://twitter.com/orta/status/1348966323271987201?s=20&quot;&gt;agrees&lt;/a&gt;). A simpler alternative to enums is just declaring a union type of string literals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export declare type Position = &quot;left&quot; | &quot;right&quot; | &quot;top&quot; | &quot;bottom&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you must use enums, remember that enums in TypeScript default to numbers. You will usually want to use them as strings instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export enum ButtonSizes {
  default = &quot;default&quot;,
  small = &quot;small&quot;,
  large = &quot;large&quot;,
}

// usage
export const PrimaryButton = (
  props: Props &amp;amp; React.HTMLProps&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; &amp;lt;Button size={ButtonSizes.default} {...props} /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Type Assertion&lt;/h2&gt; 
&lt;p&gt;Sometimes you know better than TypeScript that the type you&#39;re using is narrower than it thinks, or union types need to be asserted to a more specific type to work with other APIs, so assert with the &lt;code&gt;as&lt;/code&gt; keyword. This tells the compiler you know better than it does.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;class MyComponent extends React.Component&amp;lt;{
  message: string;
}&amp;gt; {
  render() {
    const { message } = this.props;
    return (
      &amp;lt;Component2 message={message as SpecialMessageType}&amp;gt;{message}&amp;lt;/Component2&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgGU61gUAbAWSQGduUBzJABVa9ALwFuMKMAB2-fAG4KFOTCRRM6egAUcYbnADeFOHBA8+ggFxwpM+XAA+cAK6yAJkkxykH5eQAvirkaBCyUnAAwriQskiyMABMtsjoMAB0AGJRADx6EAYAfHASABRG5pYCSIEAlKUlZaZwuR7AAG5FLWa5ABYAjEVGFrw1gbkA9IPd5L2T7V0UdSFobCi8cBzUMeDhCfBIAB7qnoZpGBm7cQe5JnNVYzZ20nL8AYEl92ZEnhplDW+ZjgYQi8Eqoys9ECpTgMD6wG4GTA+m4AWBcCIMFcUFkcGaDwxuWu+0SSUeULEI2qgjgG0YzFYnBpwlEn2pT1qUxJ8TJswxdXRcGCQSAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note that you cannot assert your way to anything - basically it is only for refining types. Therefore it is not the same as &quot;casting&quot; a type.&lt;/p&gt; 
&lt;p&gt;You can also assert a property is non-null, when accessing it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;element.parentNode!.removeChild(element); // ! before the period
myFunction(document.getElementById(dialog.id!)!); // ! after the property accessing
let userID!: string; // definite assignment assertion... be careful!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, try to actually handle the null case instead of asserting :)&lt;/p&gt; 
&lt;h2&gt;Simulating Nominal Types&lt;/h2&gt; 
&lt;p&gt;TS&#39; structural typing is handy, until it is inconvenient. However you can simulate nominal typing with &lt;a href=&quot;https://basarat.gitbook.io/typescript/main-1/nominaltyping&quot;&gt;&lt;code&gt;type branding&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type OrderID = string &amp;amp; { readonly brand: unique symbol };
type UserID = string &amp;amp; { readonly brand: unique symbol };
type ID = OrderID | UserID;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can create these values with the Companion Object Pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function OrderID(id: string) {
  return id as OrderID;
}
function UserID(id: string) {
  return id as UserID;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now TypeScript will disallow you from using the wrong ID in the wrong place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function queryForUser(id: UserID) {
  // ...
}
queryForUser(OrderID(&quot;foobar&quot;)); // Error, Argument of type &#39;OrderID&#39; is not assignable to parameter of type &#39;UserID&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In future you can use the &lt;code&gt;unique&lt;/code&gt; keyword to brand. &lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/33038&quot;&gt;See this PR&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Intersection Types&lt;/h2&gt; 
&lt;p&gt;Adding two types together can be handy, for example when your component is supposed to mirror the props of a native component like a &lt;code&gt;button&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;export interface PrimaryButtonProps {
  label: string;
}
export const PrimaryButton = (
  props: PrimaryButtonProps &amp;amp; React.ButtonHTMLAttributes&amp;lt;HTMLButtonElement&amp;gt;
) =&amp;gt; {
  // do custom buttony stuff
  return &amp;lt;button {...props}&amp;gt; {props.label} &amp;lt;/button&amp;gt;;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Playground &lt;a href=&quot;https://www.typescriptlang.org/play?ssl=4&amp;amp;ssc=1&amp;amp;pln=12&amp;amp;pc=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCipAD0ljmADsYkpN0k4AFKUFKAE8AQgFcYMCE14QwAZzgBvCnDgAbFACMkagFxw5MPkwDmAbgoBfanWjw0Uwzz4gBI8ZKZwAvHAAUKnBgOPL6vPxCYhJSMvJwAGSIxDAAdFGeABIAKgCyADIAghJ8muJIcgA82fnpUgCiakggSCwAfBQAlD6tSoEA9H1wACYQcGiihrhwpdFMggYwopiYgUSLUF4VM55KKXvBsnKWPYoH8ika2mqWcBV921KtFuSWQA&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can also use Intersection Types to make reusable subsets of props for similar components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;type BaseProps = {
   className?: string,
   style?: React.CSSProperties
   name: string // used in both
}
type DogProps = {
  tailsCount: number
}
type HumanProps = {
  handsCount: number
}
export const Human: React.FC&amp;lt;BaseProps &amp;amp; HumanProps&amp;gt; = // ...
export const Dog: React.FC&amp;lt;BaseProps &amp;amp; DogProps&amp;gt; = // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/?jsx=2#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wFgAoCmATzCTgCEUBnJABRzGbgF44BvCnGFoANi2YA5FCCQB+AFxxmMKMAB2AcwA0Q4Suqj5S5OhgA6AMIBlaxwh1YwJMz1x1MpEpVqtcAPT+cACurAAmcBpwAEYQMAAWFAC+VLT0ACIQmvZcvAJ6MCjAosyWEMHqMErqwSDRSFDJqXRwABK1KOo53HyC5MLxnWGl5ZXVtfWN5CnkSAAekLBwaBDqKm0d6ibEFgBilgA8TKzdcABkGyCd3QB8eQAUAJS8d-d6B2HAAG4BNxSPFAo80W8BWa3gmU02zM5n2RxY7E43AukNuD2ePFe70+P38f3IjyAA&quot;&gt;View in the TypeScript Playground&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Make sure not to confuse Intersection Types (which are &lt;strong&gt;and&lt;/strong&gt; operations) with Union Types (which are &lt;strong&gt;or&lt;/strong&gt; operations).&lt;/p&gt; 
&lt;h2&gt;Union Types&lt;/h2&gt; 
&lt;p&gt;This section is yet to be written (please contribute!). Meanwhile, see our &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/raw/master/README.md#union-types-and-type-guarding&quot;&gt;commentary on Union Types usecases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The ADVANCED cheatsheet also has information on Discriminated Union Types, which are helpful when TypeScript doesn&#39;t seem to be narrowing your union type as you expect.&lt;/p&gt; 
&lt;h2&gt;Overloading Function Types&lt;/h2&gt; 
&lt;p&gt;Specifically when it comes to functions, you may need to overload instead of union type. The most common way function types are written uses the shorthand:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type FunctionType1 = (x: string, y: number) =&amp;gt; number;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But this doesn&#39;t let you do any overloading. If you have the implementation, you can put them after each other with the function keyword:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function pickCard(x: { suit: string; card: number }[]): number;
function pickCard(x: number): { suit: string; card: number };
function pickCard(x): any {
  // implementation with combined signature
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, if you don&#39;t have an implementation and are just writing a &lt;code&gt;.d.ts&lt;/code&gt; definition file, this won&#39;t help you either. In this case you can forego any shorthand and write them the old-school way. The key thing to remember here is as far as TypeScript is concerned, &lt;code&gt;functions are just callable objects with no key&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;type pickCard = {
  (x: { suit: string; card: number }[]): number;
  (x: number): { suit: string; card: number };
  // no need for combined signature in this form
  // you can also type static properties of functions here eg `pickCard.wasCalled`
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that when you implement the actual overloaded function, the implementation will need to declare the combined call signature that you&#39;ll be handling, it won&#39;t be inferred for you. You can see readily see examples of overloads in DOM APIs, e.g. &lt;code&gt;createElement&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/functions.html#overloads&quot;&gt;Read more about Overloading in the Handbook.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using Inferred Types&lt;/h2&gt; 
&lt;p&gt;Leaning on TypeScript&#39;s Type Inference is great... until you realize you need a type that was inferred, and have to go back and explicitly declare types/interfaces so you can export them for reuse.&lt;/p&gt; 
&lt;p&gt;Fortunately, with &lt;code&gt;typeof&lt;/code&gt;, you won&#39;t have to do that. Just use it on any value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

const someMethod = (obj: typeof state) =&amp;gt; {
  // grabbing the type of state even though it was inferred
  // some code using obj
  setState(obj); // this works
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Partial Types&lt;/h2&gt; 
&lt;p&gt;Working with slicing state and props is common in React. Again, you don&#39;t really have to go and explicitly redefine your types if you use the &lt;code&gt;Partial&lt;/code&gt; generic type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const [state, setState] = React.useState({
  foo: 1,
  bar: 2,
}); // state&#39;s type inferred to be {foo: number, bar: number}

// NOTE: stale state merging is not actually encouraged in React.useState
// we are just demonstrating how to use Partial here
const partialStateUpdate = (obj: Partial&amp;lt;typeof state&amp;gt;) =&amp;gt;
  setState({ ...state, ...obj });

// later on...
partialStateUpdate({ foo: 2 }); // this works
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; Minor caveats on using &lt;code&gt;Partial&lt;/code&gt; &lt;/summary&gt; 
 &lt;p&gt;Note that there are some TS users who don&#39;t agree with using &lt;code&gt;Partial&lt;/code&gt; as it behaves today. See &lt;a href=&quot;https://twitter.com/ferdaber/status/1084798596027957248&quot;&gt;subtle pitfalls of the above example here&lt;/a&gt;, and check out this long discussion on &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365&quot;&gt;why @types/react uses Pick instead of Partial&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;The Types I need weren&#39;t exported!&lt;/h2&gt; 
&lt;p&gt;This can be annoying but here are ways to grab the types!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the Prop types of a component: Use &lt;code&gt;React.ComponentProps&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt;, and optionally &lt;code&gt;Omit&lt;/code&gt; any overlapping types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { Button } from &quot;library&quot;; // but doesn&#39;t export ButtonProps! oh no!
type ButtonProps = React.ComponentProps&amp;lt;typeof Button&amp;gt;; // no problem! grab your own!
type AlertButtonProps = Omit&amp;lt;ButtonProps, &quot;onClick&quot;&amp;gt;; // modify
const AlertButton: React.FC&amp;lt;AlertButtonProps&amp;gt; = (props) =&amp;gt; (
  &amp;lt;Button onClick={() =&amp;gt; alert(&quot;hello&quot;)} {...props} /&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also use &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L774&quot;&gt;&lt;code&gt;ComponentPropsWithoutRef&lt;/code&gt;&lt;/a&gt; (instead of ComponentProps) and &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/raw/a05cc538a42243c632f054e42eab483ebf1560ab/types/react/index.d.ts#L770&quot;&gt;&lt;code&gt;ComponentPropsWithRef&lt;/code&gt;&lt;/a&gt; (if your component specifically forwards refs)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grabbing the return type of a function: use &lt;code&gt;ReturnType&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// inside some library - return type { baz: number } is inferred but not exported
function foo(bar: string) {
  return { baz: 1 };
}

//  inside your app, if you need { baz: number }
type FooReturn = ReturnType&amp;lt;typeof foo&amp;gt;; // { baz: number }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In fact you can grab virtually anything public: &lt;a href=&quot;http://ikoshelev.azurewebsites.net/search/id/11/Pragmatic-uses-of-TypeScript-type-system-My-type-of-type&quot;&gt;see this blogpost from Ivan Koshelev&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;function foo() {
  return {
    a: 1,
    b: 2,
    subInstArr: [
      {
        c: 3,
        d: 4,
      },
    ],
  };
}

type InstType = ReturnType&amp;lt;typeof foo&amp;gt;;
type SubInstArr = InstType[&quot;subInstArr&quot;];
type SubIsntType = SubInstArr[0];

let baz: SubIsntType = {
  c: 5,
  d: 6, // type checks ok!
};

//You could just write a one-liner,
//But please make sure it is forward-readable
//(you can understand it from reading once left-to-right with no jumps)
type SubIsntType2 = ReturnType&amp;lt;typeof foo&amp;gt;[&quot;subInstArr&quot;][0];
let baz2: SubIsntType2 = {
  c: 5,
  d: 6, // type checks ok!
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;TS also ships with a &lt;code&gt;Parameters&lt;/code&gt; utility type for extracting the parameters of a function&lt;/li&gt; 
 &lt;li&gt;for anything more &quot;custom&quot;, the &lt;code&gt;infer&lt;/code&gt; keyword is the basic building block for this, but takes a bit of getting used to. Look at the source code for the above utility types, and &lt;a href=&quot;https://twitter.com/mgechev/status/1211030455224422401?s=20&quot;&gt;this example&lt;/a&gt; to get the idea. Basarat &lt;a href=&quot;https://www.youtube.com/watch?v=ijK-1R-LFII&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=3&amp;amp;t=0s&quot;&gt;also has a good video on &lt;code&gt;infer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The Types I need don&#39;t exist!&lt;/h2&gt; 
&lt;p&gt;What&#39;s more annoying than modules with unexported types? Modules that are &lt;strong&gt;untyped&lt;/strong&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before you proceed - make sure you have checked that types don&#39;t exist in &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt; or &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Fret not! There are more than a couple of ways in which you can solve this problem.&lt;/p&gt; 
&lt;h3&gt;Slapping &lt;code&gt;any&lt;/code&gt; on everything&lt;/h3&gt; 
&lt;p&gt;A &lt;strong&gt;lazier&lt;/strong&gt; way would be to create a new type declaration file, say &lt;code&gt;typedec.d.ts&lt;/code&gt;– if you don&#39;t already have one. Ensure that the path to file is resolvable by TypeScript by checking the &lt;code&gt;include&lt;/code&gt; array in the &lt;code&gt;tsconfig.json&lt;/code&gt; file at the root of your directory.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;// inside tsconfig.json
{
  // ...
  &quot;include&quot;: [
    &quot;src&quot; // automatically resolves if the path to declaration is src/typedec.d.ts
  ]
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Within this file, add the &lt;code&gt;declare&lt;/code&gt; syntax for your desired module, say &lt;code&gt;my-untyped-module&lt;/code&gt;– to the declaration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// inside typedec.d.ts
declare module &quot;my-untyped-module&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This one-liner alone is enough if you just need it to work without errors. A even hackier, write-once-and-forget way would be to use &lt;code&gt;&quot;*&quot;&lt;/code&gt; instead which would then apply the &lt;code&gt;Any&lt;/code&gt; type for all existing and future untyped modules.&lt;/p&gt; 
&lt;p&gt;This solution works well as a workaround if you have less than a couple untyped modules. Anything more, you now have a ticking type-bomb in your hands. The only way of circumventing this problem would be to define the missing types for those untyped modules as explained in the following sections.&lt;/p&gt; 
&lt;h3&gt;Autogenerate types&lt;/h3&gt; 
&lt;p&gt;You can use TypeScript with &lt;code&gt;--allowJs&lt;/code&gt; and &lt;code&gt;--declaration&lt;/code&gt; to see TypeScript&#39;s &quot;best guess&quot; at the types of the library.&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work well enough, use &lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot;&gt;&lt;code&gt;dts-gen&lt;/code&gt;&lt;/a&gt; to use the runtime shape of the object to accurately enumerate all available properties. This tends to be very accurate, BUT the tool does not yet support scraping JSDoc comments to populate additional types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install -g dts-gen
dts-gen -m &amp;lt;your-module&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are other automated JS to TS conversion tools and migration strategies - see &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/migration/from_js&quot;&gt;our MIGRATION cheatsheet&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Typing Exported Hooks&lt;/h3&gt; 
&lt;p&gt;Typing Hooks is just like typing pure functions.&lt;/p&gt; 
&lt;p&gt;The following steps work under two assumptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have already created a type declaration file as stated earlier in the section.&lt;/li&gt; 
 &lt;li&gt;You have access to the source code - specifically the code that directly exports the functions you will be using. In most cases, it would be housed in an &lt;code&gt;index.js&lt;/code&gt; file. Typically you need a minimum of &lt;strong&gt;two&lt;/strong&gt; type declarations (one for &lt;strong&gt;Input Prop&lt;/strong&gt; and the other for &lt;strong&gt;Return Prop&lt;/strong&gt;) to define a hook completely. Suppose the hook you wish to type follows the following structure,&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ...
const useUntypedHook = (prop) =&amp;gt; {
  // some processing happens here
  return {
    /* ReturnProps */
  };
};
export default useUntypedHook;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then, your type declaration should most likely follow the following syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &#39;use-untyped-hook&#39; {
  export interface InputProps { ... }   // type declaration for prop
  export interface ReturnProps { ... } // type declaration for return props
  export default function useUntypedHook(
    prop: InputProps
    // ...
  ): ReturnProps;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;p&gt;For instance, the &lt;a href=&quot;https://github.com/donavon/use-dark-mode&quot;&gt;useDarkMode hook&lt;/a&gt; exports the functions that follows a similar structure.&lt;/p&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// inside src/index.js
const useDarkMode = (
  initialValue = false, // -&amp;gt; input props / config props to be exported
  {
    // -&amp;gt; input props / config props to be exported
    element,
    classNameDark,
    classNameLight,
    onChange,
    storageKey = &quot;darkMode&quot;,
    storageProvider,
    global,
  } = {}
) =&amp;gt; {
  // ...
  return {
    // -&amp;gt; return props to be exported
    value: state,
    enable: useCallback(() =&amp;gt; setState(true), [setState]),
    disable: useCallback(() =&amp;gt; setState(false), [setState]),
    toggle: useCallback(() =&amp;gt; setState((current) =&amp;gt; !current), [setState]),
  };
};
export default useDarkMode;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;As the comments suggest, exporting these config props and return props following the aforementioned structure will result in the following type export.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;use-dark-mode&quot; {
  /**
   * A config object allowing you to specify certain aspects of `useDarkMode`
   */
  export interface DarkModeConfig {
    classNameDark?: string; // A className to set &quot;dark mode&quot;. Default = &quot;dark-mode&quot;.
    classNameLight?: string; // A className to set &quot;light mode&quot;. Default = &quot;light-mode&quot;.
    element?: HTMLElement; // The element to apply the className. Default = `document.body`
    onChange?: (val?: boolean) =&amp;gt; void; // Override the default className handler with a custom callback.
    storageKey?: string; // Specify the `localStorage` key. Default = &quot;darkMode&quot;. Set to `null` to disable persistent storage.
    storageProvider?: WindowLocalStorage; // A storage provider. Default = `localStorage`.
    global?: Window; // The global object. Default = `window`.
  }
  /**
   * An object returned from a call to `useDarkMode`.
   */
  export interface DarkMode {
    readonly value: boolean;
    enable: () =&amp;gt; void;
    disable: () =&amp;gt; void;
    toggle: () =&amp;gt; void;
  }
  /**
   * A custom React Hook to help you implement a &quot;dark mode&quot; component for your application.
   */
  export default function useDarkMode(
    initialState?: boolean,
    config?: DarkModeConfig
  ): DarkMode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Typing Exported Components&lt;/h3&gt; 
&lt;p&gt;In case of typing untyped class components, there&#39;s almost no difference in approach except for the fact that after declaring the types, you export the extend the type using &lt;code&gt;class UntypedClassComponent extends React.Component&amp;lt;UntypedClassComponentProps, any&amp;gt; {}&lt;/code&gt; where &lt;code&gt;UntypedClassComponentProps&lt;/code&gt; holds the type declaration.&lt;/p&gt; 
&lt;p&gt;For instance, &lt;a href=&quot;https://gist.github.com/sw-yx/37a6a3d248c2d4031801f0d568904df8&quot;&gt;sw-yx&#39;s Gist on React Router 6 types&lt;/a&gt; implemented a similar method for typing the then untyped RR6.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;declare module &quot;react-router-dom&quot; {
  import * as React from &#39;react&#39;;
  // ...
  type NavigateProps&amp;lt;T&amp;gt; = {
    to: string | number,
    replace?: boolean,
    state?: T
  }
  //...
  export class Navigate&amp;lt;T = any&amp;gt; extends React.Component&amp;lt;NavigateProps&amp;lt;T&amp;gt;&amp;gt;{}
  // ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on creating type definitions for class components, you can refer to this &lt;a href=&quot;https://templecoding.com/blog/2016/03/31/creating-typescript-typings-for-existing-react-components&quot;&gt;post&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;h2&gt;Frequent Known Problems with TypeScript&lt;/h2&gt; 
&lt;p&gt;Just a list of stuff that React developers frequently run into, that TS has no solution for. Not necessarily TSX only.&lt;/p&gt; 
&lt;h3&gt;TypeScript doesn&#39;t narrow after an object element null check&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/E0u6b9uUUAAgwAk?format=jpg&amp;amp;name=medium&quot; alt=&quot;https://pbs.twimg.com/media/E0u6b9uUUAAgwAk?format=jpg&amp;amp;name=medium&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ref: &lt;a href=&quot;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&quot;&gt;https://mobile.twitter.com/tannerlinsley/status/1390409931627499523&lt;/a&gt;. see also &lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/9998&quot;&gt;https://github.com/microsoft/TypeScript/issues/9998&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TypeScript doesn&#39;t let you restrict the type of children&lt;/h3&gt; 
&lt;p&gt;Guaranteeing typesafety for this kind of API isn&#39;t possible:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;Menu&amp;gt;
  &amp;lt;MenuItem/&amp;gt; {/* ok */}
  &amp;lt;MenuLink/&amp;gt; {/* ok */}
  &amp;lt;div&amp;gt; {/* error */}
&amp;lt;/Menu&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Source: &lt;a href=&quot;https://twitter.com/ryanflorence/status/1085745787982700544?s=20&quot;&gt;https://twitter.com/ryanflorence/status/1085745787982700544?s=20&lt;/a&gt;&lt;/p&gt; 
&lt;!--END-SECTION:types--&gt; 
&lt;!--START-SECTION:operators--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Operators&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: type query used for refinement&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keyof&lt;/code&gt;: get keys of an object. &lt;code&gt;keyof T&lt;/code&gt; is an operator to tell you what values of &lt;code&gt;k&lt;/code&gt; can be used for &lt;code&gt;obj[k]&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://twitter.com/SeaRyanC/status/1418678670739218438?s=20&quot;&gt;Some misconceptions here&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;O[K]&lt;/code&gt;: property lookup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[K in O]&lt;/code&gt;: mapped types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;: addition and subtraction and readonly and optional modifiers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;x ? Y : Z&lt;/code&gt;: Conditional types for generic types, type aliases, function parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;!&lt;/code&gt;: Nonnull assertion for nullable types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;=&lt;/code&gt;: Generic type parameter default for generic types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;as&lt;/code&gt;: type assertion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is&lt;/code&gt;: type guard for function return types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional Types are a difficult topic to get around so here are some extra resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fully walked through explanation &lt;a href=&quot;https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&quot;&gt;https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bailing out and other advanced topics &lt;a href=&quot;https://github.com/sw-yx/ts-spec/raw/master/conditional-types.md&quot;&gt;https://github.com/sw-yx/ts-spec/blob/master/conditional-types.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s video &lt;a href=&quot;https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&quot;&gt;https://www.youtube.com/watch?v=SbVgPQDealg&amp;amp;list=PLYvdvJlnTOjF6aJsWWAt7kZRJvzw-en8B&amp;amp;index=2&amp;amp;t=0s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:operators--&gt; 
&lt;!--START-SECTION:utilities--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Utilities&lt;/h1&gt; 
&lt;p&gt;These are all built in, &lt;a href=&quot;https://github.com/microsoft/TypeScript/raw/2c458c0d1ccb96442bca9ce43aa987fb0becf8a9/src/lib/es5.d.ts#L1401-L1474&quot;&gt;see source in es5.d.ts&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ConstructorParameters&lt;/code&gt;: a tuple of class constructor&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Exclude&lt;/code&gt;: exclude a type from another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Extract&lt;/code&gt;: select a subtype that is assignable to another type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;InstanceType&lt;/code&gt;: the instance type you get from a &lt;code&gt;new&lt;/code&gt;ing a class constructor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NonNullable&lt;/code&gt;: exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from a type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Parameters&lt;/code&gt;: a tuple of a function&#39;s parameter types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Partial&lt;/code&gt;: Make all properties in an object optional&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Readonly&lt;/code&gt;: Make all properties in an object readonly&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReadonlyArray&lt;/code&gt;: Make an immutable array of the given type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pick&lt;/code&gt;: A subtype of an object type with a subset of its keys&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Record&lt;/code&gt;: A map from a key type to a value type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Required&lt;/code&gt;: Make all properties in an object required&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReturnType&lt;/code&gt;: A function&#39;s return type&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:utilities--&gt; 
&lt;!--START-SECTION:ts-config--&gt; 
&lt;h1&gt;Troubleshooting Handbook: tsconfig.json&lt;/h1&gt; 
&lt;p&gt;You can find &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;all the Compiler options in the TypeScript docs&lt;/a&gt;. &lt;a href=&quot;https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports&quot;&gt;The new TS docs also has per-flag annotations of what each does&lt;/a&gt;. This is the setup I roll with for APPS (not libraries - for libraries you may wish to see the settings we use in &lt;code&gt;tsdx&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;incremental&quot;: true,
    &quot;outDir&quot;: &quot;build/lib&quot;,
    &quot;target&quot;: &quot;es5&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;lib&quot;: [&quot;DOM&quot;, &quot;ESNext&quot;],
    &quot;sourceMap&quot;: true,
    &quot;importHelpers&quot;: true,
    &quot;declaration&quot;: true,
    &quot;rootDir&quot;: &quot;src&quot;,
    &quot;strict&quot;: true,
    &quot;noUnusedLocals&quot;: true,
    &quot;noUnusedParameters&quot;: true,
    &quot;noImplicitReturns&quot;: true,
    &quot;noFallthroughCasesInSwitch&quot;: true,
    &quot;allowJs&quot;: false,
    &quot;jsx&quot;: &quot;react&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;baseUrl&quot;: &quot;src&quot;,
    &quot;forceConsistentCasingInFileNames&quot;: true,
    &quot;esModuleInterop&quot;: true,
    &quot;suppressImplicitAnyIndexErrors&quot;: true,
    &quot;allowSyntheticDefaultImports&quot;: true,
    &quot;experimentalDecorators&quot;: true
  },
  &quot;include&quot;: [&quot;src/**/*&quot;],
  &quot;exclude&quot;: [&quot;node_modules&quot;, &quot;build&quot;, &quot;scripts&quot;]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find more &lt;a href=&quot;https://github.com/tsconfig/bases&quot;&gt;recommended TS config here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please open an issue and discuss if there are better recommended choices for React.&lt;/p&gt; 
&lt;p&gt;Selected flags and why we like them:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;esModuleInterop&lt;/code&gt;: disables namespace imports (&lt;code&gt;import * as foo from &quot;foo&quot;&lt;/code&gt;) and enables CJS/AMD/UMD style imports (&lt;code&gt;import fs from &quot;fs&quot;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: &lt;code&gt;strictPropertyInitialization&lt;/code&gt; forces you to initialize class properties or explicitly declare that they can be undefined. You can opt out of this with a definite assignment assertion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&quot;typeRoots&quot;: [&quot;./typings&quot;, &quot;./node_modules/@types&quot;]&lt;/code&gt;: By default, TypeScript looks in &lt;code&gt;node_modules/@types&lt;/code&gt; and parent folders for third party type declarations. You may wish to override this default resolution so you can put all your global type declarations in a special &lt;code&gt;typings&lt;/code&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Compilation speed grows linearly with size of codebase. For large projects, you will want to use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/project-references.html&quot;&gt;Project References&lt;/a&gt;. See our &lt;a href=&quot;https://react-typescript-cheatsheet.netlify.app/docs/advanced/intro/&quot;&gt;ADVANCED&lt;/a&gt; cheatsheet for commentary.&lt;/p&gt; 
&lt;!--END-SECTION:ts-config--&gt; 
&lt;!--START-SECTION:official-typings-bugs--&gt; 
&lt;h1&gt;Troubleshooting Handbook: Fixing bugs in official typings&lt;/h1&gt; 
&lt;p&gt;If you run into bugs with your library&#39;s official typings, you can copy them locally and tell TypeScript to use your local version using the &quot;paths&quot; field. In your &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;compilerOptions&quot;: {
    &quot;paths&quot;: {
      &quot;mobx-react&quot;: [&quot;../typings/modules/mobx-react&quot;]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/AdamRackis/status/1024827730452520963&quot;&gt;Thanks to @adamrackis for the tip.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you just need to add an interface, or add missing members to an existing interface, you don&#39;t need to copy the whole typing package. Instead, you can use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html&quot;&gt;declaration merging&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot; {
  interface PlotlyHTMLElement {
    removeAllListeners(): void;
  }
}

// MyComponent.tsx
import { PlotlyHTMLElement } from &quot;plotly.js&quot;;

const f = (e: PlotlyHTMLElement) =&amp;gt; {
  e.removeAllListeners();
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You dont always have to implement the module, you can simply import the module as &lt;code&gt;any&lt;/code&gt; for a quick start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;// my-typings.ts
declare module &quot;plotly.js&quot;; // each of its imports are `any`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because you don&#39;t have to explicitly import this, this is known as an &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html#pitfalls-of-namespaces-and-modules&quot;&gt;ambient module declaration&lt;/a&gt;. You can do AMD&#39;s in a script-mode &lt;code&gt;.ts&lt;/code&gt; file (no imports or exports), or a &lt;code&gt;.d.ts&lt;/code&gt; file anywhere in your project.&lt;/p&gt; 
&lt;p&gt;You can also do ambient variable and ambient type declarations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// ambient utiltity type
type ToArray&amp;lt;T&amp;gt; = T extends unknown[] ? T : T[];
// ambient variable
declare let process: {
  env: {
    NODE_ENV: &quot;development&quot; | &quot;production&quot;;
  };
};
process = {
  env: {
    NODE_ENV: &quot;production&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see examples of these included in the built in type declarations in the &lt;code&gt;lib&lt;/code&gt; field of &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/p&gt; 
&lt;!--END-SECTION:official-typings-bugs--&gt; 
&lt;!--START-SECTION:non-ts-files--&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: &lt;a href=&quot;https://www.youtube.com/watch?v=ET4kT88JRXs&quot;&gt;https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: &lt;a href=&quot;https://blog.mariusschulz.com/series/typescript-evolution&quot;&gt;https://blog.mariusschulz.com/series/typescript-evolution&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: &lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;https://basarat.gitbook.io/typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Axel Rauschmeyer&#39;s &lt;a href=&quot;https://exploringjs.com/tackling-ts/&quot;&gt;Tackling TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:non-ts-files--&gt; 
&lt;!--START-SECTION:resources--&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&quot;&gt;https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&quot;&gt;10 Bad TypeScript Habits&lt;/a&gt;: 
  &lt;ol&gt; 
   &lt;li&gt;not using &lt;code&gt;&quot;strict&quot;: true&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;||&lt;/code&gt; for default values when we have &lt;code&gt;??&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Using &lt;code&gt;any&lt;/code&gt; instead of &lt;code&gt;unknown&lt;/code&gt; for API responses&lt;/li&gt; 
   &lt;li&gt;using &lt;code&gt;as&lt;/code&gt; assertion instead of Type Guards (&lt;code&gt;function isFoo(obj: unknown): obj is Foo {}&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;as any&lt;/code&gt; in tests&lt;/li&gt; 
   &lt;li&gt;Marking optional properties instead of modeling which combinations exist by extending interfaces&lt;/li&gt; 
   &lt;li&gt;One letter generics&lt;/li&gt; 
   &lt;li&gt;Non-boolean &lt;code&gt;if (nonboolean)&lt;/code&gt; checks&lt;/li&gt; 
   &lt;li&gt;bangbang checks &lt;code&gt;if (!!nonboolean)&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;!= null&lt;/code&gt; to check for &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/production-typescript/&quot;&gt;Mike North&#39;s Production TypeScript course on Frontend Masters (paid)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jenil.github.io/chota/&quot;&gt;TSX Guide&lt;/a&gt; by &lt;a href=&quot;https://github.com/gojutin/www.tsx.guide&quot;&gt;gojutin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:resources--&gt; 
&lt;!--START-SECTION:editor-integration--&gt; 
&lt;h1&gt;Editor Tooling and Integration&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;VSCode 
  &lt;ul&gt; 
   &lt;li&gt;swyx&#39;s VSCode Extension: &lt;a href=&quot;https://github.com/sw-yx/swyx-react-typescript-snippets&quot;&gt;https://github.com/sw-yx/swyx-react-typescript-snippets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;amVim: &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&quot;&gt;https://marketplace.visualstudio.com/items?itemName=auiworks.amvim&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VIM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Quramy/tsuquyomi&quot;&gt;https://github.com/Quramy/tsuquyomi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;nvim-typescript?&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/leafgarland/typescript-vim&quot;&gt;https://github.com/leafgarland/typescript-vim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;peitalin/vim-jsx-typescript&lt;/li&gt; 
   &lt;li&gt;NeoVim: &lt;a href=&quot;https://github.com/neoclide/coc.nvim&quot;&gt;https://github.com/neoclide/coc.nvim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;other discussion: &lt;a href=&quot;https://mobile.twitter.com/ryanflorence/status/1085715595994095620&quot;&gt;https://mobile.twitter.com/ryanflorence/status/1085715595994095620&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You are free to use this repo&#39;s TSX logo if you wish:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot; alt=&quot;https://user-images.githubusercontent.com/6764957/53868378-2b51fc80-3fb3-11e9-9cee-0277efe8a927.png&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also wish to use alternative logos - &lt;a href=&quot;https://github.com/Protectator/jsx-tsx-logos&quot;&gt;jsx-tsx-logos&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot; alt=&quot;https://github.com/Protectator/jsx-tsx-logos/raw/master/example.png&quot;&gt;&lt;/p&gt; 
&lt;!--END-SECTION:editor-integration--&gt; 
&lt;!--START-SECTION:linting--&gt; 
&lt;h1&gt;Linting&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️Note that &lt;a href=&quot;https://medium.com/palantir/tslint-in-2019-1a144c2317a9&quot;&gt;TSLint is now in maintenance and you should try to use ESLint instead&lt;/a&gt;. If you are interested in TSLint tips, please check this PR from &lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/pull/14&quot;&gt;@azdanov&lt;/a&gt;. The rest of this section just focuses on ESLint. &lt;a href=&quot;https://github.com/typescript-eslint/tslint-to-eslint-config&quot;&gt;You can convert TSlint to ESlint with this tool&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️This is an evolving topic. &lt;code&gt;typescript-eslint-parser&lt;/code&gt; is no longer maintained and &lt;a href=&quot;https://eslint.org/blog/2019/01/future-typescript-eslint&quot;&gt;work has recently begun on &lt;code&gt;typescript-eslint&lt;/code&gt; in the ESLint community&lt;/a&gt; to bring ESLint up to full parity and interop with TSLint.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the TypeScript + ESLint docs at &lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint&quot;&gt;https://github.com/typescript-eslint/typescript-eslint&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;add a &lt;code&gt;lint&lt;/code&gt; script to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;scripts&quot;: {
    &quot;lint&quot;: &quot;eslint &#39;src/**/*.ts&#39;&quot;
  },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and a suitable &lt;code&gt;.eslintrc.js&lt;/code&gt; (using &lt;code&gt;.js&lt;/code&gt; over &lt;code&gt;.json&lt;/code&gt; here so we can add comments):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  env: {
    es6: true,
    node: true,
    jest: true,
  },
  extends: &quot;eslint:recommended&quot;,
  parser: &quot;@typescript-eslint/parser&quot;,
  plugins: [&quot;@typescript-eslint&quot;],
  parserOptions: {
    ecmaVersion: 2017,
    sourceType: &quot;module&quot;,
  },
  rules: {
    indent: [&quot;error&quot;, 2],
    &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],
    quotes: [&quot;error&quot;, &quot;single&quot;],
    &quot;no-console&quot;: &quot;warn&quot;,
    &quot;no-unused-vars&quot;: &quot;off&quot;,
    &quot;@typescript-eslint/no-unused-vars&quot;: [
      &quot;error&quot;,
      { vars: &quot;all&quot;, args: &quot;after-used&quot;, ignoreRestSiblings: false },
    ],
    &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;warn&quot;, // Consider using explicit annotations for object literals and function return types even when they can be inferred.
    &quot;no-empty&quot;: &quot;warn&quot;,
  },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Most of this is taken from &lt;a href=&quot;https://github.com/palmerhq/tsdx/pull/70/files&quot;&gt;the &lt;code&gt;tsdx&lt;/code&gt; PR&lt;/a&gt; which is for &lt;strong&gt;libraries&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;More &lt;code&gt;.eslintrc.json&lt;/code&gt; options to consider with more options you may want for &lt;strong&gt;apps&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [
    &quot;airbnb&quot;,
    &quot;prettier&quot;,
    &quot;prettier/react&quot;,
    &quot;plugin:prettier/recommended&quot;,
    &quot;plugin:jest/recommended&quot;,
    &quot;plugin:unicorn/recommended&quot;
  ],
  &quot;plugins&quot;: [&quot;prettier&quot;, &quot;jest&quot;, &quot;unicorn&quot;],
  &quot;parserOptions&quot;: {
    &quot;sourceType&quot;: &quot;module&quot;,
    &quot;ecmaFeatures&quot;: {
      &quot;jsx&quot;: true
    }
  },
  &quot;env&quot;: {
    &quot;es6&quot;: true,
    &quot;browser&quot;: true,
    &quot;jest&quot;: true
  },
  &quot;settings&quot;: {
    &quot;import/resolver&quot;: {
      &quot;node&quot;: {
        &quot;extensions&quot;: [&quot;.js&quot;, &quot;.jsx&quot;, &quot;.ts&quot;, &quot;.tsx&quot;]
      }
    }
  },
  &quot;overrides&quot;: [
    {
      &quot;files&quot;: [&quot;**/*.ts&quot;, &quot;**/*.tsx&quot;],
      &quot;parser&quot;: &quot;typescript-eslint-parser&quot;,
      &quot;rules&quot;: {
        &quot;no-undef&quot;: &quot;off&quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can read a &lt;a href=&quot;https://blog.matterhorn.dev/posts/learn-typescript-linting-part-1/&quot;&gt;fuller TypeScript + ESLint setup guide here&lt;/a&gt; from Matterhorn, in particular check &lt;a href=&quot;https://github.com/MatterhornDev/learn-typescript-linting&quot;&gt;https://github.com/MatterhornDev/learn-typescript-linting&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Another great resource is &lt;a href=&quot;https://dev.to/robertcoopercode/using-eslint-and-prettier-in-a-typescript-project-53jb&quot;&gt;&quot;Using ESLint and Prettier in a TypeScript Project&quot;&lt;/a&gt; by @robertcoopercode.&lt;/p&gt; 
&lt;p&gt;Wes Bos is also working on &lt;a href=&quot;https://github.com/wesbos/eslint-config-wesbos/issues/68&quot;&gt;TypeScript support for his eslint+prettier config.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re looking for information on Prettier, check out the &lt;a href=&quot;https://github.com/typescript-cheatsheets/react/raw/main/docs/advanced/misc-concerns.md#prettier&quot;&gt;Prettier&lt;/a&gt; guide.&lt;/p&gt; 
&lt;!--END-SECTION:linting--&gt; 
&lt;!--START-SECTION:other-resources--&gt; 
&lt;h1&gt;Other React + TypeScript resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;me! &lt;a href=&quot;https://twitter.com/swyx&quot;&gt;https://twitter.com/swyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piotrwitek/react-redux-typescript-guide&quot;&gt;https://github.com/piotrwitek/react-redux-typescript-guide&lt;/a&gt; - &lt;strong&gt;HIGHLY HIGHLY RECOMMENDED&lt;/strong&gt;, i wrote this repo before knowing about this one, this has a lot of stuff I don&#39;t cover, including &lt;strong&gt;REDUX&lt;/strong&gt; and &lt;strong&gt;JEST&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935&quot;&gt;Ultimate React Component Patterns with TypeScript 2.8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basarat.gitbook.io/typescript/tsx/react&quot;&gt;Basarat&#39;s TypeScript gitbook has a React section&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/use-typescript-to-develop-react-applications&quot;&gt;Egghead.io course&lt;/a&gt; as well.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmerhq/typescript&quot;&gt;Palmer Group&#39;s TypeScript + React Guidelines&lt;/a&gt; as well as Jared&#39;s other work like &lt;a href=&quot;https://github.com/jaredpalmer/disco.chat&quot;&gt;disco.chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fettblog.eu/typescript-react&quot;&gt;Stefan Baumgartner&#39;s TypeScript + React Guide&lt;/a&gt;, which serves as a side-by-side guide to the official docs with extra articles on styling, custom hooks and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/typescript-definition-style-guide&quot;&gt;Sindre Sorhus&#39; TypeScript Style Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Starter&quot;&gt;TypeScript React Starter Template by Microsoft&lt;/a&gt; A starter template for TypeScript and React with a detailed README describing how to use the two together. Note: this doesnt seem to be frequently updated anymore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/intermediate-react/converting-the-app-to-typescript/&quot;&gt;Brian Holt&#39;s Intermediate React course on Frontend Masters (paid)&lt;/a&gt; - Converting App To TypeScript Section&lt;/li&gt; 
 &lt;li&gt;TypeScript conversion: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/react-javascript-to-typescript-transform&quot;&gt;Lyft&#39;s React-To-TypeScript conversion CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.gustavwengel.dk/converting-typescript-to-javascript-part-1&quot;&gt;Gustav Wengel&#39;s blogpost - converting a React codebase to TypeScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide&quot;&gt;Microsoft React TypeScript conversion guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react&quot;&gt;DefinitelyTyped React source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;You?&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:other-resources--&gt; 
&lt;!--START-SECTION:talks--&gt; 
&lt;h1&gt;Recommended React + TypeScript talks&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_PBQ3if6Fmg&quot;&gt;Ultimate React Component Patterns with TypeScript&lt;/a&gt;, by Martin Hochel, GeeCon Prague 2018&lt;/li&gt; 
 &lt;li&gt;Please help contribute this new section!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:talks--&gt; 
&lt;!--START-SECTION:learn-ts--&gt; 
&lt;h1&gt;Time to Really Learn TypeScript&lt;/h1&gt; 
&lt;p&gt;Believe it or not, we have only barely introduced TypeScript here in this cheatsheet. If you are still facing TypeScript troubleshooting issues, it is likely that your understanding of TS is still too superficial.&lt;/p&gt; 
&lt;p&gt;There is a whole world of generic type logic that you will eventually get into, however it becomes far less dealing with React than just getting good at TypeScript so it is out of scope here. But at least you can get productive in React now :)&lt;/p&gt; 
&lt;p&gt;It is worth mentioning some resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Step through the 40+ examples under &lt;a href=&quot;http://www.typescriptlang.org/play/index.html&quot;&gt;the playground&#39;s&lt;/a&gt; Examples section, written by @Orta&lt;/li&gt; 
 &lt;li&gt;Anders Hejlsberg&#39;s overview of TS: &lt;a href=&quot;https://www.youtube.com/watch?v=ET4kT88JRXs&quot;&gt;https://www.youtube.com/watch?v=ET4kT88JRXs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Marius Schultz: &lt;a href=&quot;https://blog.mariusschulz.com/series/typescript-evolution&quot;&gt;https://blog.mariusschulz.com/series/typescript-evolution&lt;/a&gt; with an &lt;a href=&quot;https://egghead.io/courses/advanced-static-types-in-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basarat&#39;s Deep Dive: &lt;a href=&quot;https://basarat.gitbook.io/typescript/&quot;&gt;https://basarat.gitbook.io/typescript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Axel Rauschmeyer&#39;s &lt;a href=&quot;https://exploringjs.com/tackling-ts/&quot;&gt;Tackling TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rares Matei: &lt;a href=&quot;https://egghead.io/courses/practical-advanced-typescript&quot;&gt;Egghead.io course&lt;/a&gt;&#39;s advanced TypeScript course on Egghead.io is great for newer typescript features and practical type logic applications (e.g. recursively making all properties of a type &lt;code&gt;readonly&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href=&quot;https://www.youtube.com/watch?v=PJjeHzvi_VQ&amp;amp;feature=youtu.be&quot;&gt;Generics, Conditional types and Mapped types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shu Uesugi: &lt;a href=&quot;https://ts.chibicode.com/&quot;&gt;TypeScript for Beginner Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Here is another &lt;a href=&quot;https://github.com/threehams/typescript-error-guide/&quot;&gt;TypeScript Error Guide&lt;/a&gt; that you can check for your errors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:learn-ts--&gt; 
&lt;!--START-SECTION:examples--&gt; 
&lt;h1&gt;Example App&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/laststance/create-react-app-typescript-todo-example-2021&quot;&gt;Create React App TypeScript Todo Example 2021&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I6ypD7qv3Z8&quot;&gt;Ben Awad&#39;s 14 hour Fullstack React/GraphQL/TypeScript Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-realworld-app&quot;&gt;Cypress Realworld App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--END-SECTION:examples--&gt; 
&lt;h1&gt;My question isn&#39;t answered here!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/new&quot;&gt;File an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://github.com/all-contributors/all-contributors&quot;&gt;all-contributors&lt;/a&gt; specification. See &lt;a href=&quot;https://raw.githubusercontent.com/typescript-cheatsheets/react/main/CONTRIBUTORS.md&quot;&gt;CONTRIBUTORS.md&lt;/a&gt; for the full list. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>node-fetch/node-fetch</title>
      <link>https://github.com/node-fetch/node-fetch</link>
      <description>&lt;p&gt;A light-weight module that brings the Fetch API to Node.js&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/media/Banner.svg?sanitize=true&quot; alt=&quot;Node Fetch&quot;&gt; 
 &lt;br&gt; 
 &lt;p&gt;A light-weight module that brings &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; to Node.js.&lt;/p&gt; 
 &lt;a href=&quot;https://github.com/node-fetch/node-fetch/actions&quot;&gt;&lt;img src=&quot;https://github.com/node-fetch/node-fetch/workflows/CI/badge.svg?branch=master&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://coveralls.io/github/node-fetch/node-fetch&quot;&gt;&lt;img src=&quot;https://img.shields.io/coveralls/github/node-fetch/node-fetch&quot; alt=&quot;Coverage status&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://packagephobia.now.sh/result?p=node-fetch&quot;&gt;&lt;img src=&quot;https://badgen.net/packagephobia/install/node-fetch&quot; alt=&quot;Current version&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/node-fetch&quot; alt=&quot;Install size&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/sindresorhus/awesome-nodejs&quot;&gt;&lt;img src=&quot;https://awesome.re/mentioned-badge.svg?sanitize=true&quot; alt=&quot;Mentioned in Awesome Node.js&quot;&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://discord.gg/Zxbndcm&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/619915844268326952?color=%237289DA&amp;amp;label=Discord&quot; alt=&quot;Discord&quot;&gt;&lt;/a&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;b&gt;Consider supporting us on our Open Collective:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;a href=&quot;https://opencollective.com/node-fetch&quot;&gt;&lt;img src=&quot;https://opencollective.com/node-fetch/donate/button.png?color=blue&quot; alt=&quot;Open Collective&quot;&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;You might be looking for the &lt;a href=&quot;https://github.com/node-fetch/node-fetch/tree/2.x#readme&quot;&gt;v2 docs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#motivation&quot;&gt;Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#difference-from-client-side-fetch&quot;&gt;Difference from client-side fetch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#loading-and-configuring-the-module&quot;&gt;Loading and configuring the module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#upgrading&quot;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#common-usage&quot;&gt;Common Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#plain-text-or-html&quot;&gt;Plain text or HTML&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#json&quot;&gt;JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#simple-post&quot;&gt;Simple Post&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-with-json&quot;&gt;Post with JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-with-form-parameters&quot;&gt;Post with form parameters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#handling-exceptions&quot;&gt;Handling exceptions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#handling-client-and-server-errors&quot;&gt;Handling client and server errors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#handling-cookies&quot;&gt;Handling cookies&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#advanced-usage&quot;&gt;Advanced Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#streams&quot;&gt;Streams&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#accessing-headers-and-other-meta-data&quot;&gt;Accessing Headers and other Meta data&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#extract-set-cookie-header&quot;&gt;Extract Set-Cookie Header&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-data-using-a-file-stream&quot;&gt;Post data using a file stream&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#post-with-form-data-detect-multipart&quot;&gt;Post with form-data (detect multipart)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#request-cancellation-with-abortsignal&quot;&gt;Request cancellation with AbortSignal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#api&quot;&gt;API&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#fetchurl-options&quot;&gt;fetch(url[, options])&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#options&quot;&gt;Options&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#default-headers&quot;&gt;Default Headers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#custom-agent&quot;&gt;Custom Agent&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#custom-highwatermark&quot;&gt;Custom highWaterMark&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#insecure-http-parser&quot;&gt;Insecure HTTP Parser&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-request&quot;&gt;Class: Request&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#new-requestinput-options&quot;&gt;new Request(input[, options])&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-response&quot;&gt;Class: Response&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#new-responsebody-options&quot;&gt;new Response([body[, options]])&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#responseok&quot;&gt;response.ok&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#responseredirected&quot;&gt;response.redirected&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#responsetype&quot;&gt;response.type&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-headers&quot;&gt;Class: Headers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#new-headersinit&quot;&gt;new Headers([init])&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#interface-body&quot;&gt;Interface: Body&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodybody&quot;&gt;body.body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodybodyused&quot;&gt;body.bodyUsed&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodyarraybuffer&quot;&gt;body.arrayBuffer()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodyblob&quot;&gt;body.blob()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodyjson&quot;&gt;body.json()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodytext&quot;&gt;body.text()&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#bodybuffer&quot;&gt;body.buffer()&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-fetcherror&quot;&gt;Class: FetchError&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-aborterror&quot;&gt;Class: AbortError&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#acknowledgement&quot;&gt;Acknowledgement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#team&quot;&gt;Team&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#former&quot;&gt;Former&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;Instead of implementing &lt;code&gt;XMLHttpRequest&lt;/code&gt; in Node.js to run browser-specific &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;Fetch polyfill&lt;/a&gt;, why not go from native &lt;code&gt;http&lt;/code&gt; to &lt;code&gt;fetch&lt;/code&gt; API directly? Hence, &lt;code&gt;node-fetch&lt;/code&gt;, minimal code for a &lt;code&gt;window.fetch&lt;/code&gt; compatible API on Node.js runtime.&lt;/p&gt; 
&lt;p&gt;See Jason Miller&#39;s &lt;a href=&quot;https://www.npmjs.com/package/isomorphic-unfetch&quot;&gt;isomorphic-unfetch&lt;/a&gt; or Leonardo Quixada&#39;s &lt;a href=&quot;https://github.com/lquixada/cross-fetch&quot;&gt;cross-fetch&lt;/a&gt; for isomorphic usage (exports &lt;code&gt;node-fetch&lt;/code&gt; for server-side, &lt;code&gt;whatwg-fetch&lt;/code&gt; for client-side).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stay consistent with &lt;code&gt;window.fetch&lt;/code&gt; API.&lt;/li&gt; 
 &lt;li&gt;Make conscious trade-off when following &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;WHATWG fetch spec&lt;/a&gt; and &lt;a href=&quot;https://streams.spec.whatwg.org/&quot;&gt;stream spec&lt;/a&gt; implementation details, document known differences.&lt;/li&gt; 
 &lt;li&gt;Use native promise and async functions.&lt;/li&gt; 
 &lt;li&gt;Use native Node streams for body, on both request and response.&lt;/li&gt; 
 &lt;li&gt;Decode content encoding (gzip/deflate/brotli) properly, and convert string output (such as &lt;code&gt;res.text()&lt;/code&gt; and &lt;code&gt;res.json()&lt;/code&gt;) to UTF-8 automatically.&lt;/li&gt; 
 &lt;li&gt;Useful extensions such as redirect limit, response size limit, &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;explicit errors&lt;/a&gt; for troubleshooting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Difference from client-side fetch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See known differences: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v3-LIMITS.md&quot;&gt;As of v3.x&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v2-LIMITS.md&quot;&gt;As of v2.x&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If you happen to use a missing feature that &lt;code&gt;window.fetch&lt;/code&gt; offers, feel free to open an issue.&lt;/li&gt; 
 &lt;li&gt;Pull requests are welcomed too!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Current stable release (&lt;code&gt;3.x&lt;/code&gt;) requires at least Node.js 12.20.0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install node-fetch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Loading and configuring the module&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to patch the global object in node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

if (!globalThis.fetch) {
	globalThis.fetch = fetch;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;node-fetch&lt;/code&gt; is an ESM-only module - you are not able to import it with &lt;code&gt;require&lt;/code&gt;. We recommend you stay on v2 which is built with CommonJS unless you use ESM yourself. We will continue to publish critical bug fixes for it.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can use the async &lt;code&gt;import()&lt;/code&gt; function from CommonJS to load &lt;code&gt;node-fetch&lt;/code&gt; asynchronously:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// mod.cjs
const fetch = (...args) =&amp;gt; import(&#39;node-fetch&#39;).then(({default: fetch}) =&amp;gt; fetch(...args));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;Using an old version of node-fetch? Check out the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v3-UPGRADE-GUIDE.md&quot;&gt;2.x to 3.x upgrade guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/v2-UPGRADE-GUIDE.md&quot;&gt;1.x to 2.x upgrade guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/docs/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Common Usage&lt;/h2&gt; 
&lt;p&gt;NOTE: The documentation below is up-to-date with &lt;code&gt;3.x&lt;/code&gt; releases, if you are using an older version, please check how to &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#upgrading&quot;&gt;upgrade&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Plain text or HTML&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://github.com/&#39;);
const body = await response.text();

console.log(body);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://api.github.com/users/github&#39;);
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Simple Post&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: &#39;a=1&#39;});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post with JSON&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const body = {a: 1};

const response = await fetch(&#39;https://httpbin.org/post&#39;, {
	method: &#39;post&#39;,
	body: JSON.stringify(body),
	headers: {&#39;Content-Type&#39;: &#39;application/json&#39;}
});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post with form parameters&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;URLSearchParams&lt;/code&gt; is available on the global object in Node.js as of v10.0.0. See &lt;a href=&quot;https://nodejs.org/api/url.html#url_class_urlsearchparams&quot;&gt;official documentation&lt;/a&gt; for more usage methods.&lt;/p&gt; 
&lt;p&gt;NOTE: The &lt;code&gt;Content-Type&lt;/code&gt; header is only set automatically to &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; when an instance of &lt;code&gt;URLSearchParams&lt;/code&gt; is given as such:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const params = new URLSearchParams();
params.append(&#39;a&#39;, 1);

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: params});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Handling exceptions&lt;/h3&gt; 
&lt;p&gt;NOTE: 3xx-5xx responses are &lt;em&gt;NOT&lt;/em&gt; exceptions, and should be handled in &lt;code&gt;then()&lt;/code&gt;, see the next section.&lt;/p&gt; 
&lt;p&gt;Wrapping the fetch function into a &lt;code&gt;try/catch&lt;/code&gt; block will catch &lt;em&gt;all&lt;/em&gt; exceptions, such as errors originating from node core libraries, like network errors, and operational errors which are instances of FetchError. See the &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;error handling document&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

try {
	await fetch(&#39;https://domain.invalid/&#39;);
} catch (error) {
	console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Handling client and server errors&lt;/h3&gt; 
&lt;p&gt;It is common to create a helper function to check that the response contains no client (4xx) or server (5xx) error responses:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

class HTTPResponseError extends Error {
	constructor(response, ...args) {
		this.response = response;
		super(`HTTP Error Response: ${response.status} ${response.statusText}`, ...args);
	}
}

const checkStatus = response =&amp;gt; {
	if (response.ok) {
		// response.status &amp;gt;= 200 &amp;amp;&amp;amp; response.status &amp;lt; 300
		return response;
	} else {
		throw new HTTPResponseError(response);
	}
}

const response = await fetch(&#39;https://httpbin.org/status/400&#39;);

try {
	checkStatus(response);
} catch (error) {
	console.error(error);

	const errorBody = await error.response.text();
	console.error(`Error body: ${errorBody}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Handling cookies&lt;/h3&gt; 
&lt;p&gt;Cookies are not stored by default. However, cookies can be extracted and passed by manipulating request and response headers. See &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#extract-set-cookie-header&quot;&gt;Extract Set-Cookie Header&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Streams&lt;/h3&gt; 
&lt;p&gt;The &quot;Node.js way&quot; is to use streams when possible. You can pipe &lt;code&gt;res.body&lt;/code&gt; to another stream. This example uses &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback&quot;&gt;stream.pipeline&lt;/a&gt; to attach stream error handlers and wait for the download to complete.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {createWriteStream} from &#39;fs&#39;;
import {pipeline} from &#39;stream&#39;;
import {promisify} from &#39;util&#39;
import fetch from &#39;node-fetch&#39;;

const streamPipeline = promisify(pipeline);

const response = await fetch(&#39;https://github.githubassets.com/images/modules/logos_page/Octocat.png&#39;);

if (!response.ok) throw new Error(`unexpected response ${response.statusText}`);

await streamPipeline(response.body, createWriteStream(&#39;./octocat.png&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Node.js 14 you can also use async iterators to read &lt;code&gt;body&lt;/code&gt;; however, be careful to catch errors -- the longer a response runs, the more likely it is to encounter an error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://httpbin.org/stream/3&#39;);

try {
	for await (const chunk of response.body) {
		console.dir(JSON.parse(chunk.toString()));
	}
} catch (err) {
	console.error(err.stack);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Node.js 12 you can also use async iterators to read &lt;code&gt;body&lt;/code&gt;; however, async iterators with streams did not mature until Node.js 14, so you need to do some extra work to ensure you handle errors directly from the stream and wait on it response to fully close.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const read = async body =&amp;gt; {
	let error;
	body.on(&#39;error&#39;, err =&amp;gt; {
		error = err;
	});

	for await (const chunk of body) {
		console.dir(JSON.parse(chunk.toString()));
	}

	return new Promise((resolve, reject) =&amp;gt; {
		body.on(&#39;close&#39;, () =&amp;gt; {
			error ? reject(error) : resolve();
		});
	});
};

try {
	const response = await fetch(&#39;https://httpbin.org/stream/3&#39;);
	await read(response.body);
} catch (err) {
	console.error(err.stack);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Buffer&lt;/h3&gt; 
&lt;p&gt;If you prefer to cache binary data in full, use buffer(). (NOTE: buffer() is a &lt;code&gt;node-fetch&lt;/code&gt; only API)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
import fileType from &#39;file-type&#39;;

const response = await fetch(&#39;https://octodex.github.com/images/Fintechtocat.png&#39;);
const buffer = await response.buffer();
const type = await fileType.fromBuffer(buffer)

console.log(type);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessing Headers and other Meta data&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://github.com/&#39;);

console.log(response.ok);
console.log(response.status);
console.log(response.statusText);
console.log(response.headers.raw());
console.log(response.headers.get(&#39;content-type&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extract Set-Cookie Header&lt;/h3&gt; 
&lt;p&gt;Unlike browsers, you can access raw &lt;code&gt;Set-Cookie&lt;/code&gt; headers manually using &lt;code&gt;Headers.raw()&lt;/code&gt;. This is a &lt;code&gt;node-fetch&lt;/code&gt; only API.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://example.com&#39;);

// Returns an array of values, instead of a string of comma-separated values
console.log(response.headers.raw()[&#39;set-cookie&#39;]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post data using a file stream&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {createReadStream} from &#39;fs&#39;;
import fetch from &#39;node-fetch&#39;;

const stream = createReadStream(&#39;input.txt&#39;);

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: stream});
const data = await response.json();

console.log(data)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;node-fetch also supports spec-compliant FormData implementations such as &lt;a href=&quot;https://www.npmjs.com/package/formdata-polyfill&quot;&gt;formdata-polyfill&lt;/a&gt; and &lt;a href=&quot;https://github.com/octet-stream/form-data&quot;&gt;formdata-node&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
import {FormData} from &#39;formdata-polyfill/esm-min.js&#39;;
// Alternative package:
import {FormData} from &#39;formdata-node&#39;;

const form = new FormData();
form.set(&#39;greeting&#39;, &#39;Hello, world!&#39;);

const response = await fetch(&#39;https://httpbin.org/post&#39;, {method: &#39;POST&#39;, body: form});
const data = await response.json();

console.log(data);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;node-fetch also support form-data but it&#39;s now discouraged due to not being spec-compliant and needs workarounds to function - which we hope to remove one day&lt;/p&gt; 
&lt;h3&gt;Request cancellation with AbortSignal&lt;/h3&gt; 
&lt;p&gt;You may cancel requests with &lt;code&gt;AbortController&lt;/code&gt;. A suggested implementation is &lt;a href=&quot;https://www.npmjs.com/package/abort-controller&quot;&gt;&lt;code&gt;abort-controller&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An example of timing out a request after 150ms could be achieved as the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;
import AbortController from &#39;abort-controller&#39;;

const controller = new AbortController();
const timeout = setTimeout(() =&amp;gt; {
	controller.abort();
}, 150);

try {
	const response = await fetch(&#39;https://example.com&#39;, {signal: controller.signal});
	const data = await response.json();
} catch (error) {
	if (error instanceof fetch.AbortError) {
		console.log(&#39;request was aborted&#39;);
	}
} finally {
	clearTimeout(timeout);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/test/&quot;&gt;test cases&lt;/a&gt; for more examples.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;fetch(url[, options])&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;url&lt;/code&gt; A string representing the URL for fetching&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#fetch-options&quot;&gt;Options&lt;/a&gt; for the HTTP(S) request&lt;/li&gt; 
 &lt;li&gt;Returns: &lt;code&gt;Promise&amp;lt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#class-response&quot;&gt;Response&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Perform an HTTP(S) fetch.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; should be an absolute url, such as &lt;code&gt;https://example.com/&lt;/code&gt;. A path-relative URL (&lt;code&gt;/file/under/root&lt;/code&gt;) or protocol-relative URL (&lt;code&gt;//can-be-http-or-https.com/&lt;/code&gt;) will result in a rejected &lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;fetch-options&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;The default values are shown after each option key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;{
	// These properties are part of the Fetch Standard
	method: &#39;GET&#39;,
	headers: {},            // Request headers. format is the identical to that accepted by the Headers constructor (see below)
	body: null,             // Request body. can be null, a string, a Buffer, a Blob, or a Node.js Readable stream
	redirect: &#39;follow&#39;,     // Set to `manual` to extract redirect headers, `error` to reject redirect
	signal: null,           // Pass an instance of AbortSignal to optionally abort requests

	// The following properties are node-fetch extensions
	follow: 20,             // maximum redirect count. 0 to not follow redirect
	compress: true,         // support gzip/deflate content encoding. false to disable
	size: 0,                // maximum response body size in bytes. 0 to disable
	agent: null,            // http(s).Agent instance or function that returns an instance (see below)
	highWaterMark: 16384,   // the maximum number of bytes to store in the internal buffer before ceasing to read from the underlying resource.
	insecureHTTPParser: false	// Use an insecure HTTP parser that accepts invalid HTTP headers when `true`.
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Default Headers&lt;/h4&gt; 
&lt;p&gt;If no values are set, the following request headers will be sent automatically:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Header&lt;/th&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Accept-Encoding&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gzip,deflate,br&lt;/code&gt; &lt;em&gt;(when &lt;code&gt;options.compress === true&lt;/code&gt;)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*/*&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;close&lt;/code&gt; &lt;em&gt;(when no &lt;code&gt;options.agent&lt;/code&gt; is present)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;(automatically calculated, if possible)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;(host and port information from the target URI)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;chunked&lt;/code&gt; &lt;em&gt;(when &lt;code&gt;req.body&lt;/code&gt; is a stream)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;node-fetch&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Note: when &lt;code&gt;body&lt;/code&gt; is a &lt;code&gt;Stream&lt;/code&gt;, &lt;code&gt;Content-Length&lt;/code&gt; is not set automatically.&lt;/p&gt; 
&lt;h4&gt;Custom Agent&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;agent&lt;/code&gt; option allows you to specify networking related options which are out of the scope of Fetch, including and not limited to the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support self-signed certificate&lt;/li&gt; 
 &lt;li&gt;Use only IPv4 or IPv6&lt;/li&gt; 
 &lt;li&gt;Custom DNS Lookup&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://nodejs.org/api/http.html#http_new_agent_options&quot;&gt;&lt;code&gt;http.Agent&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;In addition, the &lt;code&gt;agent&lt;/code&gt; option accepts a function that returns &lt;code&gt;http&lt;/code&gt;(s)&lt;code&gt;.Agent&lt;/code&gt; instance given current &lt;a href=&quot;https://nodejs.org/api/url.html&quot;&gt;URL&lt;/a&gt;, this is useful during a redirection chain across HTTP and HTTPS protocol.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import http from &#39;http&#39;;
import https from &#39;https&#39;;

const httpAgent = new http.Agent({
	keepAlive: true
});
const httpsAgent = new https.Agent({
	keepAlive: true
});

const options = {
	agent: function(_parsedURL) {
		if (_parsedURL.protocol == &#39;http:&#39;) {
			return httpAgent;
		} else {
			return httpsAgent;
		}
	}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a id=&quot;custom-highWaterMark&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Custom highWaterMark&lt;/h4&gt; 
&lt;p&gt;Stream on Node.js have a smaller internal buffer size (16kB, aka &lt;code&gt;highWaterMark&lt;/code&gt;) from client-side browsers (&amp;gt;1MB, not consistent across browsers). Because of that, when you are writing an isomorphic app and using &lt;code&gt;res.clone()&lt;/code&gt;, it will hang with large response in Node.&lt;/p&gt; 
&lt;p&gt;The recommended way to fix this problem is to resolve cloned response in parallel:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://example.com&#39;);
const r1 = await response.clone();

const results = await Promise.all([response.json(), r1.text()]);

console.log(results[0]);
console.log(results[1]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If for some reason you don&#39;t like the solution above, since &lt;code&gt;3.x&lt;/code&gt; you are able to modify the &lt;code&gt;highWaterMark&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import fetch from &#39;node-fetch&#39;;

const response = await fetch(&#39;https://example.com&#39;, {
	// About 1MB
	highWaterMark: 1024 * 1024
});

const result = await res.clone().buffer();
console.dir(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Insecure HTTP Parser&lt;/h4&gt; 
&lt;p&gt;Passed through to the &lt;code&gt;insecureHTTPParser&lt;/code&gt; option on http(s).request. See &lt;a href=&quot;https://nodejs.org/api/http.html#http_http_request_url_options_callback&quot;&gt;&lt;code&gt;http.request&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-request&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: Request&lt;/h3&gt; 
&lt;p&gt;An HTTP(S) request containing information about URL, method, headers, and the body. This class implements the &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#iface-body&quot;&gt;Body&lt;/a&gt; interface.&lt;/p&gt; 
&lt;p&gt;Due to the nature of Node.js, the following properties are not implemented at this moment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;destination&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;referrer&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;referrerPolicy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;credentials&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;integrity&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keepalive&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following node-fetch extension properties are provided:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;follow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;counter&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;highWaterMark&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#fetch-options&quot;&gt;options&lt;/a&gt; for exact meaning of these extensions.&lt;/p&gt; 
&lt;h4&gt;new Request(input[, options])&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;input&lt;/code&gt; A string representing a URL, or another &lt;code&gt;Request&lt;/code&gt; (which will be cloned)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; [Options][#fetch-options] for the HTTP(S) request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constructs a new &lt;code&gt;Request&lt;/code&gt; object. The constructor is identical to that in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/Request&quot;&gt;browser&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In most cases, directly &lt;code&gt;fetch(url, options)&lt;/code&gt; is simpler than creating a &lt;code&gt;Request&lt;/code&gt; object.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-response&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: Response&lt;/h3&gt; 
&lt;p&gt;An HTTP(S) response. This class implements the &lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/#iface-body&quot;&gt;Body&lt;/a&gt; interface.&lt;/p&gt; 
&lt;p&gt;The following properties are not implemented in node-fetch at this moment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;trailer&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;new Response([body[, options]])&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;body&lt;/code&gt; A &lt;code&gt;String&lt;/code&gt; or &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt; stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; A &lt;a href=&quot;https://fetch.spec.whatwg.org/#responseinit&quot;&gt;&lt;code&gt;ResponseInit&lt;/code&gt;&lt;/a&gt; options dictionary&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constructs a new &lt;code&gt;Response&lt;/code&gt; object. The constructor is identical to that in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/Response&quot;&gt;browser&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Because Node.js does not implement service workers (for which this class was designed), one rarely has to construct a &lt;code&gt;Response&lt;/code&gt; directly.&lt;/p&gt; 
&lt;h4&gt;response.ok&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Convenience property representing if the request ended normally. Will evaluate to true if the response status was greater than or equal to 200 but smaller than 300.&lt;/p&gt; 
&lt;h4&gt;response.redirected&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Convenience property representing if the request has been redirected at least once. Will evaluate to true if the internal redirect counter is greater than 0.&lt;/p&gt; 
&lt;h4&gt;response.type&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(deviation from spec)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Convenience property representing the response&#39;s type. node-fetch only supports &lt;code&gt;&#39;default&#39;&lt;/code&gt; and &lt;code&gt;&#39;error&#39;&lt;/code&gt; and does not make use of &lt;a href=&quot;https://fetch.spec.whatwg.org/#concept-filtered-response&quot;&gt;filtered responses&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-headers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: Headers&lt;/h3&gt; 
&lt;p&gt;This class allows manipulating and iterating over a set of HTTP headers. All methods specified in the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch Standard&lt;/a&gt; are implemented.&lt;/p&gt; 
&lt;h4&gt;new Headers([init])&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;init&lt;/code&gt; Optional argument to pre-fill the &lt;code&gt;Headers&lt;/code&gt; object&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Construct a new &lt;code&gt;Headers&lt;/code&gt; object. &lt;code&gt;init&lt;/code&gt; can be either &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;Headers&lt;/code&gt; object, an key-value map object or any iterable object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Example adapted from https://fetch.spec.whatwg.org/#example-headers-class
import {Headers} from &#39;node-fetch&#39;;

const meta = {
	&#39;Content-Type&#39;: &#39;text/xml&#39;,
	&#39;Breaking-Bad&#39;: &#39;&amp;lt;3&#39;
};
const headers = new Headers(meta);

// The above is equivalent to
const meta = [[&#39;Content-Type&#39;, &#39;text/xml&#39;], [&#39;Breaking-Bad&#39;, &#39;&amp;lt;3&#39;]];
const headers = new Headers(meta);

// You can in fact use any iterable objects, like a Map or even another Headers
const meta = new Map();
meta.set(&#39;Content-Type&#39;, &#39;text/xml&#39;);
meta.set(&#39;Breaking-Bad&#39;, &#39;&amp;lt;3&#39;);
const headers = new Headers(meta);
const copyOfHeaders = new Headers(headers);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a id=&quot;iface-body&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interface: Body&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Body&lt;/code&gt; is an abstract interface with methods that are applicable to both &lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Response&lt;/code&gt; classes.&lt;/p&gt; 
&lt;p&gt;The following methods are not yet implemented in node-fetch at this moment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;formData()&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;body.body&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(deviation from spec)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt; stream&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Data are encapsulated in the &lt;code&gt;Body&lt;/code&gt; object. Note that while the &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch Standard&lt;/a&gt; requires the property to always be a WHATWG &lt;code&gt;ReadableStream&lt;/code&gt;, in node-fetch it is a Node.js &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_readable_streams&quot;&gt;&lt;code&gt;Readable&lt;/code&gt; stream&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;body.bodyUsed&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A boolean property for if this body has been consumed. Per the specs, a consumed body cannot be used again.&lt;/p&gt; 
&lt;h4&gt;body.arrayBuffer()&lt;/h4&gt; 
&lt;h4&gt;body.blob()&lt;/h4&gt; 
&lt;h4&gt;body.json()&lt;/h4&gt; 
&lt;h4&gt;body.text()&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(spec-compliant)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Returns: &lt;code&gt;Promise&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consume the body and return a promise that will resolve to one of these formats.&lt;/p&gt; 
&lt;h4&gt;body.buffer()&lt;/h4&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(node-fetch extension)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Returns: &lt;code&gt;Promise&amp;lt;Buffer&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consume the body and return a promise that will resolve to a Buffer.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-fetcherror&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: FetchError&lt;/h3&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(node-fetch extension)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;An operational error in the fetching process. See &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;ERROR-HANDLING.md&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;class-aborterror&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Class: AbortError&lt;/h3&gt; 
&lt;p&gt;&lt;small&gt;&lt;em&gt;(node-fetch extension)&lt;/em&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;An Error thrown when the request is aborted in response to an &lt;code&gt;AbortSignal&lt;/code&gt;&#39;s &lt;code&gt;abort&lt;/code&gt; event. It has a &lt;code&gt;name&lt;/code&gt; property of &lt;code&gt;AbortError&lt;/code&gt;. See &lt;a href=&quot;https://github.com/node-fetch/node-fetch/raw/master/docs/ERROR-HANDLING.md&quot;&gt;ERROR-HANDLING.MD&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;TypeScript&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Since &lt;code&gt;3.x&lt;/code&gt; types are bundled with &lt;code&gt;node-fetch&lt;/code&gt;, so you don&#39;t need to install any additional packages.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For older versions please use the type definitions from &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install --save-dev @types/node-fetch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;github/fetch&lt;/a&gt; for providing a solid implementation reference.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/bitinn&quot;&gt;&lt;img src=&quot;https://github.com/bitinn.png?size=100&quot; alt=&quot;David Frank&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/jimmywarting&quot;&gt;&lt;img src=&quot;https://github.com/jimmywarting.png?size=100&quot; alt=&quot;Jimmy Wärting&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/xxczaki&quot;&gt;&lt;img src=&quot;https://github.com/xxczaki.png?size=100&quot; alt=&quot;Antoni Kepinski&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/Richienb&quot;&gt;&lt;img src=&quot;https://github.com/Richienb.png?size=100&quot; alt=&quot;Richie Bendall&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/gr2m&quot;&gt;&lt;img src=&quot;https://github.com/gr2m.png?size=100&quot; alt=&quot;Gregor Martynus&quot;&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bitinn.net/&quot;&gt;David Frank&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://jimmy.warting.se/&quot;&gt;Jimmy Wärting&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://kepinski.ch&quot;&gt;Antoni Kepinski&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.richie-bendall.ml/&quot;&gt;Richie Bendall&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com/gr2m&quot;&gt;Gregor Martynus&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h6&gt;Former&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timothygu&quot;&gt;Timothy Gu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkantr&quot;&gt;Jared Kantrowitz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/node-fetch/node-fetch/main/LICENSE.md&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/whatsapp-web.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765&quot;&gt;&lt;img src=&quot;https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true&quot; alt=&quot;Depfu&quot;&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/WhatsApp_Web-2.2126.14-brightgreen.svg?sanitize=true&quot; alt=&quot;WhatsApp_Web 2.2126.14&quot;&gt; &lt;a href=&quot;https://discord.gg/H7DqQs4&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/698610475432411196.svg?logo=discord&quot; alt=&quot;Discord Chat&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;whatsapp-web.js&lt;/h1&gt; 
&lt;p&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/p&gt; 
&lt;p&gt;It uses Puppeteer to run a real instance of Whatsapp Web to avoid getting blocked.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I can&#39;t guarantee you will not be blocked by using this method, although it has worked for me. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn&#39;t be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Please note that Node v12+ is required.&lt;/p&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client } = require(&#39;whatsapp-web.js&#39;);

const client = new Client();

client.on(&#39;qr&#39;, (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log(&#39;QR RECEIVED&#39;, qr);
});

client.on(&#39;ready&#39;, () =&amp;gt; {
    console.log(&#39;Client is ready!&#39;);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
    if (msg.body == &#39;!ping&#39;) {
        msg.reply(&#39;pong&#39;);
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js&quot;&gt;example.js&lt;/a&gt; for another example with more use cases.&lt;/p&gt; 
&lt;h2&gt;Remote Access&lt;/h2&gt; 
&lt;p&gt;You could also connect to any previously existing browser instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const client = new Client({ 
    puppeteer: {
        browserWSEndpoint: `ws://localhost:3000`
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Installing a browser using browserless:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker run \
  --rm \
  -p 3000:3000 \
  -e &quot;MAX_CONCURRENT_SESSIONS=1&quot; \
  browserless/chrome:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reference: &lt;a href=&quot;https://docs.browserless.io/docs/docker-quickstart.html&quot;&gt;https://docs.browserless.io/docs/docker-quickstart.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Remote Debugging&lt;/h3&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Running a browser with websocket remote debugging enabled:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;chrome.exe --remote-debugging-port=9222&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After that check the following webpage and check &lt;a href=&quot;http://127.0.0.1:9220/json&quot;&gt;http://127.0.0.1:9220/json&lt;/a&gt; and get the &lt;strong&gt;webSocketDebuggerUrl&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;✅ &lt;a href=&quot;https://guide.wwebjs.dev/features/handling-attachments#caveat-for-sending-videos-and-gifs&quot;&gt;(requires google chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.wwebjs.dev/&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guide.wwebjs.dev/&quot;&gt;Guide&lt;/a&gt; &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pedroslopez/whatsapp-web.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.org/package/whatsapp-web.js&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome! If you see something you&#39;d like to add, please do. For drastic changes, please open an issue first.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the link below&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.paypal.me/psla/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&quot; alt=&quot;Support via PayPal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href=&quot;https://whatsapp.com&quot;&gt;https://whatsapp.com&lt;/a&gt;. &quot;WhatsApp&quot; as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this project except in compliance with the License. You may obtain a copy of the License at &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haehnchen/crypto-trading-bot</title>
      <link>https://github.com/Haehnchen/crypto-trading-bot</link>
      <description>&lt;p&gt;Cryptocurrency trading bot in javascript for Bitfinex, Bitmex, Binance, FTX, Bybit ... (public edition)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crypto Trading Bot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/Haehnchen/crypto-trading-bot&quot;&gt;&lt;img src=&quot;https://travis-ci.org/Haehnchen/crypto-trading-bot.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A &lt;strong&gt;work in progress&lt;/strong&gt; Cryptocurrency for common exchanges like Bitfinex, Bitmex and Binance. As most trading bots just provide basic buy and sell signals they provide many stuff to get profitable eg exchange orders like stop-losses or stop-limits are not supported by main bots. Also the limitation of fixed timeframe and technical indicators must be broken&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Not production ready&lt;/strong&gt; only basic functionality&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully use Websocket for exchange communication to react as fast as possible on market&lt;/li&gt; 
 &lt;li&gt;Multi pair support in one instance&lt;/li&gt; 
 &lt;li&gt;sqlite3 storage for candles, tickers, ...&lt;/li&gt; 
 &lt;li&gt;Webserver UI&lt;/li&gt; 
 &lt;li&gt;Support for going &quot;Short&quot; and &quot;Long&quot;&lt;/li&gt; 
 &lt;li&gt;Signal browser dashboard for pairs&lt;/li&gt; 
 &lt;li&gt;Slack and email notification&lt;/li&gt; 
 &lt;li&gt;Join foreign exchange candles (eg. Trade on Bitmex with the faster moving Binance trades / candles)&lt;/li&gt; 
 &lt;li&gt;TODO: Show possible arbitrage trades&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Exchanges&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitmex.com/register/jS4mLN&quot;&gt;Bitmex&lt;/a&gt; with leverage configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitmex.com/register/jS4mLN&quot;&gt;Bitmex Testnet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/?ref=17569916&quot;&gt;Binance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/?ref=17569916&quot;&gt;Binance Margin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.binance.com/en/futures/ref/302644&quot;&gt;Binance Futures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coinbase.com/join/5a2ae60e76531100d3af2ee5&quot;&gt;Coinbase Pro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitfinex.com/?refcode=kDLceRHa&quot;&gt;Bitfinex&lt;/a&gt; (margin wallet)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybit.com/app/register?ref=46AK7&quot;&gt;Bybit&lt;/a&gt; with leverage configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ftx.com/#a=1494781&quot;&gt;FTX&lt;/a&gt; (Perpetual Futures only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TODOS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hbg.com/&quot;&gt;Huobi Global&lt;/a&gt; (margin)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical stuff and packages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;node.js&lt;/li&gt; 
 &lt;li&gt;sqlite3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anandanand84/technicalindicators&quot;&gt;technicalindicators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tulipindicators.org/list&quot;&gt;tulipindicators - tulind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mrjbq7.github.io/ta-lib/&quot;&gt;TA-Lib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;twig&lt;/li&gt; 
 &lt;li&gt;express&lt;/li&gt; 
 &lt;li&gt;Bootstrap v4&lt;/li&gt; 
 &lt;li&gt;Tradingview widgets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;h3&gt;[optional] Preinstall&lt;/h3&gt; 
&lt;p&gt;The tulip library is used for indicators; which sometimes is having some issues on &lt;code&gt;npm install&lt;/code&gt; because of code compiling:&lt;/p&gt; 
&lt;p&gt;Install build tools&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The nodejs wrapper for tulipindicators is called &lt;a href=&quot;https://www.npmjs.com/package/tulind&quot;&gt;Tulip Node (tuind)&lt;/a&gt;, check out installation instructions there.&lt;/p&gt; 
&lt;p&gt;Also the build from source is not supporting all nodejs version. It looks like versions &amp;lt;= 10 are working. You can use nodejs 12 if you compiled it once via older version.&lt;/p&gt; 
&lt;h3&gt;Install packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;➜ npm install --production
➜ npm run postinstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create instance file for pairs and changes&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp instance.js.dist instance.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Provide a configuration with your exchange credentials&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cp conf.json.dist conf.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new sqlite database use bot.sql scheme to create the tables&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sqlite3 bot.db &amp;lt; bot.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lets start it&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use: Docker&lt;/h2&gt; 
&lt;p&gt;For initialize the configuration once&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;➜ cp instance.js.dist instance.js &amp;amp;&amp;amp; cp conf.json.dist conf.json &amp;amp;&amp;amp; sqlite3 bot.db &amp;lt; bot.sql
➜ docker-compose build
➜ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After this you can use &lt;code&gt;docker-compose&lt;/code&gt; which will give you a running bot via &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting Up Telegram Bot&lt;/h2&gt; 
&lt;p&gt;First, you&#39;ll need to create a bot for Telegram. Just talk to &lt;a href=&quot;https://telegram.me/botfather&quot;&gt;BotFather&lt;/a&gt; and follow simple steps until it gives you a token for it. You&#39;ll also need to create a Telegram group, the place where you and crypto-trading-bot will communicate. After creating it, add the bot as administrator (make sure to uncheck &quot;All Members Are Admins&quot;).&lt;/p&gt; 
&lt;h3&gt;Retrieving Chat IDs&lt;/h3&gt; 
&lt;p&gt;Invite &lt;code&gt;@RawDataBot&lt;/code&gt; to your group and get your group id in sended chat id field&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Message
 ├ message_id: 338
 ├ from
 ┊  ├ id: *****
 ┊  ├ is_bot: false
 ┊  ├ first_name: 사이드
 ┊  ├ username: ******
 ┊  └ language_code: en
 ├ chat
 ┊  ├ id: -1001118554477
 ┊  ├ title: Test Group
 ┊  └ type: supergroup
 ├ date: 1544948900
 └ text: A
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Look for id: -1001118554477 is your chat id (with the negative sign).&lt;/p&gt; 
&lt;h2&gt;Webserver&lt;/h2&gt; 
&lt;p&gt;Some browser links&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UI: &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Signals: &lt;a href=&quot;http://127.0.0.1:8080/signals&quot;&gt;http://127.0.0.1:8080/signals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tradingview: &lt;a href=&quot;http://127.0.0.1:8080/tradingview/BTCUSD&quot;&gt;http://127.0.0.1:8080/tradingview/BTCUSD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Backtesting: &lt;a href=&quot;http://127.0.0.1:8080/backtest&quot;&gt;http://127.0.0.1:8080/backtest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Order &amp;amp; Pair Management: &lt;a href=&quot;http://127.0.0.1:8080/pairs&quot;&gt;http://127.0.0.1:8080/pairs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security / Authentication&lt;/h3&gt; 
&lt;p&gt;As the webserver provides just basic auth for access you should combine some with eh a https for public server. Here s simple &lt;code&gt;proxy_pass&lt;/code&gt; for nginx.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# /etc/nginx/sites-available/YOURHOST
server {
    server_name YOURHOST;

    location / {
        proxy_pass http://127.0.0.1:8080;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/YOURHOST/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/YOURHOST/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should also set the listen ip to a local one&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# config.json
webserver.ip: 127.0.0.1

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;h3&gt;Dashboard&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/cryptobot.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Webserver UI&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Trades / Positions / Orders&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/trades.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Trades / Positions / Orders&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Backtesting&lt;/h3&gt; 
&lt;p&gt;Currently there is a the UI for backtesting&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/backtest_result.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Backtest Result&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Manual Orders&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/manual_order.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Manual Orders&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Build In Strategies&lt;/h2&gt; 
&lt;p&gt;Common strategy with indicators are inside, which most of the time are not profitable. See some more advanced strategy in the list below&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies/dip_catcher/README.md&quot;&gt;dip_catcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies/dca_dipper/README.md&quot;&gt;dca_dipper&lt;/a&gt; - &lt;strong&gt;Long term invest&lt;/strong&gt; Dollar-Cost Averaging (DCA) Dip Investor Strategy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Find some example strategies inside &lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/src/modules/strategy/strategies&quot;&gt;src/modules/strategy/strategies&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Custom Strategies&lt;/h2&gt; 
&lt;p&gt;For custom strategies use &lt;a href=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/var/strategies&quot;&gt;var/strategies&lt;/a&gt; folder.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# simple file structure
var/strategies/your_strategy.js

# or wrap strategy into any sub folder depth
var/strategies/my_strategy/my_strategy.js
var/strategies/subfolder1/our_strategy/our_strategy.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools / Watchdog&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;order_adjust&lt;/code&gt; Keep open orders in bid / ask of the orderbook in first position&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Watchdog&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;stoploss&lt;/code&gt; provide general stoploss order in percent of entry price (Exchange Order)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;risk_reward_ratio&lt;/code&gt; Creates Risk Reward order for take profit and stoploss (Exchange Order Limit+Stop)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stoploss_watch&lt;/code&gt; Close open position if ticker price falls below the percent lose; use this for exchange that dont support stop_loss order liek Binance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trailing_stop&lt;/code&gt; Use native exchange trailing stop; if supported by exchange eg &lt;code&gt;Bitfinex&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;    &#39;watchdogs&#39;: [
        {
            &#39;name&#39;: &#39;stoploss&#39;,
            &#39;percent&#39;: 3,
        },
        {
            &#39;name&#39;: &#39;risk_reward_ratio&#39;,
            &#39;target_percent&#39;: 6,
            &#39;stop_percent&#39;: 3,
        },
        {
            &#39;name&#39;: &#39;stoploss_watch&#39;,
            &#39;stop&#39;: 1.2,
        },
        {
            &#39;name&#39;: &#39;trailing_stop&#39;,
            &#39;target_percent&#39;: 1.2,
            &#39;stop_percent&#39;: 0.5
        }
    ],
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tick Interval&lt;/h3&gt; 
&lt;p&gt;Per default every strategy is &quot;ticked&quot; every full minute with a ~10sec time window. If you want to tick every 15 minutes or less see possible examples below.&lt;/p&gt; 
&lt;p&gt;Supported units are &quot;m&quot; (minute) and &quot;s&quot; (seconds)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
   &quot;strategies&quot;:[
      {
         &quot;strategy&quot;:&quot;cci&quot;,
         &quot;interval&quot;:&quot;15m&quot;
      },
      {
         &quot;strategy&quot;:&quot;cci2&quot;,
         &quot;interval&quot;:&quot;30s&quot;
      },
      {
         &quot;strategy&quot;:&quot;cci3&quot;,
         &quot;interval&quot;:&quot;60m&quot;
      }
   ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trading&lt;/h2&gt; 
&lt;h3&gt;Capital&lt;/h3&gt; 
&lt;p&gt;To allow the bot to trade you need to give some &quot;playing capital&quot;. You can allow to by via asset or currency amount, see examples below. You should only provide one of them, first wins.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    c.symbols.push({
        &#39;symbol&#39;: &#39;BTC-EUR&#39;,
        &#39;exchange&#39;: &#39;coinbase_pro&#39;,
        &#39;trade&#39;: {
            &#39;capital&#39;: 0.015, // this will buy 0.015 BTC
            &#39;currency_capital&#39;: 50,  // this will use 50 EUR and buys the equal amount of BTC (example: BTC price 3000 use 50 EUR. will result in 0.016 BTC)
            &#39;balance_percent&#39;: 75,  // this will use 75 % of your exchange margin tradable balance. Currently implemented only on Bitfinex exchange.
        },
    })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Live Strategy&lt;/h3&gt; 
&lt;p&gt;Every strategy stat should be live must be places inside &lt;code&gt;trade&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  {
    &quot;trade&quot;: {
      &quot;strategies&quot;: [
        {
          &quot;strategy&quot;: &quot;dip_catcher&quot;,
          &quot;interval&quot;: &quot;15m&quot;,
          &quot;options&quot;: {
            &quot;period&quot;: &quot;15m&quot;
          }
        }
      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Inside logs, visible via browser ui, you can double check the strategies init process after the application started.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[info] Starting strategy intervals
[info] &quot;binance_futures&quot; - &quot;ETHUSDT&quot; - &quot;trade&quot; - init strategy &quot;dip_catcher&quot; (15m) in 11.628 minutes
[info] &quot;binance_futures&quot; - &quot;BTCUSDT&quot; - &quot;trade&quot; first strategy run &quot;dip_catcher&quot; now every 15.00 minutes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Full Trade Example&lt;/h3&gt; 
&lt;p&gt;An example &lt;code&gt;instance.js&lt;/code&gt; which trades can be found inside &lt;code&gt;instance.js.dist_trade&lt;/code&gt;. Rename it or move the content to you file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const c = (module.exports = {});

c.symbols = [
  {
    symbol: &#39;ETHUSDT&#39;,
    exchange: &#39;binance_futures&#39;,
    periods: [&#39;1m&#39;, &#39;15m&#39;, &#39;1h&#39;],
    trade: {
      currency_capital: 10,
      strategies: [
        {
          strategy: &#39;dip_catcher&#39;,
          interval: &#39;15m&#39;,
          options: {
            period: &#39;15m&#39;
          }
        }
      ]
    },
    watchdogs: [
      {
        name: &#39;risk_reward_ratio&#39;,
        target_percent: 3.1,
        stop_percent: 2.1
      }
    ]
  }
];
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Margin / Leverage&lt;/h3&gt; 
&lt;p&gt;Per pair you can set used margin before orders are created; depending on exchange&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    c.symbols.push({
        &#39;symbol&#39;: &#39;BTCUSD&#39;,
        &#39;exchange&#39;: &#39;bitmex&#39;,
        &#39;extra&#39;: {
            &#39;bitmex_leverage&#39;: 5,
        },
    })

    c.symbols.push({
        &#39;symbol&#39;: &#39;EOSUSD&#39;,
        &#39;exchange&#39;: &#39;bybit&#39;,
        &#39;extra&#39;: {
            &#39;bybit_leverage&#39;: 5,
        },
    })    
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;h3&gt;Fill data&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;outdated&lt;/em&gt;, but there as an automatic filling on startup ~1000 candles from the past (depending on exchange) and continuously fetched when running&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node index.js backfill -e bitmex -p 1m -s XRPZ18
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Signals&lt;/h2&gt; 
&lt;h3&gt;Slack&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Haehnchen/crypto-trading-bot/master/documentation/slack_signals.png&quot; alt=&quot;Webserver UI&quot; title=&quot;Slack signals&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Related Links&lt;/h2&gt; 
&lt;h3&gt;Trading Bots Inspiration&lt;/h3&gt; 
&lt;p&gt;Other bots with possible design pattern&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeviaVir/zenbot&quot;&gt;https://github.com/DeviaVir/zenbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magic8bot/magic8bot&quot;&gt;https://github.com/magic8bot/magic8bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/askmike/gekko&quot;&gt;https://github.com/askmike/gekko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freqtrade/freqtrade&quot;&gt;https://github.com/freqtrade/freqtrade&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ekliptor/WolfBot&quot;&gt;https://github.com/Ekliptor/WolfBot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andresilvasantos/bitprophet&quot;&gt;https://github.com/andresilvasantos/bitprophet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kavehs87/PHPTradingBot&quot;&gt;https://github.com/kavehs87/PHPTradingBot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Superalgos/Superalgos&quot;&gt;https://github.com/Superalgos/Superalgos&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strategies&lt;/h3&gt; 
&lt;p&gt;Some strategies based on technical indicators for collection some ideas&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freqtrade/freqtrade-strategies&quot;&gt;https://github.com/freqtrade/freqtrade-strategies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freqtrade/freqtrade-strategies/tree/master/user_data/strategies/berlinguyinca&quot;&gt;https://github.com/freqtrade/freqtrade-strategies/tree/master/user_data/strategies/berlinguyinca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xFFFFF/Gekko-Strategies&quot;&gt;https://github.com/xFFFFF/Gekko-Strategies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sthewissen/Mynt/tree/master/src/Mynt.Core/Strategies&quot;&gt;https://github.com/sthewissen/Mynt/tree/master/src/Mynt.Core/Strategies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ekliptor/WolfBot/tree/master/src/Strategies&quot;&gt;https://github.com/Ekliptor/WolfBot/tree/master/src/Strategies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Superalgos/Strategy-BTC-WeakHandsBuster&quot;&gt;https://github.com/Superalgos/Strategy-BTC-WeakHandsBuster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Superalgos/Strategy-BTC-BB-Top-Bounce&quot;&gt;https://github.com/Superalgos/Strategy-BTC-BB-Top-Bounce&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png&quot; alt=&quot;AWESOME CHEATSHEETS LOGO&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://awesome.re&quot;&gt;&lt;img src=&quot;https://awesome.re/badge.svg?sanitize=true&quot; alt=&quot;Awesome&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href=&quot;https://lecoupa.github.io/awesome-cheatsheets/&quot;&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href=&quot;https://gist.github.com/LeCoupa&quot;&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I reorganized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh&quot;&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt&quot;&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt&quot;&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md&quot;&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php&quot;&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md&quot;&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php&quot;&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py&quot;&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js&quot;&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js&quot;&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js&quot;&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js&quot;&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html&quot;&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js&quot;&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css&quot;&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js&quot;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js&quot;&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js&quot;&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh&quot;&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh&quot;&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh&quot;&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js&quot;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md&quot;&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh&quot;&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js&quot;&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt&quot;&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt&quot;&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh&quot;&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh&quot;&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md&quot;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml&quot;&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh&quot;&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh&quot;&gt;Ubuntu&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>codedthemes/berry-free-react-admin-template</title>
      <link>https://github.com/codedthemes/berry-free-react-admin-template</link>
      <description>&lt;p&gt;Berry free react material-ui admin template for easing and faster web development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Berry Free React Material Admin Template &lt;a href=&quot;https://twitter.com/intent/tweet?text=Get%20Berry%20React%20-%20The%20most%20beautiful%20Material%20designed%20Admin%20Dashboard%20Template%20&amp;amp;url=https://berrydashboard.io&amp;amp;via=codedthemes&amp;amp;hashtags=reactjs,webdev,developers,javascript&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&quot; alt=&quot;Tweet&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/codedthemes/berry-free-react-admin-template/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/price-FREE-0098f7.svg?sanitize=true&quot; alt=&quot;Price&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/codedthemes/berry-free-react-admin-template/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/package-json/v/codedthemes/berry-free-react-admin-template&quot; alt=&quot;GitHub package version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Berry is a creative free react admin template build using the Material-UI. It is meant to be the best User Experience with highly customizable feature-riched pages. It is a complete game-changer React Dashboard Template with easy and intuitive responsive design as on retina screens or laptopshttps://berrydashboard.io/imp-images/berry-github-free-repo.jpg&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://berrydashboard.io/imp-images/berry-github-free-repo.jpg&quot; alt=&quot;IMG_8566.jpg&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://berrydashboard.io&quot;&gt;Pro version&lt;/a&gt; of Berry react template contains features like TypeScript, Apps, Authentication Methods (i.e. JWT, Auth0, Firebase), Advance Components, Form Plugins, Layouts, Widgets, and many more.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://berry-free-react-admin-template-git-v20-codedthemes.vercel.app/&quot;&gt;Berry Free&lt;/a&gt;&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;&lt;a href=&quot;https://material-ui.com/store/items/berry-react-material-admin/&quot;&gt;Berry&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;9&lt;/strong&gt; Demo pages&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;45+&lt;/strong&gt; demo pages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ Multi-language&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ Dark/Light Mode 🌓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ TypeScript version&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ Design files (Figma)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ 6+ color Options&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ RTL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ JWT, Firebase, Auth0 authentications&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓ &lt;a href=&quot;https://berrydashboard.io/dashboard/default&quot;&gt;More components&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Why Berry?&lt;/h2&gt; 
&lt;p&gt;Berry brings everything you need for dashboard development. We have added the following high-end features in the initial release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modern aesthetics UI design&lt;/li&gt; 
 &lt;li&gt;Material-UI components&lt;/li&gt; 
 &lt;li&gt;Fully Responsive, all modern browser supported&lt;/li&gt; 
 &lt;li&gt;Easy to use code structure&lt;/li&gt; 
 &lt;li&gt;Flexible &amp;amp; High-Performance code&lt;/li&gt; 
 &lt;li&gt;Easy Documentation Guide&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Free Berry React version&lt;/h2&gt; 
&lt;h4&gt;Preview&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://berry-free-react-admin-template-git-v20-codedthemes.vercel.app/&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Download&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codedthemes/berry-free-react-admin-template&quot;&gt;Download from Github&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Berry Pro version&lt;/h2&gt; 
&lt;p&gt;Berry is available to purchase.&lt;/p&gt; 
&lt;h4&gt;Preview&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://berrydashboard.io&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Purchase&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://material-ui.com/store/items/berry-react-material-admin/&quot;&gt;Purchase from Material UI Store&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#technology-stack&quot;&gt;Technology Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#author&quot;&gt;Author&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#issues&quot;&gt;Issues?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#more-free-react-material-admin-templates&quot;&gt;More Products&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/codedthemes/berry-free-react-admin-template/main/#follow-us&quot;&gt;Follow us&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Clone from Github&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/codedthemes/berry-free-react-admin-template.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://codedthemes.gitbook.io/berry/&quot;&gt;Berry documentation&lt;/a&gt; helps you out in all aspects from Installation to deployment.&lt;/p&gt; 
&lt;h2&gt;Technology Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://material-ui.com/&quot;&gt;Material UI V5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Built with React Hooks API&lt;/li&gt; 
 &lt;li&gt;Redux &amp;amp; React Context API for State Management&lt;/li&gt; 
 &lt;li&gt;React Router for Navigation Routing&lt;/li&gt; 
 &lt;li&gt;Support of react-script&lt;/li&gt; 
 &lt;li&gt;Code Splitting&lt;/li&gt; 
 &lt;li&gt;CSS-in-JS where CSS is composed using JavaScript instead of defined in external files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Berry is managed by Team &lt;a href=&quot;https://codedthemes.com&quot;&gt;CodedThemes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please generate a &lt;a href=&quot;https://github.com/codedthemes/berry-free-react-admin-template/issues&quot;&gt;Github issue&lt;/a&gt; if you found a bug in any version. We are trying to be responsive to resolve the issue.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Licensed cover under &lt;a href=&quot;https://github.com/codedthemes/datta-able-bootstrap-dashboard/raw/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Berry - Nodejs version by Appseed&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appseed.us/product/react-node-js-berry-dashboard&quot;&gt;Free Nodejs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appseed.us/full-stack/react-berry-dashboard&quot;&gt;Premium Berry Nodejs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;More Free React Material Admin Templates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codedthemes.com/item/materially-free-reactjs-admin-template/&quot;&gt;Free Materially&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;More Premium React Material Admin Templates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codedthemes.com/item/materially-reactjs-admin-dashboard/&quot;&gt;Materially&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Follow us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website &lt;a href=&quot;https://berrydashboard.io&quot;&gt;https://berrydashboard.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog &lt;a href=&quot;https://blog.berrydashboard.io&quot;&gt;https://blog.berrydashboard.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CodedThemes &lt;a href=&quot;https://codedthemes.com&quot;&gt;https://codedthemes.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dribbble &lt;a href=&quot;https://dribbble.com/codedthemes&quot;&gt;https://dribbble.com/codedthemes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Facebook &lt;a href=&quot;https://www.facebook.com/codedthemes&quot;&gt;https://www.facebook.com/codedthemes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter &lt;a href=&quot;https://twitter.com/codedthemes&quot;&gt;https://twitter.com/codedthemes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
