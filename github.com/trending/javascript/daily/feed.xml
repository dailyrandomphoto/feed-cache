<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 29 May 2021 03:46:00 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>inoyna11/jd28</title>
      <link>https://github.com/inoyna11/jd28</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;请不要fork，使用按照下方的自动同步教程来使用&lt;/p&gt; 
&lt;p&gt;自动同步教程:&lt;/p&gt; 
&lt;p&gt;一:&lt;a href=&quot;https://github.com/new/import&quot;&gt;点击导入仓库&lt;/a&gt;，URL框填写https://github.com/inoyna11/jd28 Repository Name填写仓库名字，点击绿色按钮，等待导入完成(不要把仓库设为私有，会运行失败)。&lt;/p&gt; 
&lt;p&gt;二:&lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;申请PAT&lt;/a&gt;，Note下面框随意填写，把 repo和workflow 两部分勾上即可。 点击最下方的创建，生成的PAT复制下来。&lt;/p&gt; 
&lt;p&gt;三:申请完毕后，在新仓库分支中点击Settings-Secrets-New secret，name填PAT，框里面填写你第二步复制的PAT,保存即可。 接着再点击New secret，name填JD_COOKIE，框里面填写你的账号cookie，多账号换行。&lt;/p&gt; 
&lt;p&gt;四:点击仓库的Code，把上方的Star点亮，完毕&lt;/p&gt; 
&lt;p&gt;lxk0301-环境变量合集（Secrets）配置&lt;a href=&quot;https://github.com/inoyna11/jd28/raw/master/githubAction.md&quot;&gt;点击查看&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/inoyna11/jd28/raw/master/backUp/GetJdCookie2.md&quot;&gt;电脑获取cookie教程&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/inoyna11/jd28/raw/master/backUp/GetJdCookie3.md&quot;&gt;手机获取cookie教程&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>discordjs/discord.js</title>
      <link>https://github.com/discordjs/discord.js</link>
      <description>&lt;p&gt;A powerful JavaScript library for interacting with the Discord API&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;a href=&quot;https://discord.js.org&quot;&gt;&lt;img src=&quot;https://discord.js.org/static/logo.svg?sanitize=true&quot; width=&quot;546&quot; alt=&quot;discord.js&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;br&gt; 
 &lt;p&gt; &lt;a href=&quot;https://discord.gg/djs&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/222078108977594368?color=7289da&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord server&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/discord.js.svg?maxAge=3600&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/discord.js.svg?maxAge=3600&quot; alt=&quot;NPM downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/discordjs/discord.js/actions&quot;&gt;&lt;img src=&quot;https://github.com/discordjs/discord.js/workflows/Testing/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/discordjs/discord.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/david/discordjs/discord.js.svg?maxAge=3600&quot; alt=&quot;Dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/discordjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/donate-patreon-F96854.svg?sanitize=true&quot; alt=&quot;Patreon&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href=&quot;https://nodei.co/npm/discord.js/&quot;&gt;&lt;img src=&quot;https://nodei.co/npm/discord.js.png?downloads=true&amp;amp;stars=true&quot; alt=&quot;npm installnfo&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#audio-engines&quot;&gt;Audio engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#optional-packages&quot;&gt;Optional packages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#example-usage&quot;&gt;Example Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#links&quot;&gt;Links&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/discordjs/discord.js/master/#help&quot;&gt;Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;discord.js is a powerful &lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; module that allows you to easily interact with the &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;Discord API&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Object-oriented&lt;/li&gt; 
 &lt;li&gt;Predictable abstractions&lt;/li&gt; 
 &lt;li&gt;Performant&lt;/li&gt; 
 &lt;li&gt;100% coverage of the Discord API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Node.js 14.0.0 or newer is required.&lt;/strong&gt;&lt;br&gt; Ignore any warnings about unmet peer dependencies, as they’re all optional.&lt;/p&gt; 
&lt;p&gt;Without voice support: &lt;code&gt;npm install discord.js&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/@discordjs/opus&quot;&gt;@discordjs/opus&lt;/a&gt;): &lt;code&gt;npm install discord.js @discordjs/opus&lt;/code&gt;&lt;br&gt; With voice support (&lt;a href=&quot;https://www.npmjs.com/package/opusscript&quot;&gt;opusscript&lt;/a&gt;): &lt;code&gt;npm install discord.js opusscript&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio engines&lt;/h3&gt; 
&lt;p&gt;The preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus. Using opusscript is only recommended for development environments where @discordjs/opus is tough to get working. For production bots, using @discordjs/opus should be considered a necessity, especially if they’re going to be running on multiple servers.&lt;/p&gt; 
&lt;h3&gt;Optional packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/zlib-sync&quot;&gt;zlib-sync&lt;/a&gt; for WebSocket data compression and inflation (&lt;code&gt;npm install zlib-sync&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discord/erlpack&quot;&gt;erlpack&lt;/a&gt; for significantly faster WebSocket data (de)serialisation (&lt;code&gt;npm install discord/erlpack&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;One of the following packages can be installed for faster voice packet encryption and decryption: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/sodium&quot;&gt;sodium&lt;/a&gt; (&lt;code&gt;npm install sodium&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/libsodium-wrappers&quot;&gt;libsodium.js&lt;/a&gt; (&lt;code&gt;npm install libsodium-wrappers&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt; for a much faster WebSocket connection (&lt;code&gt;npm install bufferutil&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt; in combination with &lt;code&gt;bufferutil&lt;/code&gt; for much faster WebSocket processing (&lt;code&gt;npm install utf-8-validate&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const { Client, Intents } = require(&#39;discord.js&#39;);
const client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES] });

client.on(&#39;ready&#39;, () =&amp;gt; {
  console.log(`Logged in as ${client.user.tag}!`);
});

client.on(&#39;message&#39;, msg =&amp;gt; {
  if (msg.content === &#39;ping&#39;) {
    msg.channel.send(&#39;pong&#39;);
  }
});

client.login(&#39;token&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/&quot;&gt;Website&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/website&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.js.org/#/docs/main/master/general/welcome&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordjs.guide/&quot;&gt;Guide&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/guide&quot;&gt;source&lt;/a&gt;) - this is still for stable&lt;br&gt; See also the &lt;a href=&quot;https://discordjs.guide/additional-info/changes-in-v12.html&quot;&gt;Update Guide&lt;/a&gt;, including updated and removed items in the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/djs&quot;&gt;Discord.js Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Discord API Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/discordjs/discord.js&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord.js&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discordapi.com/unofficial/libs.html&quot;&gt;Related libraries&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/discord-rpc&quot;&gt;RPC&lt;/a&gt; (&lt;a href=&quot;https://github.com/discordjs/RPC&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before creating an issue, please ensure that it hasn’t already been reported/suggested, and double-check the &lt;a href=&quot;https://discord.js.org/#/docs&quot;&gt;documentation&lt;/a&gt;.&lt;br&gt; See &lt;a href=&quot;https://github.com/discordjs/discord.js/raw/master/.github/CONTRIBUTING.md&quot;&gt;the contribution guide&lt;/a&gt; if you’d like to submit a PR.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you don’t understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please don’t hesitate to join our official &lt;a href=&quot;https://discord.gg/djs&quot;&gt;Discord.js Server&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub issues&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true&quot; alt=&quot;GitHub pull-requests&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub watchers&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub forks&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&quot; alt=&quot;GitHub stars&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to ‘stick’.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors Jen Looper, Chris Noring, Christopher Harrison, Jasmine Greenaway, Yohan Lasorsa, Floor Drees, and sketchnote artist Tomomi Imura!&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md&quot;&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. If you would like to create your own lessons, we have also included a &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/lesson-template/README.md&quot;&gt;lesson template&lt;/a&gt;. We’d love your feedback &lt;a href=&quot;https://forms.microsoft.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR2humCsRZhxNuI79cm6n0hRUQzRVVU9VVlU5UlFLWTRLWlkyQUxORTg5WS4u&quot;&gt;via this form&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend &lt;a href=&quot;https://docs.microsoft.com/users/jenlooper-2911/collections/jg2gax8pzd6o81?WT.mc_id=academic-13441-cxa&quot;&gt;Microsoft Learn&lt;/a&gt; and by watching the videos mentioned below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtube.com/watch?v=R1wrdtmBSII&quot; title=&quot;Promo video&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/screenshot.png&quot; alt=&quot;Promo video&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a typing game, a virtual terrarium, a ‘green’ browser extension, a ‘space invaders’ type game, and a business-type banking app, and will have learned the basics of JavaScript, HTML, and CSS along with the modern toolchain of today’s web developer.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎓 You can take the first few lessons in this curriculum as a &lt;a href=&quot;https://docs.microsoft.com/learn/paths/web-development-101?WT.mc_id=academic-13441-cxa&quot;&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with video from the “&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript?WT.mc_id=academic-13441-cxa&quot;&gt;Beginners Series to: JavaScript&lt;/a&gt;” collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks so as to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: “&lt;a href=&quot;https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs?WT.mc_id=academic-13441-cxa&quot;&gt;Beginner Series to: Node.js&lt;/a&gt;”.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/TRANSLATIONS.md&quot;&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained &lt;a href=&quot;https://nice-beach-0fe9e9d0f.azurestaticapps.net/&quot;&gt;in this app&lt;/a&gt;, for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder. They are gradually being localized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Lessons&lt;/h2&gt; 
&lt;p&gt;| | Project Name | Concepts Taught | Learning Objectives | Linked Lesson | Author | | :—: | :——————————————————: | :––––––––––––––––––––––––––––––––––: | ———————————————————————————————————————————– | :––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––: | :———————: | | 01 | Getting Started | Introduction to Programming and Tools of the Trade | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md&quot;&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt; | Jasmine | | 02 | Getting Started | Basics of GitHub, includes working with a team | How to use GitHub in your project, how to collaborate with others on a code base | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md&quot;&gt;Intro to GitHub&lt;/a&gt; | Floor | | 03 | Getting Started | Accessibility | Learn the basics of web accessibility | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md&quot;&gt;Accessibility Fundamentals&lt;/a&gt; | Christopher | | 04 | JS Basics | JavaScript Data Types | The basics of JavaScript data types | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md&quot;&gt;Data Types&lt;/a&gt; | Jasmine | | 05 | JS Basics | Functions and Methods | Learn about functions and methods to manage an application’s logic flow | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md&quot;&gt;Functions and Methods&lt;/a&gt; | Jasmine and Christopher | | 06 | JS Basics | Making Decisions with JS | Learn how to create conditions in your code using decision-making methods | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md&quot;&gt;Making Decisions&lt;/a&gt; | Jasmine | | 07 | JS Basics | Arrays and Loops | Work with data using arrays and loops in JavaScript | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md&quot;&gt;Arrays and Loops&lt;/a&gt; | Jasmine | | 08 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt; | HTML in Practice | Build the HTML to create an online terrarium, focusing on building a layout | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md&quot;&gt;Introduction to HTML&lt;/a&gt; | Jen | | 09 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md&quot;&gt;Terrarium&lt;/a&gt; | CSS in Practice | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md&quot;&gt;Introduction to CSS&lt;/a&gt; | Jen | | 10 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution&quot;&gt;Terrarium&lt;/a&gt; | JavaScript Closures, DOM manipulation | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md&quot;&gt;JavaScript Closures, DOM manipulation&lt;/a&gt; | Jen | | 11 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution&quot;&gt;Typing Game&lt;/a&gt; | Build a Typing Game | Learn how to use keyboard events to drive the logic of your JavaScript app | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md&quot;&gt;Event-Driven Programming&lt;/a&gt; | Christopher | | 12 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt; | Working with Browsers | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md&quot;&gt;About Browsers&lt;/a&gt; | Jen | | 13 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt; | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md&quot;&gt;APIs, Forms, and Local Storage&lt;/a&gt; | Jen | | 14 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution&quot;&gt;Green Browser Extension&lt;/a&gt; | Background processes in the browser, web performance | Use the browser’s background processes to manage the extension’s icon; learn about web performance and some optimizations to make | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md&quot;&gt;Background Tasks and Performance&lt;/a&gt; | Jen | | 15 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | More Advanced Game Development with JavaScript | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md&quot;&gt;Introduction to Advanced Game Development&lt;/a&gt; | Chris | | 16 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Drawing to canvas | Learn about the Canvas API, used to draw elements to a screen | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md&quot;&gt;Drawing to Canvas&lt;/a&gt; | Chris | | 17 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Moving elements around the screen | Discover how elements can gain motion using the cartesian coordinates and the Canvas API | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md&quot;&gt;Moving Elements Around&lt;/a&gt; | Chris | | 18 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Collision detection | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md&quot;&gt;Collision Detection&lt;/a&gt; | Chris | | 19 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Keeping score | Perform math calculations based on the game’s status and performance | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md&quot;&gt;Keeping Score&lt;/a&gt; | Chris | | 20 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution&quot;&gt;Space Game&lt;/a&gt; | Ending and restarting the game | Learn about ending and restarting the game, including cleaning up assets and resetting variable values | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md&quot;&gt;The Ending Condition&lt;/a&gt; | Chris | | 21 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | HTML Templates and Routes in a Web App | Learn how to create the scaffold of a multipage website’s architecture using routing and HTML templates | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md&quot;&gt;HTML Templates and Routes&lt;/a&gt; | Yohan | | 22 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | Build a Login and Registration Form | Learn about building forms and handing validation routines | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md&quot;&gt;Forms&lt;/a&gt; | Yohan | | 23 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | Methods of Fetching and Using Data | How data flows in and out of your app, how to fetch it, store it, and dispose of it | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md&quot;&gt;Data&lt;/a&gt; | Yohan | | 24 | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution&quot;&gt;Banking App&lt;/a&gt; | Concepts of State Management | Learn how your app retains state and how to manage it programmatically | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md&quot;&gt;State Management&lt;/a&gt; | Yohan |&lt;/p&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href=&quot;https://docsify.js.org/#/&quot;&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href=&quot;https://docsify.js.org/#/quickstart&quot;&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ascoders/weekly</title>
      <link>https://github.com/ascoders/weekly</link>
      <description>&lt;p&gt;前端精读周刊。帮你理解最前沿、实用的技术。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;前端精读&lt;/h1&gt; 
&lt;a href=&quot;https://travis-ci.org/ascoders/weekly&quot;&gt; &lt;img src=&quot;https://travis-ci.org/ascoders/weekly.svg?branch=v2&quot; alt=&quot;CircleCI Status&quot;&gt; &lt;/a&gt; 
&lt;p&gt;前端界的好文精读，每周更新！&lt;/p&gt; 
&lt;p&gt;最新精读：&lt;a href=&quot;./前沿技术/196.精读《前端职业规划 - 2021 年》.md&quot;&gt;196.精读《前端职业规划 - 2021 年》&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;素材来源：&lt;a href=&quot;https://github.com/ascoders/weekly/issues/2&quot;&gt;周刊参考池&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;现已涵盖：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;结合大厂工作经验解读的 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF&quot;&gt;前沿技术&lt;/a&gt;，&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB&quot;&gt;源码解读&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;逐渐加入一些后端技术解读。&lt;/li&gt; 
 &lt;li&gt;一些 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E5%95%86%E4%B8%9A%E6%80%9D%E8%80%83&quot;&gt;商业思考&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;已完成 &lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86&quot;&gt;编译原理&lt;/a&gt;、&lt;a href=&quot;https://raw.githubusercontent.com/ascoders/weekly/master/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F&quot;&gt;设计模式&lt;/a&gt; 两大基础模块。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前沿技术&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/1.精读《js 模块化发展》.md&quot;&gt;1.精读《js 模块化发展》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/2.精读《模态框的最佳实践》.md&quot;&gt;2.精读《模态框的最佳实践》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/3.精读《前后端渲染之争》.md&quot;&gt;3.精读《前后端渲染之争》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/4.精读《AsyncAwait 优越之处》.md&quot;&gt;4.精读《AsyncAwait 优越之处》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/5.精读《民工叔单页数据流方案》.md&quot;&gt;5.精读《民工叔单页数据流方案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/6.精读《JavaScript 错误堆栈处理》.md&quot;&gt;6.精读《JavaScript 错误堆栈处理》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/7.精读《请停止 css-in-js 的行为》.md&quot;&gt;7.精读《请停止 css-in-js 的行为》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/8.精读《入坑 React 前没有人会告诉你的事》.md&quot;&gt;8.精读《入坑 React 前没有人会告诉你的事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/9.精读《Immutable 结构共享》.md&quot;&gt;9.精读《Immutable 结构共享》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/10.精读《Web Components 的困境》.md&quot;&gt;10.精读《Web Components 的困境》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/11.精读《前端调试技巧》.md&quot;&gt;11.精读《前端调试技巧》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/12.精读《React 高阶组件》.md&quot;&gt;12.精读《React 高阶组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/13.精读《This 带来的困惑》.md&quot;&gt;13.精读《This 带来的困惑》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/14.精读《架构设计之 DCI》.md&quot;&gt;14.精读《架构设计之 DCI》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/15.精读《TC39 与 ECMAScript 提案》.md&quot;&gt;15.精读《TC39 与 ECMAScript 提案》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/16.精读《CSS Animations vs Web Animations API》.md&quot;&gt;16.精读《CSS Animations vs Web Animations API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/17.精读《如何安全地使用 React context》.md&quot;&gt;17.精读《如何安全地使用 React context》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/18.精读《设计完美的日期选择器》.md&quot;&gt;18.精读《设计完美的日期选择器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/19.精读《最佳前端面试题》及面试官技巧.md&quot;&gt;19.精读《最佳前端面试题》及面试官技巧&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/20.精读《Nestjs》文档.md&quot;&gt;20.精读《Nestjs》文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/21.精读《Web fonts: when you need them, when you don’t》.md&quot;&gt;21.精读《Web fonts: when you need them, when you don’t》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/22.精读《V8 引擎特性带来的的 JS 性能变化》.md&quot;&gt;22.精读《V8 引擎特性带来的的 JS 性能变化》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/23.精读《API 设计原则》.md&quot;&gt;23.精读《API 设计原则》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/24.精读《现代 JavaScript 概览》.md&quot;&gt;24.精读《现代 JavaScript 概览》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/25.精读《null &gt;= 0?》.md&quot;&gt;25.精读《null &amp;gt;= 0?》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/26.精读《加密媒体扩展》.md&quot;&gt;26.精读《加密媒体扩展》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/27.精读《css-in-js 杀鸡用牛刀》.md&quot;&gt;27.精读《css-in-js 杀鸡用牛刀》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/28.精读《2017 前端性能优化备忘录》.md&quot;&gt;28.精读《2017 前端性能优化备忘录》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/29.精读《JS 中的内存管理》.md&quot;&gt;29.精读《JS 中的内存管理》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/30.精读《Javascript 事件循环与异步》.md&quot;&gt;30.精读《Javascript 事件循环与异步》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/31.精读《我不再使用高阶组件》.md&quot;&gt;31.精读《我不再使用高阶组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/32.精读《React Router4.0 进阶概念》.md&quot;&gt;32.精读《React Router4.0 进阶概念》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/33.精读《30 行 js 代码创建神经网络》.md&quot;&gt;33.精读《30 行 js 代码创建神经网络》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/34.精读《React 代码整洁之道》.md&quot;&gt;34.精读《React 代码整洁之道》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/35.精读《dob - 框架实现》.md&quot;&gt;35.精读《dob - 框架实现》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/36.精读《When You “Git” in Trouble- a Version Control Story》.md&quot;&gt;36.精读《When You “Git” in Trouble- a Version Control Story》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/37.精读《how we position and what we compare》.md&quot;&gt;37.精读《how we position and what we compare》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/38.精读《dob - 框架使用》.md&quot;&gt;38.精读《dob - 框架使用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/39.精读《全链路体验浏览器挖矿》.md&quot;&gt;39.精读《全链路体验浏览器挖矿》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/40.精读《初探 Reason 与 GraphQL》.md&quot;&gt;40.精读《初探 Reason 与 GraphQL》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/41.精读《Ant Design 3.0 背后的故事》.md&quot;&gt;41.精读《Ant Design 3.0 背后的故事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/42.精读《前端数据流哲学》.md&quot;&gt;42.精读《前端数据流哲学》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/43.精读《增强现实与可视化》.md&quot;&gt;43.精读《增强现实与可视化》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/44.精读《Rekit Studio》.md&quot;&gt;44.精读《Rekit Studio》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/45.精读《React&#39;s new Context API》.md&quot;&gt;45.精读《React’s new Context API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/46.精读《react-rxjs》.md&quot;&gt;46.精读《react-rxjs》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/47.精读《webpack4.0 升级指南》.md&quot;&gt;47.精读《webpack4.0 升级指南》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/49.精读《Compilers are the New Frameworks》.md&quot;&gt;49.精读《Compilers are the New Frameworks》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/50.精读《快速上手构建 ARKit 应用》.md&quot;&gt;50.精读《快速上手构建 ARKit 应用》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/51.精读《Elements of Web Dev》.md&quot;&gt;51.精读《Elements of Web Dev》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/52.精读《图解 ES 模块》.md&quot;&gt;52.精读《图解 ES 模块》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/53.精读《插件化思维》.md&quot;&gt;53.精读《插件化思维》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/54.精读《在浏览器运行 serverRender》.md&quot;&gt;54.精读《在浏览器运行 serverRender》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/55.精读《async await 是把双刃剑》.md&quot;&gt;55.精读《async await 是把双刃剑》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/56.精读《重新思考 Redux》.md&quot;&gt;56.精读《重新思考 Redux》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/57.精读《现代 js 框架存在的根本原因》.md&quot;&gt;57.精读《现代 js 框架存在的根本原因》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/58.精读《Typescript2.0 - 2.9》.md&quot;&gt;58.精读《Typescript2.0 - 2.9》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/59.精读《如何利用 Nodejs 监听文件夹》.md&quot;&gt;59.精读《如何利用 Nodejs 监听文件夹》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/60.精读《如何在 nodejs 使用环境变量》.md&quot;&gt;60.精读《如何在 nodejs 使用环境变量》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/61.精读《React 八种条件渲染》.md&quot;&gt;61.精读《React 八种条件渲染》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/62.精读《JS 引擎基础之 Shapes and Inline Caches》.md&quot;&gt;62.精读《JS 引擎基础之 Shapes and Inline Caches》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/63.精读《React 的多态性》.md&quot;&gt;63.精读《React 的多态性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/68.精读《衡量用户体验》.md&quot;&gt;68.精读《衡量用户体验》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/69.精读《SQL vs Flux》.md&quot;&gt;69.精读《SQL vs Flux》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/72.精读《REST, GraphQL, Webhooks, &amp;amp; gRPC 如何选型》.md&quot;&gt;72.精读《REST, GraphQL, Webhooks, &amp;amp; gRPC 如何选型》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/74.精读《12 个评估 JS 库你需要关心的事》.md&quot;&gt;74.精读《12 个评估 JS 库你需要关心的事》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/76.精读《谈谈 Web Workers》.md&quot;&gt;76.精读《谈谈 Web Workers》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/77.精读《用 Reduce 实现 Promise 串行执行》.md&quot;&gt;77.精读《用 Reduce 实现 Promise 串行执行》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/79.精读《React Hooks》.md&quot;&gt;79.精读《React Hooks》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/80.精读《怎么用 React Hooks 造轮子》.md&quot;&gt;80.精读《怎么用 React Hooks 造轮子》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/81.精读《使用 CSS 属性选择器》.md&quot;&gt;81.精读《使用 CSS 属性选择器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/83.精读《React16 新特性》.md&quot;&gt;83.精读《React16 新特性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/84.精读《Typescript 3.2 新特性》.md&quot;&gt;84.精读《Typescript 3.2 新特性》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/86.精读《国际化布局 - Logical Properties》.md&quot;&gt;86.精读《国际化布局 - Logical Properties》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/87.精读《setState 做了什么》.md&quot;&gt;87.精读《setState 做了什么》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/88.精读《Caches API》.md&quot;&gt;88.精读《Caches API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/89.精读《如何编译前端项目与组件》.md&quot;&gt;89.精读《如何编译前端项目与组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/91.精读《正则 ES2018》.md&quot;&gt;91.精读《正则 ES2018》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/94.精读《Serverless 给前端带来了什么》.md&quot;&gt;94.精读《Serverless 给前端带来了什么》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/95.精读《Function VS Class 组件》.md&quot;&gt;95.精读《Function VS Class 组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/96.精读《useEffect 完全指南》.md&quot;&gt;96.精读《useEffect 完全指南》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/97.精读《编写有弹性的组件》.md&quot;&gt;97.精读《编写有弹性的组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/99.精读《Scheduling in React》.md&quot;&gt;99.精读《Scheduling in React》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/100.精读《V8 引擎 Lazy Parsing》.md&quot;&gt;100.精读《V8 引擎 Lazy Parsing》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/101.精读《持续集成 vs 持续交付 vs 持续部署》.md&quot;&gt;101.精读《持续集成 vs 持续交付 vs 持续部署》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/102.精读《Monorepo 的优势》.md&quot;&gt;102.精读《Monorepo 的优势》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/104.精读《Function Component 入门》.md&quot;&gt;104.精读《Function Component 入门》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/105.精读《What&#39;s new in javascript》.md&quot;&gt;105.精读《What’s new in javascript》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/107.精读《Optional chaining》.md&quot;&gt;107.精读《Optional chaining》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/109.精读《Vue3.0 Function API》.md&quot;&gt;109.精读《Vue3.0 Function API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/111.精读《前端未来展望》.md&quot;&gt;111.精读《前端未来展望》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/112.精读《源码学习》.md&quot;&gt;112.精读《源码学习》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/113.精读《Nodejs V12》.md&quot;&gt;113.精读《Nodejs V12》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/117.精读《Tableau 探索式模型》.md&quot;&gt;117.精读《Tableau 探索式模型》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/118.精读《使用 css 变量生成颜色主题》.md&quot;&gt;118.精读《使用 css 变量生成颜色主题》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/119.精读《前端深水区》.md&quot;&gt;119.精读《前端深水区》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/120.精读《React Hooks 最佳实践》.md&quot;&gt;120.精读《React Hooks 最佳实践》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/121.精读《前端与 BI》.md&quot;&gt;121.精读《前端与 BI》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/123.精读《用 Babel 创造自定义 JS 语法》.md&quot;&gt;123.精读《用 Babel 创造自定义 JS 语法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/124.精读《用 css grid 重新思考布局》.md&quot;&gt;124.精读《用 css grid 重新思考布局》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/125.精读《深度学习 - 函数式之美》.md&quot;&gt;125.精读《深度学习 - 函数式之美》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/126.精读《Nuxtjs》.md&quot;&gt;126.精读《Nuxtjs》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/127.精读《React Conf 2019 - Day1》.md&quot;&gt;127.精读《React Conf 2019 - Day1》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/129.精读《React Conf 2019 - Day2》.md&quot;&gt;129.精读《React Conf 2019 - Day2》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/132.精读《正交的 React 组件》.md&quot;&gt;132.精读《正交的 React 组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/133.精读《寻找框架设计的平衡点》.md&quot;&gt;133.精读《寻找框架设计的平衡点》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/134.精读《我在阿里数据中台大前端》.md&quot;&gt;134.精读《我在阿里数据中台大前端》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/138.精读《精通 console.log》.md&quot;&gt;138.精读《精通 console.log》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/139.精读《手写 JSON Parser》.md&quot;&gt;139.精读《手写 JSON Parser》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/140.精读《结合 React 使用原生 Drag Drop API》.md&quot;&gt;140.精读《结合 React 使用原生 Drag Drop API》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/141.精读《useRef 与 createRef 的区别》.md&quot;&gt;141.精读《useRef 与 createRef 的区别》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/142.精读《如何做好 CodeReview》.md&quot;&gt;142.精读《如何做好 CodeReview》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/143.精读《Suspense 改变开发方式》.md&quot;&gt;143.精读《Suspense 改变开发方式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/144.精读《Webpack5 新特性 - 模块联邦》.md&quot;&gt;144.精读《Webpack5 新特性 - 模块联邦》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/145.精读《React Router v6》.md&quot;&gt;145.精读《React Router v6》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/146.精读《React Hooks 数据流》.md&quot;&gt;146.精读《React Hooks 数据流》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/147. 精读《@types react 值得注意的 TS 技巧》.md&quot;&gt;147. 精读《@types react 值得注意的 TS 技巧》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/148. 精读《React Error Boundaries》.md&quot;&gt;148. 精读《React Error Boundaries》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/149. 精读《React 性能调试》.md&quot;&gt;149. 精读《React 性能调试》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/150. 精读《Deno 1.0 你需要了解的》.md&quot;&gt;150. 精读《Deno 1.0 你需要了解的》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/152. 精读《recoil》.md&quot;&gt;152. 精读《recoil》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/153. 精读《snowpack》.md&quot;&gt;153. 精读《snowpack》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/154. 精读《用 React 做按需渲染》.md&quot;&gt;154. 精读《用 React 做按需渲染》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/157. 精读《如何比较 Object 对象》.md&quot;&gt;157. 精读《如何比较 Object 对象》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/158. 精读《Typescript 4》.md&quot;&gt;158. 精读《Typescript 4》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/159. 精读《对低代码搭建的理解》.md&quot;&gt;159. 精读《对低代码搭建的理解》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/160. 精读《函数缓存》.md&quot;&gt;160. 精读《函数缓存》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/161.精读《可视化搭建思考 - 富文本搭建》.md&quot;&gt;161.精读《可视化搭建思考 - 富文本搭建》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/162.精读《Tasks, microtasks, queues and schedules》.md&quot;&gt;162.精读《Tasks, microtasks, queues and schedules》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/163.精读《Spring 概念》.md&quot;&gt;163.精读《Spring 概念》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/164.精读《数据搭建引擎 bi-designer API-设计器》.md&quot;&gt;164.精读《数据搭建引擎 bi-designer API-设计器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/165.精读《数据搭建引擎 bi-designer API-组件》.md&quot;&gt;165.精读《数据搭建引擎 bi-designer API-组件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/166.精读《BI 搭建 - 筛选条件》.md&quot;&gt;166.精读《BI 搭建 - 筛选条件》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/190.精读《DOM diff 原理详解》.md&quot;&gt;190.精读《DOM diff 原理详解》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/191.精读《高性能表格》.md&quot;&gt;191.精读《高性能表格》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/192.精读《DOM diff 最长上升子序列》.md&quot;&gt;192.精读《DOM diff 最长上升子序列》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/193.精读《React Server Component》.md&quot;&gt;193.精读《React Server Component》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/194.精读《算法基础数据结构》.md&quot;&gt;194.精读《算法基础数据结构》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/195.精读《新一代前端构建工具对比》.md&quot;&gt;195.精读《新一代前端构建工具对比》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./前沿技术/196.精读《前端职业规划 - 2021 年》.md&quot;&gt;196.精读《前端职业规划 - 2021 年》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;设计模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/167.精读《设计模式 - Abstract Factory 抽象工厂》.md&quot;&gt;167.精读《设计模式 - Abstract Factory 抽象工厂》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/168.精读《设计模式 - Builder 生成器》.md&quot;&gt;168.精读《设计模式 - Builder 生成器》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/169.精读《设计模式 - Factory Method 工厂方法》.md&quot;&gt;169.精读《设计模式 - Factory Method 工厂方法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/170.精读《设计模式 - Prototype 原型模式》.md&quot;&gt;170.精读《设计模式 - Prototype 原型模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/171.精读《设计模式 - Singleton 单例模式》.md&quot;&gt;171.精读《设计模式 - Singleton 单例模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/172.精读《设计模式 - Adapter 适配器模式》.md&quot;&gt;172.精读《设计模式 - Adapter 适配器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/173.精读《设计模式 - Bridge 桥接模式》.md&quot;&gt;173.精读《设计模式 - Bridge 桥接模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/174.精读《设计模式 - Composite 组合模式》.md&quot;&gt;174.精读《设计模式 - Composite 组合模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/175.精读《设计模式 - Decorator 装饰器模式》.md&quot;&gt;175.精读《设计模式 - Decorator 装饰器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/176.精读《设计模式 - Facade 外观模式》.md&quot;&gt;176.精读《设计模式 - Facade 外观模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/177.精读《设计模式 - Flyweight 享元模式》.md&quot;&gt;177.精读《设计模式 - Flyweight 享元模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/178.精读《设计模式 - Proxy 代理模式》.md&quot;&gt;178.精读《设计模式 - Proxy 代理模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/179.精读《设计模式 - Chain of Responsibility 职责链模式》.md&quot;&gt;179.精读《设计模式 - Chain of Responsibility 职责链模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/180.精读《设计模式 - Command 命令模式》.md&quot;&gt;180.精读《设计模式 - Command 命令模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/181.精读《设计模式 - Interpreter 解释器模式》.md&quot;&gt;181.精读《设计模式 - Interpreter 解释器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/182.精读《设计模式 - Iterator 迭代器模式》.md&quot;&gt;182.精读《设计模式 - Iterator 迭代器模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/183.精读《设计模式 - Mediator 中介者模式》.md&quot;&gt;183.精读《设计模式 - Mediator 中介者模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/184.精读《设计模式 - Memoto 备忘录模式》.md&quot;&gt;184.精读《设计模式 - Memoto 备忘录模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/185.精读《设计模式 - Observer 观察者模式》.md&quot;&gt;185.精读《设计模式 - Observer 观察者模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/186.精读《设计模式 - State 状态模式》.md&quot;&gt;186.精读《设计模式 - State 状态模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/187.精读《设计模式 - Strategy 策略模式》.md&quot;&gt;187.精读《设计模式 - Strategy 策略模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/188.精读《设计模式 - Template Method 模版模式》.md&quot;&gt;188.精读《设计模式 - Template Method 模版模式》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./设计模式/189.精读《设计模式 - Visitor 访问者模式》.md&quot;&gt;189.精读《设计模式 - Visitor 访问者模式》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;编译原理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/64.精读《手写 SQL 编译器 - 词法分析》.md&quot;&gt;64.精读《手写 SQL 编译器 - 词法分析》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/65.精读《手写 SQL 编译器 - 文法介绍》.md&quot;&gt;65.精读《手写 SQL 编译器 - 文法介绍》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/66.精读《手写 SQL 编译器 - 语法分析》.md&quot;&gt;66.精读《手写 SQL 编译器 - 语法分析》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/67.精读《手写 SQL 编译器 - 回溯》.md&quot;&gt;67.精读《手写 SQL 编译器 - 回溯》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/70.精读《手写 SQL 编译器 - 语法树》.md&quot;&gt;70.精读《手写 SQL 编译器 - 语法树》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/71.精读《手写 SQL 编译器 - 错误提示》.md&quot;&gt;71.精读《手写 SQL 编译器 - 错误提示》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/78.精读《手写 SQL 编译器 - 性能优化之缓存》.md&quot;&gt;78.精读《手写 SQL 编译器 - 性能优化之缓存》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./编译原理/85.精读《手写 SQL 编译器 - 智能提示》.md&quot;&gt;85.精读《手写 SQL 编译器 - 智能提示》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;源码解读&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/48.精读《Immer.js》源码.md&quot;&gt;48.精读《Immer.js》源码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/73.精读《sqorn 源码》.md&quot;&gt;73.精读《sqorn 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/75.精读《Epitath 源码 - renderProps 新用法》.md&quot;&gt;75.精读《Epitath 源码 - renderProps 新用法》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/82.精读《Htm - Hyperscript 源码》.md&quot;&gt;82.精读《Htm - Hyperscript 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/92.精读《React PowerPlug 源码》.md&quot;&gt;92.精读《React PowerPlug 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/93.精读《syntax-parser 源码》.md&quot;&gt;93.精读《syntax-parser 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/98.精读《react-easy-state 源码》.md&quot;&gt;98.精读《react-easy-state 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/110.精读《Inject Instance 源码》.md&quot;&gt;110.精读《Inject Instance 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/122.精读《robot 源码 - 有限状态机》.md&quot;&gt;122.精读《robot 源码 - 有限状态机》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/128.精读《Hooks 取数 - swr 源码》.md&quot;&gt;128.精读《Hooks 取数 - swr 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/130.精读《unstated 与 unstated-next 源码》.md&quot;&gt;130.精读《unstated 与 unstated-next 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/151. 精读《@umijs use-request》源码.md&quot;&gt;151. 精读《@umijs use-request》源码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/155. 精读《use-what-changed 源码》.md&quot;&gt;155. 精读《use-what-changed 源码》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./源码解读/156. 精读《react-intersection-observer 源码》.md&quot;&gt;156. 精读《react-intersection-observer 源码》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;商业思考&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/90.精读《极客公园 2019》.md&quot;&gt;90.精读《极客公园 2019》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/103.精读《为什么专家不再关心技术细节》.md&quot;&gt;103.精读《为什么专家不再关心技术细节》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/106.精读《数据之上·智慧之光 - 2018》.md&quot;&gt;106.精读《数据之上·智慧之光 - 2018》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/108.精读《智能商业》.md&quot;&gt;108.精读《智能商业》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/114.精读《谁在世界中心》.md&quot;&gt;114.精读《谁在世界中心》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/115.精读《Tableau 入门》.md&quot;&gt;115.精读《Tableau 入门》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/116.精读《刷新》.md&quot;&gt;116.精读《刷新》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/131.精读《从 0 到 1》.md&quot;&gt;131.精读《从 0 到 1》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/135.精读《极客公园 IFX - 上》.md&quot;&gt;135.精读《极客公园 IFX - 上》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/136.精读《极客公园 IFX - 下》.md&quot;&gt;136.精读《极客公园 IFX - 下》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;./商业思考/137.精读《当我在分享的时候，我在做什么？》.md&quot;&gt;137.精读《当我在分享的时候，我在做什么？》&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;关注前端精读微信公众号&lt;/h2&gt; 
&lt;img width=&quot;200&quot; src=&quot;https://img.alicdn.com/tfs/TB165W0MCzqK1RjSZFLXXcn2XXa-258-258.jpg&quot;&gt;</description>
    </item>
    
    <item>
      <title>AMAI-GmbH/AI-Expert-Roadmap</title>
      <link>https://github.com/AMAI-GmbH/AI-Expert-Roadmap</link>
      <description>&lt;p&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt; &lt;img src=&quot;https://uploads-ssl.webflow.com/58e6a2b25c28230d367487ad/5c32232ecb585fcc5c4645e1_icon_machine-learning.svg?sanitize=true&quot; alt=&quot;Developer Roadmap&quot; width=&quot;96&quot; height=&quot;96&quot;&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;i.am.ai&lt;br&gt;AI Expert Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;Roadmap to becoming an Artificial Intelligence Expert in 2021&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/home?status=https://i.am.ai/roadmap Roadmap to becoming an Artificial Intelligence Expert in 2021&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tweet-blue.svg?logo=twitter&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://i.am.ai/roadmap&amp;amp;title=&amp;amp;summary=Roadmap to becoming an Artificial Intelligence Expert in 2021&amp;amp;source=&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/post-blue.svg?logo=linkedin&amp;amp;logoColor=white&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Roadmap-2021-yellowgreen.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Badge&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://img.shields.io/badge/Author-AMAI GmbH-blue.svg&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT/&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;MIT License&quot; src=&quot;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&quot; style=&quot;display: inherit;&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a data scientist, machine learning or an ai expert. We made these charts for our new employees to make them AI Experts but we wanted to share them here to help the community.&lt;/p&gt; 
&lt;p&gt;If you are interested to become an AI EXPERT at &lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Become+Expert&quot;&gt;AMAI&lt;/a&gt; in Germany, or you want to &lt;a href=&quot;https://am.ai?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Hire+Expert&quot;&gt;hire an AI Expert&lt;/a&gt;, please say &lt;a href=&quot;mailto:hi@am.ai&quot;&gt;hi@am.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Note&lt;/h2&gt; 
&lt;p&gt;👉 An &lt;strong&gt;interactive version with links to follow&lt;/strong&gt; about each bullet of the list can be found at &lt;a href=&quot;https://i.am.ai/roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Interactive&quot;&gt;i.am.ai/roadmap&lt;/a&gt; 👈&lt;/p&gt; 
&lt;p&gt;To receive updates &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/stargazers&quot;&gt;star :star:&lt;/a&gt; and watch :eyes: the &lt;a href=&quot;https://github.com/AMAI-GmbH/AI-Expert-Roadmap/&quot;&gt;GitHub Repo&lt;/a&gt; to get notified, when we add new content to stay on the top of the most recent research.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#introduction?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Introduction&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/intro.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Fundamentals&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#fundamentals?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+Fundamentals&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/fundamentals.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Science Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-science-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataScience&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/datascience.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Machine Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#machine-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+MachineLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/machine_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Deep Learning Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#deep-learning-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DeepLearning&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/deep_learning.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+DataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Big Data Engineer Roadmap&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://i.am.ai/roadmap#big-data-engineer-roadmap?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+BigDataEngineer&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/big_data_engineer.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🚦 Wrap Up&lt;/h2&gt; 
&lt;p&gt;If you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, we will continue to improve this, so you might want to watch/star this repository to revisit.&lt;/p&gt; 
&lt;h2&gt;🙌 Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/contributing.md&quot;&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open pull request with improvements&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
 &lt;li&gt;Reach out with any feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported By&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/company/amai-gmbh/?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap+SupportedBy&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/amai.svg?sanitize=true&quot; style=&quot;display: inherit;max-width: 150px;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://digitalhub-ai.de?utm_source=GitHub&amp;amp;utm_medium=Referral&amp;amp;utm_campaign=AI+Expert+Roadmap&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;AMAI GmbH&quot; src=&quot;https://raw.githubusercontent.com/AMAI-GmbH/AI-Expert-Roadmap/main/images/logos/de-hub.svg?sanitize=true&quot; style=&quot;display: inherit; max-width: 150px;&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kenwheeler/slick</title>
      <link>https://github.com/kenwheeler/slick</link>
      <description>&lt;p&gt;the last carousel you&#39;ll ever need&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;slick&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;the last carousel you’ll ever need&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Demo&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;http://kenwheeler.github.io/slick/&quot;&gt;http://kenwheeler.github.io/slick&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;CDN&lt;/h4&gt; 
&lt;p&gt;To start working with Slick right away, there’s a couple of CDN choices availabile to serve the files as close, and fast as possible to your users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://cdnjs.com/libraries/slick-carousel&lt;/li&gt; 
 &lt;li&gt;https://www.jsdelivr.com/projects/jquery.slick&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Example using jsDelivr&lt;/h5&gt; 
&lt;p&gt;Just add a link to the css file in your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Add the slick-theme.css if you want default styling --&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css&quot;/&amp;gt;
&amp;lt;!-- Add the slick-theme.css if you want default styling --&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, before your closing &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag add:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Package Managers&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Bower
bower install --save slick-carousel

# NPM
npm install slick-carousel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Contributing&lt;/h4&gt; 
&lt;p&gt;PLEASE review CONTRIBUTING.markdown prior to requesting a feature, filing a pull request or filing an issue.&lt;/p&gt; 
&lt;h3&gt;Data Attribute Settings&lt;/h3&gt; 
&lt;p&gt;In slick 1.5 you can now add settings using the data-slick attribute. You still need to call $(element).slick() to initialize slick on the element.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div data-slick=&#39;{&quot;slidesToShow&quot;: 4, &quot;slidesToScroll&quot;: 4}&#39;&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;h3&amp;gt;1&amp;lt;/h3&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;h3&amp;gt;2&amp;lt;/h3&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;h3&amp;gt;3&amp;lt;/h3&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;h3&amp;gt;4&amp;lt;/h3&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;h3&amp;gt;5&amp;lt;/h3&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;h3&amp;gt;6&amp;lt;/h3&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Settings&lt;/h3&gt; 
&lt;p&gt;Option | Type | Default | Description —— | –– | —–– | ———– accessibility | boolean | true | Enables tabbing and arrow key navigation. Unless &lt;code&gt;autoplay: true&lt;/code&gt;, sets browser focus to current slide (or first of current slide set, if multiple &lt;code&gt;slidesToShow&lt;/code&gt;) after slide change. For full a11y compliance enable focusOnChange in addition to this. adaptiveHeight | boolean | false | Adapts slider height to the current slide appendArrows | string | $(element) | Change where the navigation arrows are attached (Selector, htmlString, Array, Element, jQuery object) appendDots | string | $(element) | Change where the navigation dots are attached (Selector, htmlString, Array, Element, jQuery object) arrows | boolean | true | Enable Next/Prev arrows asNavFor | string | $(element) | Enables syncing of multiple sliders autoplay | boolean | false | Enables auto play of slides autoplaySpeed | int | 3000 | Auto play change interval centerMode | boolean | false | Enables centered view with partial prev/next slides. Use with odd numbered slidesToShow counts. centerPadding | string | ‘50px’ | Side padding when in center mode. (px or %) cssEase | string | ‘ease’ | CSS3 easing customPaging | function | n/a | Custom paging templates. See source for use example. dots | boolean | false | Current slide indicator dots dotsClass | string | ‘slick-dots’ | Class for slide indicator dots container draggable | boolean | true | Enables desktop dragging easing | string | ‘linear’ | animate() fallback easing edgeFriction | integer | 0.15 | Resistance when swiping edges of non-infinite carousels fade | boolean | false | Enables fade focusOnSelect | boolean | false | Enable focus on selected element (click) focusOnChange | boolean | false | Puts focus on slide after change infinite | boolean | true | Infinite looping initialSlide | integer | 0 | Slide to start on lazyLoad | string | ‘ondemand’ | Accepts ‘ondemand’ or ‘progressive’ for lazy load technique. ‘ondemand’ will load the image as soon as you slide to it, ‘progressive’ loads one image after the other when the page loads. mobileFirst | boolean | false | Responsive settings use mobile first calculation nextArrow | string (html | jQuery selector) | object (DOM node | jQuery object) | &lt;code&gt;&amp;lt;button type=&quot;button&quot; class=&quot;slick-next&quot;&amp;gt;Next&amp;lt;/button&amp;gt;&lt;/code&gt; | Allows you to select a node or customize the HTML for the “Next” arrow. pauseOnDotsHover | boolean | false | Pauses autoplay when a dot is hovered pauseOnFocus | boolean | true | Pauses autoplay when slider is focussed pauseOnHover | boolean | true | Pauses autoplay on hover prevArrow | string (html | jQuery selector) | object (DOM node | jQuery object) | &lt;code&gt;&amp;lt;button type=&quot;button&quot; class=&quot;slick-prev&quot;&amp;gt;Previous&amp;lt;/button&amp;gt;&lt;/code&gt; | Allows you to select a node or customize the HTML for the “Previous” arrow. respondTo | string | ‘window’ | Width that responsive object responds to. Can be ‘window’, ‘slider’ or ‘min’ (the smaller of the two). responsive | array | null | Array of objects &lt;a href=&quot;https://raw.githubusercontent.com/kenwheeler/slick/master/#responsive-option-example&quot;&gt;containing breakpoints and settings objects (see example)&lt;/a&gt;. Enables settings at given &lt;code&gt;breakpoint&lt;/code&gt;. Set &lt;code&gt;settings&lt;/code&gt; to “unslick” instead of an object to disable slick at a given breakpoint. rows | int | 1 | Setting this to more than 1 initializes grid mode. Use slidesPerRow to set how many slides should be in each row. rtl | boolean | false | Change the slider’s direction to become right-to-left slide | string | ‘’ | Slide element query slidesPerRow | int | 1 | With grid mode initialized via the rows option, this sets how many slides are in each grid row. slidesToScroll | int | 1 | # of slides to scroll at a time slidesToShow | int | 1 | # of slides to show at a time speed | int | 300 | Transition speed swipe | boolean | true | Enables touch swipe swipeToSlide | boolean | false | Swipe to slide irrespective of slidesToScroll touchMove | boolean | true | Enables slide moving with touch touchThreshold | int | 5 | To advance slides, the user must swipe a length of (1/touchThreshold) * the width of the slider. useCSS | boolean | true | Enable/Disable CSS Transitions useTransform | boolean | true | Enable/Disable CSS Transforms variableWidth | boolean | false | Disables automatic slide width calculation vertical | boolean | false | Vertical slide direction verticalSwiping | boolean | false | Changes swipe direction to vertical waitForAnimate | boolean | true | Ignores requests to advance the slide while animating zIndex | number | 1000 | Set the zIndex values for slides, useful for IE9 and lower&lt;/p&gt; 
&lt;h5&gt;Responsive Option Example&lt;/h5&gt; 
&lt;p&gt;The responsive option, and value, is quite unique and powerful. You can use it like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(&quot;.slider&quot;).slick({

  // normal options...
  infinite: false,

  // the magic
  responsive: [{

      breakpoint: 1024,
      settings: {
        slidesToShow: 3,
        infinite: true
      }

    }, {

      breakpoint: 600,
      settings: {
        slidesToShow: 2,
        dots: true
      }

    }, {

      breakpoint: 300,
      settings: &quot;unslick&quot; // destroys slick

    }]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;p&gt;In slick 1.4, callback methods were deprecated and replaced with events. Use them before the initialization of slick as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// On swipe event
$(&#39;.your-element&#39;).on(&#39;swipe&#39;, function(event, slick, direction){
  console.log(direction);
  // left
});

// On edge hit
$(&#39;.your-element&#39;).on(&#39;edge&#39;, function(event, slick, direction){
  console.log(&#39;edge was hit&#39;)
});

// On before slide change
$(&#39;.your-element&#39;).on(&#39;beforeChange&#39;, function(event, slick, currentSlide, nextSlide){
  console.log(nextSlide);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Event | Params | Description —— | –––– | ———– afterChange | event, slick, currentSlide | After slide change callback beforeChange | event, slick, currentSlide, nextSlide | Before slide change callback breakpoint | event, slick, breakpoint | Fires after a breakpoint is hit destroy | event, slick | When slider is destroyed, or unslicked. edge | event, slick, direction | Fires when an edge is overscrolled in non-infinite mode. init | event, slick | When Slick initializes for the first time callback. Note that this event should be defined before initializing the slider. reInit | event, slick | Every time Slick (re-)initializes callback setPosition | event, slick | Every time Slick recalculates position swipe | event, slick, direction | Fires after swipe/drag lazyLoaded | event, slick, image, imageSource | Fires after image loads lazily lazyLoadError | event, slick, image, imageSource | Fires after image fails to load&lt;/p&gt; 
&lt;h4&gt;Methods&lt;/h4&gt; 
&lt;p&gt;Methods are called on slick instances through the slick method itself in version 1.4, see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Add a slide
$(&#39;.your-element&#39;).slick(&#39;slickAdd&#39;,&quot;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&quot;);

// Get the current slide
var currentSlide = $(&#39;.your-element&#39;).slick(&#39;slickCurrentSlide&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This new syntax allows you to call any internal slick method as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Manually refresh positioning of slick
$(&#39;.your-element&#39;).slick(&#39;setPosition&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Method | Argument | Description —— | –––– | ———– &lt;code&gt;slick&lt;/code&gt; | options : object | Initializes Slick &lt;code&gt;unslick&lt;/code&gt; | | Destroys Slick &lt;code&gt;slickNext&lt;/code&gt; | | Triggers next slide &lt;code&gt;slickPrev&lt;/code&gt; | | Triggers previous slide &lt;code&gt;slickPause&lt;/code&gt; | | Pause Autoplay &lt;code&gt;slickPlay&lt;/code&gt; | | Start Autoplay (&lt;em&gt;will also set &lt;code&gt;autoplay&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;&lt;/em&gt;) &lt;code&gt;slickGoTo&lt;/code&gt; | index : int, dontAnimate : bool | Goes to slide by index, skipping animation if second parameter is set to true &lt;code&gt;slickCurrentSlide&lt;/code&gt; | | Returns the current slide index &lt;code&gt;slickAdd&lt;/code&gt; | element : html or DOM object, index: int, addBefore: bool | Add a slide. If an index is provided, will add at that index, or before if addBefore is set. If no index is provided, add to the end or to the beginning if addBefore is set. Accepts HTML String || Object &lt;code&gt;slickRemove&lt;/code&gt; | index: int, removeBefore: bool | Remove slide by index. If removeBefore is set true, remove slide preceding index, or the first slide if no index is specified. If removeBefore is set to false, remove the slide following index, or the last slide if no index is set. &lt;code&gt;slickFilter&lt;/code&gt; | filter : selector or function | Filters slides using jQuery .filter syntax &lt;code&gt;slickUnfilter&lt;/code&gt; | | Removes applied filter &lt;code&gt;slickGetOption&lt;/code&gt; | option : string(option name) | Gets an option value. &lt;code&gt;slickSetOption&lt;/code&gt; | change an option, &lt;code&gt;refresh&lt;/code&gt; is always &lt;code&gt;boolean&lt;/code&gt; and will update UI changes… | &lt;code&gt;option, value, refresh&lt;/code&gt; | change a &lt;a href=&quot;https://github.com/kenwheeler/slick#settings&quot;&gt;single &lt;code&gt;option&lt;/code&gt;&lt;/a&gt; to given &lt;code&gt;value&lt;/code&gt;; &lt;code&gt;refresh&lt;/code&gt; is optional. | &lt;code&gt;&quot;responsive&quot;, [{ breakpoint: n, settings: {} }, ... ], refresh&lt;/code&gt; | change or add &lt;a href=&quot;https://raw.githubusercontent.com/kenwheeler/slick/master/#responsive-option-example&quot;&gt;whole sets of responsive options&lt;/a&gt; | &lt;code&gt;{ option: value, option: value, ... }, refresh&lt;/code&gt; | change &lt;a href=&quot;https://github.com/kenwheeler/slick#settings&quot;&gt;multiple &lt;code&gt;option&lt;/code&gt;s&lt;/a&gt; to corresponding &lt;code&gt;value&lt;/code&gt;s.&lt;/p&gt; 
&lt;h4&gt;Example&lt;/h4&gt; 
&lt;p&gt;Initialize with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(element).slick({
  dots: true,
  speed: 500
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Change the speed with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(element).slick(&#39;slickSetOption&#39;, &#39;speed&#39;, 5000, true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Destroy with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;$(element).slick(&#39;unslick&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sass Variables&lt;/h4&gt; 
&lt;p&gt;Variable | Type | Default | Description —— | –– | —–– | ———– $slick-font-path | string | “./fonts/” | Directory path for the slick icon font $slick-font-family | string | “slick” | Font-family for slick icon font $slick-loader-path | string | “./” | Directory path for the loader image $slick-arrow-color | color | white | Color of the left/right arrow icons $slick-dot-color | color | black | Color of the navigation dots $slick-dot-color-active | color | $slick-dot-color | Color of the active navigation dot $slick-prev-character | string | ‘\2190’ | Unicode character code for the previous arrow icon $slick-next-character | string | ‘\2192’ | Unicode character code for the next arrow icon $slick-dot-character | string | ‘\2022’ | Unicode character code for the navigation dot icon $slick-dot-size | pixels | 6px | Size of the navigation dots&lt;/p&gt; 
&lt;h4&gt;Browser support&lt;/h4&gt; 
&lt;p&gt;Slick works on IE8+ in addition to other modern browsers such as Chrome, Firefox, and Safari.&lt;/p&gt; 
&lt;h4&gt;Dependencies&lt;/h4&gt; 
&lt;p&gt;jQuery 1.7&lt;/p&gt; 
&lt;h4&gt;License&lt;/h4&gt; 
&lt;p&gt;Copyright (c) 2017 Ken Wheeler&lt;/p&gt; 
&lt;p&gt;Licensed under the MIT license.&lt;/p&gt; 
&lt;p&gt;Free as in Bacon.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EastWorld/wechat-app-mall</title>
      <link>https://github.com/EastWorld/wechat-app-mall</link>
      <description>&lt;p&gt;微信小程序商城，微信小程序微店&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;微信小程序商城&lt;/h1&gt; 
&lt;p&gt;微信小程序商城，微信小程序微店，长期维护版本，欢迎大家踊跃提交贡献代码；&lt;/p&gt; 
&lt;p&gt;使用说明和常见问题，可参阅下面的说明，如还有疑问，可访问工厂官网 &lt;a href=&quot;https://www.it120.cc/&quot;&gt;https://www.it120.cc/&lt;/a&gt; 寻求帮助！&lt;/p&gt; 
&lt;p&gt;新增直播带货支持，具体详见使用说明&lt;/p&gt; 
&lt;h1&gt;今日头条/抖音小程序版本&lt;/h1&gt; 
&lt;p&gt;本项目的今日头条/抖音小程序版本，请移步至下面的地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/EastWorld/tt-app-mall&quot;&gt;https://github.com/EastWorld/tt-app-mall&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;扫码体验&lt;/h2&gt; 
&lt;img src=&quot;https://cdn.it120.cc/apifactory/2019/06/28/a8304003-3218-4a47-95cf-84d82ebdc07b.jpg&quot; width=&quot;200px&quot;&gt; 
&lt;h2&gt;详细配置/使用教程&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.it120.cc/help/ikfe2k.html&quot;&gt;https://www.it120.cc/help/ikfe2k.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;遇到使用问题？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.it120.cc/help.html&quot;&gt;点击这里找答案，可用关键词搜索&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;其他开源模板&lt;/h2&gt; 
&lt;p&gt;| 舔果果小铺（升级版） | 面馆风格小程序 | AI名片 | | :——: | :——: | :——: | | &lt;img src=&quot;https://dcdn.it120.cc/2020/08/30/fd095c58-e655-4785-af0a-89e0b4da7cfe.jpg&quot; width=&quot;200px&quot;&gt; | &lt;img src=&quot;https://cdn.it120.cc/apifactory/2019/03/29/9e30cfe31eabcd218eb9c434f17e9295.jpg&quot; width=&quot;200px&quot;&gt; | &lt;img src=&quot;https://cdn.it120.cc/apifactory/2018/12/18/c2324da4eea91602f385db5b523b13ca.jpg&quot; width=&quot;200px&quot;&gt; | | &lt;a href=&quot;https://github.com/gooking/TianguoguoXiaopu&quot;&gt;开源地址&lt;/a&gt; | &lt;a href=&quot;https://gitee.com/javazj/noodle_shop_procedures&quot;&gt;开源地址&lt;/a&gt; | &lt;a href=&quot;https://github.com/gooking/visitingCard&quot;&gt;开源地址&lt;/a&gt; |&lt;/p&gt; 
&lt;h2&gt;联系作者&lt;/h2&gt; 
&lt;p&gt;| 微信好友 | 支付宝好友 | | :——: | :——: | | &lt;img src=&quot;https://cdn.it120.cc/apifactory/2019/07/03/a86f7e46-1dbc-42fe-9495-65403659671e.jpeg&quot; width=&quot;200px&quot;&gt; | &lt;img src=&quot;https://cdn.it120.cc/apifactory/2019/07/03/fda59aeb-4943-4379-93bb-92856740bd6a.jpeg&quot; width=&quot;200px&quot;&gt; |&lt;/p&gt; 
&lt;h2&gt;本项目使用了下面的组件，在此鸣谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/gooking/apifm-wxapi&quot;&gt;接口 SDK&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://admin.it120.cc&quot;&gt;api工厂&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://youzan.github.io/vant-weapp&quot;&gt;vant-weapp&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jin-yufeng/Parser&quot;&gt;小程序富文本插件（html 渲染）&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jasondu/wxa-plugin-canvas&quot;&gt;小程序海报组件-生成朋友圈分享海报并生成图片&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ecomfe/echarts-for-weixin&quot;&gt;Apache ECharts&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;底部ICON图标使用： https://www.iconfont.cn/collections/detail?spm=a313x.7781069.0.da5a778a4&amp;amp;cid=18904&lt;/p&gt; 
&lt;h2&gt;如何升级到最新版&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;小程序程序的修改和您后台的数据是独立的，所以不用担心您会丢失数据&lt;/li&gt; 
 &lt;li&gt;先把你开发工具下的现有版本程序备份&lt;/li&gt; 
 &lt;li&gt;下载最新版的程序，直接覆盖您本地的程序&lt;/li&gt; 
 &lt;li&gt;用开发工具修改域名 mall 为你自己的域名&lt;/li&gt; 
 &lt;li&gt;开发工具里面上传代码提交微信审核&lt;/li&gt; 
 &lt;li&gt;审核通过后，小程序后台去发布新版本即可&lt;/li&gt; 
 &lt;li&gt;用户无需重新扫码，关闭小程序重新打开就是新版本了&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>monk-coder/dust</title>
      <link>https://github.com/monk-coder/dust</link>
      <description>&lt;p&gt;繁华 不过一掬细沙&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dust&lt;/h1&gt; 
&lt;h4&gt;尘归尘 土归土&lt;/h4&gt; 
&lt;h4&gt;繁华 不过一拘细沙&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/monk-coder/dust/dust/pics/readme.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;声明&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;这不是一个开源项目，只是把GitHub当作一个代码的存储空间，本项目不接受任何开源要求。&lt;/li&gt; 
 &lt;li&gt;仅用于学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断.&lt;/li&gt; 
 &lt;li&gt;仓库内所有资源文件，禁止任何公众号、自媒体、开发者进行任何形式的转载、发布、搬运。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;和尚&lt;/code&gt; 对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/li&gt; 
 &lt;li&gt;间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, &lt;code&gt;和尚&lt;/code&gt; 对于由此引起的任何隐私泄漏或其他后果概不负责.&lt;/li&gt; 
 &lt;li&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本.&lt;/li&gt; 
 &lt;li&gt;任何以任何方式查看此项目的人或直接或间接使用该项目的任何脚本的使用者都应仔细阅读此声明。 &lt;code&gt;和尚&lt;/code&gt; 保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或项目的规则，则视为您已接受此免责声明.&lt;/li&gt; 
 &lt;li&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;社交&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://t.me/monk_dust_channel&quot;&gt; 电报通知 &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;特别感谢&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;脚本使用了 &lt;a href=&quot;https://github.com/chavyleung&quot;&gt; @chavyleung &lt;/a&gt; 的 &lt;code&gt;Env&lt;/code&gt; 函数&lt;/li&gt; 
 &lt;li&gt;经过柘柘授权，会把他之前的脚本存放在本仓库中。&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>modood/Administrative-divisions-of-China</title>
      <link>https://github.com/modood/Administrative-divisions-of-China</link>
      <description>&lt;p&gt;中华人民共和国行政区划：省级（省份直辖市自治区）、 地级（城市）、 县级（区县）、 乡级（乡镇街道）、 村级（村委会居委会） ，中国省市区镇村二级三级四级五级联动地址数据。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Administrative-divisions-of-China&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;http://standardjs.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20style-standard-brightgreen.svg?sanitize=true&quot; alt=&quot;code style&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://david-dm.org/modood/Administrative-divisions-of-China&quot;&gt;&lt;img src=&quot;https://david-dm.org/modood/Administrative-divisions-of-China.svg?sanitize=true&quot; alt=&quot;dependencies&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/china-division&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/china-division.svg?sanitize=true&quot; alt=&quot;npm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/china-division&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/china-division.svg?sanitize=true&quot; alt=&quot;downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/modood/Administrative-divisions-of-China/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-WTFPL%20--%20Do%20What%20the%20Fuck%20You%20Want%20to%20Public%20License-green.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;中华人民共和国行政区划（五级）：省级、地级、县级、乡级和村级。&lt;/p&gt; 
&lt;h2&gt;数据来源&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;民政部、国家统计局： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.mca.gov.cn/article/sj/xzqh/&quot;&gt;中华人民共和国民政部-中华人民共和国行政区划代码&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/&quot;&gt;中华人民共和国国家统计局-统计用区划和城乡划分代码&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.stats.gov.cn/tjsj/tjbz/200911/t20091125_8667.html&quot;&gt;中华人民共和国国家统计局-统计用区划代码和城乡划分代码编制规则&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;本项目已更新至： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2020/index.html&quot;&gt;2020年统计用区划代码和城乡划分代码（截止时间：2020-06-30，发布时间：2020-11-06）&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;数据下载&lt;/h2&gt; 
&lt;p&gt;| 文件列表 | JSON | CSV | |:—————————–|:—–|:––| | 省级（省份、直辖市、自治区） | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/provinces.json&quot;&gt;provinces.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/provinces.csv&quot;&gt;provinces.csv&lt;/a&gt; | | 地级（城市） | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/cities.json&quot;&gt;cities.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/cities.csv&quot;&gt;cities.csv&lt;/a&gt; | | 县级（区县） | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/areas.json&quot;&gt;areas.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/areas.csv&quot;&gt;areas.csv&lt;/a&gt; | | 乡级（乡镇、街道） | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/streets.json&quot;&gt;streets.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/streets.csv&quot;&gt;streets.csv&lt;/a&gt; | | 村级（村委会、居委会） | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/villages.json&quot;&gt;villages.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/villages.csv&quot;&gt;villages.csv&lt;/a&gt; |&lt;/p&gt; 
&lt;p&gt;| 文件列表 | 普通 | 带编码 | |:––––––––––––––––––––––|:—–|:—––| | “省份、城市” 二级联动数据 | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pc.json&quot;&gt;pc.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pc-code.json&quot;&gt;pc-code.json&lt;/a&gt; | | “省份、城市、区县” 三级联动数据 | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pca.json&quot;&gt;pca.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pca-code.json&quot;&gt;pca-code.json&lt;/a&gt; | | “省份、城市、区县、乡镇” 四级联动数据 | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pcas.json&quot;&gt;pcas.json&lt;/a&gt; | &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pcas-code.json&quot;&gt;pcas-code.json&lt;/a&gt; | | “省份、城市、区县、乡镇、村庄” 五级联动数据 | - | - |&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;提示：需要打包下载全部文件，请看 &lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/releases&quot;&gt;Releases&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;数据更新&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install
$ npm run fetch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果需要更新所有数据，只需删除现有数据重新抓取即可：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# 删除现有的数据
$ rm dist/*.csv &amp;amp;&amp;amp; rm dist/[a-z]*.json &amp;amp;&amp;amp; rm dist/data.sqlite &amp;amp;&amp;amp; touch dist/data.sqlite

# 拉数据（这个步骤比较耗时）
$ npm run fetch

# 格式化 json csv 和联动数据等
$ npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;[1/1]正在抓取省级数据...

[1/31]正在抓取地级数据，当前省级：11 北京市
[2/31]正在抓取地级数据，当前省级：12 天津市
[3/31]正在抓取地级数据，当前省级：13 河北省
[4/31]正在抓取地级数据，当前省级：14 山西省
...
[29/31]正在抓取地级数据，当前省级：63 青海省
[30/31]正在抓取地级数据，当前省级：64 宁夏回族自治区
[31/31]正在抓取地级数据，当前省级：65 新疆维吾尔自治区

[1/344]正在抓取县级数据，当前地级：1101 市辖区
[2/344]正在抓取县级数据，当前地级：1201 市辖区
[3/344]正在抓取县级数据，当前地级：1301 石家庄市
[4/344]正在抓取县级数据，当前地级：1302 唐山市
...
[342/344]正在抓取县级数据，当前地级：6542 塔城地区
[343/344]正在抓取县级数据，当前地级：6543 阿勒泰地区
[344/344]正在抓取县级数据，当前地级：6590 自治区直辖县级行政区划

[1/2856]正在抓取乡级数据，当前县级：110101 东城区
[2/2856]正在抓取乡级数据，当前县级：110102 西城区
[3/2856]正在抓取乡级数据，当前县级：110105 朝阳区
[4/2856]正在抓取乡级数据，当前县级：110106 丰台区
...
[2854/2856]正在抓取乡级数据，当前县级：659003 图木舒克市
[2855/2856]正在抓取乡级数据，当前县级：659004 五家渠市
[2856/2856]正在抓取乡级数据，当前县级：659006 铁门关市

[1/42951]正在抓取村级数据，当前乡级：110101001 东华门街道办事处
[2/42951]正在抓取村级数据，当前乡级：110101002 景山街道办事处
[3/42951]正在抓取村级数据，当前乡级：110101003 交道口街道办事处
[4/42951]正在抓取村级数据，当前乡级：110101004 安定门街道办事处
...
[42949/42951]正在抓取村级数据，当前乡级：659004502 兵团一零三团
[42950/42951]正在抓取村级数据，当前乡级：659006100 博古其镇
[42951/42951]正在抓取村级数据，当前乡级：659006101 双丰镇
[100%] 数据抓取完成！
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;数据校验&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ npm test

&amp;gt; eslint . &amp;amp;&amp;amp; mocha -t 5000

  中华人民共和国行政区划：
    ✓ “一级” 省级（省份、直辖市、自治区）数据
    ✓ “二级” 地级（城市）数据
    ✓ “三级” 县级（区县）数据
    ✓ “四级” 乡级（乡镇、街道）数据
    ✓ “五级” 村级（村委会、居委会）数据

  联动数据
    ✓ “省份、城市” 二级联动数据
    ✓ “省份、城市、区县” 三级联动数据
    ✓ “省份、城市、区县、乡镇” 四级联动数据
    ✓ “某省、某市、某县、某镇” 不存在

  9 passing (37ms)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;数据库支持&lt;/h2&gt; 
&lt;p&gt;目前本项目抓取的数据保存在 sqlite3，数据文件下载：&lt;a href=&quot;https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/data.sqlite&quot;&gt;data.sqlite&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;可以自己将数据迁移到其他数据库管理系统中（MySQL, Oracle, MSSQL 等）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;省级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;| code | name | |:—–|:—————| | 13 | 河北省 | | 14 | 山西省 | | 15 | 内蒙古自治区 | | 45 | 广西壮族自治区 |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;地级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;| code | name | provinceCode | |:—–|:———–|:———––| | 1301 | 石家庄市 | 13 | | 1401 | 太原市 | 14 | | 1525 | 锡林郭勒盟 | 15 | | 4503 | 桂林市 | 45 |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;县级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;| code | name | cityCode | provinceCode | |:—––|:———|:———|:———––| | 130111 | 栾城区 | 1301 | 13 | | 140121 | 清徐县 | 1401 | 14 | | 152527 | 太仆寺旗 | 1525 | 15 | | 450305 | 七星区 | 4503 | 45 |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;乡级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;| code | name | areaCode | cityCode | provinceCode | |:–––––|:—————|:———|:———|:———––| | 130111200 | 南高乡 | 130111 | 1301 | 13 | | 140121102 | 东于镇 | 140121 | 1401 | 14 | | 152527201 | 贡宝拉格苏木 | 152527 | 1525 | 15 | | 450305004 | 漓东街道办事处 | 450305 | 4503 | 45 |&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;村级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;| code | name | streetCode | areaCode | cityCode | provinceCode | |:———––|:—————|:———–|:———|:———|:———––| | 130111200201 | 南高村委会 | 130111200 | 130111 | 1301 | 13 | | 140121102001 | 东于社区居委会 | 140121102 | 140121 | 1401 | 14 | | 152527201206 | 敦达乌苏嘎查 | 152527201 | 152527 | 1525 | 15 | | 450305004006 | 横塘社区 | 450305004 | 450305 | 4503 | 45 |&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://starcharts.herokuapp.com/modood/Administrative-divisions-of-China&quot;&gt;&lt;img src=&quot;https://starcharts.herokuapp.com/modood/Administrative-divisions-of-China.svg?sanitize=true&quot; alt=&quot;Stargazers over time&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork it&lt;/li&gt; 
 &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Create new Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repo is released under the &lt;a href=&quot;http://www.wtfpl.net/&quot;&gt;WTFPL&lt;/a&gt; – Do What the Fuck You Want to Public License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lan-tianxiang/jd_shell</title>
      <link>https://github.com/lan-tianxiang/jd_shell</link>
      <description>&lt;p&gt;京豆 京东 lxk0301 jd-base loon docker 羊毛 脚本&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;新旧版本同时更新 QQ群967451175&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;100px&quot; src=&quot;https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true&quot; align=&quot;center&quot; alt=&quot;GitHub Readme Stats&quot;&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;JS SHELL&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt;自动化一键完成JS库管理&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/raw/master/LICENSE&quot;&gt;&lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/license/lan-tianxiang/jd_shell.svg?label=License&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/issues&quot;&gt;&lt;img alt=&quot;Issues&quot; src=&quot;https://img.shields.io/github/issues/lan-tianxiang/jd_shell?color=0088ff&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/stargazers&quot;&gt;&lt;img alt=&quot;GitHub&quot; src=&quot;https://img.shields.io/github/stars/lan-tianxiang/jd_shell.svg?label=Stars&amp;amp;style=for-the-badge&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-Lan%20Tian%20Xiang%20%E2%86%92-gray.svg?colorA=655BE1&amp;amp;colorB=4F44D6&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/lxk0301&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Supported%20by-LXK%200301%20Scripts%20%E2%86%92-gray.svg?colorA=61c265&amp;amp;colorB=4CAF50&amp;amp;style=for-the-badge&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/lan-tianxiang/jd_shell/v3/#demo&quot;&gt;查看 Demo&lt;/a&gt; · &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/issues/new/choose&quot;&gt;报告 Bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/issues/new/choose&quot;&gt;请求增加功能&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;喜欢这个项目？请考虑&lt;a href=&quot;&quot;&gt;捐赠❤&lt;/a&gt;来帮助它完善！ &lt;br&gt; &lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;当然，觉得默默关注也是鼓励的话，也可以在右上角给颗⭐！你的支持是我最大的动力😎！&lt;/h3&gt; 
&lt;p&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; 
&lt;h2&gt;必要声明:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;本仓库发布的SHELL项目，是用于对第三方js库进行自动更新，管理和运行的一体化软件.&lt;/li&gt; 
 &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/li&gt; 
 &lt;li&gt;本仓库发布的SHELL项目中涉及的任何脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断.&lt;/li&gt; 
 &lt;li&gt;所有使用者在使用SHELL项目的任何部分时，需先遵守法律法规。对于一切使用不当所造成的后果，需自行承担.对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.&lt;/li&gt; 
 &lt;li&gt;间接使用SHELL项目的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, 本人对于由此引起的任何隐私泄漏或其他后果概不负责.&lt;/li&gt; 
 &lt;li&gt;如果任何单位或个人认为该项目可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关文件.&lt;/li&gt; 
 &lt;li&gt;任何以任何方式查看此项目的人或直接或间接使用该SHELL项目的任何脚本的使用者都应仔细阅读此声明。本人保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或SHELL项目的规则，则视为您已接受此免责声明.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;您必须在下载后的24小时内从计算机或手机中完全删除以上内容.&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何脚本，则视为&lt;code&gt;已接受&lt;/code&gt;此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;☣请各位不要传播！！☣&lt;/h5&gt; 
&lt;h3&gt;通知&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;2021/3/31 9:00 &lt;code&gt;Docker重要通知&lt;/code&gt;&lt;/strong&gt; 修复Docker遗留的隐藏BUG，为了保持docker和linux修复脚本的一致，请所有使用&lt;code&gt;Docker&lt;/code&gt;重新安装一键脚本，选择删除已部署的镜像即可。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;2021/3/30 9:00 &lt;code&gt;长期&lt;/code&gt;&lt;/strong&gt; ㅤ有好用的第三方脚本欢迎提交到https://github.com/lan-tianxiang/jd_scripts&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开发行程&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/5 12:00 &lt;code&gt;完成多账户并发运行任务功能&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/10 12:00 &lt;code&gt;对结构优化，减少执行文件&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/15 12:00 &lt;code&gt;不知道要更什么功能，你们来提！！！&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2021/4/15 12:00 &lt;code&gt;尚待继续！！！&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;适用于以下系统&lt;/h2&gt; 
&lt;h3&gt;如何部署？&lt;/h3&gt; 
&lt;h2&gt;&lt;code&gt;Linux&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Linux&quot;&gt;Debian/Ubuntu/Armbian/OpenMediaVault等Debian系&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Linux&quot;&gt;CentOS/RedHat/Fedora等红帽系&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Android&quot;&gt;Android等使用Termux模拟Linux的系统&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Unix&quot;&gt;OpenWRT、MacOs等类UNIX系统&lt;/a&gt; 🔻&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Docker&lt;/code&gt; &lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/actions&quot;&gt;&lt;img alt=&quot;Docker Built&quot; src=&quot;https://github.com/lan-tianxiang/jd_shell/workflows/Built_JD_Shell_To_Docker/badge.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Docker&quot;&gt;Docker&lt;/a&gt; 🔻&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Windows10&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Win10&quot;&gt;Win10安装 WSL Ubuntu&lt;/a&gt; 🔻&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/lan-tianxiang/jd_shell/wiki/Instruction&quot;&gt;WIKI&lt;/a&gt; 和各文件注释都含有大量教程，请自行翻阅❗❗&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;/summary&gt; 
 &lt;h5&gt;小彩蛋&lt;/h5&gt; 
 &lt;h5&gt;默认隐藏，欢迎加入交流&lt;/h5&gt; 
 &lt;!--
好家伙！！
TG群：t.me/jd_shell
QQ群：967451175
--&gt; 
&lt;/details&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;只记录大的更新，小修小改不记录。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;2021-04-01, 新增在线SHELL调试功能，具体查看WIKI，Docker用户不支持&lt;/p&gt; 
&lt;p&gt;2021-03-30, 修复Docker遗留的隐藏BUG，保持docker和linux修复脚本的一致&lt;/p&gt; 
&lt;p&gt;2021-03-29, 增加超时关闭，以防因网络等未知原因卡住而不断消耗系统资源（默认关闭）&lt;/p&gt; 
&lt;p&gt;2021-03-28, 自动配置并填写助力码，在config最后的专区内，无需人工干预（默认关闭）&lt;/p&gt; 
&lt;p&gt;2021-02-19，面板功能集成至jd.sh内，运行jd.sh会出现操作提示&lt;/p&gt; 
&lt;p&gt;2021-01-23，控制面板增加日志查看功能，Docker重启容器后可以使用&lt;code&gt;docker restart jd&lt;/code&gt;，非Docker如果是pm2方式的请重启pm2进程&lt;code&gt;pm2 resatrt server.js&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;2020-01-21，增加shylocks/Loon脚本。&lt;/p&gt; 
&lt;p&gt;2021-01-15，如果本机上安装了pm2，则挂机程序以pm2启动，否则以nohup启动。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mishoo/UglifyJS</title>
      <link>https://github.com/mishoo/UglifyJS</link>
      <description>&lt;p&gt;JavaScript parser / mangler / compressor / beautifier toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UglifyJS 3&lt;/h1&gt; 
&lt;p&gt;UglifyJS is a JavaScript parser, minifier, compressor and beautifier toolkit.&lt;/p&gt; 
&lt;h4&gt;Note:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;uglify-js&lt;/code&gt; supports JavaScript and most language features in ECMAScript.&lt;/li&gt; 
 &lt;li&gt;For more exotic parts of ECMAScript, process your source file with transpilers like &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; before passing onto &lt;code&gt;uglify-js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;uglify-js@3&lt;/code&gt; has a simplified &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#api-reference&quot;&gt;API&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#command-line-usage&quot;&gt;CLI&lt;/a&gt; that is not backwards compatible with &lt;a href=&quot;https://github.com/mishoo/UglifyJS/tree/v2.x&quot;&gt;&lt;code&gt;uglify-js@2&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;First make sure you have installed the latest version of &lt;a href=&quot;http://nodejs.org/&quot;&gt;node.js&lt;/a&gt; (You may need to restart your computer after this step).&lt;/p&gt; 
&lt;p&gt;From NPM for use as a command line app:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install uglify-js -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From NPM for programmatic use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install uglify-js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Command line usage&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs [input files] [options]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UglifyJS can take multiple input files. It’s recommended that you pass the input files first, then pass the options. UglifyJS will parse input files in sequence and apply any compression options. The files are parsed in the same global scope, that is, a reference from a file to some variable/function declared in another file will be matched properly.&lt;/p&gt; 
&lt;p&gt;If no input file is specified, UglifyJS will read from STDIN.&lt;/p&gt; 
&lt;p&gt;If you wish to pass your options before the input files, separate the two with a double dash to prevent input files being used as option arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs --compress --mangle -- input.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Command line options&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;    -h, --help                  Print usage information.
                                `--help options` for details on available options.
    -V, --version               Print version number.
    -p, --parse &amp;lt;options&amp;gt;       Specify parser options:
                                `acorn`  Use Acorn for parsing.
                                `bare_returns`  Allow return outside of functions.
                                                Useful when minifying CommonJS
                                                modules and Userscripts that may
                                                be anonymous function wrapped (IIFE)
                                                by the .user.js engine `caller`.
                                `expression`  Parse a single expression, rather than
                                              a program (for parsing JSON).
                                `spidermonkey`  Assume input files are SpiderMonkey
                                                AST format (as JSON).
    -c, --compress [options]    Enable compressor/specify compressor options:
                                `pure_funcs`  List of functions that can be safely
                                              removed when their return values are
                                              not used.
    -m, --mangle [options]      Mangle names/specify mangler options:
                                `reserved`  List of names that should not be mangled.
    --mangle-props [options]    Mangle properties/specify mangler options:
                                `builtins`  Mangle property names that overlaps
                                            with standard JavaScript globals.
                                `debug`  Add debug prefix and suffix.
                                `domprops`  Mangle property names that overlaps
                                            with DOM properties.
                                `keep_quoted`  Only mangle unquoted properties.
                                `regex`  Only mangle matched property names.
                                `reserved`  List of names that should not be mangled.
    -b, --beautify [options]    Beautify output/specify output options:
                                `beautify`  Enabled with `--beautify` by default.
                                `preamble`  Preamble to prepend to the output. You
                                            can use this to insert a comment, for
                                            example for licensing information.
                                            This will not be parsed, but the source
                                            map will adjust for its presence.
                                `quote_style`  Quote style:
                                               0 - auto
                                               1 - single
                                               2 - double
                                               3 - original
                                `wrap_iife`  Wrap IIFEs in parentheses. Note: you may
                                             want to disable `negate_iife` under
                                             compressor options.
    -O, --output-opts [options] Specify output options (`beautify` disabled by default).
    -o, --output &amp;lt;file&amp;gt;         Output file path (default STDOUT). Specify `ast` or
                                `spidermonkey` to write UglifyJS or SpiderMonkey AST
                                as JSON to STDOUT respectively.
    --annotations               Process and preserve comment annotations.
                                (`/*@__PURE__*/` or `/*#__PURE__*/`)
    --no-annotations            Ignore and discard comment annotations.
    --comments [filter]         Preserve copyright comments in the output. By
                                default this works like Google Closure, keeping
                                JSDoc-style comments that contain &quot;@license&quot; or
                                &quot;@preserve&quot;. You can optionally pass one of the
                                following arguments to this flag:
                                - &quot;all&quot; to keep all comments
                                - a valid JS RegExp like `/foo/` or `/^!/` to
                                keep only matching comments.
                                Note that currently not *all* comments can be
                                kept when compression is on, because of dead
                                code removal or cascading statements into
                                sequences.
    --config-file &amp;lt;file&amp;gt;        Read `minify()` options from JSON file.
    -d, --define &amp;lt;expr&amp;gt;[=value] Global definitions.
    -e, --enclose [arg[:value]] Embed everything in a big function, with configurable
                                argument(s) &amp;amp; value(s).
    --ie8                       Support non-standard Internet Explorer 8.
                                Equivalent to setting `ie8: true` in `minify()`
                                for `compress`, `mangle` and `output` options.
                                By default UglifyJS will not try to be IE-proof.
    --keep-fnames               Do not mangle/drop function names.  Useful for
                                code relying on Function.prototype.name.
    --name-cache &amp;lt;file&amp;gt;         File to hold mangled name mappings.
    --self                      Build UglifyJS as a library (implies --wrap UglifyJS)
    --source-map [options]      Enable source map/specify source map options:
                                `base`  Path to compute relative paths from input files.
                                `content`  Input source map, useful if you&#39;re compressing
                                           JS that was generated from some other original
                                           code. Specify &quot;inline&quot; if the source map is
                                           included within the sources.
                                `filename`  Filename and/or location of the output source
                                            (sets `file` attribute in source map).
                                `includeSources`  Pass this flag if you want to include
                                                  the content of source files in the
                                                  source map as sourcesContent property.
                                `names` Include symbol names in the source map.
                                `root`  Path to the original source to be included in
                                        the source map.
                                `url`  If specified, path to the source map to append in
                                       `//# sourceMappingURL`.
    --timings                   Display operations run time on STDERR.
    --toplevel                  Compress and/or mangle variables in top level scope.
    --v8                        Support non-standard Chrome &amp;amp; Node.js
                                Equivalent to setting `v8: true` in `minify()`
                                for `mangle` and `output` options.
                                By default UglifyJS will not try to be v8-proof.
    --verbose                   Print diagnostic messages.
    --warn                      Print warning messages.
    --webkit                    Support non-standard Safari/Webkit.
                                Equivalent to setting `webkit: true` in `minify()`
                                for `mangle` and `output` options.
                                By default UglifyJS will not try to be Safari-proof.
    --wrap &amp;lt;name&amp;gt;               Embed everything in a big function, making the
                                “exports” and “global” variables available. You
                                need to pass an argument to this option to
                                specify the name that your module will take
                                when included in, say, a browser.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Specify &lt;code&gt;--output&lt;/code&gt; (&lt;code&gt;-o&lt;/code&gt;) to declare the output file. Otherwise the output goes to STDOUT.&lt;/p&gt; 
&lt;h2&gt;CLI source map options&lt;/h2&gt; 
&lt;p&gt;UglifyJS can generate a source map file, which is highly useful for debugging your compressed JavaScript. To get a source map, pass &lt;code&gt;--source-map --output output.js&lt;/code&gt; (source map will be written out to &lt;code&gt;output.js.map&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Additional options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--source-map &quot;filename=&#39;&amp;lt;NAME&amp;gt;&#39;&quot;&lt;/code&gt; to specify the name of the source map. The value of &lt;code&gt;filename&lt;/code&gt; is only used to set &lt;code&gt;file&lt;/code&gt; attribute (see &lt;a href=&quot;https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k&quot;&gt;the spec&lt;/a&gt;) in source map file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--source-map &quot;root=&#39;&amp;lt;URL&amp;gt;&#39;&quot;&lt;/code&gt; to pass the URL where the original files can be found.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--source-map &quot;names=false&quot;&lt;/code&gt; to omit symbol names if you want to reduce size of the source map file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--source-map &quot;url=&#39;&amp;lt;URL&amp;gt;&#39;&quot;&lt;/code&gt; to specify the URL where the source map can be found. Otherwise UglifyJS assumes HTTP &lt;code&gt;X-SourceMap&lt;/code&gt; is being used and will omit the &lt;code&gt;//# sourceMappingURL=&lt;/code&gt; directive.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs js/file1.js js/file2.js \
         -o foo.min.js -c -m \
         --source-map &quot;root=&#39;http://foo.com/src&#39;,url=&#39;foo.min.js.map&#39;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above will compress and mangle &lt;code&gt;file1.js&lt;/code&gt; and &lt;code&gt;file2.js&lt;/code&gt;, will drop the output in &lt;code&gt;foo.min.js&lt;/code&gt; and the source map in &lt;code&gt;foo.min.js.map&lt;/code&gt;. The source mapping will refer to &lt;code&gt;http://foo.com/src/js/file1.js&lt;/code&gt; and &lt;code&gt;http://foo.com/src/js/file2.js&lt;/code&gt; (in fact it will list &lt;code&gt;http://foo.com/src&lt;/code&gt; as the source map root, and the original files as &lt;code&gt;js/file1.js&lt;/code&gt; and &lt;code&gt;js/file2.js&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Composed source map&lt;/h3&gt; 
&lt;p&gt;When you’re compressing JS code that was output by a compiler such as CoffeeScript, mapping to the JS code won’t be too helpful. Instead, you’d like to map back to the original code (i.e. CoffeeScript). UglifyJS has an option to take an input source map. Assuming you have a mapping from CoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript → compressed JS by mapping every token in the compiled JS to its original location.&lt;/p&gt; 
&lt;p&gt;To use this feature pass &lt;code&gt;--source-map &quot;content=&#39;/path/to/input/source.map&#39;&quot;&lt;/code&gt; or &lt;code&gt;--source-map &quot;content=inline&quot;&lt;/code&gt; if the source map is included inline with the sources.&lt;/p&gt; 
&lt;h2&gt;CLI compress options&lt;/h2&gt; 
&lt;p&gt;You need to pass &lt;code&gt;--compress&lt;/code&gt; (&lt;code&gt;-c&lt;/code&gt;) to enable the compressor. Optionally you can pass a comma-separated list of &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#compress-options&quot;&gt;compress options&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Options are in the form &lt;code&gt;foo=bar&lt;/code&gt;, or just &lt;code&gt;foo&lt;/code&gt; (the latter implies a boolean option that you want to set &lt;code&gt;true&lt;/code&gt;; it’s effectively a shortcut for &lt;code&gt;foo=true&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs file.js -c toplevel,sequences=false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;CLI mangle options&lt;/h2&gt; 
&lt;p&gt;To enable the mangler you need to pass &lt;code&gt;--mangle&lt;/code&gt; (&lt;code&gt;-m&lt;/code&gt;). The following (comma-separated) options are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;eval&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — mangle names visible in scopes where &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;with&lt;/code&gt; are used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;reserved&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;) — when mangling is enabled but you want to prevent certain names from being mangled, you can declare those names with &lt;code&gt;--mangle reserved&lt;/code&gt; — pass a comma-separated list of names. For example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;uglifyjs ... -m reserved=[&#39;$&#39;,&#39;require&#39;,&#39;exports&#39;]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;to prevent the &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;exports&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; names from being changed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CLI mangling property names (&lt;code&gt;--mangle-props&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; THIS WILL PROBABLY BREAK YOUR CODE. Mangling property names is a separate step, different from variable name mangling. Pass &lt;code&gt;--mangle-props&lt;/code&gt; to enable it. It will mangle all properties in the input code with the exception of built in DOM properties and properties in core JavaScript classes. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// example.js
var x = {
    baz_: 0,
    foo_: 1,
    calc: function() {
        return this.foo_ + this.baz_;
    }
};
x.bar_ = 2;
x[&quot;baz_&quot;] = 3;
console.log(x.calc());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mangle all properties (except for JavaScript &lt;code&gt;builtins&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ uglifyjs example.js -c -m --mangle-props
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x={o:0,_:1,l:function(){return this._+this.o}};x.t=2,x.o=3,console.log(x.l());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mangle all properties except for &lt;code&gt;reserved&lt;/code&gt; properties:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ uglifyjs example.js -c -m --mangle-props reserved=[foo_,bar_]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x={o:0,foo_:1,_:function(){return this.foo_+this.o}};x.bar_=2,x.o=3,console.log(x._());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mangle all properties matching a &lt;code&gt;regex&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ uglifyjs example.js -c -m --mangle-props regex=/_$/
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x={o:0,_:1,calc:function(){return this._+this.o}};x.l=2,x.o=3,console.log(x.calc());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Combining mangle properties options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ uglifyjs example.js -c -m --mangle-props regex=/_$/,reserved=[bar_]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var x={o:0,_:1,calc:function(){return this._+this.o}};x.bar_=2,x.o=3,console.log(x.calc());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order for this to be of any use, we avoid mangling standard JS names by default (&lt;code&gt;--mangle-props builtins&lt;/code&gt; to override).&lt;/p&gt; 
&lt;p&gt;A default exclusion file is provided in &lt;code&gt;tools/domprops.json&lt;/code&gt; which should cover most standard JS and DOM properties defined in various browsers. Pass &lt;code&gt;--mangle-props domprops&lt;/code&gt; to disable this feature.&lt;/p&gt; 
&lt;p&gt;A regular expression can be used to define which property names should be mangled. For example, &lt;code&gt;--mangle-props regex=/^_/&lt;/code&gt; will only mangle property names that start with an underscore.&lt;/p&gt; 
&lt;p&gt;When you compress multiple files using this option, in order for them to work together in the end we need to ensure somehow that one property gets mangled to the same name in all of them. For this, pass &lt;code&gt;--name-cache filename.json&lt;/code&gt; and UglifyJS will maintain these mappings in a file which can then be reused. It should be initially empty. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rm -f /tmp/cache.json  # start fresh
$ uglifyjs file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js
$ uglifyjs file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, &lt;code&gt;part1.js&lt;/code&gt; and &lt;code&gt;part2.js&lt;/code&gt; will be consistent with each other in terms of mangled property names.&lt;/p&gt; 
&lt;p&gt;Using the name cache is not necessary if you compress all your files in a single call to UglifyJS.&lt;/p&gt; 
&lt;h3&gt;Mangling unquoted names (&lt;code&gt;--mangle-props keep_quoted&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;Using quoted property name (&lt;code&gt;o[&quot;foo&quot;]&lt;/code&gt;) reserves the property name (&lt;code&gt;foo&lt;/code&gt;) so that it is not mangled throughout the entire script even when used in an unquoted style (&lt;code&gt;o.foo&lt;/code&gt;). Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// stuff.js
var o = {
    &quot;foo&quot;: 1,
    bar: 3
};
o.foo += o.bar;
console.log(o.foo);
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ uglifyjs stuff.js --mangle-props keep_quoted -c -m
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var o={foo:1,o:3};o.foo+=o.o,console.log(o.foo);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Debugging property name mangling&lt;/h3&gt; 
&lt;p&gt;You can also pass &lt;code&gt;--mangle-props debug&lt;/code&gt; in order to mangle property names without completely obscuring them. For example the property &lt;code&gt;o.foo&lt;/code&gt; would mangle to &lt;code&gt;o._$foo$_&lt;/code&gt; with this option. This allows property mangling of a large codebase while still being able to debug the code and identify where mangling is breaking things.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ uglifyjs stuff.js --mangle-props debug -c -m
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var o={_$foo$_:1,_$bar$_:3};o._$foo$_+=o._$bar$_,console.log(o._$foo$_);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pass a custom suffix using &lt;code&gt;--mangle-props debug=XYZ&lt;/code&gt;. This would then mangle &lt;code&gt;o.foo&lt;/code&gt; to &lt;code&gt;o._$foo$XYZ_&lt;/code&gt;. You can change this each time you compile a script to identify how a property got mangled. One technique is to pass a random number on every compile to simulate mangling changing with different inputs (e.g. as you update the input script with new properties), and to help identify mistakes like writing mangled keys to storage.&lt;/p&gt; 
&lt;h1&gt;API Reference&lt;/h1&gt; 
&lt;p&gt;Assuming installation via NPM, you can load UglifyJS in your application like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var UglifyJS = require(&quot;uglify-js&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is a single high level function, &lt;strong&gt;&lt;code&gt;minify(code, options)&lt;/code&gt;&lt;/strong&gt;, which will perform all minification &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#minify-options&quot;&gt;phases&lt;/a&gt; in a configurable manner. By default &lt;code&gt;minify()&lt;/code&gt; will enable the options &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#compress-options&quot;&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#mangle-options&quot;&gt;&lt;code&gt;mangle&lt;/code&gt;&lt;/a&gt;. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var code = &quot;function add(first, second) { return first + second; }&quot;;
var result = UglifyJS.minify(code);
console.log(result.error); // runtime error, or `undefined` if no error
console.log(result.code);  // minified output: function add(n,d){return n+d}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can &lt;code&gt;minify&lt;/code&gt; more than one JavaScript file at a time by using an object for the first argument where the keys are file names and the values are source code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var code = {
    &quot;file1.js&quot;: &quot;function add(first, second) { return first + second; }&quot;,
    &quot;file2.js&quot;: &quot;console.log(add(1 + 2, 3 + 4));&quot;
};
var result = UglifyJS.minify(code);
console.log(result.code);
// function add(d,n){return d+n}console.log(add(3,7));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;toplevel&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var code = {
    &quot;file1.js&quot;: &quot;function add(first, second) { return first + second; }&quot;,
    &quot;file2.js&quot;: &quot;console.log(add(1 + 2, 3 + 4));&quot;
};
var options = { toplevel: true };
var result = UglifyJS.minify(code, options);
console.log(result.code);
// console.log(3+7);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;nameCache&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var options = {
    mangle: {
        toplevel: true,
    },
    nameCache: {}
};
var result1 = UglifyJS.minify({
    &quot;file1.js&quot;: &quot;function add(first, second) { return first + second; }&quot;
}, options);
var result2 = UglifyJS.minify({
    &quot;file2.js&quot;: &quot;console.log(add(1 + 2, 3 + 4));&quot;
}, options);
console.log(result1.code);
// function n(n,r){return n+r}
console.log(result2.code);
// console.log(n(3,7));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may persist the name cache to the file system in the following way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var cacheFileName = &quot;/tmp/cache.json&quot;;
var options = {
    mangle: {
        properties: true,
    },
    nameCache: JSON.parse(fs.readFileSync(cacheFileName, &quot;utf8&quot;))
};
fs.writeFileSync(&quot;part1.js&quot;, UglifyJS.minify({
    &quot;file1.js&quot;: fs.readFileSync(&quot;file1.js&quot;, &quot;utf8&quot;),
    &quot;file2.js&quot;: fs.readFileSync(&quot;file2.js&quot;, &quot;utf8&quot;)
}, options).code, &quot;utf8&quot;);
fs.writeFileSync(&quot;part2.js&quot;, UglifyJS.minify({
    &quot;file3.js&quot;: fs.readFileSync(&quot;file3.js&quot;, &quot;utf8&quot;),
    &quot;file4.js&quot;: fs.readFileSync(&quot;file4.js&quot;, &quot;utf8&quot;)
}, options).code, &quot;utf8&quot;);
fs.writeFileSync(cacheFileName, JSON.stringify(options.nameCache), &quot;utf8&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An example of a combination of &lt;code&gt;minify()&lt;/code&gt; options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var code = {
    &quot;file1.js&quot;: &quot;function add(first, second) { return first + second; }&quot;,
    &quot;file2.js&quot;: &quot;console.log(add(1 + 2, 3 + 4));&quot;
};
var options = {
    toplevel: true,
    compress: {
        global_defs: {
            &quot;@console.log&quot;: &quot;alert&quot;
        },
        passes: 2
    },
    output: {
        beautify: false,
        preamble: &quot;/* uglified */&quot;
    }
};
var result = UglifyJS.minify(code, options);
console.log(result.code);
// /* uglified */
// alert(10);&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To produce warnings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var code = &quot;function f(){ var u; return 2 + 3; }&quot;;
var options = { warnings: true };
var result = UglifyJS.minify(code, options);
console.log(result.error);    // runtime error, `undefined` in this case
console.log(result.warnings); // [ &#39;Dropping unused variable u [0:1,18]&#39; ]
console.log(result.code);     // function f(){return 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An error example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var result = UglifyJS.minify({&quot;foo.js&quot; : &quot;if (0) else console.log(1);&quot;});
console.log(JSON.stringify(result.error));
// {&quot;message&quot;:&quot;Unexpected token: keyword (else)&quot;,&quot;filename&quot;:&quot;foo.js&quot;,&quot;line&quot;:1,&quot;col&quot;:7,&quot;pos&quot;:7}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: unlike &lt;code&gt;uglify-js@2.x&lt;/code&gt;, the &lt;code&gt;3.x&lt;/code&gt; API does not throw errors. To achieve a similar effect one could do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var result = UglifyJS.minify(code, options);
if (result.error) throw result.error;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Minify options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;annotations&lt;/code&gt; — pass &lt;code&gt;false&lt;/code&gt; to ignore all comment annotations and elide them from output. Useful when, for instance, external tools incorrectly applied &lt;code&gt;/*@__PURE__*/&lt;/code&gt; or &lt;code&gt;/*#__PURE__*/&lt;/code&gt;. Pass &lt;code&gt;true&lt;/code&gt; to both compress and retain comment annotations in output to allow for further processing downstream.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;compress&lt;/code&gt; (default: &lt;code&gt;{}&lt;/code&gt;) — pass &lt;code&gt;false&lt;/code&gt; to skip compressing entirely. Pass an object to specify custom &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#compress-options&quot;&gt;compress options&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ie8&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — set to &lt;code&gt;true&lt;/code&gt; to support IE8.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keep_fnames&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; to prevent discarding or mangling of function names. Useful for code relying on &lt;code&gt;Function.prototype.name&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;mangle&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — pass &lt;code&gt;false&lt;/code&gt; to skip mangling names, or pass an object to specify &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#mangle-options&quot;&gt;mangle options&lt;/a&gt; (see below).&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;mangle.properties&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — a subcategory of the mangle option. Pass an object to specify custom &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#mangle-properties-options&quot;&gt;mangle property options&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;nameCache&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;) — pass an empty object &lt;code&gt;{}&lt;/code&gt; or a previously used &lt;code&gt;nameCache&lt;/code&gt; object if you wish to cache mangled variable and property names across multiple invocations of &lt;code&gt;minify()&lt;/code&gt;. Note: this is a read/write property. &lt;code&gt;minify()&lt;/code&gt; will read the name cache state of this object and update it during minification so that it may be reused or externally persisted by the user.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;output&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;) — pass an object if you wish to specify additional &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#output-options&quot;&gt;output options&lt;/a&gt;. The defaults are optimized for best compression.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;parse&lt;/code&gt; (default: &lt;code&gt;{}&lt;/code&gt;) — pass an object if you wish to specify some additional &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#parse-options&quot;&gt;parse options&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sourceMap&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass an object if you wish to specify &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#source-map-options&quot;&gt;source map options&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;toplevel&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — set to &lt;code&gt;true&lt;/code&gt; if you wish to enable top level variable and function name mangling and to drop unused variables and functions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;v8&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — enable workarounds for Chrome &amp;amp; Node.js bugs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;warnings&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; to return compressor warnings in &lt;code&gt;result.warnings&lt;/code&gt;. Use the value &lt;code&gt;&quot;verbose&quot;&lt;/code&gt; for more detailed warnings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;webkit&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — enable workarounds for Safari/WebKit bugs. PhantomJS users should set this option to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Minify options structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;{
    parse: {
        // parse options
    },
    compress: {
        // compress options
    },
    mangle: {
        // mangle options

        properties: {
            // mangle property options
        }
    },
    output: {
        // output options
    },
    sourceMap: {
        // source map options
    },
    nameCache: null, // or specify a name cache object
    toplevel: false,
    ie8: false,
    warnings: false,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Source map options&lt;/h3&gt; 
&lt;p&gt;To generate a source map:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var result = UglifyJS.minify({&quot;file1.js&quot;: &quot;var a = function() {};&quot;}, {
    sourceMap: {
        filename: &quot;out.js&quot;,
        url: &quot;out.js.map&quot;
    }
});
console.log(result.code); // minified output
console.log(result.map);  // source map
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the source map is not saved in a file, it’s just returned in &lt;code&gt;result.map&lt;/code&gt;. The value passed for &lt;code&gt;sourceMap.url&lt;/code&gt; is only used to set &lt;code&gt;//# sourceMappingURL=out.js.map&lt;/code&gt; in &lt;code&gt;result.code&lt;/code&gt;. The value of &lt;code&gt;filename&lt;/code&gt; is only used to set &lt;code&gt;file&lt;/code&gt; attribute (see &lt;a href=&quot;https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k&quot;&gt;the spec&lt;/a&gt;) in source map file.&lt;/p&gt; 
&lt;p&gt;You can set option &lt;code&gt;sourceMap.url&lt;/code&gt; to be &lt;code&gt;&quot;inline&quot;&lt;/code&gt; and source map will be appended to code.&lt;/p&gt; 
&lt;p&gt;You can also specify sourceRoot property to be included in source map:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var result = UglifyJS.minify({&quot;file1.js&quot;: &quot;var a = function() {};&quot;}, {
    sourceMap: {
        root: &quot;http://example.com/src&quot;,
        url: &quot;out.js.map&quot;
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you’re compressing compiled JavaScript and have a source map for it, you can use &lt;code&gt;sourceMap.content&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var result = UglifyJS.minify({&quot;compiled.js&quot;: &quot;compiled code&quot;}, {
    sourceMap: {
        content: &quot;content from compiled.js.map&quot;,
        url: &quot;minified.js.map&quot;
    }
});
// same as before, it returns `code` and `map`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you’re using the &lt;code&gt;X-SourceMap&lt;/code&gt; header instead, you can just omit &lt;code&gt;sourceMap.url&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you wish to reduce file size of the source map, set option &lt;code&gt;sourceMap.names&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt; and all symbol names will be omitted.&lt;/p&gt; 
&lt;h2&gt;Parse options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;bare_returns&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — support top level &lt;code&gt;return&lt;/code&gt; statements&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;html5_comments&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;shebang&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — support &lt;code&gt;#!command&lt;/code&gt; as the first line&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compress options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;annotations&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — Pass &lt;code&gt;false&lt;/code&gt; to disable potentially dropping functions marked as “pure”. A function call is marked as “pure” if a comment annotation &lt;code&gt;/*@__PURE__*/&lt;/code&gt; or &lt;code&gt;/*#__PURE__*/&lt;/code&gt; immediately precedes the call. For example: &lt;code&gt;/*@__PURE__*/foo();&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;arguments&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — replace &lt;code&gt;arguments[index]&lt;/code&gt; with function parameter name whenever possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;arrows&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply optimizations to arrow functions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;assignments&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply optimizations to assignment expressions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;awaits&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply optimizations to &lt;code&gt;await&lt;/code&gt; expressions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;booleans&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — various optimizations for boolean context, for example &lt;code&gt;!!a ? b : c → a ? b : c&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;collapse_vars&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — Collapse single-use non-constant variables, side effects permitting.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;comparisons&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply certain optimizations to binary nodes, e.g. &lt;code&gt;!(a &amp;lt;= b) → a &amp;gt; b&lt;/code&gt;, attempts to negate binary nodes, e.g. &lt;code&gt;a = !b &amp;amp;&amp;amp; !c &amp;amp;&amp;amp; !d &amp;amp;&amp;amp; !e → a=!(b||c||d||e)&lt;/code&gt; etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;conditionals&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply optimizations for &lt;code&gt;if&lt;/code&gt;-s and conditional expressions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dead_code&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — remove unreachable code&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;default_values&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — drop overshadowed default values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;directives&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — remove redundant or non-standard directives&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;drop_console&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Pass &lt;code&gt;true&lt;/code&gt; to discard calls to &lt;code&gt;console.*&lt;/code&gt; functions. If you wish to drop a specific function call such as &lt;code&gt;console.info&lt;/code&gt; and/or retain side effects from function arguments after dropping the function call then use &lt;code&gt;pure_funcs&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;drop_debugger&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — remove &lt;code&gt;debugger;&lt;/code&gt; statements&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;evaluate&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — Evaluate expression for shorter constant representation. Pass &lt;code&gt;&quot;eager&quot;&lt;/code&gt; to always replace function calls whenever possible, or a positive integer to specify an upper bound for each individual evaluation in number of characters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;expression&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Pass &lt;code&gt;true&lt;/code&gt; to preserve completion values from terminal statements without &lt;code&gt;return&lt;/code&gt;, e.g. in bookmarklets.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;functions&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — convert declarations from &lt;code&gt;var&lt;/code&gt; to &lt;code&gt;function&lt;/code&gt; whenever possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;global_defs&lt;/code&gt; (default: &lt;code&gt;{}&lt;/code&gt;) — see &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#conditional-compilation&quot;&gt;conditional compilation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;hoist_exports&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — hoist &lt;code&gt;export&lt;/code&gt; statements to facilitate various &lt;code&gt;compress&lt;/code&gt; and &lt;code&gt;mangle&lt;/code&gt; optimizations.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;hoist_funs&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — hoist function declarations&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;hoist_props&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — hoist properties from constant object and array literals into regular variables subject to a set of constraints. For example: &lt;code&gt;var o={p:1, q:2}; f(o.p, o.q);&lt;/code&gt; is converted to &lt;code&gt;f(1, 2);&lt;/code&gt;. Note: &lt;code&gt;hoist_props&lt;/code&gt; works best with &lt;code&gt;toplevel&lt;/code&gt; and &lt;code&gt;mangle&lt;/code&gt; enabled, alongside with &lt;code&gt;compress&lt;/code&gt; option &lt;code&gt;passes&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; or higher.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;hoist_vars&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — hoist &lt;code&gt;var&lt;/code&gt; declarations (this is &lt;code&gt;false&lt;/code&gt; by default because it seems to increase the size of the output in general)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;if_return&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — optimizations for if/return and if/continue&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;imports&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — drop unreferenced import symbols when used with &lt;code&gt;unused&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;inline&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — inline calls to function with simple/&lt;code&gt;return&lt;/code&gt; statement:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;false&lt;/code&gt; — same as &lt;code&gt;0&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;0&lt;/code&gt; — disabled inlining&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;1&lt;/code&gt; — inline simple functions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;2&lt;/code&gt; — inline functions with arguments&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;3&lt;/code&gt; — inline functions with arguments and variables&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;true&lt;/code&gt; — same as &lt;code&gt;3&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;join_vars&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — join consecutive &lt;code&gt;var&lt;/code&gt; statements&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keep_fargs&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — discard unused function arguments except when unsafe to do so, e.g. code which relies on &lt;code&gt;Function.prototype.length&lt;/code&gt;. Pass &lt;code&gt;true&lt;/code&gt; to always retain function arguments.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keep_infinity&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Pass &lt;code&gt;true&lt;/code&gt; to prevent &lt;code&gt;Infinity&lt;/code&gt; from being compressed into &lt;code&gt;1/0&lt;/code&gt;, which may cause performance issues on Chrome.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;loops&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — optimizations for &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; and &lt;code&gt;for&lt;/code&gt; loops when we can statically determine the condition.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;merge_vars&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — combine and reuse variables.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;negate_iife&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — negate “Immediately-Called Function Expressions” where the return value is discarded, to avoid the parens that the code generator would insert.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;objects&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — compact duplicate keys in object literals.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;passes&lt;/code&gt; (default: &lt;code&gt;1&lt;/code&gt;) — The maximum number of times to run compress. In some cases more than one pass leads to further compressed code. Keep in mind more passes will take more time.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;properties&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — rewrite property access using the dot notation, for example &lt;code&gt;foo[&quot;bar&quot;] → foo.bar&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;pure_funcs&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;) — You can pass an array of names and UglifyJS will assume that those functions do not produce side effects. DANGER: will not check if the name is redefined in scope. An example case here, for instance &lt;code&gt;var q = Math.floor(a/b)&lt;/code&gt;. If variable &lt;code&gt;q&lt;/code&gt; is not used elsewhere, UglifyJS will drop it, but will still keep the &lt;code&gt;Math.floor(a/b)&lt;/code&gt;, not knowing what it does. You can pass &lt;code&gt;pure_funcs: [ &#39;Math.floor&#39; ]&lt;/code&gt; to let it know that this function won’t produce any side effect, in which case the whole statement would get discarded. The current implementation adds some overhead (compression will be slower). Make sure symbols under &lt;code&gt;pure_funcs&lt;/code&gt; are also under &lt;code&gt;mangle.reserved&lt;/code&gt; to avoid mangling.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;pure_getters&lt;/code&gt; (default: &lt;code&gt;&quot;strict&quot;&lt;/code&gt;) — If you pass &lt;code&gt;true&lt;/code&gt; for this, UglifyJS will assume that object property access (e.g. &lt;code&gt;foo.bar&lt;/code&gt; or &lt;code&gt;foo[&quot;bar&quot;]&lt;/code&gt;) doesn’t have any side effects. Specify &lt;code&gt;&quot;strict&quot;&lt;/code&gt; to treat &lt;code&gt;foo.bar&lt;/code&gt; as side-effect-free only when &lt;code&gt;foo&lt;/code&gt; is certain to not throw, i.e. not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;reduce_funcs&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — Allows single-use functions to be inlined as function expressions when permissible allowing further optimization. Enabled by default. Option depends on &lt;code&gt;reduce_vars&lt;/code&gt; being enabled. Some code runs faster in the Chrome V8 engine if this option is disabled. Does not negatively impact other major browsers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;reduce_vars&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — Improve optimization on variables assigned with and used as constant values.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;rests&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply optimizations to rest parameters&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sequences&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — join consecutive simple statements using the comma operator. May be set to a positive integer to specify the maximum number of consecutive comma sequences that will be generated. If this option is set to &lt;code&gt;true&lt;/code&gt; then the default &lt;code&gt;sequences&lt;/code&gt; limit is &lt;code&gt;200&lt;/code&gt;. Set option to &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; to disable. The smallest &lt;code&gt;sequences&lt;/code&gt; length is &lt;code&gt;2&lt;/code&gt;. A &lt;code&gt;sequences&lt;/code&gt; value of &lt;code&gt;1&lt;/code&gt; is grandfathered to be equivalent to &lt;code&gt;true&lt;/code&gt; and as such means &lt;code&gt;200&lt;/code&gt;. On rare occasions the default sequences limit leads to very slow compress times in which case a value of &lt;code&gt;20&lt;/code&gt; or less is recommended.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;side_effects&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — drop extraneous code which does not affect outcome of runtime execution.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;spreads&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — flatten spread expressions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;strings&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — compact string concatenations.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;switches&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — de-duplicate and remove unreachable &lt;code&gt;switch&lt;/code&gt; branches&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;templates&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — compact template literals by embedding expressions and/or converting to string literals, e.g. &lt;code&gt; `foo ${42}` → &quot;foo 42&quot;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;top_retain&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;) — prevent specific toplevel functions and variables from &lt;code&gt;unused&lt;/code&gt; removal (can be array, comma-separated, RegExp or function. Implies &lt;code&gt;toplevel&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;toplevel&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — drop unreferenced functions (&lt;code&gt;&quot;funcs&quot;&lt;/code&gt;) and/or variables (&lt;code&gt;&quot;vars&quot;&lt;/code&gt;) in the top level scope (&lt;code&gt;false&lt;/code&gt; by default, &lt;code&gt;true&lt;/code&gt; to drop both unreferenced functions and variables)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;typeofs&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — Transforms &lt;code&gt;typeof foo == &quot;undefined&quot;&lt;/code&gt; into &lt;code&gt;foo === void 0&lt;/code&gt;. Note: recommend to set this value to &lt;code&gt;false&lt;/code&gt; for IE10 and earlier versions due to known issues.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — apply “unsafe” transformations (discussion below)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe_comps&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — compress expressions like &lt;code&gt;a &amp;lt;= b&lt;/code&gt; assuming none of the operands can be (coerced to) &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe_Function&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — compress and mangle &lt;code&gt;Function(args, code)&lt;/code&gt; when both &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;code&lt;/code&gt; are string literals.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe_math&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — optimize numerical expressions like &lt;code&gt;2 * x * 3&lt;/code&gt; into &lt;code&gt;6 * x&lt;/code&gt;, which may give imprecise floating point results.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe_proto&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — optimize expressions like &lt;code&gt;Array.prototype.slice.call(a)&lt;/code&gt; into &lt;code&gt;[].slice.call(a)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe_regexp&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — enable substitutions of variables with &lt;code&gt;RegExp&lt;/code&gt; values the same way as if they are constants.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unsafe_undefined&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — substitute &lt;code&gt;void 0&lt;/code&gt; if there is a variable named &lt;code&gt;undefined&lt;/code&gt; in scope (variable name will be mangled, typically reduced to a single character)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;unused&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — drop unreferenced functions and variables (simple direct variable assignments do not count as references unless set to &lt;code&gt;&quot;keep_assign&quot;&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;varify&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — convert block-scoped declaractions into &lt;code&gt;var&lt;/code&gt; whenever safe to do so&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;yields&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — apply optimizations to &lt;code&gt;yield&lt;/code&gt; expressions&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mangle options&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;eval&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Pass &lt;code&gt;true&lt;/code&gt; to mangle names visible in scopes where &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;with&lt;/code&gt; are used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;reserved&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;) — Pass an array of identifiers that should be excluded from mangling. Example: &lt;code&gt;[&quot;foo&quot;, &quot;bar&quot;]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;toplevel&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Pass &lt;code&gt;true&lt;/code&gt; to mangle names declared in the top level scope.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// test.js
var globalVar;
function funcName(firstLongName, anotherLongName) {
    var myVariable = firstLongName +  anotherLongName;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var code = fs.readFileSync(&quot;test.js&quot;, &quot;utf8&quot;);

UglifyJS.minify(code).code;
// &#39;function funcName(a,n){}var globalVar;&#39;

UglifyJS.minify(code, { mangle: { reserved: [&#39;firstLongName&#39;] } }).code;
// &#39;function funcName(firstLongName,a){}var globalVar;&#39;

UglifyJS.minify(code, { mangle: { toplevel: true } }).code;
// &#39;function n(n,a){}var a;&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Mangle properties options&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;builtins&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Use &lt;code&gt;true&lt;/code&gt; to allow the mangling of builtin DOM properties. Not recommended to override this setting.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;debug&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Mangle names with the original name still present. Pass an empty string &lt;code&gt;&quot;&quot;&lt;/code&gt; to enable, or a non-empty string to set the debug suffix.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keep_quoted&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — Only mangle unquoted property names.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;regex&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;) — Pass a RegExp literal to only mangle property names matching the regular expression.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;reserved&lt;/code&gt; (default: &lt;code&gt;[]&lt;/code&gt;) — Do not mangle property names listed in the &lt;code&gt;reserved&lt;/code&gt; array.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Output options&lt;/h2&gt; 
&lt;p&gt;The code generator tries to output shortest code possible by default. In case you want beautified output, pass &lt;code&gt;--beautify&lt;/code&gt; (&lt;code&gt;-b&lt;/code&gt;). Optionally you can pass additional arguments that control the code output:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;annotations&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; to retain comment annotations &lt;code&gt;/*@__PURE__*/&lt;/code&gt; or &lt;code&gt;/*#__PURE__*/&lt;/code&gt;, otherwise they will be discarded even if &lt;code&gt;comments&lt;/code&gt; is set.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ascii_only&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — escape Unicode characters in strings and regexps (affects directives with non-ascii characters becoming invalid)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;beautify&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — whether to actually beautify the output. Passing &lt;code&gt;-b&lt;/code&gt; will set this to true, but you might need to pass &lt;code&gt;-b&lt;/code&gt; even when you want to generate minified code, in order to specify additional arguments, so you can use &lt;code&gt;-b beautify=false&lt;/code&gt; to override it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;braces&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — always insert braces in &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;with&lt;/code&gt; statements, even if their body is a single statement.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;comments&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;&quot;all&quot;&lt;/code&gt; to preserve all comments, &lt;code&gt;&quot;some&quot;&lt;/code&gt; to preserve multi-line comments that contain &lt;code&gt;@cc_on&lt;/code&gt;, &lt;code&gt;@license&lt;/code&gt;, or &lt;code&gt;@preserve&lt;/code&gt; (case-insensitive), a regular expression string (e.g. &lt;code&gt;/^!/&lt;/code&gt;), or a function which returns &lt;code&gt;boolean&lt;/code&gt;, e.g.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function(node, comment) {
    return comment.value.indexOf(&quot;@type &quot; + node.TYPE) &amp;gt;= 0;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;galio&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — enable workarounds for ANT Galio bugs&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;indent_level&lt;/code&gt; (default: &lt;code&gt;4&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;indent_start&lt;/code&gt; (default: &lt;code&gt;0&lt;/code&gt;) — prefix all lines by that many spaces&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;inline_script&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — escape HTML comments and the slash in occurrences of &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; in strings&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;keep_quoted_props&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — when turned on, prevents stripping quotes from property names in object literals.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;max_line_len&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — maximum line length (for uglified code)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;preamble&lt;/code&gt; (default: &lt;code&gt;null&lt;/code&gt;) — when passed it must be a string and it will be prepended to the output literally. The source map will adjust for this text. Can be used to insert a comment containing licensing information, for example.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;preserve_line&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; to retain line numbering on a best effort basis.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;quote_keys&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; to quote all keys in literal objects&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;quote_style&lt;/code&gt; (default: &lt;code&gt;0&lt;/code&gt;) — preferred quote style for strings (affects quoted property names and directives as well):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;0&lt;/code&gt; — prefers double quotes, switches to single quotes when there are more double quotes in the string itself. &lt;code&gt;0&lt;/code&gt; is best for gzip size.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;1&lt;/code&gt; — always use single quotes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;2&lt;/code&gt; — always use double quotes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;3&lt;/code&gt; — always use the original quotes&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;semicolons&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — separate statements with semicolons. If you pass &lt;code&gt;false&lt;/code&gt; then whenever possible we will use a newline instead of a semicolon, leading to more readable output of uglified code (size before gzip could be smaller; size after gzip insignificantly larger).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;shebang&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) — preserve shebang &lt;code&gt;#!&lt;/code&gt; in preamble (bash scripts)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;width&lt;/code&gt; (default: &lt;code&gt;80&lt;/code&gt;) — only takes effect when beautification is on, this specifies an (orientative) line width that the beautifier will try to obey. It refers to the width of the line text (excluding indentation). It doesn’t work very well currently, but it does make the code generated by UglifyJS more readable.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;wrap_iife&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) — pass &lt;code&gt;true&lt;/code&gt; to wrap immediately invoked function expressions. See &lt;a href=&quot;https://github.com/mishoo/UglifyJS/issues/640&quot;&gt;#640&lt;/a&gt; for more details.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Miscellaneous&lt;/h1&gt; 
&lt;h3&gt;Keeping copyright notices or other comments&lt;/h3&gt; 
&lt;p&gt;You can pass &lt;code&gt;--comments&lt;/code&gt; to retain certain comments in the output. By default it will keep JSDoc-style comments that contain “@preserve”, “@license” or “@cc_on” (conditional compilation for IE). You can pass &lt;code&gt;--comments all&lt;/code&gt; to keep all the comments, or a valid JavaScript regexp to keep only comments that match this regexp. For example &lt;code&gt;--comments /^!/&lt;/code&gt; will keep comments like &lt;code&gt;/*! Copyright Notice */&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note, however, that there might be situations where comments are lost. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function f() {
    /** @preserve Foo Bar */
    function g() {
        // this function is never called
    }
    return something();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Even though it has “@preserve”, the comment will be lost because the inner function &lt;code&gt;g&lt;/code&gt; (which is the AST node to which the comment is attached to) is discarded by the compressor as not referenced.&lt;/p&gt; 
&lt;p&gt;The safest comments where to place copyright information (or other info that needs to be kept in the output) are comments attached to toplevel nodes.&lt;/p&gt; 
&lt;h3&gt;The &lt;code&gt;unsafe&lt;/code&gt; &lt;code&gt;compress&lt;/code&gt; option&lt;/h3&gt; 
&lt;p&gt;It enables some transformations that &lt;em&gt;might&lt;/em&gt; break code logic in certain contrived cases, but should be fine for most code. You might want to try it on your own code, it should reduce the minified size. Here’s what happens when this flag is on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;new Array(1, 2, 3)&lt;/code&gt; or &lt;code&gt;Array(1, 2, 3)&lt;/code&gt; → &lt;code&gt;[ 1, 2, 3 ]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;new Object()&lt;/code&gt; → &lt;code&gt;{}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;String(exp)&lt;/code&gt; or &lt;code&gt;exp.toString()&lt;/code&gt; → &lt;code&gt;&quot;&quot; + exp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;new Object/RegExp/Function/Error/Array (...)&lt;/code&gt; → we discard the &lt;code&gt;new&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Conditional compilation&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;--define&lt;/code&gt; (&lt;code&gt;-d&lt;/code&gt;) switch in order to declare global variables that UglifyJS will assume to be constants (unless defined in scope). For example if you pass &lt;code&gt;--define DEBUG=false&lt;/code&gt; then, coupled with dead code removal UglifyJS will discard the following from the output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if (DEBUG) {
    console.log(&quot;debug stuff&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can specify nested constants in the form of &lt;code&gt;--define env.DEBUG=false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;UglifyJS will warn about the condition being always false and about dropping unreachable code; for now there is no option to turn off only this specific warning, you can pass &lt;code&gt;warnings=false&lt;/code&gt; to turn off &lt;em&gt;all&lt;/em&gt; warnings.&lt;/p&gt; 
&lt;p&gt;Another way of doing that is to declare your globals as constants in a separate file and include it into the build. For example you can have a &lt;code&gt;build/defines.js&lt;/code&gt; file with the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var DEBUG = false;
var PRODUCTION = true;
// etc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and build your code like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs build/defines.js js/foo.js js/bar.js... -c
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UglifyJS will notice the constants and, since they cannot be altered, it will evaluate references to them to the value itself and drop unreachable code as usual. The build will contain the &lt;code&gt;const&lt;/code&gt; declarations if you use them. If you are targeting &amp;lt; ES6 environments which does not support &lt;code&gt;const&lt;/code&gt;, using &lt;code&gt;var&lt;/code&gt; with &lt;code&gt;reduce_vars&lt;/code&gt; (enabled by default) should suffice.&lt;/p&gt; 
&lt;h3&gt;Conditional compilation API&lt;/h3&gt; 
&lt;p&gt;You can also use conditional compilation via the programmatic API. With the difference that the property name is &lt;code&gt;global_defs&lt;/code&gt; and is a compressor property:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var result = UglifyJS.minify(fs.readFileSync(&quot;input.js&quot;, &quot;utf8&quot;), {
    compress: {
        dead_code: true,
        global_defs: {
            DEBUG: false
        }
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To replace an identifier with an arbitrary non-constant expression it is necessary to prefix the &lt;code&gt;global_defs&lt;/code&gt; key with &lt;code&gt;&quot;@&quot;&lt;/code&gt; to instruct UglifyJS to parse the value as an expression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;UglifyJS.minify(&quot;alert(&#39;hello&#39;);&quot;, {
    compress: {
        global_defs: {
            &quot;@alert&quot;: &quot;console.log&quot;
        }
    }
}).code;
// returns: &#39;console.log(&quot;hello&quot;);&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Otherwise it would be replaced as string literal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;UglifyJS.minify(&quot;alert(&#39;hello&#39;);&quot;, {
    compress: {
        global_defs: {
            &quot;alert&quot;: &quot;console.log&quot;
        }
    }
}).code;
// returns: &#39;&quot;console.log&quot;(&quot;hello&quot;);&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using native Uglify AST with &lt;code&gt;minify()&lt;/code&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// example: parse only, produce native Uglify AST

var result = UglifyJS.minify(code, {
    parse: {},
    compress: false,
    mangle: false,
    output: {
        ast: true,
        code: false  // optional - faster if false
    }
});

// result.ast contains native Uglify AST
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// example: accept native Uglify AST input and then compress and mangle
//          to produce both code and native AST.

var result = UglifyJS.minify(ast, {
    compress: {},
    mangle: {},
    output: {
        ast: true,
        code: true  // optional - faster if false
    }
});

// result.ast contains native Uglify AST
// result.code contains the minified code in string form.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Working with Uglify AST&lt;/h3&gt; 
&lt;p&gt;Transversal and transformation of the native AST can be performed through &lt;a href=&quot;https://github.com/mishoo/UglifyJS/raw/master/lib/ast.js&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/mishoo/UglifyJS/raw/master/lib/transform.js&quot;&gt;&lt;code&gt;TreeTransformer&lt;/code&gt;&lt;/a&gt; respectively.&lt;/p&gt; 
&lt;h3&gt;ESTree / SpiderMonkey AST&lt;/h3&gt; 
&lt;p&gt;UglifyJS has its own abstract syntax tree format; for &lt;a href=&quot;http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/&quot;&gt;practical reasons&lt;/a&gt; we can’t easily change to using the SpiderMonkey AST internally. However, UglifyJS now has a converter which can import a SpiderMonkey AST.&lt;/p&gt; 
&lt;p&gt;For example &lt;a href=&quot;https://github.com/ternjs/acorn&quot;&gt;Acorn&lt;/a&gt; is a super-fast parser that produces a SpiderMonkey AST. It has a small CLI utility that parses one file and dumps the AST in JSON on the standard output. To use UglifyJS to mangle and compress that:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;acorn file.js | uglifyjs -p spidermonkey -m -c
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;-p spidermonkey&lt;/code&gt; option tells UglifyJS that all input files are not JavaScript, but JS code described in SpiderMonkey AST in JSON. Therefore we don’t use our own parser in this case, but just transform that AST into our internal AST.&lt;/p&gt; 
&lt;h3&gt;Use Acorn for parsing&lt;/h3&gt; 
&lt;p&gt;More for fun, I added the &lt;code&gt;-p acorn&lt;/code&gt; option which will use Acorn to do all the parsing. If you pass this option, UglifyJS will &lt;code&gt;require(&quot;acorn&quot;)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Acorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but converting the SpiderMonkey tree that Acorn produces takes another 150ms so in total it’s a bit more than just using UglifyJS’s own parser.&lt;/p&gt; 
&lt;h3&gt;Uglify Fast Minify Mode&lt;/h3&gt; 
&lt;p&gt;It’s not well known, but whitespace removal and symbol mangling accounts for 95% of the size reduction in minified code for most JavaScript - not elaborate code transforms. One can simply disable &lt;code&gt;compress&lt;/code&gt; to speed up Uglify builds by 3 to 5 times.&lt;/p&gt; 
&lt;p&gt;| d3.js | minify size | gzip size | minify time (seconds) | | — | —: | —: | —: | | original | 511,371 | 119,932 | - | | uglify-js@3.13.0 mangle=false, compress=false | 363,988 | 95,695 | 0.56 | | uglify-js@3.13.0 mangle=true, compress=false | 253,305 | 81,281 | 0.99 | | uglify-js@3.13.0 mangle=true, compress=true | 244,436 | 79,854 | 5.30 |&lt;/p&gt; 
&lt;p&gt;To enable fast minify mode from the CLI use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uglifyjs file.js -m
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable fast minify mode with the API use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;UglifyJS.minify(code, { compress: false, mangle: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Source maps and debugging&lt;/h3&gt; 
&lt;p&gt;Various &lt;code&gt;compress&lt;/code&gt; transforms that simplify, rearrange, inline and remove code are known to have an adverse effect on debugging with source maps. This is expected as code is optimized and mappings are often simply not possible as some code no longer exists. For highest fidelity in source map debugging disable the Uglify &lt;code&gt;compress&lt;/code&gt; option and just use &lt;code&gt;mangle&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Compiler assumptions&lt;/h3&gt; 
&lt;p&gt;To allow for better optimizations, the compiler makes various assumptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The code does not rely on preserving its runtime performance characteristics. Typically uglified code will run faster due to less instructions and easier inlining, but may be slower on rare occasions for a specific platform, e.g. see &lt;a href=&quot;https://raw.githubusercontent.com/mishoo/UglifyJS/master/#compress-options&quot;&gt;&lt;code&gt;reduce_funcs&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.toString()&lt;/code&gt; and &lt;code&gt;.valueOf()&lt;/code&gt; don’t have side effects, and for built-in objects they have not been overridden.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;Infinity&lt;/code&gt; have not been externally redefined.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;arguments.callee&lt;/code&gt;, &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;Function.prototype.caller&lt;/code&gt; are not used.&lt;/li&gt; 
 &lt;li&gt;The code doesn’t expect the contents of &lt;code&gt;Function.prototype.toString()&lt;/code&gt; or &lt;code&gt;Error.prototype.stack&lt;/code&gt; to be anything in particular.&lt;/li&gt; 
 &lt;li&gt;Getting and setting properties on a plain object does not cause other side effects (using &lt;code&gt;.watch()&lt;/code&gt; or &lt;code&gt;Proxy&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Object properties can be added, removed and modified (not prevented with &lt;code&gt;Object.defineProperty()&lt;/code&gt;, &lt;code&gt;Object.defineProperties()&lt;/code&gt;, &lt;code&gt;Object.freeze()&lt;/code&gt;, &lt;code&gt;Object.preventExtensions()&lt;/code&gt; or &lt;code&gt;Object.seal()&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Earlier versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;({
    p: 42,
    get p() {},
});
// SyntaxError: Object literal may not have data and accessor property with
//              the same name
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Iteration order of keys over an object which contains spread syntax in later versions of Chrome and Node.js may be altered.&lt;/li&gt; 
 &lt;li&gt;When &lt;code&gt;toplevel&lt;/code&gt; is enabled, UglifyJS effectively assumes input code is wrapped within &lt;code&gt;function(){ ... }&lt;/code&gt;, thus forbids aliasing of declared global variables: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;A = &quot;FAIL&quot;;
var B = &quot;FAIL&quot;;
// can be `global`, `self`, `window` etc.
var top = function() {
    return this;
}();
// &quot;PASS&quot;
top.A = &quot;PASS&quot;;
console.log(A);
// &quot;FAIL&quot; after compress and/or mangle
top.B = &quot;PASS&quot;;
console.log(B);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Use of &lt;code&gt;arguments&lt;/code&gt; alongside destructuring as function parameters, e.g. &lt;code&gt;function({}, arguments) {}&lt;/code&gt; will result in &lt;code&gt;SyntaxError&lt;/code&gt; in earlier versions of Chrome and Node.js - UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Earlier versions of Chrome and Node.js will throw &lt;code&gt;ReferenceError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a;
try {
    throw 42;
} catch ({
    [a]: b,
    // ReferenceError: a is not defined
}) {
    let a;
}
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Later versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;a =&amp;gt; {
    let a;
};
// SyntaxError: Identifier &#39;a&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Later versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {
    // ...
} catch ({ message: a }) {
    var a;
}
// SyntaxError: Identifier &#39;a&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Some versions of Chrome and Node.js will throw &lt;code&gt;ReferenceError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(((a, b = function() {
    return a;
    // ReferenceError: a is not defined
}()) =&amp;gt; b)());
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Some arithmetic operations with &lt;code&gt;BigInt&lt;/code&gt; may throw &lt;code&gt;TypeError&lt;/code&gt;: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;1n + 1;
// TypeError: can&#39;t convert BigInt to number
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Some versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(String.raw`\uFo`);
// SyntaxError: Invalid Unicode escape sequence
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Some versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;try {} catch (e) {
    for (var e of []);
}
// SyntaxError: Identifier &#39;e&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Some versions of Chrome and Node.js will give incorrect results with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log({
    ...{
        set 42(v) {},
        42: &quot;PASS&quot;,
    },
});
// Expected: { &#39;42&#39;: &#39;PASS&#39; }
// Actual:   { &#39;42&#39;: undefined }
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Later versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var await;
async function f() {
    class A {
        static p = await;
    }
}
// SyntaxError: Unexpected reserved word
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Later versions of JavaScript will throw &lt;code&gt;SyntaxError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var async;
for (async of []);
// SyntaxError: The left-hand side of a for-of loop may not be &#39;async&#39;.
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Later versions of Chrome and Node.js will give incorrect results with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log({
    ...console,
    get 42() {
        return &quot;FAIL&quot;;
    },
    [42]: &quot;PASS&quot;,
}[42]);
// Expected: &quot;PASS&quot;
// Actual:   &quot;FAIL&quot;
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
 &lt;li&gt;Earlier versions of JavaScript will throw &lt;code&gt;TypeError&lt;/code&gt; with the following: &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;(function() {
    {
        const a = &quot;foo&quot;;
    }
    {
        const a = &quot;bar&quot;;
    }
})();
// TypeError: const &#39;a&#39; has already been declared
&lt;/code&gt;&lt;/pre&gt; UglifyJS may modify the input which in turn may suppress those errors.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>tannerlinsley/react-table</title>
      <link>https://github.com/tannerlinsley/react-table</link>
      <description>&lt;p&gt;⚛️ Hooks for building fast and extendable tables and datagrids for React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/tannerlinsley/react-table/raw/master/media/repo-dark.png&quot; alt=&quot;React Table Header&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Hooks for building &lt;strong&gt;lightweight, fast and extendable datagrids&lt;/strong&gt; for React&lt;/p&gt; 
&lt;a href=&quot;https://twitter.com/intent/tweet?button_hashtag=TanStack&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;#TanStack&quot; src=&quot;https://img.shields.io/twitter/url?color=%2308a0e9&amp;amp;label=%23TanStack&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fbutton_hashtag%3DTanStack&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://github.com/tannerlinsley/react-table/actions?table=workflow%3A%22react-table+tests%22&quot;&gt; &lt;img src=&quot;https://github.com/tannerlinsley/react-table/workflows/react-table%20tests/badge.svg?sanitize=true&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://npmjs.com/package/react-table&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/npm/dm/react-table.svg?sanitize=true&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://bundlephobia.com/result?p=react-table@latest&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://badgen.net/bundlephobia/minzip/react-table@latest&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://raw.githubusercontent.com/tannerlinsley/react-table/master/#badge&quot;&gt; &lt;img alt=&quot;semantic-release&quot; src=&quot;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://github.com/tannerlinsley/react-table/discussions&quot;&gt; &lt;img alt=&quot;Join the discussion on Github&quot; src=&quot;https://img.shields.io/badge/Github%20Discussions%20%26%20Support-Chat%20now!-blue&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://github.com/tannerlinsley/react-table&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/github/stars/tannerlinsley/react-table.svg?style=social&amp;amp;label=Star&quot;&gt; &lt;/a&gt;
&lt;a href=&quot;https://twitter.com/tannerlinsley&quot; target=&quot;\_parent&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://img.shields.io/twitter/follow/tannerlinsley.svg?style=social&amp;amp;label=Follow&quot;&gt; &lt;/a&gt; 
&lt;p&gt;Enjoy this library? Try them all! &lt;a href=&quot;https://github.com/tannerlinsley/react-query&quot;&gt;React Query&lt;/a&gt;, &lt;a href=&quot;https://github.com/tannerlinsley/react-form&quot;&gt;React Form&lt;/a&gt;, &lt;a href=&quot;https://github.com/tannerlinsley/react-charts&quot;&gt;React Charts&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Visit &lt;a href=&quot;https://react-table.tanstack.com&quot;&gt;react-table.tanstack.com&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt; 
&lt;h2&gt;Quick Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lightweight (5kb - 14kb+ depending on features used and tree-shaking)&lt;/li&gt; 
 &lt;li&gt;Headless (100% customizable, Bring-your-own-UI)&lt;/li&gt; 
 &lt;li&gt;Auto out of the box, fully controllable API&lt;/li&gt; 
 &lt;li&gt;Sorting (Multi and Stable)&lt;/li&gt; 
 &lt;li&gt;Filters&lt;/li&gt; 
 &lt;li&gt;Pivoting &amp;amp; Aggregation&lt;/li&gt; 
 &lt;li&gt;Row Selection&lt;/li&gt; 
 &lt;li&gt;Row Expansion&lt;/li&gt; 
 &lt;li&gt;Column Ordering&lt;/li&gt; 
 &lt;li&gt;Animatable&lt;/li&gt; 
 &lt;li&gt;Virtualizable&lt;/li&gt; 
 &lt;li&gt;Resizable&lt;/li&gt; 
 &lt;li&gt;Server-side/controlled data/state&lt;/li&gt; 
 &lt;li&gt;Extensible via hook-based plugin system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/sponsors/tannerlinsley/&quot;&gt;Become a Sponsor&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Previous Versions&lt;/h2&gt; 
&lt;h3&gt;Version 6&lt;/h3&gt; 
&lt;p&gt;v6 is a great library and while it is still available to install and use, I am no longer offering any long-term support for it. If you intend to keep using v6, I recommend maintaining your own fork of the library and keeping it up to date for your version of React.&lt;/p&gt; 
&lt;h4&gt;Where are the docs for the older v6 version?&lt;/h4&gt; 
&lt;p&gt;Please &lt;a href=&quot;https://github.com/tannerlinsley/react-table/tree/v6&quot;&gt;visit the v6 branch&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;I want to migrate from v6 to v7. How do I do that?&lt;/h4&gt; 
&lt;p&gt;The differences between the 2 versions are incredibly massive. Unfortunately, I cannot write a one-to-one upgrade guide for any of v6’s API, simply because much of it is irrelevant with v7’s headless approach. The best approach for migrating to v7 is to learn its API by reading the documentation and then following some of the examples to begin building your own table component.&lt;/p&gt; 
&lt;p&gt;In case you would need to have both v6 and v7 in one app during the migration process (large codebase, complex use cases), you can either (1) fork and maintain your own local version of React Table v6 or (2) install the &lt;a href=&quot;https://www.npmjs.com/package/react-table-6&quot;&gt;&lt;code&gt;react-table-6&lt;/code&gt; alias package&lt;/a&gt; for use alongside the &lt;code&gt;react-table&lt;/code&gt; package.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mui-org/material-ui</title>
      <link>https://github.com/mui-org/material-ui</link>
      <description>&lt;p&gt;Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with Material Design.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://material-ui.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;150&quot; src=&quot;https://material-ui.com/static/logo.svg?sanitize=true&quot; alt=&quot;Material-UI logo&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;Material-UI&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;Quickly build beautiful &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; apps. Material-UI is a simple and customizable component library to build faster, beautiful, and more accessible React applications. Follow your own design system, or start with &lt;a href=&quot;https://material.io/design/introduction/&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mui-org/material-ui/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@material-ui/core/latest.svg?sanitize=true&quot; alt=&quot;npm latest package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@material-ui/core/next.svg?sanitize=true&quot; alt=&quot;npm next package&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@material-ui/core.svg?sanitize=true&quot; alt=&quot;npm downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.circleci.com/pipelines/github/mui-org/material-ui?branch=next&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;CircleCI&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/mui-org/material-ui/branch/next&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/mui-org/material-ui/next.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/MaterialUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/MaterialUI.svg?label=follow+Material-UI&quot; alt=&quot;Follow on Twitter&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://dependabot.com&quot;&gt;&lt;img src=&quot;https://api.dependabot.com/badges/status?host=github&amp;amp;repo=mui-org/material-ui&quot; alt=&quot;Dependabot Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://isitmaintained.com/project/mui-org/material-ui&quot; title=&quot;Average time to resolve an issue&quot;&gt;&lt;img src=&quot;https://isitmaintained.com/badge/resolution/mui-org/material-ui.svg?sanitize=true&quot; alt=&quot;Average time to resolve an issue&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.material-ui.com/project/material-ui-docs&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/material-ui-docs/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/material-ui&quot; alt=&quot;Open Collective backers and sponsors&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Material-UI is available as an &lt;a href=&quot;https://www.npmjs.com/package/@material-ui/core&quot;&gt;npm package&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://material-ui.com/&quot;&gt;Stable channel v4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @material-ui/core

// with yarn
yarn add @material-ui/core
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⚠️ All ongoing work has moved to v5. The development of v4 is limited to important bug fixes, security patches and easing the upgrade path to v5.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://next.material-ui.com/&quot;&gt;Alpha channel v5&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;// with npm
npm install @material-ui/core@next @emotion/react @emotion/styled

// with yarn
yarn add @material-ui/core@next @emotion/react @emotion/styled
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Older versions&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v3.material-ui.com/&quot;&gt;v3.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v3/&quot;&gt;Migration from v3 to v4&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://v0.material-ui.com/&quot;&gt;v0.x&lt;/a&gt;&lt;/strong&gt; (&lt;a href=&quot;https://material-ui.com/guides/migration-v0x/&quot;&gt;Migration to v1&lt;/a&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;Please note that &lt;code&gt;@next&lt;/code&gt; will only point to pre-releases; to get the latest stable release use &lt;code&gt;@latest&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Who sponsors Material-UI?&lt;/h2&gt; 
&lt;h3&gt;Diamond 💎&lt;/h3&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;octopus&quot; href=&quot;https://octopus.com/?utm_source=materialui&amp;amp;utm_medium=referral&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/1287123?s=256&quot; alt=&quot;octopus&quot; title=&quot;Repeatable, reliable deployments&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;doit-intl&quot; href=&quot;https://www.doit-intl.com/?utm_source=materialui&amp;amp;utm_medium=referral&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;128&quot; width=&quot;128&quot; src=&quot;https://avatars3.githubusercontent.com/u/8424863?s=256&quot; alt=&quot;doit-intl&quot; title=&quot;Management Platform for Google Cloud and AWS&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Diamond Sponsors are those who have pledged $1,500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;Gold 🏆&lt;/h3&gt; 
&lt;p&gt;via &lt;a href=&quot;https://www.patreon.com/oliviertassinari&quot;&gt;Patreon&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;tidelift&quot; href=&quot;https://tidelift.com/subscription/pkg/npm-material-ui?utm_source=npm-material-ui&amp;amp;utm_medium=referral&amp;amp;utm_campaign=homepage&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/tidelift.png?size=96&quot; srcset=&quot;https://github.com/tidelift.png?size=192 2x&quot; alt=&quot;tidelift&quot; title=&quot;Enterprise-ready open source software&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;bitsrc&quot; href=&quot;https://bit.dev&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://github.com/teambit.png?size=96&quot; srcset=&quot;https://github.com/teambit.png?size=192 2x&quot; alt=&quot;bitsrc&quot; title=&quot;The fastest way to share code&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;via &lt;a href=&quot;https://opencollective.com/material-ui&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;textemall&quot; href=&quot;https://www.text-em-all.com&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://images.opencollective.com/callemall/a6946da/logo/96.png&quot; srcset=&quot;https://images.opencollective.com/callemall/a6946da/logo/192.png 2x&quot; alt=&quot;call-em-all&quot; title=&quot;Mass Text Messaging &amp;amp; Automated Calling&quot; height=&quot;96&quot; width=&quot;96&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;canadacasino&quot; href=&quot;https://www.canadacasino.ca/&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/canadacasino/5b19004/logo/96.png&quot; srcset=&quot;https://images.opencollective.com/canadacasino/5b19004/logo/192.png 2x&quot; alt=&quot;canadacasino&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;hoodiebees&quot; href=&quot;https://hoodiebees.com/&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img height=&quot;96&quot; width=&quot;96&quot; src=&quot;https://images.opencollective.com/hoodiebees1/617b451/logo/96.png&quot; srcset=&quot;https://images.opencollective.com/hoodiebees1/617b451/logo/192.png 2x&quot; alt=&quot;hoodiebees&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Direct&lt;/p&gt; 
&lt;p style=&quot;display: flex; justify-content: center; flex-wrap: wrap;&quot;&gt; &lt;a data-ga-event-category=&quot;sponsor&quot; data-ga-event-action=&quot;logo&quot; data-ga-event-label=&quot;elevator&quot; href=&quot;https://www.elevatormag.com/&quot; rel=&quot;noopener sponsored&quot; target=&quot;_blank&quot; style=&quot;margin-right: 16px;&quot;&gt;&lt;img src=&quot;https://material-ui.com/static/sponsors/elevator.png&quot; alt=&quot;elevator&quot; title=&quot;The dopest new hip hop, upcoming artsits, music news, culture, and style&quot; height=&quot;57&quot; width=&quot;191&quot; loading=&quot;lazy&quot;&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Gold Sponsors are those who have pledged $500/month or more to Material-UI.&lt;/p&gt; 
&lt;h3&gt;There is more!&lt;/h3&gt; 
&lt;p&gt;See the full list of &lt;a href=&quot;https://material-ui.com/discover-more/backers/&quot;&gt;our backers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here is a quick example to get you started, &lt;strong&gt;it’s all you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-jsx&quot;&gt;import * as React from &#39;react&#39;;
import ReactDOM from &#39;react-dom&#39;;
import Button from &#39;@material-ui/core/Button&#39;;

function App() {
  return &amp;lt;Button variant=&quot;contained&quot;&amp;gt;Hello World&amp;lt;/Button&amp;gt;;
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#39;#app&#39;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Yes, it’s really all you need to get started as you can see in this live and interactive demo:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/4j7m47vlm4&quot;&gt;&lt;img src=&quot;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&quot; alt=&quot;Edit Button&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For &lt;em&gt;how-to&lt;/em&gt; questions and other non-issues, please use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/material-ui&quot;&gt;StackOverflow&lt;/a&gt; instead of GitHub issues. There is a StackOverflow tag called “material-ui” that you can use to tag your questions.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Are you looking for an example project to get started? &lt;a href=&quot;https://material-ui.com/getting-started/example-projects/&quot;&gt;We host some&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://material-ui.com/&quot;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Premium Themes&lt;/h2&gt; 
&lt;p&gt;You can find complete templates &amp;amp; themes in the &lt;a href=&quot;https://material-ui.com/store/?utm_source=docs&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme-store&quot;&gt;Material-UI store&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.&lt;/p&gt; 
&lt;p&gt;Notice that contributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of &lt;a href=&quot;https://material-ui.com/getting-started/faq/#material-ui-is-awesome-how-can-i-support-the-project&quot;&gt;other contributions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;If you have recently updated, please read the &lt;a href=&quot;https://github.com/mui-org/material-ui/releases&quot;&gt;changelog&lt;/a&gt; for details of what has changed.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The future plans and high priority features and enhancements can be found in the &lt;a href=&quot;https://material-ui.com/discover-more/roadmap/&quot;&gt;roadmap&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href=&quot;https://raw.githubusercontent.com/mui-org/material-ui/next/LICENSE&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring services&lt;/h2&gt; 
&lt;p&gt;These great services sponsor Material-UI’s core infrastructure:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;GitHub&quot; src=&quot;https://github.githubassets.com/images/modules/logos_page/GitHub-Logo.png&quot; height=&quot;25&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub allows us to host the Git repository.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;Netlify&quot; src=&quot;https://cdn.netlify.com/15ecf59b59c9d04b88097c6b5d2c7e8a7d1302d0/1b6d6/img/press/logos/full-logo-light.svg?sanitize=true&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Netlify allows us to distribute the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CrowdIn&quot; src=&quot;https://support.crowdin.com/assets/logos/crowdin-logo1-small.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CrowdIn allows us to translate the documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;BrowserStack&quot; src=&quot;https://www.browserstack.com/images/mail/browserstack-logo-footer.png&quot; height=&quot;30&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;BrowserStack allows us to test in real browsers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/&quot;&gt;&lt;img loading=&quot;lazy&quot; alt=&quot;CodeCov&quot; src=&quot;https://github.com/codecov.png?size=70&quot; width=&quot;35&quot; height=&quot;35&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CodeCov allows us to monitor the test coverage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sushrut111/cowin-automation-extn</title>
      <link>https://github.com/sushrut111/cowin-automation-extn</link>
      <description>&lt;p&gt;Source code for chrome extension Cowin Automation. Auto fills the fields on cowin vaccine slot booking portal to speed up the process and quickly book a slot.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Latest release&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sushrut111/cowin-automation-extn/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/sushrut111/cowin-automation-extn&quot; alt=&quot;GitHub version&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Install released versions&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/cowin-automation/gemdkhkmcnifpfbfnhpbbhageflibppm&quot;&gt;Chrome store&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sushrut111/cowin-automation-extn/wiki/How-install-from-release-on-smartphone&quot;&gt;Install on smartphone&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sushrut111/cowin-automation-extn/wiki/How-install-extension-manually-from-github-release--on-chrome-desktop&quot;&gt;Install lastest on chrome desktop&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cowin-booking/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sushrut111/cowin-automation-extn/main/get-the-addon-178x60px.dad84b42.png&quot; alt=&quot;MOZILLA&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Users and Ratings&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/rating/gemdkhkmcnifpfbfnhpbbhageflibppm&quot; alt=&quot;Chrome web store ratings&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/chrome-web-store/users/gemdkhkmcnifpfbfnhpbbhageflibppm&quot; alt=&quot;Chrome web store downloads&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Many other developers have created scripts to book vaccine slots automatically - due to this, those who do not know how to use those scripts are facing issues while searching for vaccine slots. I made this extension to counter that - anyone will be able to use this extension very easily even if they do not know how it works. I am not charging anything for this - this will be FREE of cost forever. I also have created support channel to help people use this extension if they have difficulties.&lt;/p&gt; 
&lt;p&gt;Because everyone has equal right to get vaccinated on time!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Never pay anyone to book a vaccine slot&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Extension in action&lt;/h1&gt; 
&lt;p&gt;https://user-images.githubusercontent.com/11269256/118931418-9bff4c80-b964-11eb-9447-f64cb6326931.mp4&lt;/p&gt; 
&lt;h1&gt;COWIN portal automation&lt;/h1&gt; 
&lt;h2&gt;How to use the extension?&lt;/h2&gt; 
&lt;ol start=&quot;0&quot;&gt; 
 &lt;li&gt;You can now install this extension directly from chrome extensions store &lt;a href=&quot;https://chrome.google.com/webstore/detail/cowin-automation/gemdkhkmcnifpfbfnhpbbhageflibppm&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download zip of these files by clicking on the green “Code” button on this page at the top side and then selecting &lt;strong&gt;Download ZIP&lt;/strong&gt; option from the options.&lt;/li&gt; 
 &lt;li&gt;Exctract the files.&lt;/li&gt; 
 &lt;li&gt;Open this url in chrome browser &lt;a href=&quot;chrome://extensions/&quot;&gt;chrome://extensions/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;In the second top bar on the page, click on “Load unpacked”&lt;/li&gt; 
 &lt;li&gt;Select the unzipped folder containing the files from this page.&lt;/li&gt; 
 &lt;li&gt;The extension is now ready to use.&lt;/li&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://selfregistration.cowin.gov.in/&quot;&gt;https://selfregistration.cowin.gov.in/&lt;/a&gt; directly and use the extension.&lt;/li&gt; 
 &lt;li&gt;When you open the page, you should see &lt;code&gt;click to edit autofill inputs&lt;/code&gt; button in red at the top of page. Click on it and fill in the data.&lt;/li&gt; 
 &lt;li&gt;To change autofill data, just click on the Red button at the top.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;What does it do?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Allows you to store all the details for you to search and book vaccine with preference for (You will have to save this data in the extension)&lt;/p&gt; &lt;p&gt;a. Vaccine&lt;/p&gt; &lt;p&gt;b. Age&lt;/p&gt; &lt;p&gt;c. Vaccine cost&lt;/p&gt; &lt;p&gt;d. Vaccination center&lt;/p&gt; &lt;p&gt;e. Slot time preference&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Fills in the mobile number and presses submit for you to get the OTP&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clicks &lt;code&gt;Verify &amp;amp; Proceed&lt;/code&gt; when you enter 6 digits of OTP.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Automatically keeps searching for availability based on the data you entered in the form.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;As soon as preferred slot is found, it proceeds for booking.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Selects the time slot preferred and enters captcha&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enters Confirm button to book the slot&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The title of chrome tab shows a timer&lt;/strong&gt;. This timer tells you the time left in this session. Once timer shows negative, you will have to log out and log in again as &lt;em&gt;&lt;strong&gt;cowin portal allows users to book only upto 15 mins once they enter OTP.&lt;/strong&gt;&lt;/em&gt; After 15 mins, the OTP again needs to be requested and entered.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;CAPTCHA Decoder inspired from &lt;a href=&quot;https://github.com/ayushchd&quot;&gt;@ayushchd&lt;/a&gt;’s code&lt;/li&gt; 
 &lt;li&gt;Icons made by &lt;a href=&quot;https://www.flaticon.com/authors/mavadee&quot;&gt;mavadee&lt;/a&gt; from &lt;a href=&quot;https://www.flaticon.com/&quot;&gt;www.flaticon.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Declarations&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;I do not intend to collect any personal information and do not intend to cause any harm to you. This extension is just another helper utility. Should you not trust this, feel free to back out and not use the extension.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I do not guarantee a confirm slot.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I am an independent developer and have no affiliations with the developers of cowin application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I work at Microsoft India and this project has nothing to do with my employer and I have worked on this outside of my commitment to my employer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Should you need any help or face troubles using this extension, reach out to me via this telegram channel: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://telegram.me/cowinbooking&quot;&gt;https://telegram.me/cowinbooking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://t.me/cowinbooking&quot;&gt;https://t.me/cowinbooking&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>qishibo/AnotherRedisDesktopManager</title>
      <link>https://github.com/qishibo/AnotherRedisDesktopManager</link>
      <description>&lt;p&gt;🚀🚀🚀A faster, better and more stable redis desktop manager, compatible with Linux, windows, mac. What&#39;s more, it won&#39;t crash when loading a large number of keys.&lt;/p&gt;&lt;hr&gt;&lt;img align=&quot;right&quot; width=&quot;110&quot; src=&quot;https://imgup.qii404.xyz/github/ardm-new-icon.png&quot;&gt; 
&lt;h1&gt;Another Redis Desktop Manager&lt;/h1&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🚀🚀🚀 A faster, better and more stable redis desktop manager, compatible with Linux, windows, mac. What’s more, it won’t crash when loading a large number of keys.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/qishibo/AnotherRedisDesktopManager/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-000000.svg?sanitize=true&quot; alt=&quot;MIT&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/qishibo/AnotherRedisDesktopManager.svg?label=Download&quot; alt=&quot;Download&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://qii404.me/github-release-statistics/?repo=/qishibo/AnotherRedisDesktopManager/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Download-Analysis-blue.svg?sanitize=true&quot; alt=&quot;Download Analysis&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://weibo.com/shiboooo?is_hot=1&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Weibo-@shiboooo-red.svg?sanitize=true&quot; alt=&quot;shiboooo&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fqishibo%2FAnotherRedisDesktopManager?ref=badge_shield&quot;&gt;&lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fqishibo%2FAnotherRedisDesktopManager.svg?type=shield&quot; alt=&quot;FOSSA Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;p&gt;Download latest &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;exe&lt;/a&gt; package from &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;release&lt;/a&gt; [or &lt;a href=&quot;https://gitee.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;gitee&lt;/a&gt; in China], double click to install.&lt;/p&gt; 
&lt;h2&gt;Linux&lt;/h2&gt; 
&lt;p&gt;Download latest &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;AppImage&lt;/a&gt; package from &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;release&lt;/a&gt; [or &lt;a href=&quot;https://gitee.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;gitee&lt;/a&gt; in China], &lt;code&gt;chmod +x&lt;/code&gt;, double click to run.&lt;/p&gt; 
&lt;h2&gt;Mac&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download latest &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;dmg&lt;/a&gt; package from &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;release&lt;/a&gt; [or &lt;a href=&quot;https://gitee.com/qishibo/AnotherRedisDesktopManager/releases&quot;&gt;gitee&lt;/a&gt; in China], double click to install.&lt;/li&gt; 
 &lt;li&gt;Or by &lt;strong&gt;brew&lt;/strong&gt;: &lt;code&gt;brew install --cask another-redis-desktop-manager&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Or &lt;strong&gt;sponsor&lt;/strong&gt; by app store, It’s not free, and I will be very grateful to you. &lt;br&gt;&lt;a href=&quot;https://apps.apple.com/app/id1516451072&quot;&gt;&lt;img src=&quot;https://imgup.qii404.xyz/github/download_from_app_store.png&quot; alt=&quot;app store&quot;&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--
&gt; If **Mac** warning `Another Desktop Manager can&#39;t be opened because it is from an unidentified developer`. Open `Settings-&gt;Security` and click **`Open Anyway`**

![can&#39;t be opened because it is from an unidentified developer](https://imgup.qii404.xyz/mac-warning.png)

![Settings-&gt;Security Open Anyway](https://imgup.qii404.xyz/blog/5d11c4feeaf6f.jpg)
--&gt; 
&lt;h2&gt;Enjoy!&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://imgup.qii404.xyz/github/20210203/status.jpg&quot; alt=&quot;redis status dark&quot;&gt;&lt;/p&gt; 
&lt;!-- ![redis status](https://imgup.qii404.xyz/github/20210203/statusl.jpg) --&gt; 
&lt;p&gt;&lt;img src=&quot;https://imgup.qii404.xyz/github/20210203/hash.jpg&quot; alt=&quot;redis key hash dark&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://imgup.qii404.xyz/github/20210203/cli.jpg&quot; alt=&quot;redis console dark&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Feature Log&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2021-05-03: Stream Support &amp;amp;&amp;amp; Cli Command Tips Support&lt;/li&gt; 
 &lt;li&gt;2021-02-28: Connection Color Tag &amp;amp;&amp;amp; Search History Support&lt;/li&gt; 
 &lt;li&gt;2021-02-03: Multiple Select\Delete &amp;amp;&amp;amp; Msgpack Viewer Support&lt;/li&gt; 
 &lt;li&gt;2020-12-30: Tree View Support!!!&lt;/li&gt; 
 &lt;li&gt;2020-11-03: Binary View Support &amp;amp;&amp;amp; SSH Passparse\Timeout Support&lt;/li&gt; 
 &lt;li&gt;2020-09-04: SSH Cluster Support &amp;amp;&amp;amp; Extension Commands Support&lt;/li&gt; 
 &lt;li&gt;2020-06-18: SSL/TLS Support!!!&lt;/li&gt; 
 &lt;li&gt;2020-04-28: Page Zoom &amp;amp;&amp;amp; Big Key Loads With Scan &amp;amp;&amp;amp; Auto Json&lt;/li&gt; 
 &lt;li&gt;2020-04-18: Unvisible Key\Value Format Support&lt;/li&gt; 
 &lt;li&gt;2020-04-04: Cluster Support!!!&lt;/li&gt; 
 &lt;li&gt;2020-03-13: Dark Mode Support!!! &amp;amp;&amp;amp; JsonView In Other Place&lt;/li&gt; 
 &lt;li&gt;2020-02-16: SSH Private Key Support&lt;/li&gt; 
 &lt;li&gt;2020-02-13: Open Cli Console In Tabs&lt;/li&gt; 
 &lt;li&gt;2019-06-14: Custom Font-Family Support&lt;/li&gt; 
 &lt;li&gt;2019-05-28: Key List Resizable&lt;/li&gt; 
 &lt;li&gt;2019-05-09: Search Support In Hash List Set Zset&lt;/li&gt; 
 &lt;li&gt;2019-04-26: Auto Updater&lt;/li&gt; 
 &lt;li&gt;2019-04-09: SSH Tunnel Connection Support&lt;/li&gt; 
 &lt;li&gt;2019-04-01: Extract Search Support&lt;/li&gt; 
 &lt;li&gt;2019-02-22: Single Connection Support&lt;/li&gt; 
 &lt;li&gt;2019-01-08: Project Start&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dev Build&lt;/h2&gt; 
&lt;h3&gt;Linux Or Mac&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# clone code
git clone https://github.com/qishibo/AnotherRedisDesktopManager.git --depth=1
cd AnotherRedisDesktopManager

# install dependencies
npm install

# if download electron failed during installing, use this command
# ELECTRON_MIRROR=&quot;https://npm.taobao.org/mirrors/electron/&quot; npm install

# serve with hot reload at localhost:9988
npm start


# after the previous step is completed to 100%, open another tab, build up a desktop client
npm run electron
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If linux errors like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# if error like this
../src/FontManagerLinux.cc:1:35: fatal error: fontconfig/fontconfig.h: No such file or directory

# then try this
sudo apt install libfontconfig1-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# install build tools for the first time, just execute once
npm install -g windows-build-tools

# clone code
git clone https://github.com/qishibo/AnotherRedisDesktopManager.git --depth=1
cd AnotherRedisDesktopManager

# install dependencies, 32-bit or 64-bit all use win32
npm install --platform=win32

# if download electron failed during installing, use this command
# npm config set ELECTRON_MIRROR http://npm.taobao.org/mirrors/electron/
# npm install --platform=win32

# serve with hot reload at localhost:9988
npm start


# after the previous step is completed to 100%, open another tab, build up a desktop client
npm run electron
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build Package&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# prepare before package
npm run pack:prepare

# build package on respective platforms
# on windows build 64bit package
npm run pack:win
# on windows build 32bit package
npm run pack:win32

# on mac
npm run pack:mac

# on linux
npm run pack:linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Give me a star ⭐!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Through &lt;a href=&quot;https://opencollective.com/AnotherRedisDesktopManager&quot;&gt;OpenCollective&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you are a Mac user, you can purchase this software from the &lt;a href=&quot;https://apps.apple.com/app/id1516451072&quot;&gt;app store&lt;/a&gt; to sponsor, and then let the app store automatically update it for you.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://apps.apple.com/app/id1516451072&quot;&gt;&lt;img src=&quot;https://imgup.qii404.xyz/github/download_from_app_store.png&quot; alt=&quot;app store&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wechat sponsor code&lt;/p&gt; &lt;img width=&quot;150px&quot; src=&quot;https://imgup.qii404.xyz/github/wechat_sponsor_code.jpg&quot;&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/qishibo/AnotherRedisDesktopManager/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/AnotherRedisDesktopManager/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;contributors&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/AnotherRedisDesktopManager&quot;&gt;&lt;img src=&quot;https://opencollective.com/AnotherRedisDesktopManager/backers.svg?sanitize=true&quot; alt=&quot;backers&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/qishibo/AnotherRedisDesktopManager/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://qii404.me/&quot;&gt;qii404.me&lt;/a&gt; &lt;a href=&quot;https://weibo.com/shiboooo?is_hot=1&quot;&gt;@shiboooo&lt;/a&gt; &lt;a href=&quot;https://qii404.me/github-release-statistics/?repo=/qishibo/AnotherRedisDesktopManager/&quot;&gt;Download Analysis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>portainer/portainer</title>
      <link>https://github.com/portainer/portainer</link>
      <description>&lt;p&gt;Making Docker and Kubernetes management easy.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img title=&quot;portainer&quot; src=&quot;https://github.com/portainer/portainer/raw/develop/app/assets/images/logo_alt.png?raw=true&quot;&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/portainer/portainer/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/portainer/portainer.svg?sanitize=true&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://microbadger.com/images/portainer/portainer&quot; title=&quot;Image size&quot;&gt;&lt;img src=&quot;https://images.microbadger.com/badges/image/portainer/portainer.svg?sanitize=true&quot; alt=&quot;Microbadger&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://portainer.visualstudio.com/Portainer%20CI/_build/latest?definitionId=3&amp;amp;branchName=develop&quot;&gt;&lt;img src=&quot;https://portainer.visualstudio.com/Portainer%20CI/_apis/build/status/Portainer%20CI?branchName=develop&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codeclimate.com/github/portainer/portainer&quot;&gt;&lt;img src=&quot;https://codeclimate.com/github/portainer/portainer/badges/gpa.svg?sanitize=true&quot; alt=&quot;Code Climate&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=YHXZJQNJQ36H6&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&quot; alt=&quot;Donate&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Portainer&lt;/em&gt;&lt;/strong&gt; is a lightweight management UI which allows you to &lt;strong&gt;easily&lt;/strong&gt; manage your different Docker environments (Docker hosts or Swarm clusters). &lt;strong&gt;&lt;em&gt;Portainer&lt;/em&gt;&lt;/strong&gt; is meant to be as &lt;strong&gt;simple&lt;/strong&gt; to deploy as it is to use. It consists of a single container that can run on any Docker engine (can be deployed as Linux container or a Windows native container, supports other platforms too). &lt;strong&gt;&lt;em&gt;Portainer&lt;/em&gt;&lt;/strong&gt; allows you to manage all your Docker resources (containers, images, volumes, networks and more!) It is compatible with the &lt;em&gt;standalone Docker&lt;/em&gt; engine and with &lt;em&gt;Docker Swarm mode&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;You can try out the public demo instance: http://demo.portainer.io/ (login with the username &lt;strong&gt;admin&lt;/strong&gt; and the password &lt;strong&gt;tryportainer&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;Please note that the public demo cluster is &lt;strong&gt;reset every 15min&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can deploy a copy of the demo stack inside a &lt;a href=&quot;https://labs.play-with-docker.com&quot;&gt;play-with-docker (PWD)&lt;/a&gt; playground:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Browse &lt;a href=&quot;http://play-with-docker.com/?stack=https://raw.githubusercontent.com/portainer/portainer-demo/master/play-with-docker/docker-stack.yml&quot;&gt;PWD/?stack=portainer-demo/play-with-docker/docker-stack.yml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Sign in with your &lt;a href=&quot;https://docs.docker.com/docker-id&quot;&gt;Docker ID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://github.com/portainer/portainer-demo/raw/master/play-with-docker/docker-stack.yml#L5-L8&quot;&gt;these&lt;/a&gt; steps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Unlike the public demo, the playground sessions are deleted after 4 hours. Apart from that, all the settings are the same, including default credentials.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io/quickstart/&quot;&gt;Deploy Portainer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.portainer.io/contributing/instructions/&quot;&gt;Building Portainer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;For FORMAL Support, please purchase a support subscription from here: https://www.portainer.io/products/portainer-business&lt;/p&gt; 
&lt;p&gt;For community support: You can find more information about Portainer’s community support framework policy here: https://www.portainer.io/products/community-edition/customer-success&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues: https://github.com/portainer/portainer/issues&lt;/li&gt; 
 &lt;li&gt;FAQ: https://documentation.portainer.io&lt;/li&gt; 
 &lt;li&gt;Slack (chat): https://portainer.io/slack/&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting bugs and contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Want to report a bug or request a feature? Please open &lt;a href=&quot;https://github.com/portainer/portainer/issues/new&quot;&gt;an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to help us build &lt;strong&gt;&lt;em&gt;portainer&lt;/em&gt;&lt;/strong&gt;? Follow our &lt;a href=&quot;https://documentation.portainer.io/contributing/instructions/&quot;&gt;contribution guidelines&lt;/a&gt; to build it locally and make a pull request. We need all the help we can get!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Here at Portainer, we believe in &lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;responsible disclosure&lt;/a&gt; of security issues. If you have found a security issue, please report it to &lt;a href=&quot;mailto:security@portainer.io&quot;&gt;security@portainer.io&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To make sure we focus our development effort in the right places we need to know which features get used most often. To give us this information we use &lt;a href=&quot;https://matomo.org/&quot;&gt;Matomo Analytics&lt;/a&gt;, which is hosted in Germany and is fully GDPR compliant.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;When Portainer first starts, you are given the option to DISABLE analytics. If you &lt;strong&gt;don’t&lt;/strong&gt; choose to disable it, we collect anonymous usage as per &lt;a href=&quot;https://www.portainer.io/documentation/in-app-analytics-and-privacy-policy/&quot;&gt;our privacy policy&lt;/a&gt;. &lt;strong&gt;Please note&lt;/strong&gt;, there is no personally identifiable information sent or stored at any time and we only use the data to help us improve Portainer.&lt;/p&gt; 
&lt;h2&gt;Limitations&lt;/h2&gt; 
&lt;p&gt;Portainer supports “Current - 2 docker versions only. Prior versions may operate, however these are not supported.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Portainer is licensed under the zlib license. See &lt;a href=&quot;https://raw.githubusercontent.com/portainer/portainer/develop/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;p&gt;Portainer also contains code from open source projects. See &lt;a href=&quot;https://raw.githubusercontent.com/portainer/portainer/develop/ATTRIBUTIONS.md&quot;&gt;ATTRIBUTIONS.md&lt;/a&gt; for a list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>poteto/hiring-without-whiteboards</title>
      <link>https://github.com/poteto/hiring-without-whiteboards</link>
      <description>&lt;p&gt;⭐️ Companies that don&#39;t have a broken hiring process&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hiring Without Whiteboards&lt;/h1&gt; 
&lt;p&gt;A list of companies (or teams) that don’t do “whiteboard” interviews. “Whiteboards” is used as a metaphor, and is a &lt;em&gt;symbol&lt;/em&gt; for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad – CS trivia questions are. Using sites like HackerRank/LeetCode &lt;em&gt;probably&lt;/em&gt; fall into a similar category.&lt;/p&gt; 
&lt;p&gt;The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) &lt;a href=&quot;https://raw.githubusercontent.com/poteto/hiring-without-whiteboards/master/RECOMMENDATIONS.md&quot;&gt;our recommendations&lt;/a&gt; for ways to conduct better interviews.&lt;/p&gt; 
&lt;h3&gt;tl;dr&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussing a real world problem (with or without whiteboard) is 👍&lt;/li&gt; 
 &lt;li&gt;Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is 👎&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/dhh/status/834146806594433025?lang=en&quot;&gt;&lt;img src=&quot;https://i.imgur.com/xJV6cF4.png&quot; width=&quot;500&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to be added.&lt;/p&gt; 
&lt;h3&gt;Duds&lt;/h3&gt; 
&lt;p&gt;If you’ve been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a &lt;a href=&quot;https://github.com/poteto/hiring-without-whiteboards/pull/new/master&quot;&gt;PR&lt;/a&gt; to remove them from this list.&lt;/p&gt; 
&lt;h3&gt;I want to search/sort/filter/group by X!&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://airtable.com/shr3eGPDm3wGjT2gA&quot;&gt;Airtable&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the &lt;a href=&quot;https://github.com/poteto/hww-api&quot;&gt;API here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also check out &lt;a href=&quot;https://nowhiteboards.io&quot;&gt;No Whiteboards&lt;/a&gt; to search for jobs at these companies.&lt;/p&gt; 
&lt;h3&gt;Discussion and other reads&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discussion 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=13874026&quot;&gt;HackerNews (2017)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=23981795&quot;&gt;HackerNews (2020)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theoutline.com/post/1256/finding-a-better-alternative-to-the-whiteboard-interview&quot;&gt;Finding a better alternative to the whiteboard interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;A - C&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/abstract/jobs&quot;&gt;Abstract&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accenture.com/us-en/careers&quot;&gt;Accenture&lt;/a&gt; | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.accredible.com/careers&quot;&gt;Accredible&lt;/a&gt; | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://acko.com&quot;&gt;Acko&lt;/a&gt; | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.acumenci.com/joinourteam&quot;&gt;Acumen&lt;/a&gt; | London, UK | Small take home test, and sit in on some sprint rituals on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adhoc.team&quot;&gt;Ad Hoc&lt;/a&gt; | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adaface.com&quot;&gt;Adaface&lt;/a&gt; | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adcellerant.com/career&quot;&gt;AdCellerant&lt;/a&gt; | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.addstones.com&quot;&gt;Addstones&lt;/a&gt; | Paris, FR / Singapore, SG / Bucharest, RO / London, UK | Multiple interviews, discussion of technical background and experiences. Sometimes we do a on-site unsupervised small exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adevait.com&quot;&gt;Adeva&lt;/a&gt; | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.adex.network&quot;&gt;AdEx Network&lt;/a&gt; | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tryadhawk.com/jobs&quot;&gt;AdHawk&lt;/a&gt; | New York, NY / Remote | Intro phone call with HR, second conversation with AdHawk engineer, and final pairing interview with AdHawk engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getadmiral.com&quot;&gt;Admiral&lt;/a&gt; | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://adnymics.com&quot;&gt;Adnymics&lt;/a&gt; | Munich, DE | Take home project, then work with the team for a day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://adthena.com&quot;&gt;Adthena&lt;/a&gt; | London, UK | Takehome project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/adwyze/jobs&quot;&gt;AdWyze&lt;/a&gt; | Bangalore, India | Short takehome project + (for fulltime) onsite pairing&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aerofs.com/company/careers&quot;&gt;AeroFS&lt;/a&gt; | San Francisco, CA | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ageno.pl&quot;&gt;Ageno&lt;/a&gt; | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/agilemd/jobs&quot;&gt;AgileMD&lt;/a&gt; | San Francisco, CA | Takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careersatagoda.com/departments/technology&quot;&gt;Agoda&lt;/a&gt; | Bangkok, Thailand | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aimotive.com/career/&quot;&gt;AImotive&lt;/a&gt; | Budapest, Hungary | Small take-home project, then in-person interview about technical background&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airbrake.io&quot;&gt;Airbrake&lt;/a&gt; | San Francisco, CA / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://airtable.com/careers&quot;&gt;Airtable&lt;/a&gt; | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://aiwip.com&quot;&gt;Aiwip&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/meetalbert/&quot;&gt;Albert&lt;/a&gt; | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/careers&quot;&gt;Algolia&lt;/a&gt; | Paris, France / San Francisco, CA | Takehome project &amp;amp; Onsite discussions and presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.allaboutapps.at/jobs&quot;&gt;all about apps GmbH&lt;/a&gt; | Vienna, Austria | 2-phase technical discussion &amp;amp; examination with department heads and management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://allegro.pl/praca&quot;&gt;Allegro&lt;/a&gt; | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://alluvium.io&quot;&gt;Alluvium&lt;/a&gt; | Brooklyn, NY | Take-home assignment, on-site review dovetailing into collaborative project planning for extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.alluxi.mx&quot;&gt;Alluxi&lt;/a&gt; | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.almabase.com/careers#believe&quot;&gt;Almabase&lt;/a&gt; | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.alphasights.com&quot;&gt;AlphaSights&lt;/a&gt; | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://amagi.io&quot;&gt;AMAGI&lt;/a&gt; | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/amino-payments/jobs/&quot;&gt;Amino Payments&lt;/a&gt; | Philadelphia, PA | Real-world technical design and problem discussion, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gastrograph.com&quot;&gt;Analytical Flavor Systems&lt;/a&gt; | Manhattan, New York | Code sample or take-home project, both with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.angaza.com/careers/&quot;&gt;Angaza&lt;/a&gt; | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://animech.com/join-us&quot;&gt;Animech&lt;/a&gt; | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.anyfin.com&quot;&gt;Anyfin&lt;/a&gt; | Stockholm, Sweden | Takehome project &amp;amp; Onsite discussions and presentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apolloagriculture.com&quot;&gt;Apollo Agriculture&lt;/a&gt; | Nairobi, Kenya/Remote | Takehome project or Worksample (or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.beapplied.com&quot;&gt;Applied&lt;/a&gt; | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/arachnys/jobs/220465-software-engineer&quot;&gt;Arachnys&lt;/a&gt; | London, UK | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aragon.one/#jobs&quot;&gt;Aragon One&lt;/a&gt; | Remote | Culture-first interview, take home technical challenge, technical interviews, and finally a compensated onsite trial week working on a real project that will be shipped&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://artemisag.com&quot;&gt;Artemis&lt;/a&gt; | Remote | An initial non-technical half-hour screening call, followed by 3 one-hour pairing sessions on a take-home project that you build yourself using either Ruby or JavaScript (or any Ruby or JavaScript framework). Senior candidates may also be required to review an example pull request as the final round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://articulate.com/company/careers&quot;&gt;Articulate&lt;/a&gt; | Remote | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.artsy.net/jobs#engineering&quot;&gt;Artsy&lt;/a&gt; | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.asidatascience.com/careers&quot;&gt;ASI Data Science&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.asos.com/epostings/index.cfm?fuseaction=app.jobsearch&amp;amp;company_id=30071&amp;amp;version=1&amp;amp;byBusinessUnit=5&quot;&gt;ASOS&lt;/a&gt; | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software crafstmanship principles and design decisions, in-person freestyle architecture walk-through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.ataccama.com&quot;&gt;Ataccama&lt;/a&gt; | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atech.media&quot;&gt;aTech Media&lt;/a&gt; | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://atlan.com&quot;&gt;Atlan&lt;/a&gt; | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you’re applying to. Then as the final step, a call with one of the founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auraframes.com/jobs?gh_src=2ef5cfa32&quot;&gt;Aura Frames&lt;/a&gt; | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.aurorasolar.com/careers&quot;&gt;Aurora Solar&lt;/a&gt; | San Francisco, CA | Our process: 1) Initial phone call 2) 1 hour take home project in CoderPad along with a few essay questions relating to JavaScript, testing, etc. 3) Remote pairing session solving a problem similar to day to day work. 4) In-person interview with additional pairing exercise done on a laptop as well as culture interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/how-we-hire-engineers&quot;&gt;Auth0&lt;/a&gt; | Bellevue, WA / Buenos Aires, Argentina / Remote | Series of interviews, go over technical background and past experiences, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.auto1-group.com/jobs&quot;&gt;Auto1&lt;/a&gt; | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://automattic.com/work-with-us&quot;&gt;Automattic&lt;/a&gt; | Remote | short take-home real-world task, then a few weeks-long real-world, part-time, and paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AutoScout24/hiring&quot;&gt;AutoScout24&lt;/a&gt; | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://avant.com/jobs&quot;&gt;Avant&lt;/a&gt; | Chicago, IL | Pair programming interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avarteq.com/career&quot;&gt;Avarteq GmbH&lt;/a&gt; | Berlin, Germany / Saarbrücken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avocarrot.com/company&quot;&gt;Avocarrot&lt;/a&gt; | Athens, Greece | on-site real world problem discussion and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axelerant.com/careers&quot;&gt;Axelerant&lt;/a&gt; | Remote | Take-home project, interviews with hr and engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://axiacore.com&quot;&gt;Axiacore&lt;/a&gt; | Bogota, Colombia | We talk about on how is your process when solving problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.axios.com/careers&quot;&gt;Axios&lt;/a&gt; | Arlington, VA / New York, NY / San Francisco, CA / Remote | Take-home project, with discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/b12#.WMlLfRIrJTa&quot;&gt;B12&lt;/a&gt; | New York, NY | Take-home exercises and pair-programming with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://somos.b2wdigital.com/bit&quot;&gt;B2W Digital&lt;/a&gt; | Rio de Janeiro, Brazil; São Paulo, Brazil | Time-boxed coding exercise at home, on-site pair programming with engineers and live software architecture challenges based on real situations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Babylonpartners/iOS-Interview-Demo&quot;&gt;Babylon Health iOS Team&lt;/a&gt; | London, UK | Take-home project, on-site presentation and discussion, design and product interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://workatbackbase.com&quot;&gt;Backbase&lt;/a&gt; | Amsterdam, Netherlands; Cardiff, Wales; London, UK; Atlanta, GA | Takehome project, interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/backbone-plm/jobs&quot;&gt;Backbone&lt;/a&gt; | Boulder, CO | Initial phone screening to determine general fit, take-home project, finally an on-site where we discuss your take-home project and you meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.badi.com&quot;&gt;Badi&lt;/a&gt; | Barcelona, Spain | Phone Screen, Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://team.badoo.com/jobs&quot;&gt;Badoo&lt;/a&gt; | London, UK | Take-home project, then a discussion onsite round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career012.successfactors.eu/sfcareer/jobreqcareer?jobId=46145&amp;amp;company=BAE&quot;&gt;BAE Systems Applied Intelligence&lt;/a&gt; | London, UK | Initial interview with experience based technical questions, second interview pair programming on problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bakkenbaeck.com/jobs&quot;&gt;Bakken &amp;amp; Bæck&lt;/a&gt; | Oslo, Norway; Amsterdam, Netherlands; Bonn, Germany | Skype interview followed by take-home assignment and a visit to one of our offices&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.balabit.com&quot;&gt;Balabit&lt;/a&gt; | Budapest, Hungary | Take-home project (medium size, with restrictions, e.g. only stdlib may be used), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.barracuda.com/company/careers&quot;&gt;Barracuda View Team&lt;/a&gt; | Chelmsford, MA / Remote | Phone screen, remote pair programming session, technical discussion interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://basecamp.com/about/jobs&quot;&gt;Basecamp&lt;/a&gt; | Chicago, IL / Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bcredi.gupy.io&quot;&gt;Bcredi&lt;/a&gt; | Curitiba, Brazil | Phone conversations about the company and the opening; remote and on-site team interviews (tech-focused); take-home programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/beam&quot;&gt;Beam Dental&lt;/a&gt; | Columbus, OH / Remote | Phone Screen, Take Home Project, In-Person or remote Pairing and Cross-Functional Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://belka.us/lavora-con-no&quot;&gt;Belka&lt;/a&gt; | Trento, Italy; Munich, Germany | We give you a small task that you can do alone and then we evaluate your work with you&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bemind.recruitee.com&quot;&gt;Bemind Interactive&lt;/a&gt; | Biella, Italy / Latina, Italy / Remote | Series of interviews, discussion about technical background and past experiences, take-home project &amp;amp; pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bendyworks.com/careers&quot;&gt;Bendyworks&lt;/a&gt; | Madison, WI | Interviews and pair programming on personal projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterment.com/careers&quot;&gt;Betterment&lt;/a&gt; | New York, NY | Phone interview followed by on-site pair programming to simulate a Betterment feature build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.betterpt.com&quot;&gt;BetterPT&lt;/a&gt; | New York, NY | Initial phone interview, project using our tech stack, on-site code review/pair programming and “meet the team”.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/about-us/careers&quot;&gt;Big Nerd Ranch&lt;/a&gt; | Atlanta, GA &amp;amp; Remote | Interviews and pair programming on an internal project or problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigabid.com/careers&quot;&gt;BigaBid&lt;/a&gt; | Tel Aviv, Israel | Design a real time solution to a problem relevant to the business, followed by a take home project implementing a lean version of the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bigbinary.com/jobs&quot;&gt;BigBinary&lt;/a&gt; | Remote | Phone discussion with a developer and the CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bioconnect.com/company/careers&quot;&gt;BioConnect&lt;/a&gt; | Toronto, Canada | Take-home assignment &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitexpert.de/karriere&quot;&gt;bitExpert AG&lt;/a&gt; | Mannheim, Germany | Interview with experience based technical questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitpanda.com/en/career&quot;&gt;Bitpanda&lt;/a&gt; | Cracow, Poland / Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitsoflove.be/careers&quot;&gt;Bits of Love&lt;/a&gt; | Bruges, Belgium | In-person interview to evaluate experience and motivation, potentially followed by take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bitso.com/jobs&quot;&gt;Bitso&lt;/a&gt; | Mexico City, Mexico / Remote | Intro phone or hangouts/skype call with People team, take home project followed by walkthrough of your code and some tech questions focused on your experience, founders video call with one of the founders&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blackdotsolutions.com&quot;&gt;Blackdot Solutions&lt;/a&gt; | Cambridge, UK | Take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://bleacherreport.com&quot;&gt;Bleacher Report&lt;/a&gt; | San Francisco, CA, USA | Take-home project; on-site discussion about the project and meeting with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blendle.homerun.co/?lang=en&quot;&gt;Blendle&lt;/a&gt; | Utrecht, The Netherlands | Take-home project &amp;amp; pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blogfoster/join-the-engineering-team&quot;&gt;blogfoster&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bloomworks.digital/software-engineer/&quot;&gt;Bloom Works&lt;/a&gt; | Remote | Discussion, pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bluebottlecoffee.com/careers&quot;&gt;Blue Bottle Coffee&lt;/a&gt; | Oakland, CA | Technical Phone Screen, Take Home Challenge, Technical in-persons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bluesoft.com.br&quot;&gt;Bluesoft&lt;/a&gt; | São Paulo, Brazil | Takehome project and an interview to evaluate the candidate’s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bocoup.com/careers&quot;&gt;Bocoup&lt;/a&gt; | Boston, MA / Remote | Pair programming with personal laptop on typical problem seen at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bonus.ly/careers&quot;&gt;Bonusly&lt;/a&gt; | Boulder, CO | Values &amp;amp; Tech focused interview - Process: 30 minute with HR, 45 minute Google Meet interview with 2 team members, ~2-4 hour take-home project, on-site interview involving 2 values-alignment interviews and 1 technical interview going over your take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bookingsync.com/en/jobs&quot;&gt;BookingSync&lt;/a&gt; | Remote | Small takehome project, interviews over skype with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://boomtownroi.com&quot;&gt;BoomTown&lt;/a&gt; | Charleston, SC / Atlanta, GA / Remote | Conversational in-person interviews with potential team members and managers that revolve around past experience and how that could be applied to future work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://botika.ai&quot;&gt;Botika&lt;/a&gt; | San Marino, RSM | View code, projects, libraries or any other open source story that you have been a part of, take-home project followed by on-site face-to-face walkthru of your code focusing on decisions/reasoning/technology used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.bouvet.no&quot;&gt;Bouvet&lt;/a&gt; | Bergen, Norway | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://brainn.co&quot;&gt;brainn.co&lt;/a&gt; | São Paulo, BR | Zoom/On-site interview, take-home project and interview with a team leader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://brainstation-23.com&quot;&gt;BrainStation-23&lt;/a&gt; | Dhaka, BD | A practical project followed by series of in-person interview sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://breather.com/jobs&quot;&gt;Breather&lt;/a&gt; | Montreal, Canada | Series of interviews including a conversation about the candidate’s experience and a technical discussion involving real world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.brightbytes.net/careers&quot;&gt;BrightBytes&lt;/a&gt; | San Francisco, CA | Time-boxed coding exercise at home and on-site pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.brighthr.com/careers&quot;&gt;BrightHR&lt;/a&gt; | Manchester, UK | Telephone conversation, coding exercise at home, on-site pairing with a cultural interview, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/brightwheel/jobs&quot;&gt;brightwheel&lt;/a&gt; | San Francisco, CA | Take home exercise, and systems design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.broadinstitute.org/data-sciences-platform&quot;&gt;Broad Institute’s Data Sciences Platform&lt;/a&gt; | Cambridge, MA | Phone screen, small take home project, both a technical and non-technical discussion panel, and a panel following up on the take home project walking through the solution and making a modification to the original code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/careers&quot;&gt;BrowserStack&lt;/a&gt; | Mumbai, India; Dublin, Ireland | Initial phone screen with semi-technical questions, two 2-hour assignments based on real problems solved in company (allowed to lookup internet), final interview with EMs/Director.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bubbl.in/about&quot;&gt;Bubblin Superbooks&lt;/a&gt; | Remote | View code, projects, libraries or any other open source story that you have been a part of, a small take-home project with real code occasionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buffer.com/journey&quot;&gt;Buffer&lt;/a&gt; | Remote | Interviews over video call, code walkthrough of real code focussing on decisions and reasoning, then a 45 day full time, fully paid contract project working on production code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/about/careers/&quot;&gt;Bugcrowd&lt;/a&gt; | San Francisco, CA / Sydney, NSW | Take home exercise, half-day onsite walking through code, and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.buhlergroup.com&quot;&gt;Buhler Group&lt;/a&gt; | Prague, CZ | Interview with a couple of technical questions. No task needed. Depending on the team there is another round with the guys in the HQ via skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildkite.com/home&quot;&gt;Buildkite&lt;/a&gt; | Remote | No CV required. Anonymized writing assessments. Video chat with founder and future team member about you, the job, and the company. Last video chat is a pair programming for technical roles or more in-depth chat for non-technical roles. Offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bulb.co.uk&quot;&gt;Bulb&lt;/a&gt; | London, UK | Phone screening, followed by a 2-4 hours take home task. If successful, an interview designing a real-world system with two engineers. Following that, two spoken interview stages: the first more behavioural, then leadership &amp;amp; culture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busbud.com/en/careers&quot;&gt;Busbud&lt;/a&gt; | Montreal, Canada | Phone screening, followed by a 2-4 hours take home assignment. If the challenge is a success, on-site or remote interview with team members, including someone who reviewed it, to talk about it and potential next steps if the challenge was a real life task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bustle.com/labs&quot;&gt;Bustle&lt;/a&gt; | New York City, Ny / Remote | Half day pair programming on a task for production or one of our Open Source projects. We’ll also buy you lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.busuu.com/jobs&quot;&gt;busuu&lt;/a&gt; | London, UK | Video call to show real code as first stage. In office pair programming, white board real world problem that we’ve encountered before, and history/experience discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buttercms.com&quot;&gt;ButterCMS&lt;/a&gt; | Chicago, IL; Remote | Take home exercise and half-day of pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bybox.com/company/careers/&quot;&gt;ByBox&lt;/a&gt; | Remote | Phone interview followed by interview with devs (ideally in person but sometimes Skype) covering technical experience and coding exercise with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://byu.edu&quot;&gt;BYU OIT&lt;/a&gt; | Provo, UT | Take home programming challenge. Discussion in the interview about solution, among other normal hiring questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.caci.com/ListJobs/All/Search/location/rome/state/ny/country/us&quot;&gt;CACI Rome&lt;/a&gt; | Rome, NY; Remote | Phone interview followed by in-person or Skype screen sharing interview with a coding exercise in either Java, web (Node.js + frontend), or both. Interview format is exclusive to the Rome, NY office and may not be shared by other regional CACI offices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cakesolutions.net/careers&quot;&gt;Cake Solutions&lt;/a&gt; | Manchester, UK; London, UK; New York, NY | Skype / Hangouts / phone call to explain the technical background, current position and set expectations about the salary, relocation, etc; if all good, what to expect next. Then take-home exercise for roughly 4 hours to demonstrate good thinking and ability to pick up new things, explain &amp;amp; document the solution, finishing with pair programming with senior developers (remote or in person); use the code as a talking point around the more difficult things after getting through the simple starter tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/canonical&quot;&gt;Canonical&lt;/a&gt; | London, UK; Austin, TX; Boston, MA; Beijing, China; Shanghai, China; Taipei, Taiwan; Tokyo, Japan; Remote | Review your open source contributions at shortlist stage. 4x60m interviews over Hangouts, each of which is carried out blind (none of the interviewers talk to each other until the final review). The company is fully remote, so there is no on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.uk.capgemini.com&quot;&gt;Capgemini UK Java Team&lt;/a&gt; | London, UK; Woking, UK; Bristol, UK; Cardiff, Wales; Birmingham, UK; Manchester, UK; Leeds, UK; Rotherham, UK; Liverpool, UK; Newcastle, UK; Edinburgh, Scotland; Glasgow, Scotland | Technical telephone interview (30 minutes), take-home non-CompSci coding exercise (3-4 hours), face-to-face role-played consulting scenario involving a solution architecture and a delivery plan (two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.caravelo.com/softdev&quot;&gt;Caravelo&lt;/a&gt; | Barcelona, Spain | Take home project, then technical discussion about the code in-person or Skype and hang out with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cartegraph.com/company/careers/&quot;&gt;Cartegraph&lt;/a&gt; | Dubuque, IA / Remote | Phone screen, hiring manager interview, small take-home coding project, and team code review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.carto.com/careers/&quot;&gt;CARTO&lt;/a&gt; | Madrid, Spain | Phone screen, take-home project, team code review/interview, hiring manager interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casetext.com/jobs&quot;&gt;Casetext&lt;/a&gt; | San Francisco, CA | Submit code sample for review/discussion, contract for one full day (paid)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cashlink.de&quot;&gt;CASHLINK&lt;/a&gt; | Frankfurt, Germany | Skype/phone interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.causeway.com/content/opportunity&quot;&gt;Causeway&lt;/a&gt; | United Kingdom, India | Skype or Telephonic discussion on approaches and experience in regards to solve projects related work, then face to face round to write small solutions to common problems in related field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centroida.co/contact.html&quot;&gt;Centroida&lt;/a&gt; | Sofia, Bulgaria | Series of interviews, pair programming and take-home projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://chainreaction.io&quot;&gt;Chain.Reaction&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chamatheapp.bamboohr.com/jobs/&quot;&gt;Chama The App&lt;/a&gt; | Amsterdam, The Netherlands | Cultural fit interview, home test, technical interview with the team and then interview with the leadership&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://chargify.com/jobs&quot;&gt;Chargify&lt;/a&gt; | San Antonio, TX / Remote | Take-home project &amp;amp; pair on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://checkout51.com/jobs&quot;&gt;Checkout 51&lt;/a&gt; | Toronto, Canada | Phone conversation (15-20 minutes) followed by on-site pair programming and discussion focused on understanding decisions made during on-site work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cheerfulgiving.com&quot;&gt;Cheerful&lt;/a&gt; | Denver, CO / Remote | Take home small project which tests the adaptability of the developer with the stack used by the company, followed by a feedback interview (15 min) then a tryout offer (2 weeks / 1 month) or a permanent offer is made depending on the project results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chef.io/careers&quot;&gt;Chef&lt;/a&gt; | Seattle, WA / Remote | Take home small project testing the ability to implement real world problems. Phone/Zoom interviews discussing the said project. Checking if the candidate would be a good cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ctic-inc.com/careers/&quot;&gt;Chesapeake Technology&lt;/a&gt; | Denver, CO / Santa Barbara, CA / Camarillo, CA / Dulles, VA / California, MD / Remote | Phone screen (30 minutes), take home at leisure question based on real development followed by in person review of solution and general technical questions with actual team and opportunity for you to ask questions and provide feedback ( 2-3 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, followed by on-site interview that includes pair programming on actual CircleCI bugs/feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boston.gov/analytics&quot;&gt;City of Boston’s Analytics Team&lt;/a&gt; | Boston, MA | Take-home project and in-person or phone/Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://beta.phila.gov/departments/office-of-open-data-and-digital-transformation/jobs&quot;&gt;City of Philadelphia’s Office of Open Data &amp;amp; Digital Transformation&lt;/a&gt; | Philadelphia, PA | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.civisanalytics.com/careers&quot;&gt;Civis Analytics&lt;/a&gt; | Chicago, IL | Take-home project and discussion via Skype, followed by pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.cj.com/jobs/category/engineering/&quot;&gt;CJ Affiliate&lt;/a&gt; | Los Angeles, CA &amp;amp; Westlake Village, CA | Phone coding design exercise (no algorithms), followed by an on-site final interview that includes pair programming on a realistic object-oriented design problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clara.com/careers&quot;&gt;Clara Lending&lt;/a&gt; | San Francisco, CA | Phone conversation around technical background and experience, followed by take-home project, pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.clause.io/tag/careers/&quot;&gt;Clause&lt;/a&gt; | Remote | Non-technical interview with Director of Engineering and a member of the engineering team, followed by a technical interview with a cross-section of the team focusing on solution design / architecture and pairing, and an optional chat with the CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/clerkie/jobs&quot;&gt;Clerkie&lt;/a&gt; | San Francisco, CA | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clickmagick.com&quot;&gt;ClickMagick&lt;/a&gt; | Austin, TX / Remote | Phone conversations and examples of Free Software/Open Source work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://clippings.com&quot;&gt;Clippings&lt;/a&gt; | Sofia, Bulgaria | Video screening first, then send us code they’ve recently wrote, then technical interview. We could ask questions about the code they wrote at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cwconsult.dk&quot;&gt;Clockwork Consulting&lt;/a&gt; | Copenhagen, Denmark | Interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cloudistics.com/careers&quot;&gt;Cloudistics&lt;/a&gt; | Reston, VA | Multiple interviews, discussion of technical background and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clubhouse.io/hiring&quot;&gt;Clubhouse&lt;/a&gt; | New York, NY &amp;amp; Remote | Phone interview, followed by onsite discussions and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code-orange.nl&quot;&gt;Code Orange&lt;/a&gt; | Amsterdam, Netherlands | Phone conversation followed by take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cogent.co.jp&quot;&gt;Cogent Labs&lt;/a&gt; | Tokyo, Japan | On-site or video call conversation around technical background and experience, followed by take-home project that resembles a problem Cogent Labs solves for. This project will serve as the base of discussion with the developers for the second interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cognitect.com/jobs&quot;&gt;Cognitect, Inc.&lt;/a&gt; | Remote | Phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cognitran.com/employment-opportunities&quot;&gt;Cognitran&lt;/a&gt; | Essex, UK / Szczecin, Poland / Detroit, MI | Skype/phone interview followed by pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.collabora.com/careers.html&quot;&gt;Collabora&lt;/a&gt; | Cambridge, UK / Montreal, Canada / Remote | On-site or video interview, discussion of technical experience and sometimes approach for tackling a hypothetical problem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://colonist.io/contribute.html&quot;&gt;Colonist&lt;/a&gt; | Remote | Call-&amp;gt;Solve real product coding assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://combyne.com&quot;&gt;combyne&lt;/a&gt; | Remote / Munich, Germany | Short online technical test, 4-hour take-home project, and culture fit interview with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.compeon.de/karriere&quot;&gt;COMPEON&lt;/a&gt; | Duesseldorf, Germany | Phone interview, followed by onsite discussions and pair programming with our developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://about.cph.org/careers.html&quot;&gt;Concordia Publishing House&lt;/a&gt; | St Louis, MO | Take-home project followed by discussion of it on-site with future teammates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://condenastinternational.com&quot;&gt;Condé Nast International&lt;/a&gt; | London, UK | Phone interview, 2 hour take-home project, and on-site with discussion of project, experience, and general technical questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://contactlab.com/en/careers&quot;&gt;Contactlab&lt;/a&gt; | Milan, Italy | Recruiter interview, tech interview (technical background and experiences), both on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://container-solutions.com&quot;&gt;Container Solutions&lt;/a&gt; | Remote; Berlin, Germany; Amsterdam, Netherlands; London, UK | Unbiased process in a nutshell: chat with one of our recruiters, skills assessment and tech assessment, personality assessment which is followed by an interview with one of our occupational psychologists to discuss results. At the end a panel interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentful.com/careers&quot;&gt;Contentful&lt;/a&gt; | Berlin, Germany &amp;amp; SF, USA | Multiple interviews, discussion of technical background &amp;amp; live coding challenge (you can use the internet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.contentsquare.com/careers&quot;&gt;ContentSquare&lt;/a&gt; | Paris, France | Real-world challenges with open discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.convious.com&quot;&gt;Convious&lt;/a&gt; | Vilnius, Lithuania | Intro interview (video call), followed by a homework assignment, followed by a bit more technical interview discussing homework, technical background, etc. Homework feedback is always provided.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cookpad.com/us&quot;&gt;Cookpad&lt;/a&gt; | Tokyo, Japan; Bristol, UK | Interviews, discussion of technical background and experiences, remotely pair with devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coorpacademy.com&quot;&gt;Coorp Academy&lt;/a&gt; | Paris, France | Technical interview as an open discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coverhound.com&quot;&gt;CoverHound, Inc.&lt;/a&gt; | San Francisco, CA | Open technical discussion, short on-site coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.coyoapp.com&quot;&gt;COYO&lt;/a&gt; | Hamburg, Germany | Exemplary take home project in different front- and backend flavors, followed by tech interview &amp;amp; meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://creditkudos.com/jobs&quot;&gt;Credit Kudos&lt;/a&gt; | London, UK | Take-home project and pair programming via Skype or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossbrowsertesting.com&quot;&gt;CrossBrowserTesting&lt;/a&gt; | Memphis, TN | Take home project that resembles a problem support engineers deal with on a daily basis. On-Site interviews in a comfortable environement with a focus on hiring talented people vs exact skill-sets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdstrike.wd5.myworkdayjobs.com/crowdstrikecareers&quot;&gt;CrowdStrike&lt;/a&gt; | Remote | Multiple interviews onsite or remote as appropriate followed by small take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crownstone.rocks/jobs&quot;&gt;Crownstone&lt;/a&gt; | Rotterdam, Netherlands | Technical interaction using previously created Github projects, followed by in-person interview with a focus on someone’s professional ambition in the short and long term.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cube19.com/work-with-us/&quot;&gt;cube19&lt;/a&gt; | London, UK | Take-home project, then an on-site discussion about the code and previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cultivatehq.com&quot;&gt;Cultivate&lt;/a&gt; | Edinburgh, UK | 30 minute pair-programming screening interview on a simple exercise (remote or in-person). Half day pair programming, with 3 or 4 different team members plus informal chat, typically on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.culturefoundry.com&quot;&gt;Culture Foundry&lt;/a&gt; | Austin, TX | Paid take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.currencytransfer.com&quot;&gt;CurrencyTransfer&lt;/a&gt; | London, UK &amp;amp; Remote | Take-home project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;D - F&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://darksky.net/jobs&quot;&gt;Dark Sky&lt;/a&gt; | Cambridge, MA | Phone interviews and a very short, real paid project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datatheorem.com&quot;&gt;Data Theorem&lt;/a&gt; | Palo Alto, CA; Paris, Fr; Bangladesh, India | Phone interview, then a take home project and finally in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://DataChef.co&quot;&gt;DataChef&lt;/a&gt; | Amsterdam, Netherlands | Video call (technical questions about candidate’s achievements), take home assignment, cultural fit zoom or face to face with rest of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.datafleets.com/team&quot;&gt;DataFleets&lt;/a&gt; | San Francisco, CA; New York, NYC; London, UK; Remote | Interviews over video call, remote pair programmming, cultural/team fit with founders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datalogue.github.io/recruiting&quot;&gt;Datalogue&lt;/a&gt; | Montreal, Canada | We Ask candidates to contribute meaningfully to an Open source project that reflects the stack they will be working with and send us a link to the PR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datamade.us&quot;&gt;DataMade&lt;/a&gt; | Chicago, IL | After submitting an application, selected applicants are moved on to a round of interviews and will be asked to submit a piece of code for review. If you don’t have any code you can share, DataMade will provide a short exercise for you to complete. An in-person (or remote) interview will be scheduled to go over your background, what draws you to DataMade, and your code sample.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://datascopeanalytics.com/careers/&quot;&gt;Datascope&lt;/a&gt; | Chicago, IL | Take home exploratory data project with public data, discussion about the project via video chat, and in-person office visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.datlinq.com/en/vacancies&quot;&gt;Datlinq&lt;/a&gt; | Rotterdam, Netherlands | Take-home project based on actual work on data done by the team and in-person or Skype interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dealtap.ca&quot;&gt;DealTap&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team, and optional pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.defmethod.com&quot;&gt;Def Method&lt;/a&gt; | NYC, NY | Take home test, pair programming with dev on test and client work, receive offer same day as pairing interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliveroo.co.uk/careers&quot;&gt;Deliveroo&lt;/a&gt; | London, UK &amp;amp; Remote | Short take-home project and pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deliverycenter.gupy.io&quot;&gt;Delivery Center&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Interviews with the team about the company and the opening, with a short take-home project using their main stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://carreiras.deliverymuch.com.br&quot;&gt;Delivery Much&lt;/a&gt; | Florianópolis, Brazil &amp;amp; Remote | On-site (and/or remote) interviews about the company and the opening, with a short take-home project for leveling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/dentolo&quot;&gt;Dentolo&lt;/a&gt; | Berlin, Germany | Phone interview with the HR department, take-home project and technical interview to discuss your skill set + general questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.deskbookers.com/en-gb/jobs&quot;&gt;Deskbookers&lt;/a&gt; | Amsterdam, Netherlands | Phone screen, take-home project, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.desmart.com&quot;&gt;DeSmart&lt;/a&gt; | Gdynia, Poland | Technical interview, take-home project and talk about your experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://despark.com&quot;&gt;Despark&lt;/a&gt; | Sofia, Bulgaria &amp;amp; Remote | Culture add interview, sample code review and paid pair programming with team member or take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.detroitlabs.com/careers&quot;&gt;Detroit Labs&lt;/a&gt; | Detroit, MI | Our technical interview starts with a take-home assignment that we will look at during the interview. You’ll walk us though your thought process, add functionality if applicable to the interview, and talk about your experience. We believe that showing us your work in a practical setting is more telling of your abilities and what you will bring to the table, than writing code on a whiteboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.dev.to&quot;&gt;DEV&lt;/a&gt; | Remote | Written application, job-specific questionaire and/or task, team interviews (total interview time under two hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developmentseed.org/careers/jobs/&quot;&gt;Development Seed&lt;/a&gt; | Remote / Washington, DC / Lisbon, Portugal / Ayacucho, Peru | Introductory discussion; in-depth technical video interview (no whiteboard, and no live coding); mission &amp;amp; values video interview; onsite (or remote) 1 or 2 days paid working “sprint” in the context of a real project, culminating in a brief presentation of completed sprint work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devfolio.co&quot;&gt;Devfolio&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devsdata.com&quot;&gt;DevsData&lt;/a&gt; | New York, NY; San Francisco, CA; Warsaw, Poland; Frankfurt, Germany; Remote | Video interview, 3-hours take-home assignment, technical video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dg-i.net&quot;&gt;DG-i&lt;/a&gt; | Cologne, Germany | Take-home project and/or discussion on-site about past experiences&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.dice.se&quot;&gt;DICE&lt;/a&gt; | Stockholm, Sweden | Take-home project and code review at the on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.di.fm/jobs&quot;&gt;Digitally Imported&lt;/a&gt; | Denver, Colorado &amp;amp; Remote | Video meetings on past experience and high level tech questions, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dixa.com/careers&quot;&gt;Dixa&lt;/a&gt; | Copenhagen, Denmark | Initial phone call. Take-home programming task, then on-site discussion followed by online personality test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.doctolib.fr/jobs&quot;&gt;Doctolib&lt;/a&gt; | Paris, France; Berlin, Germany | Take-home project, on-site interview and work half a day with one of our feature team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doist.com&quot;&gt;Doist&lt;/a&gt; | Remote | Personal interviews with part of the team and a takehome programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dollarshaveclub.com&quot;&gt;Dollar Shave Club&lt;/a&gt; | Venice, California | Phone interview, take-home projects, on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://door2door.io&quot;&gt;door2door&lt;/a&gt; | Berlin, Germany | Take home challenge + on-site interview + trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doordash.com/careers&quot;&gt;DoorDash :runner::dash:&lt;/a&gt; | San Francisco, CA | Take home project + an on-site interview building off the project!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1fC_-liTPpYQOoE_5iKj0O3AwSdPggQGnOsjUKahfbkQ/edit?usp=sharing&quot;&gt;Draft Fantasy&lt;/a&gt; | Tel Aviv, Israel | Talk about past experience and what the developer has actually built as well as pair programming or a programming exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draftbit.com&quot;&gt;Draftbit&lt;/a&gt; | Remote | Phone screening, take-home assignment based on an old project; pair programming and interview with team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drawbotics.com/en/join-us&quot;&gt;Drawbotics&lt;/a&gt; | Brussels, Belgium | Take-home project, bootcamp on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drchrono.com/careers&quot;&gt;drchrono&lt;/a&gt; | Mountain View, CA | Hackerrank test (but not CS trivia, it’s real product problems) &amp;amp; on-site/take-home project w/ presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; | Paris, France | Phone screening followed by a take-home assignment, “Resume” interview, technical interview, product interview, interview with another team, finalizing the hire&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.drizly.com&quot;&gt;Drizly&lt;/a&gt; | Remote | Phone screen, Blind take-home assignment, hiring manager interview, technical code pair interview, panel interview with sales, product, engineering and other stake holders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dronedeploy.com/careers.html&quot;&gt;DroneDeploy&lt;/a&gt; | San Francisco, CA | Pair program on a problem similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.droneseed.co/jobs/&quot;&gt;DroneSeed&lt;/a&gt; | Seattle, WA | Take home assignment of a real problem we’ve worked on, group code review in subsequent interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://blog.dubizzle.com/uae/job-vacancies&quot;&gt;dubizzle&lt;/a&gt; | Dubai, UAE | Take home assignment, general technical questions, pair programming with engineers or tech leads&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://duckduckgo.com/hiring&quot;&gt;DuckDuckGo&lt;/a&gt; | Remote | Up to two paid projects and video call interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-accent.com&quot;&gt;E-accent&lt;/a&gt; | Hilversum, Netherlands; Remote | Skype conversation, take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://easytaxi.com.br&quot;&gt;Easy Taxi&lt;/a&gt; | São Paulo, Brazil | Take-home project, interview to evaluate the candidate’s previous experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eaze.com/careers&quot;&gt;Eaze&lt;/a&gt; | San Francisco, CA | Take home project, on-site interview building off of the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ebayinc.com/join-our-team/start-your-search/find-jobs-by-location/detail/germany&quot;&gt;eBay Kleinanzeigen&lt;/a&gt; | Berlin, Germany | 45 mins technical phone interview, take-home project/review, on-site interview including pair programming with team lead and agile interview with product manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ecaresoft.com&quot;&gt;Ecaresoft&lt;/a&gt; | Monterrey, Mexico | Cultural fit session and Predictive Index test with recruiter, best piece of code review and technical interview with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://echobind.com/culture&quot;&gt;Echobind&lt;/a&gt; | Boston, MA; Remote | Meet the entire team, share examples of previous work and pair with one team member&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.edenspiekermann.com&quot;&gt;Edenspiekermann&lt;/a&gt; | Amsterdam, Netherlands / Berlin, Germany / Los Angeles, CA / San Francisco, CA / Singapore, Singapore | On-site chat about skills and past experiences, review some code samples or a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.ef.com&quot;&gt;EF Education First&lt;/a&gt; | London, UK; Boston, MA | Short phone interview, take-home project, discussion of project and real world engineering problems, meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://eidu.com&quot;&gt;Eidu&lt;/a&gt; | Berlin, Germany | Take-home project, discussion of results with team, and test days with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elnino.tech&quot;&gt;El Niño&lt;/a&gt; | Enschede, The Netherlands; The Hague, The Netherlands | On-site chat about the candidate experience and the company followed by a trial day relevant for the role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.elpassion.com&quot;&gt;El Passion&lt;/a&gt; | Warsaw, Poland | Take-home project, interview to 1) discuss delivered solution and 2) previous projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.electricpulp.com&quot;&gt;Electric Pulp&lt;/a&gt; | Sioux Falls, SD, USA | Phone interviews with leadership team and technical team leads. We are a tight knit team, so emphasis on a great personal fit is as important as technical prowess.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elements.nl/careers&quot;&gt;Elements Interactive&lt;/a&gt; | Almere, The Netherlands &amp;amp; Barcelona, Spain | Take-home project &amp;amp; discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ellucian.com/About-Us/Careers/&quot;&gt;Ellucian&lt;/a&gt; | Reston, VA, USA | Discussion of real world problems (from resume, if possible)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://elmah.io&quot;&gt;elmah.io&lt;/a&gt; | Aarhus, Denmark / Remote | Discussion about code and looking at hobby projects (if any)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.elvie.com&quot;&gt;Elvie&lt;/a&gt; | London, England | Discussing real code, pairing and a paid day to see how you work with the team. No coding for free or time-restricted take-home projects, code challenges or abstract algorithm tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://goo.gl/N7SMKl&quot;&gt;eMarketer&lt;/a&gt; | New York, NY | Short phone interview, then come in and meet the team, check out our space, and have a discussion with team members about real-world problems&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emarsys.com&quot;&gt;Emarsys&lt;/a&gt; | Budapest, Hungary | Take-home project (small, 1-2 days to solve), then discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergentsoftware.net&quot;&gt;Emergent Software&lt;/a&gt; | Minneapolis, MN | Phone intro, discuss recent project, short take home project (4h max) with code review, real world open ended questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.endava.com/en/Careers&quot;&gt;Endava&lt;/a&gt; | Belgrade, Serbia; Bucharest, Romania; Chisinau, Moldova; Cluj-Napoca, Romania; Iasi, Romania; Pitesti, Romania; Skopje, Macedonia; Sofia, Bulgaria; Frankfurt, Germany; Glasgow, Scotland; Hilversum, Netherlands; London, UK; Oxford, UK; Bogota, Colombia; Atlanta, GA; New Jersey, NJ; New York, NY | On-site discussion about previous experience and technical questions about the target technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.engelvoelkers.com/en/tech/&quot;&gt;Engel &amp;amp; Völkers Technology&lt;/a&gt; | Hamburg, Germany | Remote technical interview with an Engineering Manager, followed by a practical coding challenge implemented in 5 hours, ending with a technical discussion with the team on the produced code either remotely or on-site based on geographical practicality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enhancv.com/about.html&quot;&gt;Enhancv&lt;/a&gt; | Sofia, Bulgaria | Talk is cheap, show us your code: github profile or other project examples. Explain them in person / remotely. Discuss habits and interests to see if we have a culture fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enigma.com&quot;&gt;Enigma&lt;/a&gt; | New York, NY | 2-part takehome project, followed by a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://enki.com&quot;&gt;Enki&lt;/a&gt; | London, UK | Skype/phone interview followed by takehome project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ento.com/blog/ento-interview-process-101&quot;&gt;Ento.com&lt;/a&gt; | Melbourne, Australia | On-site interview to talk about your experiences and what you’re looking for in your next role, followed by a take-home practical test relevant to the work you’ll be undertaking at Ento.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.equalexperts.com&quot;&gt;Equal Experts&lt;/a&gt; | London, UK; Manchester, UK; New York, NY; Pune, India; Lisbon, Portugal; Calgary, Canada | Fizzbuzz test done at home followed by Pair Programming session at office and finally face to face technical and attitude interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ericsson.com&quot;&gt;Ericsson&lt;/a&gt; | Dublin, Ireland | Skype/phone interview followed by Face 2 Face interview, discussions and architecture questions followed by final small project on a problem similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://esharesinc.com/jobs&quot;&gt;eShares, Inc&lt;/a&gt; | San Francisco, CA; Palo Alto, CA; Seattle, WA; Rio de Janeiro, Brazil; London, UK; New York, NY | Phone call, practical technical screen, on site to meet the team &amp;amp; explore the company&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://espeo.eu/career&quot;&gt;Espeo Software&lt;/a&gt; | Poznań, Poland | 30 min HR interview, 1 hour technical interview, 1 hour soft skills interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://etermax.com/en/careers/&quot;&gt;Etermax&lt;/a&gt; | Buenos Aires, Argentina | Skype/phone screen with two engineers &amp;amp; HR, 30 min HR onsite interview, 2 hour onsite pair programming session (with focus on testing and design) with feedback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.etixeverywhere.com/en/job-offers&quot;&gt;Etix Everywhere&lt;/a&gt; | Luxembourg City, Luxembourg&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://euranova.eu&quot;&gt;EURA NOVA&lt;/a&gt; | Mont-Saint-Guibert, Belgium; Marseille, France; Tunis, Tunisia | attitude interview, unpaid take-home project, technical discussion with 1 or 2 technical employees (remote or face 2 face), face 2 face discussion with HR, partner, and technical staff to have a foretaste of the collaboration&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.europaymentgroup.com&quot;&gt;Euro Payment Group&lt;/a&gt; | Frankfurt, Germany | Take-home project followed by face to face interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://exoscale.ch&quot;&gt;Exoscale&lt;/a&gt; | Bern, Switzerland | Take-home project. Discussion and presentation. Then entire team meet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.extend.com/careers&quot;&gt;Extend&lt;/a&gt; | San Francisco, CA; Dallas, TX; Remote | Phone call, a take home project similar to making a PR at work, then a meet &amp;amp; greet with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fdex.com.br&quot;&gt;F(x)&lt;/a&gt; | São Paulo, Brazil | Skype interview, Take-home project and onsite interview to evaluate the candidate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/careers/jobs&quot;&gt;Facebook (Front End Engineer)&lt;/a&gt; | Tel Aviv, Israel; London, UK; US: Menlo Park, CA; Seattle, WA; Washington, DC | Initial phone code interview, then on site interview (or remote when not possible) with code and design / architecture interviews. All questions are based on actual problems the company has solved in the past.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.facile.it&quot;&gt;Facile.it&lt;/a&gt; | Milan, Italy; Cagliari, Italy; Remote | Initial call/Skype interview with HR. Tech interview about OOP concepts, HTTP and REST API design questions with 2 engineers. Brief talk with VP of Engineering or CTO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fairwinds.com/careers&quot;&gt;Fairwinds&lt;/a&gt; | Remote | Start with a brief talk with CTO or VP of Engineering, take home coding challenge, then remote interviews with several people on the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.falcon.io/jobs/&quot;&gt;Falcon.io&lt;/a&gt; | Copenhagen, Denmark | Initial call/Skype culture interview. Take-home tech assignment (game) and code review. On-site Interview about your experience and meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fastbill.com/jobs&quot;&gt;FastBill&lt;/a&gt; | Frankfurt, Germany | Initial interview via Skype/Zoom. Small tech-home project based on the specific job. Afterwards code review and technical discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fatmap.com&quot;&gt;FATMAP&lt;/a&gt; | London, UK; Berlin, Germany; Vilnius, Lithuania | Skype discussion, Take-home project, Face to face&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fauna.com&quot;&gt;Fauna&lt;/a&gt; | San Francisco, CA / Remote | Take home project, then follow up with interviews on-site or remote. Interviews are both technical and non-technical. Technical interviews comprehend the scope of the home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://feather-cfm.com&quot;&gt;Feather&lt;/a&gt; | Remote | Take-home challenge, portfolio discussion &amp;amp; team meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/fetchrewards&quot;&gt;Fetch Rewards&lt;/a&gt; | Remote | Short take-home project. 50 min screening interview that includes discussion of project. 5.5 hr (w/ breaks) final interview that involves speaking with your future manager and a non-technical product manager, a real-world coding problem, and high-level and low-level system design problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.findy.us/findy-saiyo&quot;&gt;Findy&lt;/a&gt; | Tokyo, Japan | Tech interview + On-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wearefine.com/careers&quot;&gt;FINE&lt;/a&gt; | Portland, OR | Small take-home challenge + follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.firemind.io&quot;&gt;Firemind&lt;/a&gt; | Maidstone, UK; London, UK; Remote | Small pre-interview challenge on github + discussion face to face in person or via video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thefitbot.com/careers.html&quot;&gt;Fitbot&lt;/a&gt; | Boulder, CO | Pairing &amp;amp; writing code with the founders for a few hours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flatfox.ch&quot;&gt;Flatfox&lt;/a&gt; | Zurich, Switzerland | Informal conversation to check mutual fit, small (4h) take-home assignment, discussion in team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/adhawk?location=Sarasota%20Florida&quot;&gt;FloorForce&lt;/a&gt; | Sarasota, FL / Remote | Intro phone call with HR, second conversation with FloorForce engineer, and final pairing interview with FloorForce engineer over a screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowdash.com/careers&quot;&gt;Flowdash&lt;/a&gt; | San Francisco, CA | Technical phone interview, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluidly.com&quot;&gt;Fluidly&lt;/a&gt; | London, UK | Casual 30min phone call. ~1hr take home tech exercise (not pass or fail). 1 stage onsite interview - discussion about experience, 1 hour pair programming on the real code base, then your turn to interview us!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fold.money&quot;&gt;Fold&lt;/a&gt; | Bangalore, India; Remote | Phone call, followed by a small take home problem. Finally a F2F or Zoom pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://food52.com/jobs&quot;&gt;Food52&lt;/a&gt; | New York, NY; Remote | Take-home project, discussion on-site or remote, interviews with both technical and non-technical staff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fooji.com&quot;&gt;Fooji&lt;/a&gt; | Lexington, KY; Remote | Take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.formidable.com/careers&quot;&gt;Formidable Labs&lt;/a&gt; | Seattle, WA; London, UK; Remote | Take-home project, remote pair programming, discussion on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fortumo.com/careers&quot;&gt;Fortumo&lt;/a&gt; | Tallinn, Estonia; Tartu, Estonia | After a 30-min call you get a simplified version of a task that has recently been a challenge for the engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://founders.as/joinus&quot;&gt;Founders&lt;/a&gt; | Copenhagen, Denmark | Take Home project + Interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.foundryinteractive.com/contact&quot;&gt;Foundry Interactive&lt;/a&gt; | Seattle, WA | On-site or remote discussion, paid trial project with pairing and code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fournova.com/jobs&quot;&gt;fournova&lt;/a&gt; | Remote | Take-home project, discussion via video call&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frappe.io/careers&quot;&gt;Frappe&lt;/a&gt; | Mumbai, India; Remote | Take-home project, a short pair programming exercise, discussion and interview with members of the Engineering team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeagent.com/company/careers&quot;&gt;FreeAgent&lt;/a&gt; | Edinburgh, UK | Take-home project, pair programming, discussion and interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freeletics.com/en/corporate/jobs&quot;&gt;Freeletics&lt;/a&gt; | Munich, Germany | Small real-world challenge, multiple interviews on-site/remote and social gathering with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.freetrade.io/careers&quot;&gt;Freetrade&lt;/a&gt; | London, England | Initial hangout with fizz buzz style question followed by an on-site real world coding question and systems design conversation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://friday-jobs.personio.de&quot;&gt;FRIDAY&lt;/a&gt; | Berlin, Germany | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://frontside.io/careers&quot;&gt;Frontside&lt;/a&gt; | Austin, Texas | Phone interview with remote pairing session. Followed by in person pairing (paid for the day) and lunch with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fullfacing.com/vacancies&quot;&gt;Full Facing&lt;/a&gt; | Cape Town, South Africa | Take-home real-world challenge, interview on-site or remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.funda.nl/vacatures&quot;&gt;Funda&lt;/a&gt; | Amsterdam, The Netherlands | Take Home test + Discussion On-Site/Remote&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fundapps.co/about-us/join-our-team&quot;&gt;FundApps&lt;/a&gt; | London, UK | Coffee with an Engineer; take-home kata; code review + on-site pair programming exercise.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G - I&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gamevycareers.com&quot;&gt;Gamevy&lt;/a&gt; | London, UK; Bilbao, ES; Remote | Informal culture discussions, pair programming with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.garmin.com&quot;&gt;Garmin&lt;/a&gt; | Tucson, AZ | Non-technical phone screen, technical phone screen (questions about projects on your resume), in-person interview: programming an arduino, given 3 hours and a laptop with internet access&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.garnercorp.com&quot;&gt;Garner&lt;/a&gt; | Toronto, Canada | step 1: online chat with hiring manager, step 2: at home assignment solving real-life problem, step 3: on-site pair programming with engineers, step 4: offer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gasketgames.com/work-with-us&quot;&gt;Gasket Games&lt;/a&gt; | Vancouver, Canada | Non-technical phone screen, technical phone screen (open-ended questions), in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gathercontent.com/about-us&quot;&gt;GatherContent&lt;/a&gt; | Remote | Culture-first interviews, pair programming and remote, informal technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gemini.com/careers&quot;&gt;Gemini&lt;/a&gt; | New York, NY | Phone chat. Take-home project, discussion on-site. Questions on prior experiences and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genui.com&quot;&gt;GenUI&lt;/a&gt; | Seattle, WA | A short phone screen with questions regarding general knowledge related to the open position, then a half day pair programming interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ghostinspector.com/jobs&quot;&gt;Ghost Inspector&lt;/a&gt; | Remote | Video interview, short (under 2 hour) take-home project, and team video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.ginetta.net&quot;&gt;Ginetta&lt;/a&gt; | Zurich, Switzerland; Braga, Portugal | Culture-first interviews, take home assignment that resembles a real-world problem we often solve, then discussion about the assignment in-person with pair-programming improvement sessions with our developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/about/careers&quot;&gt;GitHub&lt;/a&gt; | Remote; San Francisco, CA; Boulder, CO| Take-home exercise, code review and technical discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/jobs/apply/&quot;&gt;GitLab&lt;/a&gt; | Remote | A series of video calls, and a coding exercise involving working on a Merge Request that is like a real work task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gitprime.com&quot;&gt;GitPrime&lt;/a&gt; | Denver, CO; Remote | small short term real-world project, paid project on production code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://glints.com/sg/inside/careers/&quot;&gt;Glints&lt;/a&gt; | Singapore, Singapore; Jakarta, Indonesia | Culture fit interview, take home assignment that resembles a real-world problem, walkthrough about the assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gocardless.com/about/jobs&quot;&gt;GoCardless&lt;/a&gt; | London, UK | Project to work at home, general technical questions, pair programming with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.godaddy.com/careers/overview&quot;&gt;GoDaddy&lt;/a&gt; | Sunnyvale, CA | Pair programming with senior engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gojek.io&quot;&gt;GoJek&lt;/a&gt; | Bangalore, India; Jakarta, Indonesia; Singapore, SG; Bangkok, Thailand | Take-home exercise, Pair programming with senior engineer, Techinal problem solving and discussion, Cultural Fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gower.st&quot;&gt;Gower Street Analytics&lt;/a&gt; | Remote; London, UK | Initial telephone chat, then either a) work with us, fully paid, for a day on real code with the team; or b) pair-programming on a code kata with the team members for four pomodoros. Your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graffino.com&quot;&gt;Graffino&lt;/a&gt; | Sibiu, Romania | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://graftonstudio.com&quot;&gt;Grafton Studio&lt;/a&gt; | Boston, MA | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://gram.gs&quot;&gt;Gram Games&lt;/a&gt; | London, UK / Istanbul, Turkey | Initial interview -&amp;gt; Take home -&amp;gt; Take home discussion call -&amp;gt; On site code review and technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gramercytech.com&quot;&gt;Gramercy Tech&lt;/a&gt; | New York, NY | Pair programming &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grandcentrix.net/jobs&quot;&gt;grandcentrix&lt;/a&gt; | Cologne, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chatgrape.com/jobs/&quot;&gt;Grape&lt;/a&gt; | Vienna, Austria / Remote | Github or code samples -&amp;gt; Pair programming -&amp;gt; Skype/phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graph.cool&quot;&gt;Graphcool&lt;/a&gt; | Berlin, Germany | On-site pair programming of a small, isolated real world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.graphicacy.com&quot;&gt;Graphicacy&lt;/a&gt; | Washington, DC | Phone interview; in-person or virtual interview depending on location and availability; two brief technical assignments focused on flexibility, creativity, and general competency&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.graphistry.com&quot;&gt;Graphistry&lt;/a&gt; | San Francisco, CA; Remote | Discuss product/market, engineering, and culture, review past code/project, and for junior developers, choice of take home or code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.grok-interactive.com&quot;&gt;Grok Interactive&lt;/a&gt; | San Antonio, TX | Take-home project with code review and a follow-up in-person interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.gruntwork.io&quot;&gt;Gruntwork&lt;/a&gt; | Remote | Paid, take-home project with pair coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gtmsportswear.com/careers&quot;&gt;GTM Sportswear&lt;/a&gt; | Manhattan, KS / Remote | Remote pairing session, then a take-home test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hacktiv8.com&quot;&gt;Hacktiv8&lt;/a&gt; | Jakarta, Indonesia | Phone call for quick project &amp;amp; personal introduction followed by Video call interview with project owner for discussion about the project and general question on how the project should be solved.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://happyteam.io&quot;&gt;Happy Team&lt;/a&gt; | Warsaw, Poland; Remote | General technical questions, takehome paid exercise with feedback/discussion during implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.happypie.com&quot;&gt;Happypie&lt;/a&gt; | Uppsala, Sweden | Takehome exercise with code review after, in-person interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hash.com.br/index.html&quot;&gt;Hash&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hashrocket.com&quot;&gt;Hashrocket&lt;/a&gt; | Chicago, IL/Jacksonville Beach, FL | Remote pairing session, paid week pair programming with everyone on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://headspring.com/about/careers&quot;&gt;Headspring&lt;/a&gt; | Austin, TX; Houston, TX; Monterrey, Mexico | Take-home situational questionnaire and code exercise, with in-person follow up to discuss and pair for changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://healthify.us&quot;&gt;Healthify&lt;/a&gt; | Remote &amp;amp; New York City, NY | Take-home project, discussion via Zoom, pair programming with us on our app for a day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heavenhr.com&quot;&gt;HeavenHR&lt;/a&gt; | Berlin, Germany | Take home project based on the candidate’s experience and future responsibilities. Then discussion about the solution&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://helabs.com&quot;&gt;HE:labs&lt;/a&gt; | Rio de Janeiro, Brazil &amp;amp; Remote | Take-home project and discussion via Skype.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hellofresh.com/jobs&quot;&gt;HelloFresh&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.heptio.com/jobs&quot;&gt;Heptio&lt;/a&gt; | Seattle, WA; Remote | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://heroku.com/careers&quot;&gt;Heroku&lt;/a&gt; | Remote | Timeboxed independent project on Github, discussion/debrief of project via Hangouts, productionization discussion via Hangouts, “meet the team” meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hhcc.com/careers&quot;&gt;Hill Holliday&lt;/a&gt; | Boston, MA | Take-home project on GitHub, in-person interview / culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.hireology.com/careers&quot;&gt;Hireology&lt;/a&gt; | Chicago, IL; Remote | Walk through personal/work projects and discuss experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hiventive.com&quot;&gt;Hiventive&lt;/a&gt; | Pessac, France | Phone interview, home coding challenge, on-site interview with general programming questions, discussion of proposed solutions and personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://holidaypirates.group/en/jobs&quot;&gt;HolidayPirates&lt;/a&gt; | Berlin, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.holobuilder.com&quot;&gt;HoloBuilder&lt;/a&gt; | Aachen, Germany | Take-home project, discussion via Skype or on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hologram.io/careers&quot;&gt;Hologram&lt;/a&gt; | Chicago, IL; Remote | Intro call, take-home project taken from production work, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homechef.com/careers&quot;&gt;Home Chef&lt;/a&gt; | Chicago, IL; Remote | Get-to-know-you meeting with the team, followed by a half-day collaborative coding session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.homelight.com/engineering&quot;&gt;HomeLight&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; Seattle, WA | Phone screen, take home that is close to production code, onsite with pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://housemarque.com&quot;&gt;Housemarque&lt;/a&gt; | Helsinki, Finland | Interview, take-home project, then interview and code review on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hoxhunt.com/careers/&quot;&gt;HoxHunt&lt;/a&gt; | Helsinki, Finland | Take-home project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://humanapi.co/company/careers&quot;&gt;Human API&lt;/a&gt; | Redwood City, CA | Technical phone interview, then on-site pair programming and design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://io.co.za/opportunities&quot;&gt;I|O&lt;/a&gt; | Cape Town, South Africa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://icalialabs.com&quot;&gt;Icalia Labs&lt;/a&gt; | Monterrey, Mexico | Pair programming, cultural fit session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://iconstituent.com/careers/&quot;&gt;iConstituent&lt;/a&gt; | Washington, DC | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ideamotive.co&quot;&gt;Ideamotive&lt;/a&gt; | Warsaw, Poland &amp;amp; Remote | Take-home project, technical interview with developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ideo.com/jobs&quot;&gt;IDEO&lt;/a&gt; | San Francisco, CA; New York, NY; Chicago, IL; Cambridge, MA | Take home project that resembles a problem IDEO solves for, then pairing session in person or over video chat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/scout24&quot;&gt;ImmobilienScout24&lt;/a&gt; | Berlin, Germany | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.impraise.com&quot;&gt;Impraise&lt;/a&gt; | Amsterdam, The Netherlands | Take home test, real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.incloud.de&quot;&gt;Incloud&lt;/a&gt; | Darmstadt, Germany | Technical interview with developers, followed by a full day on site with a practical project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.indellient.com/careers&quot;&gt;Indellient&lt;/a&gt; | Oakville, Canada | Series of interviews both technical and non-technical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inevitableinnovations.com&quot;&gt;INEVITABLE&lt;/a&gt; | Manchester, UK | Take-home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/careers&quot;&gt;InfluxData&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Technical and non-technical interviews, pair programming, with prospective manager and multiple prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.infosum.com&quot;&gt;InfoSum&lt;/a&gt; | Basingstoke, UK | On-site unsupervised exercise &amp;amp; discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://inkindcapital.com&quot;&gt;inKind Capital&lt;/a&gt; | Boulder, CO | Discussing real-world problems, pair programming, dinner &amp;amp; drinks with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.inmar.com/careers&quot;&gt;Inmar&lt;/a&gt; | Winston-Salem, NC; Austin, TX &amp;amp; Remote | Take-home project and conversation-style interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.innoplexus.com&quot;&gt;Innoplexus&lt;/a&gt; | Pune, India; Frankfurt, Germany | Take-home projects and On-site pair programming assignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.instacart.com&quot;&gt;Instacart&lt;/a&gt; | San Francisco, CA | Take-home real world project, pair programming on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://internshala.com/internships/internship-at-InstantPost&quot;&gt;InstantPost&lt;/a&gt; | Bangaluru, India | Remote assignment followed by Technical and Team round interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.integral.io&quot;&gt;Integral.&lt;/a&gt; | Detroit, MI | Initial remote technical screen featuring test-driven development &amp;amp; pair programming, then on-site full day interview that involves pair programming on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.intelipost.com.br&quot;&gt;Intelipost&lt;/a&gt; | São Paulo, BR | Take-home project, on-site code review and presentation (skype available if needed), discussion involving real world problems and interviews with different teams&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interfrog.de/jobs&quot;&gt;Interfrog Produktion GmbH&lt;/a&gt; | Mannheim, Germany | Phone interview with developer and CEO to get to know each other and to understand skills and background. Follow-up interview to discuss technical realization of sample work which is handed over after the first interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://interset.com/careers&quot;&gt;Interset&lt;/a&gt; | Ottawa, Canada | Discussion of technical background and past experience. Relevant take-home project for junior developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itexperts.be&quot;&gt;IT Experts&lt;/a&gt; | Eeklo, Belgium | On site interview -&amp;gt; 1 or 1/2 day at the office to solve a real world problem with the team -&amp;gt; job offer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itdesign.de/karriere/&quot;&gt;itdesign&lt;/a&gt; | Tübingen, Germany | Short phone or personal interview. A day at our company to give you and us the opportunity to get to know each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ithaka.travel&quot;&gt;Ithaka&lt;/a&gt; | Mumbai, India | Phone interview followed by a small development task. Finally a phone interview with CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://itrellis.com&quot;&gt;iTrellis&lt;/a&gt; | Seattle, WA | Phone screen, then a take-home project, then pairing (remote or on-site) with 3 developers on the take-home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.izettle.com/jobs&quot;&gt;iZettle&lt;/a&gt; | Stockholm, Sweden | Remote pair programming exercise, propose an architecture for an application and discuss about it in an informal format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;J - L&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jamasoftware.com&quot;&gt;Jamasoftware&lt;/a&gt; | Portland, OR | Initial phone screen with hiring manager. In person pairing on project similar to day-to-day work with a separate cultural interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamitlabs.com/jobs&quot;&gt;Jamit Labs&lt;/a&gt; | Karlsruhe, Germany | Phone interview or on-site interview &amp;amp; take-home code challenge or on-site programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jetstack.io/careers&quot;&gt;Jetstack&lt;/a&gt; | London, UK | Phone screen; shared terminal session on Linux &amp;amp; Programming; Take home task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jiminny.com&quot;&gt;Jiminny&lt;/a&gt; | Sofia, Bulgaria | Phone screen. Take-home exercise. Follow-up discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jitbit.com&quot;&gt;Jitbit&lt;/a&gt; | Remote; London, UK; Tel-Aviv, Israel | Take-home real-world task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weare.jobtome.com/careers&quot;&gt;Jobtome&lt;/a&gt; | Stabio, Switzerland | Phone screen introduction with hiring manager. In site (or screen call) with Engineer Manager for a talk on skills and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://journaltech.com/careers&quot;&gt;Journal Tech&lt;/a&gt; | Los Angeles, CA | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jplusplus.org&quot;&gt;Journalism++&lt;/a&gt; | Berlin, Germany | Apply through a &lt;a href=&quot;http://internship.jplusplus.org&quot;&gt;relevant online challenge&lt;/a&gt; to show your technical skills and your capacity to investigate&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.justwatch.com/us/talent&quot;&gt;JustWatch&lt;/a&gt; | Berlin, Germany | Take-Home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.khealth.ai&quot;&gt;K Health&lt;/a&gt; | Tel Aviv, Israel | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getkahoot.com/jobs&quot;&gt;Kahoot!&lt;/a&gt; | London, UK / Oslo, Norway | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kata.ai&quot;&gt;Kata.ai&lt;/a&gt; | Malang, Indonesia / Jakarta, Indonesia | Take-home assignment, then invited to discuss the assignment and interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kayako.com&quot;&gt;Kayako&lt;/a&gt; | London, UK / Gurgaon, India | Take-home assignment, series of experience based interviews, cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kentik.com/careers&quot;&gt;Kentik&lt;/a&gt; | San Francisco, CA | Phone screening to discuss technical background and past experience. Take-home assignment followed by on-site code review and interview. Cultural fit assessment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://keymetrics.io&quot;&gt;Keymetrics&lt;/a&gt; | Paris, France | Phone Interview, Take-home project based on our &lt;a href=&quot;https://github.com/keymetrics/keymetrics-api&quot;&gt;API&lt;/a&gt;, IRL meeting with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kienguru.vn&quot;&gt;Kiến Guru&lt;/a&gt; | Hồ Chí Minh, Vietnam | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.kindredplc.com&quot;&gt;Kindred Group, Native Apps Team&lt;/a&gt; | Stockholm SE, London UK | On-site/Skype programming task, Interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kinnek.com/jointeam&quot;&gt;Kinnek&lt;/a&gt; | New York, NY | Phone screen, on-site pairing session, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.kiwi.com&quot;&gt;Kiwi.com&lt;/a&gt; | Brno, Czech Republic | Phone Interview, Take-home projects, On-site code review &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.knock.com/careers&quot;&gt;Knock.com&lt;/a&gt; | San Francisco, CA / New York, NY / Remote | Phone Interview, Take-home project, On-site technical conversation relating to the tech stack you would be hired to build with&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://knplabs.com&quot;&gt;KNPLabs&lt;/a&gt; | Nantes, France | First step: screening call directly with the CEO, to discuss company vision, assess cultural fit and experience. Second step: call or IRL interview with a developer and a project facilitator , technical discussions with focus on soft skills. The goal of the interview is for the 2 KNPeers to be able to answer: “Do I want to work with this person ?” If both say yes, the person is hired. If even at least one says no, the person is not hired.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.konghq.com/careers&quot;&gt;Kong&lt;/a&gt; | San Francisco, CA | Phone interview. Pairing and technical interviews. Take home assigment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.kongregate.com/jobs&quot;&gt;Kongregate&lt;/a&gt; | Portland, OR | Phone screening. Take home project. On-site pairing and conversational technical interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.korbit.co.kr/about/jobs&quot;&gt;Korbit&lt;/a&gt; | Seoul, South Korea | Take home assignment followed by on-site code review and interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kulkul.tech/careers&quot;&gt;Kulkul Tech&lt;/a&gt; | Jakarta, Indonesia | Take home and an in-person system design interview, then soft skills and culture assessment via interviews with the senior leadership team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.coop&quot;&gt;Lab.Coop&lt;/a&gt; | Budapest, Hungary | Partnership-fit discussion, code-review and trial days.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lab49.com/careers/&quot;&gt;Lab49&lt;/a&gt; | New York, NY; Washington, DC; London, UK; Sydney, AU | First interview - Pairing interview using Codility. Final interviews that include a coding challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://landing.jobs/at/landing-jobs&quot;&gt;Landing.jobs&lt;/a&gt; | Lisbon, Portugal | Interviews (in-person or remote), Take home coding project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://engineering.lanetix.com&quot;&gt;Lanetix&lt;/a&gt; | San Francisco, CA | &lt;a href=&quot;https://engineering.lanetix.com/2015-10-20/hiring-process&quot;&gt;Our Hiring Process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lattice.com/careers&quot;&gt;Lattice&lt;/a&gt; | San Francisco, CA; New York, NY; Remote | Technical exercises based on work we do at Lattice, discussion of a new architecture to solve a real world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchacademy.com/careers&quot;&gt;Launch Academy&lt;/a&gt; | Boston, Philadelphia | Nontechnical phone screen, pair programming with team member, and potentially a “guest lecture” for our students&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/careers&quot;&gt;LaunchDarkly&lt;/a&gt; | Oakland, CA | Informational phone screen with Eng leadership, take home project, onsite interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leapsome.com&quot;&gt;Leapsome&lt;/a&gt; | Berlin, Germany | Phone screen with technical co-founder, take home case study, onsite culture-fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learningbank.dk&quot;&gt;Learningbank&lt;/a&gt; | Copenhagen, DK | Take home assignment, followed by on-site code review.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.legalstart.fr&quot;&gt;Legalstart.fr&lt;/a&gt; | Paris, France | Telephone interview followed by take-home challenges. Suitable applicants are asked to do further on-pair interviews on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.leverton.ai&quot;&gt;Leverton&lt;/a&gt; | Berlin, Germany | Initial chat with the HR continued with 1-2 rounds chat with the team; followed by a technical test and finally a chat with the CTO/MD. &lt;a href=&quot;http://leverton-jobs.personio.de&quot;&gt;Jobs page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.libertymutualgroup.com/careers&quot;&gt;Liberty Mutual&lt;/a&gt; | Seattle, WA; Boston, MA; Indianapolis, IN | Initial interview, discussion on-site, interview with peers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.librato.com/jobs&quot;&gt;Librato&lt;/a&gt; | San Francisco, CA; Boston, MA; Austin, TX; Vancouver, Canada; Krakow, Poland | Take home coding project, conversational technical interviews on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lightningjar.agency&quot;&gt;Lightning Jar&lt;/a&gt; | San Antonio, Tx | Remote pairing session, Initial interview,discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lightricks.com&quot;&gt;Lightricks&lt;/a&gt; | Jerusalem, Israel | Initial interview, Take home project, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.linkresearchtools.com/job-offers&quot;&gt;LinkResearchTools&lt;/a&gt; | Vienna, Austria | Skype interview, mini take-home exercise, discussion on-site / personal interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linxsystems.com&quot;&gt;Linx Systems&lt;/a&gt; | Bloomington, IL / Remote | 5-10 minute take home project; followed by a non-technical interview; finish up with a second take home project or paired with a developer for a 30-60 minute session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://listium.com/jobs&quot;&gt;Listium&lt;/a&gt; | Melbourne, Australia | Design and code proof of concept features with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://litmus.com/careers#openings&quot;&gt;Litmus&lt;/a&gt; | Remote | General technical questions, take-home code challenge, discussion, on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.littlethings.com/careers.html&quot;&gt;LittleThings&lt;/a&gt; | New York, NY | Take home code challenge, Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://loanzen.in/team.html#Career&quot;&gt;LoanZen&lt;/a&gt; | Bengaluru, India | Initial phone interview about experience, a solve-at-home project based on the kind of work we do at our company, on-site interview discussing the submitted solution and a general discussion with the whole team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lob.com/careers&quot;&gt;Lob&lt;/a&gt; | San Francisco, CA | Initial phone screen followed by an on-site interview. Technical problems discussed during the interview are all simplified versions of problems we’ve had to solve in production. Our entire interview process and what we’re looking for is described in our blog post &lt;a href=&quot;https://lob.com/blog/how-we-interview-engineers&quot;&gt;How We Interview Engineers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locastic.com/posao&quot;&gt;Locastic&lt;/a&gt; | Split, Croatia | Take-home code challenge, tehnical discussion &amp;amp; on-site programming session, meet &amp;amp; greet with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.locaweb.com.br/carreira&quot;&gt;Locaweb&lt;/a&gt; | São Paulo, Brazil | Skype interview, take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.logiball.de/en/jobs/&quot;&gt;LOGIBALL GmbH&lt;/a&gt; | Berlin, Hannover and Herne in Germany | Interviews and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://logicsoft.co.in&quot;&gt;Logic Soft&lt;/a&gt; | Chennai, India | Phone discussion, F2F pair programming exercise + discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.lonres.com/public/working-us&quot;&gt;LonRes&lt;/a&gt; | London, United Kingdom | Quick introduction call with tech (Skype), coding task for ≈1 hour, face-to-face interview (or via Skype) and meeting with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lookbookhq.com/about/careers&quot;&gt;LookBookHQ&lt;/a&gt; | Toronto, Canada | On-site discussion, pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.useloom.com/careers&quot;&gt;Loom&lt;/a&gt; | San Francisco, CA | Google Hangouts resume dive on past experience, take-home project OR architectural phone screen, on-site interviews (2 technical architecture related to work, 1 or 2 non-technical)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lovion.de&quot;&gt;Lovion GmbH&lt;/a&gt; | Dortmund, Germany | On-site or remote interview for technical and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oiluna.com&quot;&gt;Luna&lt;/a&gt; | Sao Paulo, Brazil | Take-home project and/or discussion (on-site or remote)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lydia-app.com/en/company/jobs&quot;&gt;Lydia&lt;/a&gt; | Paris, FR | Mini take-home project, phone interview, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyft.com/jobs&quot;&gt;Lyft’s Mobile Team&lt;/a&gt; | San Francisco, CA; Seattle, WA; New York, NY; Minsk, Belarus; Mexico City, Mexico | On-site project, discussion of candidate’s completed project afterwards&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lykon.de&quot;&gt;Lykon&lt;/a&gt; | Berlin, Germany | Phone interview followed by home assignment that reflect our daily work and then on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.lyoness-corporate.com/de-AT/Karriere/Jobangebote&quot;&gt;Lyoness Austria GmbH&lt;/a&gt; | Graz, Austria | Take-Home project, discussion on-site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;M - O&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madetech.com/careers&quot;&gt;Made Tech&lt;/a&gt; | London, UK | &lt;a href=&quot;https://github.com/madetech/handbook/tree/master/guides/hiring#20-minute-phone-conversation&quot;&gt;Our hiring process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://magnetis.workable.com&quot;&gt;Magnetis&lt;/a&gt; | São Paulo, Brazil &amp;amp; Remote | Phone interview + take home assignment, followed by pair programming and informal meeting with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers-mlssoccer.icims.com/jobs/search?ss=1&amp;amp;searchCategory=20285&quot;&gt;Major League Soccer&lt;/a&gt; | New York, NY | Phone interview + short take home project, which is daily work focused. In person interview could involve discussing past projects or pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.makemusic.com/careers/&quot;&gt;MakeMusic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://maketime.workable.com&quot;&gt;MakeTime&lt;/a&gt; | Lexington, KY | Practical exercise and/or a pairing session on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mango-solutions.com/wp/about-mango/team&quot;&gt;Mango Solutions&lt;/a&gt; | London (UK), Chippenham (UK) | Initial phone interview, followed by on-site interview with take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mapbox.com/jobs&quot;&gt;Mapbox&lt;/a&gt; | San Francisco, CA; Washington, DC; Ayacucho, Peru; Bangalore, India; Berlin, Germany; Remote | Conversational interviews, paid onsite project with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mattermost.com/careers/&quot;&gt;Mattermost&lt;/a&gt; | Remote | Follow-up questions over email, a couple of video calls, audition (paid real-world “try out” project), video call to discuss audtion, and then a video call with the CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mavenlink.com/careers&quot;&gt;Mavenlink&lt;/a&gt; | San Francisco, CA; Irvine, CA; Salt Lake City, UT | On-site pairing with multiple engineers. Pairing exercises and pairing on company code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.maxwellhealth.com/careers&quot;&gt;Maxwell Health&lt;/a&gt; | Boston, MA | Take-home exercise or pairing session with team. Then conversational meetings with members of the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://me-company.de/jobs/&quot;&gt;Me &amp;amp; Company&lt;/a&gt; | Düsseldorf, Germany | You join us for one or two paid trial days to work on an assignment and to meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mediapop.co&quot;&gt;Media Pop&lt;/a&gt; | Singapore, Singapore | Take-home or unsupervised (onsite) real-world assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.meetrics.com&quot;&gt;Meetrics&lt;/a&gt; | Berlin, Germany | Initial interview, take-home code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://underthehood.meltwater.com/jobs&quot;&gt;Meltwater&lt;/a&gt; | Manchester, NH | Small take home exercise that will be presented to the team during a QA style interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mention.workable.com&quot;&gt;Mention&lt;/a&gt; | Paris, FR | Take-home small exercise followed up by on site meetings with your future coworkers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.mercadolibre.com&quot;&gt;Mercado Livre&lt;/a&gt; | São Paulo, Brazil | Phone interview with HR department, Takehome project and discussion (on-site or remote) with an interview to evaluate the candidate’s previous experience and Cultural Fit interview with a manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mercatus.com/company/careers&quot;&gt;Mercatus&lt;/a&gt; | Toronto, Canada | Practical on-site project similar to daily work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.metro-markets.de/careers/&quot;&gt;Metro Markets&lt;/a&gt; | Düsseldorf, Germany | You can get to know us by joining fully remote interviews with us or you can come and visit us onsite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mfind.pl/dolacz-do-nas/&quot;&gt;mfind&lt;/a&gt; | Warsaw, PL | Phone call about technical experience, Take-home project or technical test(depends on experience), Onsite interview with technical lead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://midrive.com/careers&quot;&gt;miDrive&lt;/a&gt; | London, UK | Phone screen, Take-home project / technical test, Onsite interview with senior and peer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.milchundzucker.de&quot;&gt;milch &amp;amp; zucker&lt;/a&gt; | Gießen, Germany | Interview with direct feedback, applicants providing working sample, code review (product code or personal code of applications)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.minutemedia.com/careers/&quot;&gt;Minute Media&lt;/a&gt; | Tel-Aviv, Israel | Phone screening with engineer. On-site real-world challenge questions with two engineers. Sometimes a take-home assignment or existing code sample submission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mirumee.com/jobs&quot;&gt;Mirumee&lt;/a&gt; | Wroclaw, Poland; Remote | Pair programming and code review using one of the issues (or Pull Requests) in our open-source Saleor project, general discussion about programming, technology and candidate’s experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixmax.com/careers&quot;&gt;Mixmax&lt;/a&gt; | San Francisco, CA | Takehome assignment purely based on their platform, followed by phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobilecashout.com&quot;&gt;MobileCashout&lt;/a&gt; | Barcelona, Spain; Valencia, Spain | Quick introduction video call with a tech (less than 10-15 minutes). On-site open source contribution to a project of candidates choosing, paired with a tech from the team. Interview and a short questionaire about software design and relevant technologies. Interview and presentation of the company with a HR rep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobilethinking.ch&quot;&gt;Mobilethinking&lt;/a&gt; | Geneva, Switzerland | 1 hour discussion about technical background and past experiences, preferably in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.modeanalytics.com/careers&quot;&gt;Mode&lt;/a&gt; | San Francisco, CA | Phone interview followed by onsite pair-architecting and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mokahr.com&quot;&gt;MokaHR&lt;/a&gt; | Beijing, China | Take home project/challenge, then on-site programming session taken from problems we encounter at work&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://moneytree.jp&quot;&gt;Moneytree Front-end Web Team&lt;/a&gt; | Tokyo, Japan | Pair programming exercise and social gathering with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://monzo.com&quot;&gt;Monzo&lt;/a&gt; | London, UK &amp;amp; Remote | Phone interview with another engineer. Take-home assignment. Call to debrief on take-home assignment. Half-day interview (on-site or Hangouts) with three conversational sessions: (1) building on take-home test &amp;amp; real-world system design (verbal and collaborative); (2) digging into knowledge &amp;amp; understanding in 1-2 other relevant technical areas; (3) general background, teams and ways of working.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moteefe.com/jobs&quot;&gt;Moteefe&lt;/a&gt; | London, UK &amp;amp; Remote | Interview with CTO. Take home project/challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mutualmobile.com/careers&quot;&gt;Mutual Mobile&lt;/a&gt; | Austin, TX; Hyderabad, India | Technical discussion, code test based on actual work you’ll be doing, panel style discussions for cross-functional and culture-fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.mutualofomaha.com/careers&quot;&gt;Mutual of Omaha&lt;/a&gt; | Omaha, NE, USA | Panel Style Interviews analyzing problem solving, ability to adapt well to change, and interpersonal communication skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mutuallyhuman.com&quot;&gt;Mutually Human Software&lt;/a&gt; | MI, OH, WA | Collaborative problem analysis and design exercise, pairing exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mux.com/jobs/&quot;&gt;Mux&lt;/a&gt; | San Francisco, CA; London, UK &amp;amp; Remote | Hands-on software engineer and system-design interviews that focus on collaboratively building practical applications at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mytaxi.com&quot;&gt;My Taxi&lt;/a&gt; | Hamburg, Germany | Video chat with HR, Take Home Assignment, Review of Assignment with a technical member, Technical interview and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.myheritage.com&quot;&gt;MyHeritage&lt;/a&gt; | Or Yehuda, Israel; Kyiv, Ukraine | Video call with HR, problem solving test on codility.com, video call with tech lead and solving problem from real project, system design onsite interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/mytutor/&quot;&gt;MyTutor&lt;/a&gt; | London, UK | Take home test, followed by pair programming, system design discussion, and cross functional interview on site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.native-instruments.com&quot;&gt;Native Instruments&lt;/a&gt; | Berlin, Germany | Takehome programming assignment and personal interviews with part of the hiring team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nearsoft.com/join-us/&quot;&gt;Nearsoft Inc&lt;/a&gt; | Hermosillo, Mexico; Chihuahua, Mexico; Mexico City, Mexico | Takehome &lt;a href=&quot;https://nearsoft.com/blog/the-logic-behind-nearsofts-logic-test/&quot;&gt;logic test&lt;/a&gt;, english interview to check communication skills, short technical interview about experience, long technical discussion about languages/tools/practices you will use on daily basis, pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lifeatnedap.com/vacatures&quot;&gt;Nedap&lt;/a&gt; | Groenlo, Netherlands / Remote | A simple conversation, human to human and a small on-site project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://neoteric.eu/career/&quot;&gt;Neoteric&lt;/a&gt; | Gdańsk, Warsaw Poland; Remote | Face2Face conversation, take home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdwallet.com/careers&quot;&gt;NerdWallet&lt;/a&gt; | San Francisco, CA; Remote | Code review phone screen, on-site project to build a functioning app with interviewee’s platform of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.netflix.com/jobs/867042&quot;&gt;Netflix&lt;/a&gt; | Los Gatos, CA | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and our director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netguru.co/career&quot;&gt;Netguru&lt;/a&gt; | Warsaw, Poland; Remote | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlandish.com&quot;&gt;Netlandish&lt;/a&gt; | Los Angeles, CA; Remote | Takehome exercise, chat interview, video interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/careers&quot;&gt;Netlify&lt;/a&gt; | San Francisco, CA / Remote | Takehome project and online/onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://newrelic.com/about/careers&quot;&gt;New Relic&lt;/a&gt; | San Francisco, CA | Takehome exercise &amp;amp;/ or pair programming session depending on the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newstore.com/careers/&quot;&gt;NewStore&lt;/a&gt; | Berlin, Germany; Hannover, Germany; Erfurt, Germany; Boston, MA | Telephone technical interview, code sample submission or takeaway coding exercise, on-site pair programming, design session (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newvoicemedia.com/about-newvoicemedia/careers&quot;&gt;NewVoiceMedia&lt;/a&gt; | Basingstoke, England; Wroclaw, Poland | Telephone interview, takeaway coding exercise, on-site pair programming, code review &amp;amp; technical discussion (1/2 day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexapp.ca/career/&quot;&gt;Nexapp&lt;/a&gt; | Quebec City, Canada | Video call where we get to know you more and you get to know us more, followed by a video call technical interview where we discuss a few open-ended problems strongly inspired by the daily real-world work we do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nexcess.net&quot;&gt;Nexcess.net&lt;/a&gt; | Southfield, MI | We mostly chat to get a feel on both ends if there’s a good cultural fit. We ask questions to see what experience you have and how you think as a programmer. At some point we look at some of your code or have you work on some of ours (1 hour).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nimblehq.co&quot;&gt;Nimble&lt;/a&gt; | Bangkok, Thailand; Ho Chi Minh City, Vietnam; Da Nang, Vietnam | Takehome exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ninjaneers.de&quot;&gt;Ninjaneers&lt;/a&gt; | Kassel, Germany; Remote | Google Hangouts resume dive on past experience and projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.niteoweb.com/careers&quot;&gt;Niteoweb&lt;/a&gt; | Ljubljana, Slovenia | Join us for a week to see if we fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.gonitro.com/about/jobs&quot;&gt;Nitro&lt;/a&gt; | Dublin, Ireland; San Francisco, CA | Phone Call, Take Home Test, Hiring Manager Phone Interview followed by an onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.nmbrs.com&quot;&gt;Nmbrs&lt;/a&gt; | Amsterdam, The Netherlands; Lisbon, Portugal | Cultural interview, take home test, interview with CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noa.one&quot;&gt;Noa&lt;/a&gt; | Berlin, Germany; San Francisco, CA | 1 technical chat, 2-3 cultural chats with colleagues from different departments in the team, if these work a pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://nodesource.com/careers&quot;&gt;NodeSource&lt;/a&gt; | Remote | A person-to–person walk through of a past project of yours&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nomoko.world/jobs&quot;&gt;Nomoko,camera&lt;/a&gt; | Zurich, Switzerland | Three interrogations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.norbsoft.com/careers&quot;&gt;Norbsoft&lt;/a&gt; | Kraków, Poland; Warszawa, Poland; Sosnowiec, Poland; Remote | Take-home exercise or code sample submission, technical discussion by video conference&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nordsoftware.com/en/jobs&quot;&gt;Nord Software&lt;/a&gt; | Helsinki, Finland; Tampere, Finland; Stockholm, Sweden | Take-home exercise &amp;amp; interview with CEO and senior developer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nordsecurity.com/careers&quot;&gt;NordPass&lt;/a&gt; | Remote | HR talk, take-home task, tech interview, culture fit interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noredink.com/jobs&quot;&gt;NoRedInk&lt;/a&gt; | San Francisco, CA | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacare.no&quot;&gt;Nova Care&lt;/a&gt; | Oslo, Norway | Casual interview, take-home exercise &amp;amp; presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novacredit.com/careers&quot;&gt;Nova Credit&lt;/a&gt; | San Francisco, CA | Choose between a take home assignment or two interviews on CoderPad, CodePen, or your local dev env while screensharing. Final round is onsite working on a small project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novicap.com/en/careers.html&quot;&gt;NoviCap&lt;/a&gt; | Barcelona, Spain | Takehome exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://novoda.com/joinus&quot;&gt;Novoda&lt;/a&gt; | London, UK; Liverpool, UK; Berlin, Germany; Barcelona, Spain; Remote | 2 x Pairing sessions &amp;amp; conversational interviews &lt;a href=&quot;https://github.com/novoda/dojos&quot;&gt;(public repo)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.novus.com/jobs&quot;&gt;Novus Partners&lt;/a&gt; | New York, NY | Take-home exercise &amp;amp; on-site exercises (choice of laptop or whiteboard)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.noyo.com/careers/&quot;&gt;Noyo&lt;/a&gt; | San Francisco, CA / Durham, NC / Remote | Phone interview, take-home assignment, on-site code review, and walk through a past project you’re proud of&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nozbe.com/careers&quot;&gt;Nozbe&lt;/a&gt; | Remote | Take-home exercise &amp;amp; interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://npmjs.com/jobs&quot;&gt;npm, Inc&lt;/a&gt; | Oakland, CA / Remote | No technical challenges. Just interview conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nubank.workable.com&quot;&gt;Nubank&lt;/a&gt; | São Paulo, BR | Phone conversation, take-home exercise, code walkthrough, on-site code pairing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.numberly.com&quot;&gt;numberly&lt;/a&gt; | Paris, France | Series of interviews, that go over technical background, past experiences and cultural knowledge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/numerai/jobs&quot;&gt;numer.ai&lt;/a&gt; | San Francisco, CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nutshell.com/jobs&quot;&gt;Nutshell&lt;/a&gt; | Ann Arbor, MI, US | Email screen / take-home programming exercise (&lt;a href=&quot;https://github.com/nutshellcrm/join-the-team&quot;&gt;public repo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nyon.nl/jobs&quot;&gt;Nyon&lt;/a&gt; | Amsterdam, The Netherlands | 1. Skype (or real life) interview 2. Take home exercise (3-4 hours) 3. Meet entire team and pair programming sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oreilly.com/jobs&quot;&gt;O’Reilly Media&lt;/a&gt; | Sebastopol, CA; Boston, MA; Remote | Phone conversation, take-home exercise or pair programming session, team interview, all via Google Hangout&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oakstreethealth.com/careers&quot;&gt;Oak Street Health&lt;/a&gt; | Chicago, IL / Remote | Casual but semi-technical initial phone screen. One hour video call consisting of in depth technical discussion with lead developers followed by one hour of discussion with the product team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://objectpartners.com/careers/&quot;&gt;Object Partners, Inc.&lt;/a&gt; | Minneapolis, MN; Omaha, NE | Phone interview to gauge mutual interest, followed by a slightly more in-depth technical round-table interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objectiveinc.com/careers&quot;&gt;Objective, Inc.&lt;/a&gt; | Salt Lake City, UT | Take-home programming exercise, then onsite friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rejoins.octo.com&quot;&gt;OCTO Technology&lt;/a&gt; | Paris, France | HR interview to go over your experiences and cultural knowledge. Then more or less informal discussion with two future team members about architecture design, agile practices, take-home project, pair programming…&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://octopus.energy/careers/&quot;&gt;Octopus Energy&lt;/a&gt; | London, UK; Sydney, Australia; Remote | Take-home exercise and phone or on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://olist.com&quot;&gt;Olist&lt;/a&gt; | Curitiba, Brazil | Take-home project and remote or on-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.omadahealth.com/jobs&quot;&gt;Omada Health&lt;/a&gt; | San Francisco, CA | Take home exercise and/or pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://oncue.co&quot;&gt;Oncue&lt;/a&gt; | San Francisco, CA; Remote | Online coding test on real-world problems (2 hours). Technical discussion with developer team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.onemainfinancial.com&quot;&gt;OneMain Financial&lt;/a&gt; | Chicago, IL; Remote | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com/careers&quot;&gt;OneSignal&lt;/a&gt; | San Mateo, CA | Intro call with recruiting, second conversation with OneSignal engineer, onsite pairing via screenshare&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onfido.com/jobs&quot;&gt;Onfido&lt;/a&gt; | London, UK; Lisbon, Portugal | Take-home exercise and on-site interview/discussion with potential team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ontame.io&quot;&gt;Ontame.io&lt;/a&gt; | Copenhagen, Denmark | Take home exercise and specific role discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opbeat.com/jobs#seniorbackendengineer&quot;&gt;Opbeat&lt;/a&gt; | Copenhagen, Denmark | Pairing on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/company/openbasecom&quot;&gt;Openbase&lt;/a&gt; | San Francisco, CA | Take-home exercise on real-world problem &amp;amp; discussion with engineers about exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openmindonline.it&quot;&gt;Openmind&lt;/a&gt; | Monza, Italy | On-site interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.optoro.com/open_position_item/?oid=134960&quot;&gt;Optoro&lt;/a&gt; | Washington, DC | Take home exercise. Review your code onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ori.co&quot;&gt;Ori&lt;/a&gt;| London, UK | Phone interview and a takehome project, followed by a two hour meeting with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.ostmodern.co.uk&quot;&gt;Ostmodern&lt;/a&gt; | London, UK | Take-home exercise &amp;amp; discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.outbrain.com/?F1C=Netanya&amp;amp;F2C=&amp;amp;FTXT=&quot;&gt;Outbrain&lt;/a&gt; | Netanya, Israel | Take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://outlandish.com&quot;&gt;Outlandish&lt;/a&gt; | London, UK | Take-home exercise, real-world pair programming session, friendly chat with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/outlook/jobs&quot;&gt;Outlook iOS &amp;amp; Android&lt;/a&gt; | San Francisco, CA / New York, NY | Take-home project &amp;amp; online / onsite discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nerdery.com/careers&quot;&gt;The Nerdery&lt;/a&gt; | Minneapolis, MN; Chicago, IL; Phoenix, AZ; Kansas City, KS | Take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/theoutline&quot;&gt;The Outline&lt;/a&gt; | New York, NY | Take-home exercise&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;P - R&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pace.car/jobs&quot;&gt;PACE Telematics&lt;/a&gt; | Karlsruhe, Germany | Culture and mindset check, on-site meet and great, small code challenge to see development style and strategy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paessler.com/company/career/jobs&quot;&gt;Paessler AG&lt;/a&gt; | Nuremberg, Germany | Pairing with different engineers on a real problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagar.me&quot;&gt;Pagar.me&lt;/a&gt; | São Paulo, BR | Skype interview, on-site pairing task and-or real world problem solving process / presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pager.com&quot;&gt;Pager&lt;/a&gt; | New York, NY; Remote | Short phone interview, conversational interviews, take-home exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pagerduty.com/careers&quot;&gt;PagerDuty&lt;/a&gt; | San Francisco, CA / Toronto, Canada / Atlanta, GA | Zoom / on-site pair programming and tasks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tech.palatinategroup.com&quot;&gt;Palatinate Tech&lt;/a&gt; | London, UK | Hangout/Skype/phone followed by (normally) on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parabol.co&quot;&gt;Parabol&lt;/a&gt; | New York, NY; Los Angeles, CA; Remote | Culture check followed by compensated, &lt;a href=&quot;https://github.com/ParabolInc/action/projects&quot;&gt;open-source contribution&lt;/a&gt; skills evaluation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://parivedasolutions.com&quot;&gt;Pariveda Solutions&lt;/a&gt; | Dallas, TX / Houston, TX / Atlana, GA / Washington, DC / New York, NY / Chicago, IL / San Francisco, CA / Seattle, WA / Los Angeles, CA | Personality assessment (Predictive Index) and case study. Programming aptitude test (language independent) for college hires.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passfort.com/about#jobs&quot;&gt;PassFort&lt;/a&gt; | London, UK | Skype interview, and on-site pairing task&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passiv.com&quot;&gt;Passiv&lt;/a&gt; | Fredericton, Canada | Zoom interview, take-home coding assignment, standalone bite-size project that delivers some value, small feature development involving team collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paws.com/careers&quot;&gt;Paws&lt;/a&gt; | London, UK | Phone screening, take-home project, on-site pairing/discussion on your solution and meet the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paybase.io&quot;&gt;Paybase&lt;/a&gt; | London, UK | Phone screening, Take home project, On-site interview for technical and culture fit, Open Q&amp;amp;A session with team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paybyphone.com/careers&quot;&gt;PayByPhone&lt;/a&gt; | Vancouver, Canada | Remote programming interview, on-site “meet the team”&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://peaksware.com&quot;&gt;Peaksware Companies (TrainingPeaks, TrainHeroic, MakeMusic)&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://info.peerstreet.com/careers&quot;&gt;PeerStreet&lt;/a&gt; | Los Angeles, CA | Phone, take home project &amp;amp; on-site to meet the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pento/jobs&quot;&gt;Pento&lt;/a&gt; | Remote | Quick personal interview, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://permutive.com/careers/&quot;&gt;Permutive&lt;/a&gt; | London, UK | Phone call; short, relevant take-home coding assignment; on-site pairing, general technical discussion, values &amp;amp; ways of working interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.persgroep.nl/werken-bij-it&quot;&gt;Persgroep, de&lt;/a&gt; | Amsterdam, Netherlands | Tech interview (technical background and experiences) and culture fit, both on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.withpersona.com/about&quot;&gt;Persona&lt;/a&gt; | San Francisco, CA | Tech interview (technical background and experiences), pair programming, and culture fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://angel.co/pexeso/jobs&quot;&gt;Pex&lt;/a&gt; | Los Angeles, CA; Remote | 3 sessions: brief phone conversation (30 min); take home assignment (2 hours); on-site or video discussion without any coding (2 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://philo.com/jobs&quot;&gt;Philo&lt;/a&gt; | San Francisco, CA; Cambridge, MA | Initial screen with deep-dive into one of your recent projects (30 mins) ; take-home coding exercise tailored your skills (4 hours); on-site with take-home code review, architecture interview, design interview and “soft skills” interview (4 hours)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.phoodster.com&quot;&gt;Phoodster&lt;/a&gt; | Stockholm, Sweden | Take-home exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pillartechnology.com/careers&quot;&gt;Pillar Technology&lt;/a&gt; | Ann Arbor, MI; Columbus, OH; Des Moines, IA | Phone, take home exercise, in-person pairing session and site visit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pilot.co/become-a-partner&quot;&gt;Pilot&lt;/a&gt; | Remote | Two calls. Introduction one (30m) + verification of communication skills and remote work experience (15m)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pingcap.com&quot;&gt;PingCAP&lt;/a&gt; | Beijing, China; Shanghai, China; Guangzhou, China; Shenzhen, China; Hangzhou, China; Chengdu, China; Remote | Phone interview with HR, then a take home project. Finally 1-4 rounds of business interviews and 1 round of Founder interview(via phone, video, Face to Face…).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pivotal.io/careers&quot;&gt;Pivotal&lt;/a&gt; | San Francisco, CA; Los Angeles, CA; New York, NY; Boston, MA; Denver, CO; Atlanta, GA; Chicago, IL; Seattle, WA; Washington, D.C.; London, UK; Sydney, Australia; Toronto, Canada; Paris, France; Berlin, Germany; Tokyo, Japan | Initial remote technical screen featuring pair programming; on-site pair programming interview, generally a full day pairing on production code using test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pixiumdigital.com&quot;&gt;Pixium Digital&lt;/a&gt; | Singapore, Singapore | Remote or on-site interview with few generic / technical questions as well as portfolio review + discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform.sh&quot;&gt;Platform.sh&lt;/a&gt; | Remote | Remote Interview, Wide-Ranging discussions on many diverse subjects. Remote interviews with team members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://platform45.com&quot;&gt;Platform45&lt;/a&gt; | Johannesburg, South Africa; Cape Town, South Africa | On-site interview, take-home project and culture fit day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getcatalyst.in/careers&quot;&gt;Playlyfe&lt;/a&gt; | Bangalore, India | Short personal interview, on-site demonstration of programming in browser devtools followed by discussion about the problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com/careers&quot;&gt;Pluralsight&lt;/a&gt; | Salt Lake City, UT; San Francisco, CA; Boston, MA; Orlando, FL | Takehome exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pointman.bamboohr.com/jobs/&quot;&gt;Pointman&lt;/a&gt; | Buffalo, NY | Takehome exercise + on-site discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://jobs.poki.com&quot;&gt;Poki&lt;/a&gt; | Amsterdam, The Netherlands | Pair programming on-site w/ two engineers where we focus on teamwork, googling relevant documentation and fixing things together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://polar.me/company/careers&quot;&gt;Polar&lt;/a&gt; | Toronto, Canada | Phone interview, followed by 1-2 onsite pair-programming interviews based on their platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popstand.com&quot;&gt;Popstand&lt;/a&gt; | Los Angeles, CA | Build MVPs for startups&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.popularpays.com&quot;&gt;Popular Pays&lt;/a&gt; | Chicago, IL | Phone chat/coffee to determine what will be worked on during a day of pair-programming on a real problem that the candidate thinks best demonstrates their skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pragma.team/talent&quot;&gt;Pragmateam&lt;/a&gt; | Sydney, Australia | Engineering Consultancy And Delivery - Takehome exercise &amp;amp; discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.premiumbeat.com/careers&quot;&gt;PremiumBeat&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.primary.com/jobs&quot;&gt;Primary&lt;/a&gt; | New York, NY / Remote | Phone chat, take home exercise, pair program and discuss onsite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.promptworks.com/jobs&quot;&gt;PromptWorks&lt;/a&gt; | Philadelphia, PA | Take-home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.proxy.com&quot;&gt;Proxy&lt;/a&gt; | San Francisco, CA | Phone chat. In-depth discussion about experiences on-site. Occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/jobs&quot;&gt;Pusher&lt;/a&gt; | London, UK | Solve a real-world problem through a design session with our engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://pygmalios.com/en&quot;&gt;Pygmalios&lt;/a&gt; | Bratislava, Slovakia | Take-home project related to business and discussion with our engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quietlightcom.com/positions-web.php&quot;&gt;Quiet Light Communications&lt;/a&gt; | Rockford, IL, USA | Discussion, work samples and/or small freelance project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.workatquintype.com&quot;&gt;Quintype&lt;/a&gt; | Bengaluru, India / San Mateo, USA | Take home project, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://quizizz.com&quot;&gt;Quizizz&lt;/a&gt; | Bengaluru, India | Phone chat, real world assignment, discussion w/ developers, pair programming, discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ragnarson.com&quot;&gt;Ragnarson&lt;/a&gt; | Lodz, Poland; Remote | Take-home exercise &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.railslove.com&quot;&gt;Railslove&lt;/a&gt; | Cologne, Germany | Have a coffee in our office, casual chat with us, pair programming on a real project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raisingit.com&quot;&gt;Raising IT&lt;/a&gt; | London, UK | Coffee with a team member, on-site pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rapyuta-robotics.com/pages/jobs.html&quot;&gt;Rapyuta Robotics&lt;/a&gt; | Bengaluru, India / Tokyo, Japan / Zurich, Switzerland | Take-home assignment related to our ongoing projects, series of technical / experience based interviews, candidate presentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rayfeed.com&quot;&gt;Rayfeed&lt;/a&gt; | Vancouver, Warsaw | Video-call interview followed by a take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://razorpay.com/jobs&quot;&gt;Razorpay&lt;/a&gt; | Bangalore, India | Phone screen, On-site pair programming, and occasionally a take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reaktor.com/careers&quot;&gt;Reaktor&lt;/a&gt; | New York, NY; Amsterdam, Netherlands; Helsinki, Finland; Tokyo, Japan | Discussion, work samples from previous projects (work or hobby), take-home exercise if needed for further info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realhq.com/jobs&quot;&gt;Real HQ&lt;/a&gt; | Austin, TX / Chicago, IL / Remote | Phone/video interviews, a take-home coding exercise, and a remote pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realync.com/careers&quot;&gt;Realync&lt;/a&gt; | Chicago, IL / Carmel, IN / Remote | Quick phone interview, then a take home project and finally in person interview (open discussions instead of quizzes - anything technical are real-world problems).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rebase.fi&quot;&gt;Rebase Consulting&lt;/a&gt; | Helsinki, Finland / Remote | First round general discussion/introductions, second round technical interview built around a take-home exercise, 2x2 skill/interest matrix go-through and general technical topics based on the candidate’s profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://red-badger.com/about-us/join-us&quot;&gt;Red Badger&lt;/a&gt; | London, UK | Phone &amp;amp; Skype interview, take home exercise, On-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redballoonsecurity.com&quot;&gt;Red Balloon Security&lt;/a&gt; | New York City, USA | A rather educational week long hacking challenge with a monetary reward uppon finding solution. On-site with team members, real job related problems, a few open-ended questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.redcarpetup.com/jobs&quot;&gt;RedCarpet&lt;/a&gt; | New Delhi, India | Interview, work sample/take-home project and discussion/code reviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.red-gate.com/our-company/careers/current-opportunities/&quot;&gt;Redgate&lt;/a&gt; | Cambridge, UK | Simple couple of questions during screening phase (up to 30 min) followed by a second phase with up to two coding exercises (non-CS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reducer.co.uk&quot;&gt;Reducer&lt;/a&gt; | London, UK | Introductions by phone, pair programming on site, then meeting the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reflektive.com/careers/&quot;&gt;Reflektive&lt;/a&gt; | San Francisco, CA; Bengaluru, India | A short take home project/assignment, followed by a couple of technical and non-technical discussions online and offline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://relabe.com&quot;&gt;Relabe&lt;/a&gt; | San Juan, PR | First we screen for cultural fit then check for technical proficiency. 2-3 Interviews max in SJ&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentify.com/jobs&quot;&gt;Rentify&lt;/a&gt; | London, UK | Phone call, take home real-world project, on-site pair programming, product discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rentomojo.com/about/careers&quot;&gt;RentoMojo&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repl.it/site/jobs&quot;&gt;Repl.it&lt;/a&gt; | San Francisco, CA / Remote | Take-home project and discussion, then an on-site project and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://resin.io&quot;&gt;Resin.io&lt;/a&gt; | Remote | Take home real-world project and a couple of technical and non-technical discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.respark.co.uk&quot;&gt;ReSpark&lt;/a&gt; | London, UK | Phone conversation followed by on-site interview w/ task relevant to daily role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.restaurantops.co&quot;&gt;RestaurantOps&lt;/a&gt; | Scottsdale, AZ | Take Home Project &amp;amp; pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://retailpulse.ai&quot;&gt;Retail Pulse&lt;/a&gt; | Bangalore, India | Phone chat, take home exercise, feedback &amp;amp; interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reverscore.com&quot;&gt;Rever&lt;/a&gt; | Guadalajara, Mexico | Take-home project, on-site discussion or via Hangouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://revlv.net&quot;&gt;Revlv&lt;/a&gt; | Manila, Philippines | Discussion about developer skills, previous projects and experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.revolut.com&quot;&gt;Revolut&lt;/a&gt; | London, UK / Berlin, Germany / Krakow, Poland / Moscow, Russia / St Petersburg, Russia | Take-home exercise reflecting day-to-day work, technical interview via hangouts or on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rexsoftware.com/careers&quot;&gt;Rex Software&lt;/a&gt; | Brisbane, Australia | Take home project, feedback + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rizk.com&quot;&gt;Rizk.com&lt;/a&gt; | Ta’ Xbiex, Malta | Take-home assignment, discussion w/ developers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.rocketmiles.com&quot;&gt;Rocket Travel&lt;/a&gt; | Remote; Chicago, IL; New York, NY | Pair programming, take home project (2-4 hours), 3-4 hour final interview with mix of high level technical, product, and cultural/behavioral sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.rockode.com&quot;&gt;Rockode&lt;/a&gt; | Bangalore, India | Real world assignment, group hack session, discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://rosedigital.co&quot;&gt;Rose Digital&lt;/a&gt; | New York, NY | Phone conversation followed by pair coding components that mirror day to day work, in person discussion about code, take home project if needed for more info&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rstudio.com&quot;&gt;RStudio&lt;/a&gt; | Remote | Video calls with recruiter then engineering management, take home project, video call for code review with engineering lead&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://career.ruangguru.com&quot;&gt;Ruangguru&lt;/a&gt; | Jakarta, Indonesia / Yogyakarta, Indonesia / Malang, Indonesia / Bandung, Indonesia | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rubygarage.org&quot;&gt;RubyGarage&lt;/a&gt; | Dnipro, UA | Take-home project, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.runtastic.com&quot;&gt;Runtastic&lt;/a&gt; | Linz, Austria; Vienna, Austria | Video call with recruiting staff, take home project, video call for code review, discussion, questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rvu.co.uk/careers&quot;&gt;RVU&lt;/a&gt; | London, UK | Also known as Uswitch / Money.co.uk / Bankrate, small take-home project related to our business area, followed by open book pairing with developers to extend it followed by Q&amp;amp;A session to discuss your experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;S - U&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.safebutler.com&quot;&gt;SafeButler&lt;/a&gt; | San Francisco, CA | Take-home project, then an on-site or remote interview with a review, pair programming, and culture fit discussions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sahajsoft.com&quot;&gt;Sahaj Software Solutions&lt;/a&gt; | Bangalore, India; Chennai, India; San Jose, CA | Take home code + Pairing + Discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salecycle.com/careers&quot;&gt;SaleCycle&lt;/a&gt; | Durham, UK; Brighton, UK | Phone screen, face-to-face discussion with developers, optional pairing session and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.salesfive.com/jobs&quot;&gt;Salesfive&lt;/a&gt; | Munich, Germany; Berlin, Germany | Phone screen, Phone Interview with developer to discuss code and challenges, Take home challenge if necessary. Onsite visit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.salesforce.org&quot;&gt;Salesforce.org Tech &amp;amp; Products&lt;/a&gt; | Remote | Phone screen, hands-on programming test solving real-world problems, Google Hangouts video sessions with engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://salesloft.com&quot;&gt;Salesloft&lt;/a&gt; | Atlanta, GA | Phone interview, take-home project, cultural-fit interview, technical interview where candidate modifies take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.samsara.com/jobs&quot;&gt;Samsara&lt;/a&gt; | San Francisco, CA; Atlanta, GA; London, UK | Phone interview, onsite interview (technical challenges based on real problems we’ve faced at Samsara)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sc5.io/careers&quot;&gt;SC5 Online&lt;/a&gt; | Helsinki, Finland; Jyväskylä, Finland | Take-home assignment (intentionally short, takes at most an hour to complete), discussion and review assignments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://scapic.com/careers/&quot;&gt;Scapic&lt;/a&gt; | Bangalore, India | Short takehome project + phone interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.schibsted.pl&quot;&gt;Schibsted Tech Polska&lt;/a&gt; | Gdańsk, Poland | Phone screen, take-home exercise, code review and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt; | San Francisco, CA; Vancouver, Canada | Phone interview, take-home assignment (small fun project), onsite interview (technical + core/culture) -&amp;gt; intended to set you up for success&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.seitenbau.com/karriere/aktuelle-jobangebote&quot;&gt;SEITENBAU&lt;/a&gt; | Konstanz, Germany | Peer recruiting; conversational interviews (video call or face-to-face) with other developers and HR focussing on motivation, attitude, skills; possibly 2nd face-to-face interview meeting with additional team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sendyne.com&quot;&gt;Sendyne&lt;/a&gt; | New York City, USA | Phone screen, on-site with team members. Review of past experiences + questions regardnig real problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensortower.com/jobs&quot;&gt;Sensor Tower&lt;/a&gt; | San Francisco, CA | Phone call, on-site interview including discussion about projects/skills and a short real-world programming challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sensu.io&quot;&gt;Sensu&lt;/a&gt; | Remote | Video call, choice of pairing session or take home programming assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sentisis.com/trabaja-con-nosotros&quot;&gt;Séntisis&lt;/a&gt; | Madrid, Spain; Mexico City, Mexico; Bogotá, Colombia; Santiago de Chile, Chile; Remote | Phone call, on-site/remote interview including discussion about projects/skills and a short real-world pair-programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serpapi.com&quot;&gt;SerpApi&lt;/a&gt; | Austin, TX / Remote | Skype core value and culture interview, review of contributions on GitHub or other platforms, and take-home project if online contributions are not enough.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sertiscorp.com&quot;&gt;Sertis&lt;/a&gt; | Bangkok, Thailand | Technical &amp;amp; culture fit interview, take-home project, follow-up discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://setapp.pl/career&quot;&gt;Setapp Sp. z o.o.&lt;/a&gt; | Poznan, Poland | Online/face-to-face discussion with developers about everyday programming dilemmas &amp;amp; reviewing your own code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sharoo.com/jobs/&quot;&gt;Sharoo&lt;/a&gt; | Zurich, Switzerland; Remote | Soft skills interview, take home project, technical interview based on take home project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shipandco.com/en/&quot;&gt;Ship&amp;amp;co&lt;/a&gt; | Remote / Kyoto, Japan | Casual non-technical interview with the CEO. One hour technical discussion with lead developer about software development, skills and past experience. Three months paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getshogun.com&quot;&gt;Shogun&lt;/a&gt; | Remote | Discussion about software development and past experience, code samples, paid trial period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.showmax.com/engineering-careers&quot;&gt;Showmax&lt;/a&gt; | Beroun, Czechia; Prague, Czechia; Remote | Take home project, then a pair-programming and discussion onsite / Hangouts round.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shuttlecloud.com/jobs&quot;&gt;ShuttleCloud&lt;/a&gt; | Chicago, IL / Madrid, Spain | Take-home project, then on-site code walk through and a real world problem discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.signal-ai.com/about-us/careers&quot;&gt;Signal AI&lt;/a&gt; | London, UK | Phone screen; take home code exercise; on-site code extension with pair programming and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simple.com&quot;&gt;Simple&lt;/a&gt; | Portland, OR | Discussion about software development and architecture skills and experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simpli.fi/about-us/careers&quot;&gt;Simpli.fi&lt;/a&gt; | Fort Worth, TX, USA | Takehome code challenge and review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.welcometothejungle.co/companies/simplifield/jobs&quot;&gt;SimpliField&lt;/a&gt; | Lille, France | Interview with the CTO and the developer team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.simplybusiness.co.uk/about-us/careers/tech&quot;&gt;Simply Business&lt;/a&gt; | London, UK / Remote | Three stage, one day interview with quick feedback. One of the stages is 1.5h pair-programming session, where interviewee is assigned a task and interviewing developer plays role of Product Owner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sixfold.com/careers&quot;&gt;Sixfold&lt;/a&gt; |&amp;nbsp;Tallinn, Estonia; Tartu, Estonia; Vienna, Austria | 3-4 stages: 1st interview with HR and an engineering lead, 2nd a test-task to solve at home, 3rd technical discussion &amp;amp; feedback on the test-task, 4th optional meeting with further engineering leads to find best fitting team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sixt.jobs/en&quot;&gt;Sixt&lt;/a&gt; | Munich, Germany | 4 stages: 1st HR, 2nd take-home project, 3rd follow-up discussion, 4th on-site interview with team plus HR&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://skylight.digital/join/&quot;&gt;Skylight Digital&lt;/a&gt; | Remote | Screening call to determine general interest, 1.5 hour pair programming exercise based on realistic scenario, EQ interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.skyrisepro.com&quot;&gt;Skyrise Pro&lt;/a&gt; | Chicago, IL | Take-home coding project, on-site interview including coding enhancements to the take-home project, offsite group activity&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://slack.com/jobs&quot;&gt;Slack&lt;/a&gt; | San Francisco, CA | Call with recruiter, 1 week take-home project, call with hiring manager, on-site interview covering high-level system design, best software development practices and culture-fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.small-improvements.com/careers&quot;&gt;Small Improvements&lt;/a&gt; | Berlin, Germany&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.smartly.io/developer&quot;&gt;Smartly.io&lt;/a&gt; | Helsinki, Finland | Discussion with recruiter and developers and a pair coding exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://smile.io/careers&quot;&gt;Smile.io&lt;/a&gt; | Kitchener, Canada / Remote | Take-home real world project, interviews with HR and engineering team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snyk.io/jobs&quot;&gt;Snyk&lt;/a&gt; | London, UK; Tel Aviv, Israel | Take home task, then a pair coding on it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.socialtables.com&quot;&gt;Social Tables&lt;/a&gt; | Washington, DC | Chat about skills and past experiences + bring in a code sample from previous work or side project to discuss&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwear.nl/vacatures&quot;&gt;Softwear&lt;/a&gt; | Amsterdam, Netherlands | Writing software for the fashion industry – remotely – in an international team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sogilis.com&quot;&gt;Sogilis&lt;/a&gt; | Grenoble, France | Discussion about interests, practices, and motivation. Presentation/code review/pair programming on a personal or professional project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/jobs&quot;&gt;Sourcegraph&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Tailored to the candidate, often consists of take-home work, discussion of real-world eng challenges, and product familiarity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.splice.com&quot;&gt;Splice&lt;/a&gt; | New York, NY; Remote | Call with recruiter, 4 hr take-home project, video interview w two engs on take-home exercise, video call with hiring manager, video call w VPE &amp;amp; principal eng to talk about architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.splyt.com&quot;&gt;Splyt&lt;/a&gt; | London, UK; Singapore, Singapore; Kuala Lumpur, Malaysia; Tokyo, Japan | Initial screening with recruiters from hr department, take home assessment (React + Node.js), followed by remote/on-site interviews with hiring manager and CTO about the assessment, system design/architecture, and cultural fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spreedly.com/jobs&quot;&gt;Spreedly&lt;/a&gt; | Durham, NC | Take-home project &lt;a href=&quot;https://engineering.spreedly.com/blog/programming-puzzles-are-not-the-answer-how-spreedly-does-work-samples.html&quot;&gt;related to business&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natureasia.com&quot;&gt;Springer Nature (Asia)&lt;/a&gt; | Tokyo, Japan | Discussion &amp;amp; Pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sndigital.springernature.com&quot;&gt;Springer Nature Digital&lt;/a&gt; | Berlin, Germany; London, UK | Phone chat; take-home project; then a pairing session based on the project, a technical chat, and a chat with non-technical team members&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.spronq.nl&quot;&gt;SpronQ&lt;/a&gt; | Amsterdam, Netherlands | Takehome coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://squareup.com/careers&quot;&gt;Square&lt;/a&gt; | San Francisco, CA | Pair programming in a work environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://square-sense.com&quot;&gt;Square Sense&lt;/a&gt; | Paris, France | Short phone screen to confirm the interest, take-home project (similar to some of our existing software), a pair-programming interview where we will make some changes to the same project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://srijan.net&quot;&gt;Srijan Technologies&lt;/a&gt; | Delhi, India | General high level questions/discussion followed by Pair programming OR take-home coding challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stardog.com&quot;&gt;Stardog Union&lt;/a&gt; | Washington, DC; Remote | Technical discussion and general interest conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://startdee.com&quot;&gt;StartDee&lt;/a&gt; | Bangkok, Thailand | Phone screening with technical recruiter –&amp;gt; live coding with an engineer –&amp;gt; panel interview with related engineers (Test Engineers, Frontend Engineers, Backend Engineers, etc) –&amp;gt; final interview with VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://statflo.com&quot;&gt;Statflo&lt;/a&gt; | Toronto, Canada | Phone screening, take home project, on-site interview discussing the take home project, high-level architectural brainstorm, and questions about career and team work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.store2be.com/de/jobs/tech&quot;&gt;store2be&lt;/a&gt; | Berlin, Germany | Skype/on-site interview, take-home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stormx.io/about#jobs&quot;&gt;Storm&lt;/a&gt; | Seattle, WA; Remote | Phone/skype screen –&amp;gt; Take-home coding assignment –&amp;gt; on-site/skype interview loop to discuss assignment; meet-and-greet with other teams –&amp;gt; +1/-1 based on team consensus&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.storytel.com/departments/tech&quot;&gt;Storytel&lt;/a&gt; | Stockholm, Sweden; Lund, Sweden; Karlstad, Sweden; Umeå, Sweden; Copenhagen, Denmark | Our process has few stages: a social interview with HR and 1-2 future teammates; a small take-home project followed by a technical discussion with 2-3 future colleagues. All stages can be in-person in one of our offices or via Google Meet&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; | San Francisco, CA / Seattle, WA / Dublin, Ireland / Singapore, SG / Remote | Programming/debugging phone screen + on site with your own laptop/setup and full access to internet, systems design discussion and talk with hiring manager about team alignment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://structura.bio&quot;&gt;Structura Biotechnology&lt;/a&gt; | Toronto, Canada | Phone screening, take-home coding challenge, on-site review and discussion about past experience, and high-level architectural brainstorm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.stylabs.in&quot;&gt;STYLABS&lt;/a&gt; | Mumbai, India | Phone Screen, Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verticalchange.com/job_posts&quot;&gt;Subvertical (VerticalChange)&lt;/a&gt; | Remote | Phone screening, live pair programming &amp;amp; personal project code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sulvo.com/careers&quot;&gt;Sulvo&lt;/a&gt; | New York, NY / Remote | Interview over video call for cultural fit first, if you pass we proceed with technical interview that doesn’t include coding games or challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.summitto.com&quot;&gt;Summitto&lt;/a&gt; | Amsterdam, Netherlands | take-home coding challenge and on-site interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.superawesome.com&quot;&gt;SuperAwesome&lt;/a&gt; | London, UK | Short recruiter phone screen, take-home exercise, follow up system design and cultural interview focused on your past experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://superplayer.fm&quot;&gt;Superplayer&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project and interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://surveysparrow.com/careers&quot;&gt;SurveySparrow&lt;/a&gt; | Kochi, India | Skype interview, take home project and code review, interview with CTO and CEO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://svti.svt.se&quot;&gt;SVTi (Sveriges Television)&lt;/a&gt; | Stockholm, Sweden | On-site interview, take-home project, follow up interview where you walk through how you chose to solve the task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sweetiq.com/about/careers&quot;&gt;SweetIQ&lt;/a&gt; | Montreal, Canada | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useswiftly.com/jobs&quot;&gt;Swiftly Systems&lt;/a&gt; | Seattle, WA; San Francisco, CA | Take-home coding project, design principles discussions, collaborative problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symphonycommerce.com/careers&quot;&gt;Symphony Commerce&lt;/a&gt; | San Francisco, CA / Remote | Take-home project (phone), design discussion, review and critique &lt;em&gt;our&lt;/em&gt; code, debugging questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.symplicity.com/about/join-us&quot;&gt;Symplicity&lt;/a&gt; | Arlington, VA | Take-home project and code review in-person&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sysgarage.com&quot;&gt;SysGarage&lt;/a&gt; | Buenos Aires, Argentina | Take-home project and real world pair programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tablecheck.com/en/company/jobs/&quot;&gt;TableCheck&lt;/a&gt; | Tokyo, Japan | Show us your code! Brief call then take-home project or pairing for those without code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tailorbrands.com/jobs&quot;&gt;Tailor Brands&lt;/a&gt; | Tel Aviv-Yafo, Israel | Discuss knowledge and interests, explore previous work experience, during the technical interview we discuss real-life problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tails.com/careers&quot;&gt;tails.com&lt;/a&gt; | Richmond (London), UK | Live pair programming or take home project with review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.takeaway.com&quot;&gt;takeaway.com&lt;/a&gt; | Enschede, Netherlands &amp;amp; Berlin, Germany | Discussion and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.madeintandem.com&quot;&gt;Tandem&lt;/a&gt; | Chicago, IL; San Francisco, CA | Introductory phone screen, take-home project, take-home project phone review, a few hour-long pairing sessions on real projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://tanookilabs.com&quot;&gt;Tanooki Labs&lt;/a&gt; | New York, NY | Paid half-day take home project with followup review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tara.ai/about/careers&quot;&gt;Tara AI&lt;/a&gt; | San Jose, CA | On-site interview with a deep dive into appropriate technology and our problem space. The same sort of problem solving you would do with peers after a standup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tattoodo.com&quot;&gt;Tattoodo&lt;/a&gt; | Copenhagen, Denmark | Takehome exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.taxdoo.com/#/jobs/&quot;&gt;Taxdoo&lt;/a&gt; | Hamburg, Germany | On-site interview, little takehome exercise, followup review/interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tenthousandcoffees.com&quot;&gt;Ten Thousand Coffees&lt;/a&gt; | Toronto, Canada | Take home project, then explain how you solved the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.teraki.com&quot;&gt;Teraki&lt;/a&gt; | Berlin, Germany | Pair programming exercise, 45min to 3h according to seniority and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.tes.com/recruitment/&quot;&gt;Tes&lt;/a&gt; | Remote; London, UK | Remote pair programming session on React/Node kata with small takehome exercise as prep. Remote interview with senior engineers about previous experience, technical knowledge and interests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tesco.com&quot;&gt;Tesco PLC&lt;/a&gt; | London, United Kingdom | Pair programming and casual hypothetical system design discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testdouble.com/join/developer&quot;&gt;Test Double&lt;/a&gt; | Remote | Initial conversation, Consulting interview, Technical interview, Pair programming, Takehome exercise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://textio.com/careers/?utm_source=github&amp;amp;utm_medium=forum&amp;amp;utm_campaign=textio-careers-engineering&amp;amp;utm_content=poteto-hiring-without-whiteboards&quot;&gt;Textio&lt;/a&gt; | Seattle, WA | Initial screen to discuss experience and interest in a role at Textio; then a take-home programming task is discussed during a 1-hour tech screen (on-site or remote); finally a larger take-home project, simulating real work, is discussed during an on-site presentation plus 1-1s; &lt;a href=&quot;https://textio.ai/how-we-hire-a74cdbadd1e8&quot;&gt;How we hire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thebookofeveryone.workable.com&quot;&gt;The Book of Everyone&lt;/a&gt; | Barcelona, Spain | Quick interview, meet the team, pairing with developers on your own project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thezebra.com/about/careers/&quot;&gt;The Zebra&lt;/a&gt; | Austin, TX | Take-home coding challenge with in-person review and pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mobile.thescore.com/careers&quot;&gt;theScore&lt;/a&gt; | Toronto, Canada | Coding challenge &amp;amp; systems design challenge&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au&quot;&gt;Thinkmill&lt;/a&gt; | Sydney, Australia | Initial meet and greet interview with Thinkmillers from the relevant team, take home assignment followed by tech review on a followup interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.thinslices.com&quot;&gt;Thinslices&lt;/a&gt; | Iasi, Romania | Takehome exercise &amp;amp; in person pair programming on a simple Kata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thoughtbot.com/jobs&quot;&gt;thoughtbot&lt;/a&gt; | San Francisco, CA; London, UK | &lt;a href=&quot;https://thoughtbot.com/playbook/our-company/hiring#interviewing&quot;&gt;Our interview process&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers&quot;&gt;ThoughtWorks&lt;/a&gt; | San Francisco, CA | Interviews with ThoughtWorkers of diverse backgrounds and roles; take home assignment followed by in person pairing session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/careers/singapore&quot;&gt;ThoughtWorks Singapore&lt;/a&gt; | Singapore, Singapore | Interviews with ThoughtWorkers of diverse backgrounds and roles; Simple, live paired coding exercise in language of choice focused on clean code, not speed. Followed by refactoring paired interview, and technical discussion on modelling and system design, tech depth &amp;amp; breadth and team leading skills (if applicable).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.thread.com/jobs&quot;&gt;Thread&lt;/a&gt; | London, UK | Take home test, real world architecture design, real world pair programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.threatspike.com&quot;&gt;ThreatSpike Labs&lt;/a&gt; | London, UK | Take home computing and security related challenges to be completed over a week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tilde.io&quot;&gt;Tilde&lt;/a&gt; | Portland, OR | Pair programming sessions with each member of the team, working on problems similar to daily work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.timbuktutravel.com&quot;&gt;Timbuktu&lt;/a&gt; | Cape Town, South Africa | On site interview and pair programming exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tipalti.com&quot;&gt;Tipalti&lt;/a&gt; | Glil-Yam, Israel | Real-world design and coding challenges&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://titanium.codes&quot;&gt;Titanium&lt;/a&gt; | Moldova, Chisinau | High level review of public activity on GitHub/BitBucket/Gitlab (if applicable) and screening via phone, On-site technical &amp;amp; Team fit interview, Formal “Meet the Team” meeting&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toggl.com/jobs&quot;&gt;Toggl&lt;/a&gt; | Remote / Tallinn, Estonia | Online test on basic programming skills, followed by interview (typically includes get-to-know questions and technical skill testing). Depending on the team, there may be a take-home or live coding assignment. &lt;strong&gt;Paid test week&lt;/strong&gt; to work with the team on actual bugs/features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tooploox.com/careers&quot;&gt;Tooploox&lt;/a&gt; | Warsaw, Poland; Wroclaw, Poland; Gdansk, Poland; Remote | Team fit interview and then take-home project. Next on-site or remote interview consisting of discussion and live coding based on the delivered code. Focusing on high level questions, architecture and design decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://toowoxx.de/index.php/karriere/&quot;&gt;Toowoxx&lt;/a&gt; | Deisenhausen, Germany &amp;amp; Ulm, Germany | Short interview with general questions, on-site programming challenge, code review of result&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophat.com/company/work-with-us/&quot;&gt;Top Hat&lt;/a&gt; | Remote / Toronto, Canada | Short coding challenge inspired from the day-to-day problem space followed by a longer frontend or backend pairing design and implementation exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tophatter.com/careers&quot;&gt;Tophatter&lt;/a&gt; | San Francisco, CA; Portland, OR; Remote | Introductory call, followed by a technical phone screen that takes place on Coderpad. Next is the onsite interview, consisting in a bug squash, a refactoring exercise, a project, and closing with an informal chat about how the candidate likes to work and what they’re looking for in their next job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.jointorii.co&quot;&gt;Torii&lt;/a&gt; | Raanana, Israel | Take-home fun full-stack-app exercise followed by an on-site review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://toucantoco.com/fr/team#jobs&quot;&gt;Toucan Toco&lt;/a&gt; | Paris, France | Pair-programming and TDD&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotouche.com&quot;&gt;Touché&lt;/a&gt; | Singapore, Singapore; Barcelona, Spain | Skype / Phone / on-site interview, take-home project, technical interview to discuss the project, team interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://trademark.vision&quot;&gt;TrademarkVision&lt;/a&gt; | Brisbane, Australia | On site interview and quick take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://trainheroic.com/careers/&quot;&gt;TrainHeroic&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.trainingpeaks.com/careers.html&quot;&gt;TrainingPeaks&lt;/a&gt; | Boulder, CO; Denver, CO | Phone screen, take home project, remote and on-site interviews for technical and cultural fit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.transparentclassroom.com&quot;&gt;Transparent Classroom&lt;/a&gt; | Seattle, WA; Remote | Phone screen, 1 hr pairing on toy problem, 4 hr pairing on real code, full-day paid stage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.tripstack.com/company/careers/&quot;&gt;TripStack&lt;/a&gt; | Toronto, Canada | Take-home assignment, followed up by a face to face code walk through&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.trivago.com&quot;&gt;Trivago&lt;/a&gt; | Düsseldorf, Germany | Case Study, Skype Interview, On site Interview with some code review exercises&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/trov&quot;&gt;Trōv&lt;/a&gt; | Remote | Take-home project with followup interview from actual prospective teammates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truefit.io/about/&quot;&gt;Truefit&lt;/a&gt; | Pittsburgh, PA | Phone screen, Take-home project, In-person interview with the team that you would join&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.truora.com&quot;&gt;Truora&lt;/a&gt; | Bogotá, Colombia; Cali, Colombia; Remote | Take-home project, followed by phone interview with tech leads to discuss the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://truss.works/jobs&quot;&gt;Truss&lt;/a&gt; | San Francisco, CA; Remote | Phone screen/ Take-home project that resembles a problem Truss has seen many times before / Followup interview about the project / Closing Interview, all interviews done remotely&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tunein.com&quot;&gt;TuneIn&lt;/a&gt; | San Fransisco, CA | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.twistlock.com&quot;&gt;Twistlock&lt;/a&gt; | Tel Aviv, Israel | Takehome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://typito.com/go&quot;&gt;Typito&lt;/a&gt; | Bangalore , India | Take home assignment project with options for focus in frontend or backend work. First interview round based on the project submitted, may require to do some edits or add further feature based on discussion , live during interview. Second round mostly specific to overall system enegineering and discussion regarding solutions to common backend/frontend engineering problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://uberall.com/en/careers&quot;&gt;uberall&lt;/a&gt; | Berlin, Germany | 30-min coding on-site, then a trial day&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ubiome.com/careers&quot;&gt;uBiome&lt;/a&gt; | San Francisco, CA / Santiago, Chile | High level screening over the phone or on-site, take home project, code review and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ubots.com.br&quot;&gt;Ubots&lt;/a&gt; | Porto Alegre, Brazil | Skype/On-site interview, take-home project, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unbounce.com&quot;&gt;Unbounce&lt;/a&gt; | Vancouver, BC | Phone screen, take-home project, project discussion, technical interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unboxed.co&quot;&gt;Unboxed&lt;/a&gt; | London, UK | Take home feature requests, pairing with developers to extend solution, team-fit interviews, chat with a director&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.unearthlabs.com/careers&quot;&gt;Unearth&lt;/a&gt; | Seattle, WA | Take home project, team-fit interviews, technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://unito.io/careers/&quot;&gt;Unito&lt;/a&gt; | Montreal, Canada | Team-fit interviews, technical discussion, take home project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.untappd.com&quot;&gt;Untappd&lt;/a&gt; | Wilmington, NC; New York, NY; Los Angeles, CA | Review portfolio - What projects have you worked on? + personality assessment, + interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.updater.com/jobs/openings&quot;&gt;Updater&lt;/a&gt; | New York, NY | Begin-at-home assignment highly relevant to role, presented and discussed during on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://uprise.se&quot;&gt;Uprise&lt;/a&gt; | Uppsala, Sweden | Take-home assignment, code review and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.upstatement.com/jobs/&quot;&gt;Upstatement&lt;/a&gt; | Boston, MA; New York, NY; Remote | Phone screen, take home project relevant to our work, first round interview to discuss background and take home implementation, second round interview to meet more employees and share some of your and our recent work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbdyn.com/careers&quot;&gt;Urban Dynamics&lt;/a&gt; | Knoxville, TN; Vilnius, Lithuania; Remote | Phone screen, take home project (&lt;a href=&quot;https://github.com/urbdyn/coding_exercises&quot;&gt;exercises publicly available&lt;/a&gt;), and then interview with team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.urbanmassage.com/jobs&quot;&gt;Urban Massage&lt;/a&gt; | London, UK | Project done at home, in-person walk through. Meeting the team is an integral part.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.usertesting.com/about-us/jobs&quot;&gt;UserTesting&lt;/a&gt; | Atlanta, GA; San Francisco, CA; Mountain View, CA | Initial interview, pair programming, and offer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V - X&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.valassis.com/digital-advertising&quot;&gt;Valassis Digital&lt;/a&gt; | Seattle, WA; San Francisco, CA; Lansing, MI; Hamburg, Germany | Phone screen, on-site interview with group, paired whiteboard problem solving and discussion, take-home project and follow-up review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.valuemotive.com/careers&quot;&gt;Valuemotive&lt;/a&gt; | Helsinki, Finland | Code examples from previous projects (work or hobby) or take-home exercise&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.varsitytutors.com&quot;&gt;Varsity Tutors&lt;/a&gt; | Remote | Take home assignment, presentation of assignment, live code review with team. Advanced / high-level chat with team based on skillset and role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://vayu.com.au&quot;&gt;Vayu Technology&lt;/a&gt; | Sydney, Australia; Kathmandu, Nepal | Short interview, general programming questions and short take home challenge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.venasolutions.com&quot;&gt;Vena Solutions&lt;/a&gt; | Toronto, Canada | Phone screen, on-site pair-programming and code-review exercise on a real-world problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.venminder.com&quot;&gt;Venminder, Inc.&lt;/a&gt; | Elizabethtown, KY; Louisville, KY | Initial phone screen to explain position. If candidate interested they get a take home assignment followed by a non-scripted in-person interview with team members to judge personality fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verloop.io&quot;&gt;Verloop&lt;/a&gt; | Bengaluru, India | A take home programming exercise and technical discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt; | Bangalore, India | Phone screen, Research Paper Discussion (ML Role), Code review/Open-source code navigation/on-screen Pair programming, and discussion with CTO/CEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://verve.co/careers&quot;&gt;Verve&lt;/a&gt; | London, UK | An intentionally short, take home exercise that mirrors real project work and incorporates code review elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.veteransunited.com/careers/&quot;&gt;Veterans United Home Loans&lt;/a&gt; | Columbia, MO | Phone screen, remote or in person pair-programming exercise, and multiple in person panel interviews with developers and managers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://careers.vingle.net&quot;&gt;Vingle&lt;/a&gt; | Seoul, Korea | Written interview, takehome project, in-person, conversational code review and interviews with engineers and engineering managers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.vinta.com.br/careers/&quot;&gt;Vinta Software&lt;/a&gt; | Recife, Brazil | Culture fit interview, architectural challenge, take home project, and pairing over work sample&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://virtual7.de/de/karriere&quot;&gt;virtual7&lt;/a&gt; | Kalrsruhe, Germany | Phone interview and on-site interview based on personal experience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.e-conomic.dk/om/job&quot;&gt;Visma e-conomic&lt;/a&gt; | Copenhagen, Denmark | Take home assignment, assignment presentation and discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://voltra.co&quot;&gt;Voltra Co.&lt;/a&gt; | Amsterdam, Netherlands / New York, NY / Remote | Show us your github account, tell us what you know. Let’s pair on an OSS PR!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://https://vsx.net/jobs&quot;&gt;VSX&lt;/a&gt; | Dresden, Germany | On-site interview, home coding challenge, presentation/discussion of proposed solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://lab.vtex.com/careers&quot;&gt;VTEX&lt;/a&gt; | Rio de Janeiro, Brazil | Take-home project, Skype interview and then in-person talk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://buildingvts.com&quot;&gt;VTS&lt;/a&gt; | New York City, New York | Technical Phone Screen, Pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apply.workable.com/wallapop/&quot;&gt;Wallapop&lt;/a&gt; | Barcelona, Spain | Intro call, technical take-home project OR tech repository you feel proud that highlights your skills for the job, practical interview and finally a competency interview&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://waymark.com/jobs&quot;&gt;Waymark&lt;/a&gt; | Detroit, MI | Technical phone screen, take-home project, going over the project in person, follow up day in the office&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wealthsimple.com/work-with-us&quot;&gt;Wealthsimple&lt;/a&gt; | Toronto, Canada | Pair programming on a problem similar to daily work, discussion of system design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.wearehive.co.uk&quot;&gt;WeAreHive&lt;/a&gt; | London, UK | Just walk us through your best code or we give you a small real-world exercise to do at home.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webantic.co.uk/careers&quot;&gt;Webantic&lt;/a&gt; | Manchester, UK | Basic TNA self-assessment and real-world problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webflow.com&quot;&gt;Webflow&lt;/a&gt; | San Francisco, CA &amp;amp; Remote | Short take-home challenge, followed by a paid 3-5 day freelance contract project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://careers.weebly.com&quot;&gt;Weebly&lt;/a&gt; | San Francisco, CA; Scottsdale, AZ; New York, NY | Phone screens (30 min to 1 hour) by a recruiter, an engineering manager (focused on your past experiences), an engineer (focused on system / db / api design). Followed by a paid 3 day onsite where you work on a project and then present it to a team of engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://weedmaps.com/careers&quot;&gt;Weedmaps&lt;/a&gt; | Irvine, CA; Denver, CO; Tucson, AZ; Madrid, Spain; Remote | Phone screen, Group interview, and possible code review&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wemake.services&quot;&gt;wemake.services&lt;/a&gt; | Remote | Short unpaid take-home challenge, code review, portfolio discussion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wend.nl&quot;&gt;Wend&lt;/a&gt; | Amsterdam, Netherlands | Face to face interview followed by a take-home assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.weployapp.com/join-our-team/&quot;&gt;Weploy&lt;/a&gt; | Melbourne, Australia; Sydney, Australia | Phase 1: Face to face interview to get to know the candidate. Phase 2: Problem solving session that involves designing a solution to a real-world problem followed by 1/2 day of pairing with a senior dev on implementing the proposed solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wetransfer.homerun.co&quot;&gt;WeTransfer&lt;/a&gt; | Amsterdam, Netherlands | Culture fit and fundamentals chat, skills interview - no whiteboarding! - and take-home project, communication and collaboration interview, meet with the VP of Engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wheely.com/en/careers&quot;&gt;Wheely&lt;/a&gt; | Moscow, Russia | Get to know each other in under 30 minutes on-site or via Skype, take-home challenge, on-site review and interview with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.wilburlabs.com&quot;&gt;Wilbur Labs&lt;/a&gt; | San Francisco, CA | Technical phone screen, pair programming on-site &amp;amp; in-person talks with multiple engineers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wildbit.com&quot;&gt;Wildbit&lt;/a&gt; | Philadelphia, PA &amp;amp; Remote | Take-home project followed by interviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://windy.com&quot;&gt;Windy.com&lt;/a&gt; | Prague, Czechia | Talk and write small programm on a computer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wirecardbrasil.workable.com&quot;&gt;Wirecard Brasil&lt;/a&gt; | São Paulo, Brazil | Phone or on-site Cultural Fit interview, take-home coding challenge, code review and discussing in-person.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://worldgaming.com&quot;&gt;WorldGaming&lt;/a&gt; | Toronto, Canada | Technical Interview, Solution Design, Take Home Assignment, then Culture fit interview with the team&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://woumedia.com&quot;&gt;woumedia&lt;/a&gt; | Remote | Getting to know each other and aligning expectations. Talking about past experiences, projects you are proud of and latest challenges you faced. It’s followed by a use case study from one of our current projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wyeworks.com&quot;&gt;WyeWorks&lt;/a&gt; | Montevideo, Uruguay | Take-home project and discussion on-site&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://x-team.com&quot;&gt;X-Team&lt;/a&gt; | Remote | A short, fun Node.js challenge, followed by a series of culture-based interview questions, followed by a creative mock project with tons of freedom on how to approach, and follow-up questions about the approach they chose to discuss the tradeoffs. Usually a 10-30 day paid training is rewarded to top candidates to prep them for remote communication skills needed to join a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.xing.com&quot;&gt;XING&lt;/a&gt; | Hamburg, Germany | Take-home coding challenge, on-site review and short interviews with future team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ourxplor.com&quot;&gt;Xplor&lt;/a&gt; | Melborne, Australia; London, UK | Phone Cultural Fit interview, Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Y - #&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://18f.gsa.gov/join/&quot;&gt;18F&lt;/a&gt; | Remote; Washington, DC; New York, NY; Chicago, IL; San Francisco, CA | take-home coding exercise (2-4 hours), technical and values-match interviews over video chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://21re.de&quot;&gt;21st Real Estate&lt;/a&gt; | Berlin, Germany | Phone call for quick personal introduction followed by Video call interview. Finally, a pair-programming session on-site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://3dhubs.com/jobs&quot;&gt;3D Hubs&lt;/a&gt; | Amsterdam, The Netherlands | Take-home code challenge from our product’s domain followed by discussion remote/on-site, sometimes do an additional on-site pair programming session.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://47-degrees.breezy.hr&quot;&gt;47 Degrees&lt;/a&gt; | Remote; Seattle, WA; Madrid, ESP; Cadiz, ESP; London, UK | Questions related to implementation of specific projects using popular functional programming libraries and techniques and a discussion about the tradeoffs. Discussion of past open-source projects/contributions and future open-source goals. &lt;strong&gt;Note:&lt;/strong&gt; This company looks for people who have modern functional programming experience in Haskell, Scala, Swift, or Kotlin and it looks for people who have existing open-source contributions in those fields so the roles can be a bit self-selecting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://4degrees.ai/about/&quot;&gt;4Degrees&lt;/a&gt; | Chicago, Illinois | Collaborative pair-programming exercise done through video chat that’s representative of the responsibilities of the job then a take-home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://500friends.com/who-we-are/careers&quot;&gt;500friends&lt;/a&gt; | San Francisco, CA; Remote | Take home challenge followed by onsite expansion of the submission and high level discussions (design exercise or overview of past projects)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://500Tech.com&quot;&gt;500Tech&lt;/a&gt; | Tel Aviv, Israel | Pair programming on a laptop in working env&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://8thlight.com&quot;&gt;8th Light&lt;/a&gt; | Chicago, IL; London, UK; Los Angeles, CA; New York, NY | Take home code challenge, discussion, pair programming session&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.yhat.com/jobs&quot;&gt;Yhat&lt;/a&gt; | Brooklyn, NY | Demo something cool you built and walk us thru the code + design decisions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.lever.co/yld&quot;&gt;YLD&lt;/a&gt; | London, UK; Lisbon, PT; Porto, PT &amp;amp; Remote | Take home-code challenge, pair-programming session and discussion about past experience&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yodas.com&quot;&gt;Yodas&lt;/a&gt; | Binyamina, Israel | Coding tasks over github repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yougov.com&quot;&gt;YouGov&lt;/a&gt; | Remote; San Francisco, CA; London, UK; Warsaw, Poland; Mumbai, India; Hong Kong, Hong Kong | Coding exercise sometimes over github repository, at least 1 interview with a developer and a lead, no live coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://yoyowallet.com&quot;&gt;Yoyo Wallet&lt;/a&gt; | London, UK | Take home code challenge, discussion of the code challenge, and general, high level questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.yunojuno.com&quot;&gt;YunoJuno&lt;/a&gt; | London, UK | Code challenge based on a realistic feature request on a real open-source package created and used at YunoJuno; phone/video interview with members of the Product team to explore technical background, experiences, interests, cultural fit; on-site interview, usually with Product Manager and CTO&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jobs.kenoby.com/grupozap/&quot;&gt;ZAP Group&lt;/a&gt; | São Paulo, Brazil | Takehome exercise, series of real-world interviews with engineers, HR, engineering managers and product managers on site.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zapier.com/jobs/&quot;&gt;Zapier&lt;/a&gt; | Remote | Recruiter interview, take-home project, code review of the take-home project, technical discussions with hiring manager and engineers from the team, values interview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zencargo.com/careers&quot;&gt;Zencargo&lt;/a&gt; | London, UK | Initial interview with CTO, covering professional experience interests and expectations, followed by one technical interview focused on fundamentals and familiarity with best practices. A further short chat with co-founders to get to know each other - - either onsite or remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zenefits.com/careers&quot;&gt;Zenefits (UI Team)&lt;/a&gt; | San Francisco, CA | One technical phone screen focused on JS fundamentals and/or one timeboxed take-home challenge. The onsite is a series of interviews designed to test your understanding of JS, HTML/CSS, design, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zerodha.com/careers&quot;&gt;Zerodha&lt;/a&gt; | Bengaluru, India | Technical call at the beginning and one take home programming task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zweitag.de/karriere&quot;&gt;Zweitag&lt;/a&gt; | Münster, Germany &amp;amp; Remote | Get-to-know call, take-home task representative to our problems, mentoring throughout the process, on-site pairing and discussion, talks for aligning expectations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boards.greenhouse.io/zype&quot;&gt;Zype&lt;/a&gt; | New York, NY &amp;amp; Remote | Skype/Video call with VP of Product and a take-home challenge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Also see:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://they.whiteboarded.me&quot;&gt;They Whiteboarded Me!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards&quot;&gt;&lt;img src=&quot;https://travis-ci.org/poteto/hiring-without-whiteboards.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>discord/discord-api-docs</title>
      <link>https://github.com/discord/discord-api-docs</link>
      <description>&lt;p&gt;Official Discord API Documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Discord Official API Documentation&lt;/h1&gt; 
&lt;p&gt;This repo contains the official Discord API documentation, which can be viewed online &lt;a href=&quot;https://discord.com/developers/docs/intro&quot;&gt;HERE&lt;/a&gt;. Before submitting pull-requests, please remember to &lt;em&gt;fully&lt;/em&gt; read the &lt;a href=&quot;https://raw.githubusercontent.com/discord/discord-api-docs/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;h2&gt;Markdown Syntax&lt;/h2&gt; 
&lt;p&gt;This repository uses special markdown syntax that helps style the resulting web version of the documentation.&lt;/p&gt; 
&lt;h3&gt;H6 Headings&lt;/h3&gt; 
&lt;p&gt;H6 headings should be used above tables and code blocks to properly label them.&lt;/p&gt; 
&lt;h3&gt;Linking&lt;/h3&gt; 
&lt;p&gt;Links between docs can be achieved by using a hash symbol (#), plus the markdown file name, plus a slash, and finally the dash-separated anchor. For instance, to link to the above H6 heading section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[Links to README.md H6](#README/h6-headings)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alert Boxes&lt;/h3&gt; 
&lt;p&gt;Alert boxes are achieved by using a block quote that has one of ‘warn’, ‘danger’ or ‘info’ on the first line.&lt;/p&gt; 
&lt;h2&gt;Need some help?&lt;/h2&gt; 
&lt;p&gt;Here are some Discord servers that can help you out with everything Discord API:&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://discord.gg/discord-developers&quot;&gt;Official Discord Developers server&lt;/a&gt; has plenty of help channels with knowledgeable people and Discord’s developers to get you help with something you need, and get updates straight from the developers. However do keep in mind this is a purely on-topic server. If you are looking for a community, join the server below.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://discord.gg/discord-api&quot;&gt;Unofficial Discord API server&lt;/a&gt; is a common hangout for library and bot developers alike. It’s a great starting point for those looking to dive in and learn bot-creation with the Discord API.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>quasarframework/quasar</title>
      <link>https://github.com/quasarframework/quasar</link>
      <description>&lt;p&gt;Quasar Framework - Build high-performance VueJS user interfaces in record time&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.quasar.dev/logo-v2/header.png&quot; alt=&quot;Quasar Framework logo&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;Quasar Framework&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Build high-performance VueJS user interfaces in record time: responsive Single Page Apps, SSR Apps, PWAs, Browser extensions, Hybrid Mobile Apps and Electron Apps. If you want, all using the same codebase!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/npm/v/quasar.svg?label=quasar&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/app.svg?label=@quasar/app&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/cli.svg?label=@quasar/cli&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/extras.svg?label=@quasar/extras&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/%40quasar/icongenie.svg?label=@quasar/icongenie&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://chat.quasar.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&quot; alt=&quot;Join the chat at https://chat.quasar.dev&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.quasar.dev&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/community-forum-brightgreen.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://good-labs.github.io/greater-good-affirmation&quot;&gt;&lt;img src=&quot;https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg?sanitize=true&quot; alt=&quot;https://good-labs.github.io/greater-good-affirmation/assets/images/badge.svg&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please submit a PR to https://github.com/quasarframework/quasar-awesome with your website/app/Quasar tutorial/video etc. Thank you!&lt;/p&gt; 
&lt;h2&gt;Supporting Quasar&lt;/h2&gt; 
&lt;p&gt;Quasar Framework is an MIT-licensed open source project. Its ongoing development is made possible thanks to the support by these awesome &lt;a href=&quot;https://github.com/rstoenescu/quasar-framework/raw/dev/backers.md&quot;&gt;backers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please read our manifest on &lt;a href=&quot;https://quasar.dev/why-donate&quot;&gt;Why donations are important&lt;/a&gt;&lt;/strong&gt;. If you’d like to become a donator, check out &lt;a href=&quot;https://donate.quasar.dev&quot;&gt;Quasar Framework’s Donator campaign&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Proudly sponsored by:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://truelogic.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;300px&quot; src=&quot;https://cdn.quasar.dev/sponsors/truelogic.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://campuscloudservices.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/campus-cloud-services.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.jugglestreet.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/juggle-street.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://comcomservices.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/com-com-services.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.kalisio.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/kalisio.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://platformpurple.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/platform-purple.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;http://www.bgasoft.com&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; src=&quot;https://cdn.quasar.dev/sponsors/bgasoft.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.letsbutterfly.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;170px&quot; src=&quot;https://cdn.quasar.dev/sponsors/letsbutterfly.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.projectfinance.io/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/project-finance.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://dreamonkey.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/dreamonkey.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ib-langenthal.ch/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;150px&quot; src=&quot;https://cdn.quasar.dev/sponsors/ib-langenthal.svg?sanitize=true&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://debricked.com/&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;222px&quot; height=&quot;35px&quot; src=&quot;https://cdn.quasar.dev/sponsors/debricked.png&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Head on to the Quasar Framework official website: &lt;a href=&quot;https://quasar.dev&quot;&gt;https://quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stay in Touch&lt;/h2&gt; 
&lt;p&gt;For latest releases and announcements, follow on Twitter: &lt;a href=&quot;https://twitter.com/quasarframework&quot;&gt;@quasarframework&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Chat Support&lt;/h2&gt; 
&lt;p&gt;Ask questions at the official community Discord server: &lt;a href=&quot;https://chat.quasar.dev&quot;&gt;https://chat.quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Forum&lt;/h2&gt; 
&lt;p&gt;Ask questions at the official community forum: &lt;a href=&quot;https://forum.quasar.dev&quot;&gt;https://forum.quasar.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href=&quot;https://raw.githubusercontent.com/quasarframework/quasar/dev/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Quasar-related project/component/tool, add it with a pull request to &lt;a href=&quot;https://github.com/quasarframework/quasar-awesome&quot;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already &lt;a href=&quot;https://github.com/quasarframework/quasar/graphs/contributors&quot;&gt;contributed to Quasar&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Semver&lt;/h2&gt; 
&lt;p&gt;Quasar is following &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2015-present Razvan Stoenescu&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eligrey/FileSaver.js</title>
      <link>https://github.com/eligrey/FileSaver.js</link>
      <description>&lt;p&gt;An HTML5 saveAs() FileSaver implementation&lt;/p&gt;&lt;hr&gt;&lt;p&gt;If you need to save really large files bigger than the blob’s size limitation or don’t have enough RAM, then have a look at the more advanced &lt;a href=&quot;https://github.com/jimmywarting/StreamSaver.js&quot;&gt;StreamSaver.js&lt;/a&gt; that can save data directly to the hard drive asynchronously with the power of the new streams API. That will have support for progress, cancelation and knowing when it’s done writing&lt;/p&gt; 
&lt;h1&gt;FileSaver.js&lt;/h1&gt; 
&lt;p&gt;FileSaver.js is the solution to saving files on the client-side, and is perfect for web apps that generates files on the client, However if the file is coming from the server we recommend you to first try to use &lt;a href=&quot;https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-http-header&quot;&gt;Content-Disposition&lt;/a&gt; attachment response header as it has more cross-browser compatiblity.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;code&gt;canvas.toBlob()&lt;/code&gt; for saving canvases? Check out &lt;a href=&quot;https://github.com/eligrey/canvas-toBlob.js&quot;&gt;canvas-toBlob.js&lt;/a&gt; for a cross-browser implementation.&lt;/p&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;| Browser | Constructs as | Filenames | Max Blob Size | Dependencies | | ––––––– | ———–– | ———— | ———–– | ———— | | Firefox 20+ | Blob | Yes | 800 MiB | None | | Firefox &amp;lt; 20 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Chrome | Blob | Yes | &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107&quot;&gt;2GB&lt;/a&gt; | None | | Chrome for Android | Blob | Yes | &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107&quot;&gt;RAM/5&lt;/a&gt; | None | | Edge | Blob | Yes | ? | None | | IE 10+ | Blob | Yes | 600 MiB | None | | Opera 15+ | Blob | Yes | 500 MiB | None | | Opera &amp;lt; 15 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Safari 6.1+* | Blob | No | ? | None | | Safari &amp;lt; 6 | data: URI | No | n/a | &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; | | Safari 10.1+ &amp;nbsp; | Blob &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | Yes &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | n/a &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | None |&lt;/p&gt; 
&lt;p&gt;Feature detection is possible:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;try {
    var isFileSaverSupported = !!new Blob;
} catch (e) {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IE &amp;lt; 10&lt;/h3&gt; 
&lt;p&gt;It is possible to save text files in IE &amp;lt; 10 without Flash-based polyfills. See &lt;a href=&quot;https://github.com/koffsyrup/FileSaver.js#examples&quot;&gt;ChenWenBrian and koffsyrup’s &lt;code&gt;saveTextAs()&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Safari 6.1+&lt;/h3&gt; 
&lt;p&gt;Blobs may be opened instead of saved sometimes—you may have to direct your Safari users to manually press &lt;kbd&gt;⌘&lt;/kbd&gt;+&lt;kbd&gt;S&lt;/kbd&gt; to save the file after it is opened. Using the &lt;code&gt;application/octet-stream&lt;/code&gt; MIME type to force downloads &lt;a href=&quot;https://github.com/eligrey/FileSaver.js/issues/12#issuecomment-47247096&quot;&gt;can cause issues in Safari&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;iOS&lt;/h3&gt; 
&lt;p&gt;saveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=167341&quot;&gt;tell Apple how this WebKit bug is affecting you&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Syntax&lt;/h2&gt; 
&lt;h3&gt;Import &lt;code&gt;saveAs()&lt;/code&gt; from file-saver&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { saveAs } from &#39;file-saver&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;FileSaver saveAs(Blob/File/Url, optional DOMString filename, optional Object { autoBom })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pass &lt;code&gt;{ autoBom: true }&lt;/code&gt; if you want FileSaver.js to automatically provide Unicode text encoding hints (see: &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;byte order mark&lt;/a&gt;). Note that this is only done if your blob type has &lt;code&gt;charset=utf-8&lt;/code&gt; set.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Saving text using &lt;code&gt;require()&lt;/code&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var FileSaver = require(&#39;file-saver&#39;);
var blob = new Blob([&quot;Hello, world!&quot;], {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(blob, &quot;hello world.txt&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Saving text&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var blob = new Blob([&quot;Hello, world!&quot;], {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(blob, &quot;hello world.txt&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Saving URLs&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;FileSaver.saveAs(&quot;https://httpbin.org/image&quot;, &quot;image.jpg&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using URLs within the same origin will just use &lt;code&gt;a[download]&lt;/code&gt;. Otherwise, it will first check if it supports cors header with a synchronous head request. If it does, it will download the data and save using blob URLs. If not, it will try to download it using &lt;code&gt;a[download]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The standard W3C File API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; interface is not available in all browsers. &lt;a href=&quot;https://github.com/eligrey/Blob.js&quot;&gt;Blob.js&lt;/a&gt; is a cross-browser &lt;code&gt;Blob&lt;/code&gt; implementation that solves this.&lt;/p&gt; 
&lt;h3&gt;Saving a canvas&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;var canvas = document.getElementById(&quot;my-canvas&quot;);
canvas.toBlob(function(blob) {
    saveAs(blob, &quot;pretty image.png&quot;);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The standard HTML5 &lt;code&gt;canvas.toBlob()&lt;/code&gt; method is not available in all browsers. &lt;a href=&quot;https://github.com/eligrey/canvas-toBlob.js&quot;&gt;canvas-toBlob.js&lt;/a&gt; is a cross-browser &lt;code&gt;canvas.toBlob()&lt;/code&gt; that polyfills this.&lt;/p&gt; 
&lt;h3&gt;Saving File&lt;/h3&gt; 
&lt;p&gt;You can save a File constructor without specifying a filename. If the file itself already contains a name, there is a hand full of ways to get a file instance (from storage, file input, new constructor, clipboard event). If you still want to change the name, then you can change it in the 2nd argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// Note: Ie and Edge don&#39;t support the new File constructor,
// so it&#39;s better to construct blobs and use saveAs(blob, filename)
var file = new File([&quot;Hello, world!&quot;], &quot;hello world.txt&quot;, {type: &quot;text/plain;charset=utf-8&quot;});
FileSaver.saveAs(file);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://in.getclicky.com/212712ns.gif&quot; alt=&quot;Tracking image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Basic Node.JS installation
npm install file-saver --save
bower install file-saver
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, TypeScript definitions can be installed via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Additional typescript definitions
npm install @types/file-saver --save-dev
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>iamkun/dayjs</title>
      <link>https://github.com/iamkun/dayjs</link>
      <description>&lt;p&gt;⏰ Day.js 2KB immutable date-time library alternative to Moment.js with the same modern API&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/docs/zh-cn/README.zh-CN.md&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/docs/ja/README-ja.md&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/docs/pt-br/README-pt-br.md&quot;&gt;Português Brasileiro&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/docs/ko/README-ko.md&quot;&gt;한국어&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/docs/es-es/README-es-es.md&quot;&gt;Español (España)&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/docs/ru/README-ru.md&quot;&gt;Русский&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://day.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img width=&quot;550&quot; src=&quot;https://user-images.githubusercontent.com/17680888/39081119-3057bbe2-456e-11e8-862c-646133ad4b43.png&quot; alt=&quot;Day.js&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;Fast &lt;b&gt;2kB&lt;/b&gt; alternative to Moment.js with the same modern API&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://unpkg.com/dayjs/dayjs.min.js&quot;&gt;&lt;img src=&quot;http://img.badgesize.io/https://unpkg.com/dayjs/dayjs.min.js?compression=gzip&amp;amp;style=flat-square&quot; alt=&quot;Gzip Size&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/dayjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/dayjs.svg?style=flat-square&amp;amp;colorB=51C838&quot; alt=&quot;NPM Version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.com/iamkun/dayjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/travis/iamkun/dayjs/master.svg?style=flat-square&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/iamkun/dayjs&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/iamkun/dayjs/master.svg?style=flat-square&quot; alt=&quot;Codecov&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/iamkun/dayjs/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square&quot; alt=&quot;License&quot;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&quot;https://saucelabs.com/u/dayjs&quot;&gt; &lt;img width=&quot;750&quot; src=&quot;https://user-images.githubusercontent.com/17680888/40040137-8e3323a6-584b-11e8-9dba-bbe577ee8a7b.png&quot; alt=&quot;Sauce Test Status&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API. If you use Moment.js, you already know how to use Day.js.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;dayjs().startOf(&#39;month&#39;).add(1, &#39;day&#39;).set(&#39;year&#39;, 2018).format(&#39;YYYY-MM-DD HH:mm:ss&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;🕒 Familiar Moment.js API &amp;amp; patterns&lt;/li&gt; 
 &lt;li&gt;💪 Immutable&lt;/li&gt; 
 &lt;li&gt;🔥 Chainable&lt;/li&gt; 
 &lt;li&gt;🌐 I18n support&lt;/li&gt; 
 &lt;li&gt;📦 2kb mini library&lt;/li&gt; 
 &lt;li&gt;👫 All browsers supported&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;You can find for more details, API, and other docs on &lt;a href=&quot;https://day.js.org/&quot;&gt;day.js.org&lt;/a&gt; website.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;npm install dayjs --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;📚&lt;a href=&quot;https://day.js.org/docs/en/installation/installation&quot;&gt;Installation Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;It’s easy to use Day.js APIs to parse, validate, manipulate, and display dates and times.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;dayjs(&#39;2018-08-08&#39;) // parse

dayjs().format(&#39;{YYYY} MM-DDTHH:mm:ss SSS [Z] A&#39;) // display

dayjs().set(&#39;month&#39;, 3).month() // get &amp;amp; set

dayjs().add(1, &#39;year&#39;) // manipulate

dayjs().isBefore(dayjs()) // query
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;📚&lt;a href=&quot;https://day.js.org/docs/en/parse/parse&quot;&gt;API Reference&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;I18n&lt;/h3&gt; 
&lt;p&gt;Day.js has great support for internationalization.&lt;/p&gt; 
&lt;p&gt;But none of them will be included in your build unless you use it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import &#39;dayjs/locale/es&#39; // load on demand

dayjs.locale(&#39;es&#39;) // use Spanish locale globally

dayjs(&#39;2018-05-05&#39;).locale(&#39;zh-cn&#39;).format() // use Chinese Simplified locale in a specific instance
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;📚&lt;a href=&quot;https://day.js.org/docs/en/i18n/i18n&quot;&gt;Internationalization&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Plugin&lt;/h3&gt; 
&lt;p&gt;A plugin is an independent module that can be added to Day.js to extend functionality or add new features.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import advancedFormat from &#39;dayjs/plugin/advancedFormat&#39; // load on demand

dayjs.extend(advancedFormat) // use plugin

dayjs().format(&#39;Q Do k kk X x&#39;) // more available formats
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;📚&lt;a href=&quot;https://day.js.org/docs/en/plugin/plugin&quot;&gt;Plugin List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/dayjs#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dayjs/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/sponsor/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/sponsor/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/sponsor/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/sponsor/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt; 
&lt;p&gt;Please give us a 💖 star 💖 to support us. Thank you.&lt;/p&gt; 
&lt;p&gt;And thank you to all our backers! 🙏&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dayjs/backer/0/website?requireActive=false&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/backer/0/avatar.svg?requireActive=false&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs/backer/1/website?requireActive=false&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/backer/1/avatar.svg?requireActive=false&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs/backer/2/website?requireActive=false&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/backer/2/avatar.svg?requireActive=false&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs/backer/3/website?requireActive=false&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/backer/3/avatar.svg?requireActive=false&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/dayjs#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/dayjs/contributors.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Day.js is licensed under a &lt;a href=&quot;https://raw.githubusercontent.com/iamkun/dayjs/dev/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/monaco-editor</title>
      <link>https://github.com/microsoft/monaco-editor</link>
      <description>&lt;p&gt;A browser based code editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monaco Editor&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/ms/monaco-editor/_build/latest?definitionId=3&quot;&gt;&lt;img src=&quot;https://dev.azure.com/ms/monaco-editor/_apis/build/status/microsoft.monaco-editor?label=website&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is the code editor which powers &lt;a href=&quot;https://github.com/Microsoft/vscode&quot;&gt;VS Code&lt;/a&gt;, with the features better described &lt;a href=&quot;https://code.visualstudio.com/docs/editor/editingevolved&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that this repository contains no source code for the code editor, it only contains the scripts to package everything together and ship the &lt;code&gt;monaco-editor&lt;/code&gt; npm module.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;Try it out&lt;/h2&gt; 
&lt;p&gt;Try the editor out &lt;a href=&quot;https://microsoft.github.io/monaco-editor/index.html&quot;&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install monaco-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;inside &lt;code&gt;esm&lt;/code&gt;: ESM version of the editor (compatible with e.g. webpack)&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;dev&lt;/code&gt;: AMD bundled, not minified&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;min&lt;/code&gt;: AMD bundled, and minified&lt;/li&gt; 
 &lt;li&gt;inside &lt;code&gt;min-maps&lt;/code&gt;: source maps for &lt;code&gt;min&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is recommended to develop against the &lt;code&gt;dev&lt;/code&gt; version, and in production to use the &lt;code&gt;min&lt;/code&gt; version.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Learn how to integrate the editor with these &lt;a href=&quot;https://github.com/Microsoft/monaco-editor-samples/&quot;&gt;complete samples&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-amd.md&quot;&gt;Integrate the AMD version&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-amd-cross.md&quot;&gt;Integrate the AMD version cross-domain&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-esm.md&quot;&gt;Integrate the ESM version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Learn how to use the editor API and try out your own customizations in the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/playground.html&quot;&gt;playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/api/index.html&quot;&gt;API docs&lt;/a&gt; or read them straight from &lt;a href=&quot;https://github.com/Microsoft/monaco-editor/raw/master/website/playground/monaco.d.ts.txt&quot;&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read &lt;a href=&quot;https://github.com/Microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators&quot;&gt;this guide&lt;/a&gt; to ensure the editor is accessible to all your users!&lt;/li&gt; 
 &lt;li&gt;Create a Monarch tokenizer for a new programming language &lt;a href=&quot;https://microsoft.github.io/monaco-editor/monarch.html&quot;&gt;in the Monarch playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/monaco-editor&quot;&gt;StackOverflow&lt;/a&gt;! Search open and closed issues, there are a lot of tips in there!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Create &lt;a href=&quot;https://github.com/Microsoft/monaco-editor/issues&quot;&gt;issues&lt;/a&gt; in this repository for anything related to the Monaco Editor. Always mention &lt;strong&gt;the version&lt;/strong&gt; of the editor when creating issues and &lt;strong&gt;the browser&lt;/strong&gt; you’re having trouble in. Please search for existing issues to avoid duplicates.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code and the Monaco Editor?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is generated straight from VS Code’s sources with some shims around services the code needs to make it run in a web browser outside of its home.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code’s version and the Monaco Editor’s version?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;None. The Monaco Editor is a library and it reflects directly the source code.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;I’ve written an extension for VS Code, will it work on the Monaco Editor in a browser?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If the extension is fully based on the &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/&quot;&gt;LSP&lt;/a&gt; and if the language server is authored in JavaScript, then it would be possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;❓ &lt;strong&gt;Why all these web workers and why should I care?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn’t worry too much about them, as long as you get them to work (see above the cross-domain case).&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is this &lt;code&gt;loader.js&lt;/code&gt;? Can I use &lt;code&gt;require.js&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It is an AMD loader that we use in VS Code. Yes.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;I see the warning “Could not create web worker”. What should I do?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;HTML5 does not allow pages loaded on &lt;code&gt;file://&lt;/code&gt; to create web workers. Please load the editor with a web server on &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; schemes. Please also see the cross-domain case above.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;Is the editor supported in mobile browsers or mobile web app frameworks?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;Why doesn’t the editor support TextMate grammars?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please see https://github.com/bolinfest/monaco-tm which puts together &lt;code&gt;monaco-editor&lt;/code&gt;, &lt;code&gt;vscode-oniguruma&lt;/code&gt; and &lt;code&gt;vscode-textmate&lt;/code&gt; to get TM grammar support in the editor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;❓ &lt;strong&gt;What about IE 11 support?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The Monaco Editor no longer supports IE 11. The last version that was tested on IE 11 is &lt;code&gt;0.18.1&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development setup&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/monaco-editor/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://github.com/Microsoft/monaco-editor/raw/master/LICENSE.md&quot;&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>statsd/statsd</title>
      <link>https://github.com/statsd/statsd</link>
      <description>&lt;p&gt;Daemon for easy but powerful stats aggregation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;StatsD &lt;a href=&quot;https://travis-ci.org/statsd/statsd&quot;&gt;&lt;img src=&quot;https://travis-ci.org/statsd/statsd.svg?branch=master&quot; alt=&quot;Build Status&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/statsd/statsd?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/statsd/statsd.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/statsd/statsd&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/statsd/statsd&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/statsd/statsd&quot; alt=&quot;Docker Pulls&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;A network daemon that runs on the &lt;a href=&quot;http://nodejs.org&quot;&gt;Node.js&lt;/a&gt; platform and listens for statistics, like counters and timers, sent over &lt;a href=&quot;http://en.wikipedia.org/wiki/User_Datagram_Protocol&quot;&gt;UDP&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP&lt;/a&gt; and sends aggregates to one or more pluggable backend services (e.g., &lt;a href=&quot;http://graphite.readthedocs.org/&quot;&gt;Graphite&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;buckets&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Each stat is in its own “bucket”. They are not predefined anywhere. Buckets can be named anything that will translate to Graphite (periods make folders, etc)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;values&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Each stat will have a value. How it is interpreted depends on modifiers. In general values should be integers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;flush&lt;/em&gt;&lt;/p&gt; &lt;p&gt;After the flush interval timeout (defined by &lt;code&gt;config.flushInterval&lt;/code&gt;, default 10 seconds), stats are aggregated and sent to an upstream backend service.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation and Configuration&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;StatsD supports docker in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The official docker image on &lt;a href=&quot;https://hub.docker.com/r/statsd/statsd&quot;&gt;docker hub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Building the image from the bundled &lt;a href=&quot;https://raw.githubusercontent.com/statsd/statsd/master/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install Node.js (All &lt;a href=&quot;https://nodejs.org/en/about/releases/&quot;&gt;&lt;code&gt;Current&lt;/code&gt; and &lt;code&gt;LTS&lt;/code&gt; Node.js versions&lt;/a&gt; are supported.)&lt;/li&gt; 
 &lt;li&gt;Clone the project&lt;/li&gt; 
 &lt;li&gt;Create a config file from &lt;code&gt;exampleConfig.js&lt;/code&gt; and put it somewhere&lt;/li&gt; 
 &lt;li&gt;Start the Daemon: &lt;code&gt;node stats.js /path/to/config&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The basic line protocol expects metrics to be sent in the format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;metricname&amp;gt;:&amp;lt;value&amp;gt;|&amp;lt;type&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So the simplest way to send in metrics from your command line if you have StatsD running with the default UDP server on localhost would be:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo &quot;foo:1|c&quot; | nc -u -w0 127.0.0.1 8125
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;More Specific Topics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/metric_types.md&quot;&gt;Metric Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/graphite.md&quot;&gt;Graphite Integration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/server.md&quot;&gt;Supported Servers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/backend.md&quot;&gt;Supported Backends&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/admin_interface.md&quot;&gt;Admin TCP Interface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/server_interface.md&quot;&gt;Server Interface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/statsd/statsd/raw/master/docs/backend_interface.md&quot;&gt;Backend Interface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/etsy/statsd/raw/master/docs/namespacing.md&quot;&gt;Metric Namespacing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/etsy/statsd/raw/master/docs/cluster_proxy.md&quot;&gt;StatsD Cluster Proxy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;There are additional config variables available for debugging:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - log exceptions and print out more diagnostic info&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dumpMessages&lt;/code&gt; - print debug info on incoming messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, check the &lt;code&gt;exampleConfig.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;A test framework has been added using node-unit and some custom code to start and manipulate StatsD. Please add tests under test/ for any new features or bug fixes encountered. Testing a live server can be tricky, attempts were made to eliminate race conditions but it may be possible to encounter a stuck state. If doing dev work, a &lt;code&gt;killall statsd&lt;/code&gt; will kill any stray test servers in the background (don’t do this on a production machine!).&lt;/p&gt; 
&lt;p&gt;Tests can be executed with &lt;code&gt;./run_tests.sh&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;StatsD was originally written at &lt;a href=&quot;http://www.etsy.com&quot;&gt;Etsy&lt;/a&gt; and released with a &lt;a href=&quot;https://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/&quot;&gt;blog post&lt;/a&gt; about how it works and why we created it.&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;StatsD was inspired (heavily) by the project of the same name at Flickr. Here’s a post where Cal Henderson described it in depth: &lt;a href=&quot;http://code.flickr.com/blog/2008/10/27/counting-timing/&quot;&gt;Counting and timing&lt;/a&gt;. Cal re-released the code recently: &lt;a href=&quot;https://github.com/iamcal/Flickr-StatsD&quot;&gt;Perl StatsD&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nolimits4web/swiper</title>
      <link>https://github.com/nolimits4web/swiper</link>
      <description>&lt;p&gt;Most modern mobile touch slider with hardware accelerated transitions&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/share-banner.png&quot;&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://swiperjs.com/get-started&quot;&gt;Get Started&lt;/a&gt; | &lt;a href=&quot;https://swiperjs.com/swiper-api&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://swiperjs.com/demos&quot;&gt;Demos&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://opencollective.com/swiper&quot;&gt; &lt;img src=&quot;https://opencollective.com/swiper/all/badge.svg?label=financial+contributors&quot; alt=&quot;Financial Contributors on Open Collective&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/nolimits4web/swiper/actions?query=workflow%3ABuild&quot;&gt; &lt;img src=&quot;https://github.com/nolimits4web/swiper/workflows/Build/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://www.jsdelivr.com/package/npm/swiper&quot;&gt; &lt;img src=&quot;https://data.jsdelivr.com/v1/package/npm/swiper/badge?style=rounded&quot; alt=&quot;jsDelivr Hits&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://bundlephobia.com/result?p=swiper&quot;&gt; &lt;img alt=&quot;tree-shakeable&quot; src=&quot;https://badgen.net/bundlephobia/tree-shaking/swiper&quot;&gt; &lt;/a&gt; &lt;a href=&quot;https://npmjs.org/package/swiper&quot;&gt; &lt;img alt=&quot;types included&quot; src=&quot;https://badgen.net/npm/types/swiper&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://opencollective.com/swiper/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://opencollective.com/swiper/donate/button@2x.png?color=blue&quot; width=&quot;300&quot;&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;Swiper&lt;/h1&gt; 
&lt;p&gt;Swiper - is the free and most modern mobile touch slider with hardware accelerated transitions and amazing native behavior. It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.&lt;/p&gt; 
&lt;p&gt;Swiper is not compatible with all platforms, it is a modern touch slider which is focused only on modern apps/platforms to bring the best experience and simplicity.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;!-- SPONSORS_TABLE_WRAP --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinoshunter.com/online-casinos/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinos-hunter.png&quot; alt=&quot;Online Casinos Canada 🏆 Best Online Casinos in Canada for 2021 Review | CasinosHunter&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://kajino.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/kajino.png&quot; alt=&quot;オンラインカジノ リストとランキング 2021 - カジノ .com | Kajino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.bitcoinbuster.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/bitcoinbuster-btc-gambling.jpg&quot; alt=&quot;Bitcoin Casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://store.ramotion.com/blog/mobile-app-development-full-guide/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/ramotion.png&quot; alt=&quot;How Apps Are Made: Mobile App Development Guide for 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinority.com/au/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinority-australia.png&quot; alt=&quot;Best online casinos for Australian players&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.auscasinos.com/new/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/aus-casinos.png&quot; alt=&quot;New Online Casinos in Australia (2021) - Which Sites Are Safe?&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.casinoroyale.es/nuevos-casinos/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casino-royal.png&quot; alt=&quot;Nuevos Casinos Online en España 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://onlinecasinohex.nl&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/256-2.png&quot; alt=&quot;Onlinecasinohex.nl is the biggest Dutch gambling site that offers a wide range of casino games and slots as well as detailed casino guides, tips and reviews&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://netticasinohex.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/netticasinohex.png&quot; alt=&quot;The most informative and honest casino reviews for Finnish players&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://aussiecasinohex.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/hex.png&quot; alt=&quot;#1 Aussie Gambling Guide&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.leoboost.com/buy-instagram-likes&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/leoboost.png&quot; alt=&quot;Buy real Instagram Likes - 100% Real &amp;amp; Instant Likes&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://papersowl.com/pay-for-research-paper&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/papersowl.png&quot; alt=&quot;Pay Someone to Write My Research Paper&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.vpsserver.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/vpsserver-logo.svg?sanitize=true&quot; alt=&quot;VPS Hosting | Buy Cheap VPS | Free VPS Server 7 Days Trial 🥇&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://pillarwm.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/pillar.png&quot; alt=&quot;Wealth Management - The Ultimate Guide For Investors&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.slotbar888.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/slotbar.png&quot; alt=&quot;บาคาร่า สมัครเล่นเกมไพ่ยอดนิยม สมัครรับโบนัส 150% พร้อมรับสูตรบาคาร่า AI&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://ufa96bet.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/ufabet.png&quot; alt=&quot;UFABET เว็บตรง แทงบอลออนไลน์ UFABET สมัครวันนี้รับโปรโมชั่นดีสุด&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://slot-xo888.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/slotxo.png&quot; alt=&quot;SLOTXO สมัครเล่นสล็อตออนไลน์รับโบนัสสูงสุด 150% มีเครดิตฟรีแจก&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://bitvape.com.au&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/bitvape.png&quot; alt=&quot;Buy JUUL Australia | JUUL Starter Kit | JUUL Pods in Australia&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://casinosters.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/casinosters.svg?sanitize=true&quot; alt=&quot;The Best Online Casinos in the UK » Gambling Sites by Casinosters&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.diglin.com/fr/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/diglin.png&quot; alt=&quot;Solution eCommerce Magento, OroCRM &amp;amp; Akeneo - Diglin&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://poprey.com/instagram_views&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/poprey.png&quot; alt=&quot;Buy Instagram Views with PayPal or Credit card | Poprey&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://gamblizard.com/deposit-bonuses/deposit-10-pound/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/gamblizard.png&quot; alt=&quot;Deposit £10 Play with 30, 40, 50, 60, 70, or 80 Pounds✔️ GambLizard&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://cryptocurrencycodes.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/cryptocurrencycodes.png&quot; alt=&quot;Top FREE Crypto Sign Up Bonuses &amp;amp; Referral Codes&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://studyclerk.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/studyclerk.png&quot; alt=&quot;Professional Essay Writing Service from Top Providers - Study Clerk&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.123calendars.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/calendar.png&quot; alt=&quot;2021 Printable Calendar&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://goread.io/buy-instagram-likes&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/goread.png&quot; alt=&quot;Instagram likes&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://大吉カジノ.jp&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/daikichi.png&quot; alt=&quot;最高オンラインカジノ日本｜日本人のためにトップ20✚オンラインカジノ&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.estepera.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/estepera.png&quot; alt=&quot;Hair transplant Turkey&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://elroyalecasino.com/games/blackjack&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/elroyalcasino.png&quot; alt=&quot;Play Online Blackjack at elroyalecasino.com&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.codefirst.co.uk&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/codefirst.png&quot; alt=&quot;Software Development Company | CodeFirst UK&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://krootez.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/krootez.svg?sanitize=true&quot; alt=&quot;Krootez - Best Place To Buy Instagram Followers, Likes &amp;amp; Views&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://hollandsegokken.nl&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/hollandsegokken.png&quot; alt=&quot;Gokken in online casino’s begint bij Hollandsegokken.nl!&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://nettcasinobonus.com/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/nettcasinobonus.png&quot; alt=&quot;Få bransjens beste casino bonus &quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.5bingosites.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/5bingosites-com.png&quot; alt=&quot;Exclusive £5 Deposit Bingo Bonuses - £5 Bingo Sites&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://realcasinoscanada.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/realcasinoscanada.png&quot; alt=&quot;Your guide to the world of Canadian online gambling sites in 2021&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://nederlandscasinos.net&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/nederlandscasinos.png&quot; alt=&quot;Online Casinos Nederland - Betrouwbare NL Goksites&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.stashbird.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/stashbird.png&quot; alt=&quot;Online Casino Canada → Best Online Casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://anbefaltcasino.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/256.png&quot; alt=&quot;AnbefaltCasino.com | Guiden til de beste norske casino&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://friendlylikes.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/friendlylikes-logo.png&quot; alt=&quot;Friendlylikes - Order Instagram Followers, Likes, and Views Easily!&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://www.aumentosocial.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/aumentosocial-logo.png&quot; alt=&quot;Crece en Instagram, Facebook, YouTube y TikTok | AumentoSocial&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://paperell.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/paperell.svg?sanitize=true&quot; alt=&quot;Website that Writes Essays for You - Paperell.com&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://socialsup.net&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/socials-up.png&quot; alt=&quot;Buy 100% Cheap SMM Services - Instagram, YouTube, Twitter&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://writersperhour.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/writers-per-hour.png&quot; alt=&quot;Custom Paper Writing and Editing Service | Essay Writing Help&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt; &lt;a href=&quot;https://easy-views.org&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://swiperjs.com/images/sponsors/easy-views.png&quot; alt=&quot;easy-views.org - High Retention Youtube Views&quot; width=&quot;160&quot;&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- SPONSORS_TABLE_WRAP --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tree-shakeable&lt;/strong&gt;: Only modules you use will be imported into your app’s bundle.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mobile-friendly&lt;/strong&gt;: It is intended to be used in mobile websites, mobile web apps, and mobile native/hybrid apps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Library Agnostic&lt;/strong&gt;: Swiper doesn’t require any JavaScript libraries like jQuery, which makes Swiper much smaller and faster. It can be safely used with libraries such as jQuery, Zepto, jQuery Mobile, etc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;1:1 Touch movement&lt;/strong&gt;: By default, Swiper provides 1:1 touch movement interaction, but this ratio can be configured through Swiper settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mutation Observer&lt;/strong&gt;: Swiper has an option to enable Mutation Observer, with this feature Swiper will be automatically reinitialized and recalculate all required parameters if you make dynamic changes to the DOM, or in Swiper styles itself&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich API&lt;/strong&gt;: Swiper comes with a very rich API. It allows creating your own pagination, navigation buttons, parallax effects and many more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RTL&lt;/strong&gt;: Swiper is the only slider that provides 100% RTL support with correct layout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Row Slides Layout&lt;/strong&gt;: Swiper allows a multiple row slides layout, with a few slides per column&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transition Effects&lt;/strong&gt;: Fade, Flip, 3D Cube, 3D Coverflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two-way Control&lt;/strong&gt;: Swiper may be used as controller for any number of other Swipers, and even be controlled at the same time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Navigation Control&lt;/strong&gt;: Swiper comes with all required built-in navigation elements, such as Pagination, Navigation arrows and Scrollbar&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexbox Layout&lt;/strong&gt;: Swiper uses modern flexbox layout for slides layout, which solves a lot of problems and time with size caclulations. Such layout also allows configuring the Slides grid using pure CSS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Most Flexible Slides Layout Grid&lt;/strong&gt;: Swiper has a lot of parameters on initialization to make it as flexible as possible. You can control slides per view, per column, per group, space between slides, and many more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Images Lazy Loading&lt;/strong&gt;: Swiper Lazy Loading delays loading of images in inactive/invisible slides until the user swipes to them. Such feature could make the page load faster and improve Swiper performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtual Slides&lt;/strong&gt;: Swiper comes with Virtual Slides feature that is great when you have a lot of slides or content-heavy/image-heavy slides so it will keep just the required amount of slides in DOM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Loop mode&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Autoplay&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keyboard control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mousewheel control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nested sliders&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;History navigation&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hash navigation&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Breakpoints configuration&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accessibility (A11y)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;And many more …&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Swiper community can be found on &lt;a href=&quot;https://github.com/nolimits4web/swiper/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the &lt;a href=&quot;https://discord.gg/BUpd4UTkgj&quot;&gt;Swiper Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/nolimits4web/swiper/raw/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; applies to all Swiper community channels.&lt;/p&gt; 
&lt;h2&gt;Dist / Build&lt;/h2&gt; 
&lt;p&gt;On production use files (JS and CSS) only from &lt;code&gt;package/&lt;/code&gt; folder, there will be the most stable versions, &lt;code&gt;build/&lt;/code&gt; folder is only for development purpose.&lt;/p&gt; 
&lt;h3&gt;Development Build&lt;/h3&gt; 
&lt;p&gt;Install all dependencies, in repo’s root:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm install

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And build development version of Swiper:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm run build:dev

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result is available in &lt;code&gt;build/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Running demos:&lt;/h3&gt; 
&lt;p&gt;All demos located in &lt;code&gt;./playground&lt;/code&gt; folder. There you will fine Core (HTML, JS), React, Vue, Svelte and Angular versions. To open demo, run:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core&lt;/strong&gt;: &lt;code&gt;npm run core&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: &lt;code&gt;npm run react&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vue&lt;/strong&gt;: &lt;code&gt;npm run vue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Svelte&lt;/strong&gt;: &lt;code&gt;npm run svelte&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Angular&lt;/strong&gt;: &lt;code&gt;npm run angular&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Production Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;
$ npm run build:prod

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Production version will available in &lt;code&gt;package/&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;All changes should be committed to &lt;code&gt;src/&lt;/code&gt; files only. Before you open an issue please review the &lt;a href=&quot;https://github.com/nolimits4web/swiper/raw/master/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; guideline.&lt;/p&gt; 
&lt;h2&gt;Major Roadmapped Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nolimits4web/swiper/issues?q=is%3Aissue+is%3Aopen+label%3A%22feature+request%22+sort%3Areactions-%2B1-desc+&quot;&gt;Top Feature Requests&lt;/a&gt; (Add your own votes using the 👍 reaction)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nolimits4web/swiper/issues?q=is%3Aissue+is%3Aopen+-label%3A%22feature+request%22++sort%3Areactions-%2B1-desc+&quot;&gt;Top Bugs 😱&lt;/a&gt; (Add your own votes using the 👍 reaction)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&quot;https://raw.githubusercontent.com/nolimits4web/swiper/master/CONTRIBUTING.md&quot;&gt;Contribute&lt;/a&gt;]. &lt;a href=&quot;https://raw.githubusercontent.com/nolimits4web/swiper/master/CODE_CONTRIBUTORS.md&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/contributors.svg?width=890&amp;amp;button=false&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&quot;https://opencollective.com/swiper/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;postinstall&lt;/code&gt; message&lt;/h4&gt; 
&lt;p&gt;Swiper is searching for backers, so the package shows a message about it after installation. If it causes problems for you, you can disable it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ADBLOCK=true npm install
// or
DISABLE_OPENCOLLECTIVE=true npm install
// or
npm install --loglevel silent
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/swiper/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/swiper/organization/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/0/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/1/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/2/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/3/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/4/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/5/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/6/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/7/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/8/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/swiper/organization/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/organization/9/avatar.svg?sanitize=true&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/swiper&quot;&gt;&lt;img src=&quot;https://opencollective.com/swiper/individuals.svg?width=890&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>suren-atoyan/monaco-react</title>
      <link>https://github.com/suren-atoyan/monaco-react</link>
      <description>&lt;p&gt;Monaco Editor for React - use the monaco-editor in any React application without needing to use webpack (or rollup/parcel/etc) configuration files / plugins&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;@monaco-editor/react · &lt;a href=&quot;https://www.npmjs.com/package/@monaco-editor/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dm/@monaco-editor/react&quot; alt=&quot;monthly downloads&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;gitHub license&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@monaco-editor/react&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@monaco-editor/react.svg?style=flat&quot; alt=&quot;npm version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome&quot;&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Monaco Editor for React · use the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/&quot;&gt;monaco-editor&lt;/a&gt; in &lt;strong&gt;any&lt;/strong&gt; &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; application without needing to use &lt;code&gt;webpack&lt;/code&gt; (or &lt;code&gt;rollup&lt;/code&gt;/&lt;code&gt;parcel&lt;/code&gt;/etc) configuration files / plugins&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;:zap: &lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#multi-model-editor&quot;&gt;multi-model editor&lt;/a&gt; is already supported; enjoy it :tada: &lt;br&gt; :tada: version &lt;code&gt;v4&lt;/code&gt; is here - to see what’s new in the new version and how to migrate from &lt;code&gt;v3&lt;/code&gt;, please read this &lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/v4.changes.md&quot;&gt;doc&lt;/a&gt; (also, if you need the old version &lt;code&gt;README&lt;/code&gt;, it’s &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/raw/v3.8.3/README.md&quot;&gt;here&lt;/a&gt;) &lt;br&gt; :tada: the new section &lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#development-playground&quot;&gt;Development / Playground&lt;/a&gt; has been created - now you can run the playground and play with the internals of the library &lt;br&gt; :tada: it’s already integrated with &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader&quot;&gt;@monaco-editor/loader&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Synopsis&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Monaco&lt;/code&gt; editor wrapper for easy/one-line integration with any &lt;code&gt;React&lt;/code&gt; application without needing to use &lt;code&gt;webpack&lt;/code&gt; (or any other module bundler) configuration files / plugins. It can be used with apps generated by &lt;code&gt;create-react-app&lt;/code&gt;, &lt;code&gt;create-snowpack-app&lt;/code&gt;, &lt;code&gt;vite&lt;/code&gt;, &lt;code&gt;Next.js&lt;/code&gt; or any other app generators - &lt;strong&gt;you don’t need to eject or rewire them&lt;/strong&gt;. &lt;a href=&quot;https://codesandbox.io/s/cdn-example-fnhfr?file=/index.html&quot;&gt;You can use it even from CDN without bundlers&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://microsoft.github.io/monaco-editor/&quot;&gt;monaco-editor&lt;/a&gt; is a well-known web technology based code editor that powers &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt;. This library handles the setup process of the &lt;code&gt;monaco-editor&lt;/code&gt; and provides a clean &lt;code&gt;API&lt;/code&gt; to interact with &lt;code&gt;monaco&lt;/code&gt; from any &lt;code&gt;React&lt;/code&gt; environment&lt;/p&gt; 
&lt;h4&gt;Demo&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://monaco-react.surenatoyan.com/&quot;&gt;Check it out!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#simple-usage&quot;&gt;Simple usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#get-value&quot;&gt;Get value&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#editor-instance&quot;&gt;&lt;code&gt;editor instance&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#monaco-instance&quot;&gt;&lt;code&gt;monaco instance&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#usemonaco&quot;&gt;&lt;code&gt;useMonaco&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#loader-config&quot;&gt;&lt;code&gt;loader/config&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#multi-model-editor&quot;&gt;Multi-model editor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#onvalidate&quot;&gt;&lt;code&gt;onValidate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#notes&quot;&gt;Notes&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#for-electron-users&quot;&gt;For &lt;code&gt;electron&lt;/code&gt; users&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#for-nextjs-users&quot;&gt;For &lt;code&gt;Next.js&lt;/code&gt; users&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#create-your-own-editor&quot;&gt;Create your own editor!&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#development-playground&quot;&gt;Development / Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#props&quot;&gt;Props&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#editor&quot;&gt;&lt;code&gt;Editor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/#diffeditor&quot;&gt;&lt;code&gt;Diff Editor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install @monaco-editor/react 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add @monaco-editor/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or you can use &lt;code&gt;CDN&lt;/code&gt;. &lt;a href=&quot;https://codesandbox.io/s/cdn-example-fnhfr?file=/index.html&quot;&gt;Here is an example&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: For &lt;code&gt;TypeScript&lt;/code&gt; type definitions, this package uses the &lt;a href=&quot;https://www.npmjs.com/package/monaco-editor&quot;&gt;monaco-editor&lt;/a&gt; package as a peer dependency. So, if you need types and don’t already have the &lt;a href=&quot;https://www.npmjs.com/package/monaco-editor&quot;&gt;monaco-editor&lt;/a&gt; package installed, you will need to do so&lt;/p&gt; 
&lt;h3&gt;Introduction&lt;/h3&gt; 
&lt;p&gt;Besides types, the library exports &lt;code&gt;Editor&lt;/code&gt;and &lt;code&gt;DiffEditor&lt;/code&gt; components, as well as the &lt;code&gt;loader&lt;/code&gt; utility and the &lt;code&gt;useMonaco&lt;/code&gt; hook:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import Editor, { DiffEditor, useMonaco, loader } from &quot;@monaco-editor/react&quot;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;h4&gt;Simple usage&lt;/h4&gt; 
&lt;p&gt;Here is an example of a simple integration of &lt;code&gt;monaco&lt;/code&gt; editor with a &lt;code&gt;React&lt;/code&gt; project. &lt;br&gt; You just need to import and render the &lt;code&gt;Editor&lt;/code&gt; component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  return (
   &amp;lt;Editor
     height=&quot;90vh&quot;
     defaultLanguage=&quot;javascript&quot;
     defaultValue=&quot;// some comment&quot;
   /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/simple-usage-uyf5n?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;Extended example&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  function handleEditorChange(value, event) {
    // here is the current value
  }

  function handleEditorDidMount(editor, monaco) {
    console.log(&quot;onMount: the editor instance:&quot;, editor);
    console.log(&quot;onMount: the monaco instance:&quot;, monaco)
  }

  function handleEditorWillMount(monaco) {
    console.log(&quot;beforeMount: the monaco instance:&quot;, monaco);
  }

  function handleEditorValidation(markers) {
    // model markers
    // markers.forEach(marker =&amp;gt; console.log(&#39;onValidate:&#39;, marker.message));
  }

  return (
    &amp;lt;Editor
      height=&quot;90vh&quot;
      defaultLanguage=&quot;javascript&quot;
      defaultValue=&quot;// some comment&quot;
      onChange={handleEditorChange}
      onMount={handleEditorDidMount}
      beforeMount={handleEditorWillMount}
      onValidate={handleEditorValidation}
    /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/simple-usage-extended-3ivw2?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;Get value&lt;/h4&gt; 
&lt;p&gt;There are two options to get the current value:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;get the current model value from the &lt;code&gt;editor&lt;/code&gt; instance&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useRef } from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  const editorRef = useRef(null);

  function handleEditorDidMount(editor, monaco) {
    editorRef.current = editor; 
  }
  
  function showValue() {
    alert(editorRef.current.getValue());
  }

  return (
   &amp;lt;&amp;gt;
     &amp;lt;button onClick={showValue}&amp;gt;Show value&amp;lt;/button&amp;gt;
     &amp;lt;Editor
       height=&quot;90vh&quot;
       defaultLanguage=&quot;javascript&quot;
       defaultValue=&quot;// some comment&quot;
       onMount={handleEditorDidMount}
     /&amp;gt;
   &amp;lt;/&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/get-value-r9be5?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;get the current model value via &lt;code&gt;onChange&lt;/code&gt; prop&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  function handleEditorChange(value, event) {
    console.log(&quot;here is the current model value:&quot;, value);
  }

  return (
   &amp;lt;Editor
     height=&quot;90vh&quot;
     defaultLanguage=&quot;javascript&quot;
     defaultValue=&quot;// some comment&quot;
     onChange={handleEditorChange}
   /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/onchange-4nf6g?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;(get the `DiffEditor` values via `editor` instance)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useRef } from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import { DiffEditor } from &quot;@monaco-editor/react&quot;;

function App() {
  const diffEditorRef = useRef(null);

  function handleEditorDidMount(editor, monaco) {
    diffEditorRef.current = editor;
  }

  function showOriginalValue() {
    alert(diffEditorRef.current.getOriginalEditor().getValue());
  }

  function showModifiedValue() {
    alert(diffEditorRef.current.getModifiedEditor().getValue());
  }

  return (
    &amp;lt;&amp;gt;
      &amp;lt;button onClick={showOriginalValue}&amp;gt;show original value&amp;lt;/button&amp;gt;
      &amp;lt;button onClick={showModifiedValue}&amp;gt;show modified value&amp;lt;/button&amp;gt;
      &amp;lt;DiffEditor
        height=&quot;90vh&quot;
        defaultLanguage=&quot;javascript&quot;
        original=&quot;// the original code&quot;
        modified=&quot;// the modified code&quot;
        onMount={handleEditorDidMount}
      /&amp;gt;
    &amp;lt;/&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/get-values-diffeditor-c6xrg?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h4&gt;&lt;code&gt;editor instance&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;editor&lt;/code&gt; instance is exposed from the &lt;code&gt;onMount&lt;/code&gt; prop as a first parameter, the second is the &lt;code&gt;monaco&lt;/code&gt; instance&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useRef } from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  const editorRef = useRef(null);

  function handleEditorDidMount(editor, monaco) {
    // here is the editor instance
    // you can store it in `useRef` for further usage
    editorRef.current = editor; 
  }

  return (
    &amp;lt;Editor
      height=&quot;90vh&quot;
      defaultLanguage=&quot;javascript&quot;
      defaultValue=&quot;// some comment&quot;
      onMount={handleEditorDidMount}
    /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/editor-instance-354cr?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;monaco instance&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;There are three options to get the &lt;code&gt;monaco&lt;/code&gt; instance:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;via &lt;code&gt;onMount/beforeMount&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useRef } from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  const monacoRef = useRef(null);

  function handleEditorWillMount(monaco) {
    // here is the monaco instance
    // do something before editor is mounted
    monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);
  }

  function handleEditorDidMount(editor, monaco) {
    // here is another way to get monaco instance
    // you can also store it in `useRef` for further usage
    monacoRef.current = editor; 
  }

  return (
    &amp;lt;Editor
      height=&quot;90vh&quot;
      defaultLanguage=&quot;javascript&quot;
      defaultValue=&quot;// some comment&quot;
      beforeMount={handleEditorWillMount}
      onMount={handleEditorDidMount}
    /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/simple-usage-forked-il8kt?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;via &lt;code&gt;loader&lt;/code&gt; utility&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { loader } from &quot;@monaco-editor/react&quot;;

loader.init().then(monaco =&amp;gt; console.log(&quot;here is the monaco isntance:&quot;, monaco));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/monaco-instance-loader-ndzu9?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;via &lt;code&gt;useMonaco&lt;/code&gt; hook&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor, { useMonaco } from &quot;@monaco-editor/react&quot;;

function App() {
  const monaco = useMonaco();
  
  useEffect(() =&amp;gt; {
    if (monaco) {
      console.log(&quot;here is the monaco isntance:&quot;, monaco);
    }
  }, [monaco]);

  return (
    &amp;lt;Editor
      height=&quot;90vh&quot;
      defaultValue=&quot;// some comment&quot;
      defaultLanguage=&quot;javascript&quot;
    /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/monaco-instance-usemonaco-88eml?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;useMonaco&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;useMonaco&lt;/code&gt; is a &lt;code&gt;React&lt;/code&gt; hook that returns the instance of the &lt;code&gt;monaco&lt;/code&gt;. But there is an important note that should be considered: the initialization process is being handled by the &lt;code&gt;loader&lt;/code&gt; utility (the reference of &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader&quot;&gt;@monaco-editor/loader&lt;/a&gt;): that process is being done asynchronously and only once. So, if the first initiator of the initialization is &lt;code&gt;useMonaco&lt;/code&gt; hook, the first returned value will be null, due to its asynchronous installation. Just check the returned value of &lt;code&gt;useMonaco&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React, { useEffect } from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor, { useMonaco } from &quot;@monaco-editor/react&quot;;

function App() {
  const monaco = useMonaco();
  
  useEffect(() =&amp;gt; {
    // do conditional chaining
    monaco?.languages.typescript.javascriptDefaults.setEagerModelSync(true);
    // or make sure that it exists by other ways
    if (monaco) {
      console.log(&quot;here is the monaco instance:&quot;, monaco);
    }
  }, [monaco]);

  return (
    &amp;lt;Editor
      height=&quot;90vh&quot;
      defaultValue=&quot;// some comment&quot;
      defaultLanguage=&quot;javascript&quot;
    /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/usemonaco-9rpc4&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;loader-config&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The library exports (named) the utility called &lt;code&gt;loader&lt;/code&gt;. Basically, it’s the reference of &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader&quot;&gt;@monaco-editor/loader&lt;/a&gt;. By default, &lt;code&gt;monaco&lt;/code&gt; files are being downloaded from &lt;code&gt;CDN&lt;/code&gt;. There is an ability to change this behavior, and other things concerning the &lt;code&gt;AMD&lt;/code&gt; loader of &lt;code&gt;monaco&lt;/code&gt;. We have a default &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader/raw/master/src/config/index.js&quot;&gt;config file&lt;/a&gt; that you can modify by the way shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { loader } from &quot;@monaco-editor/react&quot;;

// you can change the source of the monaco files
loader.config({ paths: { vs: &quot;...&quot; } });

// you can configure the locales
loader.config({ &quot;vs/nls&quot;: { availableLanguages: { &quot;*&quot;: &quot;de&quot; } } });

// or
loader.config({
  paths: {
    vs: &quot;...&quot;,
  },
  &quot;vs/nls&quot; : {
    availableLanguages: {
      &quot;*&quot;: &quot;de&quot;,
    },
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/loader-ry1bb?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: your passed object will be deeply merged with the &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader/raw/master/src/config/index.js&quot;&gt;default one&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Multi-model editor&lt;/h4&gt; 
&lt;p&gt;When you render the &lt;code&gt;Editor&lt;/code&gt; component, a default model is being created. It’s important to mention that when you change the &lt;code&gt;language&lt;/code&gt; or &lt;code&gt;value&lt;/code&gt; props, they affect the same model that has been auto-created at the mount of the component. In most cases it’s okay, but the developers face problems when they want to implement a multi-model editor to support tabs/files like in &lt;code&gt;IDE&lt;/code&gt;s. And previously to handle multiple models they had to do it manually and out of the component. Now, the multi-model &lt;code&gt;API&lt;/code&gt; is supported :tada: Let’s check how it works. There are three parameters to create a model - &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;language&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;monaco.editor.createModel(value, language, monaco.Uri.parse(path))&lt;/code&gt;). You can consider last one (&lt;code&gt;path&lt;/code&gt;) as an identifier for the model. The &lt;code&gt;Editor&lt;/code&gt; component, now, has a &lt;code&gt;path&lt;/code&gt; prop. When you specify a &lt;code&gt;path&lt;/code&gt; prop, the &lt;code&gt;Editor&lt;/code&gt; component checks if it has a model by that path or not. If yes, the existing model will be shown, otherwise, a new one will be created (and stored). Using this technique you can correspond your files with paths, and create a fully multi-model editor. You can open your file, do some changes, choose another file, and when you come back to the first one the previous model will be shown with the whole view state, text selection, undo stack, scroll position, etc. (&lt;a href=&quot;https://codesandbox.io/s/multi-model-editor-kugi6?file=/src/App.js&quot;&gt;simple demo&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Here is a simple example: let’s imagine we have a &lt;code&gt;JSON&lt;/code&gt; like representation of some file structure, something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;const files = {
  &quot;script.js&quot;: {
    name: &quot;script.js&quot;,
    language: &quot;javascript&quot;,
    value: someJSCodeExample,
  },
  &quot;style.css&quot;: {
    name: &quot;style.css&quot;,
    language: &quot;css&quot;,
    value: someCSSCodeExample,
  },
  &quot;index.html&quot;: {
    name: &quot;index.html&quot;,
    language: &quot;html&quot;,
    value: someHTMLCodeExample,
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And here is our simple multi-model editor implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  const [fileName, setFileName] = useState(&quot;script.js&quot;);

  const file = files[fileName];

  return (
    &amp;lt;&amp;gt;
      &amp;lt;button disabled={fileName === &quot;script.js&quot;} onClick={() =&amp;gt; setFileName(&quot;script.js&quot;)}&amp;gt;script.js&amp;lt;/button&amp;gt;
      &amp;lt;button disabled={fileName === &quot;style.css&quot;} onClick={() =&amp;gt; setFileName(&quot;style.css&quot;)}&amp;gt;style.css&amp;lt;/button&amp;gt;
      &amp;lt;button disabled={fileName === &quot;index.html&quot;} onClick={() =&amp;gt; setFileName(&quot;index.html&quot;)}&amp;gt;index.html&amp;lt;/button&amp;gt;
      &amp;lt;Editor
        height=&quot;80vh&quot;
        theme=&quot;vs-dark&quot;
        path={file.name}
        defaultLanguage={file.language}
        defaultValue={file.value}
      /&amp;gt;
    &amp;lt;/&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;defaultValue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;defaultLanguage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;defaultPath&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;value&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;language&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;path&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;saveViewState&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;will give you more flexibility in working with a multi-model editor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;defaultLanguage&lt;/code&gt;, and &lt;code&gt;defaultPath&lt;/code&gt; are being considered &lt;strong&gt;only&lt;/strong&gt; during a new model creation &lt;br&gt; &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;language&lt;/code&gt;, and &lt;code&gt;path&lt;/code&gt; are being tracked the &lt;strong&gt;whole time&lt;/strong&gt; &lt;br&gt; &lt;code&gt;saveViewState&lt;/code&gt; is an indicator whether to save the models’ view states between model changes or not&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/multi-model-editor-kugi6?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;onValidate&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;onValidate&lt;/code&gt; is an additional property. An event is emitted when the content of the current model is changed and the current model markers are ready. It will be fired with the current model markers&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom&quot;;

import Editor from &quot;@monaco-editor/react&quot;;

function App() {
  function handleEditorValidation(markers) {
    // model markers
    markers.forEach(marker =&amp;gt; console.log(&quot;onValidate:&quot;, marker.message));
  }

  return (
    &amp;lt;Editor
      height=&quot;90vh&quot;
      defaultLanguage=&quot;javascript&quot;
      defaultValue=&quot;// let&#39;s write some broken code 😈&quot;
      onValidate={handleEditorValidation}
    /&amp;gt;
  );
}

const rootElement = document.getElementById(&quot;root&quot;);
ReactDOM.render(&amp;lt;App /&amp;gt;, rootElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/onvalidate-4t5c2?file=/src/App.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It’s important to mention that according to &lt;a href=&quot;https://microsoft.github.io/monaco-editor/&quot;&gt;monaco-editor&lt;/a&gt;, the whole supported languages are divided into two groups:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;languages that have rich &lt;code&gt;IntelliSense&lt;/code&gt; and validation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;TypeScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CSS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LESS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SCSS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;languages with only basic syntax colorization&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;XML&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;C#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;C++&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Razor&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Markdown&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Diff&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;VB&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CoffeeScript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Handlebars&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Batch&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pug&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;F#&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Lua&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Powershell&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Python&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SASS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;R&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Objective-C&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;As you can guess, &lt;code&gt;onValidate&lt;/code&gt; prop will work only with the languages from the first group&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Notes&lt;/h4&gt; 
&lt;h5&gt;For &lt;code&gt;electron&lt;/code&gt; users&lt;/h5&gt; 
&lt;p&gt;As a usual &lt;code&gt;React&lt;/code&gt; component, this one also works fine with an electron-react environment, without need to have a &lt;code&gt;webpack&lt;/code&gt; configuration or other extra things. But there are several cases that developers usually face to and sometimes it can be confusing. Here they are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;You see loading screen stuck&lt;/strong&gt; Usually, it’s because your environment doesn’t allow you to load external sources. By default, it loads &lt;code&gt;monaco&lt;/code&gt; sources from &lt;code&gt;CDN&lt;/code&gt;. You can see the &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader/raw/master/src/config/index.js&quot;&gt;default configuration&lt;/a&gt;. But sure you can change that behavior; the library is fully configurable. Read about it &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react#config&quot;&gt;here&lt;/a&gt;. So, if you want to download it from your local files, you can do it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import { loader } from &quot;@monaco-editor/react&quot;;

loader.config({ paths: { vs: &quot;../path-to-monaco&quot; } });
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Based on your electron environment it can be required to have an absolute URL&lt;/strong&gt; The utility function taken from &lt;a href=&quot;https://github.com/microsoft/monaco-editor-samples/raw/master/electron-amd-nodeIntegration/electron-index.html&quot;&gt;here&lt;/a&gt; can help you to achieve that. Let’s imagine you have &lt;code&gt;monaco-editor&lt;/code&gt; package installed and you want to load monaco from the &lt;code&gt;node_modules&lt;/code&gt; rather than from CDN: in that case, you can write something like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;function ensureFirstBackSlash(str) {
    return str.length &amp;gt; 0 &amp;amp;&amp;amp; str.charAt(0) !== &quot;/&quot;
        ? &quot;/&quot; + str
        : str;
}

function uriFromPath(_path) {
    const pathName = path.resolve(_path).replace(/\\/g, &quot;/&quot;);
    return encodeURI(&quot;file://&quot; + ensureFirstBackSlash(pathName));
}

loader.config({
  paths: {
    vs: uriFromPath(
      path.join(__dirname, &quot;../node_modules/monaco-editor/min/vs&quot;)
    )
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There were several issues about this topic that can be helpful too - &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/issues/48&quot;&gt;1&lt;/a&gt; &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/issues/12&quot;&gt;2&lt;/a&gt; &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/issues/58&quot;&gt;3&lt;/a&gt; &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/issues/87&quot;&gt;4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And if you use &lt;code&gt;electron&lt;/code&gt; with &lt;code&gt;monaco&lt;/code&gt; and &lt;code&gt;react&lt;/code&gt; and have faced an issue different than the above-discribed ones, please let us know to make this section more helpful&lt;/p&gt; 
&lt;h5&gt;For &lt;code&gt;Next.js&lt;/code&gt; users&lt;/h5&gt; 
&lt;p&gt;Like other React components, this one also works with &lt;code&gt;Next.js&lt;/code&gt; without a hitch. The part of the source that should be pre-parsed is optimized for server-side rendering, so, in usual cases, it will work fine, but if you want to have access, for example, to &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react#monaco-instance&quot;&gt;&lt;code&gt;monaco instance&lt;/code&gt;&lt;/a&gt; you should be aware that it wants to access the &lt;code&gt;document&lt;/code&gt; object, and it requires browser environment. Basically you just need to avoid running that part out of browser environment, there are several ways to do that. The one is described &lt;a href=&quot;https://nextjs.org/docs/advanced-features/dynamic-import#with-no-ssr&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And if you use &lt;code&gt;monaco&lt;/code&gt; with &lt;code&gt;Next.js&lt;/code&gt; and have faced an issue different than the above-described one, please let us know to make this section more helpful&lt;/p&gt; 
&lt;h4&gt;Create your own editor&lt;/h4&gt; 
&lt;p&gt;Under the hood this library uses &lt;a href=&quot;https://github.com/suren-atoyan/monaco-loader&quot;&gt;@monaco-editor/loader&lt;/a&gt; that provides a utility called &lt;code&gt;loader&lt;/code&gt;. The &lt;code&gt;loader&lt;/code&gt; utility is a collection of functions that are being used to setup &lt;code&gt;monaco&lt;/code&gt; editor into your browser. &lt;code&gt;loader.init()&lt;/code&gt; handles the whole initialization process and returns the instance of the &lt;code&gt;monaco&lt;/code&gt; - &lt;code&gt;loader.init().then(monaco =&amp;gt; console.log(&quot;here is the monaco isntance:&quot;, monaco))&lt;/code&gt;. The &lt;code&gt;Editor&lt;/code&gt; component uses this utility, gains access to &lt;code&gt;monaco instance&lt;/code&gt; and creates the editor. &lt;a href=&quot;https://github.com/suren-atoyan/monaco-react/raw/master/src/Editor/Editor.js&quot;&gt;Here&lt;/a&gt; is the implementation of the &lt;code&gt;Editor&lt;/code&gt; component. You can use the same technique to create your own &lt;code&gt;Editor&lt;/code&gt;. You can just import the &lt;code&gt;loader&lt;/code&gt; utility, access to &lt;code&gt;monaco instance&lt;/code&gt;, and create your own editor with your own custom logic. The shortest way to do it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;import loader from &quot;@monaco-editor/loader&quot;;

loader.init().then(monaco =&amp;gt; {
  const wrapper = document.getElementById(&quot;root&quot;);
  wrapper.style.height = &quot;100vh&quot;;
  const properties = {
    value: &quot;function hello() {\n\talert(\&quot;Hello world!\&quot;);\n}&quot;,
    language:  &quot;javascript&quot;,
  }
  
  monaco.editor.create(wrapper,  properties);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That’s all. You can wrap it into a &lt;code&gt;React&lt;/code&gt; component, or &lt;code&gt;Vue&lt;/code&gt;, or &lt;code&gt;Angular&lt;/code&gt; or leave it as vanilla one or whatever you want; it’s written in pure &lt;code&gt;js&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codesandbox.io/s/create-your-own-editor-pd01u?file=/src/index.js&quot;&gt;codesandbox&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Development-Playground&lt;/h3&gt; 
&lt;p&gt;It’s always important to have a place, where you can play with the internals of the library. The &lt;code&gt;playground&lt;/code&gt; is a minimal &lt;code&gt;React&lt;/code&gt; app that directly uses the sources of the library. So, if you are going to open a &lt;code&gt;PR&lt;/code&gt;, or want to check something, or just want to try the freshest state of the library, you can run the playground and enjoy it&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;clone the repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/suren-atoyan/monaco-react.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;go to the library folder&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt; cd monaco-react
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;install the library’s dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt; npm install # yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;go to the playground&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt; cd playground
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;install the playground’s dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install # yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;and run the playground&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run dev # yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;monaco-react
├── playground
│   ├── src/      # playground sources
├── src/          # library sources
└── ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to change something in the library, go to &lt;code&gt;monaco-react/src/...&lt;/code&gt;, the library will be automatically re-built and the playground will use the latest build&lt;/p&gt; 
&lt;h3&gt;Props&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;Editor&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;| Name | Type | Default | Description | |:–––––|:———––|:——|:——| | defaultValue | string || Default value of the current model | | defaultLanguage | string || Default language of the current model | | defaultPath | string || Default path of the current model. Will be passed as the third argument to &lt;code&gt;.createModel&lt;/code&gt; method - &lt;code&gt;monaco.editor.createModel(..., ..., monaco.Uri.parse(defaultPath))&lt;/code&gt; | | value | string || Value of the current model | | language | enum: … | | Language of the current model (all languages that are &lt;a href=&quot;https://github.com/microsoft/monaco-languages&quot;&gt;supported&lt;/a&gt; by monaco-editor) | | path | string || Path of the current model. Will be passed as the third argument to &lt;code&gt;.createModel&lt;/code&gt; method - &lt;code&gt;monaco.editor.createModel(..., ..., monaco.Uri.parse(defaultPath))&lt;/code&gt; | | theme | enum: “light” | “vs-dark” | “light” | The theme for the monaco. Available options “vs-dark” | “light”. Define new themes by &lt;code&gt;monaco.editor.defineTheme&lt;/code&gt; | | line | number | | The line to jump on it | | loading | React Node | “Loading…” | The loading screen before the editor will be mounted | options | object | {} | &lt;a href=&quot;https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.istandaloneeditorconstructionoptions.html&quot;&gt;IStandaloneEditorConstructionOptions&lt;/a&gt; | | overrideServices | object | {} | &lt;a href=&quot;https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditoroverrideservices.html&quot;&gt;IEditorOverrideServices &lt;/a&gt; | | saveViewState | boolean | true | Indicator whether to save the models’ view states between model changes or not | | keepCurrentModel | boolean | false | Indicator whether to dispose the current model when the Editor is unmounted or not | | width | union: number | string | “100%” | Width of the editor wrapper | | height | union: number | string | “100%” | Height of the editor wrapper | | className | string || Class name for the editor container | | wrapperClassName | string || Class name for the editor container wrapper | | beforeMount | func | noop | &lt;strong&gt;Signature: function(monaco: Monaco) =&amp;gt; void&lt;/strong&gt; &lt;br&gt; An event is emitted before the editor is mounted. It gets the &lt;code&gt;monaco&lt;/code&gt; instance as a first argument| | onMount | func | noop | &lt;strong&gt;Signature: function(editor: monaco.editor.IStandaloneCodeEditor, monaco: Monaco) =&amp;gt; void&lt;/strong&gt; &lt;br&gt; An event is emitted when the editor is mounted. It gets the &lt;code&gt;editor&lt;/code&gt; instance as a first argument and the &lt;code&gt;monaco&lt;/code&gt; instance as a second| | onChange | func || &lt;strong&gt;Signature: function(value: string | undefined, ev: monaco.editor.IModelContentChangedEvent) =&amp;gt; void&lt;/strong&gt; &lt;br&gt; An event is emitted when the content of the current model is changed| | onValidate | func | noop | &lt;strong&gt;Signature: function(markers: monaco.editor.IMarker[]) =&amp;gt; void&lt;/strong&gt; &lt;br&gt; An event is emitted when the content of the current model is changed and the current model markers are ready|&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;DiffEditor&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;| Name | Type | Default | Description | |:–––––|:———––|:——|:——| | original | string || The original source (left one) value | | modified | string || The modified source (right one) value | | language | enum: … | | Language for the both models - original and modified (all languages that are &lt;a href=&quot;https://github.com/microsoft/monaco-languages&quot;&gt;supported&lt;/a&gt; by monaco-editor) | | originalLanguage | enum: … | | This prop gives you the opportunity to specify the language of the original source separately, otherwise, it will get the value of the language property | | modifiedLanguage | enum: … | | This prop gives you the opportunity to specify the language of the modified source separately, otherwise, it will get the value of language property | | originalModelPath | string || Path for the “original” model. Will be passed as a third argument to &lt;code&gt;.createModel&lt;/code&gt; method - &lt;code&gt;monaco.editor.createModel(..., ..., monaco.Uri.parse(originalModelPath))&lt;/code&gt; | | modifiedModelPath | string || Path for the “modified” model. Will be passed as a third argument to &lt;code&gt;.createModel&lt;/code&gt; method - &lt;code&gt;monaco.editor.createModel(..., ..., monaco.Uri.parse(modifiedModelPath))&lt;/code&gt; | | keepCurrentOriginalModel | boolean | false | Indicator whether to dispose the current original model when the DiffEditor is unmounted or not | | keepCurrentModifiedModel | boolean | false | Indicator whether to dispose the current modified model when the DiffEditor is unmounted or not | | theme | enum: “light” | “vs-dark” | “light” | The theme for the monaco. Available options “vs-dark” | “light”. Define new themes by &lt;code&gt;monaco.editor.defineTheme&lt;/code&gt; | | line | number | | The line to jump on it | | loading | React Node | “Loading…” | The loading screen before the editor will be mounted | options | object | {} | &lt;a href=&quot;https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html&quot;&gt;IDiffEditorConstructionOptions&lt;/a&gt; | | width | union: number | string | “100%” | Width of the editor wrapper | | height | union: number | string | “100%” | Height of the editor wrapper | | className | string || Class name for the editor container | | wrapperClassName | string || Class name for the editor container wrapper | | beforeMount | func | noop | &lt;strong&gt;Signature: function(monaco: Monaco) =&amp;gt; void&lt;/strong&gt; &lt;br&gt; An event is emitted before the editor mounted. It gets the &lt;code&gt;monaco&lt;/code&gt; instance as a first argument| | onMount | func | noop | &lt;strong&gt;Signature: function(editor: monaco.editor.IStandaloneCodeEditor, monaco: Monaco) =&amp;gt; void&lt;/strong&gt; &lt;br&gt; An event is emitted when the editor is mounted. It gets the &lt;code&gt;editor&lt;/code&gt; instance as a first argument and the &lt;code&gt;monaco&lt;/code&gt; instance as a second|&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/suren-atoyan/monaco-react/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
